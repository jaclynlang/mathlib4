[33mcommit 7cf04c3deb69577e235014076d9775b52bbfdc2b[m[33m ([m[1;36mHEAD -> [m[1;32mfinset_nontrivial_two_theorems_add[m[33m, [m[1;31morigin/master[m[33m, [m[1;31morigin/HEAD[m[33m)[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Jun 26 16:30:30 2024 +0000

    chore(Logic/Basic): drop 3 long-deprecated theorems (#14157)

[33mcommit 22d0c6ac3002251c6712bd2a67cacfaa543455e5[m
Author: Peiran Wu <15968905+wupr@users.noreply.github.com>
Date:   Wed Jun 26 16:30:29 2024 +0000

    fix: rename `orderOf_mk` to `Prod.orderOf_mk` (#14154)

[33mcommit cabd7872282c47dc292c070738ff94b612ea0b7c[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Wed Jun 26 16:30:28 2024 +0000

    feat(Data/Real/EReal): add theorems  (#14125)
    
    - [x] Add `add_sub_cancel_right`
    - [x] Add `right_distrib_of_nneg`
    - [x] Add `left_distrib_of_nneg`
    - [x] Add `le_iff_le_forall_real_gt`
    
    Co-authored-by: @D-Thomine

[33mcommit 3a9a8f4a17acef596b611f426059ba5983ca4855[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Wed Jun 26 16:30:27 2024 +0000

    chore/perf(Analysis): replace continuity -> fun_prop (#13959)
    
    This is exhaustive, with the exception of one goal where the `continuity` proof is seemingly not about continuity at all...
    We tag two lemmas with `fun_prop` which were continuity lemmas.
    
    In some cases, this speeds up proofs significantly; we also resolve two porting notes about continuity not applying.

[33mcommit fed9531b808337631ee5ed4b515b5ac374a2fe68[m[33m ([m[1;31morigin/staging[m[33m)[m
Author: Wrenna Robson <wren.robson@gmail.com>
Date:   Wed Jun 26 15:37:41 2024 +0000

    feat(Data/Fin/Basic): Expand definition of `BoundedOrder` and `Lattice` for `Fin` (#9814)
    
    Redefine the BoundedOrder and Lattice on `Fin (n + 1)` so that they are defined for `Fin n`.
    
    
    
    Co-authored-by: Wrenna Robson <wrenna.robson@bristol.ac.uk>

[33mcommit 0c8452ec8713f881061dfe74690b438bb4ff3986[m
Author: Jeremy Tan Jie Rui <reddeloostw@gmail.com>
Date:   Wed Jun 26 14:44:17 2024 +0000

    feat: Tur√°n's theorem (#9317)

[33mcommit 2196143a179626ad17a147d6433bb0fd6de72a32[m
Author: Floris van Doorn <fpvdoorn@gmail.com>
Date:   Wed Jun 26 13:41:00 2024 +0000

    chore: tag measurability lemmas with fun_prop (#14123)
    
    * From the Sobolev inequality project
    
    Co-authored-by: Heather Macbeth 25316162+hrmacbeth@users.noreply.github.com

[33mcommit 4f99ec072b81c2db3f38eb7b1e501fd78b97aba2[m
Author: Wrenna Robson <wrenna.robson@bristol.ac.uk>
Date:   Wed Jun 26 13:40:59 2024 +0000

    feat(GroupTheory/Perm/Cycle/Factors): Remove finiteness requirement from cycleOf. (#13145)
    
    cycleOf can be defined using only a decidability condition, rather than the current finiteness condition (from which decidability can be inferred). This commit removes this dependency on finiteness.
    
    
    
    Co-authored-by: Wrenna Robson <wren.robson@gmail.com>

[33mcommit 7852921db52b18f006da12a7ed4d8680eade02cb[m
Author: Matthew Robert Ballard <matt@mrb.email>
Date:   Wed Jun 26 12:43:21 2024 +0000

    perf (TensorProduct.Basic): make `Algebra.TensorProduct.mul` irreducible  (#14002)
    
    `Algebra.TensorProduct.mul` was getting unfolded downstream. We make it `irreducible` to prevent this at the cost of a small number of `unseal mul in`'s, `dsimp`'s, and `with_unfolding_all`'s.

[33mcommit 322330163fc4e03d6dd350a63fcaf3c991b306fb[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Wed Jun 26 12:43:20 2024 +0000

    feat: Fintype instance for `Shrink` (#13988)

[33mcommit 1376ad3530bc6cdb8dd239246dc32afef2f9ace2[m
Author: Fr√©d√©ric Dupuis <dupuisf@iro.umontreal.ca>
Date:   Wed Jun 26 12:43:19 2024 +0000

    chore(ContinuousMap): add `TopologicalRing` instance (#13882)
    
    This PR adds `TopologicalSemiring` and `TopologicalRing` instances on `C(Œ±, Œ≤)`, and also gives explicit names to various related instances on `C(Œ±, Œ≤)`.

[33mcommit 90b77f05a28a93358976f08ac6245b76c651c54c[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Wed Jun 26 12:43:18 2024 +0000

    chore: Rename `Equiv.forall_congr` lemmas (#13725)
    
    These names were all over the place and there were missing versions.

[33mcommit 9741ec3294373c76e8ef56eedbdc75abdbc518e6[m
Author: Kevin Buzzard <k.buzzard@imperial.ac.uk>
Date:   Wed Jun 26 12:43:17 2024 +0000

    feat: the finite adele ring is an algebra over the finite integral adeles. (#13705)

[33mcommit 53e093f0ee3447963343ed2c5ee8256617cefedd[m
Author: Junyan Xu <junyanxumath@gmail.com>
Date:   Wed Jun 26 12:03:55 2024 +0000

    feat(EllipticCurve): lemmas in Jacobian coordinates (#13846)
    
    + `equiv_iff_eq_of_Z_eq`: if a point has two representations in Jacobian coordinates with the same, nonzero Z-coordinate, then the two representations are equal.
    
    + `nonsingular_iff_of_Z_ne_zero`: a lemma deleted in an earlier PR for no reason, now restored.
    
    + `addXYZ_self`: if the addition (not doubling) formula is applied to a point representative and itself, the result is (0,0,0).
    
    + `addXYZ_neg`: the addition formula applied to a point representative and its negation yields a representative of the point at infinity.
    
    + two trivial lemmas `fromAffine_ne_zero` and `comp_fin3`.
    
    + a series of `map` lemmas showing the addition and doubling formulas in Jacobian coordinates commute with ring homomorphisms.
    
    
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>

[33mcommit 27ad31ad393037d8abf7dc3766f223be19919ff5[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Wed Jun 26 12:03:54 2024 +0000

    chore: remove LinearAlgebra.Basic (#12311)
    
    It had become an incoherent grab-bag of results, which I've moved to more suitable places over the last few months.

[33mcommit a1cb4f2c87225f6d6eee615dfd7a66e61058aa99[m
Author: Jz Pan <acme_pjz@hotmail.com>
Date:   Wed Jun 26 11:25:27 2024 +0000

    feat(LinearAlgebra/TensorProduct/Submodule): add some linear maps induced by multiplication for submodules (#12498)
    
    ... used in the definition of linearly disjointness.
    
    Let `R` be a commutative ring, `S` be an `R`-algebra (not necessarily commutative).
    Let `M` and `N` be `R`-submodules in `S`.
    
    - `Submodule.mulMap`: the natural `R`-linear map `M ‚äó[R] N ‚Üí‚Çó[R] S`
      induced by the multiplication in `S`, whose image is `M * N` (`Submodule.mulMap_range`).
    
    - `Submodule.mulMap'`: the natural map `M ‚äó[R] N ‚Üí‚Çó[R] M * N`
      induced by multiplication in `S`, which is surjective (`Submodule.mulMap'_surjective`).
    
    - `Submodule.lTensorOne`, `Submodule.rTensorOne`: the natural isomorphism between
      `i(R) ‚äó[R] N` and `N`, resp. `M ‚äó[R] i(R)` and `M`, induced by multiplication in `S`,
      here `i : R ‚Üí S` is the structure map. They generalize `TensorProduct.lid`
      and `TensorProduct.rid`, as `i(R)` is not necessarily isomorphic to `R`.
    
      Note that we use `‚ä• : Subalgebra R S` instead of `1 : Submodule R S`, since the map
      `R ‚Üí‚Çó[R] (1 : Submodule R S)` is not defined directly in mathlib yet.
    
    - `Submodule.mulLeftMap`: if `m : Œπ ‚Üí M` is a family of elements, then there is an `R`-linear map
      from `Œπ ‚Üí‚ÇÄ N` to `S` which maps `{ n_i }` to the sum of `m_i * n_i`.
    
    - `Submodule.mulRightMap`: if `n : Œπ ‚Üí N` is a family of elements, then there is an `R`-linear map
      from `Œπ ‚Üí‚ÇÄ M` to `S` which maps `{ m_i }` to the sum of `m_i * n_i`.

[33mcommit 7ea519172bf2c8b45f2a78fe268539d01ec75ea3[m
Author: Junyan Xu <junyanxumath@gmail.com>
Date:   Wed Jun 26 10:10:07 2024 +0000

    feat(EllipticCurve): affine formulas and bivariate polynomial lemmas (#13845)
    
    + Create a new file for materials about bivariate polynomials developed using `R[X][X]` rather than `MvPolynomial`. Introduce `evalEval` for evaluation at a point (x,y) on the plane, and use it in Affine.lean and Jacobian.lean.
    
    + Move the notations `R[X][Y]` and `Y` from `EllipticCurve/Afffine.lean` to the new file.
    
    + Add two lemmas in `Affine.lean` that relates `negPolynomial` and `polynomialY`, and two trivial lemmas `some_ne_zero` and `some_eq_some_iff`.
    
    + Prove two affine formulas `addX_eq_subX_sub` and `addY_sub_negY` which are crucial for the development of division polynomials.
    
    + Golf the definition of addition of rational points and subsequent lemmas, including two proofs in `Group.lean`.
    
    + Remove `eval_polynomial(X,Y)` lemmas in favor of bivariate polynomial lemma `map_mapRingHom_eval_map_eval`; add a lemma `Equation.map`.
    
    
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>

[33mcommit caa1d6c4b0c16decf99853c1879139e8e05b481d[m
Author: Kim Morrison <kim@tqft.net>
Date:   Wed Jun 26 09:21:43 2024 +0000

    chore: use latest elan in CI (#14144)

[33mcommit ae2d0273a99630d49bfd888a92f3b6b18a1f9957[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Wed Jun 26 09:21:42 2024 +0000

    chore: register {`OreLocalization`, `Localization`, `ModuleLocalization`} with `induction` and `cases` (#14132)
    
    Spit from #12605, which picked up some conflicts here.
    
    Co-authored-by: negiizhao [zhao.yu-yang@foxmail.com](mailto:zhao.yu-yang@foxmail.com)

[33mcommit bc984f0670a6fba3dbadf9a013c45de9d98df334[m
Author: Lorenzo Luccioli <lorenzoluccioli@gmail.com>
Date:   Wed Jun 26 09:21:41 2024 +0000

    feat(Measure/Stieltjes): Add instance `Module ‚Ñù‚â•0 StieltjesFunction` (#14115)
    
    - Add `StieltjesFunction.const` and `StieltjesFunction.add`
    - Add lemmas `const_apply` and `add_apply`
    - Add instances `AddCommMonoid StieltjesFunction` and `Module ‚Ñù‚â•0 StieltjesFunction`
    - Add lemmas `measure_const`, `measure_add` and `measure_smul`
    - Cleanup

[33mcommit f687f5930457156b4da525f874449e955979bc9d[m
Author: Stefan Kebekus <kebekus@users.noreply.github.com>
Date:   Wed Jun 26 08:43:29 2024 +0000

    Expand documentation slightly (#14152)
    
    doc: Minor improvement
    
    Mention equivRealProdCLM (=The natural continuous linear equiv from ‚ÑÇ to ‚Ñù √ó ‚Ñù) prominently in the list of functions defined in Analysis/Complex/Basic.lean. For a better overview, list the functions in a table rather than a bullet point list.

[33mcommit dd0e084c5a1b83d9a142567e9cc19331a286e17a[m
Author: damiano <adomani@gmail.com>
Date:   Wed Jun 26 08:43:28 2024 +0000

    chore: remove tactics (#14139)
    
    Remove tactics that do not seem to affect any goal, as reported by the linter.

[33mcommit f0298510eb17162c0873513549cb3bc217dc0e32[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Wed Jun 26 08:17:04 2024 +0000

    chore: move IsLinearMap theorems to their own file (#14116)

[33mcommit fd27592dab8bc6d962c4f3cb46be914af6c0d95c[m
Author: Kim Morrison <kim@tqft.net>
Date:   Wed Jun 26 06:40:59 2024 +0000

    chore: fix update_dependencies reporting bot (#14150)

[33mcommit c73f846b54e58a4411dd477fcf6f78b2b226e69b[m
Author: leanprover-community-mathlib4-bot <150093616+mathlib-bors@users.noreply.github.com>
Date:   Wed Jun 26 06:40:58 2024 +0000

    chore: update Mathlib dependencies 2024-06-26 (#14145)
    
    This PR updates the Mathlib dependencies.
    
    Co-authored-by: Kim Morrison <kim@tqft.net>

[33mcommit d803ff3b73fe4a2704be4f03fa492a0430f0a087[m
Author: Kim Morrison <kim@tqft.net>
Date:   Wed Jun 26 05:43:53 2024 +0000

    feat: if the body constrains universes, make it explicit in the signature. (#14069)
    
    In many places in Mathlib universes in the type signature are invisibly constrained by the RHS of the `def`.
    
    This PR makes all these explicit in the type signature.
    
    Likely we will change the Lean behaviour to disallow this in https://github.com/leanprover/lean4/pull/4482 (i.e. this is the backport to `master` of the fixes required for that).

[33mcommit a98c0321de47935d8e01d749c84201e68adf9c08[m
Author: Kim Morrison <kim@tqft.net>
Date:   Wed Jun 26 05:34:07 2024 +0000

    chore: update update_dependencies failure bot (#14147)
    
    Was triggering on the wrong workflow.

[33mcommit 6308da40741acd3d939d89a847b4bea4682c9d2e[m
Author: Kim Morrison <kim@tqft.net>
Date:   Wed Jun 26 05:24:29 2024 +0000

    chore: fix timestamp in update_dependencies PRs (#14146)
    
    cf #14145

[33mcommit efb8f8fdbe2d854f4c4278b88c51d8acbe5a7240[m
Author: Kim Morrison <kim@tqft.net>
Date:   Wed Jun 26 03:57:15 2024 +0000

    chore: keep trying with update_dependencies workflow (#14143)

[33mcommit 022088daa10719e4f70b068cf84935cf436d4c81[m[33m ([m[1;31morigin/update-dependencies-2024-06-26-04-06[m[33m, [m[1;31morigin/update-dependencies-2024-06-26-03-06[m[33m)[m
Author: Kim Morrison <kim@tqft.net>
Date:   Wed Jun 26 02:22:38 2024 +0000

    chore: trying to the update_dependencies workflow working (#14142)

[33mcommit d9d3a89bae3d1b98d97797406c7441b1fd7d67ca[m
Author: Steven Clontz <steven.clontz@gmail.com>
Date:   Wed Jun 26 01:20:22 2024 +0000

    chore: reverse gdelta/separation dependency (#13694)
    
    This reversal will allow for the following definition for a [perfectly normal](https://topology.pi-base.org/properties/P15) space (with $T_1$ this is [T_6](https://topology.pi-base.org/properties/P000067), the last "whole number" separation axiom missing from mathlib), proposed at #13517.
    
    ```lean
    /-- A topological space `X` is a *perfectly normal space* provided it is normal and
    closed sets are GŒ¥. -/
    class PerfectlyNormalSpace (X : Type u) [TopologicalSpace X] extends NormalSpace X : Prop where
        closed_gdelta : ‚àÄ ‚¶Éh : Set X‚¶Ñ, IsClosed h ‚Üí IsGŒ¥ h
    ```

[33mcommit 46b048d49f825edce077aaeeac1fdef424a0f1b1[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Tue Jun 25 23:57:15 2024 +0000

    chore: add `induction_eliminator` and `cases_eliminator` for free objects (#14135)
    
    Namely, for
    
    * `FreeMagma` / `FreeAddMagma`
    * `FreeSemigroup` / `FreeAddSemigroup`
    * `FreeMonoid` / `FreeAddMonoid`
    * `FreeCommRing`
    * `FreeAlgebra`
    
    Split from #12605
    
    
    Co-authored-by: negiizhao <zhao.yu-yang@foxmail.com>

[33mcommit b35f3384aa83a39923361600e33de876fc7291ec[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Tue Jun 25 23:46:23 2024 +0000

    chore: register `MulOpposite.rec` with `induction` and `cases` (#14136)
    
    Split from #12605.
    
    Co-authored-by: negiizhao zhao.yu-yang@foxmail.com

[33mcommit 8857292e0ebdf32509fb021df7bdeba56a455be1[m
Author: pauldavidrowe <pauldavidrowe@gmail.com>
Date:   Tue Jun 25 22:19:55 2024 +0000

    feat: add Repr instance for quaternions (#13940)
    
    Adds a Repr instance for QuaternionAlgebra. A quaternion <w, x, y, z> is shown as "{ re := w, imI := x, imJ := y, imK := z }". The components are displayed as Cauchy sequences for quaternions over the Reals.

[33mcommit 13286789733bdf68f17116bf21c39c0646cd76c5[m
Author: Andrew Yang <the.erd.one@gmail.com>
Date:   Tue Jun 25 21:22:38 2024 +0000

    feat(LinearAlgebra/Dimension): Generalize `rank_tensorProduct` (#14118)
    
    
    
    
    Co-authored-by: Andrew Yang <36414270+erdOne@users.noreply.github.com>

[33mcommit 9cff34c8c3bb7759115f12715b45301544dd0093[m
Author: Iv√°n Renison <85908989+IvanRenison@users.noreply.github.com>
Date:   Tue Jun 25 20:52:28 2024 +0000

    feat(Combinatorics/SimpleGraph): Add theorems about the coloring of the ends of a walk in a bicolored graph (#13200)

[33mcommit e571678255f06ae2085c5ea0cc8fabd7114d0352[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Jun 25 20:15:39 2024 +0000

    chore(*): add 3 `fun_prop` attrs (#14040)

[33mcommit 92882dd7a323af2698429307421bfc6800c2a558[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Jun 25 17:24:49 2024 +0000

    feat(Topology/NNReal): add `Real.map_toNNReal_atTop` (#13983)
    
    ... and `Real.comap_toNNReal_atTop`

[33mcommit 377f9e93facca0fed9f356b29bf400eeecdbb58e[m
Author: Peiran Wu <15968905+wupr@users.noreply.github.com>
Date:   Tue Jun 25 16:50:32 2024 +0000

    feat(GroupTheory/OrderOfElement): Add lemma `orderOf_mk` (#14104)

[33mcommit 7e4afad324f0ef8bd76e01d86296e8663ae8ac1f[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Tue Jun 25 14:51:25 2024 +0000

    feat: sheaves of modules generated by their sections (#13720)
    
    In this PR, we show the existence of colimits in categories of sheaves of modules, apply this to the particular case of coproducts of copies of the sheaf of rings in order to formalize the notion of generating family of (global) sections of a sheaf of modules.
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit 27a0278f86c8c9d53ca7c4e6c8f88eabcc1c58f3[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Jun 25 14:51:24 2024 +0000

    feat(Topology/Sequences): add missing instances (#13460)
    
    - Subtype of a Fr√©chet-Urysohn space is a Fr√©chet-Urysohn space;
    - Disjoint union (`Sum`, `Sigma`) of sequential spaces is a sequential space.

[33mcommit 6d4ab88d1bd98e2f7a0431d9de0f000660411f4e[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Tue Jun 25 14:40:29 2024 +0000

    feat: relative differentials as a presheaf of modules (#14014)
    
    In this PR, we define the type `M.Derivation œÜ` of derivations with values in a presheaf of `R`-modules `M` relative to
    a morphism of `œÜ : S ‚ü∂ F.op ‚ãô R` of presheaves of commutative rings over categories `C` and `D` that are related by a functor `F : C ‚•§ D`. In the particular case `F` is the identity functor, we construct the universal derivation.
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit c4f1cc8b08d1a2554a71c2e06c593dd5bcb74bf5[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Tue Jun 25 13:18:33 2024 +0000

    feat(Data/Real/EReal): add simp theorems involving the sum of `‚ä§` and `x` (#14102)
    
    - [x] Add the theorem `top_add_of_ne_bot` which states that for any extended real number `x` which is not `‚ä•`, the sum of `‚ä§` and `x` is equal to `‚ä§`.
    - [x] Add the theorem `add_top_of_ne_bot` which states that for any extended real number `x` which is not `‚ä•`, the sum of `x` and `‚ä§` is equal to `‚ä§`.
    - [x]  Add the theorem `add_pos` which states that for any two extended real numbers `a` and `b`, if both `a` and `b` are greater than `0`, then their sum is also greater than `0`.
    - [x] Add the theorem `mul_pos` which states that the product of two positive extended real numbers is positive.
    - [x] Add the theorem `add_top_iff_ne_bot` which states that for any extended real number `x`, the sum of `x` and `‚ä§` is equal to `‚ä§` if and only if `x` is not `‚ä•`.
    - [x] Add the theorem `top_add_iff_ne_bot` which states that for any extended real number `x`, the sum of `‚ä§` and `x` is equal to `‚ä§` if and only if `x` is not `‚ä•`.
    
    Co-authored-by: @D-Thomine
    
    --
    
    [![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)

[33mcommit 0512c531724ac5b469194a10a6056fee2ddecdfd[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Tue Jun 25 13:18:31 2024 +0000

    chore(Algebra/Order/Rearrangement): Cleanup (#13949)
    
    Remove unnecessary brackets and indentation, fix a few lemma names (the `_comp` were misplaced).

[33mcommit 9a2e9d332236861f33e75fb5c398577b0d5ffc70[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Tue Jun 25 12:23:32 2024 +0000

    refactor: Improve lemmas about sets of intermediate size (#14062)
    
    The lemmas around here are a mess. Rename `Finset.exists_smaller_set` to `Finset.exists_subset_card_eq`, `Finset.exists_intermediate_set` to `Finset.exists_subsuperset_card_eq`, and add the missing third `Finset.exists_superset_card_eq`. Same for `Set`.

[33mcommit cd7c51790cac1a32c321373d45700290b3e8496c[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Tue Jun 25 11:38:59 2024 +0000

    chore(MeasureTheory): replace continuity -> fun_prop (#14008)

[33mcommit aa7dfcd21b60a5480a3f70833d966ed36348110e[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Tue Jun 25 11:38:58 2024 +0000

    doc: recommend `lake exe mk_all` in the README (#13656)
    
    Instead of the `find` incantation.

[33mcommit 1d8ad316192f3a98ce063435a63b4a52bfb13928[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Tue Jun 25 10:40:22 2024 +0000

    fix: add `-lLake` argument to `pole` and `mk_all` (#13850)
    
    Since Lean 4.9, the behaviour of `supportInterpreter` executables has changed, making this necessary:
    both of these executables require modules from `lake`.
    In contrast, `shake` also uses `supportInterpreter`, but does not depend on `lake`.
    [zulip discussion](https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/automatically.20generate.20ProjectName.2Elean/near/444239597)

[33mcommit 81a6a268b7bb3862d1bbc891ef40cdfa7a484e8b[m
Author: Kim Morrison <kim@tqft.net>
Date:   Tue Jun 25 09:57:09 2024 +0000

    chore(HomotopyCategory/Pretriangulated): remove 'says' that cause timeouts (#14083)

[33mcommit bf26137858774bb51cc23ef9b8671163b7d20cac[m
Author: Fabrizio Barroero <fbarroero@gmail.com>
Date:   Tue Jun 25 09:57:08 2024 +0000

    Feat (NumberTheory/Ostrowski): Proof of the non-archimedean case of Ostrowski's Theorem (#14026)
    
    In this PR we prove that a non-archimedean non-trivial absolute value on the rational is equivalent to a padic one.
    
    Main result
    ```lean
    theorem mulRingNorm_equiv_padic_of_bounded :
        ‚àÉ! p, ‚àÉ (hp : Fact (Nat.Prime p)), MulRingNorm.equiv f (mulRingNorm_padic p)
    ```
    
    Co-authored-by:
    
    David Kurniadi Angdinata [dka31@cantab.ac.uk](mailto:dka31@cantab.ac.uk)
    Laura Capuano [laura.capuano@uniroma3.it](mailto:laura.capuano@uniroma3.it)
    Nirvana Coppola [nirvanac93@gmail.com](mailto:nirvanac93@gmail.com)
    Mar√≠a In√©s de Frutos Fern√°ndez [maria.defrutos@uam.es](mailto:maria.defrutos@uam.es)
    Sam van Gool [vangool@irif.fr](mailto:vangool@irif.fr)
    Silvain Rideau-Kikuchi [silvain.rideau-kikuchi@ens.fr](mailto:silvain.rideau-kikuchi@ens.fr)
    Amos Turchet [amos.turchet@uniroma3.it](mailto:amos.turchet@uniroma3.it)
    Francesco Veneziano [veneziano@dima.unige.it](mailto:veneziano@dima.unige.it)

[33mcommit 5bdfd1ad87615395326b69ec850954fc14d119fb[m
Author: Riccardo Brasca <riccardo.brasca@gmail.com>
Date:   Tue Jun 25 09:57:07 2024 +0000

    feat(Mathlib.NumberTheory.Cyclotomic.Three): add various results (#13798)
    
    We add various results about the third cyclotomic field needed to prove flt3.
    
    From the flt3 project at LFTCM2024.

[33mcommit 5324fdb632c36b9ce7bc331659c37cfbc7a8a79e[m
Author: Kim Morrison <kim@tqft.net>
Date:   Tue Jun 25 09:01:22 2024 +0000

    chore: downgrade ProofWidgets to v0.0.36 (#14113)
    
    Unfortunately we are finding people with build failures because the cloud release of ProofWidgets v0.0.37 is not being found, and a local build (which needs `npm`, which may not be present) is started.
    
    See [zulip discussion](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Proof.20widget.20cloud.20release).

[33mcommit 0ba8580b7c78dfc3cfe587b8bed8952b9d6d0a2e[m
Author: James Sundstrom <James.Sundstrom@gmail.com>
Date:   Tue Jun 25 09:01:21 2024 +0000

    feat(Algebra/Module/LocalizedModule): Prove that localization is exact (#13790)
    
    Given localizations f‚ÇÄ : M‚ÇÄ ‚Üí M‚ÇÄ', f‚ÇÅ : M‚ÇÅ ‚Üí M‚ÇÅ', and f‚ÇÇ : M‚ÇÇ ‚Üí M‚ÇÇ', and an exact sequence consisting of g : M‚ÇÄ ‚Üí M‚ÇÅ and h : M‚ÇÅ ‚Üí M‚ÇÇ, prove that (map S f‚ÇÄ f‚ÇÅ g) : M‚ÇÄ' ‚Üí M‚ÇÅ' and (map S f‚ÇÅ f‚ÇÇ h) : M‚ÇÅ' ‚Üí M‚ÇÇ' form an exact sequence.
    
    Also fix a typo in the documentation of IsLocalizedModule.lift.

[33mcommit 9389b290a392b2fdfc0874abe0ec01ab08843709[m
Author: David Kurniadi Angdinata <dka31@cantab.ac.uk>
Date:   Tue Jun 25 09:01:20 2024 +0000

    feat(AlgebraicGeometry/EllipticCurve/DivisionPolynomial/Basic): add maps for division polynomials (#13399)

[33mcommit 397d87803ee60c11623fdd680199366acaaedaef[m
Author: Kim Morrison <kim@tqft.net>
Date:   Tue Jun 25 08:50:53 2024 +0000

    chore(README): updates (#14112)

[33mcommit a8bd217ebc8c00aee9200595bc1b71e9aaf01dea[m
Author: Kim Morrison <kim@tqft.net>
Date:   Tue Jun 25 08:50:52 2024 +0000

    chore(README): fix advice about updating dependencies (#14109)

[33mcommit 40021802935f942d194b359723176a646add0c8a[m
Author: Martin Dvo≈ô√°k <martin.dvorak@matfyz.cz>
Date:   Tue Jun 25 08:08:50 2024 +0000

    docs(Algebra/Order/Module/Defs): more implications (#13931)
    
    The following six implications are added to the documentation:
    
    ```
    PosSMulReflectLT.toPosSMulMono.{u_2, u_1} {Œ± : Type u_1} {Œ≤ : Type u_2} [SMul Œ± Œ≤] [Preorder Œ±] [LinearOrder Œ≤] [Zero Œ±]
      [PosSMulReflectLT Œ± Œ≤] : PosSMulMono Œ± Œ≤
    
    SMulPosReflectLT.toSMulPosMono.{u_2, u_1} {Œ± : Type u_1} {Œ≤ : Type u_2} [SMul Œ± Œ≤] [Preorder Œ±] [LinearOrder Œ≤] [Zero Œ≤]
      [SMulPosReflectLT Œ± Œ≤] : SMulPosMono Œ± Œ≤
    
    PosSMulReflectLE.toPosSMulStrictMono.{u_2, u_1} {Œ± : Type u_1} {Œ≤ : Type u_2} [SMul Œ± Œ≤] [Preorder Œ±] [LinearOrder Œ≤]
      [Zero Œ±] [PosSMulReflectLE Œ± Œ≤] : PosSMulStrictMono Œ± Œ≤
    
    SMulPosReflectLE.toSMulPosStrictMono.{u_2, u_1} {Œ± : Type u_1} {Œ≤ : Type u_2} [SMul Œ± Œ≤] [Preorder Œ±] [LinearOrder Œ≤]
      [Zero Œ≤] [SMulPosReflectLE Œ± Œ≤] : SMulPosStrictMono Œ± Œ≤
    
    PosSMulMono.toPosSMulStrictMono.{u_2, u_1} {Œ± : Type u_1} {Œ≤ : Type u_2} [Semiring Œ±] [AddCommGroup Œ≤] [Module Œ± Œ≤]
      [NoZeroSMulDivisors Œ± Œ≤] [Preorder Œ±] [PartialOrder Œ≤] [PosSMulMono Œ± Œ≤] : PosSMulStrictMono Œ± Œ≤
    
    SMulPosMono.toSMulPosStrictMono.{u_2, u_1} {Œ± : Type u_1} {Œ≤ : Type u_2} [Ring Œ±] [AddCommGroup Œ≤] [Module Œ± Œ≤]
      [NoZeroSMulDivisors Œ± Œ≤] [PartialOrder Œ±] [PartialOrder Œ≤] [SMulPosMono Œ± Œ≤] : SMulPosStrictMono Œ± Œ≤
    ```

[33mcommit dc8cf8b25927b121ce49a85d620be120409d51a0[m
Author: Kim Morrison <kim@tqft.net>
Date:   Tue Jun 25 06:59:03 2024 +0000

    chore(README): update maintainers (#14111)

[33mcommit c9d0d58e2e39ffb74f65fd6a9dfb53d59cf6e1b3[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Tue Jun 25 06:39:00 2024 +0000

    feat(CategoryTheory): constructor for right derivability structures (#12676)
    
    In this file, we provide a constructor for right derivability structures. Assume that `W‚ÇÅ` and `W‚ÇÇ` are classes of morphisms in categories `C‚ÇÅ` and `C‚ÇÇ`, and that we have a localizer morphism `Œ¶ : LocalizerMorphism W‚ÇÅ W‚ÇÇ` that is a localized equivalence, i.e. `Œ¶.functor` induces an equivalence of categories between the localized categories. Assume moreover that `W‚ÇÅ` is multiplicative and `W‚ÇÇ` contains identities. Then, `Œ¶` is a right derivability structure (`LocalizerMorphism.IsRightDerivabilityStructure.mk'`) if it satisfies the two following conditions:
    
    * for any `X‚ÇÇ : C‚ÇÇ`, the category `Œ¶.RightResolution X‚ÇÇ` of resolutions of `X‚ÇÇ` is connected
    * any arrow in `C‚ÇÇ` admits a resolution (i.e. `Œ¶.arrow.HasRightResolutions` holds, where `Œ¶.arrow` is the induced localizer morphism on categories of arrows in `C‚ÇÅ` and `C‚ÇÇ`)
    
    This is essentially Lemme 6.5 in *Structures de d√©rivabilit√©, Adv. Math. 218 (4), pp. 1286-1318 (2008)* by Bruno Kahn and Georges Maltsiniotis.
    
    The "injective", "projective" and "flat" derivability structures on categories of cochain complexes shall be obtained using this constructor.
    
    
    
    Co-authored-by: Jeremy Tan Jie Rui <reddeloostw@gmail.com>

[33mcommit 7bdafea99c391569e07ecb1d8a33a576e0c8b5ba[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Tue Jun 25 06:18:04 2024 +0000

    feat(Algebra/Homology) the single complex functor preserves (co)limits (#13875)
    
    In this PR, it is shown that the single functors `C ‚•§ HomologicalComplex C c` preserves limits and colimits.
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit b0f8ad0287ba6616ce1c5aae5f568c779e1c169a[m
Author: Andrew Yang <the.erd.one@gmail.com>
Date:   Tue Jun 25 05:48:57 2024 +0000

    refactor(AlgebraicGeometry): Use `Scheme.Hom.app` as simp normal form (#14031)
    
    
    
    Co-authored-by: Andrew Yang <36414270+erdOne@users.noreply.github.com>

[33mcommit 55f624049c33b80fd4f00615ba5015e5589eb1c4[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Tue Jun 25 01:47:22 2024 +0000

    feat: rewrite line length style linter in Lean (#14093)
    
    And finish moving the broad imports linter to Lean: I forgot to remove the Python code and actually run the Lean code, oops.

[33mcommit 214438ff59926f224d1694fbf2132a16bd11a4bc[m
Author: Andrew Yang <the.erd.one@gmail.com>
Date:   Tue Jun 25 01:47:21 2024 +0000

    feat(AlgebraicGeometry) Add more API (#14052)
    
    
    
    
    Co-authored-by: Andrew Yang <36414270+erdOne@users.noreply.github.com>

[33mcommit 68c038700624293068065859da631516099f8aa6[m
Author: Wojciech Nawrocki <wjnawrocki+gh@protonmail.com>
Date:   Tue Jun 25 00:47:52 2024 +0000

    chore: bump ProofWidgets4 to v0.0.37 (#14092)
    
    
    
    Co-authored-by: Wojciech Nawrocki <wjnawrocki@protonmail.com>

[33mcommit 3dce761d97a3da3b0e0dfe7a3c8ea01e114831c9[m
Author: Christian Merten <christian@merten.dev>
Date:   Tue Jun 25 00:00:25 2024 +0000

    feat(RingTheory/MvPolynomial): multivariate polynomials preserve localization (#14055)
    
    If `S` is the localization of `R` at a submonoid `M`, then `MvPolynomial œÉ S` is the localization of `MvPolynomial œÉ R` at the image of `M` in `MvPolynomial œÉ R`.

[33mcommit 9b48e040b415fc8b531ccdb92343791de9161210[m
Author: Iv√°n Renison <85908989+IvanRenison@users.noreply.github.com>
Date:   Mon Jun 24 22:58:58 2024 +0000

    feat(Logic): Add `iff_assoc`, `iff_left_comm` and `iff_right_comm` theorems (#14101)
    
    This was in #13200, but I'm moving it to a separate pull request to keep that pull request small

[33mcommit 56181aa3c7abc530d7f5bf039f21ae411d49762b[m
Author: Peiran Wu <15968905+wupr@users.noreply.github.com>
Date:   Mon Jun 24 22:58:57 2024 +0000

    feat(Algebra/Group/TypeTags): Add `toMul_eq_one` and  `toAdd_eq_zero` (#14097)

[33mcommit 0cc920ed8be5faac974e7f5618fbaabcebc1c987[m
Author: damiano <adomani@gmail.com>
Date:   Mon Jun 24 22:33:28 2024 +0000

    chore: remove `set_option in` (#14103)
    
    Two unnecessary `set_option ... in` flagged by the linter.

[33mcommit 97a63f4b46b5d410cc6b973bf51519d33110dd9c[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Mon Jun 24 22:22:50 2024 +0000

    feat: `G.deleteEdges s = G ‚Üî Disjoint G.edgeSet s` (#13829)
    
    From LeanCamCombi

[33mcommit a80ef49f2ec2b99e9847cdae853f5a2bf6199d23[m
Author: Jujian Zhang <jujian.zhang1998@outlook.com>
Date:   Mon Jun 24 22:12:22 2024 +0000

    feat(AlgebraicGeometry/ProjectiveSpectrum/Scheme): finish the `Proj` construction (#12371)
    
    This PR finishes the `Proj` construction for any ring graded by natural numbers:
    If $A$ is an $R$ algebra with ùíú as its grading i.e. ùíú i is an $R$-submodule of $A$ , then `AlgebraicGeometry.Proj ùíú` is the scheme whose underlying topological space is the collection of homogeneous relevant prime ideals with the Zariski topology; whose sheaf of rings is the collection of functions that are locally homogeneous fractions. We prove that for each `f : A` with positive degree, `Proj | D(f)` (`Proj` as locally ringed space restricted to the basic open set around `f`) is isomorphic to `Spec A^0_f` (prime spectrum of the homogeneous localization of `A` at `f`).
    
    The isomorphism is constructed as the following:
    by the Gamma-Spec adjunction, it is sufficient to construct a ring map `A‚Å∞_f ‚Üí Œì(Proj, pbo f)` from the ring of homogeneous localization of `A` away from `f` to the local sections of structure sheaf of projective spectrum on the basic open set around `f`.
    
    The map `A‚Å∞_f ‚Üí Œì(Proj, pbo f)` is defined by sending `s ‚àà A‚Å∞_f` to the section `x ‚Ü¶ s` on `pbo f`.
    
    Then we show that the map `Proj | D(f) -> Spec A‚Å∞_f` induces an isomorphism on stalk level, thus is an isomorphism.
    
    Co-authored-by: Andrew Yang <the.erd.one@gmail.com>
    
    
    
    Co-authored-by: zjj <j.jj@j.jj>
    Co-authored-by: Andrew Yang <the.erd.one@gmail.com>
    Co-authored-by: Andrew Yang <36414270+erdOne@users.noreply.github.com>

[33mcommit 7eb6e30963727017f7124791f4a6a06258e5536a[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Mon Jun 24 21:15:34 2024 +0000

    chore: update style exceptions (#14094)
    
    This includes a re-ordering, due to rewriting the 'file length' check in Lean. All of this is automatically generated, so a one-time effect only.

[33mcommit 04fc89bc00cf4fbddb7fcf0b70c866b5fc370d45[m
Author: Christopher Hoskin <christopher.hoskin@gmail.com>
Date:   Mon Jun 24 21:15:33 2024 +0000

    refactor(Algebra/Star/StarAlgHom): `mk_coe` and `coe_mk` in StarAlgHom (#13267)
    
    Add `mk_coe` and `coe_mk` results to `Algebra/Star/StarAlgHom` in analogy with `RingEquiv`.
    
    
    
    Co-authored-by: Christopher Hoskin <christopher.hoskin@overleaf.com>

[33mcommit 21c5e4e454ba0f2508b7af73326dfdac78496445[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Mon Jun 24 21:15:31 2024 +0000

    feat: lint against stream-of-conciousness obtain syntax (#13220)
    
    Just the syntax replacements are split into #13219.
    
    Most of its occurrences were removed in #11045 and #12850; #13219 removed the last instances.
    
    **Why is this removed?** In a nutshell, my understanding is that this is preferred against for similar reasons as #10534:
    - it's a Lean3-ism, which can be unlearned now
    - the syntax `obtain foo : type := proof` is slightly shorter; particularly so when the next tactic is `exact`
    - when using it as `obtain foo : type; ¬∑ proof`, there is an intermediate state with multiple goals right before the focusing dot
    (This gets amplified with the in-flight "multiple goal linter", which in my perception seems generally desired - for many reasons, including teachability. Granted, the linter could be tweaked to not lint in this case... but by now, the "old" syntax is not clearly better.)
    - the old syntax *could* be slightly nicer when deferring goals: In the 30 replacements of the last PR, this occurred *twice* (i.e., very rarely). In both cases, `suffices` or `rsuffices` can be used, and would imho be clearer.
    
    Alternatively, the `obtain` tactic in Lean core could also be changed: this change does not block this at all,
    but moves forward with something that is doable within mathlib today.

[33mcommit 66bea87f72608f8016d31c2c05ccbe5c7626d952[m
Author: Andrew Yang <the.erd.one@gmail.com>
Date:   Mon Jun 24 21:15:30 2024 +0000

    feat(RingTheory/Kaehler): The exact sequence `I/I¬≤ ‚Üí B ‚äó[A] Œ©[A‚ÅÑR] ‚Üí Œ©[B‚ÅÑR] ‚Üí 0` (#13093)
    
    
    
    
    Co-authored-by: Andrew Yang <36414270+erdOne@users.noreply.github.com>

[33mcommit 8869371744c311e3faa49981370d7d31ba1304e2[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Mon Jun 24 20:33:53 2024 +0000

    chore: move linear equivalences about submodules to Algebra.Module.Submodule.Equiv (#13684)

[33mcommit f584eb9838d66408cd25de6472778a3f442bcf4a[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Mon Jun 24 19:38:38 2024 +0000

    feat(Data/Prod): add `map_comp_swap` (#14096)
    
    This PR adds theorem `Prod. map_comp_swap` stating that for two functions `f` and `g` of type `Œ± ‚Üí Œ±`, the composition of `Prod.map f g` with `Prod.swap` is equal to the composition of `Prod.swap` with `Prod.map g f`.
    
    Co-authored-by: @D-Thomine

[33mcommit a3001aa1c78e0d86b07a62daee3664e59ce08634[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Mon Jun 24 17:57:16 2024 +0000

    feat(Topology/UniformSpace): add `UniformContinuous.iterate ` (#14066)
    
    This PR adds the theorem `UniformContinuous.iterate` claiming that if a function `T` is uniformly continuous in a uniform space `Œ≤`, then its `n`-th iterate `T^[n]` is also uniformly continuous.
    
    Co-authored-by: @D-Thomine

[33mcommit ba087f324627341cd8465d6406b98d12063f5fff[m
Author: damiano <adomani@gmail.com>
Date:   Mon Jun 24 16:56:05 2024 +0000

    fix: add space in no_lost_declarations regex (#14080)
    
    As [reported](https://github.com/leanprover-community/mathlib4/pull/14048#issuecomment-2185315293) and [requested](https://github.com/leanprover-community/mathlib4/pull/14048#issuecomment-2185933007) by Yael!
    
    I think that this change is an improvement, but I would be happier if there was a consensus that the `def`, `theorem`, `structure`,... keywords are followed by a space and not a line break before their identifier.

[33mcommit aa881f560b85581c05100859a2e0eb01e843838f[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Mon Jun 24 16:56:04 2024 +0000

    feat(Algebra/Order/Ring/WithTop): add generalised and specialised power of top  (#14019)
    
    - [x] Add generalised version of `top_pow` in `Algebra/Order/Ring/WithTop`
    - [x] Add specialised version of `top_pow` in `Data/ENat/Basic.lean`
    - [x] Add specialised version of `top_pow` in `Data/ENNReal/Operations.lean`
    
    Co-authored by @D-Thomine.

[33mcommit 454f4091b6bfaccf48b84a0633bd347e429a7552[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Mon Jun 24 16:56:03 2024 +0000

    refactor: Make `CompleteLinearOrder` extend `BiheytingAlgebra` (#12731)
    
    In fact, linear orders themselves are biheyting algebras, but registering this as an instance causes a bit of a chicken and the egg problem which I'm not willing to try solving. `CompleteLinearOrder` really does need to extend `BiheytingAlgebra` if we are going to make `Frame` extend `HeytingAlgebra`.
    
    This is a step towards #10560

[33mcommit 7ce2b09f075134b7c5407c7d5d183b333a2c9b2e[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Mon Jun 24 15:56:06 2024 +0000

    feat(Data/Int/Defs): Basic divisibility lemmas (#13934)
    
    Those lemmas already exist for `Nat`. Also rename `Nat.dvd_div_iff` to `Nat.dvd_div_iff_mul_dvd`.
    
    From LeanCamCombi

[33mcommit 56664ede1ed2fa9fd4ff43c5095d67d08b383289[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Mon Jun 24 15:03:23 2024 +0000

    feat: `Matrix.PosDef (A + B)` and `Matrix.PosSemidef (A + B)` (#13750)
    
    
    Co-authored-by: Mohanad Ahmed <m.a.m.elhassan@gmail.com>

[33mcommit 69cc9acb0ed56a021d9a4ecfd267dc6c548110e4[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Mon Jun 24 13:10:20 2024 +0000

    feat: differentials as an object in ModuleCat (#14030)
    
    In this PR, given a morphism `f : A ‚ü∂ B` in the category `CommRingCat`, and `M : ModuleCat B`, we define the type `M.Derivation f` of derivations with values in `M` relative to `f`. We also construct the module of differentials `CommRingCat.KaehlerDifferential f : ModuleCat B` and the corresponding derivation. (These are basically "bundled" versions of the unbundled constructions already in mathlib.)
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit ae6dfcde3c2ba01f5902e8b84a40a87cb94abf5e[m
Author: Jujian Zhang <jujian.zhang1998@outlook.com>
Date:   Mon Jun 24 12:36:12 2024 +0000

    feat(Geometry/OpenImmersion): lemmas for sheafed space/locally ringed space (#14039)
    
    copied from their presheafed space counter-part
    
    Co-authored-by: Andrew Yang <the.erd.one@gmail.com>
    
    
    
    Co-authored-by: zjj <j.jj@j.jj>

[33mcommit 56af6096583bcf9b4e1a5477f55bacfbdc32d619[m
Author: damiano <adomani@gmail.com>
Date:   Mon Jun 24 11:40:49 2024 +0000

    fix: technical debts counter uses all git history (#14076)
    
    This should make the "change" in the technical debts counter actually have access to the relevant past commit.
    
    [Zulip thread](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Technical.20Debt.20Counters/near/446524715)

[33mcommit 02f215e9995cd73c161dd89bdb18625ce90cc342[m
Author: Kim Morrison <kim@tqft.net>
Date:   Mon Jun 24 11:40:48 2024 +0000

    chore(ContinuousAffineMap): fix porting note (#14074)

[33mcommit 0e0e49b90fe1c2483ce10e87c214bcee65ae913a[m
Author: Kim Morrison <kim@tqft.net>
Date:   Mon Jun 24 11:40:46 2024 +0000

    chore: remove unnecessary local simp lemmas in IfNormalization (#14067)

[33mcommit dc3d440d497523a47410f9cac1a78c6d16ffa381[m
Author: David Kurniadi Angdinata <dka31@cantab.ac.uk>
Date:   Mon Jun 24 11:40:45 2024 +0000

    feat(AlgebraicGeometry/EllipticCurve/DivisionPolynomial/Degree): add further degree lemmas (#14063)

[33mcommit df87079fb509b34a7384169aa73b7b93f17c5840[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Mon Jun 24 11:40:44 2024 +0000

    chore: move `lint_style` executable to the `scripts` directory (#14057)
    
    Otherwise, importing `Mathlib.Tactic` makes defining own executables impossible, as the `main` function in `Linter.TextBased` would collide with any other main function. Move the code for the lint_style executable to scripts (which arguably might be a better place anyway); we leave the text-based linters in Tactic/Linter.

[33mcommit 2c8e5fdf4d6cf9fffa4ebc54fb2c00dd48f8f717[m
Author: Fr√©d√©ric Dupuis <dupuisf@iro.umontreal.ca>
Date:   Mon Jun 24 11:40:43 2024 +0000

    chore: Fix unicode issues in references.bib (#14056)
    
    This PR fixes two Unicode issues in references.bib, as per the discussion on [Zulip](https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/Contribution.20to.20doc-gen4.3F/near/446313567), with a view towards running a [bibtex parser](https://github.com/dupuisf/BibtexQuery) written in Lean on it:
    
    - I removed one instance of an `√∂` character in a citation key, which is anyway problematic for some implementations of bibtex (see e.g. [this thread](https://tex.stackexchange.com/questions/359215/utf8-character-in-citation-keys)). According to grep, this was only referenced in one file in mathlib, which I changed accordingly.
    - The one other problematic entry for my bibtex parser is one where there is an `\"o` inside a string delimited using quotation marks. I have an upcoming fix for this in my parser, but using UTF-8 here is anyway cleaner.
    
    
    
    Co-authored-by: Fr√©d√©ric Dupuis <31101893+dupuisf@users.noreply.github.com>

[33mcommit 5bc6aac0a36f4d4a909227110ec36b417e0cd2eb[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Mon Jun 24 11:40:42 2024 +0000

    chore: distribute fun_prop tagging of measurability lemmas (#13869)
    
    into the respective files: essentially dissolves the `FunProp/Measurable` and `AEMeasurable` files.
    (The latter is kept to note two missing statements. It is not imported anywhere any more.)
    
    This is a pre-requisite for #13781, so fun_prop can be used without breaking existing the `assert_not_exists` statements.

[33mcommit 669326e6ea743e01d55746f10414431414757714[m
Author: Kyle Miller <kmill31415@gmail.com>
Date:   Mon Jun 24 11:40:41 2024 +0000

    chore: address `@[pp_nodot]` porting notes (#13781)
    
    Adds in `@[pp_nodot]` wherever there was a porting note, except in some cases where by principle it can never have an affect (such as for `MulOpposite.op` or `SymAlg.sym`).
    
    closes #11180

[33mcommit f9caf98dbed0eb3bb593396501ffebe61bda333b[m
Author: Kim Morrison <kim@tqft.net>
Date:   Mon Jun 24 10:09:39 2024 +0000

    chore: bump toolchain to v4.9.0-rc3 (#14071)
    
    This only affects `lake` behaviour.

[33mcommit 932699c0133e6f865ee9ca630aa4bb7cdbab5ec1[m
Author: Kim Morrison <kim@tqft.net>
Date:   Mon Jun 24 10:09:38 2024 +0000

    chore: many backward compatibility flags are no longer needed (#14064)
    
    The majority of the backward compatibility flags, introduced during the move to `v4.8.0-rc1`, are no longer needed. üéâ

[33mcommit 6f8b1536d02f7d7ea1ef8772487e775b5cb441d0[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Mon Jun 24 10:09:36 2024 +0000

    fix: generalize HahnSeries.single_zero_one (#14061)
    
    Before this change, 0 was interpreted as a natural number.

[33mcommit 34a887644b0272a3b09550b3a8427fa24cf12caf[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Mon Jun 24 10:09:35 2024 +0000

    feat(lint-style): rewrite the 'broad imports' linters in Lean (#14059)
    
    This time, the error codes are intentionally changed, as the old ones feel actively misleading.
    
    
    
    Co-authored-by: Jeremy Tan Jie Rui <reddeloostw@gmail.com>

[33mcommit 85a75afaff012cf5d2c07b5c2cdcb31279c9d840[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Mon Jun 24 10:09:34 2024 +0000

    feat: the mapping cone of a monomorphism, up to a quasi-isomorphism (#13675)
    
    In this PR, given a short exact sequence `S` in the category of cochain complexes in an abelian category, we compare the homology sequence of `S`, and the homology sequence of the homological functor on the homotopy category applied to the distinguished triangle of the mapping cone of the monomorphism `S.f`. In particular, up to a quasi-isomorphism, the mapping cone of `S.f` identifies to `S.X‚ÇÉ`.
    
    In future PRs, this shall be used in order to attach a distinguished triangle in the derived category to `S` (#13742), and compare the homology sequence of `S` and the homology sequence attached to this distinguished triangle.
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit 30915f086204475074e9d5506f70234cf7330613[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Mon Jun 24 10:09:33 2024 +0000

    feat: polish user experience with the check of import-only files (#13617)
    
    Add a new --check flag to `mk_all`: if true, only verify the files are correct,
    and print an error (with instructions how to update the file) if not.
    CI can use this to give an error if the files are wrong.
    
    (Another possibility is to automatically update the files instead: this is left for future PRs.)

[33mcommit 0eb87504b21018e2a4200d4417d57fc06c99c960[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Mon Jun 24 08:40:36 2024 +0000

    chore: remove unnecessary term or tactic `set_option in` with backwards-compatibility flags (#13704)
    
    As far as I can tell, this removes all `set_option ... false in norm_num` :tada:
    
    Inspired by the linter in #13653 (but not covered by it yet; so far, that linter only checks the set_option *command*).

[33mcommit 0b2d94a00305c84f055fb9b8870886803422b6f5[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Mon Jun 24 08:03:30 2024 +0000

    feat: bijections between morphisms in two localized categories (#13956)
    
    Given two localization functors `L‚ÇÅ : C ‚•§ D‚ÇÅ` and `L‚ÇÇ : C ‚•§ D‚ÇÇ` for the same class of morphisms `W : MorphismProperty C`, we define a bijection `Localization.homEquiv W L‚ÇÅ L‚ÇÇ : (L‚ÇÅ.obj X ‚ü∂ L‚ÇÅ.obj Y) ‚âÉ (L‚ÇÇ.obj X ‚ü∂ L‚ÇÇ.obj Y)` between the types of morphisms in the two localized categories.

[33mcommit 81b126721d088b7ca23f81a47b0feedf62f12416[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Mon Jun 24 08:03:28 2024 +0000

    feat(CategoryTheory): more API for the commutation of functors with shifts (#13757)
    
    In this PR, it is shown that the composition of two functors which commute with shifts also commutes with shifts. The notion of natural transformation which commutes with the shifts is also introduced.
    
    This shall be used in the development of the API for the derived category #13742.

[33mcommit 7788d14a64e3144fe0ba06b2a25939d805e82cce[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Mon Jun 24 08:03:27 2024 +0000

    feat(CategoryTheory/Sites): the topology is generated by 1-hypercovers (#13011)
    
    In this PR, we show that a Grothendieck topology on a category `C` (with `C : Type u` and `[Category.{v} C]`) is (obviously) generated by 1-hypercovers of size `max u v`.
    
    In order to facilitate this, the type `Cover.Relation` is repackaged in a slightly different manner. Some proofs have been cleaned up. Several `dsimp` lemmas which had been manually added have been removed (and replaced by auto-generated ones).
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit aaafbd98f3c16914064b06c7a04e4df5f6f60d62[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Mon Jun 24 07:53:13 2024 +0000

    feat: the extension of a homological complex by an embedding of complex shapes (#13992)

[33mcommit b1a314186f6ddf7106ddd58ff75c0b9aff53f9df[m
Author: damiano <adomani@gmail.com>
Date:   Mon Jun 24 07:15:13 2024 +0000

    feat: maxHeartBeats in technical debts metrics (#14075)
    
    Adds `set_option .*maxHeartBeats` to the list of technical debt metrics tracked by the weekly report.
    
    [Zulip discussion](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Technical.20Debt.20Counters/near/446519223)

[33mcommit 62fdad82b2415a824c8be0b94d3816c468a17332[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Mon Jun 24 00:49:29 2024 +0000

     feat(lint-style): rewrite the linter for plain string adaptation notes in Lean (#14058)
    
    In true fashion, the linter (correctly) flags itself; we add these to the nolints file.

[33mcommit 38bdba1da9831b33379b769840f4546a1cb0f962[m
Author: Lorenzo Luccioli <lorenzoluccioli@gmail.com>
Date:   Mon Jun 24 00:49:28 2024 +0000

    feat: Monotonicity of the slope of a convex function (#14015)
    
    - Add `slope_neg_fun`
    - Add `ConvexOn.slope_mono` and `ConcaveOn.slope_anti` in a new separate section called `slope`
    
    
    
    Co-authored-by: Lorenzo Luccioli <71074618+LorenzoLuccioli@users.noreply.github.com>

[33mcommit bff23e15065979729bb009d49c52a57252f7e0d3[m
Author: Pol'tta / Miyahara K≈ç <pol_tta@outlook.jp>
Date:   Sun Jun 23 23:52:47 2024 +0000

    chore: restore `cc` tactic (#13404)
    
    The `cc` tactic is a high-cost tactic, so I restored `cc` tactics only if a proof can be reduced significantly.
    I made sure that `cc` tactic works on in the all changed proofs except when the other specification changes in Lean 4 changes a goal.
    
    
    
    Co-authored-by: Pol'tta / Miyahara K≈ç <52843868+Komyyy@users.noreply.github.com>

[33mcommit fca6b3ac0bab9ba9118e65c7a98f250ed48a893f[m[33m ([m[1;31morigin/pitmonticone/WithBot[m[33m)[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Sun Jun 23 22:42:52 2024 +0000

    chore(Topology/MetricSpace/PseudoMetric): Split (#13977)
    
    This reduces the long pole.

[33mcommit f2d0448377f4afc03b87ec9c91ddc138e2c0818e[m
Author: Christian Merten <christian@merten.dev>
Date:   Sun Jun 23 21:54:37 2024 +0000

    feat(RingTheory): localization and finiteness (#14054)
    
    We show that `Module.Finite` is preserved under localizations and that if a module is finite after localizing at a spanning set of elements of the ring, it is finite.

[33mcommit cbf2eabcb2e233f901383c9b1e5343e643049fe2[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Sun Jun 23 21:44:03 2024 +0000

    feat(Algebra/Homology): definition of Functor.mapDerivedCategory (#14013)
    
    If `F` is an exact functor between abelian categories, we define the induced functor on the derived categories.

[33mcommit 6cb118db87c56679f363799658f476dc90506d33[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Sun Jun 23 21:33:29 2024 +0000

    feat: the restriction functor on homological complexes (#13991)
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit 1616f72b4a8d0325ff08ebe4b4a9ccd30b90d0ee[m
Author: Shanghe Chen <onriv@outlook.com>
Date:   Sun Jun 23 16:39:46 2024 +0000

    feat: add unitor functor for product of categories (#13663)
    
    left and right unitor functors for product of categories
    
    
    
    Co-authored-by: Shanghe Chen <shanghechen@outlook.com>

[33mcommit 2fc483bd26c843f8a5da8cb52f26ab4b27d8cc14[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Sun Jun 23 16:19:03 2024 +0000

    feat(SpecialFunctions/Log): add extended nonnegative real logarithm (#14018)
    
    This PR adds the `SpecialFunctions/Log/ENNRealLog.lean` file where we define `log` as an extension of the logarithm of a positive real to the extended nonnegative reals `‚Ñù‚â•0‚àû`. The function takes values in the extended reals `EReal`, with `log 0 = ‚ä•` and `log ‚ä§ = ‚ä§`.
    
    Co-authored with @D-Thomine.

[33mcommit 41c8f830e95264cd8d2f016dec2e3ea02481901f[m
Author: Calle S√∂nne <calle.sonne@gmail.com>
Date:   Sun Jun 23 15:38:30 2024 +0000

    feat(FiberedCategory/BasedCategory): add bicategory of based categories (#13545)
    
    We define the strict bicategory of based categories. Its objects are categories equipped with a functor to some fixed base-category. The strict bicategory of fibered categories will later be built on top of this one.
    
    Co-authored-by: Paul Lezeau [paul.lezeau@gmail.com](mailto:paul.lezeau@gmail.com)

[33mcommit 5c12fd768f447923381e6f4eb27b065364e09b31[m
Author: Jujian Zhang <jujian.zhang1998@outlook.com>
Date:   Sun Jun 23 14:59:28 2024 +0000

    feat(Geometry/RingedSpace/OpenImmersion): make `IsOpenImmersion` instance (#14050)

[33mcommit 1ca543030346118f1834ea9ff815d6e91a28c6d2[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Sun Jun 23 12:43:41 2024 +0000

    feat: rewrite the copyright header check in Lean (#13240)
    
    This is one in a series of PRs rewriting most checks from `lint-style.py` in Lean.
    This PR moves the check for copyright headers and authors: the check has been rewritten anew (and is hopefully simpler to understand now); this has made it stricter in various places. The necessary adjustments have been made in #13212 and #13247.
    
    This PR also adds a `nolints` file for text-based linters.

[33mcommit 4e1840add869625e64e98c922750ab172d21e21f[m
Author: Luigi Massacci <luigi.massacci.it@gmail.com>
Date:   Sun Jun 23 12:16:22 2024 +0000

    feat(Analysis/MeanInequalities): HM-GM inequality (#13721)
    
    We derive the inequality between the harmonic and geometric mean as a consequence of AM-GM for positive real valued functions from a `Finset`. We state a weighted as well as the classical version.

[33mcommit a6a6c6bacf8c8dad34efd1d73929ff18744f63c8[m
Author: Rida Hamadani <mridahamadani@gmail.com>
Date:   Sun Jun 23 11:05:29 2024 +0000

    chore(Data/ENat): unbundle `ENat.toNat` (#13936)
    
    This will allow us to write `n.toNat` instead of `ENat.toNat n`

[33mcommit 7cac44b5d262db60fc8fa1093e5ba4e66ffa0373[m
Author: damiano <adomani@gmail.com>
Date:   Sun Jun 23 08:02:27 2024 +0000

    cleanup: remove `summarize_declarations` and tooling for `move-decls` (#14047)
    
    This PR cleans up the tooling around the `move-decls` label that is now obsolete, thanks to the new `PR summary` comment on PRs.
    
    Here is a short description of what the removed code did:
    * the `summarize_declarations` CI step produced a formatted output of `./scripts/no_lost_declarations` that I suspect no one except for me ever looked at;
    * `.github/workflows/move_decl.yaml` is the (working) action that adds the output of `./scripts/no_lost_declarations short` to the PR as a comment -- this has been made obsolete by the `PR summary` comment;
    * `.github/workflows/move_decl_comment.yml` is a (failed) action that should have posted the short diff on all PRs, but never actually worked -- besides being broken, this has also been made obsolete by the `PR summary` comment.

[33mcommit ca9e9db115e3be073fd4072551e646990c1ca24b[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Sun Jun 23 07:52:07 2024 +0000

    feat(lint-style): fix `update-style-exceptions.py`; produce human-readable output by default (#14012)
    
    - Fix the output of `update-style-exceptions.py` by making `lake exe lint_style` optionally produce output in the right format: this regressed in #13620
    - The current error messages are tailored for github annotations, which are not very readable for running the linter locally. Produce a human-readable and clickable error by default, but add a flag (which CI sets) for producing github-style output.
    
    This entails adding a small CLI for the lint-style executable.

[33mcommit 756e653793d42719b332f77a3f0fe008939e7657[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Sun Jun 23 06:39:04 2024 +0000

    chore: split some results out of Analysis.Normed.Group.Basic (#14035)
    
    This flips the longest pole back to ring theory / linear algebra.

[33mcommit 92377b4d13c739dc9c0bf6419c537695a783b173[m
Author: Jujian Zhang <jujian.zhang1998@outlook.com>
Date:   Sun Jun 23 05:04:34 2024 +0000

    chore(AlgebraicGeometry/OpenImmersion): resolve some outdated porting note (#14037)
    
    
    
    
    Co-authored-by: zjj <j.jj@j.jj>

[33mcommit 8ca314116d1ae0e908c2a57d9840866059536360[m
Author: Fr√©d√©ric Dupuis <dupuisf@iro.umontreal.ca>
Date:   Sun Jun 23 01:13:07 2024 +0000

    feat(ContinuousFunctionalCalculus): add lemmas about the CFC applied to finite sums (#13842)
    
    
    
    Co-authored-by: Fr√©d√©ric Dupuis <31101893+dupuisf@users.noreply.github.com>

[33mcommit 618674590feb59da107895fab7576eb69796db11[m[33m ([m[1;31morigin/zjj/missing_lemmas[m[33m)[m
Author: Jon Eugster <eugster.jon@gmail.com>
Date:   Sat Jun 22 19:24:47 2024 +0000

    chore(LinearAlgebra/TensorProduct/Tower): remove superfluous porting notes (#13987)

[33mcommit 78e28c0c005576a18354ecbabd3506bbc48cf810[m
Author: Peter Nelson <71660771+apnelson1@users.noreply.github.com>
Date:   Sat Jun 22 19:24:46 2024 +0000

    feat(SimpleGraph/Clique): maps of cliques (#12820)
    
    We add some API for cliques in maps of graphs.
    
    
    
    Co-authored-by: Rida Hamadani <mridahamadani@gmail.com>

[33mcommit 2985a848ad78dc5deda3530e84e17c834cd7c8f7[m
Author: Jeremy Tan Jie Rui <reddeloostw@gmail.com>
Date:   Sat Jun 22 19:13:46 2024 +0000

    feat: forward direction of Tur√°n's theorem (#11990)
    
    Part of #9317.

[33mcommit e4a15fb24957249959de6425ee315240575b158b[m
Author: Andrew Yang <the.erd.one@gmail.com>
Date:   Sat Jun 22 15:35:57 2024 +0000

    refactor(AlgebraicGeometry) Add notation `Œì(X, U)`. (#14025)
    
    
    
    
    Co-authored-by: Andrew Yang <36414270+erdOne@users.noreply.github.com>

[33mcommit 5c1bf5e7e26c6b1e9ea246331b58d23e4d0a991c[m
Author: Andrew Yang <the.erd.one@gmail.com>
Date:   Sat Jun 22 13:56:49 2024 +0000

    chore(AlgebraicGeometry): Fix wrong names (#14021)
    
    `PrimeSpectrum.IsPrime` -> `PrimeSpectrum.isPrime`
    `PrimeSpectrum.vanishingIdeal_univ` -> `PrimeSpectrum.vanishingIdeal_empty`
    `isAffineAffineScheme` -> `isAffine_affineScheme`
    `SpecIsAffine` -> `isAffine_Spec`
    `isAffineOfIso` -> `isAffine_of_isIso`
    `rangeIsAffineOpenOfOpenImmersion` -> `isAffineOpen_opensRange`
    `topIsAffineOpen` -> `isAffineOpen_top`
    `Scheme.affineCoverIsAffine` -> `Scheme.isAffine_affineCover`
    `Scheme.affineBasisCoverIsAffine` -> `Scheme.isAffine_affineBasisCover`
    `IsAffineOpen.fromSpec_range` -> `IsAffineOpen.range_fromSpec`
    `IsAffineOpen.imageIsOpenImmersion` -> `IsAffineOpen.image_of_isOpenImmersion`
    `Scheme.quasi_compact_of_affine` -> `Scheme.compactSpace_of_isAffine`
    `IsAffineOpen.fromSpec_base_preimage` -> `IsAffineOpen.fromSpec_preimage_self`
    `IsAffineOpen.fromSpec_map_basicOpen'` -> `IsAffineOpen.fromSpec_preimage_basicOpen'`
    `IsAffineOpen.fromSpec_map_basicOpen` -> `IsAffineOpen.fromSpec_preimage_basicOpen`
    `IsAffineOpen.opensFunctor_map_basicOpen` -> `IsAffineOpen.fromSpec_image_basicOpen`
    `IsAffineOpen.basicOpenIsAffine` -> `IsAffineOpen.basicOpen`
    `IsAffineOpen.mapRestrictBasicOpen` -> `IsAffineOpen.ŒπOpens_preimage`
    `AffineTargetMorphismProperty.IsLocal.targetAffineLocallyIsLocal` -> `AffineTargetMorphismProperty.IsLocal.targetAffineLocally_isLocal`
    `AffineTargetMorphismProperty.IsLocal.targetAffineLocallyPullbackFstOfRightOfStableUnderBaseChange` -> `AffineTargetMorphismProperty.IsLocal.targetAffineLocally_pullback_fst_of_right_of_stableUnderBaseChange`
    `diagonalTargetAffineLocallyOfOpenCover` -> `diagonal_targetAffineLocally_of_openCover`
    `AffineTargetMorphismProperty.diagonalOfTargetAffineLocally` -> `AffineTargetMorphismProperty.diagonal_of_targetAffineLocally`
    `universallyIsLocalAtTarget` -> `universally_isLocalAtTarget`
    `universallyIsLocalAtTargetOfMorphismRestrict` -> `universally_isLocalAtTarget_of_morphismRestrict`
    `bot_isAffineOpen` -> `isAffineOpen_bot`
    `isOpenImmersion_is_local_at_target` -> `isOpenImmersion_isLocalAtTarget`
    `QuasiCompact.is_local_at_target` -> `QuasiCompact.isLocalAtTarget`
    `QuasiSeparated.is_local_at_target` -> `QuasiSeparated.isLocalAtTarget`
    `universallyClosed_is_local_at_target` -> `universallyClosed_isLocalAtTarget`
    `isReducedOfStalkIsReduced` -> `isReduced_of_isReduced_stalk`
    `stalk_isReduced_of_reduced` -> `isReduced_stalk_of_isReduced`
    `isReducedOfOpenImmersion` -> `isReduced_of_isOpenImmersion`
    `isReducedOfIsAffineIsReduced` -> `isReduced_of_isAffine_isReduced`
    `isReducedOfIsIntegral` -> `isReduced_of_isIntegral`
    `is_irreducible_of_isIntegral` -> `irreducibleSpace_of_isIntegral`
    `isIntegralOfIsIrreducibleIsReduced` -> `isIntegral_of_irreducibleSpace_of_isReduced`
    `isIntegral_iff_is_irreducible_and_isReduced` -> `isIntegral_iff_irreducibleSpace_and_isReduced`
    `isIntegralOfOpenImmersion` -> `isIntegral_of_isOpenImmersion`
    `isIntegralOfIsAffineIsDomain` -> `isIntegral_of_isAffine_of_isDomain`

[33mcommit e19c07e6753d1d2844a1849a0077a6c9ad2d8676[m
Author: Ga√´tan Serr√© <gaetan.serre@ens-paris-saclay.fr>
Date:   Sat Jun 22 12:48:31 2024 +0000

    feat(MeasureTheory/Function/ConditionalExpectation): relax `integral_condexp` assumption and add `integral_condexp_indicator` (#13932)
    
    Remove the `Integrable` assumption of `integral_condexp` and add the total probability law using `condexp` as conditional probability.
    
    
    
    
    Co-authored-by: Ga√´tan Serr√© <56162277+gaetanserre@users.noreply.github.com>

[33mcommit eb89176fcdea78ebc70f2033cae58d4a510461f3[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sat Jun 22 09:56:28 2024 +0000

    feat(*): add lemmas about `(_ : UniformSpace _) = ‚ä•` (#13481)

[33mcommit ca53aab4db182b0f3b5b23989903e2e212129474[m
Author: Christian Merten <christian@merten.dev>
Date:   Sat Jun 22 09:37:04 2024 +0000

    feat: unramified, smooth, etale are stable under base change (#14020)

[33mcommit ab0de47a15970636867ab3bea74476a1264ffbb2[m
Author: Fabrizio Barroero <fbarroero@gmail.com>
Date:   Sat Jun 22 09:09:18 2024 +0000

    feat(NumberTheory/SiegelsLemma): Siegel's lemma for small integral non-trivial solutions of linear systems (#13487)
    
    This PR contains the proof of [Siegel's Lemma](https://en.wikipedia.org/wiki/Siegel%27s_lemma).
    This is a fundamental tool in diophantine approximation and transcendency and says that there exists a "small" integral
    non-zero solution of a non-trivial underdetermined system of linear equations with integer coefficients.
    
    theorem `exists_ne_zero_int_vec_norm_le`: Given a non-singular `m √ó n` matrix `A` with `m < n` the linear
    system it determines has a non-zero integer solution `t` with
    `‚Äñt‚Äñ ‚â§ ((n * ‚ÄñA‚Äñ) ^ ((m : ‚Ñù) / (n - m)))`
    
    [Zulip thread](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Siegel's.20Lemma)
    
    Co-authored-by: Laura Capuano and Amos Turchet @amosturchet

[33mcommit 23725d3c75b6d2eca0ec17d66cdc65ea9b924b47[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Fri Jun 21 21:56:38 2024 +0000

    chore: deprecate AlgEquiv.map_* lemmas (#14005)
    
    These are redundant.

[33mcommit b732d172c8df80627afffffc71306d0db599d617[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Fri Jun 21 18:31:03 2024 +0000

    feat: more matrix lemmas about `37 : Matrix n n R` etc (#13976)
    
    This extends the lemmas about `zero` and `one` in this file to lemmas about `ofNat`, `natCast`, and `intCast`.

[33mcommit 2176d73b65eb67441c3b37e5df6eeab0f75b105b[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Fri Jun 21 17:41:59 2024 +0000

    chore: add `IsRegular.mul` (#14010)
    
    This matches `IsLeftRegular.mul` and `IsRightRegular.mul`, and was already inside another proof.

[33mcommit 0be623aea6bb26c71a0af9a28c9e1c4722653422[m
Author: Xavier Roblot <roblot@math.univ-lyon1.fr>
Date:   Fri Jun 21 12:03:49 2024 +0000

    feat: Define the regulator of a number field  (#12504)
    
    This PR defines the regulator of a number field `K` as the covolume of its `unitLattice K`. Basic results about the regulator are proved including the fact that it is equal to the absolute value of the matrix with entries `mult w * Real.log w (fundSystem K i)` where `fundSystem K` is the fundamental system of units and `w` runs through all the infinite places of `K` but one.

[33mcommit 00d112fb17411751fb85ca3ba230ab87bbb413d4[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Fri Jun 21 07:01:21 2024 +0000

    feat: rewrite file length check in Lean (#13620)
    
    This is the first in a series of PRs rewriting most checks from `lint-style.py` in Lean.
    This PR sets up the basic infrastructure and ports the check for files longer than 1500 lines.
    This includes parsing `style-exceptions.txt`.
    
    To enable a gradual conversion of the linters, this PR adds a new executable `lint_style` (which runs the rewritten linters), and has `lint-style.sh` call this one also.

[33mcommit 2399abd409440f76f8ab92852d376ee930697f8d[m
Author: Kim Morrison <kim@tqft.net>
Date:   Fri Jun 21 01:35:17 2024 +0000

    chore: install elan in update dependencies CI (#14011)

[33mcommit 19f8cc69f95fdcfea6db28055016c41be28791ed[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Thu Jun 20 19:07:48 2024 +0000

    chore: move some lemmas to Analysis.Normed.Group.Uniform (#13945)
    
    From #13713.
    
    Co-authored-by: Ya√´l Dillies <yael.dillies@gmail.com>

[33mcommit 99cf0930154a8fcb0f99939b7d63b3f4e7c3b6e3[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Thu Jun 20 17:25:07 2024 +0000

    feat: `0 < c * a * star c` in `StarOrderedRing`s (#13975)
    
    This is a prerequisite for showing when diagonal matrices are positive definite.
    
    Missed from #13748

[33mcommit d48b0c68ff57c1af7df69d428a6afb327a842073[m
Author: Jon Eugster <eugster.jon@gmail.com>
Date:   Thu Jun 20 16:11:53 2024 +0000

    chore: drop porting notes about nonrec (#13767)

[33mcommit 97feccd37fa3afcc71fe01e992caa02ca7bb8afd[m
Author: Kim Morrison <kim@tqft.net>
Date:   Thu Jun 20 16:01:24 2024 +0000

    chore: remove unnecessary @[simps] (#13980)
    
    This `@[simps]` is apparently unnecessary, and on a nightly generates lemmas that the linter doesn't like, so just remove it.

[33mcommit e5ebb89f2aea39025b59278da7abd118b1474c24[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Thu Jun 20 13:50:21 2024 +0000

    chore/perf(AlgebraGeometry): replace continuity -> fun_prop (#13993)

[33mcommit ee04fe41a33860b3dbdedc281fed74bdcf4f0db9[m
Author: Jon Eugster <eugster.jon@gmail.com>
Date:   Thu Jun 20 12:41:36 2024 +0000

    chore: address some porting notes about unification (#13986)
    
    These few porting notes about weaker unification seem to be working reasonably.

[33mcommit a6fc8cb4fbcda16a2852dd157f9ae85e30d92945[m
Author: Jon Eugster <eugster.jon@gmail.com>
Date:   Thu Jun 20 12:08:01 2024 +0000

    feat(Data/Matrix/RowCol): generalise the `Unique` indexing type in `Matrix.row` and `Matrix.col` (#11536)
    
    Changing `Matrix.row` and `Matrix.col` to use arbitrary `Unique` type for indexing the single column/row.
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>
    Co-authored-by: Parcly Taxel <reddeloostw@gmail.com>

[33mcommit 2dec5ec3be6dddd40de48219878e61311c146504[m
Author: Floris van Doorn <fpvdoorn@gmail.com>
Date:   Thu Jun 20 11:13:44 2024 +0000

    fix: linter panics on export without argument (#13985)
    
    MWE:
    ```lean
    import Mathlib.Tactic.Linter.Lint
    export
    ```
    This PR fixes the panic.

[33mcommit b142583f50bdaa5ba595320863b81a48a68f8d84[m
Author: Jujian Zhang <jujian.zhang1998@outlook.com>
Date:   Thu Jun 20 10:39:58 2024 +0000

    chore(Algebra/Homology/ExactSequence): typo (#13958)

[33mcommit 899eac57640470405edfbad37a81a6e5709fcbed[m
Author: Filippo A. E. Nuccio <filippo.nuccio@univ-st-etienne.fr>
Date:   Thu Jun 20 10:39:57 2024 +0000

    docs(Ideal/QuotientOperations): remove an extra-star denoting a ring homomorphism (#13954)
    
    Correct the doc of `Ideal.quotientEquiv` removing a spurious star.

[33mcommit c6b786e2cccb25b3085297db2cfaa28288f44e84[m
Author: damiano <adomani@gmail.com>
Date:   Thu Jun 20 09:54:47 2024 +0000

    chore: remove unnecessary `nolint simpNF`s (#13982)
    
    This arose in the context of [this Zulip discussion](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/dsimpNF/near/445455876).
    
    See also
    * #13889 for a previous hand-made version;
    * #13970 for the automatic detection of unnecessary `nolint simpNF`s, (at least locally unnecessary).

[33mcommit 590cd14cc2c686385a3115e3658a87d79247f71c[m
Author: Jon Eugster <eugster.jon@gmail.com>
Date:   Thu Jun 20 09:54:46 2024 +0000

    chore: remove porting note about adding `set_option linter.uppercaseLean3 false` (#13766)

[33mcommit e470560d5ed26a7f0cdb5fff31e2dad43a465a92[m
Author: Joseph Myers <jsm@polyomino.org.uk>
Date:   Thu Jun 20 09:12:19 2024 +0000

    feat(GroupTheory/GroupAction/Basic): orbit lemmas for product (#13580)
    
    Add a few basic lemmas about orbits in relation to the action of a monoid or group on `Œ± √ó Œ≤` induced by its actions on `Œ±` and `Œ≤`.
    
    From AperiodicMonotilesLean.

[33mcommit 7c80fcc7d539578394dac22e7d27bbe7df1602e3[m
Author: Junyan Xu <junyanxumath@gmail.com>
Date:   Thu Jun 20 07:22:13 2024 +0000

    chore: split RingTheory/Kaehler (#13978)
    
    Put materials about (Mv)Polynomial into Kaehler/Polynomial and the others into Kaehler/Basic

[33mcommit 6e82bc0ead9d29d54415766adaea347abe254c48[m
Author: Peter Nelson <71660771+apnelson1@users.noreply.github.com>
Date:   Thu Jun 20 03:32:53 2024 +0000

    feat(Order/Maximal): maximality/minimality with insertion/removal for sets (#13638)
    
    We add a lemma showing that if `P` is a downwards-closed predicate on sets, then `s` is maximal w.r.t. `P`
    iff `s` has property `P` but no proper insertion of `s` has property `P`. We also add the dual lemma for single removals and upwards-closed predicates.

[33mcommit 9ddf87eec3a22486b84ffaeb3cdad62ea3fe3ea0[m
Author: Kim Morrison <kim@tqft.net>
Date:   Thu Jun 20 03:21:12 2024 +0000

    chore(CategoryTheory/Monoidal/Comon_): cleanup (#13316)
    
    
    
    Co-authored-by: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>

[33mcommit 2e6f6dff0e3e5ea6b97bca1a10ebab73bd8131a7[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Thu Jun 20 02:11:25 2024 +0000

    chore: Rename to `Grp` (#3731)
    
    This is a proposal to rename what was in mathlib `Group` and in mathlib4 `GroupCat` to its literature name `Grp`. This has the advantage not to conflict with `group` that has been capitalised to `Group` and to be shorter.

[33mcommit 4bf28bb810dfc4c4a52ecd2acb399a6108a5d16e[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Wed Jun 19 20:15:55 2024 +0000

    chore: remove 'new lemma' comments (#13820)
    
    These are not actionable anymore (if they ever were).
    
    Fixes #10756.

[33mcommit feba7083215c280aeda7173e3013e2e61177f4ee[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Wed Jun 19 18:17:28 2024 +0000

    chore(CategoryTheory/Adjunction): dualize some of the API for reflective functors (#13948)

[33mcommit 1e77bedde85e739d43839400aa75b691dabdf2c8[m
Author: Andrew Yang <the.erd.one@gmail.com>
Date:   Wed Jun 19 15:38:58 2024 +0000

    chore(AlgebraicGeometry/OpenImmersion): Move open covers to its own file. (#13942)

[33mcommit 4dcf21f6aeed4f8d07f7382f7a841eb08e9929eb[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Wed Jun 19 15:38:57 2024 +0000

    refactor(Topology/Category): add CompHausLike.Basic (#13904)
    
    This is the first part of the refactor of `CompHaus`¬†and friends (adding the new API which will eventually be used to redefine  the categories of compact Hausdorff spaces, see #12930)

[33mcommit 38f6b3f50141ae5562d434eb684445894dbdb63e[m
Author: Jujian Zhang <jujian.zhang1998@outlook.com>
Date:   Wed Jun 19 15:28:37 2024 +0000

    feat(AlgebraicGeometry/ProjectiveSpectrum/Scheme): add the instance `IsLocalization` (#13933)
    
    If `x` is a point in the basic open set `D(f)` where `f` is a homogeneous element of positive
    degree, then the homogeneously localized ring `A‚Å∞‚Çì` has the universal property of the localization
    of `A‚Å∞_f` at `œÜ(x)` where `œÜ : Proj|D(f) ‚ü∂ Spec A‚Å∞_f` is the morphism of locally ringed space
    constructed as above.
    
    
    Co-authored-by: Andrew Yang <the.erd.one@gmail.com>
    
    
    
    
    Co-authored-by: zjj <j.jj@j.jj>

[33mcommit 9f09963d772250110432791883fcae33e4eb6f3b[m
Author: Kim Morrison <kim@tqft.net>
Date:   Wed Jun 19 14:17:23 2024 +0000

    chore: remove @[simp] from List.join (#13888)
    
    Unnecessary, and unhelpful.

[33mcommit 63b99cae5ea714baa36709508ebea288d715735b[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Wed Jun 19 13:47:55 2024 +0000

    feat: `f‚Åª¬π` is continuous iff `f` is (#13951)
    
    ... and similar results for lipschitzness.
    
    From LeanCamCombi

[33mcommit c59e5958e567ab222b5f9c45c46ca4438e219f4b[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Wed Jun 19 12:59:15 2024 +0000

    chore: replace `continuity` by `fun_prop`, easy cases (#13880)
    
    Inspired by #12661: let's start with some easy instances, so we can focus on the difficult ones.
    
    In particular, this PR does not depend on any in-progress bugfixes, not tries to change a default value `by continuity` to `by fun_prop`.
    
    I am not at all confident about the tagging of lemmas with fun_prop: I remember this being subtle, but can't find any documentation on this. @lecopivo Can you advise on these lemmas (or simply link to the right documentation if I just overlooked it)?

[33mcommit 435827ab492995e207dcd87fe92753a031ea9916[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Wed Jun 19 11:58:05 2024 +0000

    chore: reduce use of `mono` in favour of `gcongr` (#13881)
    
    ... as was discussed on zulip the other day; I cannot find the link quickly.
    After this PR, a handful of uses remain which are harder to remove: [this branch](https://github.com/leanprover-community/mathlib4/compare/MR-mono-gcongr) comments them all

[33mcommit b6c1b896e3150562ae90afb0437fd10e7f5deadd[m
Author: Geoffrey Irving <irving@naml.us>
Date:   Wed Jun 19 11:32:52 2024 +0000

    feat: add a few analytic function lemmas for future AnalyticManifold use (#13784)
    
    This is a few isolated lemmas split out of
    https://github.com/leanprover-community/mathlib4/pull/10853.
    
    1. AnalyticAt.comp_of_eq
    2. FormalMultilinearSeries.zero_radius
    3. constFormalMultilinearSeries_zero

[33mcommit 1e61e0603128649bc6b4bdd4d5e883c9d69412ce[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Wed Jun 19 11:32:50 2024 +0000

    feat: lint on isolated where and leading by (#13420)
    
    Extend the style linter with two tiny features:
    - lint on "isolated where": all occurrences were already fixed in #12991 and #13202.
    - lint on "leading by": if one line starts with `by ` but the previous line ends with `:=`, according to the style guide the `by` should move to the previous line. For now, we only lint if the `by` fits on the previous line (fixed in #13618 and predecessors): there about other 28 cases in mathlib which don't have an obvious fix.

[33mcommit 94b26e85a8104de16731344fc68dc5a8895e88ed[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Wed Jun 19 10:33:47 2024 +0000

    fix: correct InfoTree on the `set` tactic (#13913)
    
    Without this change, the infoview gives
    ```
    Error updating: Error fetching goals: Rpc error: InternalError: unknown free variable '_fvar.231'
    ```
    when you hover over the variable name

[33mcommit d398305470f72dcf639911b96b6ec2d4131a621e[m
Author: Mario Carneiro <mcarneir@andrew.cmu.edu>
Date:   Wed Jun 19 10:33:45 2024 +0000

    fix: support more parsers in `#help` (#12287)
    
    As [reported on Zulip](https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/missing.20doc.20of.20.60.23check_failure.60/near/434466058), the `#help` command is out of date with respect to the parsers that can be obscuring the search for the "first token", used to power the search-by-token-prefix form of the command `#help tactic "measur"`. The list below has been tested against everything in lean, and the only things that fail to find a first token now are those that actually don't have a token like the ident parser.
    
    
    
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>

[33mcommit 941891c500aa7348c6e495fd0d7f0ec30dd6732a[m
Author: Anne Baanen <vierkantor@vierkantor.com>
Date:   Wed Jun 19 10:33:44 2024 +0000

    feat: add `reduce_mod_char!` variant that searches through hypotheses (#11478)
    
    I won't have a lot of time to work on this PR until April, so please feel free to take it over before then.
    
    I initially wanted to use `synthInstance` rather than `findLocalDeclWithType?` but because `n` is not an outParam in `CharP R n`, the typeclass system won't work unless we know the value of `n` already.
    
    Perhaps `findLocalDeclWithType?` is cheap enough to make this part of standard `reduce_mod_char` behaviour. I'd like to profile our usecases to find out if indeed this holds when expressions become much more complicated.
    
    Zulip thread: https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/reduce_mod_char.20doesn't.20work
    
    
    
    
    Co-authored-by: Rob Lewis <Rob.y.lewis@gmail.com>

[33mcommit 572940c6e59d74731ddf3cdb086a82806e47a925[m
Author: David Loeffler <d.loeffler.01@cantab.net>
Date:   Wed Jun 19 09:36:30 2024 +0000

    chore: Split large file `MeasureTheory.MeasurableSpace.Basic` (#13937)

[33mcommit ebcc078f5277392a50e40eec4ddd79e4f0e8b74d[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Jun 19 09:36:29 2024 +0000

    chore(Topology): golf, move (#13935)
    
    Golf and move `Prod.instNeBotNhdsWithinIio` etc.

[33mcommit c5d16516d07d6164929834a9a768285d40c3ed88[m
Author: Lorenzo Luccioli <lorenzoluccioli@gmail.com>
Date:   Wed Jun 19 09:36:28 2024 +0000

    doc(Analysis/Convex/Slope) : fix a typo, add docstrings (#13929)
    
    - Fix a typo in the docstrings (`[x, z]` instead of `[y, z]`). Happens multiple times in the file.
    - Add docstrings for `ConvexOn.secant_mono`, `StrictConvexOn.secant_strict_mono` and `StrictConcaveOn.secant_strict_mono`.
    - Remove a `show` tactic. It was added during the porting, but it seems that it is no longer needed. Happens twice.

[33mcommit 9b3f65a2c87490c8870a64c7129be9d120745865[m
Author: grhkm21 <grhkm21@gmail.com>
Date:   Wed Jun 19 09:36:27 2024 +0000

    feat(Algebra/Polynomial/RingDivision): Add and simplify some lemmas (#13866)
    
    Add `natDegree_pos_of_monic_of_ne_one` lemma which has a rather simple proof, and deduce the other lemmas from that.
    
    
    
    Co-authored-by: grhkm21 <83517584+grhkm21@users.noreply.github.com>

[33mcommit 65a2e4e9775a46a6b520e13c8732e9ec46adf615[m
Author: Peter Nelson <71660771+apnelson1@users.noreply.github.com>
Date:   Wed Jun 19 09:36:26 2024 +0000

    feat(Data/Set/Function): extending bijectivity to supersets (#13692)
    
    the lemmas `exists_subset_bijOn` and similar show that for a function `f : Œ± ‚Üí Œ≤` and a set `t : Set Œ≤` contained in the range of `f`, we can choose a set `s` that `f` maps bijectively to `t`. We add a few lemmas stating that, under appropriate hypotheses, we can choose such an `s` to contain and/or be contained in prescribed sets in `Œ±`.

[33mcommit 74ac0bf1cce996ff92fafe027732306ebe0d9e36[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Wed Jun 19 09:36:25 2024 +0000

    doc(Data/Fin/Tuple/Basic): Compare start/end/middle addition of an entry in module doc (#13567)
    
    Definitions around adding an entry to a `Fin`-indexed tuple are a mess. This PR documents the mess so that it's easier to fix in a later PR.

[33mcommit 85915c8cc186deb4cebae987cfda652766470e18[m
Author: chancenahuway <chancenahuway@icloud.com>
Date:   Wed Jun 19 09:36:23 2024 +0000

    feat(Data/Matrix/ColumnRowPartitioned): add two negation lemmas (#13520)
    
    add two negation lemmas which state that negating a matrix partitioned by rows/columns is equivalent to negating each row/column of the matrix
    
    
    
    Co-authored-by: chancenahuway <138585859+chancenahuway@users.noreply.github.com>

[33mcommit 46c501f80d0b107783a0e06b2fbcc35f7fba982a[m
Author: FR <zhao.yu-yang@foxmail.com>
Date:   Wed Jun 19 09:36:22 2024 +0000

    chore(Algebra/Order/Monoid/Defs): remove unused instances (#13466)
    
    We do not need them in Lean4.

[33mcommit d0bf6bb46c0418fee9305817bacce3d4217ef1b5[m
Author: Scott Carnahan <128885296+ScottCarnahan@users.noreply.github.com>
Date:   Wed Jun 19 09:36:21 2024 +0000

    fix (RingTheory/HahnSeries/Multiplication) : rm defeq abuse in SMul instance (#13450)
    
    This PR replaces `y` with `((of R).symm y)` in 6 places, so that functions that take Hahn series are given Hahn series instead of Hahn modules (which are defeq).

[33mcommit 60fd11f2192638853f522051045393f12301d930[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Wed Jun 19 08:39:57 2024 +0000

    feat: rewrite set_option style linter in lean (#12928)
    
    Unlike the Python version, this script also supports set_option tactics and terms, and we add a couple of tests.

[33mcommit b84002db251bdfe6d7796c16364cfb47fdc9cf95[m
Author: Jon Eugster <eugster.jon@gmail.com>
Date:   Tue Jun 18 19:48:56 2024 +0000

    chore(RingTheory/WittVector/Basic): remove porting notes (#13927)
    
    Remove a couple uncategorised, superfluous porting notes.

[33mcommit 6f05744dbb8d33fcc571e0a7b035b9b982315b0a[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Tue Jun 18 17:35:11 2024 +0000

    feat: generalize Set.inv_mem_center (#13921)
    
    From #13034.
    
    Co-authored-by: Ya√´l Dillies <yael.dillies@gmail.com>

[33mcommit 3683cd05bdfd69791f8e4c80f6571fc5d1197dea[m
Author: Kim Morrison <kim@tqft.net>
Date:   Tue Jun 18 14:43:56 2024 +0000

    chore(CategoryTheory/Monoidal/Mon_): cleanup (#13310)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 5759ae6242aaad9de9112d3697f5e2b3b280cdb9[m
Author: Jujian Zhang <jujian.zhang1998@outlook.com>
Date:   Tue Jun 18 14:31:19 2024 +0000

    feat(AlgebraicGeometry/ProjectiveSpectrum/Scheme): calculate stalk of `toSpec` map (#13896)
    
    In this PR, we show the newly defined map of locally ringed space`toSpec` agree with the `ProjIsoSpecTopComponent.toSpec` and calculate the stalk map.
    
    Co-authored-by: Andrew Yang <the.erd.one@gmail.com>

[33mcommit 583e17a863e63cac5c7b443d8e511d1dbe6232aa[m
Author: Kim Morrison <kim@tqft.net>
Date:   Tue Jun 18 14:31:17 2024 +0000

    feat(Algebra/Category/CoalgebraCat): minor changes (#13315)
    
    It turns out @101damnations and I had independently written `CoalgebraCat`. She got in first, and I'm happy to use that version but want one more instance.

[33mcommit e5d1d710c107708fa07fe3c3a61cd74fc36ee8fc[m
Author: Kim Morrison <kim@tqft.net>
Date:   Tue Jun 18 14:09:03 2024 +0000

    feat(Monoidal/Types): simp lemmas about the associator in Type (#13136)

[33mcommit 766e2c15ea47f6f7abe22742872085eaa6ec3ae4[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Tue Jun 18 12:53:46 2024 +0000

    feat: Order-connected sets in `‚Ñù‚Åø` are null-measurable (#13633)
    
    Prove that the frontier of an order-connected set in `‚Ñù‚Åø` (with the `‚àû`-metric, but it doesn't actually matter) has measure zero. As a corollary, antichains in `‚Ñù‚Åø` have measure zero.
    
    This is not so trivial as one might think. The proof Kexing and I came up with involves the Lebesgue density theorem.
    
    Partially forward-port leanprover-community/mathlib#16976

[33mcommit 05a03c38a92f1ddfe1288e2eadbbfc8f39da134e[m
Author: Yoh Tanimoto <57562556+yoh-tanimoto@users.noreply.github.com>
Date:   Tue Jun 18 12:22:19 2024 +0000

    feat(Topology/ContinuousFunction/CompactlySupported) bundle the class of compactly supported continuous functions (#12402)
    
    give definitions of the class of compactly supported continuous functions and prove basic properties.
    
    Motivation: This class is most natural for the domain of the Riesz-Markov-Kakutani theorem #12290
    
    I copied [Mathlib.Topology.ContinuousFunction.ZeroAtInfty](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Topology/ContinuousFunction/ZeroAtInfty.html#ZeroAtInftyContinuousMap) and am trying to adapt it to compactly supported functions.
    
    Co-authored-by: sgouezel <sebastien.gouezel@univ-rennes1.fr>

[33mcommit aa2b73340b7683076d5c193d65c23117e6ba7e8f[m
Author: David Renshaw <dwrenshaw@gmail.com>
Date:   Tue Jun 18 10:48:34 2024 +0000

    fix: add missing instantiateMVars in split_ifs (#13916)
    
    Fixes the bug reported on zulip [here](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/split_ifs/near/445173774).

[33mcommit 9a21976b1777dfb270e5df3778719397d9cc6960[m
Author: Kim Morrison <kim@tqft.net>
Date:   Tue Jun 18 08:57:33 2024 +0000

    chore: fix update_dependencies.yml (#13920)

[33mcommit bb955cd6f00fe8aaf3b3e6065d2f8d0517c5a87e[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Jun 18 08:57:32 2024 +0000

    chore(*): drop `bit*_mono` (#13914)

[33mcommit 0fc7ecaae6aa0431b28ff83ade3c5257da9f2f40[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Tue Jun 18 08:57:31 2024 +0000

    chore(Analysis/Normed/Group): Move boundedness lemmas (#13895)
    
    Split a new file `Analysis.Normed.Group.Bounded` off `Analysis.Normed.Group.Basic`. Basically no imports get shaved off in this PR, but it's preparing the way to #13713.

[33mcommit 72ae24be3748ccd7a373ff34699bcea2209f538f[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Tue Jun 18 08:57:29 2024 +0000

    feat: `Irrational ‚àöq` iff `¬¨IsSquare q` for `Nat`/`Int`/`Rat` (#13867)
    
    This enables proofs like
    ```lean
    unseal Nat.sqrt.iter in
    example : Irrational ‚àö24 := by decide
    ```
    
    This also deprecates the old `irrational_sqrt_rat_iff` in favor of the new `irrational_sqrt_ratCast_iff`, which is better-named and -stated.
    
    [Zulip](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Why.20is.20proof.20the.20root.202.20is.20irrational.20so.20long.3F/near/444315500) motivation.

[33mcommit c592474788ecf89b992c7a1350877a5b945cd898[m
Author: Alex Keizer <alex@keizer.dev>
Date:   Tue Jun 18 08:57:28 2024 +0000

    refactor: change MvQPF to use bundled inheritance (#5452)
    
    
    There is a clear hierarchy of the type classes that apply to multivariate type functions `(F : TypeVec n -> Type)`. Namely, every `MvQPF` is a `LawfulMvFunctor` and every `LawfulMvFunctor` is a `MvFunctor`.
    
    This commit changes to use bundled inheritance (i.e., `extends`) for `MvQPF`, so that we don't have to repeat the `[MvFunctor F]` assumption every time we want `[MvQPF F]`

[33mcommit 79423dc5b7ad72295e75e1bf02894d76bce20cb4[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Tue Jun 18 08:07:41 2024 +0000

    feat(List): Miscellaneous lemmas (#13824)
    
    From LeanCamCombi

[33mcommit edd8186c6d727b02e13b0ed3a1181b3fab67df10[m
Author: Calle S√∂nne <calle.sonne@gmail.com>
Date:   Tue Jun 18 06:24:15 2024 +0000

    feat(FiberedCategory/Cartesian): define cartesian morphisms (#13393)
    
    We define cartesian morphisms with respect to a functor `p : ùí≥ ‚•§ ùíÆ`, as in SGA 1 VI 5.1. We also provide some basic API for working with the universal property.
    
    Co-authored-by: Paul Lezeau <paul.lezeau@gmail.com>

[33mcommit 27c6744e1c0e25d676be5eb252cd4b6d30c6acc7[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Tue Jun 18 04:39:50 2024 +0000

    chore: delete duplicate `variable` (#13915)

[33mcommit 1db89cb519e4bdabe13b561458d1648d20bfb9ac[m
Author: Jz Pan <acme_pjz@hotmail.com>
Date:   Tue Jun 18 00:39:27 2024 +0000

    feat: add definition of opposite of subsemirings, subrings, and subalgebras (#12846)
    
    similar to that in `Mathlib.Algebra.Group.Subgroup.MulOpposite`

[33mcommit ae4167de90c3665843a3f997bb8361e109f99751[m
Author: damiano <adomani@gmail.com>
Date:   Mon Jun 17 21:56:29 2024 +0000

    feat: technical debts compare to previous week (#13892)
    
    Adds a comparison with the statistics on the version of mathlib from the previous week.
    
    Also renames `tech_debt_counters` to `tech_debt_metrics`.
    
    [Zulip discussion](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Technical.20Debt.20Counters/near/445055463)
    
    Right now, it reports the following:
    
    |Current number|Change|Type|
    |-:|:-:|:-|
    |7324|-28|porting notes|
    |51|0|backwards compatibility flags|
    |90|1|skipAssignedInstances flags|
    |141|-1|adaptation notes|
    |364|5|disabled simpNF lints|
    |168|-12|disabled deprecation lints|
    |1936|3|erw|
    |961|0|documentation nolint entries|
    |30|0|missing module docstrings|
    |95|0|large files|
    |147|-4|non-test files with autoImplicit true|
    |41|0|`Init` files|
    |5326|-3|total LoC in `Init` files|
    
    <details><summary>
    
    Changed 'Init' lines by file
    
    </summary>
    
    |LoC|Change|File|
    |-:|:-:|-|
    |489|0|Mathlib/Init/Algebra/Classes.lean|
    |248|-1|Mathlib/Init/Align.lean|
    |14|0|Mathlib/Init/Classes/Order.lean|
    |37|0|Mathlib/Init/Classical.lean|
    |85|0|Mathlib/Init/Control/Combinators.lean|
    |264|0|Mathlib/Init/Control/Lawful.lean|
    |172|0|Mathlib/Init/Core.lean|
    |19|-1|Mathlib/Init/Data/Bool/Basic.lean|
    |154|-3|Mathlib/Init/Data/Bool/Lemmas.lean|
    |12|0|Mathlib/Init/Data/Buffer/Parser.lean|
    |27|0|Mathlib/Init/Data/Fin/Basic.lean|
    |122|-1|Mathlib/Init/Data/Int/Basic.lean|
    |15|-1|Mathlib/Init/Data/Int/DivMod.lean|
    |18|-2|Mathlib/Init/Data/Int/Lemmas.lean|
    |100|0|Mathlib/Init/Data/Int/Order.lean|
    |70|2|Mathlib/Init/Data/List/Basic.lean|
    |65|0|Mathlib/Init/Data/List/Instances.lean|
    |182|-1|Mathlib/Init/Data/List/Lemmas.lean|
    |44|0|Mathlib/Init/Data/Nat/Basic.lean|
    |14|0|Mathlib/Init/Data/Nat/Div.lean|
    |132|0|Mathlib/Init/Data/Nat/GCD.lean|
    |721|0|Mathlib/Init/Data/Nat/Lemmas.lean|
    |11|0|Mathlib/Init/Data/Nat/Notation.lean|
    |24|0|Mathlib/Init/Data/Option/Basic.lean|
    |16|0|Mathlib/Init/Data/Option/Init/Lemmas.lean|
    |67|0|Mathlib/Init/Data/Option/Lemmas.lean|
    |45|0|Mathlib/Init/Data/Ordering/Basic.lean|
    |61|0|Mathlib/Init/Data/Ordering/Lemmas.lean|
    |12|0|Mathlib/Init/Data/Prod.lean|
    |65|0|Mathlib/Init/Data/Quot.lean|
    |17|0|Mathlib/Init/Data/Rat/Basic.lean|
    |22|0|Mathlib/Init/Data/Sigma/Basic.lean|
    |74|0|Mathlib/Init/Data/Sigma/Lex.lean|
    |252|0|Mathlib/Init/Function.lean|
    |673|3|Mathlib/Init/Logic.lean|
    |27|0|Mathlib/Init/Meta/WellFoundedTactics.lean|
    |469|0|Mathlib/Init/Order/Defs.lean|
    |173|0|Mathlib/Init/Order/LinearOrder.lean|
    |43|0|Mathlib/Init/Quot.lean|
    |222|0|Mathlib/Init/Set.lean|
    |49|2|Mathlib/Init/ZeroOne.lean|
    |5326|-3|total|
    </details>
    
    Current commit [a59524cd3b](https://github.com/leanprover-community/mathlib4/commit/a59524cd3bf72a1f393255869dd580a4c9d7db2d)
    Reference commit [c95c52ea4c](https://github.com/leanprover-community/mathlib4/commit/c95c52ea4cf299397d7771bacfcfcadaf084052b)

[33mcommit 27c7d55a7e402f37218bf8a5334b49b5771ef879[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Jun 17 21:56:28 2024 +0000

    chore: use `SemilinearMapClass` in `Module.Finite.range` (#13863)
    
    This way it automatically applies to `ContinuousLinearMap`s etc.

[33mcommit b83d79b9b7e4cddba1c6c27829a053ecb88e1f08[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Mon Jun 17 20:45:11 2024 +0000

    fix(GetAllModules): sort module names instead of file names (#13854)
    
    Different platforms have different path separators, making the sorting of files by their names platform-dependent.
    This meant the output `mk_all` would depend on which platform it was run on.
    To avoid this, we sort the resulting module names instead

[33mcommit 13d4164aa90d76abf7cec69dec51deafc4e0adc9[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Mon Jun 17 20:45:10 2024 +0000

    fix(test/Lint.lean): re-enable test for duplicate namespaces (#13670)
    
    There is a standard hack for dealing with linters running on #guard_msg themselves - so re-enable the test using it.
    One test broke during the std->batteries rename; fix it.

[33mcommit 5b624694cab93039682b18ba69a1cc08b0331c99[m
Author: Ralf Stephan <ralf@ark.in-berlin.de>
Date:   Mon Jun 17 20:45:09 2024 +0000

    feat(NumberTheory/PrimeCounting): Lemma: The `n`th prime is greater or equal `n + 2`. (#13283)
    
    Possibly useful lemma about the nth prime number.
    
    Co-authored-by: Pol'tta / Miyahara K≈ç <52843868+Komyyy@users.noreply.github.com>
    Co-authored-by: Thomas Browning <tb65536@uw.edu>

[33mcommit 72d08e5f1a15656c46278b10e525499f488790ff[m
Author: Ralf Stephan <ralf@ark.in-berlin.de>
Date:   Mon Jun 17 22:37:57 2024 +0200

    feat(NumberTheory/PrimeCounting): Lemma: The `n`th prime is greater or equal `n + 2`. (#13283)
    
    Possibly useful lemma about the nth prime number.
    
    Co-authored-by: Pol'tta / Miyahara K≈ç
    <52843868+Komyyy@users.noreply.github.com>
    Co-authored-by: Thomas Browning <tb65536@uw.edu>
    
    ---
    <!-- The text above the `---` will become the commit message when your
    PR is merged. Please leave a blank newline before the `---`, otherwise
    GitHub will format the text above it as a title.
    
    To indicate co-authors, include lines at the bottom of the commit
    message
    (that is, before the `---`) using the following format:
    
    Co-authored-by: Author Name <author@email.com>
    
    Any other comments you want to keep out of the PR commit should go
    below the `---`, and placed outside this HTML comment, or else they
    will be invisible to reviewers.
    
    If this PR depends on other PRs, please list them below this comment,
    using the following format:
    - [ ] depends on: #abc [optional extra text]
    - [ ] depends on: #xyz [optional extra text]
    -->
    
    [![Open in
    Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)
    
    ---------
    
    Co-authored-by: Pol'tta / Miyahara K≈ç <52843868+Komyyy@users.noreply.github.com>

[33mcommit 11fae86a05ed8f37b75f4987bf369f58b40d7985[m
Author: Jujian Zhang <jujian.zhang1998@outlook.com>
Date:   Mon Jun 17 18:49:35 2024 +0000

    feat(RingTheory/Congruence): split `RingCon` construction and add some constructions (#13730)
    
    added results are mainly about `RingCon` on the opposite ring
    
    
    
    Co-authored-by: zjj <j.jj@j.jj>

[33mcommit 009daa3a647f6c05cfffe3581c322317821212ae[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Mon Jun 17 16:57:55 2024 +0000

    feat: positivity of `star x * x` (#13748)
    
    It is positive when `IsRegular x` (which requires weaker constraints on `R` than `IsUnit x` or `x ‚â† 0`)

[33mcommit b9b6c25cec32dc4e9bb712007b23391c70bd68bc[m
Author: Junyan Xu <junyanxumath@gmail.com>
Date:   Mon Jun 17 16:07:50 2024 +0000

    feat(EllipticCurve): a coordinate ring over a domain is a domain (#12883)
    
    Generalize `instIsDomainCoordinateRing` from normalized GCD domains to all domains, by reducing to the field case via the injective ring hom to the field of fractions. (This works basically because the coordinate ring is a free module over the base ring and therefore flat.) To get this done, we move various declarations (some instances and `basis` API) up, and introduce `CoordinateRing.map/map_mk/map_smul/map_injective`.
    
    
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>
    Co-authored-by: David Kurniadi Angdinata <dka31@cantab.ac.uk>

[33mcommit 459cd28509b58a13314956a46f545ee834568ecd[m
Author: David Kurniadi Angdinata <dka31@cantab.ac.uk>
Date:   Mon Jun 17 16:07:49 2024 +0000

    feat(AlgebraicGeometry/EllipticCurve/DivisionPolynomial/Degree): compute degrees of division polynomials (#10878)
    
    
    
    Co-authored-by: Junyan Xu <junyanxumath@gmail.com>

[33mcommit 12613ba84831f5fad339756384c2779b07a1dc8d[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Mon Jun 17 15:40:20 2024 +0000

    chore(Analysis/Normed/Group): Move constructions (#13894)
    
    Split a new file `Analysis.Normed.Group.Constructions` off `Analysis.Normed.Group.Basic`.

[33mcommit 739a018e1c14b34b2efccad6e4c0b1cdbf9fa671[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Mon Jun 17 15:04:25 2024 +0000

    feat(Algebra/Lie/Normalizer): add `normalizer_mono` and use it to fix a porting note (#13890)
    
    `mono` would not apply on `monotone_normalizer`, but does apply on `normalizer_mono`.

[33mcommit 57aa9c9aab2f10370b599305e1985ed7e38f48a3[m
Author: Calle S√∂nne <calle.sonne@gmail.com>
Date:   Mon Jun 17 14:41:03 2024 +0000

    feat(CategoryTheory/Category/Cat): add Cat API (#13809)
    
    Add API for `Bicategory.whiskerRight` and `Bicategory.whiskerLeft`

[33mcommit 402ae165614d183440b6ee4a1ea232bac95bef5d[m
Author: Dagur T√≥mas √Åsgeirsson <37772949+joelriou@users.noreply.github.com>
Date:   Mon Jun 17 14:29:57 2024 +0000

    feat(CategoryTheory): characterise the covering sieves for the extensive topology (#13897)
    
    
    
    Co-authored-by: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
    Co-authored-by: dagurtomas <dagurtomas@gmail.com>
    Co-authored-by: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>

[33mcommit bb514bfc2c576a630e30915c91c284c1317a4219[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Mon Jun 17 13:58:14 2024 +0000

    docs(CategoryTheory): improve documentation in the effective epi file (#13805)
    
    This PR improves some documentation in the effective epi file and removes some `nolint`s which are no longer necessary.

[33mcommit bdd39e92aed38bcac548ae0859ba269c95dbc2f2[m
Author: Martin Dvo≈ô√°k <martin.dvorak@matfyz.cz>
Date:   Mon Jun 17 11:31:35 2024 +0000

    feat(Data/Fintype/Basic): `Finset.univ_map_subtype` lemmas (#12903)
    
    Co-authored-by: Richard Copley <rcopley@gmail.com>
    
    Discussion:
    https://leanprover.zulipchat.com/#narrow/stream/217875-Is-there-code-for-X.3F/topic/Finset.2Euniv.2Esum.20split

[33mcommit e6faccc1239918c2369162efab84d9d829eed7e2[m
Author: David Loeffler <d.loeffler.01@cantab.net>
Date:   Mon Jun 17 11:20:56 2024 +0000

    chore(NumberTheory/MulChar): deprecate `IsNontrivial`, fix `isPrimitive` (#13878)
    
    - Deprecate `MulChar.IsNontrivial` (following the analogous change for `AddChar`'s a few days ago);
    - fix capitalisation of `DirichletCharacter.isPrimitive`;
    - adjust some lemmas to take a `Nat` argument with a `NeZero` instance, rather than a `PNat`, which is more general and flexible.

[33mcommit 4c302e76731ca090ef885a9450699776a1236932[m
Author: Jon Eugster <eugster.jon@gmail.com>
Date:   Mon Jun 17 10:24:16 2024 +0000

    feat(Tactic/Relation/Trans): trans tactic for implications (#13719)
    
    Implications behave like transitive relations albeit not being such in mathlib for technical reasons. This extends the `trans` tactic to handle them alike. This means `trans B` turn a goal `A ‚Üí C` into two goals `A ‚Üí B` and `B ‚Üí C`.
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 217718fb6c2e47171a695bd9c5c042b28e5e4d10[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Mon Jun 17 10:24:15 2024 +0000

    feat: `(ùìù[<] x).NeBot` instances for `Prod`, `Pi`, `OrderDual` (#13642)

[33mcommit 9cbd6ff10159d1130ddbcc161c5e8d2b2b5006a2[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Mon Jun 17 08:52:36 2024 +0000

    feat: add missing WithTop/WithBot lemmas and improve WithBot Nat proofs (#13884)

[33mcommit 77e1ea0a339a4663eced9cacc3a46eb45f967b51[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Sun Jun 16 23:25:09 2024 +0000

    feat: `Prod.fst` as a lattice hom (#13830)
    
    From LeanCamCombi

[33mcommit 782e4af43479482effbb88c6cc9088a7e7139d02[m
Author: Kim Morrison <kim@tqft.net>
Date:   Sun Jun 16 20:27:39 2024 +0000

    chore(HashMap): deprecate unused API additions (#13746)

[33mcommit f2405442b5b4fe2ba540046b771e3d7181fb3987[m
Author: Vasily Nesterov <vas.nesterov63@gmail.com>
Date:   Sun Jun 16 19:40:06 2024 +0000

    doc(Tactic/Linarith): update docs (#13856)
    
    This PR updates the documentation following the integration of the oracle based on the Simplex Algorithm, as merged in PRs #12014, #13535, #12819, and #13800. Additionally, it moves the `SimplexAlgorithm` folder into the `Oracle` directory.
    
    
    
    Co-authored-by: Rob Lewis <Rob.y.lewis@gmail.com>

[33mcommit acdc9041c0d21d54e28cb4e5bf13bab0f94f808c[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Sun Jun 16 19:40:04 2024 +0000

    chore: Golf `Finset.prod_ite_of_true` (#13726)
    
    ... and friends. Also rename `prod_of_empty` to `prod_of_isEmpty`.

[33mcommit 6e0b62977767f8c96b55d682c126b4156697db7c[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sun Jun 16 19:40:03 2024 +0000

    feat(Finset/Lattice): add `Finset.sup_eq_top_iff` etc (#13641)

[33mcommit f246e5b7b318ef85cf308e270987b103d7c6d2d2[m
Author: Bolton Bailey <bolton.bailey@gmail.com>
Date:   Sun Jun 16 19:40:02 2024 +0000

    feat: format table (#12322)
    
    Adds a simple program to render a 2d Array of strings as a table.
    
    - [x] Make formatter output tables in markdown-compliant format.
    - [x] Allows specifying alignments for columns
    - [x] Refactors the table output of `LongestPole` using this.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 43431072a69538b452a68beacac157a4cbae4462[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Sun Jun 16 19:19:31 2024 +0000

    chore(MeasureTheory): remove remaining use of autoImplicit true (#13870)

[33mcommit d2d320bc85a4aa700c6b41d2672e455189debd86[m
Author: R√©my Degenne <Remydegenne@gmail.com>
Date:   Sun Jun 16 18:56:32 2024 +0000

    feat: absolute continuity, Radon-Nikodym derivatives of `Œº.map f` for a measurable embedding `f` (#13761)

[33mcommit d394d9f4486f4e8698acd391c412d5053b913a97[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sun Jun 16 15:16:24 2024 +0000

    chore(NumberTheory/MulChar): fix `Fintype`/`Finite`, generalize (#13862)
    
    In `MulChar.orderOf_pos` and `MulChar.pow_card_eq_one`,
    
    - drop `DecidableEq`;
    - assume `Finite` instead of `Fintype`;
    - only assume finiteness of `MÀ£`, not `M`.

[33mcommit 7e44b8f0ff507a1a257df13e06227b043f305209[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sun Jun 16 14:17:37 2024 +0000

    feat(Set/Image): add 2 lemmas (#13592)
    
    - Add `Set.exists_subset_image_iff` and `Set.forall_subset_image_iff`.
    - Deprecate `Set.exists_subset_range_iff` in favor of `Set.exists_subset_range_and_iff`.
    - Add `@[simp]` to `Set.forall_subset_range_iff`.

[33mcommit d476d23ab59f2f16339e2d02c5cb977cc8f778d4[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Sun Jun 16 14:17:36 2024 +0000

    feat(Topology): some lemmas about continuity of maps out of one point compactifications (#13355)
    
    We prove that a map out of the one point compactification of `X` is continuous if and only if its restriction to `X` satisfies the two properties
    1) is continuous
    2) is continuous "at infinity", namely that it tends to the value at infinity for the `coclosedCompact`¬†filter on `X`
    
    We deduce that continuous functions out of the one point compactification of the natural numbers correspond to convergent sequences.
    
    We also prove that the one point compactification of a discrete space is totally separated.
    
    Co-authored-by: Jireh Loreaux
    
    
    
    Co-authored-by: faenuccio <filippo.nuccio@univ-st-etienne.fr>

[33mcommit dddafd1dc1f9cb47958bcbb6551aa08f24ee60d9[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sun Jun 16 13:53:28 2024 +0000

    chore(Module/StrongTopology): drop unused `variable`s (#13666)

[33mcommit 950e3d06575c84f7397f21cca18a622be7a9c9b2[m
Author: David Loeffler <d.loeffler.01@cantab.net>
Date:   Sun Jun 16 12:04:48 2024 +0000

    feat (MeasureTheory/Function): trivial cases of integrability / summability (#13872)
    
    Any function on a finite type is multipliable / summable; a function on a discrete measurable space is integrable iff its norm is summable.

[33mcommit 0c9132ba19b2ea1eae20c0d268d90590d7c1be5c[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Sun Jun 16 11:38:59 2024 +0000

    feat: `a ^ (p - 1) = if a ‚â† 0 then 1 else 0` in `ZMod p` (#13828)
    
    This is useful for algebraically encoding equality of indices.
    
    From LeanCamCombi

[33mcommit 895010aa7d965a703e0061d0acc9920664411a70[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Sun Jun 16 10:23:18 2024 +0000

    feat: `1 ‚â§ s.card ‚Üî s.Nonempty` (#13821)
    
    This shows up when normalising complicated expressions.
    
    From LeanAPAP

[33mcommit f47614aab49692336a8b0addb274161a451b0649[m
Author: Steven Clontz <steven.clontz@gmail.com>
Date:   Sun Jun 16 06:51:33 2024 +0000

    chore: implement final style feedback from #13176 (#13865)
    
    #13176 was merged (I think @PatrickMassot's instruction on how I could merge it myself triggered it) before I could implement [a final bit of feedback](https://github.com/leanprover-community/mathlib4/pull/13176#discussion_r1640999787) to align my contirbution to the mathlib style guide. This implements it.

[33mcommit 59c05f4a165a84f71eb0ac90afafcdd04a7bd5c5[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Sun Jun 16 06:37:52 2024 +0000

    perf(MeasureTheory,Probability): expand slow `measurabilty` calls (#13770)
    
    Manually expand slow `measurability` calls in various files: see individual commit messages for details.
    
    From the benchmarking run, this seems to net -160*10‚Åπ instructions.
    The `RadonNikodym` and `SignedMeasure` files each speed up by more than half (33 -> 18 billion resp. 100 -> 40 billion instructions). `Group/Convolution` is galvanised, 55 -> 8 billion instructions. The independence files become 10 billion instructions faster.

[33mcommit 46b526ec746b5d71ae0f306a7b58c63521dfbd4f[m
Author: Johan Commelin <johan@commelin.net>
Date:   Sun Jun 16 01:45:46 2024 +0000

    chore: updates for new dsimpNF linter (#13855)
    
    I've now merged batteries#841, so will update this one to use Batteries
    @ main.
    
    ---
    <!-- The text above the `---` will become the commit message when your
    PR is merged. Please leave a blank newline before the `---`, otherwise
    GitHub will format the text above it as a title.
    
    To indicate co-authors, include lines at the bottom of the commit
    message
    (that is, before the `---`) using the following format:
    
    Co-authored-by: Author Name <author@email.com>
    
    Any other comments you want to keep out of the PR commit should go
    below the `---`, and placed outside this HTML comment, or else they
    will be invisible to reviewers.
    
    If this PR depends on other PRs, please list them below this comment,
    using the following format:
    - [ ] depends on: #abc [optional extra text]
    - [ ] depends on: #xyz [optional extra text]
    -->
    
    [![Open in
    Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)
    
    ---------
    
    Co-authored-by: Kim Morrison <kim@tqft.net>

[33mcommit 7dc413fef53f9b0735e5eb091a58c4ff80330b2a[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Sat Jun 15 22:45:08 2024 +0000

    chore: Fix statement of `Finset.sum_boole_mul` (#13825)
    
    The sum incorrectly referred to the wrong variable Compare with `sum_mul_boole` just above.

[33mcommit 32cac55107e909568e76d48c03c629796359506e[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Sat Jun 15 21:43:58 2024 +0000

    chore: tidy various files (#13860)

[33mcommit a1210a98bd125d9f74fa5a26e100bee39ffe9f9d[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Sat Jun 15 21:43:57 2024 +0000

    feat: `a * (b - 1) = a * b - a` for truncated subtraction (#13826)
    
    ... along with the `Nat`-specialised versions. Also add a few simple lemmas about `div` and `dvd`, restore `Nat.mul_div_mul_comm` and fix the name `AddGroup.toHasOrderedSub` to `AddGroup.toOrderedSub`.
    
    From LeanCamCombi

[33mcommit 48de726c6fd157f78189be030fc6fe48aca70a9d[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Sat Jun 15 21:43:56 2024 +0000

    feat: `norm_cast` lemmas about `IsSquare` and `{Int,Rat}.sqrt` (#13788)

[33mcommit 0e39a68fc5a51b35943561f4ec0a229d9a9d6a6a[m
Author: MKaratarakis <mixkarat@gmail.com>
Date:   Sat Jun 15 21:43:55 2024 +0000

    A ring homomorphism ``f : R ‚Üí+* S`` induces a homomorphism ``GL‚Çô(f) : GL‚Çô(R) ‚Üí* GL‚Çô(S)``.  (#13768)
    
    
    
    Co-authored-by: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>

[33mcommit 0ac1ced0d1a024bfdc31340b415418c5bb56a89f[m
Author: Steven Clontz <steven.clontz@gmail.com>
Date:   Sat Jun 15 21:09:36 2024 +0000

    feat: weaken 2nd countable to lindelof in Regular+Lindelof=>Normal  (#13176)

[33mcommit 03092720f68254315c95a5bf249c5f2cdef717d6[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sat Jun 15 18:23:29 2024 +0000

    feat(Linter): enforce `since :=` fields in `@[deprecated]` (#13678)

[33mcommit a9fbabf8a72141f3c83637d6fdf3d0fcf298a7a2[m
Author: Kevin Buzzard <k.buzzard@imperial.ac.uk>
Date:   Sat Jun 15 16:49:36 2024 +0000

    feat(GroupWithZero): add one_lt_coe and friends (#13853)

[33mcommit 7f2007a39a61a287ca04cc95fb3f1ec8cfed1321[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sat Jun 15 15:52:28 2024 +0000

    chore(*): more `since :=` in `deprecated` (#13723)

[33mcommit e956397c2b1ce52e263934adccea1098c6194840[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sat Jun 15 14:58:11 2024 +0000

    chore(*): more `since :=` in `deprecated` (#13839)

[33mcommit 90b6f6d9e2735b75bb1880b7b056253932533326[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Sat Jun 15 13:54:24 2024 +0000

    feat: include `tactic.skipAssignedInstances` flags in technical debt counters (#13851)
    
    This flag was added in leanprover/lean4#3526 explicitly for the purposes of backwards compatibility.

[33mcommit f6c43c61ddecf235e6fe0d0b22c83f45d049dc5a[m
Author: Michael Stoll <Michael.Stoll@uni-bayreuth.de>
Date:   Sat Jun 15 08:58:15 2024 +0000

    chore/refactor: avoid vector notation in character defs (#13737)
    
    This changes the definition of the quadratic character `ZMod.œá‚ÇÑ` to use ane explicit `match` expression instead of `![0, 1, 0, -1]` (which relied on defeq abuse `ZMod = Fin`), and similarly for `ZMod.œá‚Çà` and `ZMod.œá‚Çà'`.
    
    We also deal with some porting notes,  tidy up some files and speed up `Mathlib.NumberTheory.GaussSum`.
    
    
    
    Co-authored-by: Ya√´l Dillies <yael.dillies@gmail.com>
    Co-authored-by: David Loeffler <d.loeffler.01@cantab.net>

[33mcommit f9ab934888484dade234b058962dc88dab2605ee[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Sat Jun 15 08:18:30 2024 +0000

    chore: Move antidiagonal material (#13727)
    
    * Rename `Data.Finset.Antidiagonal` to `Algebra.Order.Antidiag.Prod`
    * Rename `Data.Finset.PiAntidiagonal` to `Algebra.Order.Antidiag.Finsupp`
    * Move `Finset.finAntidiag` from the aforementioned to a new file `Algebra.Order.Antidiag.Pi`. This is in prevision of #13683.

[33mcommit 781c6046cccca60e6107c2459592ac814f66a812[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sat Jun 15 08:03:13 2024 +0000

    fix(Combinatorics/Roth): drop `[DecidableEq G]` assumption (#13844)

[33mcommit 04d5dcabce23ebdfff7286ae0dd52040b545b640[m
Author: Rida Hamadani <mridahamadani@gmail.com>
Date:   Sat Jun 15 07:07:03 2024 +0000

    feat(Order): sup/inf equal to top/bot if top/bot in set (#13706)
    
    The sup lemma is needed in a proof related to `SimpleGraph.ediam` in #12058

[33mcommit b1b06aef26751984ea54748fd599dbb02fbe3b39[m
Author: Mario Carneiro <mcarneir@andrew.cmu.edu>
Date:   Sat Jun 15 06:55:10 2024 +0000

    chore: bump leantar 0.1.13 (#13843)
    
    The latest version of leantar [includes](https://github.com/digama0/leangz/compare/v0.1.12...v0.1.13) the following features and bug fixes:
    
    * Fix to the `-k` comment parsing mode which powers `lake exe cache lookup` broken in v0.1.12
    * Ignore unparseable `.trace` files instead of failing, to prevent a future [forward compatibility issue](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/ltar.20error.20aften.20lean.234402/near/444803915)
    
    This is a forward and backward compatible release, because it makes no parsing changes relevant for `cache get` or `cache put`.
    
    
    
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>

[33mcommit f05cf142c2fc5fb0ee302acbe8208fb2678fccd7[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Fri Jun 14 18:14:52 2024 +0000

    feat: lint in importing Lake in mathlib, inspired by #13779 (#13836)
    
    
    
    Co-authored-by: Matthew Ballard <matt@mrb.email>

[33mcommit dff3a0ef1acdb1f34dd05dbaa41e620d22c6a3cf[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Fri Jun 14 16:44:41 2024 +0000

    chore(Order/Hom/Set): Use `simps!` rather than `simps` (#13831)
    
    ... else the RHS of the generated lemmas involves a `‚àò`

[33mcommit f43a3d2811b65e20fb672625975ef35b1b69a931[m
Author: Matthew Robert Ballard <matt@mrb.email>
Date:   Fri Jun 14 15:55:15 2024 +0000

    chore: don't import `Lake` under `Mathlib` (#13779)
    
    The `Lake.CLI.Main` import was slowing down linting by ~90s/~15% on its own. We move the function `getLeanLibs` back to `scripts/mk_all.lean` to avoid the import.
    
    
    
    
    Co-authored-by: Matthew Robert Ballard <100034030+mattrobball@users.noreply.github.com>

[33mcommit 62409ad314c84d1a0de4b544e0dd32a06073d597[m
Author: Pol'tta / Miyahara K≈ç <pol_tta@outlook.jp>
Date:   Fri Jun 14 15:55:14 2024 +0000

    fix: `cc` tactic can't unify def-eq instances in `OfNat.ofNat` (#13403)
    
    This issue is consisted of one problem and one bug.
    
    **Problem: `cc` treats an `OfNat.ofNat` term as an atomic value in the default config**
    In the default `CCConfig`, the `values` field is set to `true` so `cc` treats an `OfNat.ofNat` term as an atomic and it doesn't unify `OfNat` instances.
    This problem can be solved simply by setting `values := false` by default.
    
    **Bug: `cc` tries to disprove `@OfNat Œ± (nat_lit n) i‚ÇÅ ‚â† @OfNat Œ± (nat_lit n) i‚ÇÇ` where `Œ±` is `‚Ñï` or `‚Ñ§` and `i‚ÇÅ` & `i‚ÇÇ` is not alpha-equivalent but def_eq**
    `cc` tactic has a mechanism to disprove equality between two different values of `‚Ñï`, `‚Ñ§`, `Char` & `String`, in the function `propagateEqUp`. This mechanism is trigered when the root representations of two values are not alpha-equivalent, so this example fails.
    ```lean
    local instance instOfNatNat' (n : ‚Ñï) : OfNat ‚Ñï n where
      ofNat := n
    
    example : @OfNat.ofNat ‚Ñï (nat_lit 0) (instOfNatNat _) =
        @OfNat.ofNat ‚Ñï (nat_lit 0) (instOfNatNat' _) := by
      cc
    /-
    application type mismatch
      (bne_iff_ne 0 0).1 (Eq.refl true)
    argument has type
      true = true
    but function has type
      (0 != 0) = true ‚Üí 0 ‚â† 0
    -/
    ```
    So we strengthen the condition in `propagateEqUp`. For the detail, refer to docs in this function.

[33mcommit 1b576bae19c8e6f75483f388b7b555f493451022[m
Author: Felix-Weilacher <fweilach@andrew.cmu.edu>
Date:   Fri Jun 14 15:02:07 2024 +0000

    feat(Order/Filter): Add lemmas about Filter.curry (#12435)
    
    `Filter.curry` is a useful definition for reasoning about Fubini-type theorems, but there are almost no lemmas about it. This PR adds some in preparation for an upcomming PR on the Kuratowski-Ulam theorem.

[33mcommit 11731ee18f39af3a2618fd8f6e95d982f3784e0c[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Fri Jun 14 14:02:14 2024 +0000

    feat: Powerset as a functor `Type u ‚•§ BoolAlg·µí·µñ` (#13819)
    
    From LeanCamCombi

[33mcommit c4806696e680bc55db47895ca980db7a31944842[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Fri Jun 14 14:02:13 2024 +0000

    chore: generalize some results to non-unital rings (#13807)

[33mcommit 239c82218f9a613d764315703550790105cae7bd[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Fri Jun 14 14:02:12 2024 +0000

    feat(AddChar): Various improvements (#13579)
    
    * Add a bunch of missing `simp` and `norm_cast` lemmas.
    * Get rid of `IsNontrivial œà` since it's just `œà ‚â† 1`. This simplifies proofs.
    * Remove explicit arguments to `toMonoidHomEquiv`/`toAddMonoidHomEquiv`. We basically never need to provide them explicitly since unification usually does the job.

[33mcommit dc44afb4353b441dfdbca70458574c5b4be98b32[m
Author: Jannis Limperg <jannis@limperg.de>
Date:   Fri Jun 14 13:02:52 2024 +0000

    chore: bump Aesop (#13835)
    
    Update Aesop to a version with precompilation disabled. It seems this still breaks Mathlib's cache/CI.

[33mcommit 2268f788bfe71cc981996c64b83cc61c66960dc7[m
Author: R√©my Degenne <Remydegenne@gmail.com>
Date:   Fri Jun 14 11:33:22 2024 +0000

    feat: add `MeasureTheory.Measure.AbsolutelyContinuous.add_left` (#13734)

[33mcommit c14e9d00a51390cda9a094386b41bfb70d78570e[m
Author: Johan Commelin <johan@commelin.net>
Date:   Fri Jun 14 09:28:41 2024 +0000

    chore(Topology/Spectral/Hom): fix problem with dsimp lemma, fix porting note (#13818)

[33mcommit 978fca198c3e26ce7c7ae260e7d0532c28ee3fc7[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Fri Jun 14 09:28:40 2024 +0000

    perf(GroupCohomology/Resolution; Algebra/Lie/Classical): use suppress_compilation (#13801)
    
    These took 10 resp. 18 seconds to compile in mathlib's CI; it seems this computability is not actually needed.

[33mcommit 01e3d32c1b74d74d34620d9b4a2a67b6ef77487a[m
Author: Kevin Buzzard <k.buzzard@imperial.ac.uk>
Date:   Fri Jun 14 09:28:39 2024 +0000

    doc: units of a trivial normed algebra are a thing (#13709)
    
    Fix a comment.

[33mcommit c07d988501e8e04eadea03de32023e7d84157cd1[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Fri Jun 14 08:25:00 2024 +0000

    chore(*): drop some `bit0`/`bit1` lemmata (#13822)

[33mcommit 2f07f5f7c965bda48e6d4cda12f1ec2bf5653a87[m
Author: Kim Morrison <kim@tqft.net>
Date:   Fri Jun 14 08:24:59 2024 +0000

    chore(Data/Array/Basic): remove upstreamed @[simp] and move deprecation (#13813)
    
    Allowing us to delete a file.

[33mcommit 294e3c6e60dead2fd2cf38f3d7edf01d8dc8f903[m
Author: Kim Morrison <kim@tqft.net>
Date:   Fri Jun 14 08:24:58 2024 +0000

    chore: remove some of the >1year deprecations (#13792)
    
    
    
    Co-authored-by: Jeremy Tan Jie Rui <reddeloostw@gmail.com>

[33mcommit 449179b45546dbff1b1559fca5a8291ca348432f[m
Author: Geoffrey Irving <irving@naml.us>
Date:   Fri Jun 14 08:06:49 2024 +0000

    refactor: move analyticGroupoid to a new file `AnalyticManifold.lean` (#13785)
    
    It used to be in `SmoothManifoldWithCorners.lean`, but this makes no sense as nothing downstream of that file uses `analyticGroupoid`. In #10853, I will rewrite the definition of `analyticGroupoid` and define `AnalyticManifold` on top of it.

[33mcommit debf1d89f40bbd232d4b751bfb659690031fbf39[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Fri Jun 14 07:48:58 2024 +0000

    chore(build*.yml): only update Mathlib.lean once (#13667)
    
    The current workflow updates `Mathlib.lean` twice: there's no reason to do so. Since 'check_imported' step moved into the 'build' step, any old reasons for this duplication are now obsolete.

[33mcommit b288785130de1df380b302ae493868b901cb13bc[m
Author: Johan Commelin <johan@commelin.net>
Date:   Fri Jun 14 06:31:03 2024 +0000

    chore: fix dsimp lemmas that cause loops (#13804)
    
    These dsimp lemmas had a proof subterm in their RHS that contained a
    copy of the LHS, which causes dsimp to enter an infinite loop.
    
    Nb: dsimp visits all sub-terms, even proofs: it is used to eliminate (artificial) dependencies

[33mcommit 5ef3a830c97744118453efe44e7ddde3d4632385[m
Author: Kim Morrison <kim@tqft.net>
Date:   Fri Jun 14 06:16:22 2024 +0000

    chore: bump to v4.9.0-rc2 (#13814)
    
    This should not change any Lean behaviour, besides `lake`, `VS Code` interaction, and incremental compilation.
    
    Note that to save some time I'm not moving all the other repositories to `v4.9.0-rc2` now, but can do so on an as needed basis.

[33mcommit 7fa489a5cbf3c4f08d36e1e0b5dee4d761fdbd9b[m
Author: Kim Morrison <kim@tqft.net>
Date:   Fri Jun 14 04:23:05 2024 +0000

    chore: bump dependencies (#13789)
    
    This includes the change to behaviour in the simpNF linter from https://github.com/leanprover-community/batteries/pull/839, so may be disruptive.

[33mcommit ceff16fcda840af2a6e00559c6feff20cf7af9a3[m
Author: Fr√©d√©ric Dupuis <dupuisf@iro.umontreal.ca>
Date:   Thu Jun 13 23:47:36 2024 +0000

    feat(ContinuousMapZero): add `StarOrderedRing` instances (#13650)
    
    This PR adds missing `StarOrderedRing` instances on `ContinuousMapZero`. These are needed for the non-unital continuous functional calculus.
    
    Co-authored-by: Jireh Loreaux <loreauxjy@gmail.com>

[33mcommit 68d88327b4b4d372252a84db7a86959f20b85610[m
Author: Kim Morrison <kim@tqft.net>
Date:   Thu Jun 13 23:34:10 2024 +0000

    chore: bump leantar 0.1.12 (#13808)
    
    The latest version of leantar [includes](https://github.com/digama0/leangz/compare/v0.1.11...v0.1.12) the following features and bug fixes:
    
    * An improved `--help` output
    * Faster performance on windows and slow networks by reducing the number of OS calls (see digama0/leangz#3)
    * Support for a new trace file format due to land in leanprover/lean4#4402 (see [zulip discussion](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/ltar.20error.20aften.20lean.234402/near/444379353))
    
    This is a backward compatible release, meaning that v0.1.12 can understand .ltar files produced by v0.1.11 and previous versions. So there should not be any hiccups during the transition period.

[33mcommit c9f95f42b82684937a26ba395ebf7f25a81734ca[m
Author: Kim Morrison <kim@tqft.net>
Date:   Thu Jun 13 19:34:00 2024 +0000

    chore: move material on limits out of ConcreteCategory.Basic (#13549)
    
    This significantly reduces this imports of `ConcreteCategory.Basic` (the imports never should have been added; one day we will have CI help for this!).
    
    There may actually be some duplication between the material I'm moving and the material in the destination file (which @joelriou added last week), but I'm going to declare deduplicating out of scope for this PR, please.

[33mcommit 1e62b3f4e8fd838e96cf0c0182de2ab33baecb8c[m
Author: Rob Lewis <Rob.y.lewis@gmail.com>
Date:   Thu Jun 13 16:04:28 2024 +0000

    chore: refactor LinarithConfig object so defaults are easier to find (#13800)
    
    `LinarithConfig` was defined before `CertificateOracle` was instantiated, so it couldn't have a proper default. The default was chosen inline in the middle of a long function. Now that we have multiple oracles, it's important to make the default choice visible!
    
    
    
    Co-authored-by: Rob Lewis <rob.y.lewis@gmail.com>

[33mcommit 5515fe8cdf2b4b08227a0060a68b91b5113d4dd1[m
Author: R√©my Degenne <Remydegenne@gmail.com>
Date:   Thu Jun 13 14:52:55 2024 +0000

    feat: add SFinite instances for Measure.fst and Measure.snd (#13741)
    
    Authored-by: Lorenzo Luccioli <lorenzoluccioli@gmail.com>

[33mcommit 0dd932109645c562666611042f6b9246be82f1ff[m
Author: R√©my Degenne <Remydegenne@gmail.com>
Date:   Thu Jun 13 14:52:54 2024 +0000

    feat(MeasureTheory): `trim_add` (#13739)

[33mcommit e3dd70acdd77175bf2e2cf7bcbdfae50e33987ca[m
Author: R√©my Degenne <Remydegenne@gmail.com>
Date:   Thu Jun 13 14:32:53 2024 +0000

    feat(MeasureTheory): add Measure.fst_map_swap and Measure.snd_map_swap (#13733)

[33mcommit 953d0fc91f881195d501d65d1ed37247cb833104[m
Author: Johan Commelin <johan@commelin.net>
Date:   Thu Jun 13 14:08:10 2024 +0000

    docs(LinearAlgebra/Matrix/Transvection): fix small mistakes (#13799)

[33mcommit 8c85ba7b721a57af0070590ad906aae17e112e34[m
Author: Vasily Nesterov <vas.nesterov63@gmail.com>
Date:   Thu Jun 13 13:20:55 2024 +0000

    feat(Tactic/Linarith): use sparse matrices (#12819)
    
    * Introduce the `SparseMatrix` structure, which can be used in the Simplex Algorithm via class `UsableInSimplexAlgorithm`.
    * Use them in a default `linarith`'s oracle.
    
    This should speed up `linarith` on sparse states. In particular, this affects `nlinarith`, because it typically passes very sparse matrices to the algorithm.
    
    
    
    Co-authored-by: Rob Lewis <rob.y.lewis@gmail.com>

[33mcommit 659d35143a857ceb5ba7c02a0e1530a1c7aec70c[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Thu Jun 13 09:47:26 2024 +0000

    perf(TensorAlgebra/Grading): use suppress_compilation (#13771)
    
    The gradedAlgebra instance takes 10 seconds to compile (on CI).
    Speeds up the whole file by 75%; no downstream definitions are affected.

[33mcommit 65ff3ef36824b04b8e91a8f50da5a022382531a8[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Thu Jun 13 08:41:16 2024 +0000

    perf(NumberTheory/Padics/PadicNumbers): avoid a slow `change` (#13772)
    
    This took 15s on mathlib CI; replace this by a one-line `suffices` instead.
    Speed up the file by 58%.

[33mcommit a6db0214f35830eb167c1727484f1d8d54db6820[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Thu Jun 13 08:41:15 2024 +0000

    chore: split Mathlib.Topology.Algebra.UniformConvergence (#13738)
    
    This reduces the longest pole by two files.

[33mcommit 6be3561002772387b0d6407768eec3d21b2aad30[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Thu Jun 13 08:27:45 2024 +0000

    perf(Analysis/InnerProductSpace/OfNorm): replace slow continuity call‚Ä¶ (#13769)
    
    ‚Ä¶ by fun_prop. The `continuity` invocation took 2.8s on CI before, `fun_prop` takes perhaps 0.1s in this instance.
    Speeds up the whole file by 27%.

[33mcommit 06caa19e4a06959ae9a661b3a6e6234ade055376[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Thu Jun 13 06:26:50 2024 +0000

    chore: speed-up Algebra.Homology.HomotopyCategory.SingleFunctors (#13794)

[33mcommit cc10402b8dd082c3ddc6c1aa372831b8dde931d1[m
Author: Kim Morrison <kim@tqft.net>
Date:   Thu Jun 13 04:09:53 2024 +0000

    chore: regularly update dependencies (#13489)
    
    If the update fails, it will leave the PR open, preventing the action from creating more such PRs.
    
    Also adds a workflow action that reports on zulip if one of these PRs fails.

[33mcommit 616a338e1b292b1fb7c32a8fa3bca87d7d942bb1[m
Author: JonBannon <jbannon@siena.edu>
Date:   Thu Jun 13 02:15:21 2024 +0000

    feat : added `Module.End.finite_spectrum` and `Matrix.finite_spectrum` (#13765)
    
    The spectrum of an endomorphism of a finite dimensional vector space, and that of an n x n matrix, is finite.
    
    
    
    Co-authored-by: JonBannon <59937998+JonBannon@users.noreply.github.com>

[33mcommit 495396de7650a4ac117bc269930486d9f9486369[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Thu Jun 13 02:15:20 2024 +0000

    chore: split Mathlib.Data.Complex.Module (#13762)

[33mcommit a7ed48f4b5affad81456f07a3b5dcac66985a657[m
Author: JonBannon <jbannon@siena.edu>
Date:   Thu Jun 13 01:47:19 2024 +0000

    feat : added `spectrum.conjugate_units` results to `Algebra.Algebra.Spectrum`, and `spectrum.conjugate_unitary` results to `Algebra.Star.Unitary`. (#13729)
    
    Included proofs that conjugation by a unit preserves the spectrum, and conjugation by a unitary preserves the spectrum.

[33mcommit 7db5e4eb4f0f7775f538ab53fb6a4eec4c964998[m
Author: Mitchell Lee <trivial171@gmail.com>
Date:   Thu Jun 13 00:50:23 2024 +0000

    chore(GroupTheory/Coxeter/Reflection): squeeze simps (#13787)

[33mcommit 637a8aa4ba45df46549d08b144acd0aafb142cee[m
Author: damiano <adomani@gmail.com>
Date:   Thu Jun 13 00:50:22 2024 +0000

    tech debt: add deprecations without date (#13778)
    
    [Zulip discussion](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Technical.20Debt.20Counters/near/444271749)

[33mcommit cc4d76414a20a4c7e338d11e8a7edbd7afcb2692[m
Author: Lorenzo Luccioli <lorenzoluccioli@gmail.com>
Date:   Thu Jun 13 00:50:21 2024 +0000

    feat: Add lemmas about finite products of measures (#13311)
    
    Add the following lemmas about finite product of measures and measurable equivalences:
    
    - `piCongrLeft_apply_apply`
    - `pi_map_piCongrLeft`
    - `pi_map_piOptionEquivProd`

[33mcommit b3e51cedc31e4c2fd08b6b9d74e140160da404fd[m
Author: Xavier Roblot <roblot@math.univ-lyon1.fr>
Date:   Thu Jun 13 00:50:20 2024 +0000

    feat: Define `Pi.orthonormalBasis` (#12242)
    
    Define an orthonormal basis on a pi space from a family of orthonormal bases.
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>
    Co-authored-by: Xavier Roblot <46200072+xroblot@users.noreply.github.com>

[33mcommit f6f222aea260ab24064f28a195d20e46c1ca5aed[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Jun 12 23:50:47 2024 +0000

    chore(Order/WithBot): add several `simp, norm_cast` lemmas (#13640)

[33mcommit dfc711a80758165c2b86231ee664553f98e28581[m
Author: Jon Eugster <eugster.jon@gmail.com>
Date:   Wed Jun 12 19:27:44 2024 +0000

    chore: fix some porting notes about simp_rw (#13773)

[33mcommit 9035d155b1562dea5699542b43cf262ddeecbd5c[m
Author: Mario Carneiro <mcarneir@andrew.cmu.edu>
Date:   Wed Jun 12 18:41:28 2024 +0000

    feat: port `itauto` from lean 3  (#9398)
    
    This tactic solves problems in intuitionistic propositional logic. It also produces nice proofs when doing so, so it is useful even for proving classical theorems (using the `itauto!` variant to enable EM) and observing the results with `#explode`.
    ```lean
    example (p : Prop) : ¬¨(p ‚Üî ¬¨p) := by itauto
    ```
    
    
    
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>

[33mcommit 9a5f5b6fc35c5a0e73fe787c67f499eb72a0409f[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Wed Jun 12 15:51:11 2024 +0000

    docs(Condensed): update the docstrings in condensed files (#13775)

[33mcommit 7144544c166b012db2971ef2278214d048879ad5[m
Author: Jon Eugster <eugster.jon@gmail.com>
Date:   Wed Jun 12 15:03:53 2024 +0000

    chore(Algebra/CharP/MixedCharZero): drop superfluous porting note (#13763)

[33mcommit effa9ce416022343288a0b784f2d9e74f3214c19[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Jun 12 15:03:52 2024 +0000

    chore(*): more since := in deprecated (#13743)

[33mcommit e0e6e30fb6407e85810816b1fbd248a4221fed42[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Wed Jun 12 14:31:08 2024 +0000

    chore: move Complex.equivRealProdAddHom earlier (#13760)

[33mcommit 81e2c63b8af1371a08072e40e50aeb41c26ed591[m
Author: Kim Morrison <kim@tqft.net>
Date:   Wed Jun 12 14:00:41 2024 +0000

    chore(HashMap): deprecated unused API additions (2/2) (#13753)
    
    
    - [x] depends on: #13752

[33mcommit a0732879cdeb3df47b49afe9aca5e2f2ce48fd27[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Wed Jun 12 13:30:41 2024 +0000

    chore: split Mathlib.MeasureTheory.Function.StronglyMeasurable.Basic (#13756)

[33mcommit 7bee18925ae9b54ba0c73a5c434efa4e7a75456b[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Wed Jun 12 12:51:28 2024 +0000

    fix: typo in module docstring (#13661)

[33mcommit 2764b3b7b6465e84a413a4a741e7820bbef0d7c5[m
Author: damiano <adomani@gmail.com>
Date:   Wed Jun 12 12:33:22 2024 +0000

    feat: add `alias` to the keywords tracked by `move_decls` (#13731)
    
    As reported in #13725.

[33mcommit c542c3a12ba83709722692448cd1c85745c2ad97[m
Author: Kim Morrison <kim@tqft.net>
Date:   Wed Jun 12 11:46:37 2024 +0000

    chore(linarith): remove unused import (#13745)

[33mcommit 1660695a1324e72b7136cf338369350b802256f9[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Wed Jun 12 11:07:48 2024 +0000

    feat: generalize `Matrix.PosDef.det_pos` to complex matrices (#13744)
    
    Also adds some missing `norm_cast` lemmas

[33mcommit c290d69ee8f4ec2047ddf13d1d147953397bf2ab[m
Author: Christian Merten <christian@merten.dev>
Date:   Wed Jun 12 10:07:51 2024 +0000

    feat(RingTheory): finite type and finite presentation are stable under base change (#13696)

[33mcommit 54db0472f333afddfa194ee809f8a4f8ca81a7ac[m
Author: FR <zhao.yu-yang@foxmail.com>
Date:   Wed Jun 12 09:13:59 2024 +0000

    chore(Algebra/Order/Module/Defs): remove unused assumptions (#13465)

[33mcommit 4ab4901ebc438150001ca4b02b101b41578f37a5[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Wed Jun 12 09:13:58 2024 +0000

    feat: Cardinality of a finset under a surjective map (#13435)
    
    Prove a few easy (but annoying to prove on the fly) results about cardinality of finsets:
    * If `f` is surjective from `s` to `t`, then `t.card ‚â§ s.card`.
    * If two finsets `t`, `u` are subsets of `s` and `s.card < t.card + u.card`, then `t` and `u` are not disjoint.
    
    Rename `Finset.card_le_card_of_inj_on` to `Finset.card_le_card_of_injOn` and state it using `Set.InjOn`. Golf `Finset.surj_on_of_inj_on_of_card_le`.
    
    From LeanAPAP

[33mcommit b6cab8a4a3fa04086913c8c5e77734800ae521cf[m
Author: damiano <adomani@gmail.com>
Date:   Wed Jun 12 08:11:42 2024 +0000

    feat: a `Try this` deprecation tool (#13691)
    
    ### `deprecate to` -- a deprecation tool
    
    Writing
    ```lean
    deprecate to new_name new_name‚ÇÇ ... new_name‚Çô
    theorem old_name : True := .intro
    ```
    where `new_name new_name‚ÇÇ ... new_name‚Çô` is a sequence of identifiers produces the
    `Try this` suggestion:
    ```lean
    theorem new_name : True := .intro
    
    @[deprecated (since := "YYYY-MM-DD")] alias old_name := new_name
    
    @[deprecated (since := "YYYY-MM-DD")] alias old_name‚ÇÇ := new_name‚ÇÇ
    ...
    
    @[deprecated (since := "YYYY-MM-DD")] alias old_name‚Çô := new_name‚Çô
    ```
    where `old_name old_name‚ÇÇ ... old_name‚Çô` are the non-blacklisted declarations
    (auto)generated by the initial command.
    
    The "YYYY-MM-DD" entry is today's date and it is automatically filled in.
    
    (This evolved from the code of #10864, before switching to the "macro" setting.  The code here suggests a `Try this`.)

[33mcommit 49537402eb0a7226e47cc5de3c09bf39abf6c0bd[m
Author: Kevin Buzzard <k.buzzard@imperial.ac.uk>
Date:   Wed Jun 12 08:11:40 2024 +0000

    fix(AlgebraicGeometry/EllipticCurve): high prio for point notation (#13448)
    
    This makes things like `#synth AddCommGroup W‚üÆ‚Ñö‚üØ` parse, for `W : WeierstrassCurve ‚Ñö` (before, you had to write `#synth AddCommGroup (W‚üÆ‚Ñö‚üØ)`).

[33mcommit 076eee0ce7fde408c14ac63b0b7d85aef198170d[m
Author: L <hi@llllvvuu.dev>
Date:   Wed Jun 12 08:11:39 2024 +0000

    feat: `@[simp]` `Nat.count` / `Nat.nth` of `fun _ ‚Ü¶ True`, `False` (#13378)
    
    
    
    Co-authored-by: L Lllvvuu <git@llllvvuu.dev>

[33mcommit 5e9f733229b65c5c843ed61cb47514d540e14373[m
Author: Junyan Xu <junyanxumath@gmail.com>
Date:   Wed Jun 12 08:11:38 2024 +0000

    feat(Algebra): auxiliary results for proofs about elliptic divisibility sequences (#13153)
    
    `Int.strongRec`: if a proposition holds for integers less than a threshold, and it holds  for an integer above the threshold if it holds for all smaller integers, then it holds for all integers.
    
    `negOnePow_abs` says (-1)^|n|=(-1)^n
    
    `pos_iff_two_le_of_even` and `lt_iff_add_two_le_of_even_sub` are two lemmas about the interaction of parity and the order on the integers.
    
    `Equiv.Perm.closure_isSwap` is strengthened to say the sub**monoid** generated by transpositions is the whole group, and moreover show transpositions of adjacent elements are enough.
    
    
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>
    Co-authored-by: Ya√´l Dillies <yael.dillies@gmail.com>

[33mcommit d085ccc9eed23b8482b84cc211b964cd758cfbd1[m
Author: NirvanaC93 <nirvanac93@gmail.com>
Date:   Wed Jun 12 07:57:59 2024 +0000

    Feat (Analysis/Normed/Ring/Seminorm): add lemmas on equivalence of MulRingNorms (#12517)
    
    Include the following lemmas on equivalence of `MulRingNorms`.
    ```lean
    lemma f_of_abs_eq_f (x : ‚Ñ§) : f (Int.natAbs x) = f x
    lemma NormRat_eq_on_Int_iff_eq_on_Nat : (‚àÄ n : ‚Ñï , f n = g n) ‚Üî (‚àÄ n : ‚Ñ§ , f n = g n)
    lemma NormRat_eq_iff_eq_on_Nat : (‚àÄ n : ‚Ñï , f n = g n) ‚Üî f = g
    lemma NormRat_equiv_iff_equiv_on_Nat : (‚àÉ c : ‚Ñù, 0 < c ‚àß (‚àÄ n : ‚Ñï , (f n)^c = g n)) ‚Üî f.equiv g
    ```
    
    Co-authored-by:
    
    David Kurniadi Angdinata [dka31@cantab.ac.uk](mailto:dka31@cantab.ac.uk)
    Fabrizio Barroero [fabrizio.barroero@uniroma3.it](mailto:fabrizio.barroero@uniroma3.it)
    Laura Capuano [laura.capuano@uniroma3.it](mailto:laura.capuano@uniroma3.it)
    Nirvana Coppola [nirvanac93@gmail.com](mailto:nirvanac93@gmail.com)
    Mar√≠a In√©s de Frutos Fern√°ndez [maria.defrutos@uam.es](mailto:maria.defrutos@uam.es)
    Silvain Rideau-Kikuchi [silvain.rideau-kikuchi@ens.fr](mailto:silvain.rideau-kikuchi@ens.fr)
    Sam van Gool [vangool@irif.fr](mailto:vangool@irif.fr)
    Francesco Veneziano [veneziano@dima.unige.it](mailto:veneziano@dima.unige.it)
    
    
    
    Co-authored-by: Riccardo Brasca <riccardo.brasca@gmail.com>

[33mcommit d1d1e4b72c6e009edd97cabe1d661b021fe8eeae[m
Author: L <hi@llllvvuu.dev>
Date:   Wed Jun 12 06:57:05 2024 +0000

    chore: address unusedHavesSuffices warning (#13754)
    
    This linter was silently not doing anything until https://github.com/leanprover/lean4/pull/4410 was fixed, and now it is working so a backlog of warnings needed to be addressed. Some were addressed here: https://github.com/leanprover-community/mathlib4/pull/13680.
    
    The warnings in this PRs are false positives (https://github.com/leanprover-community/batteries/issues/428?), but a workaround is put in place.
    
    
    
    Co-authored-by: L Lllvvuu <git@llllvvuu.dev>

[33mcommit fbf1dad0debc7db8b0dfea8c715ee31e4987029b[m
Author: Kim Morrison <kim@tqft.net>
Date:   Wed Jun 12 05:55:17 2024 +0000

    chore: remove unused countLocalHypsUsed (#13751)
    
    This is an orphaned meta function, that used to be used in `rw?`, which has since moved to core. I wrote it, and I'm pretty sure I was the only user, so I would like to just delete it without a deprecation.

[33mcommit 868018d565027432fbb588667e3661609fbce79a[m
Author: Kim Morrison <kim@tqft.net>
Date:   Wed Jun 12 04:21:22 2024 +0000

    chore(*): removing unused imports (#13747)
    
    These are imports of material from Batteries. Not sure why `shake` has not complained.

[33mcommit c97b50a68c4f54269df1eab41998cd537af14f4b[m
Author: Kim Morrison <kim@tqft.net>
Date:   Wed Jun 12 02:49:13 2024 +0000

    chore: bump dependencies (#13752)

[33mcommit 2b37c48ad7f80457653d5a491f2364dc385dd5da[m
Author: Tomasz Maciosowski <t4ccer@gmail.com>
Date:   Wed Jun 12 01:24:08 2024 +0000

    chore(GroupTheory/Perm/List): nthLe -> get migration (#13446)
    
    chore(GroupTheory/Perm/List): nthLe -> get migration
    
    
    Rewrite theorems in GroupTheory/Perm/List to use `List.get`. Deprecate old ones and rewrite them as thin wrappers around new ones.
    
    
    
    Co-authored-by: Kim Morrison <kim@tqft.net>

[33mcommit d19a0cebe970698b6a03b17388112c6a66f28f88[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Tue Jun 11 23:44:44 2024 +0000

    chore: fix junk value for `sInf` on `WithTop` (#13717)
    
    As pointed out in https://leanprover.zulipchat.com/#narrow/stream/113489-new-members/topic/Definition.20of.20.60WithTop.2EinstInfSet.60/near/443609808, the current choice of junk value for `sInf s` when `s : Set (WithTop Œ±)` is not bounded below does not coincide with `sInf ‚àÖ`. This makes it impossible to get a `ConditionallyCompleteLinearOrder` structure on `WithTop Œ±` as we require the junk values to coincide.
    
    This PR fixes the choice of junk value for  `sInf s` when `s : Set (WithTop Œ±)` is not bounded below, making it equal to `‚ä§ = sInf ‚àÖ`.

[33mcommit e5c264c3a93e6728176ef373efbfe9b54adf9288[m
Author: Peter Nelson <71660771+apnelson1@users.noreply.github.com>
Date:   Tue Jun 11 23:44:43 2024 +0000

    feat(Data/Set/Function): simp lemmas for bij/surj/mapsTo and empty set  (#13688)
    
    We add `simp` lemmas for `SurjOn`, `MapsTo` and `BijOn` in the cases where the terms force sets to be empty.

[33mcommit a43df3c4776fe5fd8a83ba12ab8f0d72ba62ff99[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Jun 11 22:52:15 2024 +0000

    chore(*): more `since :=` in `deprecated` (#13735)

[33mcommit e16925c9357084ffff5de2715602e513ea01b518[m
Author: Vasily Nesterov <vas.nesterov63@gmail.com>
Date:   Tue Jun 11 19:39:48 2024 +0000

    refactor(Tactic/Linarith): introduce `UsableInSimplexAlgorithm` class to allow the use of sparse matrix types in the oracle (#13535)
    
    This is the first part of #12819, which I decided to split into two parts. The initial goal is to enable the use of sparse matrices in the `linarith`'s oracle based on the Simplex Algorithm, which speeds up `linarith`, and especially `nlinarith`, in many cases.
    
    * Introduce the `UsableInSimplexAlgorithm` class, which specifies the operations required from a matrix type for use in Gauss Elimination and the Simplex Algorithm within the corresponding oracle for the `linarith` tactic. Rewrite these algorithms to use this class, allowing any matrix type to be used.
    * Make `Matrix` an instance of this class.

[33mcommit 965c7f81663aefc008aa7165ffa5e3ddca9b46d9[m
Author: Christian Merten <christian@merten.dev>
Date:   Tue Jun 11 14:59:06 2024 +0000

    feat(RingTheory/AdicCompletion): functoriality (#12543)
    
    Adds functoriality of adic completions.

[33mcommit bfaec997eb25d276dfb9180d1834e2b4cda60315[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Tue Jun 11 13:49:39 2024 +0000

    feat: generalize `one_div_mul_add_mul_one_div_eq_one_div_add_one_div` (#13215)
    
    This provides a variant that works on invertible elements of semirings, via `invOf` and `Ring.inverse`
    
    This lets this be used on matrices.
    
    The original lemma is from https://github.com/leanprover/lean3/commit/816c315b501481cea4edae1f9eecbd05c554fb61.

[33mcommit 04738f51441b9f795b327b35b723b88ed6a6cabf[m
Author: Jujian Zhang <jujian.zhang1998@outlook.com>
Date:   Tue Jun 11 13:06:22 2024 +0000

    feat(GroupTheory/Congruence/*): add some missing lemma and constructions of group congruence (#13610)
    
    1. order isomorphism between congruence on group and opposite groups
    2. congruence relation is preserved by finite product/sum
    
    
    
    Co-authored-by: zjj <j.jj@j.jj>

[33mcommit 0fe37d6605c8a0977f5a799a10101c09438fbc9f[m
Author: Fabrizio Barroero <fbarroero@gmail.com>
Date:   Tue Jun 11 13:06:21 2024 +0000

    feat(Analysis/Matrix): lemmas about norms of matrix, preparation for Siegel's lemma (#13470)
    
    This PR contains `norm_eq_sup_sup_nnnorm (A : Matrix m n Œ±) : ‚ÄñA‚Äñ = Finset.sup Finset.univ fun i ‚Ü¶ Finset.sup Finset.univ fun j ‚Ü¶ ‚ÄñA i j‚Äñ‚Çä`. It is used in the proof of Siegel's lemma.
    
    Some preliminary results used in the proof of Siegel's lemma can be found at #13487
    
    [Zulip thread](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Siegel's.20Lemma)
    
    Co-authored-by: Laura Capuano and Amos Turchet @amosturchet

[33mcommit a3b20f662d8ba9d38c555398583dfba981913822[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Tue Jun 11 13:06:20 2024 +0000

    refactor(LightProfinite): redefine light profinite spaces as second countable profinite spaces (#13319)
    
    Changes the definition of `LightProfinite`¬†to the category of second countable totally disconnected compact Hausdorff spaces. The old `LightProfinite`¬†is renamed to `LightDiagram`¬†and we give an equivalence of categories between them.
    
    This changes `LightProfinite.Basic`¬†to match `Profinite.Basic` more closely. It also contains the equivalence of categories with `LightDiagram` and an `EssentiallySmall` instance.
    
    The `Limits`¬†and `EffectiveEpi` files now match their counterparts for `Profinite` more closely as well.
    
    This PR also adds a new feature: `LightProfinite`¬†has countable limits and the functor to `Profinite`¬†creates countable limits.

[33mcommit 5df366c554cb319aea609b6616ea5802ed35e928[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Jun 11 12:05:59 2024 +0000

    chore(*): add more `since :=` fields to `deprecated` (#13708)

[33mcommit 303e71911e1c040ac1278de13fc2032102888a6e[m
Author: damiano <adomani@gmail.com>
Date:   Tue Jun 11 08:52:01 2024 +0000

    feat: include commit hash in PR summary (#13716)
    
    This allows a "replay-like" feature for PR summaries, since the summary for each revision can be accessed via the `edited` button on the comment.

[33mcommit d2a637b363f8e92b10d103912d4b8906e6319cbe[m
Author: Kim Morrison <kim@tqft.net>
Date:   Tue Jun 11 08:52:00 2024 +0000

    chore(yoneda): remove unneeded universe annotations which break after leanprover/lean4#4408 (#13707)

[33mcommit cdbd30e1d2ec73fe8703fd664997544d2754f755[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Tue Jun 11 08:35:44 2024 +0000

    perf: speed up integrable_rpow_neg_one_add_norm_sq (#13699)
    
    This goes from about 20 seconds to instantaneous locally.

[33mcommit fa87862ba87b2509e74f3bb81bb17e1a6f7cb120[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Tue Jun 11 07:52:07 2024 +0000

    chore: fix diamond for WithTop subtraction (#13715)
    
    We have currently two different subtractions on `WithTop Œ±`.
    * The first one, requiring that `Œ±` has a zero, maps `x - ‚ä§` to `0`, and is the right convention when defining subtraction on ENat or ENNReal.
    * The second one, requiring a `LinearOrderedAddCommGroup`, maps `x - ‚ä§` to `‚ä§`. It is the additivization of the usual convention `x / 0 = 0`, and is relevant to work with valuations.
    
    Both instances apply for example to `WithTop ‚Ñ§`, creating a diamond. This PR changes the first instance to require a bottom element instead of a zero, to make sure that the two instances will apply in disjoint situations.
    
    This requires some new API for the second instance, to fix `Mathlib/Analysis/Analytic/Meromorphic.lean` which was (incorrectly) using the first instance.

[33mcommit 8b88570d7b6fe2ff5751fadd80d08faff9c0af13[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Tue Jun 11 07:52:06 2024 +0000

    chore: move cpow_mul_ofReal_nonneg earlier (#13700)
    
    It can't go into `Pow.Complex`, because `rpow` is only defined in `Pow.Real` in terms of `cpow`.

[33mcommit 15309603854174283fa5fa16a8132ba1ad4a9e1f[m
Author: Ga√´tan Serr√© <gaetan.serre@ens-paris-saclay.fr>
Date:   Tue Jun 11 07:52:05 2024 +0000

    feat(MeasureTheory/Integral/Lebesgue): setLintegral_pos_iff (#13172)
    
    (MeasureTheory/Integral/Lebesgue): `setLintegral_pos_iff`
      For a given Measurable set `s`and a AEMeasurable function `f`, the subset of `s` where `f` is nonnegative is of nonnegative measure iff the lintegral of `f`on `s` is nonnegative.
    
    Co-authored-by: Yury G. Kudryashov <ik333@cornell.edu>

[33mcommit 30fb6b871a060b7de9c5e6d5c798d665abd37c54[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Tue Jun 11 07:35:23 2024 +0000

    chore: split application of the layer cake formula into its own file (#13702)

[33mcommit 180e09057e062ddeeed34d330e0f5bbf2ca49cb5[m
Author: damiano <adomani@gmail.com>
Date:   Tue Jun 11 06:47:16 2024 +0000

    fix: do not remove `:=` or `where` in `move-decls` (#13714)
    
    This produces better reports of `instance (priority := ...)` changes.

[33mcommit c912f4d4151d5d8666fe2ec5bd15121050e0a5b2[m
Author: Christian Merten <christian@merten.dev>
Date:   Tue Jun 11 06:47:15 2024 +0000

    feat(AlgebraicGeometry): expand api on topological scheme morphism properties (#13701)
    
    Deduce properties of `MorphismProperty.topologically P` from the respective properties stated in terms of topological spaces.

[33mcommit 5618bfdede5bfdc23559ff83b710acf1e4fa6aae[m
Author: Jujian Zhang <jujian.zhang1998@outlook.com>
Date:   Tue Jun 11 06:47:14 2024 +0000

    feat(AlgebraicGeometry/ProjectiveSpectrum/Scheme): morphism of locally ringed space $\mathrm{Proj}|_{D(f)} -> \mathrm{Spec} A^0_f$ (#13689)
    
    We construct a morphism of locally ringed spaces `Œ± : Proj| (pbo f) ‚ü∂ Spec.T A‚Å∞_f` as the following: by the Gamma-Spec adjunction, it is sufficient to construct a ring map `A‚Å∞_f ‚Üí Œì(Proj, pbo f)` from the ring of homogeneous localization of `A` away from `f` to the local sections of structure sheaf of projective spectrum on the basic open set around `f`. The map `A‚Å∞_f ‚Üí Œì(Proj, pbo f)` is constructed in `awayToŒì` and is defined by sending `s ‚àà A‚Å∞_f` to the section `x ‚Ü¶ s` on `pbo f`.

[33mcommit 3e405812eeb4e6fdbcad701d1f7ba8a0a65b08bb[m
Author: Christian Merten <christian@merten.dev>
Date:   Tue Jun 11 06:33:24 2024 +0000

    feat(AlgebraicGeometry): definition of separated morphisms (#13698)
    
    Definition of separated morphisms.

[33mcommit 8852c2c9203bbb26139c974b6b71cfbbcffcfded[m
Author: Kim Morrison <kim@tqft.net>
Date:   Tue Jun 11 03:54:42 2024 +0000

    chore(Data/Bool/Basic): deprecate duplicate definitions (#13589)
    
    Deprecates theorems in favour of the versions in the Lean repository.
    
    This is actually pretty close to making `Data.Bool.Basic` a leaf file. We'd just need to move the LinearOrder instance elsewhere, and `injective_iff`.

[33mcommit 3419feb4202b5be3e4bf650cef060647f29975a6[m
Author: Kim Morrison <kim@tqft.net>
Date:   Tue Jun 11 03:41:36 2024 +0000

    chore: install elan when updating nightly-testing (#13711)
    
    Oops, updating nightly-testing was broken over the weekend.

[33mcommit c0f772270fe78bf1c44418eeded4730391e3b56a[m
Author: Peter Nelson <71660771+apnelson1@users.noreply.github.com>
Date:   Tue Jun 11 01:22:29 2024 +0000

    feat(Data/Set/Basic): Lemmas about pairs (#12875)
    
    We add some basic API about two-element sets. This involves moving the 'pair' section further down the file because
    of the position of lemmas used in proofs.

[33mcommit e86b8c5651d1ae91f586022ecbd893e2d2b219b7[m[33m ([m[1;31morigin/Localization_branch[m[33m)[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Jun 10 20:38:10 2024 +0000

    chore(*): fix more deprecated dates (#13687)

[33mcommit c95c52ea4cf299397d7771bacfcfcadaf084052b[m
Author: Amelia Livingston <wieser.eric@gmail.com>
Date:   Mon Jun 10 20:38:08 2024 +0000

    feat: category of bialgebras  (#11973)
    
    The category of bialgebras over a commutative ring. Mimics `Mathlib.LinearAlgebra.QuadraticForm.QuadraticModuleCat.lean`.
    
    
    
    Co-authored-by: 101damnations <101damnations@github.com>

[33mcommit 4422acf8ea54824b743a0bd9d3b93c35d5c67f50[m
Author: Fr√©d√©ric Dupuis <dupuisf@iro.umontreal.ca>
Date:   Mon Jun 10 19:57:48 2024 +0000

    fix: add deprecation alias (#13693)
    
    This PR adds a deprecation alias that was missing from #10088.

[33mcommit 936ffbfa56bdf99023f2da757c6c6774d0665805[m
Author: Andrew Yang <the.erd.one@gmail.com>
Date:   Mon Jun 10 19:57:47 2024 +0000

    chore(RingTheory/OreLocalization/Basic): Split file and to-additivise (#13559)
    
    
    
    Co-authored-by: Andrew Yang <36414270+erdOne@users.noreply.github.com>

[33mcommit 14040d4797cde044d25ef5faaf7c43e1341fd9ee[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Mon Jun 10 19:57:45 2024 +0000

    feat: the category of sheaves of modules is abelian (#13455)

[33mcommit 6e0fcfb1c261e70033426cf6eedc63ab1c74b610[m
Author: David Kurniadi Angdinata <dka31@cantab.ac.uk>
Date:   Mon Jun 10 19:34:45 2024 +0000

    feat(AlgebraicGeometry/EllipticCurve/Jacobian): implement group law for Jacobian coordinates (#9405)
    
    Completes the proof of the group law in Jacobian coordinates, analogously to #8485

[33mcommit 69fa173737cad352d14190dbbf53c8e52909bf02[m
Author: Calle S√∂nne <calle.sonne@gmail.com>
Date:   Mon Jun 10 18:57:27 2024 +0000

    feat(Bicategory/LocallyDiscrete): add eqToHom lemmas (#13695)

[33mcommit 9c33255456b34d97da1cc03d42b6c234fb14222f[m
Author: Fr√©d√©ric Dupuis <dupuisf@iro.umontreal.ca>
Date:   Mon Jun 10 14:50:27 2024 +0000

    chore: move and generalize card_fiber_eq_of_mem_range (#10088)
    
    This PR moves the lemma `card_fiber_eq_of_mem_range` from `RingTheory/IntegralDomain` to `GroupTheory/Index` which makes far more sense. It also adds the additive version, generalizes to `MonoidHomClass`, and puts it in the `MonoidHom` namespace (instead of root).
    
    Co-authored-by: Yury Kudryashov <urkud@urkud.name>

[33mcommit 1dd79a5d5862aa442ba50bb3fd12c59f496c3ee2[m
Author: Mar√≠a In√©s de Frutos-Fern√°ndez <mariaines.dff@gmail.com>
Date:   Mon Jun 10 12:50:52 2024 +0000

    feat(FieldTheory): add results about minpoly (#12450)

[33mcommit 913dc471aee5ed0e647c470ada11517708044991[m
Author: Andrew Yang <the.erd.one@gmail.com>
Date:   Mon Jun 10 12:28:00 2024 +0000

    feat(RingTheory/Presentation): Develop API for presentations of algebras. (#12518)
    
    
    
    
    Co-authored-by: Andrew Yang <36414270+erdOne@users.noreply.github.com>

[33mcommit ec8ad89db3b8120b3be19d209ec5769e50706aa2[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Mon Jun 10 11:56:59 2024 +0000

    chore: move ProperSpace instances to ProperSpace.lean (#13659)
    
    This means `MetricSpace.Basic` no longer needs to depend on `MetricSpace.ProperSpace`.

[33mcommit 5e33eb3b841bfdcee4fff013790d29ce38df7056[m
Author: Jujian Zhang <jujian.zhang1998@outlook.com>
Date:   Mon Jun 10 11:04:51 2024 +0000

    feat(AlgebraicGeometry/GammaSpecAdjunction): a missing lemma (#13412)
    
    Added the following lemma:
    
    Let $X$ be a locally ringed space, $R$ a ring and $U \subseteq \mathrm{Spec} R$ an open set.
    Then for any $f : R \to \Gamma(\mathcal O_X, X)$, if we denote $F$ as the corresponding morphism $X \to \mathrm{Spec} R$ under the gamma spec adjunction  we have that
    the composition $res^{\mathrm{X}}\_{F^{-1}U} \circ f$ is equal to the composition $(R \to \mathcal{O}_{\mathrm{Spec} R}(U)\circ F(U)$
    
    ```lean
    lemma toOpen_comp_locallyRingedSpaceAdjunction_homEquiv_app
        {X : LocallyRingedSpace} {R : Type u} [CommRing R]
        (f : LocallyRingedSpace.Œì.rightOp.obj X ‚ü∂ op (CommRingCat.of R)) (U) :
        StructureSheaf.toOpen R U.unop ‚â´
          (locallyRingedSpaceAdjunction.homEquiv X (op <| CommRingCat.of R) f).1.c.app U =
        f.unop ‚â´ X.presheaf.map (homOfLE le_top).op := by
    ```
    
    found usefuly by Andrew during #12371
    
    Co-authored-by: Andrew Yang <the.erd.one@gmail.com>

[33mcommit 0fa3e41ec37780f4ac60013a9305f6196d9080b1[m
Author: David Kurniadi Angdinata <dka31@cantab.ac.uk>
Date:   Mon Jun 10 11:04:50 2024 +0000

    feat(AlgebraicGeometry/EllipticCurve/Jacobian): implement group operations on nonsingular rational points for Jacobian coordinates (#9436)
    
    Define a addition-preserving bijection `toAffine_addEquiv` with the affine case to prove `Point` is an abelian group.
    
    This is the fourth in a series of four PRs leading to #9405 and is analogous to #9420
    
    
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>

[33mcommit bdf87dca16977b9c46aa618f12874ddbd44dbbd5[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Mon Jun 10 10:51:38 2024 +0000

    refactor(Topology/Category): derive `Preregular` instances for `Profinite` and `Stonean` from the one on `CompHaus` (#12966)

[33mcommit 14973118a5908f6a69845ebc55863067b20bf26e[m
Author: Calle S√∂nne <calle.sonne@gmail.com>
Date:   Mon Jun 10 10:34:03 2024 +0000

    chore(Bicategory/Functor): split into two files (#13677)
    
    Made a folder `Bicategory/Functor` and split the file `Bicategory/Functor.lean` into `Bicategory/Functor/Oplax` and `Bicategory/Functor/Pseudofunctor`. This should make it easier to add more code about functors for bicategories.

[33mcommit f94a9729a8804896c4af5d4a43be54e1b3e336a0[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Mon Jun 10 10:34:01 2024 +0000

    chore: remove or lower `maxHeartbeats` to match the current state (#13669)
    
    A hand-ful further `maxHeartbeats` change related to field_simp are also obsolete; I will file a separate PR for these.

[33mcommit d543653e4584303a52da23c398fe6f7eb10b839f[m
Author: L <hi@llllvvuu.dev>
Date:   Mon Jun 10 10:01:13 2024 +0000

    chore: fix "unnecessary have" lint errors (#13680)
    
    
    
    
    
    Co-authored-by: L Lllvvuu <git@llllvvuu.dev>

[33mcommit 8ecf3628c9ee2cb3cfbdcaf49d61c8f116187461[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Mon Jun 10 10:01:12 2024 +0000

    chore: move totallyBounded_Ixx lemmas up a bit (#13631)

[33mcommit f87721ad1ba9a6057d502b060a87778fb8186dbd[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Mon Jun 10 09:25:07 2024 +0000

    chore: reduce import in NumberTheory.Divisors (#13681)

[33mcommit 2684a38f4e7ac359959cfe71302ade4c43afb18a[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Mon Jun 10 08:52:53 2024 +0000

    feat(lint-style): lint on the plain string 'Adaptation note:' (#13660)
    
    ask to use #adaptation_note instead.
    This command is a unified place to annotate all commands, and avoids typos.

[33mcommit 38962a38dd58544b04954057b7488602a5f43aef[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Jun 10 07:27:44 2024 +0000

    chore(*): drop some bit0/bit1 lemmas (#13679)
    
    Since `bit0` and `bit1` are deprecated in Lean 4, these lemmas were deprecated for a long time.
    
    Also move `Filter.nonneg_of_eventually_pow_nonneg` to `Order/Filter/ModEq`.

[33mcommit b7d3b35b941cf0218479d694993cf2e3d5b0d73c[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Mon Jun 10 07:27:43 2024 +0000

    chore: use #adaptation_note for the remaining cases (#13665)

[33mcommit 4e81631302fd0f71255c5ce078f5cd9277abec4a[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Jun 10 06:26:11 2024 +0000

    chore(*): fix more deprecated dates (#13674)

[33mcommit 59083072178366499f90d9ffece56ec72b96e720[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Mon Jun 10 06:00:30 2024 +0000

    perf(VectorBundle/FiberwiseLinear): speed up (#13454)
    
    #12061 regressed this file pretty badly; speed it up again by mostly reverting a change from that PR, and pushing it further: instead of applying `mem_iUnion` (which is slow), extract a more specialised statement `mem_aux` and use it.
    
    Before these changes, the `profiler` output on `smoothFiberwiseLinear` was
    ```
    simp took 2.01s
    tactic execution of Lean.Parser.Tactic.rintro took 103ms
    simp took 905ms
    simp took 507ms
    simp took 1.26s
    simp took 1.14s
    elaboration took 645ms
    ```
    after these changes, it is
    ```
    simp took 534ms
    simp took 183ms
    simp took 127ms
    simp took 421ms
    simp took 365ms
    elaboration took 350ms
    ```
    Still not great at all, but deeper fixes require more time and expertise than I currently have.

[33mcommit d76810068b8f0ff9845afa2267a1d71409398b7c[m
Author: Michael Stoll <Michael.Stoll@uni-bayreuth.de>
Date:   Mon Jun 10 04:35:00 2024 +0000

    refactor: move GaussSum directly under NumberTheory (#13540)
    
    This moves `NumberTheory.LegendreSymbol.GaussSum` to `NumberTheory.GaussSum`.
    Rationale: Gauss sums are useful beyond quadratic reciprocity (which was the original motivation to add them to Mathlib).
    
    We use the opportunity to deal with some porting notes.

[33mcommit 9f2d0a11ff15996a952b8cb97bd8e30568179e4e[m[33m ([m[1;31morigin/fix-withbot-withtop-bot-top-instances[m[33m)[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Sun Jun 9 23:30:16 2024 +0000

    feat(CategoryTheory/GradedObject): the triangle equality (#11687)
    
    In this PR, we obtain the lemma `GradedObject.mapBifunctor_triangle` which promotes a triangle identity involving functors to a triangle identity for the induced functors on graded objects. More simp lemmas for isomorphisms like `Iso.map_hom_inv_id_eval_app ` are also added in order to ease automation.
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit d4e36bbfa9495304a25800b9124aa4b33955091d[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Sun Jun 9 22:38:26 2024 +0000

    feat: the homology sequence of a distinguished triangle in the derived category (#13664)
    
    In this PR, we define `homologyFunctor C n : DerivedCategory C ‚•§ C`, show they are homological functors and construct the long exact sequences associated to distinguished triangles in the derived category.
    
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit 6a42b4275f15c8d07e23f59c33b142c17509efb3[m
Author: Jo√´l Riou <dagurtomas@gmail.com>
Date:   Sun Jun 9 22:38:25 2024 +0000

    feat(CategoryTheory/Sites): transfer WEqualsLocallyBijective (#13632)
    
    Under certains conditions on a functor between sites `(D, K)` to `(C, J)`, we express the class `J.W` of morphisms of presheaves which become iso after sheafification as the inverse image of the class `K.W`. We deduce that the typeclass `WEqualsLocallyBijective` can be transported from `(D, K)` to `(C, J)`.
    
    
    
    Co-authored-by: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>

[33mcommit 02b520009db0c501ceac1e3f9087d27a4bfa85d5[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Sun Jun 9 22:38:24 2024 +0000

    chore: Rename `Finset.piAntidiagonal` to `Finset.finsuppAntidiag` (#13574)
    
    I need the version of this of type `Finset (Œπ ‚Üí‚ÇÄ Œº)`. I therefore rename the `Finset (Œπ ‚Üí‚ÇÄ Œº)` from `piAntidiagonal` to `finsuppAnttidiag` since it's not about `Pi` but about `Finsupp`.

[33mcommit 0e9ba7d18c8280851a8f74c93fb3f06440a9457d[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Sun Jun 9 22:38:23 2024 +0000

    feat: the sheafification functor for presheaves of modules (#13441)
    
    In this PR, we construct the sheafification functor for presheaves of modules, and show that it is a left adjoint functor.

[33mcommit 75349a6d7cb21f5d4bf9552ec89a62e46eaad010[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Sun Jun 9 22:38:21 2024 +0000

    chore: move NormalizedGCDMonoid ‚Ñ§ to reduce imports (#12364)

[33mcommit c74732f1c777691fe45bce77b6d747876f2685a0[m
Author: David Kurniadi Angdinata <dka31@cantab.ac.uk>
Date:   Sun Jun 9 22:24:42 2024 +0000

    feat(AlgebraicGeometry/EllipticCurve/DivisionPolynomial/Basic): define division polynomials (#6703)

[33mcommit 04c29e2530bb437a841451567fa770f65183f6b5[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Sun Jun 9 19:41:17 2024 +0000

    chore: move basic linear equivalences to Mathlib.Algebra.Module.Equiv (#13662)
    
    This means `Mathlib.Algebra.Module.Equiv` is starting to get a little on the large side, but I don't have a great alternative.

[33mcommit d5ada912b5e50763524d05c324b78c3b8152f6f0[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Sun Jun 9 17:38:11 2024 +0000

    chore(Algebra/Group/Hom/Instances): remove obsolete adaptation note (#13668)
    
    The underlying bug (#11357) has been fixed.

[33mcommit b02cb781f389622839883fb023e972695e7cb71e[m
Author: Peter Nelson <71660771+apnelson1@users.noreply.github.com>
Date:   Sun Jun 9 17:38:10 2024 +0000

    feat(Data/Set/Function): lemmas about inj/bij/surjectivity (#12555)
    
    This PR adds a few API lemmas about `InjOn`, `BijOn` and `SurjOn`.
    
    
    
    Co-authored-by: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>

[33mcommit afbd7e51018ece16b1cd6d4dc1367805433be950[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Sun Jun 9 16:47:19 2024 +0000

    chore: remove some `set_option ... in` which are not necessary any more (#13655)
    
    All of them are related backwards compatibility flags.
    
    Found by `adomani`'s linter in #13653, not exhaustive.

[33mcommit 5808ec5bafac85987421d6f425986e0c5b1f8074[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Sun Jun 9 15:54:37 2024 +0000

    feat: add `List.iterate_add` (#13257)

[33mcommit d662e6c35d0faf26ff1163a253daf0a1458f4e00[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sun Jun 9 14:51:36 2024 +0000

    chore(*): drop some long-deprecated theorems (#13619)

[33mcommit 491655d43fe6b7f4d326234f429f2f4f10cbf601[m
Author: Junyan Xu <junyanxumath@gmail.com>
Date:   Sun Jun 9 14:00:49 2024 +0000

    feat(Algebra, Order): simple submodules in a semisimple module (#13636)
    
    + Add `IsAtomic.exists_atom`: a nontrivial atomic partial order has an atom, and the dual statement.
    
    + Since the submodule lattice of a semisimple module is atomistic, deduce that every submodule is the sum of its simple submodules, and that any nontrivial submodule has a simple submodule.
    
    
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>

[33mcommit d35039b8c30c0a3ae1de06be0b76b5011f3e4a4b[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Sun Jun 9 12:00:33 2024 +0000

    chore(Data/Rat/Cast/Order): Use `p`, `q` as variable names (#13644)
    
    ... rather than `a`, `b`, `m`, `n`, `r`. Also make arguments to rewriting lemmas explicit.

[33mcommit 033a0de149be1a388c2baabb1496421ef55d4e88[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Sun Jun 9 11:47:21 2024 +0000

    chore: Run `lake exe shake --update` (#13657)
    
    Seems like shake wants to move things around due to the `Std`/`Batteries` rename, so I'm running `lake exe shake --update` now to avoid polluting later PRs.

[33mcommit 76e09972ef33b2bb972f81adac2de6754e9dac1f[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Sun Jun 9 09:51:13 2024 +0000

    chore: Move the inheritance `StrictOrderedSemiring Œ± ‚Üí CharZero Œ±` instance to a less obscure file (#13654)
    
    There is little point in avoiding to import `CharZero` in `Algebra.Order.Ring.Defs` (where `StrictOrderedSemiring` is defined) since it is so basic. Exiling the titular basic instance to an obscure file meant that people had trouble finding that instance (and it just happened to Eric).

[33mcommit 415fd9d722d7b71d04a59352ca15439d1f3918e0[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Sun Jun 9 08:12:06 2024 +0000

    chore: Add floor_ofNat and ceil_ofNat (#13645)
    
    Also renames `Nat.floor_coe` to `floor_natCast`, leaving behind a deprecation.

[33mcommit 88a31a916b9f649ab0fc254185baf3576f827b18[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Sun Jun 9 08:12:05 2024 +0000

    chore(Order/Atoms): Rename instances according to convention (#13643)

[33mcommit 4810c69e7ae15ebd786e9760d911c4fd824e9195[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Sun Jun 9 07:15:27 2024 +0000

    feat: order lemmas for NNRat (#13547)
    
    This copies the API for order lemmas on `Rat`

[33mcommit ed63385753ed24f23d780e567364a1e001f6ee91[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Sat Jun 8 22:54:11 2024 +0000

    feat(CategoryTheory/Sites): reflecting and preserving local injectivity and surjectivity (#13621)
    
    This PR proves that precomposition with a cocontinuous functor preserves local injectivity and surjectivity of morphisms of presheaves, and that precomposition with a cover preserving and cover dense functor reflects the same properties.

[33mcommit 5ddf243ca629d65bf4b2859ec0b4ec5076634d53[m
Author: Christopher Hoskin <christopher.hoskin@gmail.com>
Date:   Sat Jun 8 21:41:03 2024 +0000

    refactor(LinearAlgebra/BilinearMap): Left composition, bilinear over different rings (#13042)
    
    Generalise `compl‚ÇÇ` and `compl‚ÇÅ‚ÇÇ` for left composition with maps which are linear over different rings in the first and second variable.
    
    Needed for #9334
    
    
    
    Co-authored-by: Christopher Hoskin <mans0954@users.noreply.github.com>

[33mcommit c995db1feabfe4b1d204e24ac689001d44484bc9[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sat Jun 8 18:34:16 2024 +0000

    chore(Data/Tree): split file (#13629)
    
    Move 3 definitions that depend on `Num` to a new file.

[33mcommit 8a8a2571d0a7ca9738de3e4338061f7e25493127[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Sat Jun 8 18:34:15 2024 +0000

    style: fix last easy isolated `by`s (#13618)
    
    Follow-up on #13419: fix three cases with an easy fix which were merged since then, and three harder cases.

[33mcommit 7e7e7b0637070aa625d9f52da8fe60667cb52bb8[m
Author: Brendan Seamas Murphy <shamrockfrost@gmail.com>
Date:   Sat Jun 8 18:34:14 2024 +0000

    Chore(Algebra/Polynomial/Module/Basic): Refactor out Module.AEval  (#13613)
    
    Refactor Module.AEval out of Algebra/Polynomial/Module/Basic.

[33mcommit d498432719bb74d4645a60ec6af80b62325e643b[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Sat Jun 8 18:34:13 2024 +0000

    feat: the single functors from the homotopy category (#13600)
    
    In this PR, we define the single functors from a preadditive category (with a zero object) to its homotopy category of cochain complexes and show they behave well with respect to shift functors.

[33mcommit c4a62444f478937752b35a6bc4708bcbbebdd577[m
Author: Christian Merten <christian@merten.dev>
Date:   Sat Jun 8 18:34:12 2024 +0000

    feat(Topology/Category): category of finite topological spaces (#13485)
    
    The category of finite topological spaces.

[33mcommit 299261f5ccbfd632c4b1dfa478075c7330d4a98e[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sat Jun 8 17:32:14 2024 +0000

    chore(*): fix formatting of some deprecation dates (#13626)

[33mcommit b65219f6cf13657df3bf2a1c140f5d58115b16a0[m
Author: Felix-Weilacher <fweilach@andrew.cmu.edu>
Date:   Sat Jun 8 17:32:13 2024 +0000

    feat(MeasureTheory): generalize NullMeasurable to measurability mod a sigma filter.  (#10856)
    
    add a general construction of a measurable space consisting of sets measurable with respect to some underlying sigma algebra modulo a given sigma filter. Refactor basic definitions and lemmas in `MeasureTheory/Measure/NullMeasurable.lean` to be an instance of this general construction.
    
    The reason is that in the immediate future I would like to define Baire measurability in mathlib, and want to avoid repetition.
    
    *TODO*: Similarly generalize things about `AEMeasurable`, where appropriate.
    
    
    
    Co-authored-by: Felix-Weilacher <112423742+Felix-Weilacher@users.noreply.github.com>
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>

[33mcommit fa72f05e0195cce240ee551dce4ba16c29df759a[m
Author: Martin Dvo≈ô√°k <martin.dvorak@matfyz.cz>
Date:   Sat Jun 8 16:29:28 2024 +0000

    chore(Order/Basic): cleanup redundant type arguments (#13604)
    
    
    
    Co-authored-by: madvorak <dvorakmartinbridge@seznam.cz>

[33mcommit e3cbddfba19c7a9943087ab2d2d5770471ac246a[m
Author: Kim Morrison <kim@tqft.net>
Date:   Sat Jun 8 16:29:27 2024 +0000

    chore: rename UInt8.isLower to isASCIILower, etc (#13586)
    
    Hopefully this one is not controversial. :-)

[33mcommit dc44d90bf633436d6dd898199f3894bb6d28eb99[m
Author: Christian Merten <christian@merten.dev>
Date:   Sat Jun 8 16:29:26 2024 +0000

    feat(CategoryTheory/Galois): fundamental group is limit of automorphism groups (#12843)
    
    We show that the automorphism group of a fiber functor is isomorphic to the limit of the automorphism groups of all Galois objects.
    
    From this we deduce that the automorphism group of a fiber functor acts transitively on the fibers of connected objects. This is the last essential step towards showing that a fiber functor induces a fully faithful embedding into the category of finite `Aut F`-types.

[33mcommit 42eb9bac644a63252c823c7175f35ebd45da0142[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Sat Jun 8 16:29:25 2024 +0000

    chore: Move `CharP` lemmas about order of elements (#12816)
    
    By swapping the order of imports between `Algebra.CharP.Basic` and `GroupTheory.OrderOfElement`, the first one goes from 944 dependencies to 812, and the second one from 912 to 915.
    
    Also generalise a few lemmas from semirings to non-associative semirings.
    
    This swap is justified by the fact that `CharP` is a purely algebraic concept while `OrderOf` is group-theoretic. Nevertheless,  `GroupTheory.OrderOfElement` should be split in a future PR, in which case the `CharP` lemmas might move back.

[33mcommit 6eaf5a4d3e6947b60c49966de739526b4b1200dc[m
Author: L <hi@llllvvuu.dev>
Date:   Sat Jun 8 15:34:42 2024 +0000

    feat: make `Vector.inductionOn` the default `induction_eliminator` (#13625)
    
    otherwise it's `Subtype.rec`, which (IMO) is less useful for `induction` than it is for `cases`
    
    
    
    Co-authored-by: L Lllvvuu <git@llllvvuu.dev>

[33mcommit 80dbecb25b2181c9f41239c60bdeb26bafbe9731[m
Author: Pol'tta / Miyahara K≈ç <pol_tta@outlook.jp>
Date:   Sat Jun 8 14:38:13 2024 +0000

    feat: topology on `‚Ñï+`(`PNat`) (#13250)

[33mcommit 02ca1f49ba1ffa045364e8fc074f5f87d129187c[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sat Jun 8 10:13:38 2024 +0000

    chore(FieldTheory/Finiteness): delete a deprecated alias (#13624)

[33mcommit 8462800aa0e622664407a6d39db519ac34292363[m
Author: Martin Dvo≈ô√°k <martin.dvorak@matfyz.cz>
Date:   Sat Jun 8 10:13:37 2024 +0000

    chore(Data/List): cleanup redundant type arguments (#13605)
    
    
    
    Co-authored-by: madvorak <dvorakmartinbridge@seznam.cz>

[33mcommit e00920debbc778c20d08a8e4378c63608f4be3b5[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Sat Jun 8 10:13:36 2024 +0000

    doc: clean up some `add_decl_doc`s (#12700)
    
    Many of these can just be inlined.
    
    I've left the ones around `to_additive` alone, as often these are a stylistic choice.

[33mcommit 89f03043c38a5d1ee77f50ac5fe77c4e7215ab16[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Sat Jun 8 09:11:43 2024 +0000

    chore: Rename `Prod_map` (#12753)
    
    ... in lemma names and section names in order to follow the naming convention.

[33mcommit a69ea8f122c45203316336007cfb35bbb0674596[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Sat Jun 8 08:17:26 2024 +0000

    chore: avoid instance names for DMatrix (#13596)
    
    This should be more robust.

[33mcommit c1379a3c12d8f69719efeffde882057dc05fbcbe[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Sat Jun 8 08:17:25 2024 +0000

    chore(AddChar): Rename `map_zero_one` to `map_zero_eq_one` (#13576)
    
    To follow the naming convention, rename
    * `map_zero_one` ‚Üí `map_zero_eq_one`
    * `map_add_mul` ‚Üí `map_add_eq_mul`
    * `map_nsmul_pow` ‚Üí `map_nsmul_eq_pow`
    * `map_neg_inv` ‚Üí `map_neg_eq_inv`
    * `map_zsmul_zpow` ‚Üí `map_zsmul_eq_zpow`

[33mcommit 1808f157cd908c4acabc004652925347983a2403[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Sat Jun 8 08:17:24 2024 +0000

    chore: move LinearMap.eqLocus to its own file (#13566)

[33mcommit 60054b56377c33922881e64e8a3adf152a64b9bb[m
Author: Pol'tta / Miyahara K≈ç <pol_tta@outlook.jp>
Date:   Sat Jun 8 08:03:30 2024 +0000

    feat(Topology/List): If `Œ±` is discrete then so is `List Œ±` (#13263)
    
    ```lean
    instance [DiscreteTopology Œ±] : DiscreteTopology (List Œ±)
    ```

[33mcommit 3fe9f1973d5d9367888ff4002db031535c6f4afe[m
Author: Peter Nelson <71660771+apnelson1@users.noreply.github.com>
Date:   Sat Jun 8 07:02:38 2024 +0000

    chore: desimp `compl_sdiff` (#13606)
    
    We remove the `simp` attribute from `theorem compl_sdiff : (x \ y)·∂ú = x ‚á® y`, since (for sets) it turns standard notation into exotic notation.
    
    Given that this passed CI with no further changes, it seems likely it wasn't being used much.

[33mcommit ef090d9ba5ee3eeb9048f5edece9b4768b3e4c46[m
Author: JovanGerb <jovan.gerbscheid@gmail.com>
Date:   Sat Jun 8 06:05:16 2024 +0000

    fix: remove unused arguments in `norm_mkPiAlgebraFin` (#13628)
    
    As reported on [Zulip](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/undetected.20unused.20instance.20arguments/near/443401985), `norm_mkPiAlgebraFin` and `norm_mkPiAlgebraFin_le_of_pos` contain unused arguments. I fixed it by deleting the offending variables from the `variable` command, as these weren't used anywhere else. As a result two proofs don't need to specify this unused argument anymore.

[33mcommit 68203c8e69a5ef5c32212346664bc0a0330496db[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Sat Jun 8 04:33:29 2024 +0000

    feat(CategoryTheory): right derivability structures (#12633)
    
    In this PR, we define the notion of right derivability structures introduced by Bruno Kahn and Georges Maltsiniotis (*Structures de d√©rivabilit√©*, Adv. Math. 218 (4), pp. 1286-1318 (2008)). It shall be used in order to construct and study derived functors.
    
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit cce8437ae54afddaaf6bc9c0aadc6b6000326c8d[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Sat Jun 8 04:33:28 2024 +0000

    feat: the derived category of an abelian category (#11806)
    
    The derived category of an abelian category is defined and it is shown that it is a triangulated category.
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit ecd2ff7c97ed5bdc8c1446a3d6c7b96ab28b2d72[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Sat Jun 8 04:33:26 2024 +0000

    feat(Algebra/Homology): commutation up to signs of the compatibility isomorphisms of the total complex with shifts in both variables (#11517)
    
    Shifting horizontally a bicomplex by an integer `x` and then taking the total complex gives a cochain complex that is isomorphic to the shift of the total complex of the original bicomplex. The same applies to vertical shifts by an integer `y`. However, when we apply both horizontal and vertical shifts, depending on whether we apply the horizontal shift or the vertical shift first, we get two isomorphisms which differ by the sign `(x * y).negOnePow`.
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit fd7d069a08f2d88ae27088c12b5bf9b811f1b800[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Sat Jun 8 04:15:15 2024 +0000

    feat: shifted morphisms in categories with a shift (#13571)
    
    Given a category `C` endowed with a shift by an additive monoid `M` and two objects `X` and `Y` in `C`, we consider the types `ShiftedHom X Y m` defined as `X ‚ü∂ (Y‚ü¶m‚üß)` for all `m : M`, and the composition on these shifted hom.

[33mcommit 480278c4a8d6820a869b7154bf8a3a91042c966a[m
Author: Thomas Browning <tb65536@uw.edu>
Date:   Sat Jun 8 03:30:04 2024 +0000

    refactor(GroupTheory/Coset): Replace `Fintype.card` with `Nat.card` (#13431)
    
    A lot of the group theory library still needs to be switched over from `Fintype.card` to `Nat.card`. This PR switches over `GroupTheory/Coset.lean`. I had to add a little noise to a few other files, but these will get cleaned up once those files are switched over later.

[33mcommit acd84d3d54aa9cda6aa7fb22957e54a948cb3022[m
Author: L <hi@llllvvuu.dev>
Date:   Sat Jun 8 02:35:26 2024 +0000

    feat: basic `Vector.inductionOn` API (#13616)
    
    Also make the case names slightly nicer for when using the syntax:
    ```lean
    induction v using Vector.inductionOn with
    | nil => sorry
    | cons ih => sorry
    ```
    
    
    
    
    Co-authored-by: L Lllvvuu <git@llllvvuu.dev>

[33mcommit 6bfbb6916c8c9b7a86b3c4fffbb4071371746430[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Sat Jun 8 01:31:31 2024 +0000

    feat(CategoryTheory): a conservative functor preserving epis and monos reflects the property of being balanced (#13622)

[33mcommit c789ab5e4f68b65921be20c5ba80af4cbc31944b[m
Author: Johan Commelin <johan@commelin.net>
Date:   Fri Jun 7 23:31:54 2024 +0000

    ci: post a weekly report to zulip with some technical debt stats (#13597)
    
    
    
    
    Co-authored-by: adomani <adomani@gmail.com>
    Co-authored-by: Michael Rothgang <rothgami@math.hu-berlin.de>
    Co-authored-by: grunweg <rothgami@math.hu-berlin.de>

[33mcommit 4bbafd4469b12a42057979d895e86c7968c3292f[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Fri Jun 7 23:31:53 2024 +0000

    chore(Order/Interval): use `WithBot` API (#13493)

[33mcommit 3ee149acb82c68fd1c34f50d2f08264d544cad75[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Fri Jun 7 23:31:53 2024 +0000

    feat: Topological properties of order-connected sets in ‚Ñù‚Åø (#10565)
    
    Partially forward-port https://github.com/leanprover-community/mathlib/pull/16976

[33mcommit e009e45eeaa7d84d99942c246f30dc2af9f8a5b8[m
Author: damiano <adomani@gmail.com>
Date:   Fri Jun 7 22:14:49 2024 +0000

    rename: Declarations diff (#13614)

[33mcommit 573c52aab990b0ade90107eb6b74ea105bf8290e[m
Author: Junyan Xu <junyanxumath@gmail.com>
Date:   Fri Jun 7 21:13:25 2024 +0000

    chore: add deprecated aliases missing from #13356 (#13612)
    
    
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>

[33mcommit 91cb68eac4d39962dbc02c406cec2ee2f0f812ee[m
Author: Kyle Miller <kmill31415@gmail.com>
Date:   Fri Jun 7 21:13:24 2024 +0000

    feat: `refold_let` tactic (#12745)
    
    If `x := v` is a local definition, the `refold_let x` tactic is roughly equivalent to `rw [show v = x from rfl]`. That's to say, it looks for instances of `v` and replaces them with `x`.
    
    Adds location in formation in the `runDefEqTactic` interface so that defeq tactics can know which location is being changed, which is important for `refold_let` since `refold_let x at *` should only affect locations that come after `x`.

[33mcommit fe06d9449991a12faaa494edb843588ca1048d9c[m
Author: Kim Morrison <kim@tqft.net>
Date:   Fri Jun 7 20:59:42 2024 +0000

    chore: move dependencies off nightly-testing (#13615)
    
    When we moved to `v4.9.0-rc1`, I accidentally left all our dependencies on `nightly-testing`. This restores them to the `main`/`master` branches.

[33mcommit 77aac96bd0b559bec50aa570e487f6617a205fb5[m
Author: Peter Nelson <71660771+apnelson1@users.noreply.github.com>
Date:   Fri Jun 7 19:37:38 2024 +0000

    feat(Data/Matroid/Constructions): simple constructions of matroids (#12415)
    
    The file in this PR constructs all possible matroids that have only one base (these are trivial to describe), and gives some API.
    
    
    
    Co-authored-by: Kyle Miller <kmill31415@gmail.com>

[33mcommit 867ff263ba4f5363a0e195d433ecf724b74c9404[m
Author: Kim Morrison <kim@tqft.net>
Date:   Fri Jun 7 17:47:47 2024 +0000

    chore: deprecate unused Array/List function (#13587)

[33mcommit 5c7ead36ec8216f1a37f4c79d71400d0e410676d[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Fri Jun 7 17:47:46 2024 +0000

    chore: Make `Subgroup.coe_set_mk`/`Subsemigroup.coe_set_mk` a `norm_cast` lemma (#13444)
    
    Those are the only eligible lemmas of their series as all other `coe_set_mk` lemmas have a bundled set coercion on their RHS.

[33mcommit b4f93221ff267662fd8bf645625edaa3d51a7872[m
Author: L <hi@llllvvuu.dev>
Date:   Fri Jun 7 17:47:45 2024 +0000

    feat: `oangle_sign_eq_zero_iff_collinear` (#13193)
    
    
    
    Co-authored-by: L Lllvvuu <git@llllvvuu.dev>
    Co-authored-by: Komyyy <pol_tta@outlook.jp>

[33mcommit 14710ad9e0b508954eca78998d23060d4f8d0bb1[m
Author: Ralf Stephan <ralf@ark.in-berlin.de>
Date:   Fri Jun 7 16:59:21 2024 +0000

    feat(Order/Interval): conversion Icc <-> range (#13440)
    
    Add lemma `range_eq_Icc_zero_sub_one`, as direct conversion between Icc and range is missing

[33mcommit 503253e624f30945005763453b9f3910ce059273[m
Author: damiano <adomani@gmail.com>
Date:   Fri Jun 7 16:17:01 2024 +0000

    expected fix: checkout from master for PR summary (#13608)
    
    This PR accompanies #13602: it makes the script pull code from master, now that it is present there, rather than from the branch that introduced the code.
    
    It is expected to fail CI until the PR on which it depends is merged.
    
    It also fixes a copy-paste error in the labeling of `Diff of declarations`.

[33mcommit 263a976e707fc71049dabfebbe1391c54cc6b075[m
Author: damiano <adomani@gmail.com>
Date:   Fri Jun 7 14:43:22 2024 +0000

    CI: extract update comment and merge import and diff summaries (#13602)
    
    This PR extends the PR summary introduced in #13556.
    
    * Extracts the GitHub comment creation/update to a new file;
    * adds the output of `move-decls` to the automatically updated message posted by the import-automation;
    * if the output of either summary exceeds a few lines, then that output is hidden behind a collapsed summary.

[33mcommit ce2266b2eaa2bc07369ae4677ad94dccd42773a3[m
Author: Lorenzo Luccioli <lorenzoluccioli@gmail.com>
Date:   Fri Jun 7 14:08:02 2024 +0000

    feat: Add `integrable_add_iff_of_nonneg` (#13309)
    
    Add the lemma saying that if two functions are almost everywhere nonnegative then their sum is integrable iff they are both integrable.
    
    In particular, add the following lemmas:
    1. `integrable_left_of_integrable_add_of_nonneg`
    2. `integrable_right_of_integrable_add_of_nonneg`
    3. `integrable_add_iff_of_nonneg`
    4. `integrable_add_iff_of_nonpos`
    
    1. and 2. are auxiliary for 3.; 4. is the same result for nonpositive functions.

[33mcommit 8f1a35770f1db3d72344351ca804d1fd938a7d62[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Fri Jun 7 13:10:45 2024 +0000

    feat(Condensed): functor from light profinite sets to light condensed sets (#13502)

[33mcommit cc385a8845f388903ca98d6b230c2eb8b72aa661[m
Author: sven-manthe <sven.manthe@uni-bonn.de>
Date:   Fri Jun 7 12:45:38 2024 +0000

    chore(CategoryTheory.IsConnected): remove redundant hypothesis in `of_induct` (#13598)
    
    remove the unnecessary hypothesis by proving it

[33mcommit 427721424032ad4e972cde5394cec7170bfb91bc[m
Author: judithludwig <judith.ludwig@iwr.uni-heidelberg.de>
Date:   Fri Jun 7 11:39:42 2024 +0000

    feat(Algebra/Order/GroupWithZero): add `inv_lt_one‚ÇÄ` and `one_lt_inv‚ÇÄ` (#13563)
    
    add `inv_lt_one‚ÇÄ` and `one_lt_inv‚ÇÄ`

[33mcommit b4911b22a10c9f351458621d3b613dd43eaad39c[m
Author: rishi <66075070+LodeVermeulen@users.noreply.github.com>
Date:   Fri Jun 7 11:39:41 2024 +0000

    feat: Define Hamiltonian paths and cycles (#7102)
    
    Co-authored-by: Bhavik Mehta <bhavikmehta8@gmail.com>
    Co-authored-by: Linus Sommer
    Co-authored-by: Lode Vermeulen
    
    
    
    Co-authored-by: Lode <lode685@gmail.com>
    Co-authored-by: Linus <95619282+linus-md@users.noreply.github.com>
    Co-authored-by: Bhavik Mehta <bhavikmehta8@gmail.com>
    Co-authored-by: Doga Can Sertbas <dogacan.sertbas@gmail.com>
    Co-authored-by: Ya√´l Dillies <yael.dillies@gmail.com>

[33mcommit 1df6b982d827c6f6e335f594f5db66e3624abaf2[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Fri Jun 7 11:26:26 2024 +0000

    feat(Topology/LocallyConstant): `map` and `const` as algebraic maps (#12508)
    
    This PR adds algebraic versions of `LocallyConstant.map`¬†and `LocallyConstant.const`¬†given various algebraic structures on the target. Follows the existing approach for `LocallyConstant.comap`.

[33mcommit dd36c71ca810923613cae217af028ee54aaff1e3[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Fri Jun 7 10:00:23 2024 +0000

    feat(Condensed): discrete light condensed objects (#13500)

[33mcommit 678f4912899df76cc45934a56bdf929ffe3cac50[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Fri Jun 7 09:26:50 2024 +0000

    feat(Condensed): explicit sheaf condition for light condensed sets (#13503)
    
    - [x] depends on: #13501

[33mcommit f6d625475580b989adeed4a9be42fb9df7b414be[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Fri Jun 7 08:03:41 2024 +0000

    chore(Topology/../Rat): drop a deprecated lemma (#13593)
    
    It was deprecated since I ported this file in #2643

[33mcommit 7a4ec7b08d8bfbe043b4502c1356fd3589f948aa[m
Author: Kim Morrison <kim@tqft.net>
Date:   Fri Jun 7 08:03:40 2024 +0000

    chore(Data/Buffer/Parser): delete two comment-only files from the port (#13588)

[33mcommit f415ad7645a9f6170c5208cf86f68d4edf28b031[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Fri Jun 7 06:15:12 2024 +0000

    feat(Set,Finset): add lemmas, golf (#13591)
    
    ## New lemmas
    
    - `Set.image_nontrivial`
    - `Finset.map_ssubset_map`, `Finset.map_nontrivial`
    
    ## New `gcongr` attrs
    
    - `Finset.map_subset_map`, `Finset.map_ssubset_map` (`.mpr` implications);
    - `Finset.product_subset_product_left`, `Finset.product_subset_product_right`
    
    ## Misc
    
    - `Finset.Nonempty.map` is now `protected`

[33mcommit 614409e9bc27d698ce7988c4c222459096b2a2a8[m
Author: Brendan Seamas Murphy <shamrockfrost@gmail.com>
Date:   Fri Jun 7 06:15:11 2024 +0000

    Chore(RingTheory/Regular): Simplify some namespaces in IsSMulRegular (#13582)
    
    Simplify some namespaces in `RingTheory/Regular/IsSMulRegular`

[33mcommit d9fb4896ee40028f40ce4a90dc0d87cf8fea2208[m
Author: Bryan Gin-ge Chen <bryangingechen@gmail.com>
Date:   Fri Jun 7 06:01:22 2024 +0000

    chore: make import_count.yml pull scripts from master (#13581)
    
    Follow-up to [#13556](https://github.com/leanprover-community/mathlib4/pull/13556)

[33mcommit bbf0d1e39b5faac9276413942ac15bd64de65c1e[m
Author: Kim Morrison <kim@tqft.net>
Date:   Fri Jun 7 03:20:39 2024 +0000

    chore: merge bump/v4.9.0 (#13584)
    
    This has all been reviewed in PRs from `bump/nightly-2024-MM-DD` branches to the `bump/v4.9.0`, and now needs to come to `master`!
    
    Co-authored-by: Kim Morrison <scott@tqft.net>

[33mcommit 2b29e73438e240a427bcecc7c0fe19306beb1310[m
Author: Kim Morrison <kim@tqft.net>
Date:   Fri Jun 7 00:22:25 2024 +0000

    chore(Data/UInt): make instCommRing a def, and explain why (#13494)
    
    These instances are now in the `UIntX.CommRing` scope.
    
    This is because the presence of these casting operations contradicts assumptions made by the
    expression tree elaborator, namely that coercions do not form a cycle.
    This happens in `Fin` and `BitVector` too, but those are problems for another PR.
    
    After this change, `ring`, `norm_num`, and `rw [mul_add_one]` no longer work out of the box on these types.
    To avoid further fallout (`rw [mul_one]`, `abel`, ...), `CommMonoid` and `NonUnitalCommRing` instances are provided, which fall just short of enabling the unwanted cast operators.
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 0047c56bf68c01d2477844ec84d707537a04b6a1[m
Author: Johan Commelin <johan@commelin.net>
Date:   Thu Jun 6 22:06:53 2024 +0000

    ci: report changes to the import graph in a spoiler comment (#13556)
    
    
    
    Co-authored-by: adomani <adomani@gmail.com>

[33mcommit 590bb4679a59fc1ebe8f3faedab895081d25837c[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Thu Jun 6 22:06:52 2024 +0000

    feat: the pushforward of (pre)sheaves of modules (#13463)
    
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit c45e50e149fc4498969633dd57acdd9db34d3014[m
Author: Michael Stoll <Michael.Stoll@uni-bayreuth.de>
Date:   Thu Jun 6 21:05:24 2024 +0000

    refactor: move NumberTheory.LegendreSymbol.MulCharacter to NumberTheory.MulChar.Basic (#13569)
    
    As announced [here on Zulip](https://leanprover.zulipchat.com/#narrow/stream/144837-PR-reviews/topic/.2313392.20Multiplicative.20characters/near/441957353), this moves the file `NumberTheory.LegendreSymbol.MulCharacter` to `NumberTheory.MulChar.Basic`.
    
    Rationale:
    * Multiplicative characters are useful beyond quadratic reciprocity.
    * There will be additional API (to be added in a follow-up PR) requiring heavier imports, which can go into a new file `NumberTheory.MulChar.Lemmas`.

[33mcommit e998082951c6f5a84e3f70bc1df0d4f6b42f0963[m
Author: Bolton Bailey <bolton.bailey@gmail.com>
Date:   Thu Jun 6 21:05:23 2024 +0000

    chore: add flexible tactics to nonterminal simp linter (#12663)
    
    This PR makes it so that the existing string-based nonterminal simp linter will not trigger when a simp is followed by one of a few "flexible" tactics.
    
    See [this](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/False.20ERR_NSP.20positive/near/437054148) thread for discussion of places where this linter was being too sensitive.
    
    Most of the list was decided by poll [here](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/.60simp.60.20followers).

[33mcommit 57c40988127bb4f724f6690f5422b349e0946e4d[m
Author: Joseph Myers <jsm@polyomino.org.uk>
Date:   Thu Jun 6 21:05:22 2024 +0000

    feat(GroupTheory/GroupAction/Basic): various orbit / quotient lemmas (#11912)
    
    Add various lemmas about `orbitRel.Quotient`, mostly concerning `orbitRel.Quotient.orbit`, many concerning orbits for the action of a subgroup.  Along with the lemmas there are instances
    
    ```lean
    instance (x : orbitRel.Quotient G Œ±) : MulAction G x.orbit where
    ```
    
    and
    
    ```lean
    instance (x : orbitRel.Quotient G Œ±) : IsPretransitive G x.orbit where
    ```
    
    both of which already have analogues for `MulAction.orbit` as opposed to `orbitRel.Quotient.orbit` - and lemmas about the above action on an orbit.
    
    From AperiodicMonotilesLean.

[33mcommit f6837cfe0d0c55ab9b6a5941fb7829d9c81a450e[m
Author: Bolton Bailey <bolton.bailey@gmail.com>
Date:   Thu Jun 6 21:05:21 2024 +0000

    refactor: `reduceOption_length_le` (#11671)
    
    Reproves `reduceOption_length_eq_iff` and `reduceOption_length_le` with new auxiliary lemmas - primarily `length_eq_reduceOption_length_add_filter_none`.

[33mcommit ac0ad78e2d133f0dee2b65f202821130d9e5bfe1[m
Author: Bolton Bailey <bolton.bailey@gmail.com>
Date:   Thu Jun 6 21:05:20 2024 +0000

    feat: Miscellaneous lemmas on quotienting by a polynomial (#11116)
    
    Adds `modByMonic_eq_zero_iff_quotient_eq_zero` and `mk_singleton_eq`

[33mcommit 0bd255e1629a9b1374f0d63f3924eab995606e9b[m
Author: Bolton Bailey <bolton.bailey@gmail.com>
Date:   Thu Jun 6 21:05:19 2024 +0000

    feat: optionEquiv lemmas (#11114)
    
    Adds lemmas about what `optionEquivRight`/`optionEquivLeft` evaluates to.

[33mcommit be31fb1fa91f345b282a239091bbd18b954196ff[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Thu Jun 6 20:44:55 2024 +0000

    feat: the associated sheaf of a presheaf of modules (#11555)
    
    Let `C` be a category equipped with a Grothendieck topology `J`. Let `Œ± : R‚ÇÄ ‚ü∂ R.val` be a morphism, with `R‚ÇÄ` a presheaf of rings and `R` a sheaf of rings. We assume that `Œ±` is a sheafification map (i.e. it is both locally injective and locally surjective) . Let `M‚ÇÄ` be a presheaf of modules over `R‚ÇÄ`. Let `A` be the associated sheaf of the underlying presheaf of abelian groups of `M‚ÇÄ`. Then, it is shown in this PR that there is a canonical structure of sheaf of `R`-modules on `A`.
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit 01be8fac7ec2e4122b86731468f0f9aa6f26b4b1[m
Author: Peter Nelson <71660771+apnelson1@users.noreply.github.com>
Date:   Thu Jun 6 19:57:26 2024 +0000

    feat(Order/ModularLattice): alternative equality lemma (#13565)
    
    We add a new lemma `eq_of_le_inf_le_of_le_sup` for proving two comparable elements are equal in a modular lattice.
    It is the same as the existing `eq_of_le_inf_le_of_sup_le` but with the hypotheses in simp normal form,
    having`y ‚äì z ‚â§ x` and `y ‚â§ x ‚äî z` instead of `y ‚äì z ‚â§ x ‚äì z` and `y ‚äî z ‚â§ x ‚äî z`. The weaker hypotheses easily imply the stronger ones, and proving them in many applications involves slightly less boilerplate.
    
    We also golf the proof of the original lemma using the (shorter) proof of the new one.

[33mcommit 4411c7e9b8b4ce5ee5bfd0ebd0657cf455d07433[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Thu Jun 6 18:43:24 2024 +0000

    chore: Split `Algebra.GroupPower.Order` (#12964)
    
    Move its lemmas (mostly) to two new files:
    * `Algebra.Order.Group.Basic` for the lemmas about group-like objects
    * `Algebra.Order.Ring.Basic` for the lemmas about ring-like objects

[33mcommit 286f65c63cf76ed00369fcf9fd3ab429061b81ac[m
Author: Steven Clontz <steven.clontz@gmail.com>
Date:   Thu Jun 6 18:30:31 2024 +0000

    chore(Topology): tweak and factor out "pseudo-metrisable second countable spaces are Lindel√∂f" (#13515)
    
    As discussed with @grunweg, this factors out a result to its own file in order to remove a circular dependency that otherwise blocks #13176

[33mcommit cc4f996654d20c66222e160c3dcedfbe44c3b2da[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Thu Jun 6 16:20:36 2024 +0000

    chore: tidy various files (#13562)

[33mcommit 562c80b0d71d33303fa34b373e84d871770613ec[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Thu Jun 6 16:20:35 2024 +0000

    feat: complements of codimension at least two subspaces are ample (#11342)
    
    From the sphere-eversion project.
    
    <!-- The text above the `

[33mcommit f3201262a48f63c742d8321c23785587180f7c6c[m
Author: Thomas Browning <tb65536@uw.edu>
Date:   Thu Jun 6 16:07:54 2024 +0000

    feat(Topology/UniformSpace/Ascoli): Arzela-Ascoli for an equicontinuous family of functions (#12002)
    
    This PR adds a version of Arzela-Ascoli for an equicontinuous family of functions that I will use to prove local compactness of the Pontryagin dual in #11335.

[33mcommit fac35e8591758464ae1f9df8f51932d9677dfef0[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Thu Jun 6 14:57:29 2024 +0000

    feat(CategoryTheory): localization of triangulated categories (#11786)
    
    In this PR, it is shown that the localization of a triangulated category is not only pretriangulated but also triangulated (if the class of morphisms has both calculus of left and right fractions). Pretriangulated and triangulated instances are set on the categories `W.Localization` and `W.Localization'`.
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>
    Co-authored-by: Johan Commelin <johan@commelin.net>

[33mcommit 1af205b4604d65bd84c3bc9cd24ed3fa6327d1a6[m
Author: Kevin Buzzard <k.buzzard@imperial.ac.uk>
Date:   Thu Jun 6 14:15:09 2024 +0000

    fix: remove Dedekind domain assumption from Ideal.inf_eq_mul_of_coprime (#13308)

[33mcommit 149b6c3fbc2072be94b6b142d9a7abee32d799ce[m
Author: Palalansouk√Æ <palalansouki@gmail.com>
Date:   Thu Jun 6 13:05:59 2024 +0000

    feat(Computability/Primrec): recursion on order type omega is primitive recursive (#8619)
    
    add `Primrec.nat_omega_rec`, which states that function defined recursively on order type omega is primitive recursive, and is stronger than `Primrec.nat_strong_rec`. also add some basic theorems about `List`
    
    
    
    
    Co-authored-by: jeh <hodellurt@gmail.com>

[33mcommit 48f4321c928bea8fe38970cbc976fdf11d38266d[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Thu Jun 6 10:53:35 2024 +0000

    feat: mapComposableArrows is essentially surjective for localization functors when there is a calculus of fractions (#13558)
    
    If `L` is a localization functor with respect to a class of morphisms `W` that a left *or* right calculus of fractions, then the induced functors on `ComposableArrows _ n` is essentially surjective for all natural numbers `n`.
    
    (This was initially written only for `n = 2` when there was both a calculus of left and right fractions, but Andrew Yang simplified the argument.)
    
    Co-authored-by: Andrew Yang <the.erd.one@gmail.com>

[33mcommit 711e6be29c9369a42e2666e12b9fab97daccacef[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Thu Jun 6 10:53:34 2024 +0000

    chore: Make more arguments to `inter_subset_left` implicit (#13445)
    
    There are a few commonplace lemmas whose explicit arguments are (almost) always inferred in practice. This means that one needs to put brackets around and feeds them underscores very often. This is annoying.
    
    Remove the explicit arguments to the six most commonplace (series of) lemmas that are like that:
    * `inter_subset_left`
    * `inter_subset_right`
    * `subset_union_left`
    * `subset_union_right`
    * `Set.diff_subset`/`Finset.sdiff_subset`
    * `Function.Injective.InjOn`
    
    
    
    
    Co-authored-by: Richard Osborn <richardosborn@mac.com>
    Co-authored-by: Jeremy Tan Jie Rui <reddeloostw@gmail.com>

[33mcommit 5948566497f56e1432c52d65623f1bb3c3937159[m
Author: Jz Pan <acme_pjz@hotmail.com>
Date:   Thu Jun 6 10:53:33 2024 +0000

    refactor: change the proof of `Module.Finite.injective_of_surjective_endomorphism` and `commRing_strongRankCondition` (#12076)
    
    - `Module.Finite.injective_of_surjective_endomorphism` is proved via `OrzechProperty.injective_of_surjective_endomorphism` since we already proved that commutative rings have `OrzechProperty`.
    - `commRing_strongRankCondition` is proved via `inferInstance` since we know that commutative rings have `OrzechProperty`, and any nontrivial ring satisfying `OrzechProperty` also satisfies `StrongRankCondition`.
    
    Due to the change of proof, some imports in the corresponding files become unnecessary, as reported by `shake`. This makes the change of imports in a lot of files.
    
    The change of proof also makes `LinearMap.tunnel` and `LinearMap.tailing` not used in mathlib anymore.
    These are marked as deprecated with no replacements.
    
    
    
    Co-authored-by: Antoine Chambert-Loir <antoine.chambert-loir@u-paris.fr>

[33mcommit a34346ed516255394facda69e9748db9842c4e48[m
Author: Andrew Yang <the.erd.one@gmail.com>
Date:   Thu Jun 6 10:40:05 2024 +0000

    refactor(RingTheory/OreLocalization): Ore localization of modules (#13151)
    
    To accommodate this change, right ore condition has been changed to left ore.
    This enables us to redefine `Localization` and `LocalizedModule` with `OreLocalization` in the future.
    
    
    
    
    Co-authored-by: Andrew Yang <36414270+erdOne@users.noreply.github.com>

[33mcommit 6a71247549228c7a26e4caa16da79bd64a23db67[m
Author: Alex Keizer <alex@keizer.dev>
Date:   Thu Jun 6 10:40:04 2024 +0000

    feat: define `Fin2.rev` analogously to `Fin.rev` (#10818)
    
    This defines `Fin2.rev`, the mapping from `i : Fin2` to (morally) `last - i`, and proves it's an involution.
    
    
    
    Co-authored-by: Ya√´l Dillies <yael.dillies@gmail.com>

[33mcommit 6e3fac8e137574c075e02893da0672f3ad5ab937[m
Author: Martin Dvo≈ô√°k <martin.dvorak@matfyz.cz>
Date:   Thu Jun 6 09:41:46 2024 +0000

    feat: Interaction of `Sum.elim` and order (#13167)

[33mcommit 322601e128d1dcfd5744436bed06471e126b417e[m
Author: Brendan Seamas Murphy <shamrockfrost@gmail.com>
Date:   Thu Jun 6 07:41:35 2024 +0000

    Feat: Add regular sequences (#12544)
    
    Add the definition of regular sequences and induction principles for them.

[33mcommit 53ba35b8c1b8f622453afa3cadb8628c06ea352b[m
Author: Kim Morrison <kim@tqft.net>
Date:   Thu Jun 6 07:00:35 2024 +0000

    chore(UniformSpace/Basic): avoid use of deprecated function (#13553)
    
    `.ofNhdsEqComap` is deprecated, replace its use by the correct function.
    
    Co-authored-by: sgouezel <sebastien.gouezel@univ-rennes1.fr>

[33mcommit 60442b0ef2844570f76e39074742a07343ed86c4[m
Author: Kim Morrison <kim@tqft.net>
Date:   Thu Jun 6 07:00:34 2024 +0000

    chore(RingTheory/PowerSeries/WellKnown): simplify proof (#13552)
    
    Another backport from change for nightly-2024-05-06. (The original proof breaks, and this one is better.)

[33mcommit 857ffcf9e611292acda81d497ca38fbe33972c8f[m
Author: Kim Morrison <kim@tqft.net>
Date:   Thu Jun 6 07:00:33 2024 +0000

    chore: elaboration help after leanprover/lean4#4352 (#13551)
    
    These are places where Lean will struggle after leanprover/lean4#4352, so I am backporting the changes to master.

[33mcommit 0d0c5f06ad86dbdbf2a567a2715baeaa18c32256[m
Author: David Kurniadi Angdinata <dka31@cantab.ac.uk>
Date:   Thu Jun 6 07:00:31 2024 +0000

    feat(AlgebraicGeometry/EllipticCurve/Jacobian): implement group operations on point representatives for Jacobian coordinates (#9435)
    
    Define the analogous secant-and-tangent negation `neg` and addition `add` on `PointRep` over `F`, and lift them to `PointClass`. Define `Point` as a `PointClass` that is nonsingular. Prove in `neg_equiv` and `add_equiv` that these operations preserve the equivalence. Prove in `nonsingular_neg` and `nonsingular_add` that these operations preserve nonsingularity by reducing it to the affine case, and lift these proofs to `PointClass`.
    
    This is the third in a series of four PRs leading to #9405 and is analogous to #9418

[33mcommit e3892bc4d1f19e3a07e05add77a0d6d88e20c00c[m
Author: Thomas Browning <tb65536@uw.edu>
Date:   Thu Jun 6 06:18:26 2024 +0000

    Refactor(Algebra/Group/Subgroup/Finite): Replace `Fintype.card` with `Nat.card` (#13432)
    
    A lot of the group theory library still needs to be switched over from `Fintype.card` to `Nat.card`. This PR switches over `Algebra/Group/Subgroup/Finite.lean`. I had to add a little noise to a few other files, but these will get cleaned up once those files are switched over later.

[33mcommit 4ae9fd491f05f0150b7ed0ebc799a93b390cd886[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Thu Jun 6 04:20:20 2024 +0000

    feat: obtain a non-unital continuous functional calculus from a unital one (#13541)
    
    Co-authored by: @ADedecker
    
    
    
    Co-authored-by: ADedecker <anatolededecker@gmail.com>

[33mcommit ad53f0204fc754777857e159acf0265da3ca647c[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Thu Jun 6 01:39:46 2024 +0000

    feat: variations on the uniformity of uniform convergence given functions whose ranges cover the space (#13534)
    
    Given functions from a family `Œ¥` of types into a type `Œ±` whose ranges cover `Œ±`, the uniform space of uniform convergence of functions from `Œ±` to `Œ≤` is the infimum of the uniform spaces obtained as the comaps of precomposition with the maps `Œ¥ i ‚Üí Œ±`, for each `i`. This gives a way to determine uniform convergence on the whole space `Œ±` by considering it on the pieces `Œ¥ i`.
    
    Authored-by: @ADedecker
    
    
    
    Co-authored-by: ADedecker <anatolededecker@gmail.com>

[33mcommit d75ac8f62b845a0836ee0fa0415a0b659496c046[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Thu Jun 6 00:45:03 2024 +0000

    chore(Data/List/Lex): golf and generalize (#13546)

[33mcommit b5eba595428809e96f3ed113bc7ba776c5f801ac[m[33m ([m[1;33mtag: v4.8.0[m[33m, [m[1;31morigin/stable[m[33m)[m
Author: Kim Morrison <kim@tqft.net>
Date:   Wed Jun 5 22:41:07 2024 +0000

    chore: bump toolchain to v4.8.0 (#13526)

[33mcommit 9bd75b035c4dd3c5d3465d9c90386a482cf67a1d[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Wed Jun 5 21:47:03 2024 +0000

    chore: fix type class assumptions for unique CFC instance for `‚Ñù‚â•0` (#13542)

[33mcommit 464cfc74e6b77998052e0002795c1bf7c41099bd[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Jun 5 21:47:02 2024 +0000

    feat: add `{Even,Odd}.natCast` (#13405)

[33mcommit 82c98ce2d7281eb197a0ff51307aad94470afbbd[m
Author: Johan Commelin <johan@commelin.net>
Date:   Wed Jun 5 21:34:04 2024 +0000

    test: add tests against regressions in typeclass synthesis performance (#13528)

[33mcommit c118ded87237e6565bc62dfdf32d9f0382e17a56[m
Author: kkytola <kalle.kytola@aalto.fi>
Date:   Wed Jun 5 20:37:54 2024 +0000

    feat: Levy-Prokhorov distance pseudometrizes convergence in distribution (#11549)
    
    Add the more interesting direction of topology comparison for the L√©vy-Prokhorov distance. Conclude that if the underlying space is separable, then the topology of convergence in distribution coincides with the one obtained from the L√©vy-Prokhorov (pseudo)metric. In particular the topology of convergence in distribution is (pseudo)metrizable, and so first countable.
    
    
    
    Co-authored-by: kkytola <39528102+kkytola@users.noreply.github.com>
    Co-authored-by: kkytola <‚Äúkalle.kytola@aalto.fi‚Äù>

[33mcommit 22254e626c4f577b08cfb4420b50278d685c8533[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Wed Jun 5 19:56:45 2024 +0000

    feat(Condensed): light condensed modules (#13501)

[33mcommit ef6335646e569473fed744d2e99ca1cdca16312a[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Wed Jun 5 19:32:28 2024 +0000

    feat(CategoryTheory/Triangulated): the long exact sequence of a homological functor (#11805)
    
    Assuming `F : C ‚•§ A` is a homological functor (from a pretriangulated category to an abelian category), we show that any distinguished triangle leads to a long exact sequence (assuming `n‚ÇÄ + 1 = n‚ÇÅ`):
    `... ‚ü∂ (F.shift n‚ÇÄ).obj T.obj‚ÇÅ ‚ü∂ (F.shift n‚ÇÄ).obj T.obj‚ÇÇ ‚ü∂ (F.shift n‚ÇÄ).obj T.obj‚ÇÉ ‚ü∂ (F.shift n‚ÇÅ).obj T.obj‚ÇÅ  ‚ü∂ ...`

[33mcommit 193abd2fa48661933e883f05802fbb12e4d55d39[m
Author: Andrew Yang <the.erd.one@gmail.com>
Date:   Wed Jun 5 18:56:18 2024 +0000

    feat(Algebra/Module/Projective): Tensor product of projective modules (#13091)
    
    
    
    
    Co-authored-by: Andrew Yang <36414270+erdOne@users.noreply.github.com>

[33mcommit bc7ac89201db31eb4196ae79c9e453898238ae8a[m
Author: Emily Riehl <eriehl@jhu.edu>
Date:   Wed Jun 5 18:27:14 2024 +0000

    feat(CategoryTheory): transposition of commutative squares across an adjunction (#13506)
    
    In the presence of an adjunction `F ‚ä£ G` a square `F.map f ‚â´ g = h ‚â´ k` whose left map is in the image of the left adjoint commutes iff the transposed square `f ‚â´ (adj.homEquiv X Y') g = (adj.homEquiv X' Y) h ‚â´ G.map k` whose right map is in the image of the right adjoint commutes. The proof is by two instances of `homEquiv_naturality` and the `adj.homEquiv` bijection.

[33mcommit 6c6dedad396470b45e92feafc2604a14bd7cafcf[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Wed Jun 5 18:02:41 2024 +0000

    chore: mark `IsProperMap` with `fun_prop` (#13538)
    
    This removes the `continuity` attribute from `IsProperMap.continuous`, because it is a disaster to mark it as such (it gets a `safe apply` attribute for `aesop`, but it is definitely not safe).
    
    In addition, although `IsProperMap.continuous` was already marked as `fun_prop`, this is actually the incorrect approach unless `IsProperMap` is *also* marked as `fun_prop`, which we do here.
    
    The reason for this is that without `IsProperMap` being marked `fun_prop`, then `IsProperMap.continuous` gets marked as an application theorem for `fun_prop` (much like wth `aesop [safe apply]`). But, when `IsProperMap` is marked as `fun_prop`, then this is marked internally by `fun_prop` as a "transition" theorem.
    
    Consequently, this prevents `fun_prop` from getting stuck with goals of `IsProperMap f` when there is no possible way `f` could be a proper map. Instead, it will get stuck with `Continuous f`, which may be provable.

[33mcommit 0b185061ed934024c115d7a924d5cc7550b5356b[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Wed Jun 5 18:02:40 2024 +0000

    chore: protect `Filter.mem_nhds_iff` (#13537)
    
    This conflicts with `mem_nhds_iff`, which is already in the root namespace.

[33mcommit ceeb6d4fc45a919fb29db26dfdc015b43ad13323[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Wed Jun 5 18:02:38 2024 +0000

    chore: mark trigonometric functions as `fun_prop` (#13536)

[33mcommit 575993746397014166b6c65b0a711187396a46f5[m
Author: Michael Stoll <Michael.Stoll@uni-bayreuth.de>
Date:   Wed Jun 5 17:08:36 2024 +0000

    feat: add API for multiplicative characters (#13392)
    
    This adds some API lemmas for multiplicative characters. We also remove a couple of porting notes (the previous proof lines work again).

[33mcommit 668bf7fbbd88fd683f1982a5fbc1847d83d88816[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Wed Jun 5 16:10:01 2024 +0000

    chore: tidy various files (#13530)

[33mcommit 604b60d9572bcbe848cde9d72af01959cb382c2f[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Jun 5 15:42:03 2024 +0000

    chore(LocallyConvex/Bounded): use implicit args (#13531)
    
    Also generalize some lemmas, most importantly `isVonNBounded_of_isBounded`, from `NontriviallyNormedField` to `NormedField`.

[33mcommit cc768630e3118d913d6557cd549548fefd510160[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Jun 5 12:48:18 2024 +0000

    chore(Deriv/Mul): drop some `DecidableEq` assumptions (#13516)
    
    While `[DecidableEq Œπ]` is needed for `Finset.erase` in the formula for the derivative, it isn't needed for `Differentiable*` theorems.

[33mcommit 77504eef03e79141c3412532acb05869ce3658be[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Wed Jun 5 12:48:17 2024 +0000

    feat(CategoryTheory): right derived functors (#12788)
    
    In this PR, given a functor `F : C ‚•§ H`, and `L : C ‚•§ D` that is a localization functor for `W : MorphismProperty C`, we define `F.totalRightDerived L W : D ‚•§ H` as the left Kan extension of `F` along `L`: it is defined if the type class `F.HasRightDerivedFunctor W` asserting the existence of a left Kan extension is satisfied.
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit 1e24537d8315baaa27c492cab1d5498963330470[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Wed Jun 5 11:47:55 2024 +0000

    feat: the category of (pre)sheaves of modules over a scheme (#13529)

[33mcommit 230f6fe692988fe030bd3a6ba5a4e5260882dce5[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Wed Jun 5 11:47:54 2024 +0000

    chore: deprecate redundant lattice lemmas (#13513)
    
    There were tagged with the ematch attribute in lean 3, but this no longer exists.

[33mcommit 8abdefbada770f2c588415f401869dadfb0ca56a[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Wed Jun 5 11:47:53 2024 +0000

    chore: move the link between additive morphisms and linear maps earlier (#12457)

[33mcommit 7570bf2cb3508c517698f1ddd7d6720735cfa052[m
Author: Kim Morrison <kim@tqft.net>
Date:   Wed Jun 5 11:34:44 2024 +0000

    chore: remove unneeded imports for Mathlib/Data/ByteArray (#13522)
    
    This verifies that almost no Mathlib imports are needed for this file, and in fact on Lean's `master` branch no Mathlib imports are needed at all.

[33mcommit 5795dea5a47ba1d4735896548b96dd0bb38cf248[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Wed Jun 5 11:06:18 2024 +0000

    feat: left adjoint functors preserve sheafification (#13499)
    
    In this PR, we show that left adjoint functors preserve sheafification. The definition of `Sheaf.composeAndSheafify` was moved to the file `PreservesSheafification.lean` so that this definition may replace the previous `sheafCompose'`.
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit 17bb4e9a6cf173ab20af2d60ca3e0ec5045f3d9a[m
Author: Michael Stoll <Michael.Stoll@uni-bayreuth.de>
Date:   Wed Jun 5 10:09:09 2024 +0000

    perf: reduce instance priority of IsDedekindDomain.toIsDomain (#13438)
    
    We reduce the instance priority of `IsDedekindDomain.toIsDomain` to 90 (to move it behing `Field.isDomain`) and look at the performance impact.
    
    There is a positive effect on some `NumberTheory`files and apparently no relevant slow-downs.

[33mcommit eb017622c6f07526b8b7b321945a50572d7e08b5[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Wed Jun 5 09:14:34 2024 +0000

    chore: fix name for isNilpotent_of_finite_tFAE (#13527)

[33mcommit 7ef586d04df188135e89ed8d9fb0d181b7501ef0[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Wed Jun 5 09:14:32 2024 +0000

    feat(AlgebraicTopology): simplicial categories (#11398)
    
    This PR defines simplicial categories as categories that are enriched over simplicial sets in such a way that morphisms identify to `0`-simplices of the enriched hom.
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit c1e640b7566b6dfde10a8185d871943ebf16b987[m
Author: Kim Morrison <kim@tqft.net>
Date:   Wed Jun 5 08:10:26 2024 +0000

    chore: fix names for String lemmas (#13525)

[33mcommit 3b9aaf4ff950cfd22fa30a520b5b873e86974a0d[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Wed Jun 5 08:10:25 2024 +0000

    refactor: Redefine `pow` in terms of `iterate` (#1388)
    
    In the `Monoid` instances for `Function.End Œ±`, `Equiv.Perm Œ±`, `Monoid.End Œ±`, `AddMonoid.End Œ±`, `Œ± ‚Üí+* Œ±`, replace the default `npowRec` by a custom one in terms of `Nat.iterate`. Write the expected coercion lemmas.
    
    As a consequence, I can delete the recently introduced file `Algebra.Ring.Hom.IterateHom`.
    
    Zulip discussion: https://leanprover.zulipchat.com/#narrow/stream/144837-PR-reviews/topic/.231388.20Redefine.20pow.20in.20terms.20of.20iterate

[33mcommit b00b6e0fb5ff8f20feb23194be8880e6bedffda1[m
Author: colva <kim@tqft.net>
Date:   Wed Jun 5 07:22:48 2024 +0000

    feat(GroupTheory/Frattini): definition and first theorem (#13418)
    
    We give the definition of the Frattini subgroup of a group, and three elementary results:
    * The Frattini subgroup is characteristic.
    * If every subgroup of a group is contained in a maximal subgroup, then
    the Frattini subgroup consists of the non-generating elements of the group.
    * The Frattini subgroup of a finite group is nilpotent.
    
    Co-authored-by: Inna Capdeboscq <inna.capdeboscq@orange.fr>
    Co-authored-by: Susanna Fishel <sfishel1@asu.edu>
    Co-authored-by: Kim Morrison <kim@tqft.net>
    
    
    
    Co-authored-by: colva <colva.roney-dougal@st-andrews.ac.uk>

[33mcommit 334e3dd00b20675f4a3fd850d453a7497061097f[m
Author: Michael Stoll <Michael.Stoll@uni-bayreuth.de>
Date:   Wed Jun 5 05:11:33 2024 +0000

    chore: remove import Mathlib.Algebra.EuclideanDomain.Instances (#13510)
    
    Prompted by @loefflerd's remark in [#13392](https://github.com/leanprover-community/mathlib4/pull/13392), I looked at which files import `Mathlib.Algebra.EuclideanDomain.Instances` and removed the import where possible.
    
    This leads to an overall speed-up in building Mathlib (see below).

[33mcommit cdedc9bb683849efb73a9d6eb007ad7ee13db298[m
Author: Riccardo Brasca <riccardo.brasca@gmail.com>
Date:   Wed Jun 5 05:11:32 2024 +0000

    feat (Mathlib.NumberTheory.Cyclotomic.Three): new file (#12765)
    
    We add a new file `Mathlib.NumberTheory.Cyclotomic.Three` containing various results about the third cyclotomic field.
    
    In particular we give a a completely explicit description of the group of units and we prove `eq_one_or_neg_one_of_unit_of_congruent`: Kummer's lemma in the case `p=3`.
    
    
    From the flt3 project at LFTCM2024.

[33mcommit ddfa53da74494219e25ea04892688b836f4c8b50[m
Author: Brendan Seamas Murphy <shamrockfrost@gmail.com>
Date:   Wed Jun 5 04:24:56 2024 +0000

    Ring-specific lemmas about regular elements (#13360)
    
    Add lemmas about regular elements from commutative algebra.

[33mcommit bba51cf055602c33fb597a14d1829326dd7ce7d1[m
Author: Kim Morrison <kim@tqft.net>
Date:   Wed Jun 5 03:13:52 2024 +0000

    chore: bump dependencies (#13524)

[33mcommit 35b146f4bacc2e1fda7d5217d203a17af8245d3e[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Wed Jun 5 03:13:51 2024 +0000

    feat(CategoryTheory/Sites): characterization of sheaves using 1-hypercovers (#13004)
    
    In this PR, given a Grothendieck topology `J` on a category `C`, we define a type `J.OneHypercoverFamily` of families of 1-hypercovers. When `H : J.OneHypercoverFamily`, we define a predicate `H.IsGenerating` which means that any covering sieve contains the sieve generated by the underlying covering of one of the 1-hypercovers in the family. If this holds, we show in `OneHypercoverFamily.isSheaf_iff` that a presheaf `P : C·µí·µñ ‚•§ A` is a sheaf iff for any 1-hypercover `E` in the family, the multifork `E.multifork P` is limit.

[33mcommit c2b953ad888d865fa3e6895fb6988d9469510121[m
Author: grunweg <reddeloostw@gmail.com>
Date:   Wed Jun 5 02:13:53 2024 +0000

    chore(*): remove `refine'` (#13385)
    
    Some of these changes are simple replacements, others are more involved.
    
    
    
    Co-authored-by: Riccardo Brasca <riccardo.brasca@gmail.com>
    Co-authored-by: Michael Rothgang <rothgami@math.hu-berlin.de>

[33mcommit ab26390e73d889b9e2eee8b53ebd13f55bcd3a2b[m
Author: Antoine Chambert-Loir <antoine.chambert-loir@u-paris.fr>
Date:   Wed Jun 5 00:51:19 2024 +0000

    feat(Mathlib.RingTheory.TensorProduct.MvPolynomial) :  tensor product of a (multivariate) polynomial ring (#12293)
    
    Let `Semiring R`, `Algebra R S` and `Module R N`.
    
    * `MvPolynomial.rTensor` gives the linear equivalence
      `MvPolynomial œÉ S ‚äó[R] N ‚âÉ‚Çó[R] (œÉ ‚Üí‚ÇÄ ‚Ñï) ‚Üí‚ÇÄ (S ‚äó[R] N)` characterized,
      for `p : MvPolynomial œÉ S`, `n : N` and `d : œÉ ‚Üí‚ÇÄ ‚Ñï`, by
      `rTensor (p ‚äó‚Çú[R] n) d = (coeff d p) ‚äó‚Çú[R] n`
    * `MvPolynomial.scalarRTensor` gives the linear equivalence
      `MvPolynomial œÉ R ‚äó[R] N ‚âÉ‚Çó[R] (œÉ ‚Üí‚ÇÄ ‚Ñï) ‚Üí‚ÇÄ N`
      such that `MvPolynomial.scalarRTensor (p ‚äó‚Çú[R] n) d = coeff d p ‚Ä¢ n`
      for `p : MvPolynomial œÉ R`, `n : N` and `d : œÉ ‚Üí‚ÇÄ ‚Ñï`, by
    
    * `MvPolynomial.rTensorAlgHom`, the algebra morphism from the tensor product
      of a polynomial algebra by an algebra to a polynomial algebra
    * `MvPolynomial.rTensorAlgEquiv`, `MvPolynomial.scalarRTensorAlgEquiv`,
      the tensor product of a polynomial algebra by an algebra
      is algebraically equivalent to a polynomial algebra
    
    
    
    Co-authored-by: Oliver Nash <github@olivernash.org>
    Co-authored-by: Antoine Chambert-Loir <antoine.chambert-loir@math.univ-paris-diderot.fr>

[33mcommit 96d2f1fa634716c535347b2d03eb1402e2f6c1c8[m
Author: Patrick Massot <patrickmassot@free.fr>
Date:   Tue Jun 4 21:42:15 2024 +0000

    chore: Scope some extremely generic notation (#13518)
    
    In addition this notation was used exactly twice in Mathlib‚Ä¶

[33mcommit 7482cd991a9c43ef3e05e978b18840bce14c04cd[m
Author: Christian Merten <christian@merten.dev>
Date:   Tue Jun 4 21:12:26 2024 +0000

    feat(RingTheory/MvPolynomial): add finset of coefficients (#12887)
    
    Copies the `Polynomial` API for the finset of coefficients of a polynomial to the multivariate case.

[33mcommit aecbe3cf9f9baa46018a899a7cf01d7a15642428[m
Author: Mitchell Lee <trivial171@gmail.com>
Date:   Tue Jun 4 20:41:11 2024 +0000

    feat: convergent series in the completion of a group (#11998)
    
    Prove the following.
    - `Inducing.hasProd_iff` / `Inducing.hasSum_iff`: Let $g \colon \beta \to \alpha$ be an inducing homomorphism of topological additive commutative monoids. A series $\sum_{i \in I} b_i$ unconditionally converges to $b \in \beta$ if and only if $\sum_{i \in I} g(b_i)$ unconditionally converges to $g(b)$. (That is, if $g$ is inducing, then the converse of `HasProd.map` / `HasSum.map` holds.)
    - `Multipliable.map_tprod` / `Summable.map_tsum`: Let $g \colon \beta \to \alpha$ be a continuous homomorphism of topological additive commutative monoids. If the series $\sum_{i \in I} b_i$ converges unconditionally, then $g\left(\sum_{i \in I} b_i\right) = \sum_{i \in I} g(b_i)$.
    - `Inducing.multipliable_iff_tprod_comp_mem_range` / `Inducing.summable_iff_tsum_comp_mem_range`: Let $g \colon \beta \to \alpha$ be an inducing homomorphism of topological additive commutative monoids. Assume that $\alpha$ is Hausdorff. Then a series $\sum_{i \in I} b_i$ converges unconditionally if and only if the series $\sum_{i \in I} g(b_i)$ converges unconditionally and its value lies in the range of $g$.
    - `hasSum_iff_hasSum_compl`: Let $\alpha$ be a uniform additive abelian group. An equation $\sum_{i \in I} a_i = a$ holds in $\alpha$ if and only if it holds in $\hat{\alpha}$.
    - `summable_iff_summable_compl_and_tsum_mem`:  Let $\alpha$ be a uniform additive abelian group. A series $\sum_{i \in I} a_i$ is unconditionally summable in $\alpha$ if and only if it is unconditionally summable in $\hat{\alpha}$ and its value is in $\alpha$.
    - `summable_iff_cauchySeq_finset_and_tsum_mem`: Let $\alpha$ be a uniform additive abelian group. A series $\sum_{i \in I} a_i$ is unconditionally summable in $\alpha$ if and only if its partial sums form a Cauchy net and its value in $\hat{\alpha}$ lies in $\alpha$.
    - `Summable.toCompl_tsum`: If a series $\sum_{i \in I} a_i$ is unconditionally summable in $\alpha$, then its value in $\alpha$ is equal to its value in $\hat{\alpha}$.
    
    Note: This PR does not include multiplicative analogues of `hasSum_iff_hasSum_compl`, `summable_iff_summable_compl_and_tsum_mem`, `summable_iff_cauchySeq_finset_and_tsum_mem`, or `Summable.toCompl_tsum`. This is because mathlib does not currently put a group structure on the completion of a uniform multiplicative group (see #11837). Once the group structure on the completion of a uniform multiplicative group is defined, the multiplicative analogues of these four theorems can easily be added.
    
    Note: The argument `(g : G)` of `Multipliable.map_tprod` is explicit to match `Multipliable.map`. At some point, it might be desirable to make these arguments (and several others) implicit, but that is outside the scope of this PR.

[33mcommit 7dd74a541dc880e7b5d1fab82baf8a0e5fce7a8c[m
Author: Kevin Buzzard <k.buzzard@imperial.ac.uk>
Date:   Tue Jun 4 18:12:26 2024 +0000

    chore: fix comments about Pointwise files to point to renamed files (#13469)

[33mcommit aa6c69bc95f9f1a56e4accb08bce7cf992e034b4[m
Author: Pol'tta / Miyahara K≈ç <pol_tta@outlook.jp>
Date:   Tue Jun 4 18:12:25 2024 +0000

    style: remove mathport output (#13198)

[33mcommit 574e5dab1ecb7a2edf4a8a7b9a689224da0ad983[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Tue Jun 4 18:12:23 2024 +0000

    feat: Limits under division by a positive/negative number (#12693)
    
    and rename a few lemmas to make clear that `neg` refers to `< 0`, not to `-`.

[33mcommit 6ec15fb56e86950ee0670efd51fb226457ae879f[m
Author: Chris Birkbeck <c.birkbeck@ucl.ac.uk>
Date:   Tue Jun 4 17:46:15 2024 +0000

    feat(Analysis/SpecificLimits/Normed): add lemma about geom_series (#12771)
    
    Add some lemmas about multiplying the geometric series by `x` and `1+x` (where `x` is the term being summed). These are used in #12770
    
    
    
    Co-authored-by: Chris Birkbeck <c.birkbeck@uea.ac.uk>

[33mcommit 17552eb4260f2275ac98aefd50d77bb09b74601f[m
Author: Calle S√∂nne <calle.sonne@gmail.com>
Date:   Tue Jun 4 16:04:31 2024 +0000

    feat(FiberedCategory/HomLift): definition of IsHomLift (#12978)
    
    We define the notion `IsHomLift` which aims to provide API for working with equalities `p(\phi) = f` for a functor `p` and morphisms `\phi`, `f`. This API is extensively used in an upcoming PR defining the notion of fibered categories. See the repository [Stacks-project](https://github.com/Paul-Lez/Stacks-project) for WIP using this notion.
    
    Co-authored-by: Paul Lezau <paul.lezeau@gmail.com>

[33mcommit 4563c3407b4755d8c333c19037ab9ebd32127006[m
Author: Andrew Yang <the.erd.one@gmail.com>
Date:   Tue Jun 4 14:50:55 2024 +0000

    feat(Algebra/Exact): Equivalent characterizations of split exact sequences. (#13098)
    
    
    
    
    Co-authored-by: Andrew Yang <36414270+erdOne@users.noreply.github.com>

[33mcommit 925198abee6589f257e2875833fc9c4b0417a22b[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Tue Jun 4 14:50:53 2024 +0000

    chore: Delete `Data.Int.Parity` (#12904)
    
    Scatter the lemmas in `Data.Int.Parity` to earlier files:
    * `Algebra.Group.Int`
    * `Algebra.Ring.Int`

[33mcommit 277e3953ec2894774dd6ae0e19302c052fc17ba4[m
Author: Kim Morrison <kim@tqft.net>
Date:   Tue Jun 4 13:47:59 2024 +0000

    feat: simp lemma replacing MulEquiv.toMonoidHom with coercion (#13379)
    
    I was surprised to encounter post-simp goals that included both `x.toMonoidHom` and the coercion.
    
    I think it would be good to follow up by avoiding `toMonoidHom` in favour of the coercion in the first place.

[33mcommit 765f7e60fe019bef9c7f750dfa022eb29bfdfb78[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Tue Jun 4 13:47:58 2024 +0000

    chore: add dates to more deprecations (#13186)
    
    And reformat nearby deprecations in the same file to use since syntax.

[33mcommit a7569c03a57c0f5e4903f15b175f4104d5539ffa[m
Author: Jz Pan <acme_pjz@hotmail.com>
Date:   Tue Jun 4 13:17:00 2024 +0000

    feat: left-Noetherian rings and commutative rings satisfy `OrzechProperty` (#13425)
    
    This is part 2 of #12076.
    
    It states that if
    
    - `R` is a ring (not necessarily commutative) and `M` is a Noetherian `R`-module (based on the proof in <https://math.stackexchange.com/a/1066128>), or
    - `R` is a commutative ring and `M` is a finitely generated `R`-module (based on the proof in <https://math.stackexchange.com/a/1066110>),
    
    if `N` is a submodule of `M`, `f : N -> M` is a surjective `R`-module homomorphism, then it is also injective.
    
    These results generalize `(IsNoetherian|Module.Finite).injective_of_surjective_endomorphism`.
    
    The proof for Noetherian case uses `LinearMap.iterateMapComap` which is put into `Mathlib/Algebra/Module/Submodule/IterateMapComap.lean`.
    
    The changed proof makes `LinearMap.tunnel` and `LinearMap.tailing` not used in any other parts of mathlib. Remove them or not is leaved for future discussion.

[33mcommit 9ac8f027fd35e526b6d00a3d6a19096a264111e7[m
Author: Bolton Bailey <bolton.bailey@gmail.com>
Date:   Tue Jun 4 11:08:10 2024 +0000

    feat: Add lemmas about `coeff_single_X_pow` (#13024)
    
    Adds some lemmas about the coefficient of polynomials of the form `X s ^ n`.
    
    Upstreamed from another project.

[33mcommit af3c17bf9f9ef5edd38b986d01e99d62df23e65f[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Tue Jun 4 09:57:29 2024 +0000

    chore(Geometry,GroupTheory): use since syntax for all deprecation dates (#13183)

[33mcommit 1b66b54de11a95bf64c1c087853d420e37168e40[m
Author: Martin Dvo≈ô√°k <martin.dvorak@matfyz.cz>
Date:   Tue Jun 4 09:29:11 2024 +0000

    feat: Context-free languages are closed under reversal (#9705)

[33mcommit 992a28cec147ef616aa8f10e642582f47a9f049f[m
Author: Mitchell Lee <trivial171@gmail.com>
Date:   Tue Jun 4 09:13:03 2024 +0000

    feat: the equational criterion for flatness (#12666)
    
    We prove the [equational criterion for flatness](https://stacks.math.columbia.edu/tag/00HK). As a consequence, every homomorphism from a finitely presented module to a flat module factors through a finite free module.

[33mcommit 582ddf8c601da9934c66d8060ee3576098887fc8[m
Author: Jeremy Tan Jie Rui <reddeloostw@gmail.com>
Date:   Tue Jun 4 08:34:37 2024 +0000

    feat: part-preserving equivalence of an equipartition with `Fin s.card` (#12196)
    
    Part of #9317.

[33mcommit 724afa63ffa0a59291c0a63d716837e5443f164e[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Tue Jun 4 08:15:18 2024 +0000

    feat: the free (pre)sheaf of modules of rank 1 (#13461)

[33mcommit 2d542dced86b9c9ebaeb3033fa96776c38626aa6[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Tue Jun 4 08:15:17 2024 +0000

    feat: restriction of scalars for (pre)sheaves of modules (#13447)
    
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit 9b24c0a2bdf96a486cd6f62d7f2fd6ca137ab03e[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Tue Jun 4 08:15:15 2024 +0000

    feat(CategoryTheory): vertical composition of Guitart exact squares (#12627)
    
    This is esoteric category theory, but it shall be used in the formalization of derived functors.

[33mcommit fe15e6bd4280dcd7250219e433ce4f77683afebe[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Tue Jun 4 08:15:14 2024 +0000

    feat(CategoryTheory): the class of morphisms whose cone belongs to a triangulated subcategory (#11789)
    
    Given `S : Triangulated.Subcategory C`, we introduce `S.W : MorphismProperty C`. A morphism belongs to `S.W` iff its cone satisfies the predicate `S.P`. We show that `S.W` has both a calculus of left and right fractions.

[33mcommit 07fd5251d2ea4aef4f4b8033f370a12edfd96333[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Tue Jun 4 08:15:13 2024 +0000

    feat(CategoryTheory): localization of pretriangulated categories (#11738)
    
    In the new file `CategoryTheory.Localization.Triangulated`, it is shown that if a class of morphisms `W` in a pretriangulated category is compatible with the triangulation and has a left calculus of fractions, then the localized category is also pretriangulated.
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>
    Co-authored-by: Johan Commelin <johan@commelin.net>

[33mcommit ab939c0c1c77dbec774196ac070ab0387cf09dc7[m
Author: David Loeffler <d.loeffler.01@cantab.net>
Date:   Tue Jun 4 08:01:51 2024 +0000

    feat(NumberTheory/Harmonic): explicit formula for `Œ∂ 1` (#13434)
    
    Mathematically Riemann zeta is not defined at 1, but our construction ascribes a value to `Œ∂ 1`. This PR calculates the value, and shows that it is not zero.

[33mcommit 1b23e4f1299ab8c066fb9f5f24a816e5b2348f0d[m
Author: Fr√©d√©ric Dupuis <dupuisf@iro.umontreal.ca>
Date:   Tue Jun 4 06:29:42 2024 +0000

    feat: The triple centralizer is equal to the centralizer (#13492)
    
    This PR shows (1) that a set is included in its double centralizer, and (2) that the centralizer of a set is equal to its triple centralizer.

[33mcommit dafacac8f704fd6fa0d5dbb79291debee5d04577[m
Author: Jeremy Tan Jie Rui <reddeloostw@gmail.com>
Date:   Tue Jun 4 05:31:23 2024 +0000

    chore: remove some `refine'` replacing `refine_struct` (#13490)
    
    Split from #13385. In these cases the line count either stays the same or decreases. Also remove references to `refine_struct`.

[33mcommit e13fdbc734afe713cc73c60c592c01963b77693f[m
Author: Pol'tta / Miyahara K≈ç <52843868+Komyyy@users.noreply.github.com>
Date:   Tue Jun 4 04:05:15 2024 +0000

    doc(Mathlib/Order/Filter/Curry): fix `at_top` to `atTop` (#13457)

[33mcommit 4609207108bff833a9ff44fe456c28a04d104c1d[m
Author: Jz Pan <acme_pjz@hotmail.com>
Date:   Tue Jun 4 04:05:14 2024 +0000

    feat(SetTheory/Cardinal/Basic): add `Cardinal.lift_mk_le_lift_mk_of_surjective` (#13397)

[33mcommit 0128f95077714e836a9697043c97f5d89c451de6[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Tue Jun 4 04:05:13 2024 +0000

    chore: Move `Data.Rat.Order` to `Algebra.Order.Ring.Rat` (#13169)

[33mcommit c3aaea7d1456829aa9f40921148799bcced37afe[m
Author: Bolton Bailey <bolton.bailey@gmail.com>
Date:   Tue Jun 4 03:32:20 2024 +0000

    feat: add `Polynomial.coeff_list_sum_map` (#13400)
    
    Adds lemmas about transposing a `coeff` with a sum of a list, analogous to `finset_sum_coeff` (although in this case I will not mark `simp` because the expression on the RHS is visually more complicated).

[33mcommit 0ffebbc3842e755b1d22af21f3286cf8c649c568[m
Author: Kim Morrison <kim@tqft.net>
Date:   Tue Jun 4 03:14:08 2024 +0100

    chore: run `lake update` when updating nightly-testing (#13488)
    
    This will reduce the need to run `lake update` by hand in the
    `nightly-testing` branch.
    
    On the other hand, it will result in breaking changes from Batteries
    which are not immediately fixed on Mathlib `master` showing up more
    often in the `nightly-testing` automation.
    
    As a partial solution to that, I think I am going to increase automation
    updating Mathlib's dependences.

[33mcommit 9f8031e0481af99bc70a11f962c6bb1f96d55e54[m
Author: Rebecca Bellovin <r.m.bellovin@gmail.com>
Date:   Tue Jun 4 00:39:30 2024 +0000

    fix(Tactic/Elementwise): type inference in elementwise (#13413)
    
    added an optional type argument to SimpType; changed type inference in elementwise tactic
    
    Co-authored-by: Kim Morrison <kim@tqft.net>
    
    
    
    Co-authored-by: Rebecca Bellovin <48215858+rmbellovin@users.noreply.github.com>
    Co-authored-by: Kim Morrison <kim@tqft.net>

[33mcommit ae0be75669055ab0f6b13dc09730cf5d263dc6de[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Mon Jun 3 23:58:02 2024 +0000

    chore: tidy induction principles for Unitization and TrivSqZeroExt (#13476)
    
    This adds `elab_as_elim`, `induction_eliminator`, and `cases_eliminator` attributes, which eliminates the need to use the `using` term of `induction`.
    
    Also choose a better argument name, since this is used as the case name.
    
    Split from #12605

[33mcommit d6ea8fe08a5660ae1dcf05216b3ed9a98a2def42[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Mon Jun 3 18:57:15 2024 +0000

    feat(CategoryTheory/Shift): functors from a category to a category with a shift (#12607)
    
    Given a category `C`, and a category `D` equipped with a shift by a monoid `A`, we define a structure `SingleFunctors C D A` which contains the data of functors `functor a : C ‚•§ D` for all `a : A` and isomorphisms `shiftIso n a a' h : functor a' ‚ãô shiftFunctor D n ‚âÖ functor a` whenever `n + a = a'`. These isomorphisms should satisfy certain compatibilities with respect to the shift on `D`.
    
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit 26cbbbbd094b56700459bf8cbc4e202b80e13456[m
Author: Jeremy Tan Jie Rui <reddeloostw@gmail.com>
Date:   Mon Jun 3 18:04:33 2024 +0000

    chore(LinearAlgebra‚ÄìTopology): remove `refine'` (#13474)
    
    Split from #13385; this excludes usages where `refine'` was used to replace `refine_struct` ‚Äì except where the proofs for each field were already separately written out.

[33mcommit 339178bff371a2e52665d86e4ad518e779774157[m
Author: John Tristan <trjohnb@amazon.com>
Date:   Mon Jun 3 17:18:04 2024 +0000

    feat(Topology): fiberwise summation (#13417)
    
    Fiberwise summation for extended non-negative reals.
    
    
    
    Co-authored-by: John Tristan <jean.baptiste.tristan@gmail.com>

[33mcommit 3438911a821fa2fb5ba37cdbec993e952646aeca[m
Author: Xavier Roblot <roblot@math.univ-lyon1.fr>
Date:   Mon Jun 3 16:18:40 2024 +0000

    feat(Matrix/Determinant): add `submatrix_succAbove_det_eq_negOnePow_submatrix_succAbove_det` (#13475)
    
    Let `M` be a `(n+1) √ó n` matrix whose row sums to zero. This PR proves that all the matrices obtained by deleting one
    row have the same determinant up to a sign (and a similar result for columns).
    
    This PR also move `Mathlib/LinearAlgebra/Matrix/Determinant.lean` to `Mathlib/LinearAlgebra/Matrix/Determinant/Basic.lean` and put the new result in a new file: `Mathlib/LinearAlgebra/Matrix/Determinant/Misc.lean` where various results about determinant should be added.

[33mcommit 1df4e15538fec1e71aefa8945f53388127fa90ee[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Mon Jun 3 15:08:14 2024 +0000

    fix: make `update_nolints.sh` executable (#13482)
    
    An oversight from #9857; perhaps this is the cause of the latest error.

[33mcommit d78de186802d943e4eea30b21d80ccc4460b6dd4[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Jun 3 13:53:56 2024 +0000

    chore(*): drop some uses of `some_eq_coe`, `none_eq_bot` (#13471)
    
    Partially migrate from `WithBot.some_eq_coe`, `WithTop.some_eq_coe`,
    `WithBot.none_eq_bot`, and `WithTop.none_eq_top`.

[33mcommit 7aa5faafc8815ed358053e05f51f4aea8e47f4e2[m
Author: judithludwig <150042763+judithludwig@users.noreply.github.com>
Date:   Mon Jun 3 11:02:30 2024 +0000

    fix docstring in PiL2.lean (#13477)
    
    fix docstring

[33mcommit d7fd3e437509fe124d4bea6a4c5aadb750b2f209[m
Author: Xavier Roblot <roblot@math.univ-lyon1.fr>
Date:   Mon Jun 3 10:24:42 2024 +0000

    feat(NumberField/CanonicalEmbedding): add normAtPlace (#13135)
    
    Working in the mixed space `‚Ñù^r‚ÇÅ √ó ‚ÑÇ^r‚ÇÇ` associated to a number field can be sometimes tedious since one has to deal separately with real and complex components even though the arguments are often very similar.
    
    In order to make working with norms easier, this PR defines for an infinite place `w` and an element `x` of  `‚Ñù^r‚ÇÅ √ó ‚ÑÇ^r‚ÇÇ`, `normAtPlace w x` as essentially `‚Äñx w‚Äñ` and proves many properties about it. This make it possible to golf some existing proofs and will also make things simpler in the coming PRs about the fundamental cone.

[33mcommit b70b6b2a534b6c46e93a570515c5e3fa334ba7f4[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Mon Jun 3 08:09:22 2024 +0000

    chore: Rename `Nat.multinomial_nil` to `Nat.multinomial_empty` (#13437)

[33mcommit 52b851a92cd69484ad35eae796b7f5a99e9c3fba[m
Author: Jeremy Tan Jie Rui <reddeloostw@gmail.com>
Date:   Mon Jun 3 05:47:11 2024 +0000

    chore(Algebra‚ÄìGroupTheory): remove `refine'` (#13472)
    
    Split from #13385; this excludes usages where `refine'` was used to replace `refine_struct`.

[33mcommit 2bc1ed5616852a11014e86a18000aed0ef923ea7[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sun Jun 2 23:30:32 2024 +0000

    chore(LapMatrix): golf, use `*·µ•` notation, docs (#13453)

[33mcommit 3e748f7cf983fc3b0f1a8167f24ee0551f220fd9[m
Author: JovanGerb <jovan.gerbscheid@gmail.com>
Date:   Sun Jun 2 23:17:33 2024 +0000

    chore: remove brackets around `Type*` (#13462)
    
    [Zulip](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/.60outParam.60.20in.20instance.20argument/near/442059394)
    
    I replaced all occurrences of `(Type*)` or `<| Type*` with just `Type*`

[33mcommit dd607825aa5db292546a4c3d7b2306e56d3bdcf5[m
Author: JovanGerb <jovan.gerbscheid@gmail.com>
Date:   Sun Jun 2 14:10:43 2024 +0000

    chore: remove unnecessary outParam (#13067)
    
    I spotted an `outParam` in an instance argument of a class. The purpose of `outParam` is to fill in the value during type class search. However, since this is an instance argument, it must already have been synthesised at this point, so this has no purpose.
    
    I looked at the old Zulip conversation on this topic, and there didn't seem to be a good reason for putting this `outParam` in the instance argument, other than simply that it worked.

[33mcommit ba4d71afa3de6c6ba4729ec4182326c75c312f6d[m
Author: David Kurniadi Angdinata <dka31@cantab.ac.uk>
Date:   Sun Jun 2 08:30:02 2024 +0000

    feat(AlgebraicGeometry/EllipticCurve/Affine): add further map lemmas (#13356)
    
    ... and make definition and lemma names consistent with downstream files.
    
    
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>

[33mcommit 6f758e582b2ad1cb121bf88aa1a178e284315af5[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Sun Jun 2 02:44:31 2024 +0000

    feat: uniqueness of the non-unital continuous functional calculus (#13363)

[33mcommit 13cef7690fab75e040d3a9dd3d912bc71a5c5f7b[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Sat Jun 1 21:26:28 2024 +0000

    feat: instances of the non-unital continuous functional calculus for C‚ãÜ-algebras (#13365)
    
    This adds instances of the non-unital continuous functional calculus (for normal, selfadjoint and nonnegative elements) for non-unital C‚ãÜ-algebras.

[33mcommit f5b37525599ff0abbdb719d81956585dc05449d5[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Sat Jun 1 20:25:30 2024 +0000

    style: manually remove some leading `by` (#13433)
    
    The starting point for these changes was the automatic formatter, but all of these required manual changes,
    to make the resulting line shorter than 100 characters. I do like the final result, though.
    
    After this PR, there are 31 remaining occurrences, which I don't find obvious to fix.

[33mcommit 70cbde835d8cf877b63371c93a75ed5b39ee10f8[m
Author: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>
Date:   Sat Jun 1 18:16:54 2024 +0000

    feat(CategoryTheory/Sites): epi/mono factorizations in categories of sheaves (#13396)
    
    In this PR, we show that if a concrete category `A` is such that morphisms can be factored functorially as surjective maps followed by injective maps, then morphisms of sheaves with values in `A` can be factored functorially as locally surjective maps followed by locally injective maps (and this is also an epi/mono factorization).
    
    Then, it is shown that a morphism of sheaves is epi iff it is locally surjective.
    
    
    
    Co-authored-by: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>

[33mcommit a27f09885302ee08a7f0e2f013e118b10b631ea2[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Sat Jun 1 18:16:52 2024 +0000

    chore: clean up `nolints.yml` workflow (#13351)
    
    Synchronise the early steps with the main build workflow: the differences were minor and not essential, but there is little point in being different. Best reviewed by `diff`ing against `build.yml`.
    
    It would be nice to avoid the copy-pasting of e.g. the build mathlib jobs: that pre-existing issue is left for future PRs.

[33mcommit 2a5d9ec5a609be24df25d39df8044be32f444442[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Sat Jun 1 17:36:51 2024 +0000

    feat: `t.card ‚â§ (s / t).card` (#13436)
    
    and other simple basic results about pointwise actions of finsets.
    
    From LeanAPAP

[33mcommit 94ff2dfecbf10d4cc13a0e97b440a94759fb3b1f[m
Author: Kim Morrison <kim@tqft.net>
Date:   Sat Jun 1 13:49:05 2024 +0000

    chore: bump dependencies (#13443)

[33mcommit bffb043c6d5be76d30a5cddbb85f8b0acd6dd8f0[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Sat Jun 1 12:47:00 2024 +0000

    refactor: tweak and move functionality for getting all modules out of `scripts` (#13339)
    
    With #13245, two scripts in `scripts` would like to use very similar information:
    move it to a central place instead (a file in `Mathlib/Util`). Suggestions for better locations are welcome!
    
    Also, split the `getAll` function in two pieces, getting the file names and transforming this into module names.
    While #11853 only requires the latter, #13245 needs the former (which is computed anyway).
    Only accessible the converted module names and converting them back to files would be absurd.
    
    - [x] depends on: #11853 which adds these utility functions

[33mcommit de5641307008d5b7008c3eac51a5130f1c9acbe0[m
Author: Rida Hamadani <mridahamadani@gmail.com>
Date:   Sat Jun 1 12:34:26 2024 +0000

    feat(Cache): add success message to `lake exe cache get` (#13395)
    
    closes #13276
    
    
    Co-authored-by: Rida Hamadani <106540880+Rida-Hamadani@users.noreply.github.com>
    Co-authored-by: Michael Rothgang <rothgami@math.hu-berlin.de>

[33mcommit fda847ea534a4f45cebbcc887699150985f47f32[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Sat Jun 1 12:34:25 2024 +0000

    fix(`nolints.yml`): correct the main step of the `update-nolints` workflow (#13343)
    
    This fixes the main step of the `update_nolints` workflow.
    As I see it, this was quite impressive: about three bugs in four lines of code.
    - updating `nolints.json` now works using the `update` option: no need to run the linter and move some file (presumably, that file wouldn't exist either)
    - running `git diff` right after generating the exceptions didn't work: no git repository was configured yet
    - wrapping things in `problem-matcher-wrap` was a bad idea, as that only supports one command: instead, we remove the matcher, as we don't need this here
    
    Since this workflow was originally cargo-culted from the mathlib one, I view this also as a cautionary tale about cargo cult programming.

[33mcommit 8a34ed012edc3e7d9e49b43b0a8c63e8e7bbca67[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Sat Jun 1 12:34:24 2024 +0000

    refactor: Use `FunLike` on `ProbabilityMeasure` (#13171)
    
    ... instead of `CoeFun`. This ensures `‚áëŒº` doesn't get unfolded to `fun s ‚Ü¶ (Œº s).toNNReal`, which is bad for both readability in the infoview and indexing in simp (see #13164 for the latter).

[33mcommit db4dcf5a17de4e300df0f744d1bc8a646a7170eb[m
Author: damiano <adomani@gmail.com>
Date:   Sat Jun 1 12:34:23 2024 +0000

    feat: `lake exe mk_all` in CI (#11874)
    
    This PR replaces the shell commands for importing all the mathlib libraries by a lean executable defined in #11853.
    
    
    
    Co-authored-by: Michael Rothgang <rothgami@math.hu-berlin.de>
    Co-authored-by: Ya√´l Dillies <yael.dillies@gmail.com>

[33mcommit b1cab72ab6a6132bd7de7de0aaa9f7322bf6dedd[m
Author: Sky Wilshaw <zeramorphic@proton.me>
Date:   Sat Jun 1 12:22:36 2024 +0000

    fix(`gitpod.yml`): force elan to self-update in gitpod (#13439)
    
    Ensure that `elan` is up-to-date before trying to run `lake exe cache get` etc in gitpod containers.

[33mcommit 5b761f86b6b431b6e9d81eb7d73ff3e62a31472f[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Sat Jun 1 08:19:33 2024 +0000

    chore: Split `Algebra.BigOperators.Basic` (#13277)
    
    ... into two files:
    * `Algebra.BigOperators.Group.Finset` for lemmas about group-like objects.
    * `Algebra.BigOperators.GroupWithZero.Finset` for lemmas about group-with-zero-like objects. Credit Johannes for https://github.com/leanprover-community/mathlib/commit/edfbf3cf.

[33mcommit 5f37a7eae4be09a98a8c75ee81d6437e26ce43e1[m
Author: Christopher Hoskin <christopher.hoskin@gmail.com>
Date:   Sat Jun 1 08:03:30 2024 +0000

    refactor(LinearAlgebra/BilinearForm/Properties): Redefine BilinForm.IsRefl, BilinForm.IsAlt and BilinForm.IsSymm in terms of LinearMap equivalents  (#10432)
    
    Redefine `BilinForm.IsRefl`, `BilinForm.IsAlt` and `BilinForm.IsSymm` in terms of `LinearMap.IsRefl` and `LinearMap.IsSymm`.
    
    
    
    Co-authored-by: Christopher Hoskin <christopher.hoskin@overleaf.com>
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 30a8ef8d300dbb0f18287dd8589dd86b61bc217a[m
Author: Michael Stoll <Michael.Stoll@uni-bayreuth.de>
Date:   Sat Jun 1 05:50:43 2024 +0000

    feat(GroupTheory/SpecificGroups/Cyclic): add material on groups with given generator (#13423)
    
    This adds some material to `Mathlib.GroupTheory.SpecificGroups.Cyclic` for dealing with groups that have a specified generator, mostly on existence and uniqueness of homomorphisms and isomorphisms in terms of the image of the given generator.

[33mcommit 1283302a67a266b496ac71a609603853ade84cd6[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Sat Jun 1 05:50:42 2024 +0000

    feat: Corners theorem, Roth's theorem (#9000)
    
    Prove the corners theorem and Roth's theorem as corollaries of the triangle removal lemma

[33mcommit 330b3f801c785aea4c832b8c174e520b302108e3[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Sat Jun 1 04:51:47 2024 +0000

    docs(Algebra/BigOperators): fix typo in docstring  (#13426)

[33mcommit efa64074f1d5d2ff0418464b4afb57084156b298[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Sat Jun 1 04:51:46 2024 +0000

    style: remove all easy leading `by`s (#13419)
    
    If a line starts with `by `, the previous line ends with `:=` and the previous line is short enough,
    move the "by " to the previous line to match the style guide.

[33mcommit 0fd3d39a108a86dd1acc993c04b16c2d281fba26[m
Author: Oliver Nash <github@olivernash.org>
Date:   Sat Jun 1 03:57:37 2024 +0000

    chore: golf `lie_eq_self_of_isAtom_of_nonabelian` (#13406)

[33mcommit 3ecc0fed617e42fc38391e8931dc4e97e8d4f13d[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Sat Jun 1 02:58:26 2024 +0000

    chore: deprecate bad lemmas about WithTop/WithBot (#13128)
    
    `Order/WithBot.lean` seems to frequently confuse `WithBot.some` and `Option.some`, and some of the lemmas are strange as a result.
    
    By teaching `cases` not to introduce `Option.some`, we no longer need these weird lemmas.
    
    This deprecates:
    
    * `List.maximum_eq_none` ‚Üí `List.maximum_eq_bot`
    * `List.minimum_eq_none` ‚Üí `List.maximum_eq_top`
    * `WithBot.some_le_some` ‚Üí `WithBot.coe_le_coe`
    * `WithBot.some_lt_some` ‚Üí `WithBot.coe_lt_coe`
    * `WithBot.none_lt_some` ‚Üí `WithBot.bot_lt_coe`
    * `WithBot.not_lt_none` ‚Üí `WithBot.not_lt_bot`
    * `WithBot.none_le` ‚Üí `bot_le`
    * `WithTop.some_le_some` ‚Üí `WithTop.coe_le_coe`
    * `WithTop.some_lt_some` ‚Üí `WithTop.coe_lt_coe`
    * `WithTop.some_lt_none` ‚Üí `WithTop.coe_lt_top`
    * `WithTop.not_none_lt` ‚Üí `WithTop.not_top_lt`
    * `WithTop.le_none` ‚Üí `le_top`
    
    It's still occasionally possible to end up with `Option.some a : WithTop A`, but when this happens you can rewrite by `some_eq_coe` first to fix it.

[33mcommit 8200298551e8ab76477ab483e6ff90730cfd6aff[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Sat Jun 1 00:00:12 2024 +0000

    chore: move LinearOrder Nat instance to Mathlib.Data.Nat.Defs (#13082)

[33mcommit 20b1e82e997372dff47ea4cdb92cf65854218af4[m
Author: Kim Morrison <kim@tqft.net>
Date:   Sat Jun 1 00:00:11 2024 +0000

    feat(CategoryTheory/Monoidal/Bimon): definition of bimonoid object in a braided category (#12970)
    
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit daa801e2817b8d28ecaa9f0b363af8f8cde0cbc3[m[33m ([m[1;31morigin/mckoen/nat_trans[m[33m)[m
Author: Patrick Massot <patrickmassot@free.fr>
Date:   Fri May 31 15:10:16 2024 +0000

    chore: remove most of the material on BitVec (#13286)
    
    This PR removes most of the material on BitVec. While it is being actively developed in Lean, we do not want conflicting, but essentially unused, material here causing conflicts.
    
    If downstream users of Mathlib find that they need some of this material is being used, they are advised to either:
    * restore the material in their downstream repository
    * ask someone from the FRO, e.g. @semorrison, about making a PR adding it to the Lean library.
    
    
    
    
    
    Co-authored-by: Alex Keizer <alex@keizer.dev>
    Co-authored-by: Kim Morrison <kim@tqft.net>

[33mcommit d0f6191769fa055b754472b328ff1effb92dad86[m
Author: David Loeffler <d.loeffler.01@cantab.net>
Date:   Fri May 31 14:33:30 2024 +0000

    feat(NumberTheory/LSeries): Riemann zeta as special case of Hurwitz (#13273)
    
    We now have a general treatment of the Hurwitz zeta function. The Riemann zeta is just the Hurwitz zeta for `a = 0`, and this PR reimplements it as such.
    
    I have tried to carry over the `align` statements from the old treatment wherever possible (many of the intermediate lemmas from the previous iteration don't have direct analogues, but the main results do).

[33mcommit e2f533604598762466cddaf70cecacab6c07cf82[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Fri May 31 14:22:18 2024 +0000

    chore(test/linarith): remove stray variables from guard_msgs (#13402)
    
    Some of the `#guard_msgs` testing for errors in this file capture a pile of random unrelated variables. This scopes these variables to `section`s to avoid this behavior.
    
    I also uncomment a test that doesn't seem to be problematic any more, and remove `pp.mvars` which wasn't actually having any useful effect.
    
    
    
    Co-authored-by: Michael Rothgang <rothgami@math.hu-berlin.de>

[33mcommit d05b0979f8f9a7ea08fd0efaf0b392d8dfe385b1[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Fri May 31 14:04:16 2024 +0000

    feat(CategoryTheory): surjective/injective factorizations in concrete categories (#13411)
    
    In this PR, we show that if `C` is a concrete category that has strong epi mono factorizations and is such that `forget C` preserves both epi and mono, then any morphism in `C` can be factored in a functorial manner as a composition of a surjective morphism followed an injective morphism.
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit 2171e8dee6beb401b10349d248e8b93246672eda[m
Author: Michael Stoll <Michael.Stoll@uni-bayreuth.de>
Date:   Fri May 31 13:35:28 2024 +0000

    feat: add API for additive characters (#13389)
    
    This adds some API lemmas for additive characters.
    * Name change: `AddChar.primitiveCharFiniteField` to `AddChar.FiniteField.primitiveChar`
    
    We also remove a porting note (`AddChar.PrimitiveAddChar` can be a structure again) and fix a typo in a lemma name from another recent PR.

[33mcommit 86ab5d5dcb163b47d33d13e2a9c99e9329a242c4[m
Author: Jz Pan <acme_pjz@hotmail.com>
Date:   Fri May 31 12:16:27 2024 +0000

    feat: add the definition of `OrzechProperty` (#13322)
    
    This is part one of #12076.
    
    `OrzechProperty R` is a type class stating that `R` satisfies the following property: for any finitely generated `R`-module `M`, any surjective homomorphism `f : N ‚Üí M` from a submodule `N` of `M` to `M` is injective.
    
    We stated some basic results about `OrzechProperty` and proved that it implies `StrongRankCondition`.

[33mcommit 57716b0988d94f57c0e1fc8c8f105cc72fd9f0e4[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Fri May 31 11:50:52 2024 +0000

    feat(CategoryTheory/Sites): locally bijective morphisms of presheaves (#13324)
    
    Let `C` a category equipped with a Grothendieck topology `J`. Let `A` be a concrete category. In this file, we introduce a type-class `J.WEqualsLocallyBijective A` which says that the class `J.W` (of morphisms of presheaves which become isomorphisms after sheafification) is the class of morphisms that are both locally injective and locally surjective (i.e. locally bijective). We prove that this holds iff for any presheaf `P : C·µí·µñ ‚•§ A`, the sheafification map `toSheafify J P` is locally bijective. We show that this holds under certain universe assumptions.
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit d52741c6b61658d261947e2e18ed93d28c94c08e[m
Author: Jujian Zhang <jujian.zhang1998@outlook.com>
Date:   Fri May 31 11:34:43 2024 +0000

    feat(AlgebraicGeometry/StructureSheaf): add two useful lemmas (#13398)
    
    Let $f : R \to S$ be a ring map
    
    1.  The preimage of some basic open set $D(x)$ under $\mathrm{Spec}f$ is $D(f(x))$ (proof is `rfl`)
    2.  the ring map $\Gamma(\mathcal{O} _ {\mathrm{Spec}R}, D(x)) \to \Gamma(\mathcal{O}_{\mathrm{Spec} S}, D(f(x))$ is the map between localizations `R_x` and `S_{f(x)}.`
    
    These are lemmas are found useful in #12371 by Andrew.
    
    Co-authored-by: Andrew Yang <the.erd.one@gmail.com>

[33mcommit 5b4a8ff4598455924496c428ba6938c9eb1728d8[m
Author: Johan Commelin <johan@commelin.net>
Date:   Fri May 31 11:21:21 2024 +0000

    feat(Algebra/Lie): Killing Lie algebras are semisimple (#13265)

[33mcommit 9220d10df329407f9ddb9911812afacd2a7e1af2[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Fri May 31 09:58:24 2024 +0000

    chore(CategoryTheory/Sites): remove unused variable (#13408)
    
    Removes an old assumption `HasFiniteLimits`¬†on an abelian category (this is automatic and doesn't need to be stated)

[33mcommit 9b455e2497e8de55ef2ed87d10e38dcc4d1099b6[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Fri May 31 09:58:23 2024 +0000

    feat(CategoryTheory): surjective-injective factorizations in concrete categories (#13386)
    
    In this PR, we formalize the notion of surjective/injective factorizations in concrete categories. We show that this obviously holds in the category of types. In future PRs, it shall be promoted to locally-surjective/locally-injective factorizations in categories of (pre)sheaves, and this shall be used in order to relate locally surjective morphisms and epimorphisms in categories of sheaves (beyond the case of sheaves of types which was obtained in #7721 and #13318).

[33mcommit 40c57eb6635f37cab79f426c69a41dac1b69970d[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Fri May 31 09:58:21 2024 +0000

    feat(Algebra/Homology): consequences of the homology sequence (#12638)
    
    In this PR, we show that the homology sequence attached to a short exact sequence of homological complexes is functorial with respect to a morphism `œÜ : S‚ÇÅ ‚ü∂ S‚ÇÇ` between two such short exact sequences. We show that if `œÜ.œÑ‚ÇÅ` and `œÜ.œÑ‚ÇÇ` are quasi-isomorphisms, then so is `œÜ.œÑ‚ÇÉ`. (Other similar lemmas shall be obtained in a future PR.)

[33mcommit 7246110b6d3cfd98e8077c54fd70bbdffa08f206[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Fri May 31 09:58:20 2024 +0000

    feat(Algebra/Homology): morphisms of cochain complexes that are degreewise epi with an injective kernel (#12624)
    
    The lemmas which shall be added in subsequent PRs in the folder `Mathlib.Algebra.Homology.Factorizations` will be important in the definition of total derived functors on the bounded below derived categories.
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit e694eb0dd4205ea8fa5f2a14ad42e512197e5463[m
Author: Peter Nelson <71660771+apnelson1@users.noreply.github.com>
Date:   Fri May 31 09:08:07 2024 +0000

    feat(Data/Set/Finite): Infinite.nontrivial (#13380)
    
    We add a lemma that infinite sets are nontrivial; it is just the modus tollens of the existing `Set.Subsingleton.Finite`.

[33mcommit 48de2e85c0a006119f9812e691774421296c31be[m
Author: Johan Commelin <johan@commelin.net>
Date:   Fri May 31 08:22:10 2024 +0000

    feat(Algebra/Lie/InvariantForm): Lie algebras with a nondegenerate invariant form are semisimple (#13391)
    
    
    - [x] depends on: #13387

[33mcommit ac59a83c23b1fe513ebdfea74c6f5723304c839e[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Fri May 31 00:19:13 2024 +0000

    chore: fix formatting of many misplaced "by"s (#13204)
    
    
    
    Co-authored-by: Jeremy Tan Jie Rui <reddeloostw@gmail.com>
    Co-authored-by: Parcly Taxel <reddeloostw@gmail.com>

[33mcommit e512aa9866eda86462f0c9cff46ee3f4c7552b4b[m
Author: Johan Commelin <johan@commelin.net>
Date:   Thu May 30 20:16:00 2024 +0000

    chore(Algebra/Lie/Submodule): the lattice of Lie submodules is atomic (#13387)

[33mcommit de57ce8a4b6f8fc0ff49f31c12b143ce2d168bb9[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Thu May 30 19:52:26 2024 +0000

    feat: Dissociation of sets (#10555)
    
    In additive combinatorics, a pretty standard tool called Chang's lemma uses a version of linear independence and linear span with "scalars" restricted to `{-1, 0, 1}`. This PR defines those analogs, known as dissociation and span in the literature.
    
    From LeanAPAP

[33mcommit 0700a2ea2ada3deebfc6a5e09d447a55606bf352[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Thu May 30 19:14:23 2024 +0000

    chore(Topology): replace even more refine' by refine (#13383)
    
    (or, in one case, apply since this worked where refine didn't).

[33mcommit 4cdf280b199ea3b35236214f631664c08e703f00[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Thu May 30 18:46:53 2024 +0000

    refactor(CategoryTheory): the structure Functor.FullyFaithful (#12929)
    
    This PR introduces a structure containing the data involved in a fully faithful functor `F`, i.e. inverse maps to `F.map`. (This was suggested by Andrew Yang.)
    
    This should also restore certain definitional properties which may have been lost in #12449 and #12462.
    
    Better names have been given to lemmas `IsIso.of_iso` and `IsIso.of_iso_inv` which are now `Iso.isIso_hom` and `Iso.isIso_inv`.

[33mcommit 601da1390400dea5ca35165007f847ba94c3e756[m
Author: Johan Commelin <johan@commelin.net>
Date:   Thu May 30 18:12:51 2024 +0000

    chore(LinearAlgebra): fix names, add lemma on orthogonal spaces (#13384)

[33mcommit ec2ce4cc044c6a82bfb0c0576339b108b410e167[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Thu May 30 18:01:34 2024 +0000

    feat(CategoryTheory): constructor for functors from the category `‚Ñï` (#13223)
    
    In this file, we provide a constructor `Functor.ofSequence` for functors `‚Ñï ‚•§ C`, which takes as an input a sequence of morphisms `f : X n ‚ü∂ X (n + 1)` for all `n : ‚Ñï`.

[33mcommit 7682c2bf77f94a9f48b479564ea6ab1dc4ecdba2[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Thu May 30 17:49:11 2024 +0000

    feat(CategoryTheory/MorphismProperty): the factorization axiom (#13331)
    
    In this PR, we formalize the factorization axiom which asserts that a morphism in a category can be factored as a morphism in a certain class `W‚ÇÅ` followed by a morphism in a class `W‚ÇÇ`. A functorial version of the axiom is also  defined.

[33mcommit 7ec4e2e082f65c5c0ff79c454c301a3aaf0d6189[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Thu May 30 16:55:16 2024 +0000

    chore: add deprecated aliases for Fin.castIso (#13382)
    
    This was removed in #13005.

[33mcommit 2c02180cd83a3a4a957f8c8e0392b1843986b104[m
Author: damiano <adomani@gmail.com>
Date:   Thu May 30 15:41:15 2024 +0000

    CI: move-decls can be accessed by a comment (#13381)

[33mcommit adeba5c96b259ee8a450951d9397f71295911ff9[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Thu May 30 15:41:14 2024 +0000

    style: fix some mis-placed by (#13203)

[33mcommit 73140f479a8165769fd3181e75a82be1a67920d0[m
Author: Filippo A. E. Nuccio <filippo.nuccio@univ-st-etienne.fr>
Date:   Thu May 30 15:41:13 2024 +0000

    feat(RingTheory/DedekindDomain/Ideal): add two lemmas about the multiplicity of normalized factors (#13065)
    
    Add two lemmas on the multiplicity of normalized factors in relation to principal ideals and the cardinality of associates.
    
    Co-authored-by: Mar√≠a In√©s de Frutos-Fern√°ndez @mariainesdff

[33mcommit fdaf175626557d71649bbea3dc4bb88e83a4bf4d[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Thu May 30 14:45:05 2024 +0000

    chore: Do not import algebra in `Data.Finset.Lattice` (#13243)
    
    Move the `OrderBot Nat` instance to a new file `Order.Nat` and the `LinearOrderedSemiring` lemmas from `Data.Finset.Lattice` to a new file `Algebra.Order.Ring.Finset`. I credit Eric for https://github.com/leanprover-community/mathlib/pull/12912.

[33mcommit b1a351c39230660a1c00008be5a958f267e18bbb[m
Author: David Kurniadi Angdinata <dka31@cantab.ac.uk>
Date:   Thu May 30 14:17:16 2024 +0000

    feat(AlgebraicGeometry/EllipticCurve/Jacobian): implement group operation polynomials for Jacobian coordinates (#9433)
    
    Define auxiliary polynomials for the secant-and-tangent negation `neg` and addition `add` on `Fin 3 -> F`. Note that the group operations are defined from scratch instead of pulling back the group operations from the affine case, as this will be more convenient for rewriting and allows them to be defined over a ring. I don't see an easy way to define an analogous `slope` function as in `Affine` when there are now `Z`-coordinates in the polynomials.
    
    This is the second in a series of four PRs leading to #9405 and is analogous to #9417

[33mcommit db99aaa2ae686cd361f04f0ced1d25177ee62965[m
Author: Michael Stoll <Michael.Stoll@uni-bayreuth.de>
Date:   Thu May 30 13:23:02 2024 +0000

    feat(RingTheory/RootsOfUnity/Basic): add more covenient version of a lemma (#13375)
    
    This provides
    ```lean
    lemma eq_pow_of_mem_rootsOfUnity' {k : ‚Ñï} (hk : 0 < k) {Œ∂ : R} (hŒ∂ : IsPrimitiveRoot Œ∂ k) {Œæ : RÀ£}
        (hŒæ : Œæ ‚àà rootsOfUnity (‚ü®k, hk‚ü© : ‚Ñï+) R) : ‚àÉ i < k, Œ∂ ^ i = Œæ
    ```
    for ease of use compared with [IsPrimitiveRoot.eq_pow_of_mem_rootsOfUnity](https://leanprover-community.github.io/mathlib4_docs/Mathlib/RingTheory/RootsOfUnity/Basic.html#IsPrimitiveRoot.eq_pow_of_mem_rootsOfUnity), which requires `k` to be a `PNat` and `Œ∂` to be a unit.

[33mcommit 4cedece64908ab8d2463b05f1f01d9a21bf60e4c[m
Author: damiano <adomani@gmail.com>
Date:   Thu May 30 13:23:01 2024 +0000

    chore: final batch of mass replacements `refine'` to `refine` (#13357)
    
    These replacements have been performed completely mechanically by a script and, in the branch with the script, have passed CI with no extra input (except fixing a long line and one indentation issue).
    
    The script exclusively removes `'` from `refine'` and add `?` in front of `_` as appropriate.
    
    Assuming that I did not leave out any cases, the only `refine'`s that could still be replaced by a simple-minded translation `refine' ...` to ``refine [sprinkle some `?`]`` are the 52 that involve at least 5 holes.

[33mcommit f3615fcc76f2ec209621480596c606101db04790[m
Author: Ga√´tan Serr√© <gaetan.serre@ens-paris-saclay.fr>
Date:   Thu May 30 13:01:48 2024 +0000

    feat(MeasureTheory/Measure/WithDensity): withDensity_apply_eq_zero relaxed AEMeasurable assumption (#13314)
    
    Relaxed Measurable assumption to AEMeasurable of `withDensity_apply_eq_zero`. The more general version is named `withDensity_apply_eq_zero'`. The proof of `withDensity_apply_eq_zero` is thus immediate. Added multiple generalizations of lemmas depending on `withDensity_apply_eq_zero`.
    
    
    
    Co-authored-by: Ga√´tan Serr√© <56162277+gaetanserre@users.noreply.github.com>

[33mcommit dbaf55811cc1dd45a83c26c367094da1fe666707[m
Author: David Loeffler <d.loeffler.01@cantab.net>
Date:   Thu May 30 12:50:15 2024 +0000

    chore(NumberTheory/LSeries): namespace Hurwitz zeta (#13377)
    
    This wraps all the code added so far about Hurwitz zeta functions (& their cousins `expZeta`, `cosZeta`, etc) in a namespace `HurwitzZeta`.

[33mcommit 089877ce579c5c8683f5e6ac0e4518a219c32499[m
Author: damiano <adomani@gmail.com>
Date:   Thu May 30 11:57:39 2024 +0000

    fix: `move-decls` is aware of protected (#13376)
    
    As reported on [Zulip](https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/.60move-decls.60.20label/near/441435405).

[33mcommit d94e62e917e4562e5deef89d3eb99300c00c61a6[m
Author: Michael Stoll <Michael.Stoll@uni-bayreuth.de>
Date:   Thu May 30 11:57:38 2024 +0000

    feat(NumberTheory/Zsqrtd/GaussianInt): Function.Injective GaussianInt.toComplex (#13373)
    
    This adds the `Function.Injective` version of the injectivity of the map from `‚Ñ§[i]` to `‚ÑÇ`. (This is convenient for use with `apply_fun`, for example.)

[33mcommit a5844cabf25c682095f00bb19574effa6f9c46d3[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Thu May 30 11:57:37 2024 +0000

    chore: add deprecation dates for `nat_cast` and `int_cast` lemmas (#13368)
    
    Deprecations have been forgotten in #11486. We add them in this PR.
    
    Methodology: start from the last commit of #11486, use the script by @adomani in https://github.com/leanprover-community/mathlib4/pull/10185#issuecomment-1925481325 to generate deprecation aliases (I am also adding an updated version of the script in a comment below) and commit. Then cherry pick this last commit on master and fix whatever has changed in between. This is not perfect as declarations which have been moved since #11486 won't get their deprecated alias, but this should be good enough.

[33mcommit bc1f46408891641f8c61e81a41c1b09093114133[m
Author: Hyeokjun Kwon <rnjsgurwns27@gmail.com>
Date:   Thu May 30 11:57:36 2024 +0000

    feat: add card_divisors theorem (#13350)
    
    https://leanprover.zulipchat.com/#narrow/stream/217875-Is-there-code-for-X.3F/topic/.E2.9C.94.20For.20counting.20number.20of.20divisors/near/441117464

[33mcommit 74b8346f2be7d5c5c3c67cd06a35b3f75104e9f2[m
Author: Michael Stoll <Michael.Stoll@uni-bayreuth.de>
Date:   Thu May 30 11:57:35 2024 +0000

    feat(GroupTheory/OrderOfElement): equivalences preserve orders (#13348)
    
    We add the statement that (multiplicative and additive) equivalences preserve the order of an element.
    
    
    
    Co-authored-by: Michael Stoll <99838730+MichaelStollBayreuth@users.noreply.github.com>

[33mcommit 8166198574a8fe642488daf702a742f8aede4e82[m
Author: Xavier Roblot <roblot@math.univ-lyon1.fr>
Date:   Thu May 30 11:57:34 2024 +0000

    feat(Ideal.IsPrincipal): Prove that the equiv between principal ideals and associates is a `MulEquiv` (#13177)
    
    Define the `Submonoid` of principal ideals and prove that `associatesEquivIsPrincipal :  Associates R ‚âÉ {I : Ideal R // Submodule.IsPrincipal I}` actually yields a `MulEquiv` between `Associates R` and this `Submonoid`.
    
    Put the result in a a new file `Ideal.IsPrincipal` and move `associatesEquivIsPrincipal` there.

[33mcommit c6db3cce9e166d62e2d6fdca1a06953a37accfe6[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Thu May 30 11:57:33 2024 +0000

    chore: Delete `Data.Fin.OrderHom` (#13147)
    
    Move the content of `Data.Fin.OrderHom` to
    * `Data.Fin.Basic` for the definitions and almost all lemmas
    * `Order.Fin` for the order properties
    
    For this to not be terribly painful, I had to prove a few `Fin`-specific basic order lemmas.

[33mcommit 105db71a611fe8d448b7fd8edff292560c9b7c1c[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Thu May 30 11:03:45 2024 +0000

    chore: fix 2 typos in a docstring (#13364)

[33mcommit 645bbd3ce176ed72976ad4536166a24fd54cd5e6[m
Author: David Renshaw <dwrenshaw@gmail.com>
Date:   Thu May 30 11:03:44 2024 +0000

    chore: deprecate Nat.div_mod_eq_mod_mul_div and Nat.mul_div_mul_comm_of_dvd_dvd (#13336)
    
    * `div_mod_eq_mod_mul_div` is a flipped version of [`mod_mul_right_div_self`](https://github.com/leanprover/lean4/blob/91334702431b8a7bf07f3f9e5696603de7b11fb6/src/Init/Data/Nat/Mod.lean#L50).
    * `mul_div_mul_comm_of_dvd_dvd` is a flipped version of [`div_mul_div_comm`](https://github.com/leanprover-community/mathlib4/blob/b6cb80af68d53667dbbe8267f20ca075d5ffa953/Mathlib/Data/Nat/Defs.lean#L583).
    
    These were found by [tryAtEachStep](https://github.com/dwrensha/tryAtEachStep).

[33mcommit d09a6fc836467c37293befe41507c9c245f43e5d[m
Author: Jujian Zhang <jujian.zhang1998@outlook.com>
Date:   Thu May 30 11:03:43 2024 +0000

    refactor(Order/JordanHolder): use `RelSeries` to implement `CompositionSeries` (#12914)
    
    > [!NOTE]
    > The `TODO` in this file indicates that the instance of `JordanHolderLattice` for submodules should
    > be obtained via `ModularLattice`. This is not the case in `mathlib4`.
    > See `JordanHolderModule.instJordanHolderLattice`.

[33mcommit 5ac1926c5f896fc6ded8e7938c8979a5d25effe7[m
Author: damiano <adomani@gmail.com>
Date:   Thu May 30 10:51:59 2024 +0000

    chore: more `refine'` to `refine` (#13287)
    
    A PR analogous to #13166.  The reason some of these `refine'` are now caught is that my previous script missed all instances.  I am not sure why it is still missing other `refine'`.
    
    
    
    Co-authored-by: Michael Rothgang <rothgami@math.hu-berlin.de>

[33mcommit f73224691f8dfc270c9737055477ddf27895e5bc[m
Author: David Loeffler <d.loeffler.01@cantab.net>
Date:   Thu May 30 10:19:12 2024 +0000

    feat(NumberTheory/LSeries): special values of Hurwitz zeta (#13347)
    
    Formulae for Hurwitz zeta functions at negative integers in terms of Bernoulli polynomials.

[33mcommit 27d70e945ab990ca44495707409e23b39513275a[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Thu May 30 10:05:59 2024 +0000

    feat(CategoryTheory/Sites): extensive topology is subcanonical (#13371)

[33mcommit 438b95a2349b1ee13b9cd9e6393a265c27b8ba4d[m
Author: Pol'tta / Miyahara K≈ç <pol_tta@outlook.jp>
Date:   Thu May 30 10:05:57 2024 +0000

    fix(Mathlib/Tactic/CC/Addition): `cc` tactic throws error for literals (#13369)
    
    ```lean
    example : nat_lit 0 = nat_lit 0 := by
      cc
    -- failed
    
    example : "Miyahara K≈ç" = "Miyahara K≈ç" := by
      cc (config := { values := false })
    -- failed
    ```
    The cause of this error is that code on `Mathlib.Tactic.CC.CCM.internalizeAppLit` from L1222 onwards doesn't assume that the input is `Expr.lit`.
    This error can be fixed simply by adding `unless e.isApp do return`.
    Also, we add a test for this bug.
    
    p.s. This is an new error in Lean 4 because Lean 3 has no `Expr.lit` so we doesn't have to fix code in Lean 3.

[33mcommit 210d3e05a5bbcbc6d5cbd6ab968f9ce15f3580bb[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Thu May 30 09:54:17 2024 +0000

    feat: the cohomology of a presheaf of groups in degree 1 (#11489)
    
    This PR defines a type `OneCohomology G U` when `G : C·µí·µñ ‚•§ GroupCat` and `U : I ‚Üí C`.
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit 27772e9ed6c5693db79511358e42087cccbedb32[m
Author: Johan Commelin <johan@commelin.net>
Date:   Thu May 30 09:37:11 2024 +0000

    chore(Algebra/Lie): move Semisimple into new directory and split (#13366)

[33mcommit 29aaadd7c79362fd8cbe780ef41ea7eeff91d8c8[m
Author: Johan Commelin <johan@commelin.net>
Date:   Thu May 30 09:25:37 2024 +0000

    chore(Algebra/Lie/Abelian): a nonabelian atomic Lie ideal is perfect (#13370)
    
    TODO: we do not have a predicate for perfect Lie algebras.
    Once this is introduced it should be used in this lemma.
    
    Prerequisite for #13265

[33mcommit 5d2c7b0fdc7573af366184bd446a0987e046ef17[m
Author: Jujian Zhang <jujian.zhang1998@outlook.com>
Date:   Thu May 30 09:04:53 2024 +0000

    feat(RingTheory/GradedAlgebra/HomogeneousLocalization): add `HomogeneousLocalization.map` (#13332)
    
    Let `A` and `B` are two graded rings and `g : A ‚Üí B` is a graded
      preserving ring map. If `P ‚â§ A` and `Q ‚â§ B` are submonoids such that `P ‚â§ g‚Åª¬π(Q)`, then `g`
      induces a ring map between the homogeneous localization of `A` at `P` and the homogeneous
      localization of `B` at `Q`.
    
    Co-authored-by: Andrew Yang <the.erd.one@gmail.com>

[33mcommit 6d39f512abe771b04af206f009f3124b40244af7[m
Author: Dagur T√≥mas √Åsgeirsson <100034030+mattrobball@users.noreply.github.com>
Date:   Thu May 30 08:29:57 2024 +0000

    chore(Category/TopCat): cleanup (#13170)
    
    This PR removes an instance (`ConcreteCategory.instFunLike`) that was mistakenly made global during the port and starts the clean up. It significantly speeds up CI since simp is more efficient.
    
    Unfortunately, some `simp`'s and `rw`'s needed to be changed to `erw` as a result.
    
    Zulip discussion: [#mathlib4 > ConcreteCategory.instFunLike became a global instance](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/ConcreteCategory.2EinstFunLike.20became.20a.20.20global.20instance)
    
    Issue: #13342
    
    
    
    Co-authored-by: Matthew Ballard <matt@mrb.email>
    Co-authored-by: dagurtomas <dagurtomas@gmail.com>
    Co-authored-by: Kim Morrison <kim@tqft.net>
    Co-authored-by: erdOne <the.erd.one@gmail.com>
    Co-authored-by: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>

[33mcommit 9c539b5052396b832f224dfb65b76e1953aaa85c[m
Author: Johan Commelin <johan@commelin.net>
Date:   Thu May 30 08:17:50 2024 +0000

    chore(LinearAlgebra/BilinearForm/Orthogonal): add missing API lemmas (#13367)
    
    Prerequisite for #13265

[33mcommit c529d58294bc0555242ac1f92aef6279a8d0359b[m
Author: damiano <adomani@gmail.com>
Date:   Thu May 30 07:42:38 2024 +0000

    CI: `lean4checker` run also links to the CI run (#13254)
    
    Adds a link to the CI run in the `lean4checker` message.

[33mcommit e96741763149a9cd6b5f78bc74b72389f76025b5[m
Author: damiano <adomani@gmail.com>
Date:   Thu May 30 06:24:02 2024 +0000

    typo: fix two typos in the docs for global_attribute linter (#13354)

[33mcommit 40db2ffcc4795503f20251c53d5009c502dcf64c[m
Author: Michael Stoll <Michael.Stoll@uni-bayreuth.de>
Date:   Thu May 30 06:24:01 2024 +0000

    feat(RingTheory/RootsOfUnity/Complex): complex roots of unity have norm 1 (#13352)
    
    This adds
    ```lean
    lemma Complex.norm_rootOfUnity_eq_one {Œ∂ : ‚ÑÇÀ£} {n : ‚Ñï+} (hŒ∂ : Œ∂ ‚àà rootsOfUnity n ‚ÑÇ) :
        ‚Äñ(Œ∂ : ‚ÑÇ)‚Äñ = 1
    ```
    
    
    
    Co-authored-by: Michael Stoll <99838730+MichaelStollBayreuth@users.noreply.github.com>

[33mcommit 82fd21f54b0806fd5f8712db7b7fcd97d7c84864[m
Author: David Renshaw <dwrenshaw@gmail.com>
Date:   Thu May 30 06:24:00 2024 +0000

    chore: shorten proof of DecompositionMonoid.primal in GCDMonoid.Basic (#13344)
    
    * Replaces a 5-line `suffices` block with `rw [‚Üê mul_dvd_mul_iff_left h0]`. (Found by [tryAtEachStep](https://github.com/dwrensha/tryAtEachStep)).
    * Updates two `refine'` usages to either `exact` or `refine`.

[33mcommit 003a43288befb0f1334f3d188192cb0b782945d4[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Thu May 30 06:23:59 2024 +0000

    fix: rename IsSimpleOrder.LT.lt.eq_bot/top (#13330)

[33mcommit a5bd56405b031a7de57c875550483824d873dba2[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Thu May 30 06:23:58 2024 +0000

    feat(CategoryTheory/Sites): more properties of locally surjective morphisms of presheaves (#13318)
    
    `IsLocallySurjective` is made a type-class, and basic properties (similar to properties of injective/surjective maps) are obtained for locally injective/surjective morphisms of presheaves on a category equipped with a Grothendieck topology.
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit cc6c82f96331333f1ec8666ba8244db99a52880f[m
Author: Kevin Buzzard <k.buzzard@imperial.ac.uk>
Date:   Thu May 30 06:23:57 2024 +0000

    feat: corollary of Chinese Remainder Theorem (#13306)

[33mcommit 5f2f1f73a89bb9effca83f0a905afa70f6b0ea50[m
Author: Ruben Van de Velde <yael.dillies@gmail.com>
Date:   Thu May 30 05:34:03 2024 +0000

    refactor: split Fin.succAboveEmb into an Embedding and an OrderEmbedding (#13341)

[33mcommit 36a9da67e9f7d861837f652aba6820e33328a0df[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Wed May 29 20:55:55 2024 +0000

    feat: restriction of the non-unital continuous functional calculus to a scalar subring (#13327)
    
    Co-authored by: @ADedecker
    
    - [x] depends on: #13323

[33mcommit 1ea200b2d9ba327d9e79e3731d64710695b32735[m
Author: damiano <adomani@gmail.com>
Date:   Wed May 29 17:17:45 2024 +0000

    feat: `lake exe mk_all` as a Lean executable (#11853)
    
    Running
    ```bash
    lake exe mk_all --git
    ```
    should have the same effect as running
    ```bash
    ./script/mk_all.sh
    ```
    
    that is, it creates the files `Mathlib.lean`, `Mathlib/Tactic.lean`, `Archive.lean`, `Counterexamples.lean`.
    
    It does *not* create analogous files for `Cache` and `LongestPole`.
    
    ```bash
    lake exe mk_all
    ```
    is similar, but uses all the `.lean` files in `Mathlib`, not just the Git-managed ones.
    
    See #11874 for using the script in CI.
    
    
    
    Co-authored-by: Ya√´l Dillies <yael.dillies@gmail.com>

[33mcommit 377e7e025b8cfed2001f9d443d802768b620b39b[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Wed May 29 16:56:09 2024 +0000

    feat: the non-unital star subalgebra generated by `id` is dense in `C(s, ùïú)‚ÇÄ` (#13326)
    
    This is a version of the Weierstrass approximation theorem for `C(s, ùïú)‚ÇÄ`, and is necessary for instances of the non-unital continuous functional calculus.
    
    Co-authored by: @adedecker
    
    - [ ] depends on: #13323

[33mcommit caa47a8a56dca32d0c137212873550464294cb0c[m
Author: damiano <adomani@gmail.com>
Date:   Wed May 29 15:57:18 2024 +0000

    fix: extend attributeInstanceIn linter to lint all global attributes declared with `in` (#13293)
    
    Extend the `AttributeInstanceIn` linter in two ways:
    - allow for a list of attributes and flag the ones that are not `scoped` or `local`
    - also lint any other attribute declared in an `attribute in` line which is neither `scoped` nor `local` (such as `ext` or `simp`).
    
    This uncovered a global `TensorProduct.ext` attribute in `Mathlib.LinearAlgebra.BilinearForm.TensorProduct`.
    It would have caught #7678 as well.
    
    See #13190, especially the final comments by [Eric](https://github.com/leanprover-community/mathlib4/pull/13190#discussion_r1615652567) and [Mauricio](https://github.com/leanprover-community/mathlib4/pull/13190#issuecomment-2133615950).
    
    ```lean
    theorem what : False := sorry
    
    attribute [simp] what in
    #guard true
    
    -- the `simp` attribute on `what` persists
    example : False := by simp  -- `simp` finds `what`
    
    theorem who {x y : Nat} : x = y := sorry
    
    attribute [ext] who in
    #guard true
    
    -- the `ext` attribute on `who` persists
    example {x y : Nat} : x = y := by ext
    ```
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>
    Co-authored-by: grunweg <rothgami@math.hu-berlin.de>
    Co-authored-by: Michael Rothgang <rothgami@math.hu-berlin.de>
    Co-authored-by: Mauricio Collares <mauricio@collares.org>

[33mcommit 593d80d9405824d804d78964c52097d81203811e[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Wed May 29 14:23:57 2024 +0000

    feat: add more features to `ContinuousMapZero` (#13323)
    
    This adds all the remaining material necessary for `ContinuousMapZero` to get the instances of the non-unital continuous functional calculus.
    
    Co-authored-by: @adedecker

[33mcommit ca20f78c34cf0498cd5d7c3c8179fc688ad5b556[m
Author: Ga√´tan Serr√© <gaetan.serre@ens-paris-saclay.fr>
Date:   Wed May 29 14:01:31 2024 +0000

    feat(MeasureTheory/Measure/WithDensity): removed finite assumption of withDensity_absolutelyContinuous (#13340)
    
    - Removed the finite assumption of `withDensity_absolutelyContinuous'`. Modified several files consequently.
    - Added `withDensity_ae_eq` stating that, for a given density `d` a.e. nonnegative, `f =·µê[Œº.withDensity d] g ‚Üî f =·µê[Œº] g`. The proof depends on the new version of `withDensity_absolutelyContinuous`.
    
    See #13285 for review history.

[33mcommit 1cdbcef17ae054469ceac2ec9f56f94a2678e142[m
Author: David Renshaw <dwrenshaw@gmail.com>
Date:   Wed May 29 12:52:36 2024 +0000

    chore: shorten a proof in MeasureTheory.Function.AEEqOfIntegral (#13334)
    
    Replaces 13 lines of proof with a single invocation of `Integrable.measure_le_lt_top`,
    making the proof speed up from 0.23 seconds to 0.12 seconds.
    
    Found by [tryAtEachStep](https://github.com/dwrensha/tryAtEachStep).

[33mcommit 5886715b50e6b475e88faef1cb32e080c850db26[m
Author: David Renshaw <dwrenshaw@gmail.com>
Date:   Wed May 29 12:30:35 2024 +0000

    chore: shorten proof of Setoid.mkClasses.iseqv.trans (#13335)
    
    Replaces 5 lines of tactic proof with a small direct term-mode proof.
    
    Found by [tryAtEachStep](https://github.com/dwrensha/tryAtEachStep).

[33mcommit b6cb80af68d53667dbbe8267f20ca075d5ffa953[m
Author: Chris Birkbeck <c.birkbeck@ucl.ac.uk>
Date:   Wed May 29 09:53:57 2024 +0000

    feat(Analysis/Calculus/FDeriv/Mul): Add DifferentiableAt.finset_prod (#13281)
    
    Add results saying that if a finite sequence of function is differentiable then so is their product.
    
    
    
    Co-authored-by: Chris Birkbeck <c.birkbeck@uea.ac.uk>

[33mcommit f400f9b2fb8b06a76550d5602f6ad24a79f38aae[m
Author: Andrew Yang <the.erd.one@gmail.com>
Date:   Wed May 29 09:23:56 2024 +0000

    chore(RingTheory/GradedAlgebra/HomogeneousLocalization) New simp lemmas (#13037)
    
    Also used the new simp lemmas to golf `AlgebraicGeometry/ProjectiveSpectrum/*`
    
    
    
    Co-authored-by: Andrew Yang <36414270+erdOne@users.noreply.github.com>

[33mcommit 2c877dccf823eae375e38bc836af839147d20ce8[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Wed May 29 08:34:00 2024 +0000

    chore: Move the `Field Rat` instance to a new file (#13268)
    
    ... to a new file `Algebra.Field.Rat`.

[33mcommit 97def1efc4c6d33d883b9b9d42fc71ff102dcacb[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Wed May 29 08:33:58 2024 +0000

    feat: Product of Freiman homs (#13073)
    
    Prove that the product of two Freiman homomorphisms/isomorphisms is a Freiman homomorphism/isomorphism.

[33mcommit b070c031adb2a9c5f36e6247051770b7c1b44e8b[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Wed May 29 07:37:54 2024 +0000

    chore: verify import hygiene for some Algebra.Group files (#13253)

[33mcommit 1024fc50e1af1ab233de987066d8434bed7dd46c[m
Author: Fr√©d√©ric Dupuis <dupuisf@iro.umontreal.ca>
Date:   Wed May 29 01:19:28 2024 +0000

    feat: a self-adjoint element of a C*-algebra is upper bounded by the algebra map of its norm (#13296)
    
    This PR shows that `a ‚â§ algebraMap ‚Ñù A ‚Äña‚Äñ` for a self-adjoint element `a : A` of a C*-algebra.
    
    
    
    Co-authored-by: Fr√©d√©ric Dupuis <31101893+dupuisf@users.noreply.github.com>

[33mcommit 0233a043cf337454df7c6d198d06d438c2a19de4[m
Author: Sam Ezeh <sam.z.ezeh@gmail.com>
Date:   Wed May 29 00:19:50 2024 +0000

    fix: resolve infinite loop in tauto tactic (#11799)
    
    Resolves #10590
    
    
    
    Co-authored-by: David Renshaw <dwrenshaw@gmail.com>

[33mcommit db4608b8678d9f20491044f16c1ded758ca6be06[m
Author: Pol'tta / Miyahara K≈ç <pol_tta@outlook.jp>
Date:   Tue May 28 23:23:23 2024 +0000

    fix(Mathlib/Tactic/IrreducibleDef): `irreducible_def` incorrectly jump-to-definition (#12723)
    
    ```lean
    import Mathlib.Tactic.Common
    
    irreducible_def foo := 1
    
    #check foo_def
    ```
    If you jump to the definition of `foo_def`, you go to the top of the file, not declaration foo.

[33mcommit 446b5452d66de398d15a8efd40142ae835177a36[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Tue May 28 21:36:03 2024 +0000

    feat: RingCon R is Nontrivial if R is (#13325)

[33mcommit a5d4841556d0e1fe2aef429f509008a6d5425815[m
Author: Paul Reichert <preichert@noreply.codeberg.org>
Date:   Tue May 28 21:18:25 2024 +0000

    feat: target of final functor is connected iff source is connected (#10975)
    
    This PR is part of the effort to prove the Freyd-Mitchell embedding theorem.

[33mcommit 6847444364f7da9d8a36bff7f4c91a24496363b9[m
Author: Andrew Yang <the.erd.one@gmail.com>
Date:   Tue May 28 20:40:47 2024 +0000

    chore(CategoryTheory/Limits/Preserves): Fix typo (#13321)
    
    
    
    Co-authored-by: Andrew Yang <36414270+erdOne@users.noreply.github.com>

[33mcommit 1d666fdac8ac280e95532f9d626ee3a06697fe66[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Tue May 28 19:50:49 2024 +0000

    chore: Do not import `LinearOrderedField` in `Algebra.Module.Defs` (#13274)
    
    The single `abel` call in `Algebra.Module.Defs` meant that the definition of `Module` imported `norm_num`, which imports `LinearOrderedField` to represent numerals. Dumb down the proof to a `rw` call.
    
    Combined with #13305, `Algebra.Module.Defs` goes from 661 dependencies to 523.

[33mcommit de3c257cb5e4e20f7c236a23838040542e12d65c[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Tue May 28 19:29:59 2024 +0000

    feat: morphisms of presheaves that are locally injective for a Grothendieck topology (#11719)
    
    This PR creates the file `CategoryTheory.Sites.LocallyInjective` which develops the basic API of locally injective morphisms of presheaves. The file `CategoryTheory.Sites.Surjective` is renamed `CategoryTheory.Sites.LocallySurjective` and shall be expanded in a future PR.
    
    Co-authored-by: Andrew Yang
    
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit 2898d21c27ea7afea1f69104e3099c7de2e526c6[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Tue May 28 19:09:24 2024 +0000

    feat(CategoryTheory/Sites/LeftExact): weaken universe assumptions (#13320)
    
    In this PR, the assumptions are slightly weakened in order to show that categories of sheaves are balanced: we use the `HasSheafify` assumption when applicable.

[33mcommit 803d28ff02e477ebf9033b3f40dfc7aedc17a2cb[m
Author: Antoine Chambert-Loir <antoine.chambert-loir@u-paris.fr>
Date:   Tue May 28 17:51:32 2024 +0000

    Feat (GroupTheory/GroupAction/Blocks) : blocks for a mul action (#12049)
    
    This PR defines the notion of a block for a mul action and establishes various basic lemmas,
    as well as alternative versions of the definition.
    
    Blocks are used to define primitive actions, which appear as an hypothesis of the Iwasawa criterion for simplicity.
    
    
    
    Co-authored-by: Johan Commelin <johan@commelin.net>

[33mcommit 3185f99d2f17b5b2d8448f8c41fe5afd44684d2d[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Tue May 28 16:14:45 2024 +0000

    chore: Do not import order theory in `Data.Int.Cast.Lemmas` (#13305)
    
    Split off the lemmas about `OrderedRing` from `Data.Int.Cast.Lemmas` to a new file `Algebra.Order.Ring.Cast`.

[33mcommit cec4919a4207fd2adfaaadf6e54d2136f013a1f7[m
Author: Kim Morrison <kim@tqft.net>
Date:   Tue May 28 15:30:35 2024 +0000

    feat: oplax monoidal functors take comonoids to comonoids (#12858)
    
    - [x] depends on: #12856
    - [x] depends on: #10098
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>
    Co-authored-by: Scott Morrison <scott@tqft.net>

[33mcommit 161b841222d74556a1dee067b4b5029bc3000bf4[m
Author: Johan Commelin <johan@commelin.net>
Date:   Tue May 28 14:16:40 2024 +0000

    feat(Algebra/Lie/Semisimple): API for semisimple Lie algebras (#13217)
    
    Including the result that ideals in a semisimple Lie algebra
    are in a unique way the direct sum of simple ideals.
    This result makes no assumptions on the ring of coefficients or the Lie algebra;
    it holds over arbitrary base rings, and in arbitrary dimensions.

[33mcommit 5e475e242daf4d5d1037a8b9e0fdd74b8b7c45d4[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue May 28 14:16:38 2024 +0000

    feat(MeasureTheory): generalize `ae` to `OuterMeasureClass` (#13022)
    
    - Move definition and some lemmas from `MeasureSpaceDef` to `OuterMeasure.AE`.
    - Rename `MeasureTheory.Measure.ae` to `MeasureTheory.ae`.
    - Generalize the definition and theorems to `[OuterMeasureClass _ _]`.
    
    See also https://leanprover.zulipchat.com/#narrow/stream/113489-new-members/topic/.22Almost.20every.22.20on.20outer.20measures and https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Order.20on.20measures/near/425729507

[33mcommit 53138857386008521a8dd5a2284df8fb550fb814[m
Author: Andrew Yang <the.erd.one@gmail.com>
Date:   Tue May 28 13:39:25 2024 +0000

    feat(Algebra/Lie/Weights): The root system of a lie algebra. (#13307)
    
    
    
    
    Co-authored-by: Andrew Yang <36414270+erdOne@users.noreply.github.com>

[33mcommit e41826d62ad0d0452157c5af2589cd7eb261f244[m
Author: Mitchell Lee <trivial171@gmail.com>
Date:   Tue May 28 13:39:24 2024 +0000

    feat: index Chebyshev polynomials by integers instead of natural numbers (#13133)

[33mcommit f389222e398755975b2ca2efffcb4dbd193fd22f[m
Author: Chris Birkbeck <c.birkbeck@ucl.ac.uk>
Date:   Tue May 28 13:39:23 2024 +0000

    Add(NumberTheory/ModularForms/Identities): periods of modular forms. (#12601)
    
    Add some basic results about `ModularGroup.T` relating to slash invariant forms of level Gamma(N) and moving elements into verticalStrips. Needed for #12456
    
    
    
    Co-authored-by: Chris Birkbeck <c.birkbeck@uea.ac.uk>

[33mcommit 8d633f3969fa2c9b573e274ebb0f4586765f62e0[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Tue May 28 13:06:59 2024 +0000

    feat(Topology): a profinite space has countably many clopens iff it is second countable (#12986)

[33mcommit e0685aa866de62f73dbe0fd9780047062b94b5e2[m
Author: Lorenzo Luccioli <lorenzoluccioli@gmail.com>
Date:   Tue May 28 12:13:09 2024 +0000

    feat: add mul_iff right and mul_iff_left for (AE)(Strongly)Measurable (#12711)
    
    Add the lemma that says that if `f` is measurable, then `f+g` is measurable iff `g` is measurable. Then add the same but with `g+f`, and the same lemmas about AEMeasurable, StronglyMeasurable and AEStronglyMeasurable.
    
    
    
    Co-authored-by: Lorenzo Luccioli <71074618+LorenzoLuccioli@users.noreply.github.com>

[33mcommit 87543dce61a2595d9ed80167e6ccccd33324ab9d[m
Author: Michael Stoll <Michael.Stoll@uni-bayreuth.de>
Date:   Tue May 28 11:56:32 2024 +0000

    feat(RingTheory/RootsOfUnity): product representation of the order of a primitive root of unity (#13290)
    
    This
    * weakens the assumptions in [X_pow_sub_C_eq_prod](https://leanprover-community.github.io/mathlib4_docs/Mathlib/FieldTheory/KummerExtension.html#X_pow_sub_C_eq_prod) on the coefficient ring from "field" to "integral domain", and
    * adds results on representing the order `n` of a primitive root of unity `Œº` in `R` as a product involving terms like `Œº^k - 1`. (In a new file `RingTheory.RootsOfUnity.Lemmas` because of fairly heavy imports.)
    
    This will  be useful for results on Jacobi sums (to be added eventually).
    
    
    
    Co-authored-by: Michael Stoll <99838730+MichaelStollBayreuth@users.noreply.github.com>

[33mcommit cca6d7a961ec919287f0a74ea0acd86cdd1fed08[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Tue May 28 11:56:31 2024 +0000

    feat: No wrap-around principle for 3APs (#12551)
    
    Prove that `{0, ..., k - 1} ‚äÜ ‚Ñ§/(n + 1)‚Ñ§` and `{0, ..., k - 1} ‚äÜ ‚Ñï` are `m`-Freiman isomorphic if `m * k ‚â§ n`

[33mcommit 3930ce22ac6c8e248fd51e983dc71daa30d696ab[m
Author: Kim Morrison <kim@tqft.net>
Date:   Tue May 28 11:04:27 2024 +0000

    chore: bump dependencies (#13303)

[33mcommit 2ce120c457c9310b8ea863bddbfb711a337217a8[m
Author: Kevin Buzzard <k.buzzard@imperial.ac.uk>
Date:   Tue May 28 11:04:26 2024 +0000

    feat: add API for finite adele rings (#13021)
    
    Let R be a Dedekind domain with field of fractions K. This PR does two things:
    
    1) makes the finite adeles of K/R into a K-algebra
    
    2) turns `finiteAdeleRing` into a type rather than a subring (because it's most definitely an important object of study in its own right, e.g. it needs a topology, and I don't want to end up in the same kind of hell that we had with rings of integers before they were a type).
    
    Note that this is a leaf file which I intend to develop a fair bit more in the near future.

[33mcommit 40905830a98f0500f7913aece7d981fd5ac85fc1[m
Author: Andrew Yang <the.erd.one@gmail.com>
Date:   Tue May 28 10:02:35 2024 +0000

    feat(Algebra/Lie/Weights): `n` such that `n ‚Ä¢ Œ± + Œ≤` is a weight is consecutive. (#13298)
    
    
    
    
    Co-authored-by: Andrew Yang <36414270+erdOne@users.noreply.github.com>

[33mcommit f82f8506da4f111a629656eb7ad5453fc1a60795[m
Author: Pol'tta / Miyahara K≈ç <pol_tta@outlook.jp>
Date:   Tue May 28 10:02:34 2024 +0000

    chore: remove `open (scoped)? BigOperators` lines (#13181)
    
    
    
    Co-authored-by: Pol'tta / Miyahara K≈ç <52843868+Komyyy@users.noreply.github.com>

[33mcommit 826a3e67f2ef872d6ecba1fe1a9b09268c675ec4[m
Author: Sina Hazratpour <sinahazratpour@gmail.com>
Date:   Tue May 28 09:02:59 2024 +0000

    feat: The finset `{a, b}` has card one or two (#13302)

[33mcommit 0b1d5ead280c608d17b9da59a4a53558d284a4ca[m
Author: Kim Morrison <kim@tqft.net>
Date:   Tue May 28 09:02:58 2024 +0000

    chore: apply release-ci tag on lean-pr-testing failures (#13301)
    
    We've changed the CI setup at the lean4 repository. This ensures that a toolchain is built for all OSs if Mathlib testing fails, so that humans can then investigate what's happening on the lean-pr-testing-NNNN branch.

[33mcommit fa6b10b521688025a02d1c4917e02b21fc19d478[m
Author: Filippo A. E. Nuccio <filippo.nuccio@univ-st-etienne.fr>
Date:   Tue May 28 09:02:56 2024 +0000

    doc(Mathlib/Topology/ExtremallyDisconnected): remove one extra bracket (#13300)
    
    Remove one extra curly bracket from the doc that is causing a compilation error on the online doc.

[33mcommit 5ddf48f5bc7e59fb2e4857ccfd27ca5321045a4e[m
Author: David Kurniadi Angdinata <dka31@cantab.ac.uk>
Date:   Tue May 28 09:02:55 2024 +0000

    feat(AlgebraicGeometry/EllipticCurve/Jacobian): add API for equations and nonsingularity (#13060)

[33mcommit 3a8f0cef2aa04cdaaeedec2854d86cbce30ae5f9[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Tue May 28 09:02:54 2024 +0000

    feat: Fourier transform as a continuous linear equiv on Schwartz space (#12144)
    
    We define the Fourier transform on the Schwartz space, as a continuous linear equivalence. First, we define it as a continuous linear map (which amounts to showing that the Fourier transform of a Schwartz function is smooth, with explicit bounds for the successive derivatives in terms of various Schwartz seminorms). Then, we extend it to a continuous linear equivalence thanks to Fourier inversion.

[33mcommit 263eee7813f98556e761115a887d93932dd5131c[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue May 28 08:12:22 2024 +0000

    refactor: explicit args in `Finset.cons_induction` etc (#13295)
    
    This way we don't need `@cons` in `induction` calls.

[33mcommit 5239893b7b2ddd7281a2b4c86f3b5a8012097e2f[m
Author: Pol'tta / Miyahara K≈ç <pol_tta@outlook.jp>
Date:   Tue May 28 08:12:20 2024 +0000

    chore(Mathlib/Algebra/BigOperators/Basic): unscope `‚àë x ‚àà s, f x` notations (#13271)
    
    https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Unscoping.20big.20operators

[33mcommit 685be109e502f1d65a4693a312b3c24aa020a2cc[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Tue May 28 07:17:46 2024 +0000

    chore: Do not import `MulAction` in `Data.Multiset.Bind` (#13289)
    
    The import can easily be postponed by quite a bit.

[33mcommit 3e7433cb13d2907b7b37d48c28056c1d1bb1f0de[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Tue May 28 07:17:45 2024 +0000

    chore: Rename more `coe_nat`/`coe_int` to `natCast`/`intCast` (#13205)

[33mcommit c51c042ab54933e4459cfe2b095ad4cc9d498608[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Tue May 28 07:17:44 2024 +0000

    chore: Remove (some) algebraic dependencies to `Data.Nat.Interval` (#13003)
    
    and move `Data.Nat.Interval`/`Data.Fin.Interval` to `Order.Interval.Finset.Nat`/`Order.Interval.Finset.Fin`.

[33mcommit 3954e68b68d6e58a70d187e705e4058ec31a5705[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Tue May 28 06:31:01 2024 +0000

    chore: Do not import `Module` in `SetTheory.Cardinal.Basic` (#13288)
    
    Move the one result that uses wild dependency to a new file `Algebra.Module.Card`. Credit S√©bastien for #6351.

[33mcommit f72fa8b45d156b7f95476db626291861093ff0b2[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue May 28 05:42:10 2024 +0000

    feat(LpSpace): `indicatorConstLp` is injective in set (#10314)

[33mcommit aba5b6ad05128b28b16f64b2a0a939cd5ecf692d[m
Author: Chris Birkbeck <c.birkbeck@ucl.ac.uk>
Date:   Tue May 28 00:44:15 2024 +0000

    feat(Topology/Algebra/InfiniteSum/Order): Add tprod_subtype_le (#12600)
    
    We add a lemma that says the tprod/tsum over a subtype is less than the full sum. Needed for #12456

[33mcommit 7906a8a3488af5112e84d792d0d394b6c49026f0[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon May 27 23:36:54 2024 +0000

    chore(Finset): rename assumption in `Finset.Nonempty.cons_induction` (#13053)

[33mcommit 355adc344a5eaf30558cc45d00d3c65eda2ea8d2[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon May 27 23:23:06 2024 +0000

    chore(ContinuousMapDense): reformulate using `Dense` (#13251)
    
    - reformulate `boundedContinuousFunction_dense` using `Dense`
    - restore the old version as `boundedContinuousFunction_topologicalClosure`

[33mcommit 867edaa718c576cedcfbc8b48babf50138016ecc[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Mon May 27 21:25:25 2024 +0000

    feat: compactness of the quasispectrum (#13284)

[33mcommit 46a17309e0cd3c90536da4d122b52e0e4ef1ae5d[m
Author: Alex Meiburg <alex.meiburg@gmail.com>
Date:   Mon May 27 20:43:42 2024 +0000

    add pi-type AffineMaps (#10147)
    
    This adds AffineMap.pi, and some related extensionality lemmas.
    
    
    
    Co-authored-by: Alex Meiburg <timeroot.alex@gmail.com>
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit b32641fde19a49e446d54db9040c63cb9473d276[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon May 27 18:18:58 2024 +0000

    chore(AdjMatrix): generalize a lemma (#12867)
    
    Slightly generalize `dotProduct_mulVec_adjMatrix`.
    The old version is `G.dotProduct_mulVec_adjMatrix vec vec`.

[33mcommit f1fd937bfe0ff8fbf010dbf48d63596030222f0e[m
Author: Andrew Yang <the.erd.one@gmail.com>
Date:   Mon May 27 17:25:23 2024 +0000

    feat(Algebra/Lie/Weights/Chain): More API for chains. (#13258)
    
    
    
    Co-authored-by: Andrew Yang <36414270+erdOne@users.noreply.github.com>

[33mcommit 9b9b4af45ddc77d132f73d571687a6d9d112b8d2[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon May 27 17:25:22 2024 +0000

    chore(LinearAlgebra): fix `Decidable`, `Fintype`/`Finite` (#13226)

[33mcommit 947168e056d09ecee8dc77ea14fc4eb9f7a7f29f[m
Author: Andrew Yang <the.erd.one@gmail.com>
Date:   Mon May 27 16:40:08 2024 +0000

    feat(Algebra/Lie/*): Add `Zero` and `Neg` instances for weights. (#13261)

[33mcommit 1bc0ae3de222be5c5d20098318cc88119f316b41[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon May 27 14:30:54 2024 +0000

    chore: add `induction_eliminator, cases_eliminator` to `WithTop` etc (#13264)
    
    Add `@[elab_as_elim, induction_eliminator, cases_eliminator]` to
    
    - `WithOne.recOneCoe` (added `cases_eliminator`)
    - `WithZero.recZeroCoe` (added `cases_eliminator`)
    - `ENNReal.recTopCoe`
    - `ENat.recTopCoe`
    - `EReal.rec`
    
    Mostly cherry-picked from #12605
    
    Co-authored-by: @negiizhao

[33mcommit c1c0e822faaee1d6baae875e6d08e439928df75c[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Mon May 27 14:30:53 2024 +0000

    feat(Probability): add `indepFun_of_identDistrib_pair ` (#13125)
    
    This PR adds the lemma claiming that if `X` and `Y` are independent and `(X, Y)` and `(X', Y')` are identically distributed, then `X'` and `Y'` are independent.
    
    See the associated [Zulip topic](https://leanprover.zulipchat.com/#narrow/stream/217875-Is-there-code-for-X.3F/topic/.60IndepFun.60.20of.20.60IdentDistrib.60.20pairs).

[33mcommit 39dd4f3322d9631db5135115ce64d25b8d989034[m
Author: Amelia Livingston <101damnations@github.com>
Date:   Mon May 27 14:30:52 2024 +0000

    feat: category of coalgebras (#11972)
    
    The category of coalgebras over a commutative ring. Mimics `Mathlib.LinearAlgebra.QuadraticForm.QuadraticModuleCat`.
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 3efcf49533ba18600902111428345b410a56523f[m
Author: Chris Birkbeck <c.birkbeck@ucl.ac.uk>
Date:   Mon May 27 14:30:51 2024 +0000

    Eisenstein series are  mdifferentiable (#11013)
    
    We show that Eisenstein Series are MDifferentiable
    
    - [x] depends on: #10377
    - [x] depends on:  #11244
    
    
    
    Co-authored-by: Chris Birkbeck <c.birkbeck@uea.ac.uk>

[33mcommit a32c8957ace84c4809272ea8ebafb49abbc8f382[m
Author: Christopher Hoskin <christopher.hoskin@gmail.com>
Date:   Mon May 27 14:05:29 2024 +0000

    doc(Algebra/Star/StarAlgHom): Fix StarAlgHom equivalence relation docstrings (#13266)
    
    `StarAlgHom` equivalence relation docstrings to match the `RingEquiv` ones.

[33mcommit 06ba8d8abd61466103afbedc77b1b494dc0d08a4[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Mon May 27 12:42:23 2024 +0000

    chore: Split `Algebra.Function.Support`/`Algebra.Function.Indicator` (#13244)
    
    ... in a file about `Group` and another one about `GroupWithZero`. Credit Yury for https://github.com/leanprover-community/mathlib/pull/2340 and Zhouhang for https://github.com/leanprover-community/mathlib/pull/1949.

[33mcommit 96028947896fa84f7e2f0e6b41caf33f5a18fa2b[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Mon May 27 11:22:52 2024 +0000

    feat: Fourier transform of iterated derivatives (#12769)
    
    We show that the Fourier transform of an iterated derivative is the Fourier transform of the original function multiplied by a power function. We deduce bounds on `‚Äñw‚Äñ ^ n * ‚ÄñiteratedFDeriv ‚Ñù k (ùìï f) w‚Äñ` in terms of integrals of iterated derivatives of `f` (up to order `n`) multiplied by power functions (up to order `k`).

[33mcommit c6984f24a56ad399faab258a6fb7ae06a19332fb[m
Author: Ralf Stephan <ralf@ark.in-berlin.de>
Date:   Mon May 27 10:29:25 2024 +0000

    feat(NumberTheory/SmoothNumbers): multiplicativity (#13115)
    
    Prove that the product of two `n`-smooth numbers is an `n`-smooth number. Uses two helper lemmas.
    
    
    
    Co-authored-by: Rida Hamadani <106540880+Rida-Hamadani@users.noreply.github.com>
    Co-authored-by: Michael Stoll <Michael.Stoll@uni-bayreuth.de>

[33mcommit 85ea1f2bb58bf0a692cf22ccd3ca3fa0765c964a[m
Author: Pol'tta / Miyahara K≈ç <pol_tta@outlook.jp>
Date:   Mon May 27 10:06:40 2024 +0000

    style: change the notation for `CategoryTheory.Limits.piObj` from `‚àè f` to `‚àè·∂ú f` (#13269)
    
    This notation is conflicting with `‚àè x ‚àà s, f x`.

[33mcommit 6524156da42776da71d19036a90ad04e4bb3f37e[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Mon May 27 08:32:45 2024 +0000

    chore: Use the new `‚àë i ‚àà s, f i` notation (#13209)
    
    Replace `‚àë i in s, f i`/`‚àè i in s, f i` by `‚àë i ‚àà s, f i`/`‚àè i ‚àà s, f i` everywhere. The former is deprecated notation that will be removed in a few months.
    
    
    
    
    Co-authored-by: Johan Commelin <johan@commelin.net>

[33mcommit a5f752732b1765fb770fb10c1988725041193bcc[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Mon May 27 07:37:50 2024 +0000

    chore: Do not import algebra in `Data.Vector` (#13242)
    
    ... and rename `Data.Vector` to `Data.Vector.Defs`.

[33mcommit b0eb4bbc7ec80e6be10133c9be693245d3461d26[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Mon May 27 07:04:34 2024 +0000

    refactor(Topology/Constructions): prod_generateFrom_generateFrom_eq (#13239)
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit 389c0ea5afd1d09d4ce529f72de586d716edf903[m
Author: Anatole Dedecker <anatolededecker@gmail.com>
Date:   Mon May 27 07:04:33 2024 +0000

    feat: uniform structure on ContinuousMapZero (#12992)
    
    Also a bit of reorganization around the whole (short) file. This will be used for constructing non-unital functional calculi.
    
    Co-authored-by: @j-loreaux

[33mcommit 600c344dac54d7d29aaebc61d8eaf25ac41bd523[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Mon May 27 06:08:20 2024 +0000

    chore: mv principal_subtype (#13232)
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit ccff3f2ec615417475fb4f804f8e808d5034eed1[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Mon May 27 06:08:19 2024 +0000

    chore: split Algebra.Group.ULift (#13224)

[33mcommit 5902b54fd1642fd6eee9a2812e00151757443b27[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Mon May 27 06:08:18 2024 +0000

    chore: remove sed-based hashCommand linter (#13142)
    
    The linter was rewritten in Lean in #11019. This removes one separate workflow step.

[33mcommit c10a24df4ad2ea139a54b12576334b90d3c470c3[m
Author: David Loeffler <d.loeffler.01@cantab.net>
Date:   Mon May 27 06:08:17 2024 +0000

    feat (NumberTheory/LSeries): Hurwitz zeta (#12897)
    
    Add the Hurwitz zeta function (defined as the sum of its even and odd parts, which were already defined in previous PR's).

[33mcommit ae43e7f0dda4b24139e98b5033268fa1d7b09374[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Mon May 27 05:12:19 2024 +0000

    refactor(Algebra/Polynomial/Laurent): use Int.ofNat.inj (#12426)
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>
    Co-authored-by: Yury G. Kudryashov <urkud@urkud.name>

[33mcommit 55e0f3e6532a67f850a314c3ded5cb67812dc44f[m
Author: Andrew Yang <the.erd.one@gmail.com>
Date:   Mon May 27 04:51:58 2024 +0000

    feat(Algebra/Lie/Sl2): Two lemmas for the action of sl2 triples. (#13259)

[33mcommit c40fb9ab4ab4893c5b78d5181146c53a39134622[m
Author: Andrew Yang <the.erd.one@gmail.com>
Date:   Mon May 27 04:38:15 2024 +0000

    feat(Algebra/Lie/Weights/Cartan): `toEnd_pow_apply_mem` (#13260)

[33mcommit 036b0a727ef866f1cd1a2188f8c748d43c399d50[m
Author: Pol'tta / Miyahara K≈ç <pol_tta@outlook.jp>
Date:   Mon May 27 01:21:44 2024 +0000

    feat: new lemma `Option.bind_congr` (#13246)
    
    ```lean
    theorem bind_congr {f g : Œ± ‚Üí Option Œ≤} {x : Option Œ±}
        (h : ‚àÄ a ‚àà x, f a = g a) : x.bind f = x.bind g
    
    @[congr]
    theorem bind_congr' {f g : Œ± ‚Üí Option Œ≤} {x y : Option Œ±} (hx : x = y)
        (hf : ‚àÄ a ‚àà y, f a = g a) : x.bind f = y.bind g :=
    ```

[33mcommit 2186482a0ed1883856802a46731ce1f9e704f9a8[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Sun May 26 22:22:01 2024 +0000

    chore: remove remaining stream-of-conciousness obtain syntax (#13219)
    
    Concludes the work started in (TTBOMK) #11045 and #12850.
    To make sure this is exhaustive, I wrote a syntax linter for this, which I will propose separately.
    
    This uncovered some interesting interactions with the multi-goal linter:
    in a few instances, about using the newer syntax, the sub-goal focusing also became obsolete.

[33mcommit ff2aac4e9ecbc54f1bef538fe68e3038a29afd17[m
Author: Matthew Robert Ballard <matt@mrb.email>
Date:   Sun May 26 21:01:33 2024 +0000

    chore (Ideal.QuotientOperations): clean up `@f` using `f (x := y)` and remove some porting notes (#13252)
    
    Condensing syntax for providing implicits explicitly.

[33mcommit cee9bb228f9c2c06059e2360e03849b17d3cae81[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Sun May 26 19:45:05 2024 +0000

    feat: norm structure on `WithLp 1 (Unitization ùïú A)` (#12582)
    
    `Unitization ùïú A` is equipped with a norm when `A` is a `RegularNormedAlgebra`, and it turns out that norm is minimal among all norms for which the natural coercion from `A` is an isometry and which satisfy `‚Äñ1‚Äñ = 1`.
    
    There is also a maximal norm, given by `‚Äñx‚Äñ := ‚Äñx.fst‚Äñ + ‚Äñx.snd‚Äñ`, and this norm also makes sense even when `A` is not a `RegularNormedAlgebra`. We place this norm on the type synonym `WithLp 1 (Unitization ùïú A)`.

[33mcommit 60e52815a2878569634e18b2e5ff908021c4f77a[m
Author: Bolton Bailey <bolton.bailey@gmail.com>
Date:   Sun May 26 19:02:18 2024 +0000

    chore: TODOs in `Data` (#13227)
    
    Handles TODOs in the TLD of `Mathlib/Data`. Some finished ones are removed, and some others are put at the top of the file, so that they can be better seen in potential future good-first-issue issues that reference these.
    
    * Removes TODO about `FinMap.all` returning `false` for empty `FinMap`s, since it should and does return `true`.
    * Moved comment about syntax of `Rel.comp` to module docstring.
    * Removed TODO comment about `Rel.image` definition with bounded quantification in corelib, since it is now defined that way, and the commented lemma can indeed now be proven with `rfl`, (not so for `preimage`, but I believe the existing definition in terms of `image` has advantages)
    * Moved TODO about `Traversible` for Trees to top of file.

[33mcommit f136a3c7884b534e58d526e6c329a4f9d4136f92[m
Author: Pol'tta / Miyahara K≈ç <pol_tta@outlook.jp>
Date:   Sun May 26 18:16:19 2024 +0000

    feat(Mathlib/Tactic/Positivity/Basic): positivity extension for `‚Ñï+`(`PNat`) (#13229)
    
    The positivity extention to prove the positivity of `‚Ñï+`(`PNat`):
    ```lean
    example (n : ‚Ñï+) : 0 < (‚Üën : ‚Ñï) := by positivity
    ```

[33mcommit 03f9995df7675d66caf96037c35a7ce785d12726[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Sun May 26 17:19:51 2024 +0000

    chore: verify import hygiene for some Algebra.Group files (#13222)

[33mcommit fd3fee643811b176664c0c3712de3d34e891bb0b[m
Author: Anatole Dedecker <anatolededecker@gmail.com>
Date:   Sun May 26 16:34:26 2024 +0000

    chore: redefine Filter.curry in terms of Filter.bind (#13044)
    
    This is not super helpful in itself, but I think 1) it makes the definition a bit more natural and 2) it can probably help to make some proofs more efficient and intuitive here and there.

[33mcommit c7256b5b1adb81c6507b714bd2140ec3bcd48612[m
Author: Anatole Dedecker <anatolededecker@gmail.com>
Date:   Sun May 26 15:54:00 2024 +0000

    feat: exhibit lower adjoint for smallSets, use it to prove a better comap_smallSets (#12111)
    
    And use the new version to hide `Filter.lift'` where `comap_smallSets` was used.
    
    I was writing an exercise about `Filter.smallSets` and noticed we didn't have this in Mathlib. So of course I had to formalize it to check, and I think it makes the API nicer.

[33mcommit f248170a1be6ba165136a784f543e15bdc2c37a1[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Sun May 26 15:17:24 2024 +0000

    chore: adding missing copyright years (#13247)
    
    Five copyright headers were missing a year: add this - so the new style linter can enforce this rule.

[33mcommit 30e2898196709b8402cceb56018d87a71b79b00f[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Sun May 26 15:17:23 2024 +0000

    chore: rename `projective_iff_extremallyDisconnnected` (#13237)
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit 7bae876030c5c1306f6969705b23e7d6014d3bbe[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Sun May 26 15:17:22 2024 +0000

    feat: Code snippet for deprecated aliases (#13206)
    
    Define a code snippet `deprecated alias` for `@[deprecated (since := "current date")] alias  := `.

[33mcommit 2549439e18e5bdffe2100d275adf7fd5f3891274[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Sun May 26 15:17:21 2024 +0000

    feat(CategoryTheory/Localization): left resolutions for localizer morphisms (#12631)
    
    The left resolutions of a localizer morphism are defined, and it is shown that this is the dual notion to that of right resolutions for the opposite localizer morphism.

[33mcommit 84e22426cba4bc5c52f8a3bae0792a1fe543e3aa[m
Author: Patrick Massot <patrickmassot@free.fr>
Date:   Sun May 26 14:25:58 2024 +0000

    feat: the largest T2 quotient of a topological space. (#13061)

[33mcommit c0c255185d478cfab40c1a7ccc3d28c6b7a2833f[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Sun May 26 13:31:26 2024 +0000

    chore: typos in doc strings (#13236)
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit 6811a06db8ec9de78e31aae2a0867b4199f7beb1[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Sun May 26 13:31:25 2024 +0000

    feat: lint `attribute [instance] instName in` (#13190)
    
    Contrary to what users would expect, this defines a global instance.
    
    This linter would have caught #13144 and #13170.
    [Zulip discussion](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/ConcreteCategory.2EinstFunLike.20became.20a.20.20global.20instance)
    
    Co-authored by: @adomani

[33mcommit 3b8f43ce3704e3e466a2b20c306773b3da98a8fa[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Sun May 26 13:31:24 2024 +0000

    chore(Analysis): use since syntax for deprecation dates (#13188)

[33mcommit 16a1db9ee47307188e9f8f4640addd8103ccda4c[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Sun May 26 12:33:42 2024 +0000

    fix: align Set.empty_def with mathlib3 (#13218)
    
    During the port, a coercion to type slipped in where there was none in mathlib3.

[33mcommit 3d14008a33867afec286a40dd3e124db224a0a63[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Sun May 26 11:25:27 2024 +0000

    feat: More ways of bijecting finsets (#12653)
    
    It is still annoyingly painful to prove that two finsets have equal size by exhibiting a bijection between. This PR remedies this problem by copying over the lemmas that show that two finite sums/products are in bijection. Copy over the names. As a result, rename `Finset.card_congr` to `Finset.card_bij`.

[33mcommit d9448c34dafa501e329bb0afe84b612268a4396d[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sun May 26 11:13:54 2024 +0000

    chore(Sheaves/Skyscraper): drop a `Decidable` assumption (#13225)

[33mcommit 20863d9831de5bd7e866bab13ec576faed0da995[m
Author: Pol'tta / Miyahara K≈ç <pol_tta@outlook.jp>
Date:   Sun May 26 11:13:53 2024 +0000

    feat(Mathlib/Data/Fintype/Quotient): `Trunc` version of `Quotient.finChoice` (#13025)
    
    
    
    Co-authored-by: Pol'tta / Miyahara K≈ç <52843868+Komyyy@users.noreply.github.com>

[33mcommit 540d03232eb9f44af7799fd60367786e5ec03a0b[m[33m ([m[1;31morigin/Jun2M/MainTheoremPolytope1[m[33m)[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Sun May 26 10:01:59 2024 +0000

    chore(Geometry): replace all remaining uses of refine', when possible (#13234)

[33mcommit b6a73af0e8570d2413ef845ee27177cb5a783055[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sun May 26 08:52:47 2024 +0000

    chore(MeasureTheory): drop `autoImplicit true` (#13231)

[33mcommit eaad32c2e100c2cb28409c92378bc92a6e29225d[m
Author: damiano <adomani@gmail.com>
Date:   Sun May 26 08:36:36 2024 +0000

    feat: add `creator` to `new-contributor` (#13238)
    
    Add the name of the "creator" of the PR.  This may help figure out wrong labelings.

[33mcommit f3612d5fb5c08d1a1a2e6a4dc97800f2876c9d93[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Sun May 26 06:15:05 2024 +0000

    chore(Algebra): add missing deprecation dates (#12598)

[33mcommit 2aca580b3c522b378a17f0ea31fbb1ea7d59f4b0[m
Author: Pol'tta / Miyahara K≈ç <pol_tta@outlook.jp>
Date:   Sun May 26 03:16:21 2024 +0000

    feat: `List.iterate` (#13214)
    
    This PR add an new function for list: `List.iterate`. `iterate f a n` is `[a, f a, ..., f^[n - 1] a]`.
    
    The name matches Haskell's [`iterate`](https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-List.html#v:iterate)

[33mcommit 146883dfe71e2ff2680d2220f3bbba99449386bf[m
Author: L <hi@llllvvuu.dev>
Date:   Sat May 25 23:26:01 2024 +0000

    feat: `Finset.prod_Icc_succ_top` (#13187)
    
    Variant of `prod_Ioc_succ_top` and `prod_Ico_succ_top`.
    
    
    
    
    Co-authored-by: L Lllvvuu <git@llllvvuu.dev>

[33mcommit a0525a8513f687b1cfb7572f48bd1adee0519635[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sat May 25 22:47:18 2024 +0000

    feat(Order/Filter): add `frequently_inf_principal` (#13216)

[33mcommit 719f50bb61259771cef4df10f418138ad472998d[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Sat May 25 21:40:02 2024 +0000

    chore(MeasureTheory): use since syntax for deprecation dates (#13185)
    
    This is not exhaustive, but covers ~100 declarations.

[33mcommit 613935036cf98db02383e42e5372752686824f90[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Sat May 25 20:06:29 2024 +0000

    RFC: normalise copyright headers (#13212)
    
    Re-implementing the copyright header linter in #13199, I made the checker stricter in a few places. This was not intentional, but happened since I wasn't aiming at bug-for-bug compatibility: the old algorithm feels somewhat complicated for me.
    
    This led me to perform a few normalisations on the existing copyright headers: let me know if these are desired or not
    - normalise the copyright symbol in the first line (a few files had a different one)
    - add a dot in before the "All rights reserved" (again, only a few different ones)
    - three manual tweaks

[33mcommit 7b2b1a4a10a59e425a02c7be843e45aff37371ad[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sat May 25 20:06:28 2024 +0000

    chore(Covering/Differentiation): minor golf (#13211)

[33mcommit 7db9797efd1a45a85f4a964cd86cc4079e26f4cf[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Sat May 25 20:06:27 2024 +0000

    chore(AlgebraicGeometry): add dates to all deprecations (#13182)

[33mcommit e4bb40ce62016886223e2b055d6d2245845fa19e[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sat May 25 20:06:26 2024 +0000

    feat(RelClasses): generalize `IsTrans`/`IsRefl` instances (#13048)

[33mcommit fb5cb8b7b358a1f02e2302ab27c705e110e65cd7[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sat May 25 20:06:25 2024 +0000

    feat(AEEqFun): add 3 trivial lemmas (#13043)

[33mcommit 9248805d67a895c9239e07dac9ec300fd3c4cd83[m
Author: David Loeffler <d.loeffler.01@cantab.net>
Date:   Sat May 25 20:06:23 2024 +0000

    feat (NumberTheory/Harmonic): compute Gamma'(1/2) (#12923)
    
    Show `Gamma'(1/2) = -‚àöœÄ * (Œ≥ + 2 * log 2)` and various other related results.

[33mcommit 59150e2c37a0362fd3857bafcda0dea55d45c2a4[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Sat May 25 19:14:53 2024 +0000

    chore: Delete `Algebra.GroupPower.Ring` (#12957)
    
    Move the few remaining lemmas to earlier files.

[33mcommit 4d5bca9663630fe8737a608bca51e957c75322b3[m
Author: Julian Berman <Julian@GrayVines.com>
Date:   Sat May 25 19:14:52 2024 +0000

    feat(Multiset): add two lemmas relating Multiset.filter / Multiset.prod (#9864)

[33mcommit aafb896f3858865c23b579f7428d142dfb3210e4[m
Author: Oliver Nash <github@olivernash.org>
Date:   Sat May 25 14:56:27 2024 +0000

    feat: equality of coroots implies equality of roots for Lie algebras (#13208)
    
    This would also follow from general results about root systems but it is convenient (though not necessary) to have this to hand when proving that the roots of a semisimple Lie algebra are a root system.

[33mcommit c92909defd769cdd0d322641473a26603fd788b1[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Sat May 25 14:09:59 2024 +0000

    chore: Do not import `MonoidWithZero` in `Data.Rat.Defs` (#13138)
    
    Move the `Ring` and `GroupWithZero` instances to a new file `Algebra.Ring.Rat`.

[33mcommit 857573d7de9e06c8cd3496e7361b5cddc47a6888[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Sat May 25 13:23:06 2024 +0000

    style: remove last isolated where (#13202)
    
    Discovered when tweaking the rewritten style linter in #13199.

[33mcommit 86e604f1c0a660dd0a644b2d4fff62e0abb04643[m
Author: Kim Morrison <kim@tqft.net>
Date:   Sat May 25 13:23:05 2024 +0000

    chore: fix deprecations (#13192)

[33mcommit ea60bad377fed38d8f4367257eec8eca8f12f6f9[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Sat May 25 12:43:27 2024 +0000

    feat: trace of a permutation matrix (#13086)
    
    To go with Matrix.det_permutation

[33mcommit dacd3b143b1dc85386cfcf0ce8b33b1325213554[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Sat May 25 12:18:34 2024 +0000

    chore: move Int.coe_nat_strictMono (#13197)

[33mcommit b67115696d5676d338b8964cc9f3e45a59025719[m
Author: Christian Merten <christian@merten.dev>
Date:   Sat May 25 10:04:27 2024 +0000

    feat(CategoryTheory/Action): category of continuous actions (#13006)
    
    Introduces the category `ContAction V G` for any concrete category `V` with a forgetful functor to `TopCat` and monoid `G`. It is realized as a full subcategory of `Action V G` where the induced action is continuous.
    
    Also introduces the full subcategory `DiscreteContAction V G` where the underlying topological space is discrete.

[33mcommit 3e2ae8fc4757a9eb0838f259785aac32e568ea9d[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Sat May 25 08:40:43 2024 +0000

    feat(CategoryTheory/Sites): a sieve containing a covering presieve is covering for the associated Grothendieck topology (#13189)

[33mcommit e33ed907f04a9d11d5cc99a01307d00d5ba66932[m
Author: Johan Commelin <johan@commelin.net>
Date:   Sat May 25 06:25:32 2024 +0000

    chore(Algebra/Lie): rename IsSemisimple to HasTrivialRadical (#13131)
    
    This frees up the name `IsSemisimple` so that it can be used for the notion that matches the categorical concept.
    
    In characteristic 0, this is equivalent to having a trivial radical.
    In characteristic p > 0, there are counterexamples.
    
    With this change, we depart from the terminology used by Seligman,
    but we feel that the change is justified because we need a name for the categorical version of semisimplicity,
    and the naming convention proposed in this PR is the "least surprising" one.
    
    This PR also changes the definition of `LieModule.IsIrreducible` to exclude the trivial module.

[33mcommit 8f638ea419eb34bf2eeed9b6b8bc129368786332[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Sat May 25 01:43:23 2024 +0000

    chore: remove some minor order dependencies from Algebra.GroupWithZero (#13184)

[33mcommit c9ee63a2a9d4eeb41607c930473a224b081dc2c9[m
Author: Anatole Dedecker <anatolededecker@gmail.com>
Date:   Fri May 24 22:26:59 2024 +0000

    feat: golf SpectrumRestricts.closedEmbedding_starAlgHom using uniform trickery (#13014)

[33mcommit 49e1c29de1b78922c62e6e0cd04280bc742897f6[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Fri May 24 20:41:01 2024 +0000

    chore(Algebra/BigOperators): add missing deprecation dates (#12597)
    
    One additivised lemma was missing a deprecation.

[33mcommit 2c2bba1d3717256eea6dad1e9edae82237145958[m
Author: Rida Hamadani <mridahamadani@gmail.com>
Date:   Fri May 24 20:28:35 2024 +0000

    feat(Combinatorics/SimpleGraph): Distance between `u` and `v` is one iff `u` and `v` are adjacent (#11945)
    
    The distance between two vertices in a `SimpleGraph` is one if and only if they are adjacent.
    
    
    
    Co-authored-by: Rida Hamadani <106540880+Rida-Hamadani@users.noreply.github.com>

[33mcommit 53aa6a132c398623490072cf2b7c55e9f0702297[m
Author: Brendan Seamas Murphy <shamrockfrost@gmail.com>
Date:   Fri May 24 19:08:15 2024 +0000

    Chore(Algebra/Module/Torsion): Fix typo (#13180)
    
    Fix typo.

[33mcommit adca1892f20a23bb10f88d60226ea256e4a3412e[m
Author: Luigi Massacci <luigi.massacci.it@gmail.com>
Date:   Fri May 24 19:08:14 2024 +0000

    doc: removed old TODO note about implementing nlinarith (#13168)
    
    Remove a TODO note about implementing `nlinarith`, it has been done.
    Update the name of a variable in the docstring to match its current (not the mathlib3) name.

[33mcommit e73c336661089ed9311bd55eea53ab96940459b9[m
Author: Kim Morrison <kim@tqft.net>
Date:   Fri May 24 19:08:12 2024 +0000

    feat: oplax monoidal functors (#12856)
    
    Basic definitions of oplax monoidal functors.
    
    (Setting up towards bimonoids and hopf monoids.)

[33mcommit 01ef982a4a351333dd04533573c4d489cd2164a3[m
Author: Oliver Nash <github@olivernash.org>
Date:   Fri May 24 18:26:43 2024 +0000

    feat: add lemma `LieAlgebra.IsKilling.span_weight_isNonZero_eq_top` (#13179)

[33mcommit 827b87746282d80b15b72f0dcc6da9cc6fd33f06[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Fri May 24 17:05:56 2024 +0000

    chore: split order synonym instances for GroupWithZero into their own file (#12990)
    
    This is consistent with the `Group` file, and drops the dependency on `Mathlib.Order` entirely.

[33mcommit e1dca1d3e540578e7214197e29d5c17f85bb81fb[m
Author: Steven Clontz <steven.clontz@gmail.com>
Date:   Fri May 24 17:05:55 2024 +0000

    feat: add competely normal (non-Hausdorff) property (#12458)
    
    This conribution adds a distinct notion of a (non-Hausdorff) completely normal space, and disintangles relevant results that do not require Hausdorff.

[33mcommit fc48848e4374f13c796a7399bfccd2e228f776df[m
Author: damiano <adomani@gmail.com>
Date:   Fri May 24 16:09:52 2024 +0000

    chore: replace many `refine'` with `refine` (#13166)
    
    This PR replaces 7979 `refine'` with `refine`.  Many of the left-over ones cannot actually be directly replaced by `refine <add some ?>`.
    
    [Zulip thread](https://leanprover.zulipchat.com/#narrow/stream/144837-PR-reviews/topic/.2313166.20.60refine'.60.20to.20.60refine.60)

[33mcommit 8932a3d688d2bbf500429c4c888de4181086aad5[m
Author: Kim Morrison <kim@tqft.net>
Date:   Fri May 24 13:19:06 2024 +0000

    chore: bump aesop (#13165)

[33mcommit ac0ae59f137dbca66944a60503dcc747ca30aab2[m
Author: Kim Morrison <kim@tqft.net>
Date:   Fri May 24 12:40:04 2024 +0000

    chore: remove bad simps, and add test (#13164)
    
    
    
    Co-authored-by: sgouezel <sebastien.gouezel@univ-rennes1.fr>

[33mcommit 28d9a9404ecbda2b17bf7a6b711d62e29b2ea8c0[m
Author: Jz Pan <acme_pjz@hotmail.com>
Date:   Fri May 24 11:39:51 2024 +0000

    feat(LinearAlgebra/FiniteDimensional): relax condition of results regarding subalgebra = bot (#12849)
    
    ... from requiring `F` being a field to `F` satisfying `StrongRankCondition` and `S` being a free `F`-module. This makes the original statement a special case.
    
    The changed results are: `Subalgebra.eq_bot_of_(rank_le|finrank)_one`, `Subalgebra.[fin]rank_eq_one_iff` and `Subalgebra.bot_eq_top_iff_[fin]rank_eq_one`.
    
    Since the generalized results don't requiring division ring anymore, they are moved to an eariler file `LinearAlgebra/Dimension/FreeAndStrongRankCondition`.
    
    The proof need to use a new result `bijective_algebraMap_of_linearEquiv` which is put into `Algebra/Algebra/Basic`.

[33mcommit 32e6a4b3e695a46fa75595ca94f1b0269ab06725[m
Author: Christian Merten <niet@jonasvanderschaaf.nl>
Date:   Fri May 24 11:14:31 2024 +0000

    feat(AlgebraicGeometry/Morphisms): define closed immersions (#12917)
    
    Defines closed immersions of schemes.
    
    Co-authored-by: Amelia Livingston @101damnations
    Co-authored-by: Jonas van der Schaaf @jonasvanderschaaf
    
    
    
    Co-authored-by: 101damnations <101damnations@github.com>
    Co-authored-by: Christian Merten <christian@merten.dev>

[33mcommit 801a7d0eef7f568fbb26de3770097abcd981977d[m
Author: Jz Pan <acme_pjz@hotmail.com>
Date:   Fri May 24 10:36:56 2024 +0000

    feat(Algebra/Algebra/Subalgebra/Rank): add some results on the ranks of subalgebras (#12847)
    
    ... and they are corollaries of `rank_mul_rank`.
    
    Since their proof essentially depends on the fact that a non-trivial commutative ring satisfies strong rank condition, we put them into a separate file.

[33mcommit 12ac4afae145f7da312b76e57c49fd7b8dc42d65[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Fri May 24 09:47:11 2024 +0000

    chore: Move `Data.Rat.Field` to `Algebra.Order.Field.Rat` (#13139)

[33mcommit e59662d190974bd13c9649c0f62ae79730c0af77[m
Author: Kim Morrison <kim@tqft.net>
Date:   Fri May 24 09:21:43 2024 +0000

    chore(Category/TopCat): cleanup (#13137)
    
    Making this look slightly more like other concrete categories. Baby steps, more to come.

[33mcommit 0b29d6a8eb41ae45f7478e28f04e69b08aa1fffd[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Fri May 24 09:21:41 2024 +0000

    feat(CategoryTheory): transport Kan extensions via equivalences (#12785)
    
    In this PR, it is shown that left/right Kan extensions of functors `F : C ‚•§ H` along a functor `L : C ‚•§ D` are compatible with changing the functors `F` and `L` by isomorphic functors, by the precomposition with an equivalence `G : C' ‚•§ C`, and postcomposition with an equivalence `D ‚•§ D'`.

[33mcommit 8529a6466928bc66b13cb815424a8a7b9de9f39d[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Fri May 24 08:53:12 2024 +0000

    feat(CategoryTheory/Sites): functors which preserves sheafification (#12332)
    
    Given a Grothendieck topology `J` on `C` and `F : A ‚•§ B`, we define a type class `J.PreservesSheafification F`. We say that `F` preserves the sheafification if whenever a morphism of presheaves `P‚ÇÅ ‚ü∂ P‚ÇÇ` induces an isomorphism on the associated sheaves, then the induced map `P‚ÇÅ ‚ãô F ‚ü∂ P‚ÇÇ ‚ãô F` also induces an isomorphism on the associated sheaves.
    
    If we also assume `J.HasSheafCompose F` (which says that the postcomposition with `F` induces a functor `sheafCompose J F : Sheaf J A ‚•§ Sheaf J B`), then we obtain that the canonical map is an isomorphism `sheafify J (P ‚ãô F) ‚âÖ sheafify J P ‚ãô F`.
    
    We obtain `PreservesSheafification J (forget D)` when `D` is a concrete category satisfying suitable conditions.
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit 72430e23b535ecd467406c19f89b120bb98c1db5[m
Author: Johan Commelin <johan@commelin.net>
Date:   Fri May 24 08:18:59 2024 +0000

    fix(LinearAlgebra/BilinearForm/Orthogonal): fix name of restrict_nondegenerate_of_isCompl_orthogonal (#13157)
    
    The lemma is renamed to the correct `isCompl_orthogonal_of_restrict_nondegenerate` and we add
    
        alias restrict_nondegenerate_of_isCompl_orthogonal := isCompl_orthogonal_of_restrict_nondegenerate

[33mcommit acb292fe73098a65575ff562f6c81e42e570dc58[m
Author: Kim Morrison <kim@tqft.net>
Date:   Fri May 24 08:00:27 2024 +0000

    chore(TopCat/Limits/Products): clean up (#13143)
    
    Just convert some fragile chains of `simp only ...`s into `simp_rw`. Having trouble with these on another branch.

[33mcommit e76a76c36a1c2792438b62656bb94234bc4e5317[m
Author: Rob Lewis <Rob.y.lewis@gmail.com>
Date:   Fri May 24 04:42:29 2024 +0000

    fix: make polyrith succeed when target is identically zero (#13150)
    
    The `polyrith` feature that checks for membership in the radical of the ideal fails if the target is 0. (That is, `polyrith` cannot prove `x - x = 0`.) This PR fixes this by checking (in Sage) whether the target is 0, and short circuiting if it is.
    
    This example succeeded before #7790, fails after, and now succeeds again.
    
    ```lean
    import Mathlib.Tactic.Polyrith
    
    variable {R : Type*} [CommRing R]
    
    example {x : R} (H : x = 1) : x = x := by polyrith
    ```
    
    This PR also renames a misleadingly named variable in the `polyrith` Python script.
    
    
    
    Co-authored-by: Rob Lewis <rob.y.lewis@gmail.com>

[33mcommit 7476a96c6ea22819295268eb1ecac117936885c1[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Fri May 24 03:47:13 2024 +0000

    chore: Move `MulAction` to under `Algebra`    (#13140)
    
    Move the content of `GroupTheory.GroupAction.Defs` that doesn't depend on `GroupWithZero` to a new file `Algebra.Group.Action.Defs`.  This is part of #13027.

[33mcommit 4b398c7813b6fbf6f775381587115ee4ed45d529[m
Author: Brendan Seamas Murphy <shamrockfrost@gmail.com>
Date:   Fri May 24 03:47:12 2024 +0000

    Feat(LinearAlgebra/TensorProduct/RightExactness): Tensoring with a quotient of the ring (#13127)
    
    Informally we show `(R‚ß∏I) ‚äó M = M/IM`.

[33mcommit aef75f7a34b657603392fe402acb3697076e21bd[m
Author: Brendan Seamas Murphy <shamrockfrost@gmail.com>
Date:   Fri May 24 03:47:10 2024 +0000

    Feat(Algebra/Exact): Transport of exact sequences & the behavior under quotienting (#13126)
    
    Transport of exact sequences & the behavior under quotienting.

[33mcommit 96443808ee7c5ee5b19fe0ac144b6b6cecfbcce4[m
Author: Brendan Seamas Murphy <shamrockfrost@gmail.com>
Date:   Fri May 24 03:47:09 2024 +0000

    Feat(RingTheory/Ideal/Maps): Golf & generalize `smul_top_eq_map` (#13122)
    
    Golf & generalize `smul_top_eq_map`.

[33mcommit df8d73ecce7ef8aaf3794df99bb8c6ad5226bc3f[m
Author: Brendan Seamas Murphy <shamrockfrost@gmail.com>
Date:   Fri May 24 03:47:08 2024 +0000

    Feat(RingTheory/Ideal/Operations): Misc lemmas about smul actions on submodules (#13121)
    
    Misc lemmas about smul actions on submodules.

[33mcommit cad29d81df5009fab333f60daa6f1bc2e34cc8e3[m
Author: damiano <adomani@gmail.com>
Date:   Fri May 24 03:47:07 2024 +0000

    chore: update mk_all script and use it in CI (#11849)
    
    Prompted by [this Zulip message](https://leanprover.zulipchat.com/#narrow/stream/116290-rss/topic/Recent.20Commits.20to.20mathlib4.3Amaster/near/430753770), I unified all the uses that I could find of "list all files in some dir and create an 'import file' for them".
    
    In the process, I added a slight flexibility to the `mk_all` script: if you pass it a space-separated list of target dirs, it will produce 'import files' for each dir in the list.

[33mcommit f966474ac9dc4d5ff1f1cb1de556cf4767ec6288[m
Author: damiano <adomani@gmail.com>
Date:   Fri May 24 03:47:06 2024 +0000

    feat: syntax linter for `#`-commands (#11019)
    
    A Lean-linter implementation of the `#`-command linter introduced in #10809.
    
    This linter produces a warning whenever a non-allowed `#`-command is used.  The allowed commands are
    ```lean
    #align
    #align_import
    #noalign
    #adaptation_note
    ```
    
    [Zulip discussion](https://leanprover.zulipchat.com/#narrow/stream/144837-PR-reviews/topic/.2311019.3A.20a.20syntax.20linter.20for.20.23-commands)
    
    
    
    Co-authored-by: Michael Rothgang <rothgami@math.hu-berlin.de>

[33mcommit 124ce2b4c022108cbcb6ed5e5a255294b0a39008[m
Author: Brendan Seamas Murphy <shamrockfrost@gmail.com>
Date:   Fri May 24 03:14:28 2024 +0000

    Feat(Algebra/Module/Torsion): Fill out isTorsionBy API. (#13130)
    
    This PR connects regularity to `torsionBy` and fills out some missing parallels between `IsTorsionBySet` and `IsTorsionBy`.

[33mcommit 86653eb92af3432702484cda5fa713353b0077c4[m
Author: Kim Morrison <kim@tqft.net>
Date:   Thu May 23 22:40:26 2024 +0000

    chore(ExteriorAlgebra/Grading): use local instance (#13144)

[33mcommit a9da4cc7523e50408c0f3fdca9c9145f30d162ed[m
Author: Christian Merten <christian@merten.dev>
Date:   Thu May 23 21:25:39 2024 +0000

    feat(CategoryTheory/Limits): pro-coyoneda lemma (#12841)
    
    Shows a pro-coyoneda lemma. More precisely:
    
    If `D : I·µí·µñ ‚•§ C` is a diagram and `F : C ‚•§ Type` type-valued functor, then homomorphisms from `colimit (D.rightOp ‚ãô coyoneda) ‚ü∂ F` are isomorphic to `limit (D ‚ãô F ‚ãô uliftFunctor)`.
    
    Also shows a variant of this for a covariant diagram `D`.
    
    To establish the pro-coyoneda lemma, some cocontinuity isomorphisms for `Hom` are spelled out.

[33mcommit 9b7a59cd7f0e97efb993a52f0bc88f60d32aa3e6[m
Author: Heather Macbeth <25316162+hrmacbeth@users.noreply.github.com>
Date:   Thu May 23 19:39:11 2024 +0000

    fix: matrix simp-set error (#13134)
    
    Correct an error in the statement of the lemma `Matrix.cons_vecMul` introduced in #10297 (as can be seen by checking the diff on that PR, cc @madvorak).
    
    Add the example via which I caught this error, as a test case for the matrix simp-set.

[33mcommit 31ac4896ff24381fb64113db6f1db6da9551d77f[m
Author: Brendan Seamas Murphy <shamrockfrost@gmail.com>
Date:   Thu May 23 18:50:36 2024 +0000

    Feat(Algebra/Regular/SMul): Add some lemmas about `IsSMulRegular` (#13123)
    
    Add some lemmas about `IsSMulRegular`.

[33mcommit 8720e506f1a535db79539f6de8246072221e11dd[m
Author: Kim Morrison <kim@tqft.net>
Date:   Thu May 23 18:50:35 2024 +0000

    feat: no interesting comonoid objects in cartesian monoidal categories (#10103)
    
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>
    Co-authored-by: Scott Morrison <scott@tqft.net>

[33mcommit 7f5ae31cc05ae70ca6c5caaf59985035f040a74e[m
Author: Kim Morrison <kim@tqft.net>
Date:   Thu May 23 18:22:52 2024 +0000

    feat: comonoid objects in a braided category form a monoidal category (#10098)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>
    Co-authored-by: Scott Morrison <scott@tqft.net>

[33mcommit 2922eeaa8dcf1381f90e321e947d56ccf2027ac5[m
Author: Kevin Buzzard <k.buzzard@imperial.ac.uk>
Date:   Thu May 23 14:17:07 2024 +0000

    feat: MulPosMono (WithZero Œ±) (#13111)
    
    These instances make it possible to argue with multiplication and inequalities in `‚Ñ§‚Çò‚ÇÄ` .
    
    
    
    Co-authored-by: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
    Co-authored-by: Riccardo Brasca <riccardo.brasca@gmail.com>

[33mcommit 9f80e7c027d2609987f29414d15199db36b0578b[m
Author: Anatole Dedecker <anatolededecker@gmail.com>
Date:   Thu May 23 13:06:29 2024 +0000

    feat: functoriality of ContinuousMap in uniform spaces (#13019)

[33mcommit 9c69797c8f801c6e89bf6361e5c4912438cf96d9[m
Author: Kevin Buzzard <k.buzzard@imperial.ac.uk>
Date:   Thu May 23 12:15:08 2024 +0000

    fix: make HeightOneSpectrum.adicCompletion an abbrev (#13020)
    
    `IsDedekindDomain.HeightOneSpectrum.adicCompletion` is currently a `def` and this causes a bunch of `rw`s to fail in Lean 4; `erw` is needed. In developing the API further I ran into more irritating `erw` issues; changing it to an `abbrev` seems to solve them (we can get rid of several porting notes too).

[33mcommit dff169d73ffa832a18973f4ad52c30709a447fb3[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Thu May 23 11:18:15 2024 +0000

    chore: Remove order dependencies to `Data.Fin.Basic` (#13005)
    
    Move all the declarations using the mathlib order hierarchy to a new file `Order.Fin`. There were a bunch of order embeddings in `Data.Fin.Basic`, so I kept an embedding version of them around and renamed the order embedding version.

[33mcommit 5bf1683fbb7de26aee023022376acb23c740b3f5[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Thu May 23 09:39:31 2024 +0000

    chore: Move from `Algebra.GroupRingAction` to `Algebra.Ring.Action` (#13031)
    
    ... in prevision of #13027.

[33mcommit fda1d3c39e7ec14eb8e1abe583dac4edbb5183f5[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Thu May 23 09:04:44 2024 +0000

    feat(Condensed): prove the explicit sheaf condition for a general target category (#12870)
    
    - [x] depends on: #12909

[33mcommit 9f012931d33003deda3b46137791fbfa457adb3e[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Thu May 23 07:03:42 2024 +0000

    chore: Move `Invertible` (#13030)
    
    Move the material about `Invertible` to files under `Algebra.Group`, `Algebra.GroupWithZero`, `Algebra.Ring`.

[33mcommit edfc9481468f6ee9166f63a3b89021bfb79f741a[m
Author: Brendan Seamas Murphy <shamrockfrost@gmail.com>
Date:   Thu May 23 05:14:32 2024 +0000

    Feat(LinearAlgebra/TensorProduct/Basic): Tensoring with the action of a scalar gives the action of that scalar (#13118)
    
    Tensoring with the action of a scalar gives the action of that scalar.

[33mcommit f220fa59c994e98a20f63e8ac0ec64ed8ae1b4cd[m
Author: Brendan Seamas Murphy <shamrockfrost@gmail.com>
Date:   Thu May 23 04:10:38 2024 +0000

    Feat(LinearAlgebra/Quotient): Alternate version of `ker_liftQ_eq_bot` in terms of equality (#13117)
    
    Add version of `ker_liftQ_eq_bot` with both-ways `‚â§` replaced by `=` in the hypotheses.

[33mcommit 6f3c4d713135bdb8488103e987aefb1a0c8e29b6[m
Author: Brendan Seamas Murphy <shamrockfrost@gmail.com>
Date:   Thu May 23 03:28:40 2024 +0000

    Feat(RingTheory/Ideal/LocalRing): Maximal ideal of local ring is contained in the jacobson radical of any ideal (#13120)
    
    Maximal ideal of local ring is contained in the jacobson radical of any ideal.

[33mcommit 1f5e7a120cf305aae2a43f41d2ed1b0186a8a957[m
Author: Brendan Seamas Murphy <shamrockfrost@gmail.com>
Date:   Thu May 23 03:28:39 2024 +0000

    Feat(LinearAlgebra/TensorProduct/Basic): Image of bilinear map in terms of tensor product (#13119)
    
    Image of bilinear map in terms of tensor product.

[33mcommit e879b99b92b0a02e3df347ccb19bc26310f31de8[m
Author: Brendan Seamas Murphy <shamrockfrost@gmail.com>
Date:   Thu May 23 03:28:38 2024 +0000

    Feat(LinearAlgebra/Isomorphisms): Variant of 3rd iso in terms of sups of submodules (#13116)
    
    Equivalence between the quotient by a binary sum of submodules and an iterated quotient.

[33mcommit 57cb437190ca9301f2f191603521b1c707057b36[m
Author: Kim Morrison <kim@tqft.net>
Date:   Thu May 23 03:28:37 2024 +0000

    feat(Algebra/Category/*): simp lemmas for unbundled comp and categorical identities (#13109)
    
    These are useful in "mixed contexts" where we have categorical morphisms combined in "non-categorical" ways.

[33mcommit 69db26515b16d79d93b936a8834b238ce29a8d69[m
Author: Brendan Seamas Murphy <shamrockfrost@gmail.com>
Date:   Thu May 23 03:28:36 2024 +0000

    Feat(RingTheory/Ideal/AssociatedPrime): Union of associated primes is the set of zero divisors (#13100)
    
    Add lemma that the union of associated primes is the set of zero divisors.

[33mcommit e749c891f437dae8cb594779a057281b42eaee7c[m
Author: Brendan Seamas Murphy <shamrockfrost@gmail.com>
Date:   Thu May 23 02:54:59 2024 +0000

    Chore(LinearAlgebra/Basis/VectorSpace): Remove the single instance of `Module.Submodule` namespace in mathlib (#13102)
    
    Remove only usage of `Module.Submodule`.

[33mcommit 028c49cb2eac14ad5768725ca5d6cecde66cbea3[m
Author: Kim Morrison <kim@tqft.net>
Date:   Thu May 23 02:18:35 2024 +0000

    feat(CategoryTheory): aesop_cat uses sorry if there is a sorry in the goal (#13110)
    
    This makes it slightly more ergonomic to construct structures. While you're still working on the data you don't get bothered about the proofs (which hopefully will be done by `aesop_cat` anyway).

[33mcommit 4072ed9348f54aa781f3eea78b24fcb39e78a285[m
Author: Mitchell Lee <trivial171@gmail.com>
Date:   Thu May 23 01:17:37 2024 +0000

    feat: reflections, inversion sequences in Coxeter groups (#11466)
    
    - Add theorem `List.length_eraseIdx_add_one` to `Data/List/Basic.lean`, which states that if `i < l.length`, then the length of `l.eraseIdx i plus one` is equal to the length of `l`.
    - Add new file `GroupTheory/Coxeter/Inversion.lean`. Define reflections, left inversions, right inversions, and inversion sequences. Prove their basic properties.
    
    I decided to split #11408 (now closed) into two pull requests. This is the second one. The first is #11465.

[33mcommit dfedb0f929c2a8336ca48766c2902651313864ba[m
Author: Kyle Miller <kmill31415@gmail.com>
Date:   Wed May 22 18:33:56 2024 +0000

    chore: remove duplicate `OfNat (Fin n) a` instance (#13095)
    
    One already exists in `Mathlib.Data.Fin.Basic`.

[33mcommit fd3fa6e5dad245e070a8e3061d01579d7546535b[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Wed May 22 18:33:55 2024 +0000

    feat: Corners, corner-free sets (#13074)
    
    For `G` a commutative monoid and a set `A` in `G √ó G` , define corners of `A` as solutions to `x‚ÇÅ + y‚ÇÇ = x‚ÇÇ + y‚ÇÅ` where `(x‚ÇÅ, y‚ÇÅ) ‚àà A, (x‚ÇÅ, y‚ÇÇ) ‚àà A, (x‚ÇÇ, y‚ÇÅ) ‚àà A`.
    
    Define corner-free sets as sets containing no non-trivial corners.

[33mcommit 2bee71e8a1789646b703f1546340441f24c9cb52[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Wed May 22 18:17:11 2024 +0000

    feat: add some small missing API for valuations (#13083)

[33mcommit 89a94ada2fe6120a7076c82a1cbc89d35e7a552c[m
Author: David Kurniadi Angdinata <dka31@cantab.ac.uk>
Date:   Wed May 22 16:39:12 2024 +0000

    feat(NumberTheory/EllipticDivisibilitySequence): define recursion principle for normalised EDS (#10843)
    
    ... and make implicit variables in `Data.Nat.EvenOddRec` consistent.

[33mcommit c650a7e1255f18f7a76094432a4f111372947853[m
Author: kkytola <kalle.kytola@aalto.fi>
Date:   Wed May 22 15:10:55 2024 +0000

    feat: BoundedAdd class for consistency with BoundedSub and BoundedMul. (#13035)
    
    The classes `BoundedSub` and `BoundedMul` were added in PRs #12559 and #12790 to generalize subtraction and multiplication operations on bounded continuous functions (especially for the case of codomain `NNReal`). The existing generality for addition was sufficient, but in the review of #12790 it was pointed out that its assumption `LipschitzAdd` should probably be replaced for consistency by `BoundedAdd` (which is then a consequence of `LipschitzAdd`). This PR adds `BoundedAdd` and refactors the addition instances on bounded continuous functions accordingly, and additionally golfs the proofs of subtraction instances similarly using Lipschitzness.
    
    
    
    Co-authored-by: kkytola <39528102+kkytola@users.noreply.github.com>
    Co-authored-by: kkytola <‚Äúkalle.kytola@aalto.fi‚Äù>

[33mcommit 5a88d01751d70a185890ba91080b46c6ba5ce3d1[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Wed May 22 15:10:54 2024 +0000

    feat(Algebra/Homology): embeddings of complex shapes (#11899)
    
    Given two complex shapes `c : ComplexShape Œπ` and `c' : ComplexShape Œπ'` for homological complexes, an embedding from `c` to `c'` (`e : c.Embedding c'`) consists of the data of an injective map `f : Œπ ‚Üí Œπ'` such that for all `i‚ÇÅ i‚ÇÇ : Œπ`, `c.Rel i‚ÇÅ i‚ÇÇ` implies `c'.Rel (e.f i‚ÇÅ) (e.f i‚ÇÇ)`.
    
    This notion was originally introduced in the Liquid Tensor Experiment. It shall be further expanded in order to formalize truncation functors on the derived category.

[33mcommit 0df2dd35b75a765ddaa582573c3d879a16018b54[m
Author: Jujian Zhang <jujian.zhang1998@outlook.com>
Date:   Wed May 22 14:18:14 2024 +0000

    chore(Algebra/Homology/ShortComplex/SnakeLemma): fix typo `Functor‚Çâ` -> `Functor‚ÇÄ` (#13114)

[33mcommit f48575035a87cd7bdf617938fa47fd997cd95f6f[m
Author: damiano <adomani@gmail.com>
Date:   Wed May 22 14:18:13 2024 +0000

    move: new `Mathlib.Tactic.Linter` dir (#11807)
    
    Create a new `Mathlib/Tactic/Linter` dir and move there the linters.  Currently the new dir contains only one file, but there are more linters in PRs.

[33mcommit b0729237203be7d86931d9c1855e81c06e31c285[m
Author: Riccardo Brasca <riccardo.brasca@gmail.com>
Date:   Wed May 22 13:33:29 2024 +0000

    feat(Mathlib.Algebra.Polynomial.RingDivision): add Polynomial.nmem_nonZeroDivisors_iff (#12950)
    
    We add `Polynomial.nmem_nonZeroDivisors_iff`, known as McCoy's theorem: a polynomial `P : R[X]` is a zerodivisor if and only if there is `a : R` such that `a ‚â† 0` and `a ‚Ä¢ P = 0`.
    
    - [x] depends on: #12958
    
    Co-authored-by: <manelsadi12@gmail.com>

[33mcommit f7f1981138ab8dac9a4fef8c7257199d5ab1fd24[m
Author: Pierpaolo Frasa <pfrasa@gmail.com>
Date:   Wed May 22 12:39:38 2024 +0000

    Fix typos (#13112)
    
    Fix typos:
    
    * Use Œ† instead of ‚àÄ for statement of Chinese Remainder Theorem
    * Weistrass -> Weierstrass

[33mcommit 35c97c517a9885ac6f88970f684a76be3baa31a0[m
Author: David Renshaw <dwrenshaw@gmail.com>
Date:   Wed May 22 12:39:37 2024 +0000

    doc: fix doc comment on Nat.geomSum_eq (#13106)
    
    The current comment is a copy-paste error from the next lemma `Nat.geomSum_lt`.

[33mcommit e497779a0d1ce2f5a7477b43076bf4577011a427[m
Author: Jz Pan <acme_pjz@hotmail.com>
Date:   Wed May 22 12:39:36 2024 +0000

    feat(Algebra/Polynomial/AlgebraMap): relax the condition of `aeval_comp` to `Semiring` (#13101)

[33mcommit 4ab6d3214eece3e13a2669f85e1e866537bd4be0[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Wed May 22 12:39:35 2024 +0000

    chore: Move `CovariantClass` lemmas  (#12959)
    
    The files containing lemmas about the interaction of order in terms of `CovariantClass`/`ContravariantClass` and *not* the bundled compatibility typeclasses were all over the place. This PR puts them all in `Algebra.Order.NameOfAlgebraicStructure.Unbundled`.

[33mcommit e7603ff3ef003506c19053d6fa4f0270b9ab2f56[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Wed May 22 12:39:34 2024 +0000

    chore: Delete `Algebra.Parity` (#11863)
    
    #12829 made `Algebra.Parity` almost empty. This PR deletes it.

[33mcommit d082b61f37e419aed0b5a1e3d3a2ac4169cff2e6[m
Author: Oliver Nash <github@olivernash.org>
Date:   Wed May 22 12:09:36 2024 +0000

    feat: Lie algebra root spaces are 1-dimensional (#12937)
    
    over a field of characteristic zero, when the Killing form is non-singular

[33mcommit 5acadee4d0c4e74c8dac35574d05317082995e26[m
Author: Kim Morrison <kim@tqft.net>
Date:   Wed May 22 09:49:30 2024 +0000

    chore(Algebra/Category/Ring): simp lemmas for coercions (#13108)
    
    We add more simp lemmas to handle situations where both `X ‚Üí+* Y` and `CommRingCat.of X ‚ü∂ CommRingCat.of Y` appear, due to partial unfolding of this defeq.
    
    This appears to make things more confluent (the payoff isn't in this PR, however).
    
    If this turns out well, I will install corresponding lemmas in the other concrete categories in a later PR.
    
    - [x] depends on: #13107

[33mcommit 12f30b43606ae83c14c2c76a4c0571bd870654da[m
Author: Ralf Stephan <ralf@ark.in-berlin.de>
Date:   Wed May 22 09:29:59 2024 +0000

    feat: All `m`, `0 < m < n` are `n`-smooth numbers (#12988)
    
    This lemma is needed several times in a formal BOOK proof.

[33mcommit ff3cc270cec73e7ce364752c4b155b0c544033cb[m
Author: damiano <adomani@gmail.com>
Date:   Wed May 22 08:33:45 2024 +0000

    feat: add a Linters file (#12899)
    
    Add a new file `Mathlib.Linters` that is intended to be the entry-point for all `Mathlib` linters.
    
    This file currently contains only `Mathlib.Tactic.Lint` and is imported in `Mathlib.Common`.
    
    As linters seem to be invisible by Shake for dependencies, I also made this file invisible to Shake by marking it as
    * `ignoreAll`, meaning that all its imports are considered necessary;
    * `ignoreImport`, meaning that where it is imported, it is considered necessary.
    
    [Zulip discussion](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Mathlib.2FTactic.2F*)

[33mcommit 850fd80869b8fe8989220d94317fbfe69eba3ab9[m
Author: Jz Pan <acme_pjz@hotmail.com>
Date:   Wed May 22 08:00:22 2024 +0000

    feat(LinearAlgebra/{FiniteDimensional|Dimension/DivisionRing}): relax condition of some results (#12963)
    
    ... from requiring `F` being a field to `F` satisfying `StrongRankCondition` and `S` being a free `F`-module. This makes the original statement a special case.
    
    Changed results:
    
    In `DivisionRing.lean`:
    
    - `Basis.ofRankEqZero[_apply]`
    - `le_rank_iff_exists_linearIndependent[_finset]`
    - `rank[_submodule]_le_one_iff`, `rank_submodule_le_one_iff'`
    - newly added result: `rank[_submodule]_eq_one_iff`
    - `Submodule.rank_le_one_iff_isPrincipal`, `Module.rank_le_one_iff_top_isPrincipal`
    
    In `FiniteDimensional.lean`:
    
    - `finrank_eq_one_iff`, `finrank_eq_one_iff'`, `finrank_le_one_iff`
    - `Submodule.finrank_le_one_iff_isPrincipal`, `Module.finrank_le_one_iff_top_isPrincipal`
    - `cardinal_mk_eq_cardinal_mk_field_pow_rank`, `cardinal_lt_aleph0_of_finiteDimensional`
    
    All of them are moved to a separated file.

[33mcommit 2f2a2ac8815fa1802c08aefdfeae07804b97bea6[m
Author: Kim Morrison <kim@tqft.net>
Date:   Wed May 22 07:28:29 2024 +0000

    chore: cache cancelled started builds (#13105)
    
    Per https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Some.20files.20not.20found.20in.20the.20cache/near/439945625

[33mcommit 49465dde086cd01c079378831fdb5d51758ff603[m
Author: Kim Morrison <kim@tqft.net>
Date:   Wed May 22 07:28:28 2024 +0000

    chore(Algebra/Category): make coe_of a simp lemma in CommGroupCat (#13055)
    
    This tried to make the concrete category developments more uniform: whether `coe_of` was a simp lemma or not seems to have been decided differently in different files during porting.
    
    Also adds some lemmas to improve confluence.

[33mcommit d8043b0b6f97b54af9ad4f617660c61142476e39[m
Author: Kim Morrison <kim@tqft.net>
Date:   Wed May 22 06:25:41 2024 +0000

    chore(Topology/Sheaves/Stalks): cleanup (#13107)

[33mcommit 29980c83d0352c9bc4e783f9d0cfe6215b103980[m
Author: Brendan Seamas Murphy <shamrockfrost@gmail.com>
Date:   Wed May 22 06:25:40 2024 +0000

    Feat(Algebra/Module/Submodule/Pointwise): Generalize `set_smul_eq_iSup` as in TODO (#13103)
    
    Generalize `set_smul_eq_iSup` so it works with actions on `R`-submodules of bimodules.

[33mcommit 1c61cabadc2fc201584b9597057da18f09db0489[m
Author: Brendan Seamas Murphy <shamrockfrost@gmail.com>
Date:   Wed May 22 06:25:38 2024 +0000

    Feat(Algebra/Group/Subgroup/Pointwise): Additive `Subgroup.pointwise_smul_def` (#13099)
    
    Add additive version of `Subgroup.pointwise_smul_def`.

[33mcommit cdceebbe5119bcc30f60ed853d442b69f5d28cf0[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Wed May 22 06:25:37 2024 +0000

    chore: add `induction_eliminator` to `With{Top,Bot,Zero,One}` (#13096)
    
    This is a smaller version of #12605.
    
    This allows `using` to be dropped from `induction`.

[33mcommit 4ae950b73fd6d0771b936ee2caee37fc3b63b6e2[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Wed May 22 06:25:36 2024 +0000

    chore: fix variables declarations in probability theory files (#13084)
    
    When we have a measure around, it's better to declare `{_ : MeasurableSpace Œ©}` than `[MeasurableSpace Œ©]` because, when there are several measurable space structures around (as is often the case with conditional expectations), this ensures that the right one will be picked automatically.
    
    This PR enforces this design in several probability theory files, and uses this occasion to cleanup `variable` declaration in these files. This makes it possible to remove a bunch of lines `set_option backward.synthInstance.canonInstances false in`.
    
    No statement added or removed or changed, only variable management.

[33mcommit c11505986d66d566284bb7181fefe6d9ee1da21d[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Wed May 22 05:34:06 2024 +0000

    chore: golf prefix_take_le_iff (#13097)

[33mcommit e091c88348ddd5acceddd4320811a926d4cf19d0[m[33m ([m[1;33mtag: v4.8.0-rc2[m[33m)[m
Author: Kim Morrison <kim@tqft.net>
Date:   Wed May 22 03:42:30 2024 +0000

    chore: move to v4.8.0-rc2 (#13104)

[33mcommit daae54b6fe8ccdcbd2c7d64699f30df7b6533369[m
Author: arienmalec <arien.malec@gmail.com>
Date:   Wed May 22 01:53:33 2024 +0000

    doc: fix abbreviation for Span.lean (#13039)
    
    The documentation for `Mathlib.LinearAlgebra.Span.lean` is incorrect -- there currently is no abbreviation for `‚àô` and `\.` is incorrect.
    
    This PR depends on an external PR (https://github.com/leanprover/vscode-lean4/pull/447) to add the suggested abbreviation.

[33mcommit 81d68783f6889cad9c93c70e409ba6bf6e1ef557[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Wed May 22 00:03:59 2024 +0000

    chore: tidy various files (#13056)

[33mcommit 3e4f4e9a3799b567da609a7f8b72c8f5f201955b[m
Author: Michael Stoll <Michael.Stoll@uni-bayreuth.de>
Date:   Tue May 21 23:18:49 2024 +0000

    perf: increase priority of Algebra.id (#13032)
    
    Inspired by [this discussion](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/erw.20and.20IsDedekindDomain.2EHeightOneSpectrum.2EadicCompletion/near/439380909), we increase the priority of the `Algebra.id` instance to see if this has a positive effect on instance synthesis speed.
    
    Originally, this led to two proofs breaking, but (thanks to @kbuzzard) this can be fixed easily without the need to restore the default instance priority.
    
    The net effect is that this saves about 0.1% of build instructions.
    
    
    
    Co-authored-by: Kevin Buzzard <k.buzzard@imperial.ac.uk>

[33mcommit d573926443c58d344882c129b3417d888ba57ba1[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Tue May 21 23:18:48 2024 +0000

    doc(Geometry): document a few items (#12482)
    
    Except for algebraic geometry and other in-flight PRs, this resolves all nolints in this directory.

[33mcommit 26d807b549ca3537d43cc64f213c5d69132bd2c0[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Tue May 21 23:18:47 2024 +0000

    doc(Computability): document missing items (#12480)
    
    This fixes almost all nolint entries in `Computability`. While in the area, tweak formatting of the docs a tiny bit.
    
    This documentation is new; the docBlame linter got stricter in Lean 4.

[33mcommit 3570694dc49dfeb1c8d364aad7e3b6fcb6c6f0eb[m
Author: Kim Morrison <kim@tqft.net>
Date:   Tue May 21 23:04:21 2024 +0000

    feat: the forgetful functor from `Mon_ C` to `C` is monoidal when `C` is braided (#12857)

[33mcommit 396b26f2b76a06448626e9e44caef5a58ddf8f80[m
Author: Pol'tta / Miyahara K≈ç <pol_tta@outlook.jp>
Date:   Tue May 21 21:37:47 2024 +0000

    chore(Mathlib/Mathport/Syntax): update imports of `Mathport.Syntax` (#13085)
    
    I forgot to update imports of `Mathport.Syntax` at #5938.

[33mcommit b21dfe3f11b6748a76e317eadab8176d8d36e8f4[m
Author: Pol'tta / Miyahara K≈ç <pol_tta@outlook.jp>
Date:   Tue May 21 21:37:46 2024 +0000

    chore(Mathlib/Data/Finsupp/Basic): remove porting note (#13028)
    
    and the associated commented `Repr` instance: this instance moved to `Data.Finsupp.Notation`.

[33mcommit 997835a55298c4fa39c855fe0c00d8fd263d6806[m
Author: damiano <adomani@gmail.com>
Date:   Tue May 21 21:25:04 2024 +0000

    chore: uncdot Archive (#12421)
    
    In `Archive`, these `¬∑` are scoping when there is a single active goal.
    
    These were found using a modification of the linter at https://github.com/leanprover-community/mathlib4/pull/12339.

[33mcommit 84acd2b49aa653f35c6742c4368a142e09e27998[m
Author: Winston Yin <winstonyin@gmail.com>
Date:   Tue May 21 20:03:25 2024 +0000

    feat(StructureGroupoid): one small lemma and some docstrings (#9827)
    
    I added an iff version of `mem_of_eqOnSource`. This is to mirror how lemmas like `HasDerivAt.congr_of_eventuallyEq` have an iff counterpart `Filter.EventuallyEq.hasDerivAt_iff`.
    
    I also wrote the docstrings for fields of `StructureGroupoid`.
    
    <!-- The text above the `
    
    Co-authored-by: Michael Rothgang <rothgami@math.hu-berlin.de>

[33mcommit c0f600faef9a0506e9f2d4046414afeb0112eaf4[m
Author: Oliver Nash <github@olivernash.org>
Date:   Tue May 21 19:47:50 2024 +0000

    feat: define `sl‚ÇÇ` triples and prove basic result (#13076)

[33mcommit 362889570f9a80c6094262a296dda7db973d9009[m
Author: Johan Commelin <johan@commelin.net>
Date:   Tue May 21 19:30:25 2024 +0000

    chore(Algebra,LinearAlgebra): shorten names of generalizedEigenspace and maximalGeneralizedEigenspace (#13078)
    
    This commit is generated using
    
        rg -l generalizedEigenspace | xargs sed -i 's/generalizedEigenspace/genEigenspace/g'
        rg -l maximalGeneralizedEigenspace | xargs sed -i 's/maximalGeneralizedEigenspace/maxGenEigenspace/g'
        rg -l HasGeneralizedEigen | xargs sed -i 's/HasGeneralizedEigen/HasGenEigen/g'
        rg -l generalizedEigenrange | xargs sed -i 's/generalizedEigenrange/genEigenrange/g'
        rg -l hasGeneralizedEigen | xargs sed -i 's/hasGeneralizedEigen/hasGenEigen/g'
    
    The upshot is many shorter lemma names.
    
    
    
    
    Co-authored-by: Oliver Nash <github@olivernash.org>

[33mcommit 27b3df77bc162df680ce9724ddf875f7c25daaa9[m
Author: Junyan Xu <junyanxumath@gmail.com>
Date:   Tue May 21 16:45:05 2024 +0000

    feat: SuccOrder and recursion principle on well-ordered type (#11290)
    
    Order/SuccPred/Basic.lean: add `SuccOrder.ofLinearWellFoundedLT`, which puts a SuccOrder on an arbitrary well-ordered type. Also add the dual, `PredOrder` version. Add missing `pred` lemmas corresponding to existing `succ` lemmas.
    
    Order/SuccPred/Limit.lean: add `SuccOrder.limitRecOn` generalizing `Ordinal.limitRecOn` to allow definition by transfinite recursion on an arbitrary well-ordered type. (It turns out a **partial** well-founded order is enough.)
    
    SetTheory/Ordinal/Arithmetic.lean: refactor `Ordinal.limitRecOn` to use `SuccOrder.limitRecOn`.
    
    SetTheory/Cardinal/Ordinal.lean: add a lemma saying that the initial ordinal of an infinite cardinal is a NoMaxOrder.
    
    SetTheory/Ordinal/Basic.lean: add `mk_Iio_ord_out_Œ±`, a restatement of `card_typein_out_lt`.
    
    
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>

[33mcommit 3ab8e5819aedd7f82ccd1f45ee893d587e7a6f69[m
Author: Kim Morrison <kim@tqft.net>
Date:   Tue May 21 15:09:45 2024 +0000

    feat(Category/Theory/Monoidal): monoids in a symmetric category form a symmetric category (#13058)

[33mcommit 5136ec9d1ea9286eff3bc1c35e2bf512de099887[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Tue May 21 13:49:53 2024 +0000

    feat: update nolints periodically (#9857)
    
    Add a new CI job which updates `nolints.json` and `style-exceptions.txt` periodically.
    
    Cargo-culted from the mathlib 3 versions at
    https://github.com/leanprover-community/mathlib/blob/master/scripts/update_nolints.sh (update script) and
    https://github.com/leanprover-community/azure-scripts/blob/master/.github/workflows/nolints.yml (workflow).
    Please review carefully!
    
    [Zulip thread](https://leanprover.zulipchat.com/#narrow/stream/144837-PR-reviews/topic/.239857.20update.20nolints.20periodically)
    
    
    
    Co-authored-by: adomani <adomani@gmail.com>

[33mcommit c02964164f5a4bf624dc16faa63ed68554f516c0[m
Author: Kim Morrison <kim@tqft.net>
Date:   Tue May 21 12:14:27 2024 +0000

    chore: bump dependencies (#13081)

[33mcommit 7ef3ea2aade0a6a84c5e48831a81b2f36a0858e4[m
Author: Pol'tta / Miyahara K≈ç <pol_tta@outlook.jp>
Date:   Tue May 21 12:14:26 2024 +0000

    feat: port `cc` tactic (3/3) (#5938)
    
    https://leanprover.zulipchat.com/#narrow/stream/270676-lean4/topic/cc.20tactic.20comes.20to.20Lean4
    
    
    
    Co-authored-by: Pol'tta / Miyahara K≈ç <52843868+Komyyy@users.noreply.github.com>

[33mcommit ab879235f4658e32417fbd4860d7e9a678fb55c8[m
Author: Filippo A. E. Nuccio <filippo.nuccio@univ-st-etienne.fr>
Date:   Tue May 21 11:42:53 2024 +0000

    feat(RingTheory/PowerSeries/Inverse): add two lemmas on the normalization of `(X  : PowerSeries k)` (#13063)
    
    Add two lemmas about the element `X` as term of the normalization monoid $k[[X]]$ for a field `k`.
    
    Co-authored-by: Mar√≠a In√©s de Frutos-Fern√°ndez @mariainesdff

[33mcommit c187e36aa181c8befd3de1e3ac08e7540a292675[m
Author: Kim Morrison <kim@tqft.net>
Date:   Tue May 21 11:01:10 2024 +0000

    chore(AlgebraicGeometry): minor cleanup (#13080)
    
    Motivated by trying to clean up `CommRingCat` and friends, but this is a downstream fix that seems fine independently (and helpful later).

[33mcommit af03206c0534cdd3ba775565888c7b34aa1895b4[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Tue May 21 09:57:31 2024 +0000

    refactor(SimpleGraph): Review `deleteEdges` (#11613)
    
    Redefine `SimpleGraph.deleteEdges` in an order theory-friendly way, as was discussed several times. Refactor proofs to leverage the new definition and drop lemmas that are now direct consequences of other ones in order to make the API more modular.

[33mcommit a0bf3f6f71ef862a6c8d49eb39f3fe8636e2b134[m
Author: Johan Commelin <johan@commelin.net>
Date:   Tue May 21 09:04:31 2024 +0000

    chore(Algebra/Lie/*): rename toEndomorphism to toEnd (#13077)
    
    This commit was generated using
    
        rg -l toEndomorphism | xargs sed -i 's/toEndomorphism/toEnd/g'
    
    The upshot is shorter names of the defn and of many lemmas.
    It also matches the name `End` of the target of the map.

[33mcommit 380248bc483a4eb9831a26acf15cdc91d49c6fca[m
Author: Matthew Robert Ballard <matt@mrb.email>
Date:   Tue May 21 09:04:30 2024 +0000

    chore (RingTheory.Jacobson): `refine'` => `refine` or `exact` (#13062)
    
    `refine'`s have an issue with metavariables being cached in synthesis and are at this point legacy. We replace them with `refine`'s and an `exact`.

[33mcommit 333e894873e80ad7d703b0273383c8e1e82adb86[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Tue May 21 09:04:29 2024 +0000

    chore: Split `Algebra.Group.Prod` (#12974)
    
    Move the non-additivisable declarations to a new file `Algebra.GroupWithZero.Prod`. Credit Eric for https://github.com/leanprover-community/mathlib/pull/6866 and myself for https://github.com/leanprover-community/mathlib/pull/10907.

[33mcommit 70a13be19b9fd78111ae624de43829aee4a56867[m
Author: Xavier Roblot <roblot@math.univ-lyon1.fr>
Date:   Tue May 21 08:06:28 2024 +0000

    feat: `Units` and `Associates` of `nonZeroDivisors` (#12776)
    
    This PR defines the following two group/monoid isomorphisms:
    ```lean
    variable {Œ± : Type*} [MonoidWithZero Œ±]
    
    def unitsNonZeroDivisorsEquiv : Œ±‚Å∞À£ ‚âÉ* Œ±À£
    def nonZeroDivisorsAssociatesEquiv : (Associates Œ±)‚Å∞ ‚âÉ* Associates Œ±‚Å∞
    ```
    
    
    
    Co-authored-by: Ya√´l Dillies <yael.dillies@gmail.com>

[33mcommit 1d014c5b8feb62e873167309f0f6a35bf145dc02[m
Author: Matthew Robert Ballard <matt@mrb.email>
Date:   Tue May 21 06:02:45 2024 +0000

    chore (CategoryTheory): remove references to `restate_axiom` and porting notes about `reassoc.1` (#13070)
    
    As noted by @semorrison early in the port:  `restate_axiom` should not be necessary in lean4. Hopefully we can just remove the backticks from field names, then delete the invocation of `restate_axiom`. We delete these references to `restate_axiom` in this PR. We also delete porting notes which just note that `reassoc` syntax is different in lean4.

[33mcommit f8b56ceb773dd90e0ab046ade6983f11b01f2e80[m
Author: Kim Morrison <kim@tqft.net>
Date:   Tue May 21 04:23:11 2024 +0000

    feat: simp lemma for coercions in TopCat (#12956)
    
    This lemma doesn't have much effect right now in Mathlib, although it makes an example I'm writing for a tutorial go more smoothly. I could add that example in `test/` or even `doc/` if preferred, but maybe easiest not to?
    
    I'm also looking at the simp lemmas around coercions and `of` in other bundled categories, and hoping to make them more uniform (e.g. `coe_of` sometimes is and sometimes isn't a simp lemma, mostly according to the vagaries of the porting process, I think!). The equivalent of this lemma in some other bundled categories seems helpful, but I'm still investigating.
    
    Co-authored-by: Matthew Ballard <matt@mrb.email>

[33mcommit 35d2cdccd8e98077d4dd0fa84cf2a4ad30d4b9f7[m
Author: Kim Morrison <kim@tqft.net>
Date:   Tue May 21 04:09:30 2024 +0000

    chore: backports from bump/nightly-2024-05-20 (#13072)

[33mcommit 9ac3ff462b3ecd392cb32c8779859cdc331a19a8[m
Author: Kyle Miller <kmill31415@gmail.com>
Date:   Tue May 21 02:59:04 2024 +0000

    fix: `extract_lets` was not processing unused let bindings correctly (#13068)
    
    By default `mkLetFVars` eliminates unused let bindings, but they need to be preserved for `extractLetsAt` to function properly.

[33mcommit b4108e07b8960c4260ad800fb679469cc70ebd4c[m
Author: Kim Morrison <kim@tqft.net>
Date:   Tue May 21 01:54:39 2024 +0000

    chore(GroupTheory/Abelianization): simp normal form for map (#13054)
    
    If the definition of `Abelianization.map` appears, rewrite it as such.

[33mcommit f6a796badac76aba22effe25e8a834453ec783a2[m
Author: Kim Morrison <kim@tqft.net>
Date:   Mon May 20 22:41:42 2024 +0000

    chore: backport fixes to deprecations in dot notation (#13045)

[33mcommit abff007fdae5733016b334bee13c4b2a80f186ed[m
Author: kkytola <kalle.kytola@aalto.fi>
Date:   Mon May 20 22:00:22 2024 +0000

    feat: Embed a space into probability measures on it. (#11815)
    
    Assuming a topological space `X` is completely regular and T0, it can be embedded into `ProbabilityMeasure X`. This shows in particular that for the L√©vy-Prokhorov metrizability #11549 of `ProbabilityMeasure X`, certain assumptions cannot be relaxed. For example we have:
    
    ```lean
    import Mathlib.MeasureTheory.Measure.DiracProba
    
    variable {Œ© : Type*} [MeasurableSpace Œ©] [TopologicalSpace Œ©] [OpensMeasurableSpace Œ©] [T0Space Œ©] [CompletelyRegularSpace Œ©]
    
    open TopologicalSpace
    
    example :
        ¬¨ MetrizableSpace Œ© ‚Üí ¬¨ MetrizableSpace (ProbabilityMeasure Œ©) := by
      intro badSpace goodProba
      exact badSpace embedding_diracProba.metrizableSpace
    
    example :
        ¬¨ PseudoMetrizableSpace Œ© ‚Üí ¬¨ PseudoMetrizableSpace (ProbabilityMeasure Œ©) := by
      intro badSpace goodProba
      exact badSpace embedding_diracProba.pseudoMetrizableSpace
    
    example :
        ¬¨ FirstCountableTopology Œ© ‚Üí ¬¨ FirstCountableTopology (ProbabilityMeasure Œ©) := by
      intro badSpace goodProba
      exact badSpace embedding_diracProba.firstCountableTopology
    ```
    
    
    
    Co-authored-by: kkytola <39528102+kkytola@users.noreply.github.com>

[33mcommit 72fd909bc757e05b54afb5ad69432fd2b0c89c08[m
Author: Anatole Dedecker <anatolededecker@gmail.com>
Date:   Mon May 20 20:38:14 2024 +0000

    feat: congruence homeomorphisms for ContinuousMap (#13018)

[33mcommit 614abecf4edf44b02e520456d1795d178e85ebb8[m
Author: Andrew Yang <the.erd.one@gmail.com>
Date:   Mon May 20 19:42:20 2024 +0000

    chore(CategoryTheory/Extensive): golf proof (#13066)
    
    
    
    
    Co-authored-by: Andrew Yang <36414270+erdOne@users.noreply.github.com>

[33mcommit 323ddd6d811a9fa67c755b701717f8564bd1b3eb[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Mon May 20 18:52:31 2024 +0000

    feat: module and algebra instances for `SetLike` subojects (#12962)
    
    This adds low priority (75) instances for `SetLike` subobjects satisfying `SMulMemClass` and either `AddSubgroupClass` or `SubsemiringClass` in order to match precedent with other portions of the library and to make it possible to state theorems about subalgebras which are not specific to `Subalgebra`.

[33mcommit 369164900dc8b3a8d7b653d684e74190afd980be[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon May 20 18:30:50 2024 +0000

    feat(HausdorffDimension): `ŒºH[d] = 0` if `d > finrank ‚Ñù E` (#13049)

[33mcommit 7493b5f81b4c031b87877c5c124bea1ddc4e567d[m
Author: damiano <adomani@gmail.com>
Date:   Mon May 20 17:40:10 2024 +0000

    chore: replace `refine'` with one underscore by `refine` (#13059)
    
    [Zulip](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Subgroups.20are.20empty/near/439585459)

[33mcommit cad0ed8b1a312ec32b9ae2e97705738fa5dc3199[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Mon May 20 11:44:47 2024 +0000

    chore: Separate algebraic multiset lemmas (#12845)
    
    Resplit `Algebra.BigOperators.Multiset.Basic` and `Algebra.BigOperators.Multiset.Lemmas` into two new files:
    * `Algebra.BigOperators.Group.Multiset` for lemmas that require group-like structures (`Monoid`, `Group`, ...)
    * `Algebra.BigOperators.Ring.Multiset` for lemmas that require ring-like structures (`MonoidWithZero`, `Ring`, ...)
    
    Add `assert_not_exists Ring` in the former. Once #12974 lands, it will be strenghtenable to `assert_not_exists MonoidWithZero`.

[33mcommit 7bda946bac57bac6cb4f26826cc906cc21e0511f[m
Author: Riccardo Brasca <riccardo.brasca@gmail.com>
Date:   Mon May 20 10:52:20 2024 +0000

    feat(NumberTheory.FLT.Three): basic properties of a solution to flt3 (#12977)
    
    We add `Solution'` and `Solution`, structures representing solutions to the generalized Fermat's equation `FermatLastTheoremForThreeGen`.  The proof of flt3 will be a descent argument on a given `Solution`.

[33mcommit b2214f73182429f000eb67735bfac87889f1abf1[m
Author: Filippo A. E. Nuccio <filippo.nuccio@univ-st-etienne.fr>
Date:   Mon May 20 10:05:48 2024 +0000

    chore(FieldTheory/RatFunc): split the file into several ones (#12425)
    
    Following the discussion in #12245 I am splitting `FieldTheory/RatFunc` into several files.
    
    A new folder `RatFunc` is created in the parent `FieldTheory` together with the files
    * `Basic` containing all basic definitions (lines 1-295)
    * `FieldStructure` containing results about the field structure with numerators and denominators (lines 296-1381)
    * `FunLike` containing properties about rational functions as functions (lines 1382-1558)
    * `Degree` with properties about the degree (lines 1560-1657)
    
    Lines 1658 to the end are moved to `RingTheory/LaurentSeries` .

[33mcommit 630f93031fefe202ddfaaa47116d3174fbed20db[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Mon May 20 09:53:07 2024 +0000

    chore: move `OrderSynonym` files under `Algebra.Order` (#13033)

[33mcommit 544c1c46397244b93b6cdb6db9eb456969062b15[m
Author: Kim Morrison <kim@tqft.net>
Date:   Mon May 20 07:13:53 2024 +0000

    chore: backports anticipating nightly-2024-05-19 (#13046)
    
    This backports some changes that fill in a few implicit arguments.
    
    nightly-2024-05-19 has trouble with these and the bug fix in https://github.com/leanprover/lean4/pull/4206, and needs some fixes.
    
    I *think* all these changes are not actually problematic, and perhaps even improve readability.
    
    If a maintainer agrees, let's just do this on master. If any of these look at all bad, please just say so and I'll remove it from this PR and consider doing a minimization to understand if/why it is really necessary.

[33mcommit dff61c00cb40b954093c1052b0f3d742bb9a0d22[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Mon May 20 07:13:52 2024 +0000

    chore: Split `Data.Pi.Lex` (#13008)
    
    ... into
    * `Order.PiLex` for the purely order theoretic constructions
    * `Algebra.Order.Group.PiLex` for the algebraic order constructions

[33mcommit 9869c1e8476c9a46b57e9b1155d67385b0f35b25[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Mon May 20 07:13:51 2024 +0000

    chore: Move `Algebra.GroupPower.Identities` (#12985)
    
    ... to `Algebra.Ring.Identities`

[33mcommit 7a03bae61aafb5b66856e0656b04c11ef47b9b1e[m
Author: Kim Morrison <kim@tqft.net>
Date:   Mon May 20 07:13:50 2024 +0000

    chore: switch from `make test` to `lake test` (#12943)
    
    In an effort to start moving to a more Lean+Lake based infrastructure, this installs a test runner which is a thin wrapper around Batteries' test runner introduced in https://github.com/leanprover-community/batteries/pull/787.
    
    The `liskin/gh-problem-matcher-wrap@v3` problem matcher was already broken for the test suite, and will remain broken here. There's a tracking issue at #12946. We can restore that once the new test behaviour has converged.
    
    - [x] depends on: https://github.com/leanprover-community/batteries/pull/797

[33mcommit ee4e65e5f7ea58c61050a3d8213d3caa3daaefde[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Mon May 20 06:23:27 2024 +0000

    feat: General `DecidableEq` instance for `FunLike` (#13007)
    
    This lets us get rid of ad hoc instances in `Data.Fintype.Basic` and remove imports

[33mcommit c44d42ecf7d6995d04a367093e6324ddf1055c14[m
Author: Kim Morrison <kim@tqft.net>
Date:   Mon May 20 05:30:38 2024 +0000

    chore: add full-ci label to Lean PRs that break Mathlib (#13052)
    
    This makes the turnaround for local testing faster, by ensuring that toolchains for all platforms are built.

[33mcommit 74a140772c3067b1c85fa962f65bbcdf129a2774[m
Author: Kim Morrison <kim@tqft.net>
Date:   Mon May 20 15:28:59 2024 +1000

    chore: add full-ci label to Lean PRs that break Mathlib

[33mcommit 38aa2fc721e7220f85cee47630e806979aaa21a5[m
Author: Michael Stoll <Michael.Stoll@uni-bayreuth.de>
Date:   Sun May 19 22:59:38 2024 +0000

    chore(Analysis/SpecialFunctions/Exp): deal with TODO (#12781)
    
    This deals with the TODO in Mathlib.Analysis.SpecialFuncitons.Exp:L146 by renaming `Continuous{WithinAt|At|On|}.exp` to `...rexp`.
    
    Rationale: These are not in the `Real` namespace, and there are at least three different exponentials in Mathlib (`Real.exp`, `Complex.exp` and `NormedSpace.exp`), so it is better to make clear which one is used in these declarations.

[33mcommit f39480bd402164320ad23d9fe45488e6eb89b38a[m
Author: Happyves <yves-j@gmx.de>
Date:   Sun May 19 22:59:37 2024 +0000

    List.rdrop lemmata (#12468)
    
    Adds the code from
    https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/List.20lemma.20for.20mathlib
    
    
    
    Co-authored-by: Happyves <132464784+Happyves@users.noreply.github.com>
    Co-authored-by: Michael Rothgang <rothgami@math.hu-berlin.de>

[33mcommit df27b2d7ebb5390e4e6b049e724e79fd55571cc7[m
Author: Anatole Dedecker <anatolededecker@gmail.com>
Date:   Sun May 19 22:31:36 2024 +0000

    feat: remove useless assumption in continuous_algebraMap (#13015)

[33mcommit 91e688bd4a6eded8f4e52afa18f98d9c0f5c9475[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sun May 19 20:14:00 2024 +0000

    chore(Order/Hom/Bounded): add `LE` instances (#12983)

[33mcommit f4da8e56e23fe10cd2184b17803b8db2caa4155e[m
Author: kkytola <kalle.kytola@aalto.fi>
Date:   Sun May 19 19:30:02 2024 +0000

    feat: BoundedMul class to generalize multiplication of bounded continuous functions. (#12790)
    
    Introduce type class `BoundedMul`, which allows to generalize multiplication of `BoundedContinuousFunction` to the case where the values are not necessarily in `NonUnitalSeminormedRing`. The most important case for measure theory applications that is allowed by the generalization is bounded continuous functions with values in `‚Ñù‚â•0`. The instances of `Monoid` and `SemiRing` on `BoundedContinuousFunction` are correspondingly generalized.
    
    
    
    Co-authored-by: kkytola <39528102+kkytola@users.noreply.github.com>

[33mcommit d874bdffd15c8aeb3e8bb150dcff8feaac40e4e4[m
Author: Sina Hazratpour <sinahazratpour@gmail.com>
Date:   Sun May 19 09:37:31 2024 +0000

    feat: moving some adjunctions of over categories to `CategoryTheory.Adjunction.Over` (#12980)
    
    We move the functor `CategoryTheory.Over.baseChange` and the adjunction `CategoryTheory.Over.mapAdjunction` to `CategoryTheory.Adjunction.Over`.
    
    Note that we already have
    ```
    def forgetAdjStar [HasBinaryProducts C] : Over.forget X ‚ä£ star X
    ```
    in the file `CategoryTheory.Adjunction.Over` and it would make sense to have the facts about adjunction of Over categories in one place. This change also reduces the length of the file `CategoryTheory.Limits.Shapes.Pullbacks` which is almost 3k LOC.

[33mcommit 83f2884c981ec6009505099b8bcc3fee196e0e84[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Sun May 19 09:24:39 2024 +0000

    chore: Split `Algebra.Group.Conj` (#13029)
    
    Also generalise `Units.exists_iff_ne_zero`

[33mcommit 3015868dac1afc33f1027d8571b1fe90c5a0a2e2[m
Author: Anatole Dedecker <anatolededecker@gmail.com>
Date:   Sun May 19 02:52:29 2024 +0000

    feat: add embedding version of UniformOnFun.postcomp_uniformInducing (#13017)

[33mcommit 68f23711449bab686d31fbef828cac8a9b252805[m[33m ([m[1;31morigin/feat-span-abbrev[m[33m)[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sat May 18 23:49:22 2024 +0000

    chore(MeasureTheory): golf (#13016)
    
    Minor golf and formatting fixes
    cherry-picked from an otherwise no longer relevant branch.

[33mcommit fa9ce74b7f91f05eed2cbb2a7213649e0711db5d[m
Author: Christian Merten <christian@merten.dev>
Date:   Sat May 18 21:23:21 2024 +0000

    feat(RingTheory/AdicCompletion): add algebra instance (#12553)
    
    Adds the algebra instance on the `I`-adic completion of a ring `R`. Also provides the `AdicCompletion I R`-module instance on `AdicCompletion I M` for every `R`-module `M`.
    
    Co-authored-by: Judith Ludwig <ludwig@mathi.uni-heidelberg.de>
    
    
    
    Co-authored-by: judithludwig <150042763+judithludwig@users.noreply.github.com>

[33mcommit dd53bf007a52d58ae925074b6ca98319f51658bb[m
Author: Riccardo Brasca <riccardo.brasca@gmail.com>
Date:   Sat May 18 20:54:15 2024 +0000

    refactor(Algebra.Polynomial.RingDivision): split large file (#12958)
    
    Currently `Algebra.Polynomial.RingDivision` is a strange mix of basic results about polynomial rings and stuff about their roots. We move those to a new file `Algebra.Polynomial.Roots`.

[33mcommit db0686ca17bf058fa3fd4236ae3b3d00862ba62c[m
Author: Andrew Yang <the.erd.one@gmail.com>
Date:   Sat May 18 18:12:31 2024 +0000

    chore(AlgebraicGeometry/ProjectiveSpectrum/Scheme): Tidy & golf (#12981)

[33mcommit 57e4f13b3a884983be9d889144f546e63584fe9b[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Sat May 18 16:15:31 2024 +0000

    feat(Probability/Independence): add `IndepFun.neg` (#13000)
    
    In order to enhance findability we have added:
    - [x] `IndepFun.neg_right`
    - [x] `IndepFun.neg_left`
    
    Co-Authored-By: Lorenzo Luccioli <71074618+LorenzoLuccioli@users.noreply.github.com>
    
    Co-authored-by: Lorenzo Luccioli <lorenzoluccioli@gmail.com>

[33mcommit 73a3870ceabcf1fce0f9f228aa7f8a14c5afa8b0[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Sat May 18 16:15:30 2024 +0000

    chore: Delete `Algebra.GroupPower.Basic`, `Algebra.GroupWithZero.Bitwise` (#11855)
    
    The entire `Algebra.GroupPower` folder is problematic in that it treats `pow` as an advanced subject while the rest of mathlib wants to treat it as a primitive. As such, its existence is an obstacle to developing the theory of `pow` transversally.
    
    This PR scatters the lemmas in `Algebra.GroupPower.Basic` to earlier files and deletes it. Also delete `Algebra.GroupWithZero.Bitwise` whose lemmas are completely deprecated (and hard to rehome).
    
    See #9411 for previous work.

[33mcommit da9a27fafd34ff06111b998ef12a76ee19012208[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Sat May 18 16:15:28 2024 +0000

    feat(Data.DFinsupp.Notation): add notation for `DFinsupp` (#10962)
    
    This just extends the existing notation we already use for `Finsupp` (#6367).
    The two seem to coexist on the same notation without any issue.

[33mcommit 06db9344c762d8b7ed8665b50f500258ac66ac9a[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Sat May 18 15:22:53 2024 +0000

    chore: tidy various files (#12999)

[33mcommit f9e2c517609645d6b420e6f42a6d025680b8b5b3[m
Author: Kevin Buzzard <k.buzzard@imperial.ac.uk>
Date:   Sat May 18 14:45:09 2024 +0000

    fix(RingTheory/DedekindDomain/AdicValuation): docstring typo (#13009)

[33mcommit 53364710b45b6e223ccb0a720e59c422a05dff1a[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sat May 18 13:57:42 2024 +0000

    feat(SpecialFunctions/Exp): `=O`/`=o` versions of `exp_bound` (#12972)
    
    Also add `simp, norm_cast` lemmas about asymptotics and `(‚Üë) : ‚Ñù ‚Üí ‚ÑÇ`.

[33mcommit 964b14278e2e23ec57e1c0d18d4466dd0d72e16c[m
Author: kkytola <kalle.kytola@aalto.fi>
Date:   Sat May 18 13:04:10 2024 +0000

    chore(MeasureTheory.Constructions.BorelSpace.Basic): split file (#12470)
    
    The file `MeasureTheory.Constructions.BorelSpace.Basic` was approximately 2500 lines long. There is somewhat independent content related to order topologies, metrics, and reals, ennreals, and nnreals. This PR proposes to spilt the file according to those boundaries: `Basic` < `Order` < `Real` < `Metric`. (Short module docstring summaries are added to the new files.)

[33mcommit b2107489eea4dbc183c364d0ec4c15945cc607d8[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Sat May 18 09:31:09 2024 +0000

    feat(Algebra/Category/ModuleCat): the category of presheaves of modules is abelian (#12721)

[33mcommit 0bd43a906b5e58a705285f1189e6b69bdfb367e6[m
Author: Christian Merten <christian@merten.dev>
Date:   Sat May 18 08:22:20 2024 +0000

    chore(RingTheory/Polynomial): rename `frange` to `coeffs` (#12919)
    
    Renames `Polynomial.frange` to `Polynomial.coeffs`.

[33mcommit 78232185bdfa17888dbbfddf11be766bcef8b86e[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sat May 18 07:32:21 2024 +0000

    feat(MeasureTheory): generalize some lemmas to `OuterMeasureClass` (#13002)

[33mcommit 712ef83de510992c182a0fcf289ab2a2e496ac28[m
Author: Matthew Robert Ballard <matt@mrb.email>
Date:   Sat May 18 03:12:28 2024 +0000

    chore: `refine'` => `refine` (#12997)
    
    These `refine'` calls were convincing typeclass synthesis to cache answers that contained meta-variables. In the current design, this leads to unexpected behavior. `refine` seems to behave fine in this regard. See [Zulip](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Subgroups.20are.20empty).

[33mcommit b9e4edd6dfff5f6b5580ba0bcbcb1b51537838ea[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Fri May 17 23:45:20 2024 +0000

    feat(Analysis/EGauge): new file (#12852)
    
    Define `egauge`, needed to define Fr√©chet derivative
    for functions between topological vector spaces.

[33mcommit 53a11eff0698eec4c39e32cdbb7466d83865b807[m
Author: Floris van Doorn <fpvdoorn@gmail.com>
Date:   Fri May 17 23:31:02 2024 +0000

    chore: cleanup `AlgebraicGeometry.Pullbacks` (#12995)
    
    * I noticed this file was a little slow and I decided to clean it up a bit.
    * I don't actually know if this improves the compilation time of this file, but it cleans up all porting notes, adaption notes, `erw` and `change`.

[33mcommit 89394c90a12af6623d815617801e3ee7aec8627f[m
Author: Kim Morrison <kim@tqft.net>
Date:   Fri May 17 20:13:26 2024 +0000

    chore(TopologicalSimplex): deactivate bad simps lemma (#12967)

[33mcommit cec63ac98d864005f51fcd00b267bf153e1570ff[m
Author: Pol'tta / Miyahara K≈ç <pol_tta@outlook.jp>
Date:   Fri May 17 19:31:10 2024 +0000

    style: remove all isolated `where` (#12991)

[33mcommit f933e98bae2d8c64dd9007d1acaea47640d97780[m
Author: Jujian Zhang <jujian.zhang1998@outlook.com>
Date:   Fri May 17 17:53:46 2024 +0000

    feat(Order/RelSeries): add `snoc` construction (#12915)
    
    Given a series `a‚ÇÄ -r‚Üí a‚ÇÅ -r‚Üí ... -r‚Üí a‚Çô` and an `a` such that `a‚Çô -r‚Üí a` holds, there is
    a series of length `n+1`: `a‚ÇÄ -r‚Üí a‚ÇÅ -r‚Üí ... -r‚Üí a‚Çô -r‚Üí a`.
    
    These and some other lemmas in this PR are all extracted from `Order/JordanHolder.lean`
    
    
    
    Co-authored-by: Ya√´l Dillies <yael.dillies@gmail.com>

[33mcommit 32139819b705675e7af81b63a66a354e3131ed9b[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Fri May 17 17:05:53 2024 +0000

    feat(CategoryTheory/Sites): the category of sheaves is a localization of the category of presheaves (#12374)
    
    In this PR, it is shown that the category of sheaves `Sheaf J A` is a localization of the category `Presheaf J A` with respect to the class `J.W` of morphisms of presheaves which become isomorphisms after applying the sheafification functor.
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit 3cb818a75a7337e014d55835c15ee92af6f2a922[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Fri May 17 13:35:13 2024 +0000

    chore(CategoryTheory,Combinatorics,FieldTheory,Geometry): add a few more deprecation dates (#12408)
    
    and tweak formatting of a few more notes: aim to have the date on the same line as the deprecation attribute.

[33mcommit 63eee183ed507c94b0c28abb5ad9e47e5d18d576[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Fri May 17 12:47:31 2024 +0000

    chore: Move `negOnePow` (#12975)
    
    ... to under `Algebra.Ring`

[33mcommit e096c9ef1146d02f42270afa103f17be4004c6ab[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Fri May 17 10:58:25 2024 +0000

    feat(Pow/Asymptotics): add `IsTheta.rpow` and `Is*.sqrt` (#12971)

[33mcommit ad63ab759007748b978a364c983eb3c54034c922[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Fri May 17 09:40:27 2024 +0000

    chore: Delete `Data.Nat.Parity` (#12882)
    
    Scatter the lemmas in `Data.Nat.Parity` to earlier files:
    * `Data.Nat.Defs`
    * `Algebra.Group.Nat`
    * `Algebra.Ring.Nat`
    * `Algebra.Order.Ring.Abs`

[33mcommit f43bcb18a84ea8f762efa6c8a719a46e95ef7e18[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Fri May 17 09:11:45 2024 +0000

    doc(Analysis): document some entries (#12954)

[33mcommit 21ec48346fd868f06d015ce03caebc448c51e95b[m
Author: Michael Stoll <Michael.Stoll@uni-bayreuth.de>
Date:   Fri May 17 09:11:44 2024 +0000

    feat(NumberTheory/EulerProduct/DirichletLSeries): use infinite product and L-series (#12809)
    
    This is a follow-up to [#12161](https://github.com/leanprover-community/mathlib4/pull/12161).
    It adds `HasProd` and `tsum` versions of the Euler Product statements for the Riemann zeta function and Dirichlet L-series (in the latter case, also replacing the explicit infinite sum by `L ‚Üóœá s`).
    
    See [this Zulip thread](https://leanprover.zulipchat.com/#narrow/stream/144837-PR-reviews/topic/L-series/near/438037266).

[33mcommit 1718faaa5682b2138a6ab609ea09b382bb58662b[m
Author: Kim Morrison <kim@tqft.net>
Date:   Fri May 17 08:20:02 2024 +0000

    chore: disable lean4checker in regular CI (#12968)
    
    Expect ~12 minutes off every single CI run!

[33mcommit a53131f84b82940cdcdc116b72f2c26601ea280f[m
Author: Scott Carnahan <128885296+ScottCarnahan@users.noreply.github.com>
Date:   Fri May 17 08:20:01 2024 +0000

    feat: HahnSeries on Lex product (#10781)
    
    This PR implements an equivalence between `HahnSeries Œì (HahnSeries Œì' R)` and `HahnSeries (Œì √ó‚Çó Œì') R`.  We do this by showing that a subset of the lexicographic product is partially well-ordered if and only if its projection to the first coordinate is partially well-ordered and its intersection with each fiber is partially well-ordered.

[33mcommit f36fc3c15795aa29c6df0c213e487c8795fdef09[m
Author: Kim Morrison <kim@tqft.net>
Date:   Fri May 17 07:11:08 2024 +0000

    chore(Group/Hom/Basic): close final namespace (#12973)

[33mcommit f60657fbfbae6d47df0e9443529abbcff07aa639[m
Author: Scott Carnahan <128885296+ScottCarnahan@users.noreply.github.com>
Date:   Fri May 17 07:11:07 2024 +0000

    feat (Algebra/Vertex) Heterogeneous vertex operators (#11797)
    
    This is an initial PR in preparation for defining vertex algebras.  The notion of `heterogeneous vertex operator` doesn't seem to appear in the literature, but it is a convenient way to simultaneously express:
    1. composites of vertex operators
    2. intertwining operators between modules
    3. the scalar action of multivariable Laurent series, used in locality and residue products.

[33mcommit a8722d62f88cad8966249470672911d7098154fa[m
Author: Kim Morrison <kim@tqft.net>
Date:   Fri May 17 06:05:48 2024 +0000

    chore(EllipticDivisibilitySequence): backport change for nightly-testing (#12969)
    
    Because well-founded definitions will by default become irreducible in v4.9.0, we need to adjust some proofs here.
    
    An alternative, which allows leaving the lemmas as by `rfl` (and hence eligible for `dsimp`) is to add `@[semireducible]` to `preNormEDS'`. However I think this is a better default.

[33mcommit ebfda4dabd1dea8bdab53e7792ed84768c1c7565[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Fri May 17 06:05:47 2024 +0000

    chore(*): golf, mostly using `gcongr` (#12944)
    
    Golf, mostly in `MeasureTheory` using `gcongr`.
    Also add some missing `gcongr` lemmas.

[33mcommit c6d8fd7824b198125f13fc362a18d257b200b24b[m
Author: Scott Carnahan <128885296+ScottCarnahan@users.noreply.github.com>
Date:   Fri May 17 06:05:46 2024 +0000

    refactor (RingTheory/BinomialRing): replace Polynomial.eval with Polynomial.smeval (#11440)
    
    We replace the definition of binomial ring with one using a more general version of polynomial evaluation.  This makes it more natural to use only `ascPochhammer ‚Ñï` in theorems and avoid complications with polynomials that have coefficients in noncommutative rings.

[33mcommit 5c953d8d2055db47e3222f028a66927bbcfa0a67[m
Author: Mitchell Lee <trivial171@gmail.com>
Date:   Fri May 17 05:20:03 2024 +0000

    feat: the equational criterion for vanishing (#12647)
    
    Let $M$ and $N$ be modules over a commutative ring $R$. Following Lemma 8.16 of Altman and Kleiman's *A term of commutative algebra*, we prove some results about under what circumstances a sum of pure tensors $\sum_i m_i \otimes n_i \in M \otimes_R N$ vanishes. The *equational criterion for flatness* is not included in this pull request, but it is an easy consequence of these results.

[33mcommit 8bf14d131420f92d2f3300e6c0fb4ce4a4121401[m
Author: Kim Morrison <kim@tqft.net>
Date:   Fri May 17 01:34:08 2024 +0000

    chore: remove an unused congr lemma (#12567)
    
    This removes a `congr` lemma which is unused in Mathlib, and on Lean `master` can trigger exponential behaviour. (edit: in fact, the remaining congr lemma here still triggers exponential behaviour, just with a smaller exponent than with both) Seems safest to just get it out of the way, and I'll separately report the linear --> exponential change on `master`, as it may affect other congr lemmas which are harder to simply remove.
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit b6cc5394d8cb9203e29724f04d35fbcdf24b785a[m
Author: Kevin Buzzard <k.buzzard@imperial.ac.uk>
Date:   Fri May 17 01:00:18 2024 +0000

    feat: finite integral adeles are a topological ring. (#12965)

[33mcommit e8ad9817bda864c2fdc0bea31f13131cc222cf5d[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Fri May 17 01:00:17 2024 +0000

    doc(Topology): document three items (#12955)

[33mcommit b3faac95adcd7958b82fc6d00cdc994362936fda[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Fri May 17 00:23:39 2024 +0000

    refactor(OuterMeasure): assume `Disjoint` in `iUnion_nat` (#12894)
    
    The new condition is seemingly weaker than the old one,
    but in fact it is equivalent to it.

[33mcommit 0ce4969e3163fe38f6a793c9bf5275aa8c6d101b[m
Author: Mar√≠a In√©s de Frutos-Fern√°ndez <mariaines.dff@gmail.com>
Date:   Thu May 16 21:59:08 2024 +0000

    chore(Topology/Algebra/ContinuousAffineMap): change notation (#12864)
    
    We change the notation for `ContinuousAffineMap` from [‚ÜíA](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Topology/Algebra/ContinuousAffineMap.html#ContinuousAffineMap) to `‚Üí·¥¨`, so that `‚ÜíA` can be used for `ContinuousAlgHom` (see #12800).
    
    This seems consistent with the Mathlib notations [‚Üí·µÉ](https://leanprover-community.github.io/mathlib4_docs/Mathlib/LinearAlgebra/AffineSpace/AffineMap.html#AffineMap) for `AffineMap`  and [‚Üí‚Çê](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Algebra/Algebra/Hom.html#AlgHom) for `AlgHom`.

[33mcommit 6c4d20f9b57aa41aa82ffcd494cb2d6a2e5580b9[m
Author: samvang <59202064+samvang@users.noreply.github.com>
Date:   Thu May 16 21:29:47 2024 +0000

    feat(Mathlib/Order/PrimeSeparator): prime ideal separator in a bounded distributive lattice (#12705)
    
    We prove that a disjoint filter and ideal in a bounded distributive lattice can always be separated by a prime ideal. This is a step towards establishing Stone duality (currently in development here: https://github.com/samvang/StoneDualityInLean/)
    
    - [x] depends on: #12651 (ideals of sets are stable under directed unions and chains)

[33mcommit 579d547214c37ab53004a7175cc37204d1a0008b[m
Author: Scott Carnahan <128885296+ScottCarnahan@users.noreply.github.com>
Date:   Thu May 16 21:29:46 2024 +0000

    feat (RingTheory/HahnSeries/Basic): define orderTop, taking values in WithTop (#11965)
    
    The existing function `HahnSeries.order` requires the value type `Œì` to have `Zero` as the target of a junk value when the Hahn series vanishes.  This is okay for Laurent series, but fails for shifted Laurent series (which often appear in vertex algebras, and also formal expansions of solutions of Fuchsian diff. eqs at regular singular points).
    
    This PR introduces an order function that doesn't require `Zero`, but takes values in `WithTop Œì`.  It is essentially the underlying function of `HahnSeries.addVal`, but without several additional assumptions on the value and coefficient types.  We add some basic API for dealing with `WithTop`.

[33mcommit 7eebb5fb0b2d9ce1d540f7801f0779ba1b4de6d6[m
Author: FMLJohn <417963616@qq.com>
Date:   Thu May 16 20:36:53 2024 +0000

    feat(RingTheory/PowerSeries/WellKnown): the power series of `1 / ((1 - x) ^ (d + 1))` with coefficients in a commutative ring `S`, where `d : ‚Ñï`. (#11255)

[33mcommit 732a2b8a882ab7bcde680b3e320986804edece06[m
Author: Martin Dvo≈ô√°k <martin.dvorak@matfyz.cz>
Date:   Thu May 16 19:48:07 2024 +0000

    feat (Data/Matrix/Basic): `Matrix` versions of `neg_mul_neg` (#12901)

[33mcommit e7c71eb1d63792008401f3a1f754ff29729c9dae[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Thu May 16 18:36:16 2024 +0000

    chore: Reduce imports to `Data.Finset.Image` (#12832)

[33mcommit c9c95c046130d2a8e2602f53a6f0702581f7314e[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Thu May 16 17:21:59 2024 +0000

    doc(Dynamics/Flow): document missing entry (#12953)
    
    This is the only nolint entry in the Dynamics/ directory. While at this, slightly clean up the formatting of the file.

[33mcommit a2556302dc54ac54f37b002386c51d284c3edb49[m
Author: damiano <adomani@gmail.com>
Date:   Thu May 16 16:56:12 2024 +0000

    feat: `move-decls` prints more informative message for nameless instances (#12935)
    
    Fixes a suboptimal reporting of nameless instances in `move-decls`: nameless declarations get the whole line where they are defined printed, excluding `where`/`:=`.
    
    Reported in #12862.

[33mcommit 5a43e881c5b2aa3dd1cb539cfd056ac7c0911264[m
Author: Jeremy Toh <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Thu May 16 16:29:28 2024 +0000

    feat(Analysis/PSeries): add Schl√∂milch's generalization of the Cauchy condensation test (#8806)
    
    
    
    Co-authored-by: Jeremy Toh <7417963+deepimpactmir@users.noreply.github.com>

[33mcommit 95ac1e61bdd0f33d6ed2b0eef28d70cc9fe28d39[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Thu May 16 15:07:51 2024 +0000

    chore: Separate algebraic list lemmas (#12836)
    
    Resplit `Algebra.BigOperators.List.Basic` and `Algebra.BigOperators.List.Lemmas` into two new files:
    * `Algebra.BigOperators.Group.List` for lemmas that require group-like structures (`Monoid`, `Group`, ...)
    * `Algebra.BigOperators.Ring.List` for lemmas that require ring-like structures (`MonoidWithZero`, `Ring`, ...)
    
    Add `assert_not_exists Ring` in the former. Once https://github.com/leanprover-community/mathlib4/pull/11855 lands, it will be strenghtenable to `assert_not_exists MonoidWithZero`.

[33mcommit ac523ae6d334c8a98e8f9c15e2eb81c1b44a8f43[m
Author: Martin Dvo≈ô√°k <martin.dvorak@matfyz.cz>
Date:   Thu May 16 14:20:16 2024 +0000

    feat(Data/Matrix/Basic): 0 ‚â§ 1 (#12911)

[33mcommit dc75ecfadb9fc95b08f2668b88d64b26c11ab59b[m
Author: Anne Baanen <vierkantor@vierkantor.com>
Date:   Thu May 16 14:20:15 2024 +0000

    refactor: Turn Algebra.IsAlgebraic and Algebra.IsIntegral into classes (#12761)
    
    As [discussed on Zulip](https://leanprover.zulipchat.com/#narrow/stream/217875-Is-there-code-for-X.3F/topic/Typeclass.20for.20algebraic.20extension.20of.20fields.3F), this PR replaces the current definition of `Algebra.IsAlgebraic` and `Algebra.IsIntegral` with classes.
    
    The following main changes are required:
     * Since a class must be a structure, we can't identify `Algebra.IsAlgebraic R A` with `‚àÄ (x : A), IsAlgebraic R x`. Either use the projection `.isAlgebraic`, or use the new definition `Algebra.IsAlgebraic.isAlgebraic` which leaves the proof implicit. Idem for integral.
     * Turn `Algebra.IsAlgebraic` and `Algebra.IsIntegral` arguments into instance implicits; turn theorems with those as the conclusion into instances.
     * `Algebra.IsAlgebraic` is now `protected`, like `Algebra.IsIntegral`.
    
    The spelling `Algebra.IsAlgebraic.isAlgebraic x` and `Algebra.IsIntegral.isIntegral x` to prove an element `x` is algebraic/integral is kind of ugly, do you have better suggestions?

[33mcommit 4ee2b68335ad55b8c46fb90ffbbcfc2a69dff365[m
Author: Amelia Livingston <101damnations@github.com>
Date:   Thu May 16 13:54:42 2024 +0000

    feat: bialgebra isomorphisms (#11971)
    
    Isomorphisms of bialgebras. Mimics `Mathlib.Algebra.Module.Equiv`

[33mcommit 8079a741a8bfdf0085cb34ea4f6dec0db2072fb4[m
Author: Kim Morrison <kim@tqft.net>
Date:   Thu May 16 13:17:16 2024 +0000

    chore: generalize Prefunctor lemmas (#12951)
    
    Mysteriously these lemmas were specialized to the case the source and target quiver were the same.

[33mcommit b8d7525d5e093f9c67175e5128c72f083e0ec997[m
Author: Kim Morrison <kim@tqft.net>
Date:   Thu May 16 11:37:51 2024 +0000

    chore: namespace and tidy MonCat/GroupCat adjunctions (#12948)

[33mcommit f802c699568a7ff9dcc3475047cc1c8025246b72[m
Author: damiano <adomani@gmail.com>
Date:   Thu May 16 10:24:00 2024 +0000

    chore: adapt to multiple goal linter 7 (#12908)
    
    Missing cdots, un unused `congr` and a stray goal that was solved en-passant since the start of the linter at #12339.

[33mcommit 0f4f978f578019dc676a247d35b001be3f732636[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Thu May 16 10:23:59 2024 +0000

    chore: Move ring power lemmas earlier (#12818)
    
    After #12817, almost all lemmas can move from `Algebra.GroupPower.Ring` to earlier files at no cost.
    
    The few remaining lemmas could also move, but it would require a tiny bit more work.

[33mcommit 730684c92655a41b391fa63c5a2717a26e201d95[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Thu May 16 09:19:03 2024 +0000

    style(test/linarith): adapt to more mathlib style (#12931)
    
    - put `by` on the previous line
    - indent subsequent hypotheses by four spaces
    - indent conclusions also by four spaces
    - remove some double spaces

[33mcommit fafe8ea454b0e0fbc80fb56afbb5391345b14eb8[m
Author: Emily Riehl <eriehl@jhu.edu>
Date:   Thu May 16 09:19:02 2024 +0000

    feat(CategoryTheory): the adjunction between Over.map and Over.baseChange (#12927)
    
    When a category has pullbacks, any morphism gives rise to an adjunction between over categories, with the left adjoint defined by composition and the right adjoint defined by pullback. This PR contains a definition of that adjunction.

[33mcommit 93a7eba81c8a247645634ebc79d3d94830b3fac8[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Thu May 16 09:19:00 2024 +0000

    chore(LapMatrix): `Œ±` -> `R` (#12868)

[33mcommit 837a98af60a3a6c0da4a7012870b6ce3ee8cfc42[m
Author: L <hi@llllvvuu.dev>
Date:   Thu May 16 09:18:59 2024 +0000

    feat: natCast versions of some Rat.intCast lemmas (#12814)
    
    also some golf
    
    
    
    Co-authored-by: L Lllvvuu <git@llllvvuu.dev>

[33mcommit 701792087f755d43e8a15f5e97e8750b2e3e096d[m
Author: Kim Morrison <kim@tqft.net>
Date:   Thu May 16 08:10:38 2024 +0000

    chore: use `@[deprecated (since := "YYYY-MM-DD")]` (#12947)
    
    This is far from exhaustive, but perhaps can get the ball rolling.

[33mcommit 15aadce985bca903e04026735bb97c137407c411[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Thu May 16 08:10:37 2024 +0000

    feat: IsBezout.associated_gcd_gcd (#12941)

[33mcommit 727c4bcd221ef8565e3e1ca42cccebc21e65c52f[m
Author: David Loeffler <d.loeffler.01@cantab.net>
Date:   Thu May 16 08:10:36 2024 +0000

    refactor(MeasureTheory/OuterMeasure): split large file (#12939)
    
    This PR (which supersedes #12895) splits up `OuterMeasure/Basic` (1700 lines) into 5 pieces of < 500 lines each.
    
    Co-authored-by: @urkud
    
    
    
    Co-authored-by: Yury G. Kudryashov <urkud@urkud.name>

[33mcommit 01634dbc38014c110c4b5c3b39991f3adbd8bef3[m
Author: damiano <adomani@gmail.com>
Date:   Thu May 16 08:10:35 2024 +0000

    feat: report no unpaired declarations (#12932)
    
    When adding the label `move-decls`, the bot would silently do nothing if there are no unmatched declarations.  This PR makes the bot report that no declarations were lost.
    
    See #12425 for an example where the bot did nothing.

[33mcommit 2bff23430d1b714a6c212ce750b5fac093d6b78b[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Thu May 16 08:10:34 2024 +0000

    chore: Move basic `Int` lemmas earlier (#12821)
    
    A bunch of lemmas about `Int` can be moved to `Data.Int.Defs` at little cost. This PR moves them and deletes the now empty `Data.Int.Div` and `Data.Int.Dvd.Basic`.
    
    The story is that those lemmas used to rely on lemmas proved for algebraic order structures, hence required the algebraic order instances on `Int` to be available. In Lean 4, those preliminary lemmas have been special-cased to `Nat` and `Int`, so there is no need for the general instances anymore (at least in basic files).

[33mcommit efc0554ac5998aa9142bbb77ab6b6ae36d8a467f[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Thu May 16 08:10:33 2024 +0000

    feat: minor API lemmas for (Add)MonoidAlgebra.mapDomainAlgHom (#12764)
    
    Co-authored-by: negiizhao <egresf@gmail.com>

[33mcommit 24b0c39d0b21189400717923bd6f3871a72a959a[m
Author: David Kurniadi Angdinata <dka31@cantab.ac.uk>
Date:   Thu May 16 07:16:08 2024 +0000

    feat(NumberTheory/EllipticDivisibilitySequence): expose the auxiliary sequence (#10814)
    
    Expose the auxiliary sequences associated to normalised elliptic divisibility sequences along with their corresponding API, and fix the comments under implementation notes. This is needed to define $n$-division polynomials of elliptic curves in a later downstream file as univariate polynomials with the factor of the bivariate $2$-division polynomial omitted.

[33mcommit 1666977d222e1e7a175fa38e8fa51abf75fef1ed[m
Author: damiano <adomani@gmail.com>
Date:   Thu May 16 00:33:58 2024 +0000

    feat: new noisy check (#12886)
    
    This PR restructures a little the noisy tests, exploiting the new `lake` replay feature.
    
    Moreover, it catches previously uncaught noise:
    * see #12884 for a noisy file that passes the old CI;
    * see #12885 for the same noisy file that does not pass the new CI.
    
    Note that linter warnings and `sorry`s are also not caught by the old CI:
    * #12910;
    * #12912;
    * #12913.

[33mcommit 9a16dad8ad262b1b073259e3af6dd4aff40c0224[m
Author: damiano <adomani@gmail.com>
Date:   Wed May 15 23:30:34 2024 +0000

    fix: make sure that `simp_rw` focuses (#12940)
    
    This used to work before the fix.  The fix breaks it.
    
    ```lean
    import Mathlib.Tactic
    
    example {n : Nat} (hn : n = 0) : (n = 0) ‚àß (n = 0) := by
      constructor
      simp_rw [hn, hn]  -- does this work?
    ```
    
    [Zulip thread](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/.60simp_rw.60.20puzzle)

[33mcommit a77c10e0a793b20b2ea954ef092b47968f7fa6e5[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Wed May 15 20:27:18 2024 +0000

    chore: Delete `Data.Nat.Units`, `Data.Int.Units` (#12835)
    
    The lemmas can easily move to `Algebra.Group.Nat` and `Algebra.Group.Int`, `Algebra.Ring.Int` respectively.

[33mcommit 4417a5a62ed1caffd53ae75ddd064f60932878f9[m
Author: Mar√≠a In√©s de Frutos-Fern√°ndez <mariaines.dff@gmail.com>
Date:   Wed May 15 20:27:17 2024 +0000

    feat(Topology/Algebra/NormedValued): add correspondence (#12432)
    
    Nontrivial nonarchimedean norms correspond to rank one valuations.

[33mcommit e852701e3115c24d846e5432068a49ab6eaef344[m
Author: Riccardo Brasca <riccardo.brasca@gmail.com>
Date:   Wed May 15 19:02:24 2024 +0000

    feat(Mathlib.NumberTheory.FLT.Three): add `FermatLastTheoremForThree_of_FermatLastTheoremThreeGen` (#12767)
    
    We add `FermatLastTheoremForThree_of_FermatLastTheoremThreeGen`: o prove `FermatLastTheoremFor 3`, it is enough to prove `FermatLastTheoremForThreeGen`. Here `FermatLastTheoremForThreeGen` is more general than `FermatLastTheoremFor 3`, but it is needed to make a descent argument working.
    
    From the flt3 project at LFTCM2024.

[33mcommit 830a482be85959ad8349c9fa874c6e9cab208d78[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Wed May 15 17:20:06 2024 +0000

    chore: Remove algebra imports to `Data.Fin.Basic` (#12862)
    
    Move the algebraic instance on `Fin n` from `Data.Fin.Basic` to a new file `Algebra.Group.Fin`. I credit Yakov for https://github.com/leanprover-community/mathlib/pull/5010.
    
    The one bit of algebra that is still imported in `Data.Fin.Basic` is `NeZero`. This is in prevision of its future upstreaming to Batteries or Std.

[33mcommit 7926a8b7b7021c107e1a6bb8c58eb47e49a08e64[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Wed May 15 16:06:17 2024 +0000

    feat(CategoryTheory/Sites): 1-hypercovers (#12803)
    
    This PR defines a notion of `1`-hypercovers in a category `C` equipped with a Grothendieck topology `J`. A covering of an object `S : C` consists of a family of maps `f i : X i ‚ü∂ S` which generates a covering sieve. In the favourable case where the fibre products of `X i` and `X j` over `S` exist, the data of a `1`-hypercover consists of the data of objects `Y j` which cover these fibre products. We formalize this notion without assuming that these fibre products actually exists. If `F` is a sheaf and `E` is a `1`-hypercover of `S`, we show that `F.val.obj (op S)` is a multiequalizer of suitable maps `F.val.obj (op (X i)) ‚ü∂ F.val.obj (op (Y j))`.
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit 600a5fa3828fef53b2fa20d30dc8e1fb51ce0f98[m
Author: Pol'tta / Miyahara K≈ç <pol_tta@outlook.jp>
Date:   Wed May 15 13:09:17 2024 +0000

    feat: port `cc` tactic (2/3) (#11960)
    
    In this PR, we implements process when an new equation is added to a congruence closure.
    Also, `Lean.Expr.relSidesIfSymm?` is removed in #11162, but this def is required for `cc` tactic, so we recover this.
    
    
    
    Co-authored-by: Pol'tta / Miyahara K≈ç <52843868+Komyyy@users.noreply.github.com>

[33mcommit 1c03c34db6c5625eec3f7b6599b7a7d45588985a[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Wed May 15 12:42:23 2024 +0000

    feat(Probability): add lemma `IdentDistrib.inv` (#12918)

[33mcommit c5f6c2d604d163f18726bc6730b4ff04c2b45a24[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Wed May 15 12:02:20 2024 +0000

    feat(CategoryTheory/Limits): add classes `ReflectsFiniteLimits` and friends (#12909)
    
    This PR adds classes `ReflectsFiniteLimits`, `ReflectsFiniteProducts` and their duals, and relates them to existing classes.
    
    It also cleans up the file `CategoryTheory.Limits.Preserves.Finite` a bit and removes some porting notes that are no longer relevant.

[33mcommit 880c4cb8ec6a5ad2ad6f7917f35c20773bbe8126[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Wed May 15 11:20:18 2024 +0000

    feat(CategoryTheory/Triangulated): t-structures (#12619)
    
    This PR defines t-structures on (pre)triangulated categories.
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit a9502f00a7abd7a09a2db74992f6f296fdf8e93b[m
Author: Chris Birkbeck <c.birkbeck@ucl.ac.uk>
Date:   Wed May 15 11:20:17 2024 +0000

    Eisenstein series uniform convergence (#10377)
    
    We show that the sum defining an Eisenstein Series converges locally uniformly. This is the basis for later proving that they are holomorphic (see #11013 ) and bounded at infinity (see #12456), which combine to show they are modular forms (see #12604).
    
    
    
    
    Co-authored-by: Chris Birkbeck <c.birkbeck@uea.ac.uk>
    Co-authored-by: David Loeffler <d.loeffler.01@cantab.net>

[33mcommit 403f769cdc263f5f8758fbdfcc662f08b7fe01d9[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Wed May 15 10:47:54 2024 +0000

    chore: cardFactors_zero/one don't need to be dsimp lemmas (#12925)

[33mcommit 9fcecd5c7ef667b2b7ea3ea97b4d9982ffd8186e[m
Author: Wojciech Nawrocki <wjnawrocki+gh@protonmail.com>
Date:   Wed May 15 10:47:53 2024 +0000

    doc: remove spurious parenthesis (#12876)
    
    
    
    Co-authored-by: Wojciech Nawrocki <wjnawrocki@protonmail.com>

[33mcommit a93dd6163df4c23771675022e69f1626a1778a00[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Wed May 15 10:47:51 2024 +0000

    feat(CategoryTheory/Monoidal): the curried associator isomorphism (#11701)
    
    This PR introduces `curriedAssociatorNatIso : bifunctorComp‚ÇÅ‚ÇÇ (curriedTensor C) (curriedTensor C) ‚âÖ bifunctorComp‚ÇÇ‚ÇÉ (curriedTensor C) (curriedTensor C)` which is a formulation of the associator isomorphism in a monoidal category as an isomorphism between trifunctors `C ‚•§ C ‚•§ C ‚•§ C`. A little cleanup of the file `CategoryTheory.Monoidal.Category` is also done.

[33mcommit 3e51ad145c59d7e879943907172a6c5a89d6420c[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Wed May 15 09:43:16 2024 +0000

    move(Algebra/Parity): Split file (#12829)
    
    Parity of elements in a group/ring is a basic algebraic concept, but it currently requires importing a bunch of algebraic order theory. As a consequence, `Algebra.Parity` currently holds a bunch of lemmas that really belong in earlier files but cannot due to import cycles.
    
    This PR moves the content of `Algebra.Parity` to
    * `Algebra.Group.Even` for the definition of `IsSquare` and `Even`
    * `Algebra.Ring.Parity` for the definition of `Odd` and ring properties of `Even`
    * `Algebra.Order.Group.Abs`, `Algebra.Order.Ring.Abs`, `Algebra.Order.Ring.Canonical`, `Algebra.Order.Sub.Canonical`, `Algebra.GroupPower.Order` for the various algebraic order properties of `Even` and `Odd`
    
    As a result, `Even`/`Odd` are available much more widely without awkward dependencies and algebraic order lemmas are now in the correct files. The only slight downfall is that two lemmas in `Algebra.Ring.Parity` are stated using `Set.range`, hence I had to weaken a few `assert_not_exists` to forbidding `Data.Set.Basic` instead of `Data.Set.Defs`. This is inconsequential.
    
    A side-effect of this PR is that I had to move some `bit0`/`bit1` lemmas. I could not find anywhere sensible to put them, so I am currently keeping them in `Algebra.Parity`. As a result, I had to reprove a few lemmas in `Algebra.GroupPower.Order`. I took the opportunity to generalise them.
    
    This is a followup to https://github.com/leanprover-community/mathlib/pull/17391 motivated by https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Mathlib.2EAlgebra.2EAssociated and the move-only part of #11863.

[33mcommit c93482b4ae91d407c9352063de8aae88b98cc576[m
Author: Oliver Nash <github@olivernash.org>
Date:   Wed May 15 09:43:15 2024 +0000

    feat: Cartan subalgebras contain only semisimple elements if the Killing form is non-singular and the coefficients are a perfect field. (#12712)
    
    This PR contains the following changes:
    
     * The headline result: `LieAlgebra.IsKilling.isSemisimple_ad_of_mem_isCartanSubalgebra`
     * Necessary supporting lemmas in linear algebra / order theory

[33mcommit 3b462daa45f893202693b13e3965a7b4e1e7b631[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Wed May 15 08:45:09 2024 +0000

    feat: `Set.diff_subset_compl` (#12921)

[33mcommit 5cc7b947db750213fce7c21be285a73e2c868972[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Wed May 15 06:18:12 2024 +0000

    feat: `Algebra.adjoin R s` is `span R {1} ‚äî s.toSubmodule` (#12889)
    
    This relates several unital and non-unital subobject closures to each other the to various counterparts.
    
    This is one of the key steps towards establishing that `C(s, ùïú)‚ÇÄ` is the closure of the non-unital star subalgebra generated by the identity function, when `s` is compact and `RCLike ùïú`. This, in turn, is essential for writing instances of the continuous functional calculus for non-unital algebras.

[33mcommit 7c3b8eaa0c1af599a1888601b13bdb27ffcb26f8[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Wed May 15 06:18:11 2024 +0000

    feat: relate `IsStarNormal` and `IsSelfAdjoint` to `Unitization` (#12641)

[33mcommit 58e3150bfe06b433e731845eb1039d2572503930[m
Author: Kim Morrison <kim@tqft.net>
Date:   Wed May 15 01:39:22 2024 +0000

    chore: fix deprecations (#12920)
    
    Deprecations in dot notations are not visible on master yet, so I have to keep backporting them from nightly-testing!

[33mcommit db320814afbe75d058939de016389d9a179af9a8[m
Author: Kim Morrison <kim@tqft.net>
Date:   Wed May 15 00:25:53 2024 +0000

    chore: remove import from Tactic/Simps (#12890)

[33mcommit 1f4dc0506e95a02849fab94b165c167f6706a0c0[m
Author: Kim Morrison <kim@tqft.net>
Date:   Tue May 14 23:22:35 2024 +0000

    chore: robustify proofs against leanprover/lean4#4061 (#12906)
    
    leanprover/lean4#4061 results in well-founded definitions being irreducible by default.
    
    This PR robustifies some proofs. (Sometime over-robust: we're going to keep `minFacAux` as semireducible for now, so e.g. `Nat.Prime 5` will still be decidable.)

[33mcommit 7a69696da6d3bc23f186ab1f507b3e5bfcd73bd0[m
Author: Anne Baanen <vierkantor@vierkantor.com>
Date:   Tue May 14 21:45:12 2024 +0000

    chore(Data.Finset): un-`@[simp]` `filter_{true,false}_of_mem` (#12907)
    
    These are okay `@[simp]` lemmas in principle but sometimes discharging the hypothesis is very expensive.
    
    This PR adds some extra `@[simp]` lemmas instead; those should reduce the impact of the change quite a lot.
    
    Zulip thread: https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Near-timeout.20in.20.60mulEnergy_card_filter.60
    
    
    
    Co-authored-by: Johan Commelin <johan@commelin.net>
    Co-authored-by: Matthew Ballard <matt@mrb.email>

[33mcommit 56dc11acbb70003be7761bcd6a876aed8045223f[m
Author: Kyle Miller <kmill31415@gmail.com>
Date:   Tue May 14 17:58:04 2024 +0000

    chore: deprecate `@[pp_dot]` (#12609)
    
    Now that we're on Lean v4.8.0-rc1, there's no need for `@[pp_dot]` due to the new `pp.fieldNotation.generalized` feature. This PR removes all uses of `@[pp_dot]` and makes it emit a warning that it's been deprecated.
    
    The new feature does not pretty print proof terms with dot notation, so there is a small regression for `Eq.symm`, `Eq.trans`, and, sometimes, `False.elim`. However, `pp.proofs` is false by default.

[33mcommit 7193bb34ca890eab0a361167b88ba598bf874c90[m[33m ([m[1;31morigin/mckoen/simplicial[m[33m)[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Tue May 14 16:33:04 2024 +0000

    feat: RingCon.coe_bot (#12860)
    
    Useful in FLT

[33mcommit b1087dd1d2d0075153f5ecffd8848d43cf02c042[m
Author: Peter Nelson <71660771+apnelson1@users.noreply.github.com>
Date:   Tue May 14 15:22:42 2024 +0000

    feat(Logic/Equiv/Set): `swap` is `BijOn` (#12877)
    
    We prove two lemmas, stating that `Equiv.swap a b` is `BijOn s t`, where `t = s` if both or neither `a` or `b` belong to `s`, and `t = s - a + b` if `a ‚àà s` and  `b ‚àâ s`.

[33mcommit 75fbe69de08fd6936cfb1b6e4cf1832b4871b015[m
Author: Kim Morrison <kim@tqft.net>
Date:   Tue May 14 11:17:05 2024 +0000

    chore: backport fixes to deprecation warnings (#12905)

[33mcommit 5c39c662b813740183b8fb64fc8d6e98898ee4f7[m
Author: Christian Merten <christian@merten.dev>
Date:   Tue May 14 10:23:08 2024 +0000

    feat(CategoryTheory/Galois): prorepresentability of fiber functors (#12839)
    
    We show that a fiber functor of a Galois category is pro-represented by the system of pointed Galois objects. We also introduce the system of automorphism groups (seen as objects of `C`) of the pointed Galois objects.
    
    This is used in a follow-up PR to establish a group isomorphism between the automorphism group of a fiber functor and the limit of the automorphism groups of the Galois objects.

[33mcommit 96941f1a3aa3f99cb16d784701b1d567e098119f[m
Author: Kim Morrison <kim@tqft.net>
Date:   Tue May 14 09:16:00 2024 +0000

    chore: rename Name.getString -> Name.lastComponentAsString (#12891)

[33mcommit 0409a2fdbd4794d366b45ab8ca300170d8901496[m
Author: Kim Morrison <kim@tqft.net>
Date:   Tue May 14 08:50:02 2024 +0000

    chore: run lean4checker daily (#12900)

[33mcommit aad19d883960cbdd1807a3c31ef7a351c3f0c733[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Tue May 14 08:20:36 2024 +0000

    docs(Condensed): add link to youtube playlist where light condensed sets are defined (#12898)

[33mcommit c36fe2723075b930e8460cf0574d2b32406e8c96[m
Author: Amelia Livingston <101damnations@github.com>
Date:   Tue May 14 07:39:18 2024 +0000

    feat: bialgebra homomorphisms (#11962)
    
    Homomorphisms of bialgebras, mimicking the file `Mathlib.Algebra.Algebra.Hom`.

[33mcommit fd0d405ac9817dda3cb156f21204d8159c08b538[m
Author: Kim Morrison <kim@tqft.net>
Date:   Tue May 14 17:05:28 2024 +1000

    chore: lake build ProofWidgets required for lean4checker (#12896)
    
    See
    [zulip](https://leanprover.zulipchat.com/#narrow/stream/345428-mathlib-reviewers/topic/lean4checker.20failure/near/438511155).

[33mcommit 6219398adec669624adbfd0bbc68d19c4dac485a[m
Author: Kim Morrison <kim@tqft.net>
Date:   Tue May 14 03:32:21 2024 +0000

    chore: bump dependencies (#12893)

[33mcommit 9c490430cbbd7b85fe7d695fcb877a0104b229d5[m
Author: Junyan Xu <junyanxumath@gmail.com>
Date:   Tue May 14 00:37:35 2024 +0000

    chore(EllipticCurve/Affine): add capitalization to Props `equation` and `nonsingular` (#12874)
    
    
    
    
    
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>

[33mcommit 5602b56c4973aaa10197529824fa3d0148756be6[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Tue May 14 00:12:47 2024 +0000

    feat(Condensed): light condensed objects (#11586)
    
    New foundations for analytic geometry based on light condensed sets are being developed by Clausen-Scholze (see [this youtube playlist](https://www.youtube.com/playlist?list=PLx5f8IelFRgGmu6gmL-Kf_Rl_6Mm7juZO)).
    
    This PR defines light condensed objects.
    
    - [x]¬†depends on: #8613
    - [x] depends on: #8643
    - [x] depends on: #8674
    - [x] depends on: #8676
    - [x] depends on: #8678
    - [x] depends on: #9513
    - [x] depends on: #11585

[33mcommit ed65b090759f99491272bcd82aa73078e5e90d4e[m
Author: Kim Morrison <kim@tqft.net>
Date:   Tue May 14 09:58:37 2024 +1000

    chore: run lean4checker cron frequently while we're debugging (#12888)

[33mcommit 8fa5a362326170434e9487fd06f3b4628b216ddf[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Mon May 13 22:54:15 2024 +0000

    fix(Algebra/Algebra/Equiv): fix deprecation message (#12873)
    
    ... and add its deprecation date.

[33mcommit 2aa7868f00f2fb067bffd0a096a03921ca8193e8[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Mon May 13 22:13:55 2024 +0000

    chore: Don't use `ring` in `Data.Int.ModEq` (#12872)
    
    This is an attempt at a more principled fix than #12871. The uses of `ring` were very superficial. Two of them were just `abel` and the last one was trivial.
    
    This is motivated by #10765, "ring modulo a given characteristic".

[33mcommit 73946d00b846cb2658bdf7ada46ce00aa1d76928[m
Author: David Loeffler <d.loeffler.01@cantab.net>
Date:   Mon May 13 21:00:58 2024 +0000

    feat(NumberTheory/LSeries): Odd Hurwitz zeta functions (#12779)
    
    This PR adds the analytic continuation and functional equation for the odd part of the Hurwitz zeta function.

[33mcommit 281655a9f4017134e32060d311dfd78c9c026b7f[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Mon May 13 15:49:27 2024 +0000

    chore: Delete `Data.Int.Dvd.Pow` (#12823)
    
    These three lemmas are oddly stated and completely unused in mathlib.

[33mcommit de055554b85fc4f589e26945839550da352038e0[m
Author: Mar√≠a In√©s de Frutos-Fern√°ndez <mariaines.dff@gmail.com>
Date:   Mon May 13 15:49:26 2024 +0000

    feat(RingTheory.DedekindDomain.Factorization): add factorization of fractional ideals (#7778)
    
    We show that every nonzero fractional ideal `I` of a Dedekind domain `R` can be factored as a finprod `‚àè_v v^{n_v}` over the maximal ideals of `R`, where the exponents `n_v` are integers. We define `FractionalIdeal.count K v I`  to be `n_v`, and we prove some of its properties.
    
    
    
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>
    Co-authored-by: Vierkantor <vierkantor@vierkantor.com>

[33mcommit 047b7166c39c7ea21a21be1b0ba4d1161e3bb2e3[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Mon May 13 14:42:10 2024 +0000

    chore: mark Prop.bot_eq_false/top_eq_true as simp (#12865)
    
    It seems unlikely that you'd ever want to keep these around.

[33mcommit 7384a70aadb2dd9cb8d4068108ad0ba7c4289b85[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Mon May 13 14:42:09 2024 +0000

    chore: Delete `Algebra.GroupPower.Hom` (#12817)
    
    After #12736, `powMonoidHom` and `zpowGroupHom` can move to `Algebra.Group.Hom.Basic` at no cost. This PR moves them and deletes the now empty `Algebra.GroupPower.Hom`.

[33mcommit c551dcc6871ab8ab21f81986182dd623670f1713[m
Author: damiano <adomani@gmail.com>
Date:   Mon May 13 14:42:07 2024 +0000

    chore: adapt to multiple goal linter 4 (#12381)
    
    This PR was reduced by approximately half of its original size: the other half of this PR is now the content of #12560.
    
    This PR was reduced by approximately half of its halved size: the other half of the halved PR is now the content of #12834.
    
    A PR analogous to the merged PRs #12338, #12361 and #12372: reformatting proofs following the multiple goals linter of #12339.
    
    This should be the last of the adaptations.

[33mcommit a5eb48ce9eb3a014115cc27e69f022a7d2edd44e[m
Author: damiano <adomani@gmail.com>
Date:   Mon May 13 14:15:41 2024 +0000

    fix: remove consecutive backticks (#12866)
    
    Fixes a formatting issue in the output of `move-decls`.
    
    As reported in #12829.
    
    On that PR, the new script reports
    
    ***
    
    * `+` Additive.instDecidablePredEven
    * `--` [DecidablePred
    * `-` even_abs
    * `+` isSquare_mabs
    * `+` Multiplicative.instDecidablePredIsSquare

[33mcommit 562580571788676ae5ccb7829f2f84b06175ee4a[m
Author: Patrick Massot <patrickmassot@free.fr>
Date:   Mon May 13 14:15:40 2024 +0000

    chore: speed up a proof of Baire (#12842)
    
    See the [Zulip discussion](https://leanprover.zulipchat.com/#narrow/stream/270676-lean4/topic/trace.2Eprofiler.2Eoutput/near/438027363).

[33mcommit cd37814c0fd5af75f87d17e9e20bab7fbc4d7130[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon May 13 13:38:41 2024 +0000

    feat: define `MeasureTheory.OuterMeasureClass` (#12855)

[33mcommit 7131ad0791a62abed4aaa7dc6d54f5cd30f4f652[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Mon May 13 12:50:53 2024 +0000

    refactor: generalize `SpectrumRestricts` to the `QuasispectrumRestricts`, preserving API (#12643)

[33mcommit cec3ec0be2b624a38a6d59dd8f51f2377e946144[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Mon May 13 11:45:26 2024 +0000

    chore: Delete `Algebra.GroupWithZero.Power` (#12825)
    
    After #12736, all lemmas in `Algebra.GroupWithZero.Power` can move to the earlier files where they belong. The changes to their proofs are minimal. It's just a matter of using the new Lean 4 `Nat`- and `Int`-specific lemmas instead of the generic algebraic order ones.

[33mcommit 3532a06505ac8433699f773f1f73a78c4af608de[m
Author: Kim Morrison <kim@tqft.net>
Date:   Mon May 13 09:51:36 2024 +0000

    chore: further backports from bump/nightly-2024-05-11 (#12861)

[33mcommit d508ba884880c21dc41ef3fd946f79da98440ccd[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Mon May 13 09:51:35 2024 +0000

    chore: Move power lemmas earlier (#12736)
    
    Move a bunch of `pow` lemmas from `Algebra.Group.Commute.Defs` and `Algebra.GroupPower.Basic` to `Algebra.Group.Defs` and `Algebra.Group.Basic` with little to no changes to their proofs.

[33mcommit 3844ad737d05418089749438fc9e9ad29a00b8c5[m
Author: Mitchell Lee <trivial171@gmail.com>
Date:   Mon May 13 09:51:34 2024 +0000

    feat: completion of a nonarchimedean additive group (#12669)
    
    We prove that the completion of a nonarchimedean additive group is a nonarchimedean additive group.
    
    Detailed comments are included because I could not find a proof in the literature anywhere.
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit b99b683c226976453923688aab7fd4f76614708e[m
Author: damiano <adomani@gmail.com>
Date:   Mon May 13 08:49:08 2024 +0000

    chore: adapt to multiple goal linter 6 (#12834)
    
    Another halfway split of #12381 on the way to #12352.
    
    
    
    Co-authored-by: Michael Rothgang <rothgami@math.hu-berlin.de>
    Co-authored-by: grunweg <rothgami@math.hu-berlin.de>

[33mcommit 89b382e9400ffb6e6345583b3b2241befa71294f[m
Author: Kim Morrison <kim@tqft.net>
Date:   Mon May 13 07:14:02 2024 +0000

    feat: backport adaptations for nightly-2024-05-11 (#12854)
    
    In https://github.com/leanprover/lean4/pull/4061, well-founded definitions become irreducible by default, and hence some `rfl` proofs stop working.
    
    This pre-emptively backports some of the adaptations from #12853.

[33mcommit 2c9afeb50f915f50427e046f53327f85ccfe0cd2[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Mon May 13 07:14:01 2024 +0000

    chore: Reduce imports to `Data.Fin.Basic` (#12828)
    
    By using `Nat` and `Int` specific lemmas, we can reduce the import to `Data.Fin.Basic` to almost nothing.
    
    I haven't gone all the way to removing all dependencies because that involves moving declarations around and I would like to keep the diff clean.

[33mcommit fe7bf3bd77def507e235fe6798db661fa2478d0d[m
Author: Chris Birkbeck <c.birkbeck@uea.ac.uk>
Date:   Mon May 13 07:14:00 2024 +0000

    Define the cotangent function. (#12758)
    
    We define the cotangent function as cos/sin
    
    
    Co-authored-by: Chris Birkbeck <c.birkbeck@ucl.ac.uk>

[33mcommit 12b9e3064e35636d35f0c349bf2be29fb9b75bf2[m
Author: Kim Morrison <kim@tqft.net>
Date:   Mon May 13 06:20:11 2024 +0000

    chore: run lean4checker cron on hoskinson (#12859)
    
    The job was being cancelled, possibly because it consumes more memory than allowed on a github runner. This PR moves the job to the Hoskinson machines.

[33mcommit 9147b87a395fc6cf0ac3443e4175e1f4afac03cc[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Mon May 13 06:20:10 2024 +0000

    chore: use refine instead of refine' (#12851)
    
    In three files which are modified in #12834 or #12381: in my opinion, the unprimed version makes these modifications easier to read.

[33mcommit aa5da7670f08422913135d120c3d912247e504e3[m
Author: Etienne <etienne.marion@ens-lyon.fr>
Date:   Mon May 13 06:20:09 2024 +0000

    feat: add algebra of sets (#12467)
    
    Define the notion of algebra of sets and prove basic properties.
    Define the algebra of set generated by a family and prove basic properties.
    Prove that the algebra of sets generated by a countable family is countable.
    
    
    
    Co-authored-by: Etienne <66847262+EtienneC30@users.noreply.github.com>

[33mcommit ab1a7fbd22a5daec848143888c480f92bf055621[m
Author: damiano <adomani@gmail.com>
Date:   Mon May 13 05:55:04 2024 +0000

    feat: add `move-decls`-driven action and shorter PR diff (#12844)
    
    Adding the label `move-decls` triggers an action that comments on the PR a guess of which declarations have been added/removed in the current PR.
    
    The expectation is that for a PR that just moves declarations around, the `move-decls`-reported diff will be (ideally) empty.  In practice, since the script is text-based, this may not be the case, but it should still help focus the effort of the reviewers.
    
    As an example, you can see what the script would report for the current PR that fakes a modification of two declarations.
    
    Finally, you can run this locally using
    ```bash
    ./scripts/no_lost_declarations.sh short
    ```

[33mcommit 494bef5752a65e2fb9d9c64e0147bbd88a9e570a[m
Author: Kim Morrison <kim@tqft.net>
Date:   Mon May 13 02:40:38 2024 +0000

    feat: add count_heartbeats! command, and tactic mode count_heartbeats (#9733)
    
    Per discussion on [zulip](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/noisy.20.60FilteredColimitCommutesFiniteLimit.60/near/412771369).
    
    Example usage:
    ```
    count_heartbeats! in
    def f := 37
    ```
    displays the info message `Min: 7 Max: 8 StdDev: 14%`.
    
    There is also a `count_heartbeats simp` tactic combinator, and `count_heartbeats! simp` that runs 10 times and prints the range and stddev.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>
    Co-authored-by: damiano <adomani@gmail.com>
    Co-authored-by: adomani <adomani@gmail.com>

[33mcommit 05ee88bd9c57baa5800c0eeb8b80fbd26c29700a[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Sun May 12 23:39:32 2024 +0000

    feat: Positivity extension for `NNRat.num`/`NNRat.den` (#12732)
    
    From LeanAPAP

[33mcommit b897a62af4b2a28230c21f316a7f8e19b3d3ceab[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Sun May 12 23:01:45 2024 +0000

    chore: remove some stream-of-conciousness syntax for obtain (#12850)
    
    Similar to #11045; discovered in #12834.

[33mcommit efb49d2695e2af5fd74d2519e0e9954732fe43f9[m
Author: damiano <adomani@gmail.com>
Date:   Mon May 13 00:35:06 2024 +0200

    fix: use the right version of leanchecker (#12831)

[33mcommit beee06bc064b2ef3fc8bd98f45c7aeca216742a4[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sun May 12 21:05:20 2024 +0000

    feat: add `ENNReal.coe_div_le` (#12848)

[33mcommit 35c76a03d5fdf75b010aa60c573ee83af62be54c[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sun May 12 17:59:35 2024 +0000

    chore(OuterMeasure): golf some proofs (#12826)

[33mcommit 61fdb6c6be8e4974b0dd33b3fb28021465bd4f1f[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Sun May 12 16:16:54 2024 +0000

    chore(CategoryTheory/Sites): generalise universes for extensive sheaves (#12801)

[33mcommit 3fc1e3dd06f8dcee4decf68146aa279ff08452bc[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Sun May 12 16:16:53 2024 +0000

    refactor(CategoryTheory/Adjunction): make uniqueness of adjoints independent of opposites (#12625)

[33mcommit 2cff788834b4c533f7438cf1316023d67a30cad5[m
Author: Michael Stoll <Michael.Stoll@uni-bayreuth.de>
Date:   Sun May 12 15:50:54 2024 +0000

    chore: remove unnecessary imports (#12833)
    
    This removes an import each from two files, as suggested by `shake` in [#12778](https://github.com/leanprover-community/mathlib4/pull/12778).

[33mcommit 3f8be61e1cfb12e7c067d481bc44b7d75bfeedc3[m
Author: Xavier Roblot <roblot@math.univ-lyon1.fr>
Date:   Sun May 12 15:16:41 2024 +0000

    chore: change `InnerProductSpace.complexToReal` to a definition (#12840)
    
    The instance [docs#InnerProductSpace.complexToReal](https://leanprover-community.github.io/mathlib4_docs/find/?pattern=InnerProductSpace.complexToReal#doc) create some diamond with [docs#PiLp.innerProductSpace](https://leanprover-community.github.io/mathlib4_docs/find/?pattern=PiLp.innerProductSpace#doc), see [Zulip](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Problem.20with.20.60EuclideanSpace.20.E2.84.82.20.CE.B9.60.20as.20.60InnerProductSpace.20.E2.84.9D.60/near/438183797).
    
    This PR changes this instance to a def instead and add the instance
    ```lean
    instance : InnerProductSpace ‚Ñù ‚ÑÇ := innerProductSpace.complexToReal
    ```

[33mcommit 26781d580e88c4c928cf5e007ffb94365746d817[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Sun May 12 12:47:41 2024 +0000

    feat(LightProfinite): `LightProfinite` is precoherent (#11585)
    
    This PR gives the characterisation effective epi \iff epi \iff continuous surjection in `LightProfinite`, following the same approach as for `CompHaus`, `Profinite` and `Stonean`. We conclude that `LightProfinite`¬†is preregular and finitary extensive, hence precoherent, allowing the definition of light condensed sets (done in #11586).

[33mcommit 11471621f49e3bd5f63828e41cf204a4ec689042[m
Author: FR <zhao.yu-yang@foxmail.com>
Date:   Sun May 12 07:31:25 2024 +0000

    chore: remove unused import (#12830)

[33mcommit ad584cd896933c986cdf1ab29436c675705ffca1[m
Author: Peter Nelson <71660771+apnelson1@users.noreply.github.com>
Date:   Sun May 12 02:17:18 2024 +0000

    feat(Data/Matroid/*): add `Indep` as a structure field to `Matroid`.  (#12665)
    
    This PR slightly shuffles the design of `Matroid` to improve defeq.
    
    Specifically, we add `Indep` as a structure field of `Matroid` together with a rule that `Indep` relates correctly to `Base`, where previously `Matroid.Indep` was defined after the fact. This has the consequence that, when a matroid `M` is built using a user-supplied independence predicate `Indep` (via `IndepMatroid.matroid`) , the terms `M.Indep` and `Indep` are defeq, where previously this needed to be proved by `simp`.
    
    This turns a few proofs already appearing in mathlib into `Iff.rfl`, and this same benefit will apply to many future API additions, since the independence predicate is the most common way to construct a matroid in practice.
    
    The tradeoff is that independence is no longer definitionally the same as being a subset of a base, but this seems to be worth it; it is simply a matter of using `Indep.exists_base_superset` where needed. The fact that now `Matroid.mk` is a bit 'heavier' than before is almost irrelevant, since matroids are essentially always going to be defined in terms of one of the alternative constructors, which are unchanged.

[33mcommit 3502115bbf882ed91452052c41607a3e5139e1e1[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Sat May 11 20:48:43 2024 +0000

    chore: Fix `Decidable` instance for `LT` on `Rat` (#12827)
    
    The default instance was conflicting with the existing one. Same for `DecidableEq`.
    
    Reported on [Zulip](https://leanprover.zulipchat.com/#narrow/stream/113489-new-members/topic/Conflicting.20decidableLT.20instances).

[33mcommit f851598b12f275192ed4486078eec77c30249886[m
Author: Joachim Breitner <mail@joachim-breitner.de>
Date:   Sat May 11 18:18:28 2024 +0000

    refactor: nicer well-founded function definitions (#12628)
    
    by preferring `decreasing_by` over inline proofs, the resulting
    equational theorems are nicer.
    
    Also we can use functional induction in one case rather nicely.

[33mcommit c212f77a9fa85325dc8b58a7729344a2767cceaa[m
Author: Timo Carlin-Burns <timorcb@gmail.com>
Date:   Sat May 11 18:18:27 2024 +0000

    feat: lemmas relating Finset.univ and List.get (#11704)
    
    We add sufficient lemmas for the simplifier to prove
    `‚àÄ (l : List Œ±), Finset.univ.val.map l.get = ‚Üël`,
    as well as the easier to apply phrasing
    `‚àÄ (l : List Œ±), Finset.univ.val.map (f <| l.get ¬∑) = ‚Üë(l.map f)`.
    
    We then add lemmas stating the corollaries for functions out of `Finset` which are built out of `Multiset.map`, such as `Finset.image` and `Finset.prod`.

[33mcommit 0e70892cf22954a8d9857e2501437265f100f76e[m
Author: Mitchell Lee <trivial171@gmail.com>
Date:   Sat May 11 18:18:26 2024 +0000

    feat: length, reduced words in Coxeter groups (#11465)
    
    Add new file `GroupTheory/Coxeter/Length.lean`. Define the length function and reduced words of Coxeter groups. Prove their basic properties.
    
    I decided to split #11408 (now closed) into two pull requests. This is the first one.

[33mcommit a89745a89bd8b590de1708f939837e0d8810b882[m
Author: Kim Morrison <kim@tqft.net>
Date:   Sat May 11 17:10:54 2024 +0000

    chore: remove bad simp lemmas (#12500)
    
    Not sure why these were marked as `nolint simpNF` when the simpNF linter complained, rather than removing `@[simp]`!
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 30b699080f1917a466f5afb201857bee5a659574[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Sat May 11 17:10:53 2024 +0000

    chore: fix or update three porting notes referring to old nightlies (#12409)
    
    These nightlies have since been released.

[33mcommit 83018cff715efef3eecdead41fade51b17b645e9[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Sat May 11 17:10:52 2024 +0000

    chore: Move UFD instance for `Nat` (#12401)
    
    This reduces the imports to `RingTheory.Int.Basic`. Maybe those instances could go to a new file `RingTheory.UniqueFactorizationDomain.Nat` to avoid having to import `Data.Nat.Factors` in `RingTheory.UniqueFactorizationDomain`, but also that new import is much more lightweight than the existing ones.
    
    
    
    
    Co-authored-by: Johan Commelin <johan@commelin.net>

[33mcommit c3245d59a0cad9b15db695887ac9b2ffa9393751[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Sat May 11 16:45:08 2024 +0000

    feat(CategoryTheory/Abelian): "three" lemmas (#12649)
    
    In this PR, we deduce "three" lemmas that are consequences of "four lemmas" (which are also related to the five lemma). For example, if an exact sequence `X ‚ü∂ Y ‚ü∂ Z` maps to another `X' ‚ü∂ Y' ‚ü∂ Z'` in such a way that `Y ‚ü∂ Z` is epi, `X ‚ü∂ X'` is epi, `Y ‚ü∂ Y'` is mono, then `Z ‚ü∂ Z'` is mono (this is `mono_of_epi_of_epi_of_mono`).
    
    
    
    Co-authored-by: Johan Commelin <johan@commelin.net>

[33mcommit 4dffa6dc6e0f2f1959a710c92b4f23b325dc7fd2[m
Author: R√©my Degenne <Remydegenne@gmail.com>
Date:   Sat May 11 15:34:30 2024 +0000

    feat: every s-finite measure is absolutely continuous w.r.t. some finite measure (#12759)
    
    Also prove that every s-finite measure is the sum of a sigma-finite measure and a measure that takes only the values 0 and infinity.
    
    
    
    Co-authored-by: R√©my Degenne <remydegenne@gmail.com>

[33mcommit 311c57e763368176a19af895c8a4a6ec1bcab3cc[m
Author: Chris Birkbeck <c.birkbeck@ucl.ac.uk>
Date:   Sat May 11 15:08:29 2024 +0000

    feat(Analysis/Complex/UpperHalfPlane/Topology): Add lemma (#12602)
    
    Add a lemma about containment of verticalStrips in each other needed for #12456
    
    
    
    Co-authored-by: Chris Birkbeck <c.birkbeck@uea.ac.uk>

[33mcommit 82af17d1e5991b20817f74aef162f13c3504d77d[m
Author: damiano <adomani@gmail.com>
Date:   Sat May 11 14:01:49 2024 +0000

    chore: uncdot various files (#12422)
    
    These `¬∑` are scoping when there is a single active goal.
    
    These were found using a modification of the linter at https://github.com/leanprover-community/mathlib4/pull/12339.

[33mcommit 01f894dcd1028ec907a52a12304237e526d58b63[m
Author: Xavier Roblot <roblot@math.univ-lyon1.fr>
Date:   Sat May 11 08:45:19 2024 +0000

    chore: split `RingTheory.Ideal.Operations` (#12777)
    
    Split the file `RingTheory.Ideal.Operations` into two parts by putting everything related to maps into a new file called... `RingTheory.Ideal.Maps`.

[33mcommit 771c538ac81234100c7319d33f9e588a6afdb1f8[m
Author: damiano <adomani@gmail.com>
Date:   Sat May 11 08:45:18 2024 +0000

    CI: add a step producing a "reduced diff" (#12515)
    
    Add an extra CI step whose purpose is to produce a summary of declarations that have been added, removed or simply moved around unchanged.
    
    This can help review "moving" PRs, whose sole purpose is to move code around.
    
    The script is text-based, so that it can run right away and does not have to wait for the output of `lake build`.  As a consequence, it is easy to fool, but also gives out answers quickly!

[33mcommit d8189c0a020bdaa0c853067b90b1a651d76a8f1d[m
Author: damiano <adomani@gmail.com>
Date:   Sat May 11 07:39:53 2024 +0000

    chore: two dots to cdots (#12808)
    
    Replace two `.` with `¬∑`.
    
    Found by the linter at #12143.

[33mcommit 3be9527a5a58551fbef5bfa1b168496e9296256e[m
Author: Matthew Robert Ballard <matt@mrb.email>
Date:   Sat May 11 07:39:52 2024 +0000

    chore(WittVector.Isocrystal): remove helper local instance (#12789)
    
    `WittVector.FractionRing.module` is `Semiring.toModule` under the hood. We seem fine without it now.

[33mcommit d98446e3bb956e893febbbed6ece0f578158e8db[m
Author: damiano <adomani@gmail.com>
Date:   Sat May 11 07:39:51 2024 +0000

    chore: shake shake (#12787)
    
    A small trimming of `noshake.json`: some files no longer exist, others are simply no longer imported.

[33mcommit 2f71a144bb0c0fbcfbdbdf271a24287e9fa76bcf[m
Author: damiano <adomani@gmail.com>
Date:   Sat May 11 07:39:50 2024 +0000

    chore: adapt to multiple goal linter 5 (#12560)
    
    Splits off the alphabetically first half of #12381 in a separate PR to help reviewing.

[33mcommit 150630306a248d42313cbb47413ba23ad5e1acea[m
Author: damiano <adomani@gmail.com>
Date:   Sat May 11 07:39:48 2024 +0000

    chore: uncdot up to and including `CategoryTheory` (#12521)
    
    A portion of #12422 containing all the changes in `Mathlib/[A-C]` up to and including `CategoryTheory`.

[33mcommit b691d619af8e50b796e2459a93d88c685d684c93[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Sat May 11 07:39:47 2024 +0000

    feat: the homological functor on the homotopy category of cochain complexes in an abelian category (#11760)
    
    In this PR, it is shown that the homology functors on the homotopy category of cochain complexes in an abelian category are homological functors (in the sense that they send distinguished triangles to exact sequences). This PR also shows that the category of homological complexes in an abelian category is an abelian category.

[33mcommit 3d4137543f4037209512bec880f240254d8aad78[m
Author: damiano <adomani@gmail.com>
Date:   Sat May 11 07:15:09 2024 +0000

    fix: remove MathlibExtras in lean4checker.yml (#12812)

[33mcommit 3ca63d3256cd42aa145f2a004e0138d5627bbb65[m
Author: damiano <adomani@gmail.com>
Date:   Sat May 11 02:49:06 2024 +0000

    chore: remove a save (#12805)

[33mcommit 1405014a81e3c1bf50147bfefc1853d8c63d4d15[m
Author: Pol'tta / Miyahara K≈ç <pol_tta@outlook.jp>
Date:   Sat May 11 02:49:05 2024 +0000

    refactor(Mathlib/Algebra/Algebra/NonUnitalHom): reorder `notation`s to prevent `A ‚Üí‚Çô‚Çê[R] B` being delaborated as `A ‚Üí‚Çõ‚Çô‚Çê[MonoidHom.id R] B` (#12762)

[33mcommit b6363b13d6bdd70934c8cfac6a726d46977195ba[m
Author: Pol'tta / Miyahara K≈ç <pol_tta@outlook.jp>
Date:   Sat May 11 02:49:04 2024 +0000

    docs: fix some docs (#12760)

[33mcommit 5c686d02c98b3536a26a2c387b4f7be788f02a5f[m
Author: Pol'tta / Miyahara K≈ç <pol_tta@outlook.jp>
Date:   Sat May 11 02:49:02 2024 +0000

    chore(Mathlib/Tactic/Clear!): rename `Clear!.lean` to `ClearExclamation.lean` to avoid the illegal character `!` (#12757)

[33mcommit 4eb366efdcf1031c70cfd85467e586f57a447a25[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Sat May 11 02:00:28 2024 +0000

    chore(Algebra/CharP/Basic): Split (#12710)
    
    `Algebra.CharP.Basic` currently depends on 935 files. This is unacceptably large for such a basic plain algebra file. This PR moves everything that doesn't depend on `Finset` (a seemingly good cut-off point) to a new file `Algebra.CharP.Defs`

[33mcommit 21349deb2a2262979f379fe73898a2df714bbdd5[m
Author: Kim Morrison <kim@tqft.net>
Date:   Fri May 10 20:21:43 2024 +0000

    feat: comonoid objects are monoid objects in the opposite category (#10094)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>
    Co-authored-by: Scott Morrison <scott@tqft.net>

[33mcommit 929223aa7875e8a08ec59d94825c63acc4d30eaa[m
Author: Kim Morrison <kim@tqft.net>
Date:   Fri May 10 18:58:22 2024 +0000

    chore: delete detect_sha_changes (#12784)
    
    With the port over, these are long obsolete, yet still generating confusing annotations, per https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/GitHub.20Actions.20complaints/near/437801745
    
    The changes to github-script version were forced on me by actionlint, but as far as I can tell are not related?

[33mcommit 3c5cd334e6be5411014a15c12d0d9e8fd9b3fbfd[m
Author: Kim Morrison <kim@tqft.net>
Date:   Fri May 10 18:58:21 2024 +0000

    chore: add CI job to run lean4checker periodically (#12004)
    
    I propose we turn this on, and see if it works. Once it does, we then remove the lean4checker step from regular CI.
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>
    Co-authored-by: adomani <adomani@gmail.com>

[33mcommit c052670b77e9e05e1bd1ad7f15ddcb420e361f48[m
Author: Mar√≠a In√©s de Frutos-Fern√°ndez <mariaines.dff@gmail.com>
Date:   Fri May 10 17:03:04 2024 +0000

    feat(Topology/Instances/NNReal): add tendsto_of_antitone (#12430)

[33mcommit c49b5e164282659839a320cc6a06f2ab40c0c0c4[m
Author: Xavier Roblot <roblot@math.univ-lyon1.fr>
Date:   Fri May 10 15:40:43 2024 +0000

    feat: add `Equiv.prodSubtypeFstEquivSubtypeProd` (#12802)
    
    See [Zulip](https://leanprover.zulipchat.com/#narrow/stream/217875-Is-there-code-for-X.3F/topic/A.20basic.20equivalence/near/437968727)
    
    
    
    Co-authored-by: Xavier Roblot <46200072+xroblot@users.noreply.github.com>

[33mcommit 6edd89be4f4a80075979c5f8edcb4d9d7d7030fd[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Fri May 10 15:11:54 2024 +0000

    refactor(Measure): replace `trimmed` with `trim_le` (#12794)
    
    This follows the design pattern "request a seemingly weaker assumption in the definition,
    prove a seemingly stronger condition in a theorem".

[33mcommit 8ee805f77cf1f5cfe74e7f439945658f092cdad6[m
Author: David Renshaw <dwrenshaw@gmail.com>
Date:   Fri May 10 14:23:45 2024 +0000

    chore: simplify proof of eqOn_right_half_plane_of_superexponential_decay (#12715)
    
    Replaces 10 lines of proof with an instantiation of `isBigO_sub_exp_rpow`.
    On my machine, this speeds up time reported by `set_option trace.profiler true` on this lemma from 0.6 seconds to 0.15 seconds
    
    This simplification was found by [tryAtEachStep](https://github.com/dwrensha/tryAtEachStep).

[33mcommit aa3ac330e578cb8f6dc28eee7631fc1364868bbb[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Fri May 10 13:44:46 2024 +0000

    chore(MeasureTheory): golf (#11077)
    
    Also, these `simp` calls are better compatible
    with a future refactor using `FunLike` for measures.
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit fdad317e75f3d0a26cb7d9df0f9868a23e05d7ca[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Fri May 10 13:12:29 2024 +0000

    chore(CategoryTheory/Sites): generalise universes and assumptions in `CoverLifting` file (#12798)

[33mcommit 8d93a5343068dca89df3d20e933788d7fd0b25a2[m
Author: Sebastian Ullrich <sebasti@nullri.ch>
Date:   Fri May 10 12:00:05 2024 +0000

    chore: compatibility with Lean incrementality branch (#12796)
    
    Backward-compatible fixes for leanprover/lean4#3940. In particular, gets rid of two `open private` (out of six in all of Mathlib) which in my opinion really were not necessary and just invited breakage.
    
    Somehow the unused variables and unnecessary `have` linters became *more* complete, which might be due to earlier mvar instantiation in `Elab.MutualDef` but I haven't investigated deeply.

[33mcommit 0b119dd3216fc7928bfc58d09ff6eac04e29f6bc[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Fri May 10 11:12:32 2024 +0000

    chore(CategoryTheory): fix hasFiniteLimits_of_hasLimitsOfSize (#12797)
    
    Given a category `C`, `hasFiniteLimits_of_hasLimitsOfSize` (and the dual statement for colimits) involves two universes `u'` and `v'` which may be unrelated to the two universes `u` and `v` involved in the category `C : Type u` (and `[Category.{v} C]`). For general universes, it is made a lemma instead of an instance. It is made an instance only in the `_hasLimits` case (which corresponds to `u'=v'=v`) and the `u'=v'=0` case.
    
    This fixes the behavior observed in https://leanprover.zulipchat.com/#narrow/stream/113489-new-members/topic/invalid.20occurrence.20of.20universe.20level.20'u_1'/near/437497392

[33mcommit 812bdcf6191546bded20592aa8bc1ab2d5080e82[m
Author: Ralf Stephan <ralf@ark.in-berlin.de>
Date:   Fri May 10 10:23:26 2024 +0000

    feat: nth Prime 0 = 2 (#12708)
    
    See https://leanprover.zulipchat.com/#narrow/stream/217875-Is-there-code-for-X.3F/topic/2.20is.20the.20first.20prime
    
    Needed as induction start for a formal BOOK proof.
    
    Co-authored-by: Kyle Miller <kmill31415@gmail.com>

[33mcommit 3f9d0818f8e36483c6b7a0e3ca52696171bf05c7[m
Author: Xavier Roblot <roblot@math.univ-lyon1.fr>
Date:   Fri May 10 09:44:59 2024 +0000

    chore: change the definition of `unitLatticeEquiv` to term mode  (#12795)
    
    See [Zulip](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/tactics.20in.20construction.20of.20.60unitLatticeEquiv.60/near/437929609)

[33mcommit d4e8dd237c13d49d33bd63c45199b142b7d5f82b[m
Author: Kim Morrison <kim@tqft.net>
Date:   Fri May 10 07:11:56 2024 +0000

    chore: update dependencies (#12792)
    
    
    
    Co-authored-by: Joachim Breitner <mail@joachim-breitner.de>
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>

[33mcommit daade17284e69946dfbd0d3bf0154827b684cd92[m
Author: Kim Morrison <kim@tqft.net>
Date:   Fri May 10 00:50:04 2024 +0000

    chore: turn off acceptSuggestionOnEnter (#12749)
    
    See discussion at https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/propose.20removing.20module.20docstring.20code.20suggestion/near/437558661
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 18a35ebb796ef104676edcf9d6f02880f4e6af6a[m
Author: Matthew Robert Ballard <matt@mrb.email>
Date:   Thu May 9 23:19:41 2024 +0000

    chore(Order.RelIso): remove some porting notes (#12786)
    
    We get the `CoeFun` through `FunLike` which seems the current idiom. The changes are reducibly defeq to the porting remnants.

[33mcommit f993b4146066718813b1e09b457e52b0c174a9f2[m
Author: Vasily Nesterov <vas.nesterov63@gmail.com>
Date:   Thu May 9 22:39:39 2024 +0000

    feat(Tactic/Linarith): Simplex Algorithm oracle (#12014)
    
    - Reduce the `linarith` certificate search problem to some Linear Programming problem and implement the Simplex Algorithm to solve it.
    - Set the default oracle for `linarith` to this.
    - Remove unnecessary hypotheses in `Mathlib/Analysis/Calculus/BumpFunction/FiniteDimension.lean` and `Mathlib/Analysis/Distribution/SchwartzSpace.lean` which were needed with the Fourier-Motzkin oracle.
    - Adjust the definition of `CerficateOracle` to enable dot notation to choose between oracles.
    
    This addresses #2717 and #8875 (except when the user overrides the oracle)
    
    Also, this oracle is far more efficient:
    The example below takes lots of time with the Fourier-Motzkin oracle: I waited 5 minutes and still didn't get it. But with the just implemented `Linarith.SimplexAlgo.produceCertificate` oracle the proof succeeds in less than a second.
    ```lean
    import Mathlib.Tactic.Linarith
    
    example (x0 x1 x2 x3 x4 : ‚Ñö) :
      3 * x0 - 15 * x1 - 30 * x2 + 20 * x3 + 12 * x4 ‚â§ 0 ‚Üí
      35 * x0 - 30 * x1 + 12 * x2 - 15 * x3 + 18 * x4 ‚â§ 0 ‚Üí
      5 * x0 + 20 * x1 + 24 * x2 + 20 * x3 + 9 * x4 ‚â§ 0 ‚Üí
      -2 * x0 - 30 * x1 + 30 * x2 - 10 * x3 - 12 * x4 ‚â§ 0 ‚Üí
      -4 * x0 - 25 * x1 + 6 * x2 - 20 * x3 ‚â§ 0 ‚Üí
      25 * x1 + 30 * x2 - 25 * x3 + 12 * x4 ‚â§ 0 ‚Üí
      10 * x1 - 18 * x2 - 30 * x3 + 18 * x4 ‚â§ 0 ‚Üí
      4 * x0 + 10 * x1 - 18 * x2 - 15 * x3 + 15 * x4 ‚â§ 0 ‚Üí
      -4 * x0 + 15 * x1 - 30 * x2 + 15 * x3 + 6 * x4 ‚â§ 0 ‚Üí
      -2 * x0 - 5 * x1 + 18 * x2 - 25 * x3 - 161 * x4 ‚â§ 0 ‚Üí
      -6 * x0 + 30 * x1 + 6 * x2 - 15 * x3 ‚â§ 0 ‚Üí
      3 * x0 + 10 * x1 - 30 * x2 + 25 * x3 + 12 * x4 ‚â§ 0 ‚Üí
      2 * x0 + 10 * x1 - 24 * x2 - 15 * x3 + 3 * x4 ‚â§ 0 ‚Üí
      82 * x1 + 36 * x2 + 20 * x3 + 9 * x4 ‚â§ 0 ‚Üí
      2 * x0 - 30 * x1 - 30 * x2 - 15 * x3 + 6 * x4 ‚â§ 0 ‚Üí
      4 * x0 - 15 * x1 + 25 * x2 < 0 ‚Üí
      -4 * x0 - 10 * x1 + 30 * x2 - 15 * x3 ‚â§ 0 ‚Üí
      2 * x0 + 6 * x2 + 133 * x3 + 12 * x4 ‚â§ 0 ‚Üí
      3 * x0 + 15 * x1 - 6 * x2 - 15 * x3 - 15 * x4 ‚â§ 0 ‚Üí
      10 * x1 + 6 * x2 - 25 * x3 + 3 * x4 ‚â§ 0 ‚Üí
      -2 * x0 + 5 * x1 + 12 * x2 - 20 * x3 + 12 * x4 ‚â§ 0 ‚Üí
      -5 * x0 - 25 * x1 + 30 * x3 - 12 * x4 ‚â§ 0 ‚Üí
      -6 * x0 - 30 * x1 - 36 * x2 + 20 * x3 + 12 * x4 ‚â§ 0 ‚Üí
      5 * x0 - 5 * x1 + 6 * x2 - 25 * x3 ‚â§ 0 ‚Üí
      -3 * x0 - 20 * x1 - 30 * x2 + 5 * x3 + 3 * x4 ‚â§ 0 ‚Üí
      False := by intros; linarith (config := {oracle := Linarith.FourierMotzkin.produceCertificate})
    ```
    
    I am planning to prove the "completeness" of the oracle in the next PRs, but so far I have run a stress test on randomly generated examples of various sizes, and it seems that everything is OK.
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit f67cc8126f11a15d2451b03dcce349d642008e9f[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Thu May 9 17:46:02 2024 +0000

    doc(Archive/MiuLanguage): fix typo (#12766)

[33mcommit 0411b4871d4d5606970944f67e04f2fe7bf438df[m
Author: Matthew Robert Ballard <matt@mrb.email>
Date:   Thu May 9 17:19:43 2024 +0000

    chore: Delete some orphaned porting notes (#10230)
    
    Delete some porting notes that are now orphaned.

[33mcommit fa33d89fc6f3890f5bf7188abae01b6baacab8d5[m
Author: Kim Morrison <kim@tqft.net>
Date:   Thu May 9 16:03:52 2024 +0000

    feat: basic definition of comonoid objects (#10091)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>
    Co-authored-by: Scott Morrison <scott@tqft.net>

[33mcommit 690d741a2041d5670fd10338b772280cca9b47cd[m
Author: Kim Morrison <kim@tqft.net>
Date:   Thu May 9 12:14:53 2024 +0000

    chore: more deprecations (#12783)

[33mcommit fcceeb1dd138f3969ddff60db830c196ae1b761f[m
Author: kkytola <kalle.kytola@aalto.fi>
Date:   Thu May 9 11:24:52 2024 +0000

    feat: BoundedSub class to generalize subtraction of bounded continuous functions. (#12559)
    
    Introduce type class `BoundedSub`, which allows to generalize subtraction of `BoundedContinuousFunction` to the case where the values are not necessarily in `SeminormedAddGroup`. The most important case for measure theory applications that is allowed by the generalization is bounded continuous functions with values in `‚Ñù‚â•0`.
    
    
    
    Co-authored-by: kkytola <39528102+kkytola@users.noreply.github.com>

[33mcommit 51625e908ad8a7478f13ad7a109d3bb32c2d610d[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Thu May 9 10:48:39 2024 +0000

    refactor(Measure): use FunLike (#12684)
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit e50d4102559e198e35fb447e995021e680656385[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Thu May 9 09:01:36 2024 +0000

    feat(Rat, NNRat): `q * q.den = q.num` (#12739)
    
    and a few other lemmas.
    
    From LeanAPAP

[33mcommit ad9935b346590a398c264d9b4bb33f3b6f1928ae[m
Author: Kim Morrison <kim@tqft.net>
Date:   Thu May 9 08:07:51 2024 +0000

    chore: fix deprecation warnings (#12775)
    
    In preparation for https://github.com/leanprover/lean4/pull/3969 landing, we fix some deprecation warnings.

[33mcommit b72ddd8f67eba47cffd3f3422d6c01f1e666c23f[m
Author: Kim Morrison <kim@tqft.net>
Date:   Thu May 9 05:29:02 2024 +0000

    feat: backport changes from lean-pr-testing-4096 (#12772)
    
    These changes will be required after https://github.com/leanprover/lean4/pull/4096, but they all look like positive readability changes to me anyway (the things being filled in are sort of hard to work out with time travelling to later lines in the proofs!), so I think we can backport them all to `master`.
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 47d4fa91aedcbd429282046dd1e8c80404a13afc[m
Author: Raghuram <102684766+raghuram-13@users.noreply.github.com>
Date:   Thu May 9 04:14:54 2024 +0000

    feat(Algebra/Ring/Ext): prove extensionality lemmas for Ring and similar typeclasses (#9511)
    
    Add a file `Algebra/Ring/Ext`, proving `ext` lemmas for all of the ring-like classes (for example, anything from `NonUnitalNonAssocSemiring` to `CommRing`), stating that two instances of such a class are equal if they define the same addition and multiplication operations.
    Also prove `ext_iff` variants for each class, and injectivity lemmas for projections from classes to parent classes.

[33mcommit ba7e114658fe6add6aad39c24a6b499101de60e1[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Thu May 9 00:52:22 2024 +0000

    feat(Data/Nat/Digits): `digits_head` and `ofDigits_mod_eq_head` (#11129)
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit 59b7bc4871691da68166f821185b40bf5fb9240a[m
Author: Matthew Robert Ballard <matt@mrb.email>
Date:   Wed May 8 18:28:53 2024 +0000

    refactor(Opposite): `Opposite.mk` -> `Opposite.op`  (#12636)
    
    It was observed on [Zulip](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/making.20.60op.60.20irreducible) that we should really have `op` as the custom name for the `Opposite` constructor as long as it remains a structure.

[33mcommit e6ea7987e2bef631d2be529252a5ff581e12362e[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Wed May 8 16:11:19 2024 +0000

    feat: `positivity` extension for `posPart`, `negPart` (#10681)

[33mcommit 54a54ded180ca32fdc608779ed3447c213dc3a76[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Wed May 8 15:35:54 2024 +0000

    fix: remove MathlibExtras from mk_all.sh (#12763)
    
    This directory was removed in #12548.

[33mcommit 9d8f6783f64176fcf8a328020945b9d79f3a8711[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Wed May 8 15:35:53 2024 +0000

    feat(Algebra/Category/ModuleCat): the category of presheaves of modules has colimits (#12713)

[33mcommit 063b1255bfc75dd729a3f168dbf1838a55213f49[m
Author: Floris van Doorn <fpvdoorn@gmail.com>
Date:   Wed May 8 15:10:41 2024 +0000

    fix: typo in polyrith (#12754)

[33mcommit 49c10909cf40bf43c6257ed74933dd0fd0c0435c[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Wed May 8 13:44:41 2024 +0000

    chore(Order/Interval/Finset/Defs): golf (#12752)
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit 945d7cf3cfc5c0ce3527cbe3e52ed8c9ec4d1247[m
Author: Matthew Robert Ballard <matt@mrb.email>
Date:   Wed May 8 13:10:28 2024 +0000

    chore(ConcreteCategory): remove refine' pattern  (#12755)
    
    Similar to #12729, we should avoid constructing data using the `refine' { foo := foo, bar := bar .. }` pattern.
    
    Building data with tactics is always a dicey proposition and should be a last resort.

[33mcommit 6d1b4e774edf08348d000edaf2facef71c183c90[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Wed May 8 13:10:27 2024 +0000

    feat: iterated derivative of a continuous multilinear map (#12207)
    
    Consider a multilinear map `f : E^n -> F`. Then its `k`-th derivative can be written as follows, given a basepoint `x : E^n` and `k` vectors `v_1, ..., v_k : E^n`:
    ```
    D^k f (x; v_1, ..., v_k) = \sum f (x_1, (v_{e.symm 2})_2, x_3, ..., (v_{e.symm n))_n)
    ```
    where in the sum at each index `i` one uses either the `i`-th coordinate of `x`, or the `i`-th coordinate of one of the vectors `v_j`, and each `v_j` has to appear exactly once in this expression. The sum is parameterized by the embeddings `e` of `Fin k` in `Fin n`.
    
    This expression is a little bit cumbersome to write down and to use, but it gives nice explicit bounds on `||D^k f||` that are useful to study Fourier transforms.
    
    The PR introduces the formal definition of each term in the sum (as an object which is multilinear in the coordinates of `x` outside the range of `e`, and in the `v_j`), and then proves that the sum is indeed the iterated derivative of `f`.

[33mcommit feb8ef420aa099763cb2a9dd72bf028a175d6878[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Wed May 8 12:42:11 2024 +0000

    feat(CategoryTheory): more functoriality for Comma categories (#12206)
    
    This PR introduces the functor `map : Comma L R ‚•§ Comma L' R'` induced by three functors `F‚ÇÅ`, `F‚ÇÇ`, `F` and two natural transformations `F‚ÇÅ ‚ãô L' ‚ü∂ L ‚ãô F` and `R ‚ãô F ‚ü∂ F‚ÇÇ ‚ãô R'`. Variants for `StructuredArrow` and `CostructuredArrow` are also introduced.
    
    All the basic functors between `Comma` categories are special cases of this one, but their definition was not changed: it would break too many defeq.

[33mcommit ded3fb6262f4fb8850ea4d5fffe6bad7d3d82ef5[m
Author: Riccardo Brasca <riccardo.brasca@gmail.com>
Date:   Wed May 8 11:39:14 2024 +0000

    Feat: add various result about the norm, relative to `‚Ñ§`, of `Œ∂ - 1`. (#11792)
    
    We add various result about the norm, relative to `‚Ñ§`, of `Œ∂ - 1`. These results already exist for the norm relative to `‚Ñö`.
    
    From the flt3 project at LFTCM2024.
    
    - [x] depends on: #12386
    
    
    
    Co-authored-by: Anne Baanen <Vierkantor@users.noreply.github.com>
    Co-authored-by: Vierkantor <vierkantor@vierkantor.com>
    Co-authored-by: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>

[33mcommit 2113c23b8292c6f1b71de1b7aa6fca33a69c5148[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Wed May 8 11:06:09 2024 +0000

    refactor(CategoryTheory): make Functor.IsEquivalence a Prop (#12462)
    
    `Functor.IsEquivalence` is now the combination of `F.Full`, `F.Faithful` and `F.EssSurj`. That such a functor is an equivalence (i.e. there is a quasi-inverse, etc.) is now contained in the definition `F.asEquivalence`. This refactor is to avoid any diamond in the `IsEquivalence` instances (and also for `IsLeftAdjoint` and `IsRightAdjoint` which are also made `Props`). If data is important, one should use `Equivalence` or `Adjunction` instead. This refactor also avoids some duplication of code between the structures `Equivalence` and the former `IsEquivalence`.
    
    `IsLeftAdjoint` and `IsRightAdjoint` are moved to the `Functor` namespace. The namespaces have also been fixed in the file `CategoryTheory.Adjunction.FullyFaithful`. Proofs have been tidied in `CategoryTheory.Monoidal.NaturalTransformation`.
    
    Definitions which relied on `IsLeft/RightAdjoint` have been modified in order to contain the data of an adjunction (e.g. `Reflective`, `MonadicRightAdjoint`, etc.).
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit 89b4b590b4938e14211b6296f8ecf0c1940cc999[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Wed May 8 09:34:49 2024 +0000

    feat: In characteristic p, `Nat.cast` is injective on `Iio p` (#12542)
    
    Add `CharP.natCast_injOn_Iio`.

[33mcommit 994f298c6c02a897c98574d2e11f3ba7b78d0578[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Wed May 8 08:43:22 2024 +0000

    chore: Deduplicate `zpow_ne_zero_of_ne_zero` and `zpow_ne_zero` (#12734)
    
    Both lemmas are the same up to a binder swap. Also rename `zpow_eq_zero` to `eq_zero_of_zpow_ne_zero`.

[33mcommit 2b89926ebc4e019b35b0327289ee422461419ef1[m
Author: Etienne <etienne.marion@ens-lyon.fr>
Date:   Wed May 8 08:07:34 2024 +0000

    feat: continuity of measure without monotonicity assumptions (#12447)
    
    Add four theorems about continuity from below/above of measures. Contrary to those already existing, no assumptions about the sequence of sets. Show that the measures of the partial unions/intersections converge to the measure of the union/intersection.

[33mcommit 9edd2350d9396700cf5a446372b94f082479154c[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Wed May 8 07:05:35 2024 +0000

    chore: Remove positivity extension for `Finset.card` stub (#12740)
    
    The extension was already implemented in #10610.

[33mcommit 628b26666181cf42e401d9babbcc650423c90dc4[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed May 8 01:12:54 2024 +0000

    feat(UniformConvergenceTopology): prove `CompleteSpace` (#10844)

[33mcommit b1cd4c0ea79dca2d30ef8a2b014892eaf11b2869[m
Author: Kim Morrison <scott@tqft.net>
Date:   Wed May 8 00:17:59 2024 +0000

    chore: backported changes for nightly-2024-05-07 (#12747)
    
    This changes become necessary on `nightly-2024-05-07`, but work already on `master`.
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 893e43e193c6af2aa6dd94b62a5c4575a2a8381b[m
Author: Brendan Seamas Murphy <shamrockfrost@gmail.com>
Date:   Tue May 7 23:13:55 2024 +0000

    doc(Mathlib/LinearAlgebra/TensorProduct/RightExactness): Fix typo in copyright string (#12738)
    
    Two letters in the author's name were transposed.

[33mcommit 424683e862f4b80437c11a749dba0b98cffbf1ec[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Tue May 7 23:13:54 2024 +0000

    chore: Rename `smul_one_eq_coe` to `smul_one_eq_cast` (#12621)

[33mcommit ba9d411b0518c2de8057c3488cbfbf68ce5e5439[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Tue May 7 23:13:53 2024 +0000

    feat: Positivity extension for `Finset.prod` (#9365)
    
    Followup to #9365
    
    From LeanAPAP
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>
    Co-authored-by: Alex J Best <alex.j.best@gmail.com>

[33mcommit 294ff6a495e19ae5a32188033d6e487ca42aded5[m
Author: Matthew Robert Ballard <matt@mrb.email>
Date:   Tue May 7 22:42:43 2024 +0000

    perf(BundledCats): more explicit universe annotations  (#12741)
    
    Testing for leanprover/lean4#4085 exposed possible regressions typeclass synthesis which can be ameliorated using explicit universes. We do this and we add references to the issue leanprover-community/mathlib4#12737 tracking these changes.

[33mcommit 4c7c71d37bb6151e2a6464c031ce5f4ba4950ba8[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Tue May 7 21:46:46 2024 +0000

    feat(LightProfinite): (co)limits (#9513)
    
    This PR constructs pullbacks and finite coproducts in `LightProfinite`.

[33mcommit b3037511489de57034366e564bdacc547da7b815[m
Author: Anatole Dedecker <anatolededecker@gmail.com>
Date:   Tue May 7 20:39:28 2024 +0000

    feat: `mapsTo`, `surjOn` and `injOn` are preserved by `Filter.map` (#12385)
    
    And use it to simplify the proof of [completeSpace_iff_isComplete_range](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Topology/UniformSpace/UniformEmbedding.html#completeSpace_iff_isComplete_range).
    
    I also add the consequence of the previous result that any uniform embedding from a complete space to a hausdorff space is a closed embedding (I agree this may be a bit unrelated, but I was in the area).
    
    Notes about the filter results:
    - the left/right inverse results are not used, but I think they can be helpful. I'm okay with removing them.
    - the new API doesn't match very well the existing one, but after way more time that I'm willing to admit I came to the conclusion that it doesn't make sense to make it better without reorganizing and splitting the whole file.

[33mcommit 0b80a0a765326c5309cc57f9a0ffaa8748dcc5ab[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Tue May 7 18:47:04 2024 +0000

    refactor: Make `CompleteDistribLattice` extend `Coframe` (#12730)
    
    This spares us to write one instance by hand and also reduces the diff of #10560 a bit (after which we really need that `extends` clause)

[33mcommit e0219f6c814ea3790a743b8f316bce697d79dcf0[m
Author: Oliver Nash <github@olivernash.org>
Date:   Tue May 7 18:06:05 2024 +0000

    chore: split Mathlib.Algebra.Lie.Killing (#12735)

[33mcommit 3d7266526f9c3398ed9322475a680d3ec836b6b8[m
Author: Matthew Robert Ballard <matt@mrb.email>
Date:   Tue May 7 18:06:04 2024 +0000

    chore(Order.Copy): clean up structure instance constructions  (#12729)
    
    After the port, this used a `refine' {foo := foo, bar := bar, ..}` pattern to build the instances. We clean this up.

[33mcommit 5cafc71ab1ecc86aec7c5aa03739bc8f1a93d6f4[m
Author: Kim Morrison <scott@tqft.net>
Date:   Tue May 7 16:59:52 2024 +0000

    further renaming Std->Batteries (#12727)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit f1308d7a5ade62fcc7aaf100d63e7b79fbebf752[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Tue May 7 15:21:13 2024 +0000

    refactor: Turn Freiman homs into predicates (#12546)
    
    The bundled hom approach to Freiman homomorphisms is a fail. It is very hard to use and doesn't bring anything. That is because Freiman homs don't have much structure and we do not study them under this angle.
    
    This PR replaces the bundled homs by predicates and moves the file from `Algebra.Group.Freiman` to `Combinatorics.Additive.FreimanHom` so that:
    * It is clear these are combinatorial objects, not algebraic ones.
    * The diff isn't completely mangled. Nothing was kept so it's not worth comparing via a na√Øve git diff.
    
    Also fix a few oddities accidentally introduced in #12701.

[33mcommit 838141a23f640ed3d382e8eab6b3cbfedca44d5a[m
Author: samvang <59202064+samvang@users.noreply.github.com>
Date:   Tue May 7 14:07:59 2024 +0000

    feat(Mathlib/Order/Ideal): ideals of sets are stable under directed unions and chains (#12651)
    
    We prove that the directed union of a non-empty directed union of ideals of subsets of a preorder is an ideal, and in particular ideals of subsets of a preorder are stable under unions. In order to prove it, we also add `directed_on_sUnion`, a variant of `directed_on_iUnion`.

[33mcommit 9ef305b3458090295906a0bb870b46b624cbd9b2[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Tue May 7 13:42:22 2024 +0000

    fix: generalize std_basis_eq_basis_mul_basis (#12716)
    
    The 1 has been silently interpreted as a natural since it was added in https://github.com/leanprover-community/mathlib/pull/3244.

[33mcommit 661ebd0d094b230f0de56038fb74ee8cb9bc5d36[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Tue May 7 12:53:14 2024 +0000

    feat: add gcd_neg, neg_gcd (#12593)

[33mcommit 77f39e122a43ab41bf67a3115fd6bcfaa23e63f0[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Tue May 7 12:53:12 2024 +0000

    feat: FloorRing.exists_prime_mul_pow_div_factorial_lt_one (#12191)
    
    A few technical lemmas in support of Lindemann-Weierstrass.
    
    Co-authored-by: negiizhao <egresf@gmail.com>

[33mcommit 787f9595dd18b3430e11ff28ef9e6284d63c1981[m
Author: Riccardo Brasca <riccardo.brasca@gmail.com>
Date:   Tue May 7 11:27:30 2024 +0000

    feat: easy results about ring of integers. (#12704)
    
    Those have been forgotten in #12386.

[33mcommit 248b41f5309cfef76df808284e925ae83ef49aa8[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Tue May 7 10:24:07 2024 +0000

    refactor(Topology/Connected/TotallyDisconnected): use Set.Pairwise (#12724)
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit 466ce46b56681a73bf81a3593b08336366378597[m
Author: Pol'tta / Miyahara K≈ç <pol_tta@outlook.jp>
Date:   Tue May 7 10:24:05 2024 +0000

    refactor(Mathlib/Init/Data/List/Instances): deduplicate `Decidable (‚àÄ x, x ‚àà l ‚Üí p x)` & `Decidable (‚àÉ x, x ‚àà l ‚Üí p x)` instances (#12722)

[33mcommit 740f52cf67acc2daedb94b53329bbb03870fad94[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Tue May 7 10:24:04 2024 +0000

    feat: add `*.of_comp_iff` lemmas for `Inducing`, `Embedding`, etc. (#12639)

[33mcommit aa79770644c6a6cdc0a83319df79793eb2c0029d[m
Author: R√©my Degenne <Remydegenne@gmail.com>
Date:   Tue May 7 10:24:03 2024 +0000

    feat: `withDensity` of an s-finite measure is s-finite (#12591)

[33mcommit d9cc9fafd24512795e3b25143436a81a7ecf1537[m
Author: Etienne <etienne.marion@ens-lyon.fr>
Date:   Tue May 7 09:50:33 2024 +0000

    feat: operations on indicatorConstLp (#12464)
    
    Add lemmas to rewrite the sum/difference of two `indicatorConstLp` with same support. The distance between to Lp functions is the same as the norm of their difference (even if $p < 1$ and it's not a norm).
    
    
    
    Co-authored-by: Etienne <66847262+EtienneC30@users.noreply.github.com>

[33mcommit 0477177214eb78b0cb5ba949dfa7dc34b85c08a9[m
Author: Xavier G√©n√©reux <xaviergenereux@hotmail.com>
Date:   Tue May 7 09:50:32 2024 +0000

    feat: Hadamard three-lines theorem (#7919)
    
    This PR introduces a version of the Hadamard three-lines theorem (see [here](https://en.wikipedia.org/wiki/Hadamard_three-lines_theorem)), which is a prerequisite for norm interpolation. This project was suggested by @dupuisf earlier this year. This is my first decently sized PR so thank you for your patience if I have made any mistakes!

[33mcommit 859845f1833f51ea06dbb1e0dae75e39693006e8[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Tue May 7 09:25:39 2024 +0000

    refactor: Redefine 3AP-free sets (#12701)
    
    The current definition allows `{0, 1}` as a 3AP-free set in `ZMod 2`, which is really inconvenient from the point of view of interfacing with corners. This PR redefines it so that  `0, 1, 0` in `ZMod 2` is a 3AP and `{0, 1}` is not 3AP-free.
    
    Also take the opportunity to reorder the binders to a more convenient fashion, to move the heavy result `threeAPFree_sphere` to `Combinatorics.Additive.Behrend` where it is used (it won't be used anywhere else) and to drop `rothNumberNat_isBigO_id` since it's a trivial result that pulls in a bunch of analysis.

[33mcommit 4b6177e2a98f2afb04fcad75bbe1bd397a1fa9ba[m
Author: Mario Carneiro <mcarneir@andrew.cmu.edu>
Date:   Tue May 7 08:14:38 2024 +0000

    fix(Cache): reference to Std (#12725)
    
    Follow-up to #12720, the find/replace missed a spot.
    
    
    
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>

[33mcommit ad2ccae9e38b7209f29c6cb817f0a017ab2f287a[m
Author: Kim Morrison <scott@tqft.net>
Date:   Tue May 7 08:14:37 2024 +0000

    chore: remove pointless @[reducible] attributes (#12691)
    
    This is a backport of changes made by @Ruben-VandeVelde. These attributes had no effect, and will become illegal on v4.9.0.
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 43881b58cc09b474a672296c7252e001840ac542[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Tue May 7 08:14:36 2024 +0000

    chore: Move sign of power lemmas (#11986)
    
    * Move the sign of power lemmas from `Algebra.Parity` to `Algebra.GroupPower.Order`.
    * For this to work, I must swap the order of import between `Algebra.GroupPower.Order` and `Algebra.Parity`. This means that I need to weaken one `assert_not_exists` to allow importing `Data.Set.Defs`. This is inconsequential.
    * Use them to golf and deprecate the `bit0`/`bit1` lemmas
    * Delete the deprecated `pow_bit0_abs`, `pow_bit0_pos_of_neg`, `pow_bit1_neg`
    
    
    
    Co-authored-by: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>

[33mcommit f29aeabbcf73fa5947bc5388d02476cc8986734c[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Tue May 7 07:06:04 2024 +0000

    chore(Order): Clean up frame instances (#12709)
    
    This is the style-only part of #10560

[33mcommit 35c93d93deea35ecbdf40befd298005ae137a73d[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Tue May 7 07:06:03 2024 +0000

    feat: Construct a tripartite graph from its triangles (#12570)
    
    Both the lower bound of the Ruzsa-Szemer√©di problem and the proof of the corners theorem define an auxiliary tripartite graph by specifying its triangles and showing that there are no more.
    
    This PR provides the boilerplate for this construction. It greatly simplifies both proofs.
    
    Co-authored-by: Bhavik Mehta <bhavik.mehta8@gmail.com>

[33mcommit 5e843131cccdc65039f2037be5b2a7ea75a3ae9b[m
Author: Kim Morrison <scott@tqft.net>
Date:   Tue May 7 06:40:09 2024 +0000

    chore: update Std -> Batteries (#12720)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit f05781e02a81fca40869cb1e5a9bf415a42b70ca[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue May 7 03:11:52 2024 +0000

    refactor(Measure): improve defeq for `‚ä§` (#12706)
    
    Now `(‚ä§ : Measure Œ±).toOuterMeasure = ‚ä§` is defeq.

[33mcommit 21b3a48ba0f69a4ae9eb44dbacbc4de43a6290bf[m
Author: Mac Malone <mac@lean-fro.org>
Date:   Tue May 7 01:05:37 2024 +0000

    refactor: replace `@[reducible]` with `abbrev` (#12614)
    
    A test to see how many uses of `@[reducible]` in Mathlib can be replaced with `abbrev`.
    
    **TODOs:**
    * `@[to_additive (attr := reducible)] def`
    * `attribute [reducible] ConcreteCategory.forget`
    
    
    Co-authored-by: tydeu <tydeu@hatpress.net>
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 4199e29c92ebe1352ac437120f82f1b9eb005857[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon May 6 18:48:33 2024 +0000

    feat: add `strictMono_mersenne` and corollaries (#12687)
    
    Incl. upgrade of `mersenne_pos` to an `Iff`.
    
    Also add a `positivity` extension and use it in a few lemmas.

[33mcommit 6a170326b1113dfb32dc5623c2b9a00a0e7d543f[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Mon May 6 17:51:02 2024 +0000

    doc: Fix typo in `LinearMap.CompatibleSMul` (#12671)

[33mcommit 20a3902d2dcb2267cc7bc408f2074b882c212de6[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Mon May 6 16:43:13 2024 +0000

    feat: More additive energy lemmas (#12569)
    
    Also rename `additiveEnergy`/`multiplicativeEnergy` to `addEnergy`/`mulEnergy`.
    
    From LeanAPAP

[33mcommit 4a74e051a2bb399ce399c693fc031caef5a3a658[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Mon May 6 15:57:27 2024 +0000

    chore: Move Behrend's construction (#12707)
    
    Now that we have a `Combinatorics.Additive.AP` folder, we might as well use it.

[33mcommit 1b80fd08486d778ba922d1ef592d02c2810b69fd[m
Author: Jon Eugster <eugster.jon@gmail.com>
Date:   Mon May 6 15:57:26 2024 +0000

    feat(Data/Quot): add surjective_quotient_mk (#12702)
    
    add missing `surjective_quotient_mk` to mirror `surjective_quotient_mk'`, `Quotient.surjective_quotient_mk''`, and `surjective_quot_mk`.

[33mcommit 89472cc18bc47a31f5d043fb33876084bde419fa[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Mon May 6 15:07:10 2024 +0000

    feat: add `natCast` lemmas for `Matrix.kronecker` (#12703)

[33mcommit 57511d5f9b9a6fad9d7186d49697f40c3da905e9[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon May 6 15:07:09 2024 +0000

    feat(CompactOpen): add instances (#12667)

[33mcommit a169186c2862ae4ea0801a5c79c0cd0b3f1616d8[m
Author: grunweg <johan@commelin.net>
Date:   Mon May 6 13:10:02 2024 +0000

    chore: use #adaptation_note for labelling adaptation notes (#12672)
    
    
    
    Co-authored-by: Michael Rothgang <rothgami@math.hu-berlin.de>

[33mcommit 78e447bdfc00bfd482f142cd02b41ebdede3a8f5[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Mon May 6 12:00:09 2024 +0000

    feat: `BiheytingAlgebra` instances for `Prod`, `Pi`, and `OrderDual` (#12699)

[33mcommit 96537938bb01340338e0e52c1fc78f4c30da8527[m
Author: Shrys <shreyasss94@gmail.com>
Date:   Mon May 6 12:00:07 2024 +0000

    feat : apply Qq update to add lake manifest (#12698)
    
    Mathlib update corresponding to [Qq update PR 42](https://github.com/leanprover-community/quote4/pull/42). The corresponding Qq PR added lake-manifest files into the repository. This PR updates mathlib to this commit of the PR. This PR addresses the warning message `warning: Qq: ignoring missing dependency manifest '././.lake/packages/Qq/lake-manifest.json'` when running `lake update` on a math project. For discussion see [this zulip thread](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Qq.20manifest.20warning.20in.20new.20math.20project/near/437228437)

[33mcommit 8ea47a768da37214482101e53b3d77c205b995fb[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Mon May 6 12:00:06 2024 +0000

    feat: the second derivative is the derivative of the derivative (#12697)
    
    Also expand a little bit the API and some cleanups.

[33mcommit a4013ca07157247ef1587bf42c0fd6e8b4b1d2ca[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Mon May 6 12:00:05 2024 +0000

    refactor(AlgebraicGeometry.EllipticCurve.Affine): stronger `map_simp` (#12696)
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit f5fbe095a20c0f89887bd82f51d1de028c627567[m
Author: R√©my Degenne <Remydegenne@gmail.com>
Date:   Mon May 6 12:00:04 2024 +0000

    feat: generalize kernel Radon-Nikodym derivative to `CountableOrCountablyGenerated` (#12571)
    
    Radon-Nikodym derivatives of finite kernels `kernel Œ± Œ≥` are currently defined under the assumption that `Œ≥` is countably generated. We extend the construction to the case that either `Œ±` is countable or `Œ≥` is countably generated.
    
    
    
    
    Co-authored-by: R√©my Degenne <remydegenne@gmail.com>

[33mcommit 5bd44fb33d90cbf9a840ec0b609a74b0f377d8c9[m
Author: Brendan Seamas Murphy <shamrockfrost@gmail.com>
Date:   Mon May 6 10:56:33 2024 +0000

    chore(Data/List/Forall): more migration nthLe -> get (#12645)
    
    Rewrite `List.Forall‚ÇÇ.nthLe` and some related theorems in terms of `get`.
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit e5ecd7db552e15fba586004770f6b280bbb77e65[m
Author: Kim Morrison <scott@tqft.net>
Date:   Mon May 6 08:44:24 2024 +0000

    chore: remove pp.proofs.withType, as this is now default (#12689)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 6b8edd9e9f060c37d0a9ccd21a7033050b77aade[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Mon May 6 08:44:23 2024 +0000

    chore: Rename Salem-Spencer sets to 3AP-free sets (#12682)
    
    Salem and Spencer were neither the first to write a paper on them, nor gave the best bounds, hence the current choice of name is a bit odd (and so is the Wikipedia page).
    
    This PR renames `MulSalemSpencer` to `ThreeGPFree` and `AddSalemSpencer` to `ThreeAPFree`.

[33mcommit b511b1455512c89c8e21fb20ef8f6f257d430e53[m
Author: Kim Morrison <scott@tqft.net>
Date:   Mon May 6 07:35:15 2024 +0000

    chore: use lake build --no-build to check the cache (#12688)
    
    See discussion at [zulip](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/error.20writing.20standard.20output.3A.20Broken.20pipe/near/437160791).
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 22b0893816aac4017a1fb5b6eb9542123e22e875[m
Author: Luigi Massacci <luigi.massacci.it@gmail.com>
Date:   Mon May 6 07:35:14 2024 +0000

    feat(Topology/Bases): add lemma Embedding.separableSpace from Embedding.secondCountableTopology (#12674)
    
    We prove that if a space embeds in a second-countable space, then it is separable, by weakening the same result for second-countability. Light generalization of the statement that if a metric space embeds into a separable metric space then it is itself separable.

[33mcommit a8b4cf4e160afe205722aa13991ac45e507bbd0a[m
Author: Johan Commelin <johan@commelin.net>
Date:   Mon May 6 07:35:13 2024 +0000

    chore(Tactic): command/tactic/term elaborator for adaptation notes (#12662)
    
    This PR introduces `#adaptation_note`. The main benefit is that this prevents typos in the string "Adaptation note". Such typos would make it hard to find the note later. A side benefit is that the command comes with a docstring that explains the purpose of adaptation notes in general.
    
    Co-authored-by: Kyle Miller <kmill31415@gmail.com>
    
    
    
    Co-authored-by: adomani <adomani@gmail.com>

[33mcommit 594e37338bf813d9fa4c17281e4a6ef885e19f0d[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon May 6 07:35:12 2024 +0000

    chore: migrate from `List.removeNth` to `List.eraseIdx` (#12660)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>
    Co-authored-by: Kim Morrison <kim@tqft.net>

[33mcommit 075ae93c127d281c9409785b7d6aee99efb8fd68[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Mon May 6 07:35:11 2024 +0000

    feat(Analysis/SpecialFunctions/Pow/Real): rpow_ne_zero (#12428)
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit 4aea4b560912202c17dfc2416fe2be3a75a7e86f[m
Author: David Loeffler <d.loeffler.01@cantab.net>
Date:   Mon May 6 07:35:10 2024 +0000

    feat(NumberTheory/LSeries): Even Hurwitz zeta functions (II) (#12265)
    
    This is a sequel to #12147, adding the key properties of the even Hurwitz zeta function: it is differentiable away from s = 1, and it agrees with the Dirichlet series when the latter converges.

[33mcommit c1186fe916fa9a9999af0d357f2db265af878812[m
Author: Kim Morrison <scott@tqft.net>
Date:   Mon May 6 06:25:54 2024 +0000

    chore: bump importGraph (testing lakefile.toml there) (#12690)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 9de4ec83820374aec741f120917d5bf57c00251f[m
Author: Pol'tta / Miyahara K≈ç <pol_tta@outlook.jp>
Date:   Mon May 6 05:19:53 2024 +0000

    fix: pretty print `vecEmpty` as `![]` even when applied (#12592)
    
    Currently, an application of a vector can't be delaborated well:
    ```lean
    def myAppVec := ![0, 1] 0
    
    #print myAppVec
    /-
    def Matrix.myAppVec : ‚Ñï :=
    vecCons 0 ![1] 0
    -/
    ```
    This PR refactors the delaborators for a vector:
    ```lean
    def myAppVec := ![0, 1] 0
    
    #print myAppVec
    /-
    def Matrix.myAppVec : ‚Ñï :=
    ![0, 1] 0
    -/
    ```
    
    
    
    Co-authored-by: Pol'tta / Miyahara K≈ç <52843868+Komyyy@users.noreply.github.com>

[33mcommit 34323947f8f2b39ee111e1126c1249d41bdd5e45[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon May 6 04:08:10 2024 +0000

    feat: add `Nat.totient_eq_zero` (#12685)
    
    Also upgrade `totient_pos` to an `iff`.

[33mcommit 7d04e93bf0b02b8c72d24882ecf23cd429e2ad51[m
Author: Mario Carneiro <mcarneir@andrew.cmu.edu>
Date:   Mon May 6 04:08:09 2024 +0000

    fix: adaptations for lake changes in 4.8.0-rc1 (#12620)
    
    See [Zulip discussion](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/My.20branch.20with.20a.20.60sorry.60.20in.20it.20passed.20CI/near/436837966).
    
    * Use the `--wfail` option in lake instead of the `warningAsError` lean flag
    * Add `Foo.log.json` files to the cache so that warnings are not forgotten when laundered via the cache
    
    
    
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>

[33mcommit f80fa93645544d03b0d9301b5a85c7d81b31f9a9[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon May 6 03:42:38 2024 +0000

    refactor: use `FunLike` for `OuterMeasure` (#12668)
    
    Also extracts `trim_anti_measurableSpace`

[33mcommit 3e7a1952821f97af73616bdb2cfbf833afbb2ee1[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Mon May 6 01:06:24 2024 +0000

    refactor: make TProd reducible (#12686)
    
    In various places we want `TProd Œ± (i :: is) = Œ± i √ó TProd Œ±` to be transparent.

[33mcommit b8ee9e380d355d3e63277a31c19b043cb3423d8b[m
Author: David Renshaw <dwrenshaw@gmail.com>
Date:   Mon May 6 00:00:53 2024 +0000

    chore: deprecate redundant lemma List.find?_mem (#12677)
    
    Deprecates `List.find?_mem`, which duplicates `List.mem_of_find?_eq_some` from Std:
    https://github.com/leanprover/std4/blob/80cf5a1f2d8ed48753e8ff783bf0f7b6872bb007/Std/Data/List/Lemmas.lean#L1755-L1759
    
    The lemmas only differ in the ordering of the implicit arguments `l` and `a`.
    
    ```lean
    List.find?_mem.{u} {Œ± : Type u} {p : Œ± ‚Üí Bool} {l : List Œ±} {a : Œ±} (H : List.find? p l = some a) : a ‚àà l
    List.mem_of_find?_eq_some.{u_1} : ‚àÄ {Œ± : Type u_1} {p : Œ± ‚Üí Bool} {a : Œ±} {l : List Œ±}, List.find? p l = some a ‚Üí a ‚àà l
    ```

[33mcommit 07e4145a87d0a14cb4abcc9ccdaa5d5764910e66[m
Author: David Renshaw <dwrenshaw@gmail.com>
Date:   Sun May 5 22:56:51 2024 +0000

    chore: shorten proof of List.sizeOf_dropSlice_lt (#12678)
    
    Replaces an `induction` with direct usage of `drop_sizeOf_le`.
    
    This simplification was found by [tryAtEachStep](https://github.com/dwrensha/tryAtEachStep).

[33mcommit 7d9e6779a8035b1e366435038919ce5c1f8805c0[m
Author: Luigi Massacci <luigi.massacci.it@gmail.com>
Date:   Sun May 5 21:52:49 2024 +0000

    doc(Tactic.Measurability): fixed copy paste error from continuity tactic docs (#12683)
    
    Changed "continuity statements" to "measurability statements"

[33mcommit 8c8a6b17b6846e0597f908df6d3f5a1de8ab826e[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Sun May 5 19:07:08 2024 +0000

    chore(Data/Set/Subset): simplify `image_val_sUnion` (#12654)
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit 4d675c95944d07fe9977ed5eedf23e9a9ef19e52[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Sun May 5 19:07:07 2024 +0000

    feat: Monotonicity of `Nat.cast : Nat ‚Üí Fin (n + 1)` (#12652)

[33mcommit b41d4d866e9589d6a0e7a723609e82ea3dbf376f[m
Author: Hyeokjun Kwon <86776403+Jun2M@users.noreply.github.com>
Date:   Sun May 5 19:07:06 2024 +0000

    feat(Nat/Digits): ofDigits_add_ofDigits_eq_ofDigits_zipWith_of_length_eq (#12642)

[33mcommit 1abe88190acfc001884bdd1c75553b3c575fa859[m
Author: Herman Chau <beijingherman@gmail.com>
Date:   Sun May 5 19:07:05 2024 +0000

    Add constantCoeff_smul to RingTheory.PowerSeries.Basic (#12616)
    
    ```
    example : (constantCoeff ‚Ñù) ((2:‚Ñù)‚Ä¢X) = 0 := by simp
    ```
    simp doesn't solve the above because there is no lemma constantCoeff_smul tagged simp. This PR adds it to RingTheory.PowerSeries.Basic.
    
    
    
    Co-authored-by: sgouezel <sebastien.gouezel@univ-rennes1.fr>

[33mcommit 7565dc2f6cd19f317d2f8a071c01113163d49a1b[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Sun May 5 19:07:04 2024 +0000

    chore(Data/List): remove some long-deprecated theorems (#12350)
    
    All of these declarations have been deprecated since their files were ported (in January 2023).
    
    Move `nthLe` from `Init` to `List/Basic`, next to the other lemmas using it.

[33mcommit 6821ad2273c15a426dda1fe04f4791e8dec51602[m
Author: Eric Wieser <yael.dillies@gmail.com>
Date:   Sun May 5 18:04:32 2024 +0000

    feat: more NNRat lemmas (#12586)
    
    Note that the previous version of `Rat.ofScientific_eq_ofScientific` was not well-formed, as it did not include the necessary `ofNat`s.
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>
    Co-authored-by: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>

[33mcommit 927ceb40478b7dc6e05889d93e5a821b573892c0[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Sun May 5 17:09:49 2024 +0000

    chore: reduce imports in ZMod.Basic (#12478)
    
    - While at it, document the lemmas that were moved, and two similar lemmas in `ZMod.Basic`.
    
    
    
    Co-authored-by: Michael Rothgang <rothgami@math.hu-berlin.de>

[33mcommit 1e9f6406fbec558bb273b1315776cb7bc4f18d3e[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sun May 5 13:38:26 2024 +0000

    refactor(Data/PNat): better `OfNat` instance (#12420)
    
    Assume `[NeZero n]` instead of talking about `n+1`.
    This way we can reuse the raw natural literal `n` in `PNat.val_ofNat`.
    
    Also add `PNat.mk_ofNat` and drop some `bit0`/`bit1` lemmas.

[33mcommit abfb0e2c8d1ad7f85f7e0a22a633fb29637e2557[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Sun May 5 13:12:35 2024 +0000

    feat(Analysis/PSeries): simp for summable_nat_pow_inv (#12423)
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit f98db5422e9b72ec10159bc0176786a668202626[m
Author: Michael Stoll <Michael.Stoll@uni-bayreuth.de>
Date:   Sun May 5 12:47:57 2024 +0000

    feat: add `HasSum f a ‚Üí HasProd (exp ‚àò f) (exp a)` (#12635)
    
    This adds lemmas saying that ` HasSum f a`  implies `HasProd (exp ‚àò f) (exp a)` for `exp = rexp, cexp, NormedSpace.exp`.
    
    While the `rexp`  and `cexp`  versions could be deduced from the `NormedSpace.exp` one, we give a direct proof (and so avoid needing to import stuff about `NormedSpace.exp` for these results; the proofs are also a bit faster that way).
    
    Based on the discussion below, this also renames `Filter.Tendsto.exp` to `Filter.Tendsto.rexp` for the version specific to the real exponential function, so that `Filter.Tendsto.exp` can be used for the corresponding statement involving `NormedSpace.exp`.
    
    See [here](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/exp.28tsum.29.20.3D.20tprod.28exp.29/near/436891747) on Zulip.
    
    
    
    Co-authored-by: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>

[33mcommit f9da50e388ea98a1f3d769e0758578f1993fac8d[m
Author: Christopher Hoskin <christopher.hoskin@gmail.com>
Date:   Sun May 5 12:21:00 2024 +0000

    chore(LinearAlgebra/BilinearForm): Add missing deprecated dates (#12547)
    
    Adds dates to results deprecated in #12132 and #12078.

[33mcommit a2efba9d46380c06400eaa5e9c80affc4542002a[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Sun May 5 12:20:59 2024 +0000

    chore: remove temporary reviewdog fix (#12284)
    
     - [x] depends on: https://github.com/reviewdog/action-suggester/pull/52
    
    
    This reverts #12280 after the upstream fix
     https://github.com/reviewdog/reviewdog/issues/1696
    has propagated to reviewdog/action-suggester@v1. This should happen when
    https://github.com/reviewdog/action-suggester/releases
    has a release that uses [v0.17.4](https://github.com/reviewdog/reviewdog/releases/tag/v0.17.4) or higher.
    
    When this happens, rebase this pull request and re-trigger to see that it doesn't fail with the 300 dummy files. Then remove the dummy files and merge this pull request.
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit 38f33f352553167105bfad70fed5311c49b57b60[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Sun May 5 11:45:11 2024 +0000

    chore: replace `Quotient.exists_rep` with `induction` (#12471)
    
    Following my advice [on Zulip](https://leanprover.zulipchat.com/#narrow/stream/113489-new-members/topic/getting.20witness.20for.20points.20in.20the.20quotient/near/435785862); let's change more code to use `induction` so that users learning by example learn a better approach.
    
    This is not exhaustive.

[33mcommit 1facc8b1bc6bf72a76b7bd235e952f36dcc9303c[m
Author: Floris van Doorn <fpvdoorn@gmail.com>
Date:   Sun May 5 11:45:10 2024 +0000

    fix: move convolution to MeasureTheory namespace (#12376)
    
    also fix some porting notes

[33mcommit ff35083cb67970f88d9a6b2c14d06fdf299b6d30[m
Author: Floris van Doorn <fpvdoorn@gmail.com>
Date:   Sun May 5 09:43:37 2024 +0000

    feat: clean-up `Topology.Order.IntermediateValue` (#12403)
    
    * Also add variants of `exists_apply_eq_apply[']` for binary and ternary functions as simp-lemmas.
    * Remove note on `exists_apply_eq_apply'` that no longer applies.

[33mcommit c1f040b7f1014c9eda2f5b9accb7dca9ed7ae097[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Sun May 5 04:54:25 2024 +0000

    chore(Data/List/Perm): some nthLe -> get migration (#12397)
    
    
    
    Co-authored-by: Fr√©d√©ric Dupuis <dupuisf@iro.umontreal.ca>

[33mcommit 3d1180fd2eef94f67a3b10aa2ddf517bc1af5007[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Sun May 5 03:48:04 2024 +0000

    feat: Product of injective functions on sets (#12656)

[33mcommit 7769e81dc25ed9b7ee5b77b6dc8efc10a2501037[m
Author: David Renshaw <dwrenshaw@gmail.com>
Date:   Sun May 5 03:48:03 2024 +0000

    chore: deprecate redundant lemma List.get?_injective (#12630)
    
    Deprecates `List.get?_injective`, which is a duplicate of `List.gen?_inj` in `Std`: https://github.com/leanprover/std4/blob/80cf5a1f2d8ed48753e8ff783bf0f7b6872bb007/Std/Data/List/Lemmas.lean#L773-L788

[33mcommit 26918687403e3a36cc3f2209ad2db0da46295aed[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Sun May 5 02:43:57 2024 +0000

    feat: lemmas about `Sigma.curry` (#12474)
    
    This provides:
    
    * Basic `simp` lemmas for `Equiv.piCurry`
    * Algebraic lemmas for `Sigma.curry` and `Sigma.uncurry`
    * A `LinearEquiv` version of `Equiv.piCurry`
    * A lemma about `Sigma.curry` and `Pi.mulSingle`
    
    The change from `Sort _` to `Type*` is a no-op, the `_` was inferred as `_ + 1`.

[33mcommit 0db055dae94e1f287f3ef58d94934701308dcaed[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Sun May 5 02:19:24 2024 +0000

    style(test/polyrith): adapt to mathlib4 style (#12091)
    
    Adapt indentation to mathlib4 conventions. Found when clearing out old branches.

[33mcommit b63253763050655b5a9bbcfd2df7f08b816b7cd8[m
Author: damiano <adomani@gmail.com>
Date:   Sat May 4 21:55:17 2024 +0000

    docs: fix typo (#12659)
    
    `single 1 1` is the `MonoidAlgebra` unit, while the `AddMonoidAlgebra` unit is `single 0 1`.

[33mcommit a4b23a6d64afa3f71e71ffd34715232872330c44[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Sat May 4 21:55:16 2024 +0000

    feat: `a / b ‚â§ c ‚Üî a / c ‚â§ b` (#12622)

[33mcommit 73cc034405405cb4239d9afc3dd5830ac05f4851[m
Author: Mitchell Lee <trivial171@gmail.com>
Date:   Sat May 4 21:55:15 2024 +0000

    docs(RingTheory/Flat/Basic): remove completed TODO (#12612)
    
    The stability of flatness under base change is in mathlib (in RingTheory/Flat/Stability). So, we remove the part of the docs that says that it isn't.

[33mcommit 83a590b71727b73201ce65a17fbcb6fcd0be31a2[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Sat May 4 21:00:18 2024 +0000

    feat: add `NonUnital{Star}AlgHom.restrictScalars` (#12657)

[33mcommit 269a094fd8f1ddfe61ae96e4bb1274ff4663ec98[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Sat May 4 21:00:17 2024 +0000

    feat: Components of `Multiset.prod` over `Œ± √ó Œ≤` (#12655)

[33mcommit 0ebb8ea33aa897a2d7e39c02b43d21af31600d65[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Sat May 4 19:51:41 2024 +0000

    feat: Locally linear graphs (#12526)
    
    Define predicates for a graph to have edge-disjoint triangles and to be locally linear (edge-disjoint triangles and each edge belongs to a triangle).

[33mcommit 06b48c3f8dfd7e09a2e77cb583c55cd67bd7b59e[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Sat May 4 19:06:19 2024 +0000

    feat: integration by parts for line derivatives and Frechet derivatives (#11937)
    
    
    
    Co-authored-by: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>

[33mcommit 8122c5d85ce8dd2ae93222b030b9c0dba930b7d0[m
Author: Christopher Hoskin <christopher.hoskin@gmail.com>
Date:   Sat May 4 19:06:18 2024 +0000

    feat(Topology/Order/LawsonTopology): Introduce the Lawson Topology to Mathlib (#11710)
    
    Introduces the Lawson Topology on a preorder.
    
    The Lawson Topology is defined as the meet of the [Lower Topology](https://github.com/leanprover-community/mathlib/pull/17426) and the [Scott Topology](#2508) previously introduced.
    
    A basis for the Lawson Topology is defined and some basic results are established:
    
    - An upper set is Lawson open if and only if it is Scott open
    - A lower set is Lawson closed if and only if it is closed under sups of directed sets
    - The Lawson topology on a partial order is T‚ÇÄ
    
    
    
    Co-authored-by: Christopher Hoskin <mans0954@users.noreply.github.com>
    Co-authored-by: Christopher Hoskin <christopher.hoskin@overleaf.com>

[33mcommit 15c55c21d4cfa938c809c86b25e8081864b71d79[m
Author: JonBannon <jbannon@siena.edu>
Date:   Sat May 4 18:40:37 2024 +0000

    refactor: new definition of `eigenvectorUnitary` (#11363)
    
    This file contains the spectral theorem for Hermitian matrices and nearby relevant theorems. We rewrote the file, recasting the natural eigenvector basis matrix as a unitary called `eigenvectorUnitary`, and removed a lot of defeq abuse that the original file contained, considerably simplifying things.
    
    
    
    Co-authored-by: JonBannon <59937998+JonBannon@users.noreply.github.com>

[33mcommit b02c426e43ec69358dd867c58f78dea0189a1d3f[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Sat May 4 10:43:34 2024 +0000

    chore(LinearAlgebra): format/add dates to remaining deprecations (#12407)
    
    - aim for the deprecation date on the same line as the attribute (this is easier to search).
    - dates were found using mathlib-changelog

[33mcommit 447d24f800e78020ba69357a06ddd78407e30eaf[m
Author: damiano <adomani@gmail.com>
Date:   Sat May 4 06:09:51 2024 +0000

    replay: #3604 for MonoidAlgebra (#12646)
    
    Weaken a couple of `DistribSMul` to `SMulZero` in `MonoidAlgebra`.
    
    This parallels the analogous assumptions in the `AddMonoidAlgebra` instances that were weakened in #3604.
    
    Found in the context of unifying `AddMonoidAlgebra` and `MonoidAlgebra`.

[33mcommit 25b2fcc076b8159e5366e709b19626f7a23422bb[m
Author: Pol'tta / Miyahara K≈ç <pol_tta@outlook.jp>
Date:   Sat May 4 05:42:27 2024 +0000

    style: capitalizes file names in `Counterexamples` (#12615)

[33mcommit 1556f9eb039b47a890638e573a37f1f2544fbe01[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sat May 4 05:06:06 2024 +0000

    chore(Analysis/SpecialFunctions): `Real.rpow` -> `_ ^ _` (#12613)

[33mcommit 6da5af08f49a34bbacf4afc9c888d438af1f52e8[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Fri May 3 22:49:22 2024 +0000

    chore: rename `cfc_map_quasispectrum` (#12640)

[33mcommit e5e93cffa1ba2b6e4ce8f1267aaa1bb6fa588691[m
Author: Kim Morrison <scott@tqft.net>
Date:   Fri May 3 18:10:54 2024 +0000

    chore: cache warns about bad v4.8.0-rc1 toolchain (#12623)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 97854885f4750a90c0628366fca1b0ff7e22daad[m
Author: Joachim Breitner <mail@joachim-breitner.de>
Date:   Fri May 3 17:44:50 2024 +0000

    refactor: simplify bundledAbstractFilteredClosure definition (#12603)
    
    no need to go through `Nat.strongRec'`, this is essentially well-founded
    recursion.

[33mcommit 61b5888ff8e12bedb74e9338e6a3250d169da6cf[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Fri May 3 14:57:41 2024 +0000

    chore: remove two `by exact` leftover from porting (#12626)
    
    drive-by: two unused variables
    
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit 258961687d388593c812768510ec9894d1cdbbdf[m
Author: Riccardo Brasca <riccardo.brasca@gmail.com>
Date:   Fri May 3 14:30:04 2024 +0000

    perf(NumberTheory.NumberField.Basic): make `RingOfIntegers` a Type. (#12386)
    
    We make `ùìû K` a type rather then a `Subalgebra` to speed up instances search.
    
    Co-authored-by: Anne Baanen <[Vierkantor](https://github.com/Vierkantor)>
    Co-authored-by: Ya√´l Dillies <[YaelDillies](https://github.com/YaelDillies)>
    Co-authored-by: Matthew Ballard <[mattrobball](https://github.com/mattrobball)>
    
    
    
    Co-authored-by: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
    Co-authored-by: Matthew Ballard <matt@mrb.email>
    Co-authored-by: Vierkantor <vierkantor@vierkantor.com>
    Co-authored-by: Ya√´l Dillies <yael.dillies@gmail.com>
    Co-authored-by: Anne Baanen <Vierkantor@users.noreply.github.com>

[33mcommit efb7091c8693e7c41303e2998bcb2cf60d811910[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Fri May 3 14:04:09 2024 +0000

    move: Rearrange basic algebraic subobject (#11104)
    
    For `Foo` an algebraic typeclass, the basic theory of `Subfoo` currently is under `FooTheory.Subfoo`. This is in contradiction to other kinds of subobjects, eg order theoretic ones.
    
    This PR moves that basic theory to `Algebra.Foo.Subfoo` instead.
    
    [Zulip](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Location.20of.20algebraic.20subobjects)
    
    
    
    Co-authored-by: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
    Co-authored-by: Vierkantor <vierkantor@vierkantor.com>

[33mcommit 2dd08f89935106fb70aeb801e555e40952ec9229[m
Author: Chris Birkbeck <c.birkbeck@ucl.ac.uk>
Date:   Fri May 3 08:33:27 2024 +0000

    feat(Topology/Algebra/InfiniteSum/Real): Add partition lemma (#12446)
    
    We also  `summable_partition` (and the required  `Set.sigmaEquiv`), needed for #10377.
    
    
    
    Co-authored-by: Chris Birkbeck <c.birkbeck@uea.ac.uk>

[33mcommit 7e9dce6a1481cb5ca87b049cb3d191f229b19005[m
Author: Felix-Weilacher <fweilach@andrew.cmu.edu>
Date:   Fri May 3 07:45:09 2024 +0000

    feat(MeasureTheory): add CountablySeparated (#12433)
    
    add a typeclass `CountablySeparated _` abbreviating `HasCountableSeparatingOn _ MeasurableSet univ`. This is a common assumption is measure theory and is already used often in the library.
    
    Additionally, mathlib was previously not consistent in choosing between the equivalent spellings `HasCountableSeparatingOn X MeasurableSet s` and `HasCountableSeparatingOn s MeasurableSet univ` for X a measurable space and `s : Set X`. (In the latter spelling, `s` is being coerced to the subtype of `X`.) Lemmas and instances are added to help unify the situation.  This is now spelled `CountablySeparated s`.
    
    
    
    Co-authored-by: Felix-Weilacher <112423742+Felix-Weilacher@users.noreply.github.com>

[33mcommit e6f552f77a91b06b52d1c4b08f61c77f54f09f37[m
Author: Heather Macbeth <25316162+hrmacbeth@users.noreply.github.com>
Date:   Fri May 3 04:25:54 2024 +0000

    chore: make every Chebyshev polynomial argument a Gr√∂bner basis computation (#12001)
    
    Replace every `calc` in the file by a list of algebraic identities followed by an appropriate `linear_combination`.

[33mcommit 437c7c8b2c7814c8cf9307e56066215865ec05c2[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Thu May 2 22:40:11 2024 +0000

    chore(Topology/Category): remove `ProfiniteMax` and `CompHausMax` (#12599)
    
    They are no longer necessary after [#3981](https://github.com/leanprover/lean4/pull/3981)

[33mcommit efad919b6687484ee26ac7c65a29c972d2112b8d[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Thu May 2 19:23:25 2024 +0000

    feat: enable dot notation for `HasEigenvalue` and the spectrum (#12580)

[33mcommit 45bd0a2131571aecac75ed49a183f0369d97a133[m
Author: Chris Birkbeck <c.birkbeck@ucl.ac.uk>
Date:   Thu May 2 16:47:38 2024 +0000

    feat(Order/Interval/Finset/Box): add lemma (#12444)
    
    Add `eq_zero_iff_eq_zero_of_mem_box` lemma needed for #10377

[33mcommit 3e76e0d092fe58d70a9aa39a033637430f5bdd21[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Thu May 2 15:03:47 2024 +0000

    feat: Triangle removal (#12523)
    
    Prove the triangle removal lemma. Definitions that are internal to the proof are made private.
    
    Co-authored-by: Bhavik Mehta, <bhavikmehta8@gmail.com>

[33mcommit 4e159e0ef38e6e7894342429440ec9b4f5011bfd[m
Author: Josha Dekker <114015169+JADekker@users.noreply.github.com>
Date:   Thu May 2 14:08:43 2024 +0000

    feat (SpecificLimits/Basic) : add geometric lemma (#12594)
    
    Add ENNReal.tsum_geometric_add_one, which is a slightly modified version of ENNReal.tsum_geometric. It is natural to need the former in some cases where we use (n+1) to effectively run through the positive integers rather than natural numbers.

[33mcommit 22b9916c7e6ef1593385d56d76b1dea74114b15e[m
Author: Amelia Livingston <101damnations@github.com>
Date:   Thu May 2 14:08:41 2024 +0000

    feat: coalgebra isomorphisms (#11970)
    
    Isomorphisms of coalgebras. Mimics `Mathlib.Algebra.Module.Equiv`.

[33mcommit db651742f2c631e5b8525e9aabcf3d61ed094a4a[m[33m ([m[1;33mtag: v4.8.0-rc1[m[33m)[m
Author: Kim Morrison <scott@tqft.net>
Date:   Thu May 2 13:42:26 2024 +0000

    chore: move to v4.8.0-rc1 (#12548)
    
    This moves Mathlib to v4.8.0-rc1
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>
    Co-authored-by: Kim Morrison <kim@tqft.net>
    Co-authored-by: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>

[33mcommit f3ca78288e785e4c4219ab0e6a88af33dcb5b85f[m
Author: Matthew Robert Ballard <matt@mrb.email>
Date:   Thu May 2 12:35:56 2024 +0000

    perf(RingTheory.Kaehler): avoid mvar non-assignment (#12579)
    
    In these two declarations, Lean correctly tries to assign these metavariables but they are not assignable at this point. This forces a wild goose chase. It is simpler to just help it out.

[33mcommit 40cac78dd49675ab1a2350a6eb65c9466fd80b30[m
Author: Ralf Stephan <ralf@ark.in-berlin.de>
Date:   Thu May 2 08:30:24 2024 +0000

    feat(PNat/Basic): two small sub/le lemmata (#12492)

[33mcommit d9f149747c04f8bb199b594ef9b689f9bbf038dd[m
Author: Rida Hamadani <mridahamadani@gmail.com>
Date:   Thu May 2 00:23:50 2024 +0000

    feat(Data/Matrix): Equalities relating `mulVec` and `smul` (#12538)
    
    These lemmas should make working with vectors easier in some cases. Check [this](https://leanprover.zulipchat.com/#narrow/stream/113489-new-members/topic/Factor.20out.20a.20vector) related Zulip topic.
    
    
    
    Co-authored-by: Rida Hamadani <106540880+Rida-Hamadani@users.noreply.github.com>
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit afdc7729cafc1ca476165b2ade89d4150bcb1dd2[m
Author: Bolton Bailey <bolton.bailey@gmail.com>
Date:   Wed May 1 23:24:28 2024 +0000

    feat: exclude aesop from nonterminal simp check (#12585)
    
    Should make it so that aesop on the next line causes a nonterminal simp not to trigger the linter.

[33mcommit 2c1517a8b37beee8894dccdffd957f6e0e3d617e[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Wed May 1 23:24:27 2024 +0000

    chore(SimpleGraph/Regularity): Don't use `Classical` (#12575)
    
    The classical decidability instances were found in theorem statements, making them harder to use.

[33mcommit 2f50e348e51e608f3e424b9f16f19f2845263035[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Wed May 1 23:24:26 2024 +0000

    chore: Rename `Dart.is_adj` to `Dart.adj` (#12574)
    
    The `is` doesn't bring any information and `is_adj` really looks like a Lean 3-ism (even though it technically follows the Lean 4 naming convention).

[33mcommit 6a6473d9c0d8e59a580a4736af35de45e576d388[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Wed May 1 23:24:25 2024 +0000

    chore: Rename `Finset.inter_sdiff` to `Finset.inter_sdiff_assoc` (#12573)
    
    ... and turn it around. This matches `Set.inter_diff_assoc`.

[33mcommit 4c031bc49727d001bab4050838d8fd8d7a7b47d3[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Wed May 1 22:18:44 2024 +0000

    chore: adaptations to lean 4.8.0 (#12583)
    
    Mainly this adds names to instances, which are presumably necessary for some unspecified reason.

[33mcommit dfbbdde870541379f4445abb2d07e59fe8dd6b7f[m
Author: JonBannon <jbannon@siena.edu>
Date:   Wed May 1 20:55:47 2024 +0000

    feat: make `rank_mul_eq_left_of_isUnit_det` into an effective `simp` lemma (#12244)
    
    These theorems give that if A is a unit, or a unitary, in the n x n matrices over a commutative ring R, and B is an m x n matrix over R, that multiplying B by A on the left or right doesn't change the rank of B. To facilitate this, added `isUnits_det_units` and `det_isUnit` lemmas.
    
    
    
    Co-authored-by: JonBannon <59937998+JonBannon@users.noreply.github.com>
    Co-authored-by: Jireh Loreaux <loreaujy@gmail.com>

[33mcommit 94b9da4bb62df67d5cb23f17ed235ee9e776f713[m
Author: Christian Merten <christian@merten.dev>
Date:   Wed May 1 18:59:44 2024 +0000

    feat(RingTheory/AdicCompletion): refactor and expand API (#12516)
    
    Refactors and expands the API for adic completions. More precisely:
    
    - Renames `adicCompletion` to `AdicCompletion`.
    - Redefines `adicCompletion` in terms of a `transitionMap`.
    - Introduces `AdicCauchySequence` as the module of `I`-adic Cauchy sequences.
    - Provides a surjective linear map `AdicCauchySequence I M ‚Üí‚Çó[R] AdicCompletion I M` and an induction principle for `AdicCompletion I M` for that.

[33mcommit 17f6b37d1ece1092974ae7c4f8e82a567caa4fb0[m
Author: David Loeffler <d.loeffler.01@cantab.net>
Date:   Wed May 1 18:08:27 2024 +0000

    feat(NumberTheory/DirichletCharacter): vanishing of Gauss sums when add char is imprimitive (#12324)
    
    The aim of this PR is to show that `gaussSum œá e`, for `œá` a Dirichlet character mod `N` and `e` an additive character mod `N`, is zero if `œá` is primitive but `e` is not. This will be used to prove the functional equation for Dirichlet L-series in a later PR.
    
    Along the way we add various general-purpose lemmas about divisibility in `ZMod N` and other finite rings, and about conductors and primitivity of Dirichlet and additive characters.

[33mcommit f09d52971e23abcb8e4228a476524c5f7f9bdfac[m
Author: Johan Commelin <johan@commelin.net>
Date:   Wed May 1 17:08:44 2024 +0000

    feat(Algebra/Lie): existence of Cartan subalgebras (#12297)
    
    
    
    Co-authored-by: Oliver Nash <github@olivernash.org>

[33mcommit bd932a420fb77145f42959af990d5c1ef2a18842[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Wed May 1 16:10:09 2024 +0000

    chore: adaptations to lean 4.8.0 (#12578)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 4fce67d33ae7b517c96ac443b7184a85d65f9beb[m
Author: Matthew Robert Ballard <matt@mrb.email>
Date:   Wed May 1 15:23:41 2024 +0000

    perf(AG.RingHomProperties): less defeq abuse (#12563)
    
    We remove all uses (but one minor one) of `erw` in `affineLocally_iff_affineOpens_le` and add some explicit universe annotations. This speeds up the file by ~~50%~~ 40%.

[33mcommit 6fa9d2b59c006880584a08b54e73704a109f7cc9[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Wed May 1 15:23:40 2024 +0000

    chore: missing `DecidableEq (DirectSum _ _)` instance (#12491)

[33mcommit d24a65801b529e891a6b77ad0cad6b981215abe4[m
Author: Peter Nelson <71660771+apnelson1@users.noreply.github.com>
Date:   Wed May 1 14:27:28 2024 +0000

    feat(Order/Minimals, Order/RelIso/Set): four `RelIso` lemmas (#12558)
    
    This PR proves four rewrite lemmas about `RelIso` for statements that were previously a little awkward to navigate.

[33mcommit 7e5c6cb4131ba07f1a582e9e5d352b16fdb3fd5c[m
Author: Kim Morrison <scott@tqft.net>
Date:   Wed May 1 13:16:53 2024 +0000

    chore: remove @[simp] from Fintype.card_fun (#12577)
    
    On v4.8.0, `Fintype.card_fun` will no longer be a valid simp lemma, because the lhs will simplify via `Fintype.card_pi`. This PR cleans up pre-emptively.
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 1079fe3f2f6922315af85f870aae15948fc795e2[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed May 1 12:07:24 2024 +0000

    chore: update to leanprover/std4#769 (#12476)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 9481bfd671f3480f89ed48f0b094ed82b26c43f1[m
Author: Kim Morrison <scott@tqft.net>
Date:   Wed May 1 11:05:06 2024 +0000

    chore: remove simp from Finset.filter_congr_decidable (#12576)
    
    * This isn't used by simp in Mathlib
    * It's doing something weird, replacing an arbitrary `DecidablePred` by the one found by inference (this might have been relevant before, but isn't now that we reuse more instances via unification).
    * The @[simp] had been removed on `bump/v4.8.0`, although I no longer remember why.
    
    Let's just get rid of it.
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 154a87cdc796f476922d458f987f6f4d1709ed8c[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Wed May 1 09:30:34 2024 +0000

    refactor(Condensed): redefine condensed abelian groups as condensed `‚Ñ§`-modules (#12510)

[33mcommit 8390a316849d13600702c90be36baf740e61cef1[m
Author: Andrew Yang <the.erd.one@gmail.com>
Date:   Wed May 1 07:53:19 2024 +0000

    chore(CategoryTheory/MorphismProperty): Use le instead of subset (#12520)

[33mcommit 59710fc9d31d8d318d736afe9fe59f17198ba65a[m
Author: Kyle Miller <kmill31415@gmail.com>
Date:   Wed May 1 05:42:11 2024 +0000

    feat: make `Fact` testable for `slim_check` (#12566)
    
    Closes #12565
    
    Also adds a sort-of-missing `g.withContext`. I don't think its absence causes any errors.

[33mcommit dc5d5b4170f10312c607e00a9204d7c9137e6244[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed May 1 04:33:33 2024 +0000

    chore: update for leanprover/std4#758 (#12475)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 85a4f8e97feb7c7702cbed0d2453f89d12667d91[m
Author: Floris van Doorn <fpvdoorn@gmail.com>
Date:   Wed May 1 01:21:48 2024 +0000

    feat: make multiplication in [Add]MonoidAlgebra irreducible (#12554)
    
    * See [Zulip](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/multiplication.20on.20MvPolynomial.20should.20be.20irreducible)
    * The example in that thread takes ~55000ms on master and 43ms on this branch.
    * I expect that this will lead to little gains in the (working) proofs of Mathlib.
    * The multiplication on `MonoidAlgebra _ G` and `AddMonoidAlgebra _ (Additive G)` are still defeq the same.

[33mcommit dc034b59fbe3ebc7d5de6d8ae24eaea2c6983557[m
Author: Christian Merten <christian@merten.dev>
Date:   Wed May 1 00:06:11 2024 +0000

    feat(CategoryTheory/Yoneda): dualize yoneda lemma (#12041)
    
    Refactors `yonedaLemma`. Also dualizes all definitions and results related to `yonedaLemma` to obtain `coyonedaLemma` and friends.

[33mcommit ac466445552dd0ab1b7e57c32cb8749229de0c5b[m
Author: Matthew Robert Ballard <matt@mrb.email>
Date:   Tue Apr 30 23:37:43 2024 +0000

    perf(AlgebraicGeometry.Spec): add explicit universe annotations (#12557)
    
    Following #12469 and #12494, we add explicit universe levels in `AlgebraicGeometry.Spec` to speed up the file now and forestall greater slowdowns with the next version of Lean.

[33mcommit fd72582904498c47216fc9fa4f054316248e2f1e[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Tue Apr 30 22:42:11 2024 +0000

    chore: adaptations to lean 4.8.0 (#12562)

[33mcommit a0c4507027db8e28422aa86226a445615ba25b3d[m
Author: Bolton Bailey <bolton.bailey@gmail.com>
Date:   Tue Apr 30 18:55:17 2024 +0000

    feat: `{Mv}Polynomial.algebraMap_apply` simps (#11193)
    
    * Adds lemma `Polynomial.algebraMap_eq` analogous to `MvPolynomial.algebraMap_eq`
      * Adds some namespace disambiguations in various places to make this possible
    * Adds `simp` to these, and the related `{Mv}Polynomial.algebraMap_apply` lemmas.
      * Removes simp tag from later lemmas which linter says these additions now allow to be simp-proved
    
    
    
    
    Co-authored-by: Floris van Doorn <fpvdoorn@gmail.com>

[33mcommit a41b81fd542c689a99cc75cd4ef03ea54a7a73f0[m
Author: Floris van Doorn <fpvdoorn@gmail.com>
Date:   Tue Apr 30 16:16:52 2024 +0000

    perf: make LocalInvariantProp a structure (#12552)
    
    * Also redefine `MDifferentiableWithinAt` and `MDifferentiableAt` so that they are using `LiftProp[Within]At`.
    * This causes a speedup in the old proof of `ContMDiffWithinAt.cle_arrowCongr` by 25%.
    * Also give some extra information in the proof of `ContMDiffWithinAt.cle_arrowCongr` to speed it up by another factor of 4.
    * A bit of the fallout (e.g. in `hasSmoothAddSelf`) is from Lean unfolding *way* too many definitions to make things definitionally equal. Since `LiftPropWithinAt` is now a structure, the old proofs now break, unless you rewrite with `chartedSpaceSelf_prod`), causing much less defeq-abuse.
    * The new lemmas `MDifferentiableWithinAt.differentiableWithinAt_writtenInExtChartAt` and `MDifferentiableAt.differentiableWithinAt_writtenInExtChartAt` have a bit long names. This is to avoid naming clash with the existing `MDifferentiableWithinAt.differentiableWithinAt`. I'm open for other suggestions.

[33mcommit e50e1c9432de690f90ea7381d92cdd856bb0a826[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Tue Apr 30 16:16:51 2024 +0000

    chore: adaptations to lean 4.8.0 (#12549)

[33mcommit 3a7e6bb77ec51d8009107923a4c071a9473ecc5c[m
Author: Chris Birkbeck <c.birkbeck@ucl.ac.uk>
Date:   Tue Apr 30 15:37:20 2024 +0000

    chore: move summable lemmas (#12503)
    
    We move some lemmas out of `Topology/Instances/ENNReal` into `Topology/Algebra/InfiniteSum/Real`. Also use this to address a porting TODO.
    
    This was originally part of #12446
    
    
    
    Co-authored-by: Chris Birkbeck <c.birkbeck@uea.ac.uk>

[33mcommit fbdfab90102c3c8c34730fc6a86339eeef9e3047[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Tue Apr 30 15:37:19 2024 +0000

    feat(Algebra/Category/ModuleCat): the category of sheaves of modules has limits (#12269)
    
    
    
    Co-authored-by: Christian Merten <christian@merten.dev>

[33mcommit a7ed535af2a1f78accefeaeee98233dd25714110[m
Author: Chris Birkbeck <c.birkbeck@ucl.ac.uk>
Date:   Tue Apr 30 14:24:29 2024 +0000

    feat(Complex/UpperHalfPlane): add vertical strips (#12443)
    
    We define the vertical strips that are needed for proving Eisenstein series are modular forms #10377 . We also add the definition of sqrt{-1} as an elements of the upper half plane. Note that this is no longer needed for the modular forms PRs but its good to have.
    
    Sorry about the typo in the PR name, its not my day!
    
    
    
    Co-authored-by: Chris Birkbeck <c.birkbeck@uea.ac.uk>

[33mcommit 001604aea45b3682b3e968851264259ca9ca0458[m
Author: Kyle Miller <kmill31415@gmail.com>
Date:   Tue Apr 30 14:24:27 2024 +0000

    feat: `‚àë x ‚àà s, f x` to replace `‚àë x in s, f x` in the future (#6795)
    
    Adds new syntax for sum/product big operators for `‚àë x ‚àà s, f x`. The set `s` can either be a `Finset` or a `Set` with a `Fintype` instance, in which case it is equivalent to `‚àë x ‚àà s.toFinset, f x`.
    
    Also supports `‚àë (x ‚àà s) (y ‚àà t), f x y` for `Finset.sum (s √óÀ¢ t) (fun ‚ü®x, y‚ü© ‚Ü¶ f x y)`. Note that these are not dependent products at the moment.
    
    Adds `with` clauses, so for example `‚àë (x ‚àà Finset.range 5) (y ‚àà Finset.range 5) with x < y, x * y`, which inserts a `Finset.filter` over the domain set.
    
    Supports pattern matching in the variable position. This is by creating an experimental version of `extBinder` that uses `term:max` instead of `binderIdent`.
    
    The new `‚àë x ‚àà s, f x` notation is used in `Algebra.BigOperators.Basic` for illustration, but the old `‚àë x in s, f x` still works for backwards compatibility.
    
    
    Zulip threads [here](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/.E2.88.91.20x.20.E2.88.88.20s.2C.20f.20x.20instead.20of.20.E2.88.91.20x.20in.20s.2C.20f.20x/near/387352818) and [here](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Destruction.20and.20big.20operators/near/387366894)
    
    
    
    Co-authored-by: Ya√´l Dillies <yael.dillies@gmail.com>

[33mcommit 9de65eb9fd458086f8481ead88b697d8cdb3093f[m
Author: Martin Dvo≈ô√°k <martin.dvorak@matfyz.cz>
Date:   Tue Apr 30 13:20:09 2024 +0000

    chore(Init/Order/Defs): alias for le_antisymm (#12545)

[33mcommit d29b3780b08084b9a399b78af2e07ab83cdaf3d6[m
Author: damiano <adomani@gmail.com>
Date:   Tue Apr 30 11:37:29 2024 +0000

    chore: adapt to multiple goal linter 3 (#12372)
    
    A PR analogous to #12338 and #12361: reformatting proofs following the multiple goals linter of #12339.

[33mcommit be17d9b77ad9b9ef02ac0383389e430bb4917249[m
Author: Fr√©d√©ric Dupuis <dupuisf@iro.umontreal.ca>
Date:   Tue Apr 30 10:36:09 2024 +0000

    perf(Computability/AkraBazzi): fix slow aesop call (#12541)
    
    This fixes a very slow aesop call.

[33mcommit 37351aa945bbd38b6ce7e76033fb3ebd7a3e3d19[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Tue Apr 30 10:36:08 2024 +0000

    feat(Rat): Numerator and denominator of `q ^ n` (#12506)
    
    Prove `(q ^ n).num = q.num ^ n` and `(q ^ n).den = q.den ^ n` by making those defeq. It is somewhat painful. `(q ^ n).den = q.den ^ n` is also defeq for `NNRat`, but not `(q ^ n).num = q.num ^ n` due to the `Int.natAbs` in the definition of `NNRat.num`.
    
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 333b54aedc839303747a125277e576a12d956d81[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Tue Apr 30 09:33:22 2024 +0000

    feat(CategoryTheory): whiskering a fully faithful functor is full (#12527)
    
    We already had that whiskering by a faithful functor is faithful. This PR also adds the relevant `Full`¬†and `Faithful`¬†instances for the sheaf version of whiskering, (`sheafCompose`).

[33mcommit 35a84817958c03051612c548bedd46df6c2ae63d[m
Author: Xavier Roblot <roblot@math.univ-lyon1.fr>
Date:   Tue Apr 30 09:33:21 2024 +0000

    chore(NumberField/Units): split into two files (#12509)
    
    This PR splits the file `NumberField/Units.lean` into two files placed into a new folder `NumberField/Units`:
    - `Units/Basic.lean` contains the basic definitions and results about the unit group and its torsion subgroup,
    - `Units/DirichletTheorem.lean` contains the proof of Dirichlet unit theorem and results about the structure of the unit group and its rank.

[33mcommit fe96aa4593426fd16a2d3f744200b4f77a3b480f[m
Author: damiano <adomani@gmail.com>
Date:   Tue Apr 30 09:33:20 2024 +0000

    chore: adapt to multiple goal linter 2 (#12361)
    
    A PR analogous to #12338: reformatting proofs following the multiple goals linter of #12339.

[33mcommit 335470e523bfe84aa288da3cd9e487906c6b37e6[m
Author: Kim Morrison <scott@tqft.net>
Date:   Tue Apr 30 07:19:04 2024 +0000

    chore(List): delete old, unused, deprecated theorems (#9607)
    
    These theorems have been deprecated for at least a year, and are unused.
    
    
    
    Co-authored-by: Michael Rothgang <rothgami@math.hu-berlin.de>
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>
    Co-authored-by: Yury G. Kudryashov <urkud@urkud.name>

[33mcommit 45f93f3f49de0d86f67da4656718c6e6d0dde158[m
Author: damiano <adomani@gmail.com>
Date:   Tue Apr 30 06:07:46 2024 +0000

    chore: adapt to multiple goal linter 1 (#12338)
    
    A PR accompanying #12339.
    
    [Zulip discussion](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/linting.20against.20.22multi-goal.20proofs.22)

[33mcommit db6bc5d0e6384e17221f7f226e511342e68c1cb2[m[33m ([m[1;31morigin/alg_univ[m[33m)[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Tue Apr 30 05:21:39 2024 +0000

    feat: More big operator lemmas (#10551)
    
    From LeanAPAP

[33mcommit c81020ba99c7e2820a8a87322aef129287aac6b5[m
Author: Kim Morrison <scott@tqft.net>
Date:   Tue Apr 30 04:53:13 2024 +0000

    chore: minor backports from nightly-testing (#12531)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 35c984e27ebc56768a62750eca34b03821fe70d5[m
Author: Kim Morrison <scott@tqft.net>
Date:   Tue Apr 30 04:24:41 2024 +0000

    chore: HahnSeries.ofPowerSeries_X_pow linter complains on nightly-testing (#12529)
    
    On `nightly-testing` `ofPowerSeries_X_pow` becomes a bad simp lemma, because the LHS will simplify. Fix this by adding the missing lemma so the whole proof is just by `simp`, and remove `@[simp]`.
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit c1083208c270fcf20ecbd6d6d0ba257c84691dfc[m
Author: Jz Pan <acme_pjz@hotmail.com>
Date:   Mon Apr 29 23:31:15 2024 +0000

    feat(RingTheory/Finiteness): relax the condition of `Module.Finite.exists_fin'` (#12524)
    
    ... from `CommSemiring R` to `Semiring R`.

[33mcommit 53c4e3c41f0acbfb2b63fbcab90fa2d028c8de9c[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Mon Apr 29 22:36:31 2024 +0000

    docs: fix markdown link (#12512)

[33mcommit 283ea7e397cfa244b8e6df1bd8157cef04bdca62[m
Author: Christian Merten <christian@merten.dev>
Date:   Mon Apr 29 20:47:46 2024 +0000

    chore(AdicCompletion): move to `RingTheory` and make folder (#12511)
    
    Move `AdicCompletion` from `LinearAlgebra` into its own folder in `RingTheory` as it seems to fit better there.

[33mcommit 9cbb31ee7f5b2e0782e608bab156397bf90815fb[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Mon Apr 29 20:47:45 2024 +0000

    feat(CategoryTheory/Triangulated): homological functors (#11759)
    
    A functor `F : C ‚•§ A` from a pretriangulated category to an abelian category is homological iff it sends distinguished triangles in `C` to exact sequences in `A`. In this PR, we define the corresponding type class `F.IsHomological`. If `F` is a homological functor, we introduce the strictly full triangulated subcategory `F.homologicalKernel`.

[33mcommit e8e66e7128fd7be52f9677585c529f5f73271ead[m
Author: Kyle Miller <kmill31415@gmail.com>
Date:   Mon Apr 29 19:35:59 2024 +0000

    fix: get `variable?` to handle `Type*` and `Sort*` (#8908)
    
    Every time `Type*` and `Sort*` elaborate, they generate fresh universe level variables. This was not being accounted for in the computed vs expected check.

[33mcommit 0924a3d4e9b4a3950b43673d4b93bbbf6d34c9a6[m
Author: Kyle Miller <kmill31415@gmail.com>
Date:   Mon Apr 29 16:41:34 2024 +0000

    feat: `FastSubsingleton` and `FastIsEmpty` to speed up `congr!`/`convert` (#12495)
    
    This is a PR that's a temporary measure to improve performance of `congr!`/`convert`, and the implementation may change in a future PR with a new version of `congr!`.
    
    Introduces two typeclasses that are meant to quickly evaluate in common cases of `Subsingleton` and `IsEmpty`. Makes `congr!` use these typeclasses rather than `Subsingleton`.
    
    Local `Subsingleton`/`IsEmpty` instances are included as `Fast` instances. To get `congr!`/`convert` to reason about subsingleton types, you can add such instances to the local context. Or, you can `apply Subsingleton.elim` yourself.
    
    [Zulip discussion](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/convert.20is.20often.20slow/near/433830798)

[33mcommit 2d73908679447bb68e18bf53321252a75240b274[m
Author: R√©my Degenne <Remydegenne@gmail.com>
Date:   Mon Apr 29 16:41:33 2024 +0000

    feat: generalize `iSup_restrict_spanningSets` (#12439)
    
    The measurability assumption was not necessary.
    I moved the lemma further down in the file to be able to use `restrict_toMeasurable_of_sFinite`.
    
    
    
    Co-authored-by: R√©my Degenne <remydegenne@gmail.com>

[33mcommit e0235c08b25c359b13c3aa25f0a3ee90d3e3526b[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Mon Apr 29 15:46:36 2024 +0000

    chore(Data/Rat/Defs): Fix names of a few lemmas (#12505)
    
    There are more wrong lemmas in Std, but it's out of my scope

[33mcommit 194da0f96fb65285b719bd3a299ece157c8fa0fc[m
Author: R√©my Degenne <Remydegenne@gmail.com>
Date:   Mon Apr 29 15:11:59 2024 +0000

    feat: absolute continuity of a sum of measures (#12441)

[33mcommit 05f4c505a0801aa38e203cc147864f1e951ad3cf[m
Author: Lorenzo Luccioli <lorenzoluccioli@gmail.com>
Date:   Mon Apr 29 14:14:11 2024 +0000

    fix: use Unit instead of PUnit in piOptionEquivProd (#12507)
    
    The previous implementation required to specify a universe when using piOptionEquivProd. Moreover Unit is to be preferred to PUnit when possible (see definition of PUnit).

[33mcommit 7d5102df9731ceb72aa37ceb5b6806e0c5053975[m
Author: Kim Morrison <scott@tqft.net>
Date:   Mon Apr 29 13:25:46 2024 +0000

    chore: split Algebra.Module.Basic (#12501)
    
    Similar to #12486, which did this for `Algebra.Algebra.Basic`.
    
    Splits `Algebra.Module.Defs` off `Algebra.Module.Basic`. Most imports only need the Defs file, which has significantly smaller imports. The remaining `Algebra.Module.Basic` is now a grab-bag of unrelated results, and should probably be split further or rehomed.
    
    This is mostly motivated by the wasted effort during minimization upon encountering Algebra.Module.Basic.
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>
    Co-authored-by: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>

[33mcommit cc08434d575264b8e5fabf4e33641a8975bc2f2a[m
Author: Kim Morrison <scott@tqft.net>
Date:   Mon Apr 29 13:00:52 2024 +0000

    chore: backport a faster proof in NewtonIdentities (#12499)
    
    This proof by `aesop` becomes even slower on `nightly-testing`. It should be by `omega` anyway, so we change that here.
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 888ba0262a3280d94ffad0031a9cc4e5ca9c33f5[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Mon Apr 29 12:29:10 2024 +0000

    perf: speed up some algebraic geometry with explicit universes (#12494)

[33mcommit a547a94f799a9e555fb6445f3dde0b366bd4ea9f[m
Author: uniwuni <95649083+uniwuni@users.noreply.github.com>
Date:   Mon Apr 29 12:02:24 2024 +0000

    feat(CategoryTheory/Category/RelCat): Show basic facts and self-duality of category of relations. (#11241)
    
    Add facts about `rel` somewhat like the facts about `types`, classify isos in `rel`, construct the inclusion from `types` to `rel`, show self-duality of `rel`.
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>
    Co-authored-by: uni <uniwuni@protonmail.com>
    Co-authored-by: uni marx <uniwuni@protonmail.com>

[33mcommit d64b17d9f56213fc34a8ee9f15b0fab522ab6eae[m
Author: Kim Morrison <scott@tqft.net>
Date:   Mon Apr 29 09:44:54 2024 +0000

    chore: split Algebra.Algebra.Basic (#12486)
    
    Splits `Algebra.Algebra.Defs` off `Algebra.Algebra.Basic`. Most imports only need the Defs file, which has significantly smaller imports. The remaining `Algebra.Algebra.Basic` is now a grab-bag of unrelated results, and should probably be split further or rehomed.
    
    This is mostly motivated by the wasted effort during minimization upon encountering Algebra.Algebra.Basic.
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>
    Co-authored-by: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>

[33mcommit ae4dd74c0777a68b36270cb7e7f88ad8343901c7[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Mon Apr 29 09:44:53 2024 +0000

    chore: remove redundant LinearEquiv.map_neg/sub (#12330)
    
    These are redundant with `_root_.{map_neg,map_sub}`.

[33mcommit a9cdcd23083d84accca210e87468316bcf30c829[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Mon Apr 29 09:44:52 2024 +0000

    feat: Triangle counting (#8896)
    
    Prove the triangle counting lemma. Definitions that are internal to the proof are made private.

[33mcommit 919a721fa2a6ad2997a95e3337c88845b5936e44[m
Author: Josha Dekker <114015169+JADekker@users.noreply.github.com>
Date:   Mon Apr 29 09:02:56 2024 +0000

    feat(UniformSpace) : TotallyBounded + countably generated -> Separable (#12404)
    
    Just a small result, that TotallyBounded sets are Separable sets in Uniform spaces with countably generated uniformities.

[33mcommit e9bc16347b34a91a7498edb615179b5788bf1ed4[m
Author: Christopher Hoskin <christopher.hoskin@gmail.com>
Date:   Mon Apr 29 08:00:58 2024 +0000

    doc(RingTheory/Trace): Remove porting note (#12489)
    
    `toBilin` was depreciated in #12078. This porting note no longer makes sense.

[33mcommit 0a97fb7a82c5446710c766985acc6d27b3b1bbc9[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Mon Apr 29 08:00:57 2024 +0000

    chore: Move monoid with zero instances on pi types (#12286)
    
    Move everything that can't be additivised out of `Algebra.Group.Pi.Lemmas`:
    * `MulZeroClass`, `MulZeroOneClass`, etc... instances go to a new `Algebra.GroupWithZero.Pi` file. I credit Eric W. for https://github.com/leanprover-community/mathlib/pull/4766.
    * `AddMonoidWithOne`, `AddGroupWithOne` instances go to `Algebra.Ring.Pi`.

[33mcommit 4e22ca746963ba59893f8a806cd01e2b25be1387[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Mon Apr 29 06:58:06 2024 +0000

    feat: add an `OfScientific` instance for `NNRat` and `NNReal` (#12485)
    
    The existing `RatCast.toOfScientific` instance has to be removed since it forms a non-defeq diamond (there is nothing enforcing that `nnratCast` and `ratCast`  are defeq).
    
    The `norm_num` extension also needs some fixes, though the old design didn't make much sense anyway, as it synthesize the instances separately, thus losing important defeqs.

[33mcommit 3eb8d76b64db748132332679f4d20c5bc1a2b770[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Mon Apr 29 06:58:05 2024 +0000

    feat(CategoryTheory): morphism properties that have the two-out-of-three property (#12460)
    
    The type class `MorphismProperty.HasTwoOutOfThreeProperty` is introduced. The structure `StableUnderComposition` is also changed into a type class `IsStableUnderComposition`.
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit c1fee71e961bae97d483a880eac63f29c98b5547[m
Author: Andrew Yang <the.erd.one@gmail.com>
Date:   Mon Apr 29 06:31:43 2024 +0000

    feat(RingTheory/Kaehler): The exact sequence `B ‚äó[A] Œ©[A‚ÅÑR] ‚Üí Œ©[B‚ÅÑR] ‚Üí Œ©[B‚ÅÑA] ‚Üí 0`. (#11925)
    
    
    
    Co-authored-by: Andrew Yang <36414270+erdOne@users.noreply.github.com>

[33mcommit 20d431e75ce6790163dbee00b7b05a0d9952b37d[m
Author: Kim Morrison <scott@tqft.net>
Date:   Mon Apr 29 05:53:47 2024 +0000

    chore: close a section (#12497)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 32616bead9f39185b7fec09b6240d42664926c4f[m
Author: Kyle Miller <kmill31415@gmail.com>
Date:   Mon Apr 29 01:28:06 2024 +0000

    feat: make `generalize_proofs` handle proofs under binders (#12472)
    
    The `generalize_proofs` tactic had a bug where it would not generalize proofs that appeared under binders correctly, creating terms with fvars from the wrong context. The tactic has been refactored, and it now abstracts the proofs (universally quantifying all the bound variables that appear in the proof) before lifting them to the local context.
    
    This feature can be controlled with the `abstract` option. Using `generalize_proofs (config := { abstract := false })` turns off proof abstraction and leaves alone those proofs that refer to bound variables.
    
    Other new features:
    - `generalize_proofs at h` for a let-bound local hypothesis `h` will clear its value.
    - `generalize_proofs at h` for a duplicate proposition will eliminate `h` from the local context.
    - Proofs are recursively generalized for each new local hypothesis. This can be turned off with `generalize_proofs (config := { maxDepth := 0 })`.
    - `generalize_proofs at h` will no longer generalize proofs from the goal.
    - The type of the generalized proof is carefully computed by propagating expected types, rather than by using `inferType`. This gives local hypotheses in more useful forms.
    
    (This PR serves as a followup to [this comment](https://github.com/leanprover-community/mathlib4/pull/447#issuecomment-1306171602).)

[33mcommit 0e05cbe2420f680d624a607ab11177a4fc50fc8d[m
Author: Kim Morrison <scott@tqft.net>
Date:   Sun Apr 28 22:28:28 2024 +0000

    feat: 'lake exe pole' computes the longest pole (#8361)
    
    See [zulip](https://leanprover.zulipchat.com/#narrow/stream/270676-lean4/topic/Lake.20parallel.20builds/near/401556745) discussion.
    
    
    
    Co-authored-by: Bolton Bailey <bolton.bailey@gmail.com>
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit e9a5e8d6c116344b4f9af0fb7fd51861271102a4[m
Author: Javernus <jake.jongejans@gmail.com>
Date:   Sun Apr 28 21:50:40 2024 +0000

    feat(Data/Complex/Basic): Adds imaginary number representation (#12427)
    
    Adds a representation for Complex numbers and DualNumber so they can be used in #eval statements.
    
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 0033bf0068b5a333d6fc44bf156cc4ffc209bf7a[m
Author: Paul Reichert <preichert@noreply.codeberg.org>
Date:   Sun Apr 28 18:21:32 2024 +0000

    feat(CategoryTheory.Limits.IsConnected): colimit of singletons is singleton iff index category is connected (#10731)
    
    Create the module `Mathlib.CategoryTheory.Limits.IsConnected`.
    
    The main theorem states that the colimit of singletons is a singleton if and only if the index category is connected.
    
    This theorem will be necessary for the Freyd-Mitchell embedding theorem.

[33mcommit 7a11b9f33e782d92723897366cf67d0740fd25a3[m
Author: Ralf Stephan <ralf@ark.in-berlin.de>
Date:   Sun Apr 28 14:16:57 2024 +0000

    feat(PNat/Basic): add three lemmas (#12479)
    
    Three small lemmata in support of further PNat proofs

[33mcommit cf57f9b0a48c268fffd8cde96d0863ab396ba7a4[m
Author: Ralf Stephan <ralf@ark.in-berlin.de>
Date:   Sun Apr 28 13:18:21 2024 +0000

    style(PNat/Basic): move induction lemmas to upper area of file (#12484)
    
    Move induction lemmas because needed by future insertions

[33mcommit b119a280b5e1ea54d4b78fff2cedbbf5d3a4d81b[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Sun Apr 28 11:45:04 2024 +0000

    doc(EuclideanGeometry): document a few declarations (#12481)

[33mcommit 6090a1f65cea66454cd7664e8a648fd3bd593415[m
Author: Scott Carnahan <128885296+ScottCarnahan@users.noreply.github.com>
Date:   Sun Apr 28 11:19:48 2024 +0000

    feat (LinearAlgebra/PerfectPairing) : Modules in a perfect pairing are reflexive (#12300)
    
    This PR defines the linear equivalences with dual modules given by a perfect pairing, and shows that the modules are reflexive.

[33mcommit b6a949a738ecbb9450a20ebff7096f19e653ef49[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Sun Apr 28 10:13:37 2024 +0000

    doc: three positivity extensions (#12483)

[33mcommit c01d7cb0b6dd45464af1a6cdb8f22c5836e3aba4[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Sun Apr 28 08:57:49 2024 +0000

    chore(GammaSpecAdjunction): remove resolved porting note (#12477)
    
    Removes a porting note resolved by #12469; clarifies a porting note touched by it.

[33mcommit 51a6e529b388aee161010fcddb990b747ab020a5[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Sun Apr 28 07:15:48 2024 +0000

    chore: reduce proof dependencies for Nat.factors_count_eq (#12105)
    
    This is a bit longer, partially duplicating the argument from UniqueFactorizationMonoid.multiplicity_eq_count_normalizedFactors, but it means we no longer need to depend on `RingTheory.Int.Basic` at this point.
    
    The other added lemmas seem useful regardless.

[33mcommit 0b522a14d05af74adeb78e7e2853fe288d53d507[m
Author: Kevin Buzzard <k.buzzard@imperial.ac.uk>
Date:   Sat Apr 27 23:30:15 2024 +0000

    fix(AlgebraicGeometry/GammaSpecAdjunction): speedup by adding universes (#12469)
    
    Add some explicit universe annotations because they cause a speedup (currently an unexplained phenomenon, unfortunately).
    
    
    
    Co-authored-by: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>

[33mcommit 391502ca413031edba22b596ebe3cd0d34dddffa[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Sat Apr 27 22:55:21 2024 +0000

    chore: make some proofs more robust (#12466)
    
    Notably, these cause issues on nightly-2024-04-25
    
    
    
    Co-authored-by: adamtopaz <github@adamtopaz.com>

[33mcommit 44a14fbb0cd0b6d32790860087e302357e960f95[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Sat Apr 27 19:40:44 2024 +0000

    chore(Data/Set/List): nthLe -> get migration (#12398)
    
    
    
    Co-authored-by: Yury G. Kudryashov <urkud@urkud.name>

[33mcommit 8d0c6e6f821392660468fdce7c5463740d7988be[m
Author: R√©my Degenne <Remydegenne@gmail.com>
Date:   Sat Apr 27 09:58:50 2024 +0000

    feat: add instances for SFinite (#12440)
    
    
    
    Co-authored-by: R√©my Degenne <remydegenne@gmail.com>

[33mcommit ce289a0e25bb0a63c359e045ffab80bf4903de77[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Sat Apr 27 09:23:53 2024 +0000

    chore(CategoryTheory): make `Functor.Full` a Prop (#12449)
    
    Before this PR, `Functor.Full` contained the data of the preimage of maps by a full functor `F`. This PR makes `Functor.Full` a proposition. This is to prevent any diamond to appear.
    
    The lemma `Functor.image_preimage` is also renamed `Functor.map_preimage`.
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit 33a5bedd14e5432d6700f73af7e0aba87741727d[m
Author: Brendan Seamas Murphy <shamrockfrost@gmail.com>
Date:   Sat Apr 27 06:15:29 2024 +0000

    Chore: Weaken hypotheses for proof that Noetherian is an extension property (#12453)
    
    The middle term of a three term exact sequence with outer terms Noetherian is Noetherian.

[33mcommit ea60855932dd8c0ec5c69c540c534bfb12ebb48d[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Sat Apr 27 06:15:28 2024 +0000

    feat: Axiomatise `b ‚â† 0 ‚Üí a * b / b = a` (#12424)
    
    This lets us unify a few lemmas between `GroupWithZero` and `EuclideanDomain` and two lemmas that were previously proved separately for `Nat`, `Int`, `Polynomial`.

[33mcommit 9e489ab7d68355941805e728e4919d91867ce21a[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Sat Apr 27 05:44:29 2024 +0000

    chore: split CategoryTheory.MorphismProperty (#12393)
    
    The file `CategoryTheory.MorphismProperty` is split into five files `Basic`, `Composition`, `Limits`, `Concrete`, `IsInvertedBy`.

[33mcommit c4c2f8d613b4fcb4f4dbe2f859c19544049610d5[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Fri Apr 26 19:07:12 2024 +0000

    chore: move LinearMap.range into its own file (#12378)

[33mcommit 728940e910dae2e06c35a50c2a492cb87abfb418[m
Author: Andrew Yang <the.erd.one@gmail.com>
Date:   Fri Apr 26 18:08:31 2024 +0000

    feat: Generalize `Basis.tensorProduct` to heterobasic version (#11844)
    
    In order to achieve this, `finsuppTensorFinsupp` and `TensorProduct.directSum` are also heterobasic now.

[33mcommit 3e83c099faaf82322b115a69189d35a5683d6261[m
Author: Andrew Yang <the.erd.one@gmail.com>
Date:   Fri Apr 26 17:38:17 2024 +0000

    feat: Finitely Presented Modules (#11870)
    
    
    
    
    Co-authored-by: Andrew Yang <36414270+erdOne@users.noreply.github.com>

[33mcommit 3877d4f0e0d1a169d7d7806cec0b1b0d7e8892b0[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Fri Apr 26 15:11:59 2024 +0000

    chore: remove a subsingleton instance which leads to unreasonable instance search paths (#12445)

[33mcommit 5450e92299f1b72755673a101fef3efa9d8c3383[m
Author: damiano <adomani@gmail.com>
Date:   Fri Apr 26 15:11:58 2024 +0000

    chore: remove unnecessary cdots (#12417)
    
    These `¬∑` are scoping when there is a single active goal.
    
    These were found using a modification of the linter at #12339.

[33mcommit 38faa1d217bfc1e6622ea6fd147913bcf1f4e89c[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Fri Apr 26 15:11:56 2024 +0000

    chore(CategoryTheory/Adjunction): move `Adjunction.restrictFullyFaithful` to separate file (#12363)
    
    Also resolves a TODO to add lemmas about `Adjunction.restrictFullyFaithful`

[33mcommit 3897434e80c1e66658416557947b9b9604e336a7[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Fri Apr 26 14:35:41 2024 +0000

    feat: add Monic.eq_X_pow_iff_natDegree_le_natTrailingDegree (#12448)

[33mcommit 60dde2d8010dbcf1ddea77a6133ec73dc153e967[m
Author: Lorenzo Luccioli <lorenzoluccioli@gmail.com>
Date:   Fri Apr 26 11:43:09 2024 +0000

    feat: add MeasurableEquiv.piOptionEquivProd (#12395)
    
    Add the def of MeasurableEquiv.piOptionEquivProd, that is the measurable equivalence for a dependent type over an Option type. This can be useful for applying induction on the product of a finite number of elements.
    
    
    
    Co-authored-by: Lorenzo Luccioli <71074618+LorenzoLuccioli@users.noreply.github.com>

[33mcommit c38e122093171f70cad737b62a58fc0d602a5a7b[m
Author: Christopher Hoskin <christopher.hoskin@overleaf.com>
Date:   Fri Apr 26 10:12:31 2024 +0000

    refactor(LinearAlgebra/BilinearForm/Hom): Deprecate results (#12078)
    
    Following the removal of `structure BilinForm` from Mathlib (#11278) a number of definitions and results in `LinearAlgebra/BilinearForm/Hom` are essentially just the identity. This PR deprecates these results.
    
    
    
    Co-authored-by: Christopher Hoskin <christopher.hoskin@gmail.com>

[33mcommit ca827780b9a794e0b87490634388b24a06a5c2ca[m
Author: R√©my Degenne <Remydegenne@gmail.com>
Date:   Fri Apr 26 09:42:21 2024 +0000

    chore(MeasureTheory/Decomposition/Lebesgue): use Classical and noncomputable only where needed (#12442)

[33mcommit 7ba4d203de990420137c43ef1f42453a3aed179d[m
Author: Mitchell Lee <trivial171@gmail.com>
Date:   Fri Apr 26 09:42:20 2024 +0000

    feat: simple reflections, words, lifting in Coxeter groups (#11406)
    
    Prove basic properties of simple reflections in a Coxeter group. Add definitions `CoxeterSystem.lift`, and `CoxeterSystem.wordProd` to `GroupTheory.Coxeter.Basic` and prove their basic properties.
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>
    Co-authored-by: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>

[33mcommit 3d892b71de5b062b8adc7126a4666f8b5db64362[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Fri Apr 26 07:11:14 2024 +0000

    feat: add `LinearIsometryEquiv.piLpCongrRight` (#12437)
    
    Also relax some typeclasses on `piLpCongrLeft`.

[33mcommit 059a0b64c187988b3f3ca139c764065e692bcd27[m
Author: Oliver Nash <github@olivernash.org>
Date:   Fri Apr 26 06:26:39 2024 +0000

    feat: define Lie module structure on derivations (#12315)
    
    Also add some basic consequences

[33mcommit 61ad21e8d0386579b09dc2ecc8f34dc46877d02a[m
Author: Peter Nelson <71660771+apnelson1@users.noreply.github.com>
Date:   Thu Apr 25 16:11:21 2024 +0000

    feat(Data/Matroid/Dual): change dual notation (#12431)
    
    This PR changes the symbol for matroid duality from `Ôπ°` to `‚ú∂`. This is because there is a VSCode font rendering bug (discussed [here](https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/Very.20strange.20VScode.20font.20bug)) that causes `Ôπ°` to display incorrectly when combined with certain other unicode symbols.
    
    Since the particular star `Ôπ°` is only used for matroid duality in mathlib, this change is cosmetic and inconsequential.

[33mcommit bdc673388040540af93eb371e499d5949b8370af[m
Author: Calle S√∂nne <calle.sonne@gmail.com>
Date:   Thu Apr 25 15:18:16 2024 +0000

    feat(CategoryTheory/Bicategory/LocallyDiscrete): Make LocallyDiscrete a structure (#12383)
    
    Made `LocallyDiscrete` a structure, similar to `Discrete`, and added some basic API. `Coherence.lean` was also adjusted because of these changes. This should make it easier to move between a given type `C` and `LocallyDiscrete C`.

[33mcommit fe59037a6ec29a97432efd894f04e1a5440496e8[m
Author: Jz Pan <acme_pjz@hotmail.com>
Date:   Thu Apr 25 15:18:15 2024 +0000

    feat(LinearAlgebra/TensorProduct/Basic): add `LinearEquiv.(l|r)Tensor` (#11731)
    
    - add `LinearMap.(l|r)Tensor` and their properties
    - add `congr_symm`, `congr_refl_refl`, `congr_trans`, `congr_mul`, `congr_pow` and `congr_zpow`

[33mcommit b856377d9cf6945a16d9abeaf713bcd10ea0d2db[m
Author: Lorenzo Luccioli <lorenzoluccioli@gmail.com>
Date:   Thu Apr 25 14:28:20 2024 +0000

    feat: add instances for Measure.pi (#12400)
    
    Add instances for Measure.pi of finite measures to be finite and for  Measure.pi of probability measures to be a probability measure. Add also the same instances for the canonical volume measure.

[33mcommit 29036be8d7edc9c18419f1dcf9cbea83699d721c[m
Author: Lorenzo Luccioli <lorenzoluccioli@gmail.com>
Date:   Thu Apr 25 13:52:39 2024 +0000

    feat: add absolutelyContinuous_zero_iff (#12399)
    
    Add lemma absolutelyContinuous_zero_iff to handle the case where a measure is absolutely continuous wrt 0.
    
    
    
    Co-authored-by: Lorenzo Luccioli <71074618+LorenzoLuccioli@users.noreply.github.com>

[33mcommit 9838f48016b29ca3f3f1e1f31186e5b7282778c9[m
Author: Mitchell Lee <trivial171@gmail.com>
Date:   Thu Apr 25 08:15:25 2024 +0000

    feat: filters that are disjoint from the cocompact filter (#12305)
    
    - `Filter.disjoint_cocompact_left`, `Filter.disjoint_cocompact_right` : A filter is disjoint from the cocompact filter if and only if it contains a compact set.
    - `nhdsSet_prod_le_of_disjoint_cocompact`, `prod_nhdsSet_le_of_disjoint_cocompact` : If `s` is a compact set and `f` is disjoint from the cocompact filter, then `ùìùÀ¢ s √óÀ¢ f ‚â§ ùìùÀ¢ (s √óÀ¢ Set.univ)`.

[33mcommit f1d422f45ad94f00f9b1ed78b9e28f0fb3c26ab8[m[33m ([m[1;32mmaster[m[33m)[m
Author: Josha Dekker <114015169+JADekker@users.noreply.github.com>
Date:   Thu Apr 25 07:45:12 2024 +0000

    Feat: Define cocardinal and cocountable filters (#11774)
    
    Define the `cocardinal` and `cocountable` filters as those consisting of sets whose complements have a given cardinality/ are countable.

[33mcommit ffaeb65b07d5c425171dfa623535cea9a4842945[m
Author: Rida Hamadani <mridahamadani@gmail.com>
Date:   Thu Apr 25 07:11:45 2024 +0000

    chore(Combinatorics/SimpleGraph): Generalize few lemmas in `AdjMatrix` to `NonAssocSemiring Œ±` (#12413)
    
    Generalize some lemmas from `‚Ñï`, `Ring Œ±`, and `Semiring Œ±`, to `NonAssocSemiring Œ±`.
    
    
    
    Co-authored-by: Rida Hamadani <106540880+Rida-Hamadani@users.noreply.github.com>

[33mcommit d700199feb1469a0894a6e46d5f576b910fff298[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Thu Apr 25 04:21:35 2024 +0000

    feat(List/Enum): add lemmas (#11969)

[33mcommit b1fac81fc35bb62c1a8d3e4e5f9f51cff1285a88[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Thu Apr 25 03:23:52 2024 +0000

    chore(GroupTheory): reformat deprecation dates (#12406)
    
    Try to have the date on the same line as the attribute: this makes it easier to rewrite these into machine-readable form.
    One date is was added: the deprecation was in the same PR as nearby lemmas.

[33mcommit 1fd4ce4756b7a580d92d3223e6862d71a745c3aa[m
Author: Mar√≠a In√©s de Frutos-Fern√°ndez <mariaines.dff@gmail.com>
Date:   Thu Apr 25 01:30:30 2024 +0000

    feat(Algebra/GroupWithZero/WithZero): `WithZero.map'` (#12159)
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>
    Co-authored-by: Ya√´l Dillies <yael.dillies@gmail.com>

[33mcommit d96c1e7c5823d2e44c268388164cad827bd73520[m
Author: Filippo A. E. Nuccio <filippo.nuccio@univ-st-etienne.fr>
Date:   Thu Apr 25 00:31:36 2024 +0000

    feat (RingTheory/Valuation/Integers) : add lemma one_of_isUnit' (#12247)
    
    Add lemma `one_of_isUnit'` , that is a generalization of `one_of_isUnit` with a slightly weaker assumption.
    
    Co-authored-by: Mar√≠a In√©s de Frutos Fern√°ndez @mariainesdff

[33mcommit a93cf1574b04b6aca9fd392ca6b1aaebe4ea2e7d[m
Author: Hyeokjun Kwon <86776403+Jun2M@users.noreply.github.com>
Date:   Wed Apr 24 20:27:06 2024 +0000

    feat(Nat/GCD): Add dvd_gcd_mul_gcd_of_dvd_mul (#12246)

[33mcommit cba2f37b0a101c57e2e976fa3b29a87c41e49268[m
Author: Calle S√∂nne <calle.sonne@gmail.com>
Date:   Wed Apr 24 19:18:10 2024 +0000

    feat(CategoryTheory/EqToHom): generalize Functor.congr_map to Prefunctor.congr_map (#12384)

[33mcommit d0ecb3c8b2e6fe97f9379b3ab1ba238774440ded[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Apr 24 16:47:04 2024 +0000

    feat(List/Basic): add `get_eq_get?` (#12304)
    
    Should it be `get_eq_get?`, `get_eq_get?_get`, or `get_eq_get_get?`?

[33mcommit 64630834f1984a7b498ade5d5c895c4a335a093c[m
Author: Etienne <etienne.marion@ens-lyon.fr>
Date:   Wed Apr 24 14:51:34 2024 +0000

    feat: add 3 lemmas linking iSup and symmDiff (#12340)
    
    Add 3 lemmas to show that the symmetric difference of two `iSup`s/`biSup`s is less or equal to the `iSup`/`biSup` of the symmetric differences.

[33mcommit fdff7444953b257467806880fcbb192ed21a0694[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Wed Apr 24 14:51:32 2024 +0000

    chore(Analysis): add missing deprecation dates (#12336)

[33mcommit 8656fa6a75e5b5e9fe7c26b4c16fbbae88b94358[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Apr 24 14:51:31 2024 +0000

    chore(Perm/List): golf, review API (#12302)
    
    - add `mem_or_mem_of_zipWith_swap_prod_ne`, a version of `zipWith_swap_prod_support'` without any `Finset`s;
    - move it and related lemmas up, use them to golf lemmas about `        formPerm`;
    - convert explicit -> implicit arguments here and there;
    - `formPerm_reverse` doesn't need `Nodup`

[33mcommit 60b4825457cb9e3c0658492a5f086f238e1b93f0[m
Author: Cedric Holle <holle.cedric@gmx.de>
Date:   Wed Apr 24 14:51:30 2024 +0000

    Bugfix Polyrith.lean (#12285)
    
    Change tk to onlyTk cause we want to check if the only keyword has been used.
    Currently the only keyword will be ignored cause
    it isn't used anywhere. tk.isNone will always be None.
    
    Reopened https://github.com/leanprover-community/mathlib4/pull/9069.
    
    
    
    Co-authored-by: Cedric Holle <cedricholle0@gmail.com>

[33mcommit 2dac82fe9e59d5c0d7ec8824ed08732476e3c459[m
Author: Kyle Miller <kmill31415@gmail.com>
Date:   Wed Apr 24 14:51:29 2024 +0000

    feat: `‚àÉ! x ‚àà s, p x` syntax (#12237)
    
    More generally, adds a `binderPred` variant for `ExistsUnique`.
    
    Uses this syntax to clean up `Mathlib.Data.Setoid.Partition` and remove Mathport warnings.

[33mcommit c7fa7063a518ab3cedc8a29bd954b500233e75d0[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Wed Apr 24 14:51:28 2024 +0000

    chore: Move intervals (#11765)
    
    Move `Set.Ixx`, `Finset.Ixx`, `Multiset.Ixx` together under two different folders:
    * `Order.Interval` for their definition and basic properties
    * `Algebra.Order.Interval` for their algebraic properties
    
    Move the definitions of `Multiset.Ixx` to what is now `Order.Interval.Multiset`. I believe we could just delete this file in a later PR as nothing uses it (and I already had doubts when defining `Multiset.Ixx` three years ago).
    
    Move the algebraic results out of what is now `Order.Interval.Finset.Basic` to a new file `Algebra.Order.Interval.Finset.Basic`.

[33mcommit c0fb64828c4e8ac4e0d8ca1c646fd4228ca06aac[m
Author: judithludwig <judith.ludwig@iwr.uni-heidelberg.de>
Date:   Wed Apr 24 13:42:10 2024 +0000

    feat(RingTheory/MvPolynomial): freeness of `MvPolynomial` (#12392)
    
    Shows that a multivariable polynomial ring is a free module.

[33mcommit 49b417ef46f54dfabe38812950f3032ac89ac57e[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Apr 24 13:42:09 2024 +0000

    feat(GroupTheory): add lemmas about `Submonoid.closure` and `CoprodI` (#12391)
    
    - Add `CoprodI.lift_comp_of`, `CoprodI.lift_comp_of'`,
      `CoprodI.lift_of'`, `CoprodI.iSup_mrange_of`,
      `CoprodI.mclosure_iUnion_range_of`, `CoprodI.induction_left`
    - Add `MonoidHom.mrange_id`, `MonoidHom.mclosure_range`,
      as well as additive versions.

[33mcommit 5d19d89cab79af7c5391ff8c3ab4deb8fde73c26[m
Author: Etienne <etienne.marion@ens-lyon.fr>
Date:   Wed Apr 24 13:42:08 2024 +0000

    feat: add a rfl lemma about non negative norm seen as en ENNReal (#12348)
    
    Add a rfl lemma about non negative norm seen as an ENNReal. Especially useful when dealing with the Lp norm of an indicatorConstLp.

[33mcommit 45346d9fe5143fe1c7fe3a811919ba897e3b00eb[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Wed Apr 24 13:42:07 2024 +0000

    chore: reformat deprecation warnings on one line, if possible (#12335)
    
    Occasionally, remove a "deprecated by" or "deprecated since", to fit the line length.
    
    This is desirable (to me) because
    - it's more compact: I don't see a good reason for these declarations taking up more space than needed;
    as I understand it, deprecated lemmas are not supposed to be used in mathlib anyway
    - putting the date on the same line as the attribute makes it easier to discover un-dated deprecations;
    they also ease writing a tool to replace these by a machine-readable version using leanprover/lean4#3968

[33mcommit add5ed22ce64cf17ff1f9b41bc10c2615809aaf6[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Apr 24 13:42:06 2024 +0000

    feat(List): add lemmas about `Sublist` (#12326)
    
    - Move `tail_sublist` to `Basic`
    - Rename `sublist_of_cons_sublist_cons` to `Sublist.of_cons_cos`
    - Rename `cons_sublist_cons_iff` to `cons_sublist_cons`
    - Add `Sublist.tail`, `drop_sublist_drop_left`, `Sublist.drop`
    - Protect some lemmas

[33mcommit b53e4a3574e4b6d2b09650de36037bbbe7022dfe[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Apr 24 13:42:05 2024 +0000

    refactor(QuadraticForm/Real): migrate to `SignType` (#12319)
    
    See also #7842

[33mcommit 069f405e8e8c4bb4fad1d099a10ec63bd9360773[m
Author: Pol'tta / Miyahara K≈ç <pol_tta@outlook.jp>
Date:   Wed Apr 24 13:42:04 2024 +0000

    feat: port `cc` tactic (1/3) (#11956)
    
    In this PR, we implements datatypes which is used in `cc` tactic.
    Also, `Init.CCLemmas` is removed in #10696, but this module is required for `cc` tactic, so we recover this module as `Tactic.CC.Lemmas`.

[33mcommit 9150835a264c261be6416d2dcec63a2b9a83f642[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Wed Apr 24 12:37:42 2024 +0000

    chore(Data/List): add dates to all deprecated lemmas (#12337)
    
    Most of them go back to the port.

[33mcommit 7aace659cfe02477e5cdeb743caf898f14d96db3[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Apr 24 12:37:41 2024 +0000

    feat(List/rotate): migrate to `get`, new lemmas, golf (#12171)
    
    - Add `List.Nodup.rotate_congr_iff`, `List.cyclicPermutations_ne_nil`,
      `List.head?_cyclicPermutations`, `List.head_cyclicPermutations`,
      `List.cyclicPermutations_injective`, `List.cyclicPermutations_inj`.
    - Change `List.nthLe_cyclicPermutations` to
      `List.get_cyclicPermutations`. While the old lemma wasn't deprecated
      during port, the definition `List.nthLe` was,
      so I think that we can drop the lemma without a deprecation period.

[33mcommit dbc20eec0635902344a915998f36fed214adfa49[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Wed Apr 24 11:33:34 2024 +0000

    chore: tidy various files (#12316)

[33mcommit b6cdb4d4934845ef722b9c81b0fb7765b6325ceb[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Wed Apr 24 09:49:15 2024 +0000

    chore: move gcd_eq_one_of_gcd_mul_right_eq_one_* earlier (#12365)
    
    These don't use any abstract algebra.

[33mcommit 72b62afe9db0b1383df6eecc4235fd7baab6c15d[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Wed Apr 24 08:44:20 2024 +0000

    chore(Data/List/Basic): remove some long-deprecated unused lemmas (#12367)

[33mcommit 51ee73993ca6696b8e9f0ffd05347437ab8bbca4[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Apr 24 08:44:19 2024 +0000

    feat(Inseparable): `Prod.map mk mk` is a quotient map (#12327)
    
    This is needed to prove continuity of binary arithmetic operations
    on the separation quotient.

[33mcommit d3917c3f6a5fb4a7f8e7e5da96bbb7f85bbd7bb5[m
Author: Fr√©d√©ric Marbach <66742248+frederic-marbach@users.noreply.github.com>
Date:   Wed Apr 24 07:36:59 2024 +0000

    doc(Algebra/Lie): fix typo (#12390)
    
    Fix namespace for online docs

[33mcommit ea9c9844fcbb9a5aa9295b051b29652117723195[m
Author: Kim Morrison <scott@tqft.net>
Date:   Wed Apr 24 07:36:58 2024 +0000

    chore: minor backports (#12389)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit e1f6f66b00748a1b64055051a52132c111c6b2b3[m
Author: Etienne <etienne.marion@ens-lyon.fr>
Date:   Wed Apr 24 06:52:08 2024 +0000

    feat: add theorem about order preservation of `Real.toNNReal` (#12369)
    
    Add following theorem: if `r` and `p` are real and `r.toNNReal < p.toNNReal`, then `r < p` without any assumptions needed.

[33mcommit 29159393eff883deb57d99fb68f55d42348e2434[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Wed Apr 24 06:52:07 2024 +0000

    feat: more integrability statements for iterated derivatives of Schwartz functions (#12152)

[33mcommit 7e72dffd37f7cbc47ce99c82b1d796747d44e297[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Wed Apr 24 05:40:44 2024 +0000

    chore: unify date formatting in lemma deprecations (#12334)
    
    - consistently use the YYYY-MM-DD format
    - when easily possible, put the date on the same line as the `deprecated` attribute
    - when easily possible, format the entire declaration on the same line
    
    Why these changes?
    - consistency makes it easier for tools to parse this information
    - compactness: I don't see a good reason for these declarations taking up more space than needed;
     as I understand it, deprecated lemmas are not supposed to be used in mathlib anyway
    - putting the date on the same line as the attribute makes it easier to discover un-dated deprecations;
    they also ease writing a tool to replace these by a machine-readable version using leanprover/lean4#3968

[33mcommit 0e991536465f9d37d4c0f73e1d2dd7bcde989e80[m
Author: damiano <adomani@gmail.com>
Date:   Wed Apr 24 03:33:49 2024 +0000

    chore: remove one beta_reduce and a porting note (#12377)
    
    There is one more `beta_reduce` in this file with a porting note, but removing that one still does not work.

[33mcommit 65b8f4f3f650ddd77aa274c72a74546d503fa1c5[m
Author: Bergschaf <86738237+Bergschaf@users.noreply.github.com>
Date:   Wed Apr 24 01:43:25 2024 +0000

    feat(LinearAlgebra/UnitaryGroup): special orthogonal group (#11708)
    
    
    
    Co-authored-by: Bergschaf <christian.k@netcom-mail.de>
    Co-authored-by: bergschaf <christian.k@netcom-mail.de>

[33mcommit b331c4b091b5ae6ae3aa1e1e883c4cbc25199739[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Wed Apr 24 00:10:43 2024 +0000

    chore(Init): add deprecation dates; remove long-deprecated items (#12347)
    
    All removed items are virtually unused in mathlib and have been deprecated for over a year.

[33mcommit 1a5d128864f867c9e7da3e5bfb6f93fdebaff5aa[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Tue Apr 23 23:19:42 2024 +0000

    feat: `NNRat.cast` (#11203)
    
    Define the canonical coercion from the nonnegative rationals to any division semiring.
    
    From LeanAPAP

[33mcommit 2ae61622412385d69ad6878cc4e6154bcbbf2eb4[m
Author: Fr√©d√©ric Marbach <66742248+frederic-marbach@users.noreply.github.com>
Date:   Tue Apr 23 19:39:31 2024 +0000

    feat(Algebra/Lie): prove derivations are inner in finite-dimensional Killing Lie algebra (#12250)
    
    This finishes the proof that all derivations in a finite-dimensional Lie algebra with non-degenerate Killing form are inner derivations, a project discussed in [this thread](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Derivations.20on.20Lie.20algebras) with @ocfnash.
    
    
    
    Co-authored-by: Oliver Nash <github@olivernash.org>

[33mcommit f0ba14aba0517703090e4624dd13aa6477acfd79[m
Author: Calle S√∂nne <calle.sonne@gmail.com>
Date:   Tue Apr 23 19:11:46 2024 +0000

    chore(CategoryTheory/DiscreteCategory): remove unecessary line in proof (#12382)

[33mcommit ec75ee1970e59a8b42b2ea3c3b9c05c097d6d3d8[m
Author: Johan Commelin <johan@commelin.net>
Date:   Tue Apr 23 18:45:27 2024 +0000

    feat(LinearAlgebra/Eigenspace/Zero): results on endomorphisms with eigenvalue 0 (#12373)

[33mcommit add717500d71668aefd285b80b6921317bbff27f[m
Author: Etienne <etienne.marion@ens-lyon.fr>
Date:   Tue Apr 23 17:27:58 2024 +0000

    feat: When the symmetric difference has finite measure (#12370)
    
    Add the following lemma: is `s` and `t` are two measurable sets such that `s` and `s ‚àÜ t` have finite measures, then so does `t`.
    
    
    
    Co-authored-by: Etienne <66847262+EtienneC30@users.noreply.github.com>

[33mcommit b94f96cfe4d7f2c8b8a30c70276b6f9c387a9631[m
Author: Johan Commelin <johan@commelin.net>
Date:   Tue Apr 23 17:02:48 2024 +0000

    chore(LinearAlgebra/Charpoly/ToMatrix): characteristic polynomials of isomorphic endomorphisms are equal (#12359)

[33mcommit bdfbc7fa97ddce28d63bfcea7a6d60c1e7258bed[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Tue Apr 23 14:29:29 2024 +0000

    chore: split RingTheory.Nilpotent (#12184)
    
    `Mathlib.RingTheory.Nilpotent` has a few very simple definitions (`Mathlib.Data.Nat.Lattice` is sufficient to state them), but needs some pretty heavy imports (ideals, linear algebra) towards the end. This change moves the heavier parts into a new file.

[33mcommit 14b8045509222a1af678c95193df722bb7e7ea15[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Tue Apr 23 13:39:36 2024 +0000

    chore(GroupTheory/Perm): some migration nthLe -> get (#12362)

[33mcommit 81d26b1ccaec75471dbba02d04722e5922b980e0[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Tue Apr 23 13:13:05 2024 +0000

    chore(CategoryTheory/Adjunction): simplify some proofs in `Adjunction/Reflective` (#12375)
    
    Some results in this file can be extracted from results added in #12344

[33mcommit c1609892851a18f73566ec9c05b76d8737045663[m
Author: Mar√≠a In√©s de Frutos-Fern√°ndez <mariaines.dff@gmail.com>
Date:   Tue Apr 23 11:47:35 2024 +0000

    feat(RingTheory/Valuation/RankOne): add rank one valuations (#12156)
    
    Add the definition of rank one valuation, as well as some basic lemmas.
    
    
    
    Co-authored-by: Mar√≠a In√©s de Frutos-Fern√°ndez <88536493+mariainesdff@users.noreply.github.com>

[33mcommit 90e480d89a515caeb48af97e8afad68dc5881255[m
Author: David Loeffler <d.loeffler.01@cantab.net>
Date:   Tue Apr 23 11:20:28 2024 +0000

    doc(NumberTheory/Harmonic): fix formatting glitch (#12368)
    
    Fix a rogue non-breaking space in file header

[33mcommit cb179b1b9c5ea8aec6dfa75cd2a2f977289c8a42[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Tue Apr 23 09:54:31 2024 +0000

    chore: Final cleanup before `NNRat.cast` (#12360)
    
    This is the parts of the diff of #11203 which don't mention `NNRat.cast`.
    * Use more `where` notation.
    * Write `qsmul := _` instead of `qsmul := qsmulRec _` to make the instances more robust to definition changes.
    * Delete `qsmulRec`.
    * Move `qsmul` before `ratCast_def` in instance declarations.
    * Name more instances.
    * Rename `rat_smul` to `qsmul`.

[33mcommit b57f05f1d1e7db3bbd8081c1f194ab7cc4f2f4c6[m
Author: damiano <adomani@gmail.com>
Date:   Tue Apr 23 09:54:29 2024 +0000

    chore: remove 4 porting notes about continuity (#12358)

[33mcommit fe756d68b4e8686a6a6f99abbe94379d64c89a09[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Tue Apr 23 09:54:28 2024 +0000

    feat(CategoryTheory/Adjunction): given an abstract isomorphism, the counit is an isomorphism (#12344)
    
    ... in case the left adjoint is fully faithful. We also give the dual result about the unit in case the right adjoint is fully faithful.

[33mcommit 609dbd06021977f202806f01a0bb08b28e912406[m
Author: EtienneC30 <etienne.marion@ens-lyon.fr>
Date:   Tue Apr 23 08:47:53 2024 +0000

    feat: add lemma one_div_mul_eq_div (#12349)
    
    Add a specification of `div_mul_eq_mul_div` which combines it with `one_mul`.

[33mcommit 5b9f6871056ba92ab448f7c14858b5d9b8064cd2[m
Author: Johan Commelin <johan@commelin.net>
Date:   Tue Apr 23 08:03:19 2024 +0000

    chore(Algebra/Lie/EngelSubalgebra): simp lemma engel_zero (#12357)
    
    The Engel subalgebra of the zero element is the entire Lie algebra.

[33mcommit 94191c7ecf671f26e9d825da33acc2866216c581[m
Author: Johan Commelin <johan@commelin.net>
Date:   Tue Apr 23 08:03:18 2024 +0000

    fix(Algebra/Module/LinearMap/Polynomial): fix name of polyCharpoly_coeff_map (#12356)
    
    there is nothing `coeff` about this lemma

[33mcommit 03b471425ef6894a1385678605489d7ef289754b[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Tue Apr 23 06:58:22 2024 +0000

    chore: Move `WithZero` material depending on `GroupWithZero` (#12351)
    
    Everything under `Algebra.Group` should be additivisable. Therefore I move the `GroupWithZero` instances for `WithZero` from `Algebra.Group.WithOne.Defs` and the whole of `Algebra.Group.WithOne.Units` to a new file `Algebra.GroupWithZero.WithZero`. I credit Mario for https://github.com/leanprover-community/mathlib/commit/ad92a9ba47f417916aab365d13db653fa8991a84 and Johan for https://github.com/leanprover-community/mathlib/pull/762.
    
    Use the opportunity to slightly clean up the code:
    * Replace `:=` by `where` in instance declarations
    * Add missing explicit arguments to `coe` lemmas
    * Add missing `section ... end`

[33mcommit e408da18380ef42acf7b8337c6b0536bfac09105[m
Author: Enrico Borba <enricozb@gmail.com>
Date:   Tue Apr 23 06:08:46 2024 +0000

    feat(Archive): Buffon's Needle (#10189)
    
    [Zulip discussion](https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/Buffon's.20Needle/near/419359856)

[33mcommit 61ef41dd25fadee6bbb9157f1fe890122bca210c[m
Author: Kim Morrison <scott@tqft.net>
Date:   Tue Apr 23 04:59:54 2024 +0000

    chore: move NormalizedGCDMonoid ‚Ñï to reduce imports (#12341)
    
    Previously `Mathlib.GroupTheory.Perm.Fin` knew about `LinearMap` for no good reason, because it relied on `Mathlib.RingTheory.Int.Basic` for some basic things, but that file also has heavy imports.
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 21e9965a1f2994fba5f4fc1bd71fc6eabddb9a92[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Tue Apr 23 03:32:50 2024 +0000

    chore(Condensed): make the discrete-underlying adjunction more concrete (#12343)
    
    This PR changes the definition of the "underlying set" of a condensed set to the value at `CompHaus.of PUnit`¬†instead of an arbitrary terminal object. This specific terminal object has the nice definitional property of containing exactly one element.

[33mcommit cf0d5d44235f28e0f76af6ac7fa8898900055d85[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Apr 23 03:32:49 2024 +0000

    chore(List): drop primed deprecated lemmas (#12307)
    
    Cherry-picked from #9607
    
    Co-authored-by: @semorrison

[33mcommit 65e0bd6f74eb25d00b3634b392c7519a5e541495[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Apr 23 03:32:49 2024 +0000

    chore(List): drop some deprecated lemmas (#12306)
    
    Cherry-picked from #9607
    
    Co-authored-by: @semorrison

[33mcommit a1bf7622235a4d8717f06f2336aabdf56058fc9a[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Tue Apr 23 03:32:48 2024 +0000

    chore: split out Ideal.IsPrimary (#12296)
    
    This splits out a small but self-contained part of RingTheory.Ideal.Operations.

[33mcommit 1cb427d09adc8a48f9c626f0f7e002b86eb761c5[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Tue Apr 23 03:06:37 2024 +0000

    chore(Condensed): add `PreservesFiniteProduct` instances for sheaves on `Profinite`¬†and¬†`Stonean` (#12345)

[33mcommit 16e2255a54602a66763fd3e5e52c12e31327ac8e[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Tue Apr 23 01:17:08 2024 +0000

    fix: generalize index types of `iSup` to Sort (#12114)
    
    This breaks a few `simp` proofs which were expecting these lemmas to apply to the data binders but not the prop binders.

[33mcommit de6ffbc253c5302cfc816aebcb47f48eb77f7795[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Mon Apr 22 18:54:11 2024 +0000

    chore: Rename `Int` and `Rat` instances (#12235)
    
    Fix a few names and deduplicate the `AddCommGroup ‚Ñ§` instance

[33mcommit 3e9c99f31ad2e7abf526333980b9bfa34c51098c[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Mon Apr 22 18:30:38 2024 +0000

    feat: add `simp` lemmas for order on `RCLike` (#12342)

[33mcommit 24e020ad0bec5b5e8056922952f156ad83b3e774[m
Author: Mitchell Lee <trivial171@gmail.com>
Date:   Mon Apr 22 10:39:44 2024 +0000

    refactor(GroupTheory/Coxeter/Basic): Coxeter groups (#11836)
    
    - Remove the definition `def Matrix.IsCoxeter : Prop`. Replace it with a type `CoxeterMatrix B`, which is the type of all Coxeter matrices indexed by `B`.
    - Simplify the definitions of Coxeter matrices `A‚Çô` (`n : ‚Ñï`), `B‚Çô` (`n : ‚Ñï`), `D‚Çô` (`n : ‚Ñï`), `I‚ÇÇ‚Çò` (`m : ‚Ñï`), `E‚ÇÜ`, `E‚Çá`, `E‚Çà`, `F‚ÇÑ`, `G‚ÇÇ`, `H‚ÇÉ`, and `H‚ÇÑ`.
    - All definitions involving a matrix (including the definition of a Coxeter group, Coxeter relation, and Coxeter system) now require the matrix to be a Coxeter matrix.
    - Update docstrings of `GroupTheory.Coxeter.Basic` and `GroupTheory.Coxeter.Matrix`.
      - The terms "Coxeter matrix", "Coxeter group", and "Coxeter system" are now defined in the header docstring.
      - It is now clearer that the rank of a Coxeter system can be infinite.
      - There is now a note in the implementation details of `GroupTheory.Coxeter.Matrix` about what happens when an entry of the Coxeter matrix is zero.
      - There is now a note in the implementation details of `GroupTheory.Coxeter.Basic` about how we try to state our results in terms of the type `B` that indexes the simple reflections, rather than the set $S$ of simple reflections.
    - Rename these definitions, structures, and theorems. Previously, there were six namespaces to keep track of: `Matrix`, `Matrix.IsCoxeter`, `CoxeterMatrix`, `CoxeterGroup`, `CoxeterGroup.Relations`, and `CoxeterSystem`. It was difficult to guess the fully qualified name of many theorems, and the names were not designed for use with field notation. Instead, we put everything into two namespaces: `CoxeterMatrix` and `CoxeterSystem`.
      - Rename `CoxeterGroup.Relations.ofMatrix` to `CoxeterMatrix.relation`. Also, change its type to `B ‚Üí B ‚Üí FreeGroup B`  (from `B √ó B ‚Üí FreeGroup B`).
      - Rename `CoxeterGroup.Relations.toSet` to `CoxeterMatrix.relationsSet`.
      - Rename `Matrix.CoxeterGroup` to `CoxeterMatrix.group`.
      - Rename `CoxeterGroup.of` to `CoxeterMatrix.simple`.
      - Remove `CoxeterSystem.funLike`. Rename `CoxeterSystem.funLike.coe` to `CoxeterSystem.simple`, because "simple reflection" (or "simple" for short) is the name used in the literature for this concept, and it is unintuitive to think of a Coxeter system as a function.
      - Rename `CoxeterSystem.funLike.coe_injective'`  and `CoxeterSystem.ext'`, which are exactly the same theorem, to `CoxeterSystem.simple_determines_coxeterSystem`. (This theorem is forthcoming in #11406.)
      - Rename `CoxeterSystem.ofCoxeterGroup` to `CoxeterMatrix.toCoxeterSystem`. `CoxeterSystem.ofCoxeterGroup` is a confusing name because the input to the definition is an `CoxeterMatrix`, not a Coxeter group.
      - Rename `CoxeterSystem.ofCoxeterGroup_apply` to `CoxeterMatrix.toCoxeterSystem_simple` and remove `@[simp]`. The theorem doesn't have a Coxeter system as input and it does have a `CoxeterMatrix` as input, so it makes more sense for it to be in the `CoxeterMatrix` namespace.
      - Rename `CoxeterSystem.map_relations_eq_reindex_relations` to `CoxeterMatrix.reindex_relationsSet` and switch the two sides of the equality. The theorem doesn't mention Coxeter systems anywhere, so it shouldn't be in the `CoxeterSystem` namespace. Also, the new name better indicates what is on the left-hand side of the equality.
      - Rename `CoxeterSystem.equivCoxeterGroup` to `CoxeterMatrix.reindexGroupEquiv` and switch the two sides of the equivalence. The definition doesn't mention Coxeter systems anywhere, so it shouldn't be in the `CoxeterSystem` namespace. Also, the new name conveys that the definition is about the Coxeter group associated to a reindexed matrix, rather than merely conveying that it is about an isomorphism of Coxeter groups.
      - Rename `CoxeterSystem.equivCoxeterGroup_apply_of` to `CoxeterMatrix.reindexGroupEquiv_apply_simple`.
      - Rename `CoxeterSystem.equivCoxeterGroup_symm_apply_of` `CoxeterMatrix.reindexGroupEquiv_symm_apply_simple`.
      - Rename `CoxeterSystem.reindex_apply` to `CoxeterSystem.reindex_simple`.
      - Rename `CoxeterSystem.map_apply` to `CoxeterSystem.map_simple`.
    - Simplify several of the proofs.
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>
    Co-authored-by: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>

[33mcommit b5ed94974e96846d9be505e05e92e4497228e556[m
Author: EtienneC30 <etienne.marion@ens-lyon.fr>
Date:   Mon Apr 22 09:41:57 2024 +0000

    feat(Topology/MetricSpace/PseudoMetric): add new lemma Real.sub_le_dist (#12321)
    
    Add new lemma Real.sub_le_dist, the difference of two real numbers is less or equal to their distance.

[33mcommit 5b04cac0e31a6953b498e5fe76337bd8d5d67d0d[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Mon Apr 22 09:41:56 2024 +0000

    chore: redistribute a few results from Algebra.Module.Submodule.LinearMap (#12295)
    
    These don't involve submodules at all.

[33mcommit f4476bd480349c7d77cf4ef943dad17d0bc042b1[m
Author: Xavier Roblot <roblot@math.univ-lyon1.fr>
Date:   Mon Apr 22 09:41:55 2024 +0000

    feat: Add `mixedEmbedding.norm` (#12249)
    
    Define a norm of the mixed space `‚Ñù^r‚ÇÅ √ó ‚ÑÇ^r‚ÇÇ` associated to a number field `K` of signature `(r‚ÇÅ, r‚ÇÇ)`. The norm is defined such that the norm of `mixedEmbedding K a` for `a : K` is equal to the absolute value of the norm of `a`
    over `‚Ñö`.
    
    This norm will be used in a future PR about the quotient of the mixed space by the action of the units of `K`.
    
    
    
    Co-authored-by: Xavier Roblot <46200072+xroblot@users.noreply.github.com>

[33mcommit 7877b40e8af98047d0c593b0fbfc4fd99cf18b49[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Apr 22 08:47:58 2024 +0000

    feat(Ring/InjSurj): add missing lemmas (#12328)
    
    Add `Function.(Inj|Surj)ective.(left|right)DistribClass`.

[33mcommit 5b96848cc28fea8b782392a020db7a20824d9409[m
Author: Christopher Hoskin <christopher.hoskin@gmail.com>
Date:   Mon Apr 22 02:54:12 2024 +0000

    doc(Algebra/Jordan/Basic): Fix documentation for commutative real Jordan algebra (#12325)
    
    Originally the commutativity axiom was built into `IsCommJordan`. This was removed in #7060 when `CommMagma` was introduced. However, updating the module docstring was omitted. This PR corrects the docstring to reflect the current situation.

[33mcommit b5f6488e96b8d691bfbb5cb12e20447e7c07e231[m
Author: Jz Pan <acme_pjz@hotmail.com>
Date:   Mon Apr 22 02:54:11 2024 +0000

    chore(RingTheory/TensorProduct/Basic): relax the condition of `Subalgebra.finite_sup` to `CommSemiring` (#12323)

[33mcommit 23844d25de6a7dd35969898356c2d3205fa57093[m
Author: Xavier Roblot <roblot@math.univ-lyon1.fr>
Date:   Mon Apr 22 02:54:10 2024 +0000

    feat: Add `Ideal.associatesEquivIsPrincipal` (#12241)
    
    For `R` a domain, Define the equivalence between `R/RÀ£` and the principal ideals of `R` defined by sending the
    class of `x` to the principal ideal generated by `x`.

[33mcommit 073c0142324e000fff725272a450e71f870e7835[m
Author: Filippo A. E. Nuccio <filippo.nuccio@univ-st-etienne.fr>
Date:   Mon Apr 22 02:25:47 2024 +0000

    feat (Mathlib/FieldTheory/RatFunc.lean): add five lemmas about coercions between Hahn or Laurent Series and Rational Functions (#12245)
    
    Add five lemmas about coercions between Hahn or Laurent Series and Rational Functions
    
    Co-authored-by: Mar√≠a In√©s de Frutos Fern√°ndez @mariainesdff

[33mcommit cc96d0afe2eefff4ef1ca9e065eed50c34d775c8[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Sun Apr 21 22:15:29 2024 +0000

    chore: cherry-pick some updates to style exceptions (#12277)
    
    Cardinal/Basic was mostly adding more comments.

[33mcommit e54d54f5644663fb1cb5be70c78a8b818b93b2fc[m
Author: Andrew Yang <36414270+erdOne@users.noreply.github.com>
Date:   Sun Apr 21 21:29:49 2024 +0000

    chore(RingTheory/Filtration): Fix typo in docstring (#12318)

[33mcommit 6a9fc7946f09d10907269d93caeab0a5002af676[m
Author: Mitchell Lee <trivial171@gmail.com>
Date:   Sun Apr 21 21:29:48 2024 +0000

    style(Topology/Algebra/InfiniteSum/Nonarchimedean): Use variables (#12314)

[33mcommit 08a5c50983951b0cd6aa8fd992a5197bac987379[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Sun Apr 21 21:29:48 2024 +0000

    chore: move `Matrix.IsCoxeter` between files (#12312)
    
    Split from #11836; this makes the `Matrix.IsCoxeter` -> `CoxeterMatrix` change there easier to see

[33mcommit 755b215e8f5f1c35587e9eaf6889f0ba9136816d[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Sun Apr 21 21:29:46 2024 +0000

    feat(Util/Superscript): add a semi-correct formatter (#12193)
    
    This probably isn't correct, but the old version was even less correct!

[33mcommit 8b58bd5b429382c3e93c3afbc4e19be97972301b[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sun Apr 21 21:29:46 2024 +0000

    feat(UniformConvergenceTopology): add `UniformOnFun.uniformity_eq` etc (#10784)
    
    - Add `UniformOnFun.uniformity_eq` etc:
      the `HasBasis` statements need more assumptions.
    - Add missing `toFun`/`ofFun`.
    - Golf using new lemmas.

[33mcommit 191819314f311c451b4aab9e74d72fcc882f7fe3[m
Author: Mario Carneiro <mcarneir@andrew.cmu.edu>
Date:   Sun Apr 21 20:28:40 2024 +0000

    feat: `try_this` macro + use in abel/ring (#12320)
    
    This adds a simple elab `try_this tac` which can be used to suggest `tac` from a macro. This is useful for the backup suggestions made by `ring` and `abel`.
    
    
    
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>

[33mcommit a5485f370ebd36f0c873820b1717d3d03b43b35e[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Sun Apr 21 18:22:20 2024 +0000

    feat(Condensed): generalise universes in `TopComparison` (#11727)

[33mcommit 01ce6da3bb8363e9b89fd9bdfe236a7f3b2ce5ba[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Sun Apr 21 16:33:05 2024 +0000

    chore: Rename a few lemmas about `Pi.mulSingle` (#12317)
    
    Before this PR, the `MonoidHom` version of `Pi.mulSingle` was called `MonoidHom.single` for brevity; but this is confusing when contrasted with `MulHom.single` which is about `Pi.single`.
    
    After this PR, the name is `MonoidHom.mulSingle`.
    
    Also fix the name of `Pi.single_div` since it is about `Pi.mulSingle` (and we don't have the lemma that would be called `Pi.single_div`).

[33mcommit cf7f2354fbba8ba7ca44c125c258730bceb93dff[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sun Apr 21 11:20:34 2024 +0000

    chore(Vector): migrate `List.nthLe` ‚Üí `List.get` (#12301)
    
    This drops the deprecated `nth_eq_nthLe` lemma.

[33mcommit a7a70332ebc9f5b2fe28f18a46d0b3afed5fcd02[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sun Apr 21 11:20:33 2024 +0000

    chore(SpecificGroups/Cyclic): `Fintype` -> `Finite` (#12299)

[33mcommit d80f46e713f180d7dac30e8e537883a8215cf9d4[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Sun Apr 21 11:20:32 2024 +0000

    chore(LightProfinite): make LightProfinite.of universe polymorphic (#12217)

[33mcommit e3567c709439350c8eecf48186f4d9ae30bc5c24[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sun Apr 21 10:30:36 2024 +0000

    feat(Multilinear): generalize `ContinuousConstSMul` instance (#12303)
    
    - add names to all instances in
      `Topology/Algebra/Module/Multilinear/Topology`;
    - generalize `ContinuousConstSMul` instance
      from `NormedSpace` to TVS.

[33mcommit ff9ef348232eff81b0bfc1a048e21933a141e11d[m
Author: Ruben Van de Velde <yael.dillies@gmail.com>
Date:   Sun Apr 21 07:28:03 2024 +0000

    chore: make argument to sq_pos_of_ne_zero/sq_pos_iff implicit (#12288)
    
    This matches our general policy and zpow_two_pos_of_ne_zero.
    
    Also define sq_pos_of_ne_zero as an alias.

[33mcommit e3dee5dfe33a76e50e28987cd4db427a722f0054[m
Author: Mitchell Lee <trivial171@gmail.com>
Date:   Sun Apr 21 06:33:05 2024 +0000

    feat: tendsto on a supremum (#12308)
    
    
    
    Co-authored-by: Mitchell Lee <130885647+trivial1711@users.noreply.github.com>

[33mcommit 181ed3f4db600dc04e2893b4b9313f20ab9d814b[m
Author: Scott Carnahan <128885296+ScottCarnahan@users.noreply.github.com>
Date:   Sun Apr 21 06:33:04 2024 +0000

    fix (LinearAlgebra/TensorProduct/Basic) : minor docstring typo (#12298)
    
    Switch `M ‚äó f` to `f ‚äó M` in `rTensorHom M` docstring.

[33mcommit b94978f35a644d7135abb98b463b57a2984de507[m
Author: Mitchell Lee <trivial171@gmail.com>
Date:   Sun Apr 21 05:41:03 2024 +0000

    feat: `Filter.coprod f g = f √óÀ¢ ‚ä§ ‚äî ‚ä§ √óÀ¢ g` (#12309)

[33mcommit 5d9cf93cfb3a98ee60d6fff2830ed1176287adcd[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Sat Apr 20 20:51:55 2024 +0000

    feat(Algebra/Category/ModuleCat): the category of presheaves of modules has limits (#12264)
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>
    Co-authored-by: Christian Merten <christian@merten.dev>

[33mcommit 129548ae565c89b7acee24585bb26ccfe1e3755f[m
Author: Hyeokjun Kwon <86776403+Jun2M@users.noreply.github.com>
Date:   Sat Apr 20 20:51:54 2024 +0000

    feat(Nat/Defs): Add div_dvd_iff_dvd_mul (#12243)

[33mcommit 3052a332669a34a366d23b3768f60a9b0a8d6b9d[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Sat Apr 20 20:27:54 2024 +0000

    feat(scripts/lint-style): more useful line numbers (#12282)
    
    This changes slighlty the output of the linter from
    ```
    [...]Mathlib/My/File.lean#L285: ERR_LIN: Line has more than 100 characters
    ```
    to
    ```
    [...]Mathlib/My/File.lean:285 ERR_LIN: Line has more than 100 characters
    ```
    
    If one then copies the path with the line number and uses that when opening the file in vs code with Ctrl-p, it will set to cursor to the correct line number in question. Also other tools will work with that format, it is also used by pylint, clang etc.
    
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit 32f9bf1b8a56fadcfc05e9ce0a6b11e2907d9fc4[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Sat Apr 20 18:50:10 2024 +0000

    feat(CategoryTheory): the left Kan extension functor (#12168)
    
    Given a functor `F : C ‚•§ D`, we define the left Kan extension functor `F.lan : (C ‚•§ E) ‚•§ (D ‚•§ E)` which sends a functor `G : C ‚•§ E` to its left Kan extension along `F`. (This is a step towards the refactor of `Lan/Ran` in mathlib using the new API for Kan extensions of functors #10425.)

[33mcommit cd502bdfdbaa72220379cab4aa7a16db40e4a676[m
Author: Ruben Van de Velde <yael.dillies@gmail.com>
Date:   Sat Apr 20 17:51:58 2024 +0000

    feat: Generalise sign of power lemmas (#12289)

[33mcommit 4e9bd1d41e0de9ce0df738a67c36d06e0b9636f2[m
Author: Anne Baanen <vierkantor@vierkantor.com>
Date:   Sat Apr 20 13:53:43 2024 +0000

    chore(Algebra/Algebra): split `Subalgebra.Basic` (#12267)
    
    This PR was supposed to be simultaneous with #12090 but I got ill last week.
    
    This is based on seeing the import `Algebra.Algebra.Subalgebra.Basic ‚Üí RingTheory.Ideal.Operations` on the [longest pole](https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/The.20long.20pole.20in.20mathlib/near/432898637). It feels like `Ideal.Operations` should not be needed to define the notion of subalgebra, only to construct some interesting examples. So I removed the import and split off anything that wouldn't fit.
    
    The following results and their corollaries were split off:
     * `Subalgebra.prod`
     * `Subalgebra.iSupLift`
     * `AlgHom.ker_rangeRestrict`
     * `Subalgebra.mem_of_finset_sum_eq_one_of_pow_smul_mem`
    
    
    
    Co-authored-by: Anne Baanen <Vierkantor@users.noreply.github.com>

[33mcommit 28c79ff6d57d3386cae013576681c7a0b69ad068[m
Author: Oliver Nash <github@olivernash.org>
Date:   Sat Apr 20 13:53:42 2024 +0000

    feat: define the coroots of a semisimple Lie algebra (#10893)
    
    We define the coroots of a finite-dimensional semisimple Lie algebra with coefficients in a field characteristic zero and establish the key property that a coroot is complementary to the kernel of the root.
    
    In addition we carry out some related, light refactoring. The most important points are:
    
    - Promote `LieModule.weight` from a subtype to a structure `LieModule.Weight` + expand its API (we need this expanded API for the headline results).
    - Replace the definition `LieAlgebra.rootSpaceProductNegSelf` with its range which we call `LieAlgebra.corootSpace` (in all places where we used this definition, it was the range that we actually used).
    - Drop the very old (unused) definitions `LieAlgebra.IsRoot` and `LieModule.IsWeight`.

[33mcommit 7eb1fddb84088da2fadbb74c47cea432a4344c0b[m
Author: Bolton Bailey <bolton.bailey@gmail.com>
Date:   Sat Apr 20 13:11:33 2024 +0000

    refactor: golf MvPolynomial.support_finSuccEquiv_nonempty (#11401)
    
    Refactors the proof of this lemma. Adds a simp lemma to do this, and also adds MvPolynomial analogue

[33mcommit ec96058c9b73ed76defdfbafbc9b98817c62812b[m
Author: Markus Himmel <markus@himmel-villmar.de>
Date:   Sat Apr 20 12:43:41 2024 +0000

    feat: order embedding is fully faithful as a functor (#12283)
    
    As discussed [on Zulip](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Free.20Walking.20Arrow.20Category).

[33mcommit 4421fe0320100c5cc134a56ffa99ad7e84b901ca[m
Author: Johan Commelin <johan@commelin.net>
Date:   Sat Apr 20 11:56:56 2024 +0000

    feat(Algebra/Lie/Rank): the rank of a Lie algebra, and regular elements (#10628)
    
    We define the rank of a finite dimensional Lie algebra,
    and prove the existence of regular elements
    over sufficiently large base fields.

[33mcommit 8b0bd598a6e13fbeebe3b25dbc87e46fcf1bf8f3[m
Author: Bulhwi Cha <chabulhwi@semmalgil.com>
Date:   Sat Apr 20 11:22:13 2024 +0000

    doc: fix grammar (#12272)
    
    Change "splitted" to "split".

[33mcommit cccfb03beb5fd78c4fe6767095e338c2592cffb5[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Sat Apr 20 07:53:59 2024 +0000

    chore: disable reviewdog if more than 300 files (#12280)
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit 8e052accebe62fb00e8f538de973321162c3010c[m
Author: Kim Morrison <scott@tqft.net>
Date:   Sat Apr 20 06:50:57 2024 +0000

    chore: refactor to avoid importing Ring for Group topics (#11913)
    
    This is a far from a complete success at the PR title, but it makes a fair bit of progress, and then guards this with appropriate `assert_not_exists Ring` statements.
    
    It also breaks apart the `Mathlib.GroupTheory.Subsemigroup.[Center|Centralizer]` files, to pull the `Set.center` and `Set.centralizer` declarations into their own files not depending on `Subsemigroup`.
    
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>
    Co-authored-by: Ya√´l Dillies <yael.dillies@gmail.com>

[33mcommit f26580092e3ee3285dfa69b9e43e35ba1daa05fa[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Fri Apr 19 20:51:34 2024 +0000

    chore(Logic): reduce use of autoImplicit (#12135)
    
    In one case, replacing this naively errored, so I just merged the single declaration using it.
    
    Delete two unused variables in Logic/Basic.

[33mcommit 1f5ab661170979892403a5f80f923c6a51c9e8e8[m
Author: Lorenzo Luccioli <lorenzoluccioli@gmail.com>
Date:   Fri Apr 19 17:39:39 2024 +0000

    Add simple lemmas about integrability (#12263)
    
    I add 4 iff lemmas about the integrability a function to the MeasureTheory.Function.L1Space file.
    
    The first two lemmas are about the integrability of the sum of function and a constant under a finite measure.
    The other two are about the integrability of the sum of a function and an integrable function.

[33mcommit 47e1ef4b73ca383caa102f6fc69b439999615a23[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Fri Apr 19 15:53:35 2024 +0000

    chore: avoid automatically generated instance names (#12270)

[33mcommit e8ccef95c108e09c84c807751af9ab5611cc857b[m
Author: Jo√´l Riou <christian@merten.dev>
Date:   Fri Apr 19 14:49:45 2024 +0000

    feat: the forget functor from commutative groups to groups preserves all limits (#11669)
    
    It is shown in this PR that the forget functor from commutative groups to groups preserves all limits (regardless of the universe parameters of the index category). It is also shown that a functor `F : J ‚•§ CommGroupCat` (or `F : J ‚•§ GroupCat`) has a limit iff the type `(F ‚ãô forget _).sections` is small. This is related to the fact that the forget functor `CommGroupCat.{u} ‚•§ Type u` is corepresentable (by `ULift ‚Ñ§`).
    
    
    
    Co-authored-by: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>

[33mcommit 94b44d329f70989f2be9e06650f301d5e7ebf8ce[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Fri Apr 19 13:57:38 2024 +0000

    chore: replace `refine'` that already have a `?_` (#12261)
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit 46c2efe170970eed53b98db515d1399c6668881d[m
Author: Anne Baanen <vierkantor@vierkantor.com>
Date:   Fri Apr 19 13:15:05 2024 +0000

    chore: small splits of `RingTheory.Ideal.Operations`; clean imports (#12090)
    
    This is based on seeing the import `RingTheory.Ideal.Operations` ‚Üí `LinearAlgebra.Basis` on the [longest pole](https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/The.20long.20pole.20in.20mathlib/near/432898637). It feels like `Ideal.Operations` is a bit of a chokepoint for compiling Mathlib since it imports many files and is imported by many files. So splitting out a few obvious parts should help with compile times. Moreover, there are a bunch of imports that I could remove and have the file still compile: presumably these are (were) transitive dependencies that shake does not remove.
    
    The following results and their corollaries were split off:
     * `Ideal.basisSpanSingleton`
     * `Basis.mem_ideal_iff`
     * `Ideal.colon`
    
    In particular, now `Ideal.Operations` should no longer need to know about `Basis` or submodule quotients.

[33mcommit c641f2b9cd5aee7aa641d368f6604d077eb4cd54[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Fri Apr 19 08:04:34 2024 +0000

    chore(Algebra/Parity): Rename some variables (#12260)
    
    Rename a bunch of variables in `Algebra.Parity` as I need a new lemma about `a b : Œ±` and `m n : ‚Ñï` but the names were used as `m n : Œ±` and `a b : ‚Ñï`.

[33mcommit 6096b4a14c21be6102c467d7a49b93faa9993e64[m
Author: Kim Morrison <scott@tqft.net>
Date:   Fri Apr 19 06:51:25 2024 +0000

    chore: remove last use of classical! (#12257)
    
    The `classical!` tactic is always replaceable by the `classical` tactic. This removes the last use of it, which required adding in Std the plumbing-level implementation of `classical`.
    
    - [x] Depends on: #12256
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 11f79c598393adc61f68a80a31ec4eb63ceba132[m
Author: Kim Morrison <scott@tqft.net>
Date:   Fri Apr 19 03:12:52 2024 +0000

    chore: bump Std (#12256)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 1d4a722576d4d396076b108966fb07ea58d87d67[m
Author: Kim Morrison <scott@tqft.net>
Date:   Fri Apr 19 03:12:51 2024 +0000

    chore: remove unnecessary classical! (#12255)
    
    `classical!` appears to never actually be necessary, and is just being used out of habit, and we can get rid of it to reduce the number of ways to say the same thing.
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 9e7997ad3863b597879ebea2720b892fa9f59501[m
Author: Kyle Miller <kmill31415@gmail.com>
Date:   Fri Apr 19 02:04:08 2024 +0000

    fix: make congruence lemma generator handle dependence (#12253)
    
    There was a bug in the congruence lemma generator used by `congr(...)` and `congrm` that would create congruence lemmas with unbound free variables if there were arguments after subsingleton instances.
    
    Reported by Jireh Loreaux on [Zulip](https://leanprover.zulipchat.com/#narrow/stream/113489-new-members/topic/what.20the.20heq.2C.20PosSemidef/near/434202080)

[33mcommit 4e7ba671d15d3d3cbfbee4b96be6040da9168722[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Fri Apr 19 02:04:07 2024 +0000

    feat(Analysis/SpecificLimits/Normed): generalize to division rings (#12164)

[33mcommit 5fdef41ab9e9449322e5264ad19f1425deb362ab[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Fri Apr 19 02:04:06 2024 +0000

    feat: expand basic API around Fourier integrals (#12153)
    
    The statements in this PR are mostly straightforward variations around already existing statements, which have proved useful down the road.

[33mcommit f3368d8adb77e4d3a6241aee8e3cd08e547ffa7f[m
Author: David Loeffler <d.loeffler.01@cantab.net>
Date:   Fri Apr 19 02:04:05 2024 +0000

    feat(NumberTheory/LSeries): even Hurwitz zeta functions (part 1) (#12147)
    
    Add the construction of the even part of the Hurwitz zeta function (via FE pairs).

[33mcommit 2d4e7e3ff14200684860ae2b349c6cbfe8ffded8[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Fri Apr 19 02:04:04 2024 +0000

    feat(Topology/Algebra): add `Inseparable.{smul,mul,inv}` (#12142)
    
    Add dot notation lemmas
    for algebraic operations on `Specializes` and `Inseparable`.

[33mcommit 9dd58399cedce11d835a8e84f558866d5a7213c2[m
Author: Kyle Miller <kmill31415@gmail.com>
Date:   Fri Apr 19 00:52:45 2024 +0000

    feat: make `notation3` delaborator not match instance arguments (#11700)
    
    Instance arguments are supposed to be canonical in elaborated expressions, so there should be no harm in approximating matching by not matching instance arguments at all.
    
    This makes the matchers more efficient. They are more likely to succeed in matching too, since the matchers do not take defeq into account: they only handle exact syntactic matches.

[33mcommit 57de30f033ca3844a718d3bed98c93719b5ee1f2[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Thu Apr 18 22:58:10 2024 +0000

    chore(Combinatorics/Derangements/Finite): Solve a porting note (#12252)

[33mcommit 5efe4b8547b00cff14b153627438597c424b0451[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Thu Apr 18 21:51:23 2024 +0000

    chore: use a variable in Data.Nat.Cast.Defs (#12254)

[33mcommit 26fb0c377bf7bc19404e04f3123c62545a380dab[m
Author: Richard Copley <buster@buster.me.uk>
Date:   Thu Apr 18 19:57:51 2024 +0000

    Allow users of `field_simp` to increase `cfg.maxDischargeDepth` (#12239)
    
    Usage: `field_simp (config := { maxDischargeDepth := 11 })`. This was always valid syntax, but previously the `11` was ignored.
    
    
    
    Co-authored-by: Richard Copley <rcopley@gmail.com>

[33mcommit de4f2706b1f6df38e4b1668f129be816a878db28[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Thu Apr 18 18:19:48 2024 +0000

    feat(Condensed): condensed modules form an abelian category (#12238)

[33mcommit e08227422dbd16adf97e1056bc1b610bf7c32ac5[m
Author: JonBannon <jbannon@siena.edu>
Date:   Thu Apr 18 15:37:02 2024 +0000

    feat: add Lemma `Matrix_toEuclideanLin_apply` (#11988)
    
    The proposed lemma unfolds the `toEuclideanLin` definition to express action of a matrix on a vector, without defeq abuse.
    
    
    
    Co-authored-by: JonBannon <59937998+JonBannon@users.noreply.github.com>

[33mcommit 742d658e837d3be4cc12b9e2b7226241bf9e8ec8[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Thu Apr 18 14:41:11 2024 +0000

    feat: add monotonicity theorems pertaining to the continuous functional calculus (#12224)

[33mcommit f83fe2ffbf66847f84fed742249ce13585209ea3[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Thu Apr 18 13:15:24 2024 +0000

    feat(CategoryTheory): more universe polymorphism for limits in sheaf categories (#12222)
    
    We prove that sheaf categories have limits and colimits of the same size as the target category. Before, the universe levels were too restrictive. We change the construction of the colimit: it now uses the formal properties of sheafification instead of an explicit construction.

[33mcommit fa2a388efbfbe7ba9ef6ffc5f298557e300ad537[m
Author: Floris van Doorn <fpvdoorn@gmail.com>
Date:   Thu Apr 18 11:47:22 2024 +0000

    feat: characterize totally disconnected sets in orders (#11752)

[33mcommit a445a6b03db40f3fb81fcbb0fb72032361eb65c1[m
Author: Kyle Miller <kmill31415@gmail.com>
Date:   Thu Apr 18 10:42:20 2024 +0000

    fix: strengthen Dirichlet Unit Theorem (#12240)
    
    The theorem `NumberField.Units.exist_unique_eq_mul_prod` was using nested `‚àÉ!`'s rather than a single `‚àÉ!`.

[33mcommit 838bc130e92466687dad4d66b7661fb633eeaf91[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Thu Apr 18 10:42:19 2024 +0000

    chore: Rename `isnatCast`, delete `Int.cast_Nat_cast` (#12236)
    
    `Int.cast_Nat_cast` dates back to the ad-hoc port, in #206.

[33mcommit e6ebf6fc00dae967d73b49ea4f5e2b2c1a83f113[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Thu Apr 18 10:42:18 2024 +0000

    feat: `StarOrderedRing` instances on `ContinuousMap` (#12040)

[33mcommit 706b88366a62b4b5fe2fe5a2f32a10ae7c9f53c9[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Thu Apr 18 09:26:25 2024 +0000

    chore(CategoryTheory): move file about abelian sheaf categories to correct location (#12216)

[33mcommit dc3493078a401e35e616a04fd5552218e3ca533c[m
Author: Kim Morrison <scott@tqft.net>
Date:   Thu Apr 18 09:26:24 2024 +0000

    chore: update Std (#12210)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit a6439961fc3c4671837af5a82b8ab88db07240d6[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Thu Apr 18 09:26:23 2024 +0000

    feat(Algebra/Homology): compatibilities of homology and shifts (#11782)
    
    This PR studies the compatibilities of homology and shifts. This results into `ShiftSequence` instances for the homology functor in the `CochainComplex` and `HomotopyCategory` namespaces.

[33mcommit 94860b32649584083c2b0c8f5e152d51218dbcce[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Thu Apr 18 09:26:22 2024 +0000

    feat(CategoryTheory): triangulated subcategories (#11740)
    
    This PR defines the type `Triangulated.Subcategory C` when `C` is a pretriangulated category. It also introduces a type class `CategoryTheory.ClosedUnderIsomorphisms` for a predicate on objects in a category `C`.

[33mcommit 1394cf11ced1b5828751f0e17ce44e2a3569058e[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Thu Apr 18 09:26:20 2024 +0000

    feat(CategoryTheory/Localization): the localized category is preadditive (#11728)
    
    In this PR, it is shown that if `W : MorphismProperty C` has a left calculus of fractions and `C` is preadditive, then the localized category is also preadditive.
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>
    Co-authored-by: Johan Commelin <johan@commelin.net>

[33mcommit fd2528377280066e301078180ca52e1516aa45cb[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Thu Apr 18 08:21:47 2024 +0000

    chore: remove a few miscellaneous now-resolved porting notes (#12127)

[33mcommit dd2a5bc09932c1de07bc12ab38efe7160797f132[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Thu Apr 18 08:21:46 2024 +0000

    feat: translations of ample sets are ample (#12046)
    
    This was supposed to be included in #11344, as even the module docstring shows
    
    Inspired by the sphere-eversion project (but golfed and slightly extended).
    Also, use namespace AmpleSet in the file.

[33mcommit 1dc9339a6c55a095b29cf84637055608608be1b6[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Thu Apr 18 08:21:44 2024 +0000

    doc(Manifold/Charted): document the fields of `Pregroupoid` (#11930)
    
    Similar to #9827.

[33mcommit 7ab1837922568784f85fd0ac9d29cef5e27ec56c[m
Author: David Loeffler <d.loeffler.01@cantab.net>
Date:   Thu Apr 18 08:21:43 2024 +0000

    feat(NumberTheory/Harmonic): asymptotics of Riemann zeta as s ‚Üí 1 (#11794)
    
    Show that the constant term of the Laurent series of Riemann zeta at s = 1 is the Euler-Mascheroni `Œ≥`.

[33mcommit 49a37b56b124f4f066e30ce5a296746519ce76dd[m
Author: Iv√°n Renison <85908989+IvanRenison@users.noreply.github.com>
Date:   Thu Apr 18 08:21:42 2024 +0000

    feat: Add `getVert_append` and `getVert_reverse` (#11787)

[33mcommit 7bcbba0d074be9f9d93f1b13ea7dd93c258f066a[m
Author: David Loeffler <d.loeffler.01@cantab.net>
Date:   Thu Apr 18 08:21:41 2024 +0000

    feat(NumberTheory/Harmonic): Euler-Mascheroni const = `-Œì'(1)` (#11611)

[33mcommit 2eed8869286c461689f61bdf18a621dcf5ec4d91[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Thu Apr 18 07:19:07 2024 +0000

    chore(FinEnum): `List.nthLe` -> `List.get` (#12220)

[33mcommit 1c5029c0d9d0fde56648060c208e3a02175badba[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Thu Apr 18 07:19:06 2024 +0000

    chore: tidy various files (#12213)

[33mcommit 0a626e733c44b3ca24e55b6476c738dcf8a5e47c[m
Author: Kim Morrison <scott@tqft.net>
Date:   Thu Apr 18 06:50:11 2024 +0000

    fix: improve proofs in QuadraticModuleCat.Monoidal (#12233)
    
    These time out on nightly-testing, but are fixed by these changes.
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit eb70190a1445f617465dad3d29d87e846ed6c77b[m
Author: Jiecheng Z <hydrogenbear@qq.com>
Date:   Thu Apr 18 06:50:10 2024 +0000

    feat: lemmas about Array.extract (#11621)
    
    
    
    Co-authored-by: Hydrogenbear <hydrogenbear@poption.org>
    Co-authored-by: Jiecheng Z <hydrogenbear@gmail.com>
    Co-authored-by: Hydrogenbear <hydrogenbear@gmail.com>

[33mcommit c92f1eed4b42697d814b0935a38feaa06bae4f0f[m
Author: Kyle Miller <kmill31415@gmail.com>
Date:   Thu Apr 18 05:39:18 2024 +0000

    feat: make `ExistsUnique` notation throw an error when used with more than one binder (#12218)
    
    [Zulip discussion](https://leanprover.zulipchat.com/#narrow/stream/113489-new-members/topic/How.20can.20I.20say.20.22there.20exist.20unique.20a.2C.20b.20such.20that.2E.2E.2E.22.3F/near/433824047)

[33mcommit df27bf71e9a6dbe1c495a294068535ee8f8e78df[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Thu Apr 18 05:39:17 2024 +0000

    chore(*): drop porting notes about `List.nthLe` ‚Üí `List.get` (#12203)

[33mcommit 278260ff8013f92fc92d749b880ac6ecf7c8e2a8[m
Author: Mario Carneiro <mcarneir@andrew.cmu.edu>
Date:   Thu Apr 18 05:39:15 2024 +0000

    feat: `shake --explain` (#11982)
    
    * [x] Depends on: #11981
    
    This adds a `--explain` flag to `shake` which will say, for each module in which it reports unnecessary imports, why all of the imports it is suggesting (as well as all the imports it does not recommend to remove) are required, in the form:
    ```
    $ lake exe shake --explain
    ...
    ./././Mathlib/Tactic/Eqns.lean:
      remove #[Std.CodeAction.Attr, Std.Tactic.Lint.Basic]
      add #[Lean.Elab.InfoTree.Main, Lean.Elab.Exception]
      note: Mathlib.Tactic.Eqns requires Lean.Meta.Eqns
        because initFn‚úù refers to Lean.Meta.EqnsExtState.map
      note: Mathlib.Tactic.Eqns requires Std.Lean.NameMapAttribute
        because eqnsAttribute refers to Lean.NameMapExtension
      note: Mathlib.Tactic.Eqns requires Lean.Elab.InfoTree.Main
        because initFn‚úù refers to Lean.Elab.resolveGlobalConstNoOverloadWithInfo
      note: Mathlib.Tactic.Eqns requires Lean.Elab.Exception
        because initFn‚úù refers to Lean.Elab.throwUnsupportedSyntax
    ```
    
    
    
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>

[33mcommit 493a947e5510311d805404fb0141113548e2a76c[m
Author: Bolton Bailey <bolton.bailey@gmail.com>
Date:   Thu Apr 18 05:39:14 2024 +0000

    chore: split `Subsingleton,Nontrivial` off of `Data.Set.Basic` (#11832)
    
    Moves definition of and lemmas related to `Set.Subsingleton` and `Set.Nontrivial` to a new file, so that `Basic` can be shorter.

[33mcommit 03939bbca6f97ef4a447e9311b00826e7265f708[m
Author: David Renshaw <dwrenshaw@gmail.com>
Date:   Thu Apr 18 05:39:13 2024 +0000

    chore: deprecate redundant theorems append_eq_cons_iff and cons_eq_append_iff (#11630)
    
    These theorems already exist in `Std`:
    https://github.com/leanprover/std4/blob/e5306c3b0edefe722370b7387ee9bcd4631d6c17/Std/Data/List/Lemmas.lean#L150-L157

[33mcommit 9c3efae304cf7c551881401279ca109eed3b1d12[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Thu Apr 18 05:39:12 2024 +0000

    feat: the category of sheaves of modules (#11479)
    
    This PR defines the category `SheafOfModules R` when `R` is a sheaf of rings on a category `C` equipped with a Grothendieck topology `J`.
    
    
    
    Co-authored-by: Christian Merten <christian@merten.dev>

[33mcommit 0a52038c5a26810d45a6f095890efdfd969752c6[m
Author: Fr√©d√©ric Marbach <66742248+frederic-marbach@users.noreply.github.com>
Date:   Thu Apr 18 04:28:48 2024 +0000

    feat(Order/Hom): prove disjoint from order embedding (#12223)
    
    This adds 3 lemmas which state that if you have an order embedding `f` such that `f a‚ÇÅ` and `f a‚ÇÇ` are disjoint/codisjoint/complements, then the same holds for `a‚ÇÅ` and `a‚ÇÇ`.
    
    *Motivation*: For a project described [here](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Derivations.20on.20Lie.20algebras), I wanted to know that if two Lie ideals are complements as submodules, then they are complements as Lie ideals too. I realized that the correct level of generality was probably in the `Order.Hom.Basic` file.
    
    *Caveats*: I am very much open to golfing/naming/redesign suggestions. Within the modified file, there was already a `Disjoint.map_orderIso` result, but it requires an `OrderIso` (not just a one-way embedding) and it requires a `SemilatticeInf` (whereas my version just uses `PartialOrder`).
    
    Co-authored-by: Yury G. Kudryashov <urkud@urkud.name>

[33mcommit aa4476a81cf0e11add4844e4a68ea1bef790d634[m
Author: Michael Stoll <Michael.Stoll@uni-bayreuth.de>
Date:   Thu Apr 18 03:58:50 2024 +0000

    feat(NumberTheory/EulerProduct/Basic): use infinite products, golf (#12161)
    
    This adds versions of the various Euler product statements in terms of the new topological products, namely `HasProd (fun p : Primes ‚Ü¶ ‚àë' e, f (p ^ e)) (‚àë' n, f n)` and `‚àè' p : Primes, ‚àë' e, f (p ^ e) = ‚àë' n, f n` (and similar for completely multiplicative `f` in terms of `(1 - f p)‚Åª¬π`).
    
    At the same time, I have reworked the proofs to some extent (in particular removing a few slow `convert`s). I also added a bunch of local instances that speed up instance synthesis by a factor of 2 (from 1.4 to 0.7 seconds on my laptop).
    
    Unfortunately, this means that the diff is fairly large.
    
    See [here](https://leanprover.zulipchat.com/#narrow/stream/144837-PR-reviews/topic/L-series/near/432666616) and [here](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Infinite.20products/near/431508883) on Zulip.
    
    
    
    Co-authored-by: Michael Stoll <99838730+MichaelStollBayreuth@users.noreply.github.com>

[33mcommit 3cf7243a0d844ca0eec6fb3bfb0b534ff23fdc5b[m
Author: Kim Morrison <scott@tqft.net>
Date:   Thu Apr 18 03:26:56 2024 +0000

    chore: update lean-pr-testing reporting logic, now that the linter always runs (#12202)
    
    As reported [elsewhere](https://github.com/leanprover/lean4/pull/3808#issuecomment-2038473494).
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit ef0baa794a7f910ce590e6934893388b60f4ddc0[m
Author: damiano <adomani@gmail.com>
Date:   Thu Apr 18 03:26:55 2024 +0000

    chore: move tests in `MonCat` to a test file (#11511)
    
    The unused tactic linter flagged the final example that this PR moves since it contains `match_target` and `guard_hyp`.

[33mcommit f4b4298bd76b82f7b28f0fb6b5ab92bdf5e5634d[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Thu Apr 18 02:39:47 2024 +0000

    chore: replace `set_integral` with `setIntegral` (#12215)
    
    Done with a global search and replace, and then (to fix the `#align` lines), replace `(#align \S*)setIntegral` with `$1set_integral`.

[33mcommit e52c91266ee6cacf94a3f40459f7d595eff0b355[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Thu Apr 18 01:55:06 2024 +0000

    chore: improve tests for `ToExpr` derive handler (#12225)
    
    The TODO seems to have solved itself, and `#guard_msgs` can be used to actually test the error condition.

[33mcommit 429161409ec2486e6b705e640c7deefe36402f93[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Thu Apr 18 01:19:36 2024 +0000

    feat(CategoryTheory): more lemmas for the calculus of fractions (#11737)
    
    We introduce lemmas on fractions which shall be useful when constructing the preadditive structure on the localized category.

[33mcommit cf5f6299e911ea7c169fd568c1a55b31b0c58cb3[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Thu Apr 18 00:54:35 2024 +0000

    feat(CategoryTheory/Shift): the induced shift sequence (#11764)
    
    When `G : C ‚•§ A` is a functor from a category equipped with a shift by a monoid `M`, we have defined in the file `CategoryTheory.Shift.ShiftSequence` a type class `G.ShiftSequence M` which provides functors `G.shift a : C ‚•§ A` for all `a : M`, isomorphisms `shiftFunctor C n ‚ãô G.shift a ‚âÖ G.shift a'` when `n + a = a'`, and isomorphisms `G.isoShift a : shiftFunctor C a ‚ãô G ‚âÖ G.shift a` for all `a`, all of which satisfy good coherence properties. The idea is that it allows to use functors `G.shift a` which may have better definitional properties than `shiftFunctor C a ‚ãô G`. The typical example shall be `[(homologyFunctor C (ComplexShape.up ‚Ñ§) 0).ShiftSequence ‚Ñ§]` for any abelian category `C`.
    
    Similarly as a shift on categories may induce a shift on a quotient or a localized category (see the file `CategoryTheory.Shift.Induced`), this PR shows that under certain assumptions, there is an induced "shift sequence". In future PR, this will be applied to the construction of a shift sequence for the homology functor on the homotopy category of cochain complexes, and also on the derived category.

[33mcommit 20365842aef2fe4e23b5aaac8907c2257683600a[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Apr 17 23:47:13 2024 +0000

    chore(AdmissibleAbsoluteValue): golf, `nthLe` ‚Üí `get` (#12219)

[33mcommit 48970a4b9d58c67ee28352df33fc0dfffe98d99c[m
Author: Johan Commelin <johan@commelin.net>
Date:   Wed Apr 17 20:41:01 2024 +0000

    feat: characteristic polynomials of linear families of endomorphisms (#11773)
    
    
    
    
    
    Co-authored-by: Oliver Nash <github@olivernash.org>

[33mcommit 85a47191abb7957cdc53c5c2b59aef219bd8f6d9[m
Author: Filippo A. E. Nuccio <filippo.nuccio@univ-st-etienne.fr>
Date:   Wed Apr 17 16:44:05 2024 +0000

    feat (RingTheory/PowerSeries): Add basic lemmas aiming at proving that power series over a field are a DVR (#12160)
    
    Add some basic lemmas about (univariate) power series over fields and their inverses, aiming at proving that they form a DVR.
    
    Co-authored-by: Mar√≠a In√©s de Frutos Fern√°ndez @mariainesdff

[33mcommit 726f2a5ff941fa3b7aee11ba2224bee84661a626[m
Author: Felix-Weilacher <fweilach@andrew.cmu.edu>
Date:   Wed Apr 17 16:06:04 2024 +0000

    feat(MeasureTheory/Constructions/Polish): generalize topological assumptions to measurable ones.  (#12069)
    
    Several theorems in MeasureTheory/Constructions/Polish.lean about measurable sets, functions, etc. assume that a space is a `BorelSpace` or `OpensMeasurableSpace` for some nice topology. This PR removes the topological data from such theorems when possible, replacing them with sufficient and natural assumptions on `MeasurableSpace`'s.
    
    The old versions of the theorems still work automatically thanks to TC inference.
    
    *TODO*: Add `CountablySeparated` typeclass abbreviating `HasCountableSeparatingOn _ MeasurableSet univ`.
    
    
    
    Co-authored-by: Felix-Weilacher <112423742+Felix-Weilacher@users.noreply.github.com>

[33mcommit 2e8aeee458db0718063c58ad0fbfeefed99c3f69[m
Author: Rida Hamadani <mridahamadani@gmail.com>
Date:   Wed Apr 17 15:12:55 2024 +0000

    feat(Combinatorics/SimpleGraph): Existence of a path from `u` to `v` of length equal to `G.dist u v` (#11814)
    
    Checkout [this](https://leanprover.zulipchat.com/#narrow/stream/113489-new-members/topic/.E2.9C.94.20Confused.20by.20recursive.20proofs) conversation on zulip.
    Co-authored-by: Kyle Miller [kmill31415@gmail.com](mailto:kmill31415@gmail.com)
    
    
    
    Co-authored-by: Rida Hamadani <106540880+Rida-Hamadani@users.noreply.github.com>

[33mcommit b5c526702428960f7b1bafe73f4695673f30f623[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Apr 17 13:43:08 2024 +0000

    chore(Game/Short): drop `SetTheory.PGame.listShortGet` (#12201)
    
    It was deprecated during port on 2023-07-01

[33mcommit 6d66f4ca7995eab9b164ea87d83addf1f10ef2a2[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Apr 17 13:43:07 2024 +0000

    chore(Data/List/Enum): move from `Basic` (#11697)

[33mcommit 6efcbba1155e3ad177feafa4653305dfd1f456b8[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Wed Apr 17 13:43:06 2024 +0000

    feat: codimension two subspaces have path-connected complement (#11337)
    
    From sphere-eversion (not written by me).
    This basically shows that subspaces of codimension at least two are ample sets (PRed in #11342).

[33mcommit e4721ccdbd69b0124f1c947b821033ae422b4789[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Wed Apr 17 13:17:44 2024 +0000

    chore: adaptations for nightly-2024-04-07 (#12214)

[33mcommit 98843f5bd55b0682a88db1af0fc4bf84ff9ee60f[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Wed Apr 17 12:17:09 2024 +0000

    feat: Equivalence between embeddings of `Fin (n + 1)`, and embeddings of `Fin n` together with a value outside the range. (#12151)

[33mcommit 1342b9e13ab6fac121aa338d77a81915fea9db95[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Apr 17 12:17:08 2024 +0000

    feat(Function/Support): support of `update` (#11736)
    
    Generalize 4 lemmas from `Finsupp` to `Function`.

[33mcommit 145460b9327f120bf7013552bb8e8185bd226dea[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Wed Apr 17 11:15:26 2024 +0000

    chore: Rename `nat_cast`/`int_cast`/`rat_cast` to `natCast`/`intCast`/`ratCast` (#11486)
    
    Now that I am defining `NNRat.cast`, I want a definitive answer to this naming issue. Plenty of lemmas in mathlib already use `natCast`/`intCast`/`ratCast` over `nat_cast`/`int_cast`/`rat_cast`, and this matches with the general expectation that underscore-separated name parts correspond to a single declaration.

[33mcommit 625b8cb77561e007ba23b9838633129be50c1289[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Wed Apr 17 10:49:36 2024 +0000

    feat(CompHaus): terminal objects (#12186)
    
    We prove that the one element space in `CompHaus`¬†is terminal.

[33mcommit c9ab842e1394b5286685131069cf2b6bed567563[m
Author: Christian Merten <judith.ludwig@iwr.uni-heidelberg.de>
Date:   Wed Apr 17 10:49:36 2024 +0000

    feat(RingTheory/Etale): add definition of unramified, smooth and etale (#12044)
    
    Adds definitions for unramified, smooth and √©tale algebras and shows basic permanence properties.
    
    In a follow-up PR we show that these notions are stable under base change.
    
    Co-authored-by: Judith Ludwig <ludwig@mathi.uni-heidelberg.de>
    
    
    
    Co-authored-by: Christian Merten <christian@merten.dev>
    Co-authored-by: judithludwig <150042763+judithludwig@users.noreply.github.com>

[33mcommit 423f5783b82e3ddeeb7c3c4dda0fab83d418eedc[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Wed Apr 17 10:18:25 2024 +0000

    feat(CategoryTheory): a lemma about composing different isomorphisms from opposite coproducts to products (#12155)

[33mcommit a94f3be14fc34979d936e0b2fd3cc47c01fd5185[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Wed Apr 17 09:53:09 2024 +0000

    chore(Util/Superscript): delete deleteme section (#12212)
    
    leanprover/lean4#2269 was shipped long ago, so this isn't needed.

[33mcommit 12c27420d458e0a9d4fe5acdf812427b14b2feb8[m
Author: Xavier Roblot <46200072+xroblot@users.noreply.github.com>
Date:   Wed Apr 17 09:24:33 2024 +0000

    feat: Define the covolume of a `ZLattice` (#11327)
    
    This PR defines the covolume of a `Zlattice` as the (finite) volume of any of its fundamental domain and proves some results about it, mainly: it's nonzero, it does not depend of the choice of the fundamental domain and it is equal to the absolute value of the determinant of any basis of the lattice.
    
    This PR also creates a directory `Zlattice` (with the original file becoming `Zlattice/Basic.lean`) and a new file `Zlattice/Covolume.lean`.
    
    
    
    
    
    Co-authored-by: Xavier Roblot <roblot@Algorithmi.local>
    Co-authored-by: Xavier Roblot <roblot@math.univ-lyon1.fr>

[33mcommit 3026f635817f1d88259781c6af4551162442cd20[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Apr 17 08:31:24 2024 +0000

    chore(PeriodicPts): migrate `List.nthLe` ‚Üí `List.get` (#12209)

[33mcommit 9d504dc150bbf5e161fcc66c65c2a9e81a3660c1[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Apr 17 08:31:23 2024 +0000

    chore(Order/JordanHolder): `List.nthLe` ‚Üí `List.get` (#12208)

[33mcommit 66c165145603bf5f4af2a45fabe9ae88d2f8acab[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Wed Apr 17 07:30:13 2024 +0000

    chore(GroupTheory): remove autoImplicit (#12134)

[33mcommit d5ffcef12ab412963ee3026cba47000080ed9607[m
Author: damiano <adomani@gmail.com>
Date:   Wed Apr 17 06:35:50 2024 +0000

    fix: mdata in cancel_denoms (#12083)
    
    PR inspired by "automated bugs" (#12054).
    
    [Zulip thread](https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/automated.20bugs/near/432861117)

[33mcommit 50ad8e5b632350c48a75130cedfb23d9863a5f5b[m
Author: Kim Morrison <scott@tqft.net>
Date:   Wed Apr 17 04:41:11 2024 +0000

    chore: nightly-testing bot reminders in separate stream (#12200)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 22f7e6fcc3a3c2370d4cab6880ba4a7c458f8284[m
Author: Kim Morrison <scott@tqft.net>
Date:   Wed Apr 17 04:41:10 2024 +0000

    chore: speed up a proof in FieldTheory/NormalClosure (#12199)
    
    Speed up a proof which will otherwise timeout on nightly-testing.
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 08a6c1de3b1c35b5d520097c00a0bd4b241b8571[m
Author: Kim Morrison <scott@tqft.net>
Date:   Wed Apr 17 04:41:09 2024 +0000

    chore: speed up a proof in FourierTransformDeriv (#12198)
    
    This gets slower on nightly-testing, so here's a pre-emptive speed up.
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit d200a39db19637ac52bd2e0736758151e924362d[m
Author: Kim Morrison <scott@tqft.net>
Date:   Wed Apr 17 04:41:08 2024 +0000

    chore: speed up a proof that breaks later (#12195)
    
    Help a proof along by expliciting rewriting by an associativity lemma, rather than relying on the defeq (which causes a timeout on nightly-testing).
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit ab8ac29bb934176bf8b56d594a477a274f4f8ba8[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Apr 17 03:36:49 2024 +0000

    feat(List/Infix): add `get_tails` and `get_inits` (#12170)
    
    The goal is to drop `nth_le_tails` and `nth_le_inits` soon.
    
    Written for #9607, moved to a separate PR

[33mcommit 42466cc7feb630b121518c4f91206d806eeed817[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Apr 17 00:57:44 2024 +0000

    chore(Associated): add simps, golf (#11435)
    
    ## New `simp` tags or `simp` lemmas
    
    `associated_one_iff_isUnit`, `associated_zero_iff_eq_zero`,
    `Associates.mk_eq_one`, `Associates.mk_dvd_mk`,
    `Associates.mk_isRelPrime_iff`, `Associates.mk_zero`,
    `Associates.quot_out_zero`, `Associates.le_zero`,
    `Associates.prime_mk`, `Associates.irreducible_mk`,
    `Associates.mk_dvdNotUnit_mk_iff`, `Associates.factors_le`,
    `Associates.prod_factors`
    
    ## New `gcongr` tags
    
    `Associates.factors_mono`, `Associates.prod_mono`
    
    ## Change explicit args to implicit
    
    `Associates.prime_mk`, `Associates.irreducible_mk`,
    `Associates.one_or_eq_of_le_of_prime`
    
    ## Change typeclass assumptions
    
    - drop `[Nontrivial _]` here and there,
      mostly in cases when a lemma has `_ ‚â† _` assumption
    - drop all decidability assumptions
      in `Associates.FactorSetMem`
    - drop decidability assumptions
      when they aren't needed to formulate a theorem
    
    ## Use `WithTop` API
    
    Use `WithTop.some` and `‚ä§` instead of `Option.some` and `none`
    in `UniqueFactorizationDomain`.
    
    ## Renames
    
    - `Associates.isPrimal_iff` ‚Üí `Associates.isPrimal_mk`;
    - `Associates.mk_le_mk_iff_dvd_iff` ‚Üí `Associates.mk_le_mk_iff_dvd`;
    - `Associates.factors_0` ‚Üí `Associates.factors_zero`;
    - `Associates.factors_eq_none_iff_zero` ‚Üí
      `Associates.factors_eq_top_iff_zero`

[33mcommit f9a1a20340dfeef6788fb801539a35ef1f6c591d[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Apr 17 00:30:53 2024 +0000

    refactor(Game/PGame): use `List.get` instead of `List.nthLe` (#12173)

[33mcommit 256c22b1c43ce9065da463de4df7021693812928[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Apr 17 00:30:52 2024 +0000

    feat: add `ContinuousAlternatingMap.toAlternatingMapLinear` (#12119)

[33mcommit f0cc6e53b7699324a4180718cb8a9bdd26c06e8a[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Tue Apr 16 23:33:36 2024 +0000

    chore(Topology): make `LocallyConstant.comap` computable (#12182)
    
    After the recent refactor (#12136), the `noncomputable`¬†modifier is unnecessary, and the docstring needed modification.

[33mcommit 7cdbcaaaf763159637fb80a8e279d1f8860bcf81[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Apr 16 23:33:35 2024 +0000

    chore(Topology/../Alternating): add spaces to notation (#12118)
    
    Now it delaborates as `M [‚ãÄ^Œπ]‚ÜíL[R] N`, not `M[‚ãÄ^Œπ]‚ÜíL[R]N`.

[33mcommit 05d3da3831f2084bdd8d736e2428d9ae83a87dd6[m
Author: FR <zhao.yu-yang@foxmail.com>
Date:   Tue Apr 16 23:33:34 2024 +0000

    chore(Data/DFinsupp/Basic): remove impossible `‚Üí‚Çö` notation (#12018)
    
    This is a binary operator that expands to a unary function; so this notation is (and has always been) impossible to use.

[33mcommit fcf5d484087d9b0c36aa45b0677c9298a3d9a7e7[m
Author: Riccardo Brasca <riccardo.brasca@gmail.com>
Date:   Tue Apr 16 22:37:50 2024 +0000

    Feat: add fermatLastTheoremThree_of_three_dvd_only_c (#11767)
    
    We add `fermatLastTheoremThree_of_three_dvd_only_c`: To prove `FermatLastTheoremFor 3`, we may assume that `¬¨ 3 ‚à£ a`, `¬¨ 3 ‚à£ b`, `a` and `b`
    are coprime and `3 ‚à£ c`.
    
    From the flt3 project in LFTCM2024.
    
    
    
    Co-authored-by: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>

[33mcommit 8f9698dec9fb4990e144abfb1d21d86c3480263a[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Tue Apr 16 22:37:49 2024 +0000

    feat(Order): limit elements in well-ordered types (#11584)
    
    This PR introduces two main definitions:
    - `wellOrderSucc a`: the successor of an element `a` in a well-ordered type
    - the typeclass `IsWellOrderLimitElement a` which asserts that an element `a` (in a well-ordered type) is neither a successor nor the smallest element, i.e. `a` is a limit element
    
    Then, the lemma `eq_bot_or_eq_succ_or_isWellOrderLimitElement` shows that an element in a well-ordered type is either `‚ä•`, a successor, or a limit element.
    
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit c2ce3b2f9d0d921db0d0f679e43e78266199df14[m
Author: Hyeokjun Kwon <86776403+Jun2M@users.noreply.github.com>
Date:   Tue Apr 16 21:36:31 2024 +0000

    Add floor_real_sqrt_eq_nat_sqrt (#12187)

[33mcommit 1aff9ff03dc8064ee697d5b32cb454395a3edbd8[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Tue Apr 16 21:36:30 2024 +0000

    chore(Data/Finset/Powerset): Fix decidability instances (#11672)
    
    Typeclass search cannot synthesize `‚àÄ t ‚äÜ s, Decidable (p t)` hypothesis, hence the instance could never fire. Fix it and compress back the binders, both in the instancs and `Combinatorics.Additive.SalemSpencer` where they were supposed to be used.

[33mcommit da617610f72997aa86f7bcecc0e7750e834744e6[m
Author: Amelia Livingston <101damnations@github.com>
Date:   Tue Apr 16 21:10:32 2024 +0000

    feat: coalgebra homomorphisms (#11961)
    
    Homomorphisms of coalgebras, mimicking the file `Mathlib.Algebra.Algebra.Hom`.

[33mcommit a36538038999895d312b3fdc69710ebdb145ad35[m
Author: atarnoam <joel.riou@universite-paris-saclay.fr>
Date:   Tue Apr 16 20:19:07 2024 +0000

    feat(MeasureTheory/Haar): haarScalarFactor lemmas (#10383)
    
    - Changed existing proofs of some lemmas to avoid code duplication. Took out some common lines in their proofs and turned them into a lemma.
    - `haarScalarFactor \mu \mu = 1`
    
    
    
    Co-authored-by: Hyeokjun Kwon <86776403+Jun2M@users.noreply.github.com>
    Co-authored-by: Moritz Firsching <moritz.firsching@gmail.com>
    Co-authored-by: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
    Co-authored-by: Fr√©d√©ric Marbach <66742248+frederic-marbach@users.noreply.github.com>
    Co-authored-by: Peter Nelson <71660771+apnelson1@users.noreply.github.com>
    Co-authored-by: Kim Morrison <scott@tqft.net>
    Co-authored-by: R√©my Degenne <Remydegenne@gmail.com>
    Co-authored-by: Noam Atar <atarnoam@gmail.com>
    Co-authored-by: David Loeffler <d.loeffler.01@cantab.net>
    Co-authored-by: Andrew Yang <the.erd.one@gmail.com>
    Co-authored-by: Christopher Hoskin <christopher.hoskin@gmail.com>
    Co-authored-by: Christian Merten <christian@merten.dev>
    Co-authored-by: grunweg <rothgami@math.hu-berlin.de>
    Co-authored-by: Yury G. Kudryashov <urkud@urkud.name>
    Co-authored-by: damiano <adomani@gmail.com>
    Co-authored-by: Ruben Van de Velde <scott.morrison@gmail.com>
    Co-authored-by: Ya√´l Dillies <yael.dillies@gmail.com>
    Co-authored-by: Mar√≠a In√©s de Frutos-Fern√°ndez <mariaines.dff@gmail.com>
    Co-authored-by: Jireh Loreaux <loreaujy@gmail.com>
    Co-authored-by: Johan Commelin <johan@commelin.net>
    Co-authored-by: Mitchell Lee <trivial171@gmail.com>
    Co-authored-by: sgouezel <sebastien.gouezel@univ-rennes1.fr>
    Co-authored-by: Thomas Browning <tb65536@uw.edu>
    Co-authored-by: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>

[33mcommit e521a251ba448a696d6b7404c4aeea5b68c77718[m
Author: Christopher Hoskin <christopher.hoskin@gmail.com>
Date:   Tue Apr 16 19:49:32 2024 +0000

    refactor(LinearAlgebra/BilinearForm/Basic): Derive the `*_left` and `*_right` results from the `map_*‚ÇÇ` and `map_*` results (#12124)
    
    Following #11278 a number of the results in `LinearAlgebra/BilinearForm/Basic` are just special cases of results in `LinearAlgebra/BilinearMap`.

[33mcommit 1c6ef0c310b67b5baada7b2583f41af9debbd18a[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Tue Apr 16 18:50:31 2024 +0000

    feat: norm estimates for various operators in linear algebra (#12150)
    
    There is a technical issue: I need to register two local instances to be even able to state the norm estimates. The issue is typeclass inference getting stuck in complicated types of linear maps...

[33mcommit 75e48397bac997131ff37a8cb76dae141f67f5e2[m
Author: Matthew Robert Ballard <matt@mrb.email>
Date:   Tue Apr 16 18:10:25 2024 +0000

    chore(OperatorNorm): label synthesis failures depth violations  (#12188)
    
    These instances could be found automatically if we were allowed to bump `Lean.Meta.Context.synthPendingDepth` manually.

[33mcommit 09e40ec450457f04f25256b684a824fd0cc6dd36[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Tue Apr 16 13:39:18 2024 +0000

    chore(CategoryTheory): address porting note in KanExtension file (#12148)

[33mcommit bde5669ad7f2bd0a64ea62a49df56733e7e45310[m[33m ([m[1;31morigin/separable_subspace[m[33m)[m
Author: R√©my Degenne <Remydegenne@gmail.com>
Date:   Tue Apr 16 12:43:03 2024 +0000

    feat(Probability/Kernel): disintegration of finite kernels (#10603)
    
    Let `Œ∫ : kernel Œ± (Œ≤ √ó Œ©)` be a finite kernel, where `Œ©` is a standard Borel space. Then if `Œ±` is countable or `Œ≤` has a countably generated œÉ-algebra (for example if it is standard Borel), then there exists a `kernel (Œ± √ó Œ≤) Œ©` called conditional kernel and denoted by `condKernel Œ∫` such that `Œ∫ = fst Œ∫ ‚äó‚Çñ condKernel Œ∫`.
    
    Properties of integrals involving `condKernel` are collated in the file `Integral.lean`.
    The conditional kernel is unique (almost everywhere w.r.t. `fst Œ∫`): this is proved in the file `Unique.lean`.
    
    
    
    
    Co-authored-by: sgouezel <sebastien.gouezel@univ-rennes1.fr>
    Co-authored-by: R√©my Degenne <remydegenne@gmail.com>

[33mcommit 02293f49eab7803cd43f5cd075e60651b6efb960[m
Author: Kim Morrison <scott@tqft.net>
Date:   Tue Apr 16 11:34:01 2024 +0000

    chore: backports from #11997, adaptations for nightly-2024-04-07 (#12176)
    
    These are changes from #11997, the latest adaptation PR for nightly-2024-04-07, which can be made directly on master.
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>
    Co-authored-by: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>

[33mcommit 41ebfad37612836c42918db7b7a8738ab61e5f4b[m
Author: Peter Nelson <71660771+apnelson1@users.noreply.github.com>
Date:   Tue Apr 16 11:34:00 2024 +0000

    feat: Matroid restrictions (#9023)
    
    We define the restriction of a matroid to a set, the resulting partial order on the set of matroids on a type, and give associated API.

[33mcommit 246e9e2aa5fb157cfa5d7fe352a244798e2ae628[m
Author: Fr√©d√©ric Marbach <66742248+frederic-marbach@users.noreply.github.com>
Date:   Tue Apr 16 10:25:20 2024 +0000

    doc(Order): fix join/meet inversion for lattices (#12172)
    
    Currently, this doc-string describes [Mathlib.Order.Lattice](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Order/Lattice.html):
    > Semilattices are partially ordered sets with join (greatest lower bound, or sup) or meet (least upper bound, or inf) operations.
    
    It seems to be the other way around: https://en.wikipedia.org/wiki/Semilattice
    
    This commit fixes this.

[33mcommit d83efb3141b30a4d5fe4f35e1a8919f045f0856d[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Tue Apr 16 10:25:20 2024 +0000

    refactor(CategoryTheory): more general form of the characterisation of condensed sets as sheaves on `Stonean` (#11518)
    
    Given a fully faithful functor `F : C ‚•§ D` into a precoherent category, which preserves and reflects finite effective epi families, and satisfies the property `F.EffectivelyEnough`¬†(meaning that to every object in `C` there is an effective epi from an object in the image of `F`), the categories of coherent sheaves on `C`¬†and `D`¬†are equivalent.
    
    We give the corresonding result for the regular topology as well.
    
    We use this general setup to refactor the characterisation of condensed sets as sheaves on `Stonean`; indeed, the inclusion functor to `CompHaus`¬†satisfies `Functor.EffectivelyEnough`¬†because the Stonean spaces are the projective objects in `CompHaus`, which has enough projectives and every epimorphism in `CompHaus`¬†is effective.
    
    
    
    Co-authored-by: adamtopaz <github@adamtopaz.com>

[33mcommit d1a8af0e3dd68e9bd079cda6e4b143e0bf573bec[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Tue Apr 16 09:18:09 2024 +0000

    refactor: move disjoint_sdiff_inter (#12021)
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit 07d4b27e6df24d829363120396a721783aefb209[m
Author: Hyeokjun Kwon <86776403+Jun2M@users.noreply.github.com>
Date:   Tue Apr 16 08:45:45 2024 +0000

    Chore(Data/Set/Card): Remove unnecessary assumption for ncard eq of bijective (#12108)
    
    Drop redundant hypothesis `s.Finite` from `Set.ncard_eq_of_bijective`.

[33mcommit f47773f12d9e1345a09b63cb8ee9f2555ca124f4[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Tue Apr 16 07:45:00 2024 +0000

    feat(Algebra/Homology): relax assumptions for Functor.mapHomologicalComplex (#12174)
    
    The extension of a functor `F` to a functor between categories of homological complex is now defined under the assumption `F.PreservesZeroMorphisms` rather than `F.Additive`.

[33mcommit 8fa5a3aecbb9867b1250a6e82f7d7405cde1312f[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Tue Apr 16 07:44:59 2024 +0000

    chore: tidy various files (#12121)

[33mcommit 38a7a5336a4a64a17a6942648054da296c2e89f5[m
Author: Thomas Browning <tb65536@uw.edu>
Date:   Tue Apr 16 07:44:58 2024 +0000

    feat(Analysis/SpecialFunctions/Complex/Circle): `expMapCircle` as a `PartialHomeomorph` and prove `IsLocalHomeomorph` (#11334)
    
    This PR proves `IsLocalHomeomorph expMapCircle` (eventually this should be upgraded to `IsCoveringMap`, but that's a good deal harder and is probably best done via general theory such as in #7596).

[33mcommit d4be5335838b609e3cdbc64ac54ba89932e1d0b0[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Tue Apr 16 06:30:08 2024 +0000

    feat: `Unique` instance for embeddings of an empty space (#12149)

[33mcommit 73db0f61af75ed7d4e208652a05293d3c43ea81d[m
Author: Kim Morrison <scott@tqft.net>
Date:   Tue Apr 16 06:30:07 2024 +0000

    chore: remove unused @[simp] from Fin.sub_one_lt_iff (#11967)
    
    The @[simp] annotation is not used in mathlib, and triggered a linter failure that I don't care to investigate unnecessarily.
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit d40db77fad1f71258ab66a3f857155ae6eebb597[m
Author: Mitchell Lee <trivial171@gmail.com>
Date:   Tue Apr 16 05:53:16 2024 +0000

    feat: limit of partial sums of a unconditionally summable `‚Ñï`-indexed series (#12169)

[33mcommit 58b254ee61a8a9b261f37b25d298a9e217e7c5d8[m
Author: Johan Commelin <johan@commelin.net>
Date:   Tue Apr 16 05:16:58 2024 +0000

    chore(LinearAlgebra/Matrix/Charpoly): fix swapped lines (#12162)

[33mcommit ca1a851ae33af82f567dde4f039ee30747494fd8[m[33m ([m[1;31morigin/HypergraphRamsey[m[33m)[m
Author: Kim Morrison <scott@tqft.net>
Date:   Mon Apr 15 21:55:47 2024 +0000

    chore: fix topic name in nightly-testing bot (#12165)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit b0fff6f50b2094bbb283fdc6c6652e09e68e7153[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Mon Apr 15 19:14:30 2024 +0000

    chore: rename `StarOrderedRing` convenience constructors (#12089)
    
    `StarOrderedRing` was recently turned into a `Prop` mixin. This renames the convenience constructors to adhere to the naming convention for theorems vs. defs.

[33mcommit bec5207fcf186349650ea23eb2b7712dfe7d59fb[m
Author: Mar√≠a In√©s de Frutos-Fern√°ndez <mariaines.dff@gmail.com>
Date:   Mon Apr 15 15:25:34 2024 +0000

    refactor(RingTheory.MvPolynomial.Homogeneous): refactor in terms of weightedHomogeneous (#7609)
    
    We rewrite the definition of homogeneous polynomial as a special case of weighted homogeneous polynomial.
    
    Question: should all uses of `‚àë i in d.support, d i` be replaced by `degree d`?
    
    Co-authored-by: Antoine Chambert-Loir <antoine.chambert-loir@u-paris.fr>
    
    
    
    Co-authored-by: Mar√≠a In√©s de Frutos-Fern√°ndez <88536493+mariainesdff@users.noreply.github.com>

[33mcommit 28bea03d9f765df2aca03a2cdf1ea4bb6a1db974[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Mon Apr 15 14:21:40 2024 +0000

    refactor(Rat): Streamline basic theory (#11504)
    
    `Rat` has a long history in (and before) mathlib and as such its development is full of cruft. Now that `NNRat` is a thing, there is a need for the theory of `Rat` to be mimickable to yield the theory of `NNRat`, which is not currently the case.
    
    Broadly, this PR aims at mirroring the `Rat` and `NNRat` declarations. It achieves this by:
    * Relying more on `Rat.num` and `Rat.den`, and less on the structure representation of `Rat`
    * Abandoning the vestigial `Rat.Nonneg` (which was replaced in Std by a new development of the order on `Rat`)
    * Renaming many `Rat` lemmas with dubious names. This creates quite a lot of conflicts with Std lemmas, whose names are themselves dubious. I am priming the relevant new mathlib names and leaving TODOs to fix the Std names.
    * Handling most of the `Rat` porting notes
    
    Reduce the diff of #11203

[33mcommit 9125a0936fd86f4bb74bebe27f0b1cd0c5a2b7cf[m
Author: Fr√©d√©ric Marbach <66742248+frederic-marbach@users.noreply.github.com>
Date:   Mon Apr 15 13:31:47 2024 +0000

    feat(Algebra/Lie): define adjoint action and its ideal image (#12106)
    
    This defines the *adjoint action* of a Lie algebra `L` on itself, when seen as an homomorphism of Lie algebras from `L` to the Lie algebra of its derivations.
    
    The adjoint action was also defined in the `Mathlib.Algebra.Lie.OfAssociative.lean` file, under the name `LieAlgebra.ad`, as the homomorphism with values in the endormophisms of `L`. We make the link between both. This design choice was discussed in [this thread](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Derivations.20on.20Lie.20algebras).
    
    We also establish elementary properties, such as the fact that the image of the adjoint action is an ideal of the derivations.
    
    This is the penultimate step towards proving that all derivations of a finite-dimensional semisimple Lie algebra are inner, a goal described in [this thread](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Derivations.20on.20Lie.20algebras).

[33mcommit b8a0f589c3ef08ae093d7d1896142e5eb05e599a[m
Author: Ruben Van de Velde <scott.morrison@gmail.com>
Date:   Mon Apr 15 12:36:55 2024 +0000

    chore: avoid id.def (adaptation for nightly-2024-03-27) (#11829)
    
    
    
    Co-authored-by: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>

[33mcommit 8a7f8422dad50783d1f66bdbb1518ee2cef788a9[m
Author: damiano <adomani@gmail.com>
Date:   Mon Apr 15 12:06:04 2024 +0000

    chore: remove remaining `cdot`s that were not `¬∑` (#12146)
    
    A simple replacement `. --> ¬∑`.
    
    See #12143 for the source of these replacements.

[33mcommit 4932e9d17a89092752b8a2d573948fa6bc2dc3db[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Mon Apr 15 10:00:28 2024 +0000

    chore(Topology/Category): make finite coproducts in `CompHaus`¬†universe polymorphic (#12138)

[33mcommit 7700a4740f42161ceed82c656748685519f96f81[m
Author: Hyeokjun Kwon <86776403+Jun2M@users.noreply.github.com>
Date:   Mon Apr 15 10:00:27 2024 +0000

    Feat(Log/Base): Adding 3 theorems related to Real.logb (#12110)

[33mcommit 91ab481b192f43c9a85fb0490c8ef22d5b2ad518[m
Author: Kim Morrison <scott@tqft.net>
Date:   Mon Apr 15 09:36:17 2024 +0000

    chore: don't run label_new_contributor CI on forks (#12145)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 8e47cfa4439202fbd43fafa7b12e699537df9e65[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Apr 15 08:19:09 2024 +0000

    chore(GroupAction/Defs): add 2 missing `to_additive` (#12141)

[33mcommit 6b1d0a880c48cb934c5d70a69fdea97edce2233a[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Mon Apr 15 08:19:08 2024 +0000

    chore: fixed typo in Algebra.Homology.HomotopyCategory (#12140)
    
    Fixes a typo in the name of a variable.

[33mcommit f09078b7832b7eed58c64b94e749ef4298592506[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Mon Apr 15 08:19:06 2024 +0000

    chore: remove more simp-related porting notes which are fixed now (#12128)
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit 5894eb3130ec37e2898337330830c4e14a14d48b[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Mon Apr 15 07:51:34 2024 +0000

    refactor(Topology): take continuous argument in `LocallyConstant.comap` (#12136)
    
    Changes the definition of `LocallyConstant.comap`¬†so that it takes an argument of the form `C(X, Y)`¬†instead of `X ‚Üí Y`. There was no example of a non-continuous argument in mathlib, and this definition generally makes proofs easier.

[33mcommit 88ce099104b4a6c8b3d803e60950709e8d0d352f[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Mon Apr 15 06:46:14 2024 +0000

    chore: substitute some `.` with `¬∑` (#12137)
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit 7eeaaffb8b9ec3690b084f6602085e4291ac9b11[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Mon Apr 15 06:46:13 2024 +0000

     chore: classify porting notes about additional necessary beta reduction (#12130)
    
    This subsumes some of the notes in #10752 and #10971.
    I'm on the fence as to whether replacing the dsimp only by beta_reduce is useful; this is easy to revert if needed.

[33mcommit 038cb5841aa125f1488310f3695dafd94f40ff09[m
Author: David Loeffler <d.loeffler.01@cantab.net>
Date:   Mon Apr 15 06:46:12 2024 +0000

    refactor(SpecialFunctions/Gaussian): shorten long pole (#12104)
    
    This splits up `Analysis/SpecialFunctions/Gaussian.lean` into three pieces, with the heaviest imports only needed in the later chunks. As only the first chunk is needed for many applications, including those on the critical path towards `NumberTheory/Cyclotomic/PID.lean`, this should improve overall build parallelism and shorten mathlib's overall compilation time.

[33mcommit 7c5b29b79559e90cd7584a6ccad2eb046a255bf1[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Mon Apr 15 06:22:43 2024 +0000

    chore: restore `simp`s that used to work (#12126)
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit 5d492760246254cdcc363f37f061b5fb10878bee[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Mon Apr 15 03:03:46 2024 +0000

    feat(Profinite): the functors from `FintypeCat` are fully faithful (#12139)
    
    (both to `LightProfinite`¬†and `Profinite`)

[33mcommit d48d30acb172e832007c8d55e5048adb1ce08e05[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Mon Apr 15 01:53:41 2024 +0000

    chore: superfluous parentheses part 2 (#12131)
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit 22092a2aaa2dc2a12f20161a54f315fafeb748f3[m
Author: Christian Merten <christian@merten.dev>
Date:   Sun Apr 14 18:26:07 2024 +0000

    chore(RingTheory/FinitePresentation): make `Algebra.FinitePresentation` a class (#12057)
    
    Makes `Algebra.FinitePresentation` a class, matching `Algebra.FiniteType`. Changes theorems to instances where possible.

[33mcommit 8a48cc6ba07c7658a81b1c39a561840e148e7ad5[m
Author: Christopher Hoskin <christopher.hoskin@gmail.com>
Date:   Sun Apr 14 14:15:01 2024 +0000

    refactor(LinearAlgebra/BilinearForm/Basic): Deprecate coercions (#12132)
    
    Following #11278 the coercions in `LinearAlgebra/BilinearForm/Basic` are no longer useful. This PR deprecates them.

[33mcommit 94e622af992f48dca6b83405e2a0624294b0a752[m
Author: Andrew Yang <the.erd.one@gmail.com>
Date:   Sun Apr 14 13:46:17 2024 +0000

    feat(RingTheory/Kaehler): The Kaehler differential module of polynomial algebras. (#11895)
    
    
    
    
    Co-authored-by: Andrew Yang <36414270+erdOne@users.noreply.github.com>

[33mcommit db53e50d9dca467dec6eb8ffea538e0b09c640bc[m
Author: David Loeffler <d.loeffler.01@cantab.net>
Date:   Sun Apr 14 12:41:16 2024 +0000

    feat(NumberTheory/ModularForms): Asymptotics of Jacobi theta functions (#12020)
    
    This is a (rather boring) technical step in developing the theory of Hurwitz zeta functions: one needs to show that certain
    sums related to Jacobi theta series decay exponentially for large `t`.

[33mcommit 9e99a83e09ac002451315c7c0c2a8618a447f991[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Sun Apr 14 10:41:27 2024 +0000

    doc: fix references to List.Pairwise in List.Sorted docs (#12123)

[33mcommit 9e512a0af2886044c8f5521c1f52ddbb69ec6b63[m
Author: Christopher Hoskin <christopher.hoskin@gmail.com>
Date:   Sun Apr 14 10:41:26 2024 +0000

    refactor(LinearAlgebra/BilinearForm/Basic): Delete infered instances (#12122)
    
    Following #11278 the instances in `LinearAlgebra/BilinearForm/Basic` can be infered without further proof, and therefore the instance statements are no longer required.

[33mcommit 3bb1d61374f5635efbfcf3aeac556b463cc67bd7[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Sun Apr 14 10:41:25 2024 +0000

    chore: remove autoImplicit from more files (#11798)
    
    and reduce its scope in a few other instances.
    Mostly in `CategoryTheory` and `Data` this time; some `Combinatorics` also.
    
    
    
    Co-authored-by: Richard Osborn <richardosborn@mac.com>

[33mcommit 97558f9c063afce992e7031f69ab9977d8406d22[m
Author: Michael Stoll <Michael.Stoll@uni-bayreuth.de>
Date:   Sun Apr 14 10:02:11 2024 +0000

    chore: make instSMulRealComplex scoped (#12080)
    
    This scopes and moves to `Complex.SMul` the instance `instSMulRealComplex`.
    Rationale: This instance is used in `Data.Complex.{Basic|Module}` to bootstrap `SMul` instances from the reals, but afterwards, instances `SMul R ‚ÑÇ` should not need to rely on that (rather be obtained via `Algebra R ‚ÑÇ`, for example). This speeds up the two mentioned files a bit (in fact, it reverts a slow-down caused by reducing the instance priority in #12070) and does not seem to have any adverse effects.
    
    I think this is a cleaner solution compared to just reducing the instance priority.
    
    See [here](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/simp.20prefers.20CharP.2Ecast_eq_zero.20over.20Nat.2Ecast_zero/near/432855625) on Zulip.

[33mcommit 60650e9049f2cf9ae720f521ef136045f72ccb3f[m
Author: Calle S√∂nne <calle.sonne@gmail.com>
Date:   Sun Apr 14 09:14:13 2024 +0000

    feat(CategoryTheory/CommSq): add basic CommSq lemmas (#12033)
    
    Add basic lemmas about CommSq:
    -  Compositions of commutative squares are commutative
    -  If the horizontal arrows of a commutative square are isomorphisms, then flipping these arrows also yields a commutative square.

[33mcommit f822da5444107417c50b3922c616d558fa0119e6[m
Author: Michael Stoll <Michael.Stoll@uni-bayreuth.de>
Date:   Sun Apr 14 08:49:17 2024 +0000

    feat(NumberTheory/SmoothNumbers): add material on numbers with prime factors in a given Finset (#12055)
    
    As a preparation for refactoring Euler products to use the new infinite products, this PR generalizes `Nat.smoothNumbers n` to `Nat.factoredNumbers s` where `s` is a `Finset` of natural numbers; this is the set of all positive natural numbers all of whose prime factors are in `s`. We correspondingly generalize the API and use the new statements to golf the proofs of the old ones. (We also eliminate a few fairly slow `convert`s and a `tauto`, so that the file should now be faster than before, even though it contains quite a few new declarations.)
    
    See [here](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Infinite.20products/near/431508883) on Zulip.

[33mcommit 1ef4afc128a22f753c5b1f46b69b54c327a38127[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sun Apr 14 07:43:04 2024 +0000

    chore(Algebra/BigOperators): delete `RingHom.map_*` lemmas (#11663)

[33mcommit 02b6c2be6c02358121a3117ca6821c5337c1aa77[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sun Apr 14 06:35:40 2024 +0000

    chore(*Set): golf (#12117)
    
    - Golf `Directed.exists_mem_subset_of_finset_subset_biUnion`
      using `induction` tactic.
    - Golf `Set.fintype`.
    - Reduce abuse of `Set Œ± = Œ± ‚Üí Prop` defeq.

[33mcommit 596d5ecae4e78212dc4066bd437d751bc6844109[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Sun Apr 14 06:35:39 2024 +0000

    chore: superfluous parentheses (#12116)
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit 79d6c97cfb2ccb1a80cae1212660d8df8956a72f[m
Author: Jz Pan <acme_pjz@hotmail.com>
Date:   Sun Apr 14 05:44:38 2024 +0000

    feat(LinearAlgebra/TensorProduct/Finiteness): add some finiteness results of tensor product (#11859)
    
    - `TensorProduct.exists_multiset`, `TensorProduct.exists_finsupp_left`,
      `TensorProduct.exists_finsupp_right`, `TensorProduct.exists_finset`:
      any element of `M ‚äó[R] N` can be written as a finite sum of pure tensors.
      See also `TensorProduct.span_tmul_eq_top`.
    
    - `TensorProduct.exists_finite_submodule_left_of_finite`,
      `TensorProduct.exists_finite_submodule_right_of_finite`,
      `TensorProduct.exists_finite_submodule_of_finite` and 3 more:
      any finite subset of `M ‚äó[R] N` is contained in `M' ‚äó[R] N'`
      for some finitely generated submodules `M'` and `N'` of `M` and `N`, respectively.
      Each of these 3 functions has 2 variants.

[33mcommit 9670eb9f96627fb99e88fc830855458702e520db[m
Author: FrederickPu <wieser.eric@gmail.com>
Date:   Sat Apr 13 20:23:25 2024 +0000

    feat: Inverses for TrivSqZeroExt (#12075)
    
    
    Defined inverses for TrivEqExtZero in a way that is consitent with DualNumbers.
    
    Note that $(a + b\epsilon)^{-1} = \frac{1(a - b\epsilon)}{(a + b\epsilon)(a - b\epsilon)} = \frac{a - b\epsilon}{a^2}$
    Which becomes $\frac{1}{a} - \frac{b}{a^2}\epsilon$.
    We want to be able have left multiplicative inverses $x x^{-1} = 0$
    So we write $\frac{b}{a^2} = a^{-1} \cdot b \cdot a^{-1}$
    
    Also included a proof that $x \cdot x^{-1} = 1$ when $\text{fst } x \neq 0$
    
    
    
    Co-authored-by: Frederick Pu <frederick.pu@mail.utoronto.ca>

[33mcommit 7e8cd2b731e614d1e11b41d8709000cef3cb2235[m
Author: Hongyu Ouyang <96765450+casavaca@users.noreply.github.com>
Date:   Sat Apr 13 19:32:31 2024 +0000

    feat(Data/Nat/Prime): add 2 theorems (#11620)

[33mcommit a0cb217ee24b9464c07a5a980f79866957366444[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Sat Apr 13 18:06:43 2024 +0000

    fix(Algebra/Bounds): generalize index type to sort (#12113)

[33mcommit 7a71e528a81fd9026ab16a1b01e0eb8d171521bb[m
Author: Antoine Chambert-Loir <antoine.chambert-loir@u-paris.fr>
Date:   Sat Apr 13 12:00:43 2024 +0000

    Feat (GroupTheory/GroupAction/Hom/Pointwise) : generalize smul set lemmas to group actions (#12023)
    
    This is a generalization of `Mathlib/Algebra/Module/LinearMap/Pointwise.lean` from `LinearMapClass` to `MulActionHomClass`.
    
    The preexisting lemmas are generalized.
    
    - `image_smul_set‚Çõ‚Çó` : under a `œÉ`-equivariant map,
    one has `h '' (c ‚Ä¢ s) = (œÉ c) ‚Ä¢ h '' s`.
    
    - `preimage_smul_set‚Çõ‚Çó'` is a general version of the equality `h ‚Åª¬π' (œÉ c ‚Ä¢ s) = c ‚Ä¢ h‚Åª¬π' s`. It requires that `c` acts surjectively and `œÉ c` acts injectively.
    It is provided with specific versions:
    - `preimage_smul_set‚Çõ‚Çó_of_units` requires that `c` and `œÉ c` are units
    - `MonoidHom.preimage_smul_set‚Çõ‚Çó` requires that `œÉ` is a `MonoidHom` and `c` is a unit
    - `MonoidHomClass.preimage_smul_set‚Çõ‚Çó` requires that `œÉ` belongs to a `MonoidHomClass`and that `c` is a unit
    - `Group.preimage_smul_set‚Çõ‚Çó` requires that the types of `c` and `œÉ c` are groups
    
    - `image_smul_set`, `preimage_smul_set` and `Group.preimage_smul_set` are
    the variants when `œÉ` is the identity.

[33mcommit 8640948c316d38dd0906770d71bf2ac6bd6281b7[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Sat Apr 13 10:35:01 2024 +0000

    feat: add notation for Real.sqrt (#12056)
    
    This adds the notation `‚àör` for `Real.sqrt r`. The precedence is such that `‚àöx‚Åª¬π` is parsed as `‚àö(x‚Åª¬π)`; not because this is particularly desirable, but because it's the default and the choice doesn't really matter.
    
    This is extracted from #7907, which adds a more general nth root typeclass.
    The idea is to perform all the boring substitutions downstream quickly, so that we can play around with custom elaborators with a much slower rate of code-rot.
    This PR also won't rot as quickly, as it does not forbid writing `x.sqrt` as that PR does.
    
    While perhaps claiming `‚àö` for `Real.sqrt` is greedy; it:
    * Is far more common thatn `NNReal.sqrt` and `Nat.sqrt`
    * Is far more interesting to mathlib than `sqrt` on `Float`
    * Can be overloaded anyway, so this does not prevent downstream code using the notation on their own types.
    * Will be replaced by a more general typeclass in a future PR.
    
    [Zulip](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/.60Sqrt.60.20notation.20typeclass/near/400086502)
    
    
    
    Co-authored-by: Yury G. Kudryashov <urkud@urkud.name>

[33mcommit 51eea185feb13322c3fc0abca64fb45bb2e701a7[m
Author: Floris van Doorn <fpvdoorn@gmail.com>
Date:   Sat Apr 13 10:35:00 2024 +0000

    feat: generalize integration by parts (#11886)
    
    Give versions with weaker conditions for `intervalIntegrable.integral_deriv_mul_eq_sub`, `intervalIntegrable.integral_mul_deriv_eq_deriv_mul` and `fourierCoeffOn_of_hasDerivAt`.

[33mcommit 4d302c5399229f8028ec87169a1266e6897b3bd9[m
Author: Sina Hazratpour <sinahazratpour@gmail.com>
Date:   Sat Apr 13 10:09:53 2024 +0000

    adding `Functor.sum'`, dual to `Functor.prod'`. (#12073)
    
    We add `Functor.sum'` a variant of `Functor.sum`. This situation is dual to [docs#CategoryTheory.Functor.prod'](https://leanprover-community.github.io/mathlib4_docs/find/?pattern=CategoryTheory.Functor.prod%27#doc).
    
    We also add `inl_sum'` and `inr_sum'` which prove that the sum functor `F.sum' G` precomposed with the left (resp. right) inclusion functor is isomorphic to `F` (resp. `G`).

[33mcommit fef3b89b52627122442d70bee85ff4bab1766b19[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Sat Apr 13 09:22:15 2024 +0000

    chore: resolve some simp-related porting notes (#12074)
    
    In all cases, the original proof works now. I presume this is due to simp changes in Lean 4.7, but haven't verified.

[33mcommit c411fe2ecebdd6e1b30a0b28987f323f64671920[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Sat Apr 13 04:55:28 2024 +0000

    chore(Data/Set/Intervals/OrdConnectedComponent): resolve porting note about lift not being ‚Ä¶ (#12102)
    
    ‚Ä¶implemented
    
    By now, it has been implemented; use it.

[33mcommit 33c3101f26fbf0c5a434fbf705c55137e9bd25fd[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Sat Apr 13 04:55:27 2024 +0000

    chore: remove porting notes about redundant binder updates (#12101)
    
    All these are about some code (now commented out) which performs a (now) redundant binder information update. I don't see how this is useful information going forward, hence propose simply deleting them.

[33mcommit c5b5490cda1df99fb838078a4bded0a4594287ba[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Sat Apr 13 04:55:26 2024 +0000

    chore: classify porting notes referring to missing linters (#12098)
    
    Reference the newly created issues #12094 and #12096, as well as the pre-existing #5171.
    Change all references to #10927 to #5171.
    Some of these changes were not labelled as "porting note"; change this for good measure.

[33mcommit 203c05924331080a300a9f442db4972a603bf410[m
Author: Andrew Yang <36414270+erdOne@users.noreply.github.com>
Date:   Sat Apr 13 04:55:25 2024 +0000

    chore(RingTheory/Ideal/Cotangent): Restore lemmasOnly config on `Ideal.toCotangent`. (#12088)

[33mcommit 667acd1e51e9d15f1a717b03e86b89e184f1a8d1[m
Author: Michael Stoll <Michael.Stoll@uni-bayreuth.de>
Date:   Sat Apr 13 04:55:24 2024 +0000

    chore(Algebra/Ring/Int): add `CharZero` instance for `Int` (#12060)
    
    This adds a shortcut instance `CharZero ‚Ñ§` in the file `Algebra.Ring.Int` (which contains a few other shortcut instances for `‚Ñ§` already). The hope is that this will result in a speed-up.
    
    Note: This requires adding `import Mathlib.Algebra.CharZero.Defs`.
    
    See [here](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/simp.20prefers.20CharP.2Ecast_eq_zero.20over.20Nat.2Ecast_zero/near/431803537) on Zulip.
    
    There is a positive effect (-22.5 s) on type class inference, but no significant change overall. Still, I think it makes sense to have it.

[33mcommit 38a23fcc4cb6cd0da06319f951fab5e0c9f6b885[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Sat Apr 13 04:26:23 2024 +0000

    chore(RingTheory/IsTensorProduct): resolve porting note about simps! (#12092)
    
    Uncomment the simps configuration (which has to become simps!) and delete the generated lemma which was added manually. I verified that both are identical.

[33mcommit cd0e7a0dfa70312fa9af932331e411c8bc34387c[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Fri Apr 12 23:11:27 2024 +0000

    chore(Data/Finset/PiInduction): remove porting note about `clear_value` (#12100)
    
    This tactic now exists.

[33mcommit 72721e375679fd7c7e0647775c028bcb9b91dedf[m
Author: damiano <adomani@gmail.com>
Date:   Fri Apr 12 19:06:06 2024 +0000

    fix: mdata in abel (#12084)
    
    PR inspired by "automated bugs" (#12054).
    
    [Zulip thread](https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/automated.20bugs/near/432861117)

[33mcommit b0aea6152df43fd6c825b82890c858f00c21a051[m
Author: Andrew Yang <the.erd.one@gmail.com>
Date:   Fri Apr 12 15:16:14 2024 +0000

    feat: Generalize corollaries of rank-nullity theorem. (#9626)
    
    Added a class `HasRankNullity` consisting of the rings that satisfy the rank-nullity theorem.
    Generalized the corollaries of the rank-nullity theorem from division rings to rings satisfying the class,
    and moved them into a new file `LinearAlgebra.Dimension.RankNullity`.
    
    
    
    Co-authored-by: Andrew Yang <36414270+erdOne@users.noreply.github.com>

[33mcommit 0b28fa44e053bdeca64f7e35a54bbaf7cea29674[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Fri Apr 12 14:33:26 2024 +0000

    feat: bijectivity criteria for continuous linear maps (#12027)
    
    This establishes some common bijectivity criteria (antilipschitz and dense range) for continuous (semi)linear maps between Banach spaces.

[33mcommit 65b7affce98e31ac7245e66242eacb32bf92fa73[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Fri Apr 12 14:33:25 2024 +0000

    chore(CategoryTheory): move Full, Faithful, EssSurj, IsEquivalence and ReflectsIsomorphisms to the Functor namespace (#11985)
    
    These notions on functors are now `Functor.Full`, `Functor.Faithful`, `Functor.EssSurj`, `Functor.IsEquivalence`, `Functor.ReflectsIsomorphisms`. Deprecated aliases are introduced for the previous names.

[33mcommit eb0a213d6b4f8faf4e234f9f1d4e13bbd694629f[m
Author: Adam Topaz <github@adamtopaz.com>
Date:   Fri Apr 12 14:33:23 2024 +0000

    feat(AlgebraicGeometry/OpenImmersion): Affine open covers, and refinements of open covers by affine ones (#11947)

[33mcommit 3469775e3c80ad487f6d6c790951bc1ee115cb75[m
Author: Kyle Miller <kmill31415@gmail.com>
Date:   Fri Apr 12 13:24:31 2024 +0000

    fix: make sure tactics in DefEqTransformations do not reorder hypotheses (#12077)
    
    Reported by Damiano Testa [on Zulip](https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/.60unfold_let.60.20weirdness/near/432757494).
    
    The upstream function `Lean.MVarId.changeLocalDecl` should probably be changed to preserve hypothesis order, but for now we add the `Lean.MVarId.changeLocalDecl'` variant.

[33mcommit b222407684db7e876236aeba519d7127397474da[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Fri Apr 12 12:56:25 2024 +0000

    ci: don't quote the branch name twice (#12085)

[33mcommit 55659511c4da9e65833596657350420712e1b9b1[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Fri Apr 12 09:53:20 2024 +0000

    ci: correctly look at all the branches (#12081)

[33mcommit 6888b63480a271e3ebaf58f578ff8eb2e033e058[m
Author: Anne Baanen <vierkantor@vierkantor.com>
Date:   Fri Apr 12 09:10:21 2024 +0000

    chore: move `FiniteDimensional.trans` higher up the import hierarchy (#12079)
    
    @YaelDillies pointed out that the import `Data.Complex.Module ‚Üí FieldTheory.Tower` brings with it too many things. The only declaration from `FieldTheory.Tower` needed for `Data.Complex.Module` is `FiniteDimensional.trans`, which we can easily move up the import hierarchy (14 imports higher, in fact). So this means we can cut the long pole of Mathlib by up to 13 files.
    
    Specific Zulip discussion starts here: https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/The.20long.20pole.20in.20mathlib/near/432796670

[33mcommit 66924a04a4ee70c2a56f3c7b74a11151d95f6ed0[m
Author: Fr√©d√©ric Marbach <66742248+frederic-marbach@users.noreply.github.com>
Date:   Fri Apr 12 08:07:05 2024 +0000

    refactor(LinearAlgebra): replace Submodule.restrictBilinear by BilinForm.restrict (#12045)
    
    As discussed in [this thread](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Next.20steps.20for.20BilinForm), there were 3 different definitions for the restriction of a bilinear form to a subspace. This PR deletes the definition `Submodule.restrictBilinear`, and replaces all its occurrences by the `LinearMap.BilinForm.restrict` one.

[33mcommit 0129c03d472122942842231fbebc417900ceaaec[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Fri Apr 12 03:02:46 2024 +0000

    feat: construction of a presheaf of modules from a family of modules over various rings (#6845)
    
    This PR provides constructors for presheaves of modules over a presheaf of rings `R` using families of (bundled or unbundled) modules over `R.obj X` for all `X`.
    
    
    
    Co-authored-by: Christian Merten <christian@merten.dev>
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit a743f61ca4a6f08f959f8849d21555e59d1c72ae[m
Author: Michael Stoll <Michael.Stoll@uni-bayreuth.de>
Date:   Fri Apr 12 00:56:34 2024 +0000

    perf: reduce instance priority of `Complex.instSMulRealComplex` (#12070)
    
    See [here](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/simp.20prefers.20CharP.2Ecast_eq_zero.20over.20Nat.2Ecast_zero/near/432760180) on Zulip.
    
    We reduce the instance priority of `Complex.instSMulRealComplex` to 90. This leads to a very significant speed-up in two Modular Forms files (and still noticeable speed-ups in some other files).

[33mcommit 5dd5b451e8a2d630886762f6209782a4f37ccbdb[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Thu Apr 11 23:08:42 2024 +0000

    ci: look at all the branches (#12072)
    
    By default, github only returns the first thirty branches from this API, notably excluding any that we're looking for.

[33mcommit 488eafd354dce5442d01e9dbe3f763060502aedb[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Thu Apr 11 22:31:21 2024 +0000

    chore(Geometry): remove a few porting notes (#12061)
    
    In all cases, the original proof fixed itself.

[33mcommit 8856dfd0bb72ed20453df400459ce207e399051f[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Thu Apr 11 20:47:54 2024 +0000

    chore: tidy various files (#12042)

[33mcommit 1e53d4f04b2981645e5d05c956ee8289ee1cb6f6[m
Author: Mario Carneiro <mcarneir@andrew.cmu.edu>
Date:   Thu Apr 11 19:59:19 2024 +0000

    chore: `exact by decide` -> `decide` (#12067)
    
    
    
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>

[33mcommit aa0ec8aa2a35810d8fbc0296ca6546565a13eb96[m
Author: Jz Pan <acme_pjz@hotmail.com>
Date:   Thu Apr 11 19:11:26 2024 +0000

    feat: add `Subalgebra.finite_(bot|sup)` (#12025)
    
    ... and deprecated `Subalgebra.finiteDimensional_(bot|sup)`

[33mcommit 30582ae1fb68b7bb8b45665b77b7679e0badab4e[m[33m ([m[1;31morigin/dual_geo[m[33m)[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Thu Apr 11 15:03:02 2024 +0000

    ci: don't parse lean-toolchain twice (#12064)
    
    For some reason that is not clear to me, the current code ends up with the empty string for the version. Easier than figuring out why that is, is using the environment variable that we'd set up earlier in this job.

[33mcommit f63c542d669e79063687da49124a0f27b04b03a6[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Thu Apr 11 15:03:01 2024 +0000

    ci: update actions/checkout to v4 (#12062)
    
    This moves us off node 16, which is deprecated (https://github.blog/changelog/2023-09-22-github-actions-transitioning-from-node-16-to-node-20/).

[33mcommit b3857f063130c874c079dba7948d97345b71aef3[m
Author: damiano <adomani@gmail.com>
Date:   Thu Apr 11 15:03:00 2024 +0000

    chore: remove some porting notes in sphere (#12059)
    
    Found after examining the bug fixes in #12054, although these improvements are unrelated to the test PR.

[33mcommit b5824f9347c242d34dc59b40dc050fffb4a49b64[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Thu Apr 11 14:39:08 2024 +0000

    ci: correct the speed center URL (#12066)
    
    Per @nomeata.

[33mcommit 70601d412be8bbff907317f9ddf2d5a8e28257ba[m
Author: Kevin Buzzard <k.buzzard@imperial.ac.uk>
Date:   Thu Apr 11 13:28:24 2024 +0000

    chore: add @kbuzzard as maintainer in README.md (#12063)

[33mcommit 868a04f87c815d29e413d742ee778e8e6189b63a[m
Author: Christian Merten <christian@merten.dev>
Date:   Thu Apr 11 09:50:36 2024 +0000

    feat(Limits/TypesFiltered): remove existence of colimit assumption (#12034)
    
    Removes a `HasColimit F` assumption in recognition of filtered colimits in category of types.
    
    
    
    Co-authored-by: Christian Merten <136261474+chrisflav@users.noreply.github.com>

[33mcommit 37c70acc03dd3629ec3ea96153a6adffc160336b[m
Author: Anne Baanen <vierkantor@vierkantor.com>
Date:   Thu Apr 11 07:48:37 2024 +0000

    refactor(RingTheory/IntegrallyClosed): generalize to `IsIntegrallyClosedIn` (#7857)
    
    This refactor adds a new definition `IsIntegrallyClosedIn R A` equal to `IsIntegralClosure R A A`, and redefines `IsIntegrallyClosed R` to equal `IsIntegrallyClosed R (FractionRing A)`. This should make it possible and convenient to generalize away from the fraction fields.
    
    This also more closely approximates the conventions of the Stacks project.
    
    This is a second attempt at the refactor, after #7116 which was much more messy.

[33mcommit 9ebc624274b89929620d773a6bca0de2a794d02f[m
Author: Tom√°≈° Jakl <jaklt@kam.mff.cuni.cz>
Date:   Thu Apr 11 03:01:56 2024 +0000

    Typo correction in CantorSet.lean (#12047)
    
    Correcting a typo in a doc-string of CantorSet.lean where the function description did not match the formal specification.

[33mcommit 678a5c798796740636146b21a55825b9df7e2791[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Thu Apr 11 00:22:07 2024 +0000

    doc: convert many comments into doc comments (#11940)
    
    All of these changes appear to be oversights to me.

[33mcommit 1fa845d9750f64230dac9fae47c2bdf7fb255fac[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Wed Apr 10 23:13:13 2024 +0000

    doc(Order/Heyting/Basic): convert comments to doc comments (#11941)
    
    And move one section comment above the section.
    I'm open to deleting these comments instead, if they are considered sufficiently low-value.

[33mcommit bf1fcf395bad9fc870f5d2fc5c4528de1b19877a[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Wed Apr 10 21:31:18 2024 +0000

    ci: update liskin/gh-problem-matcher-wrap to v3 (#12029)
    
    This moves us off node 16, which is deprecated (https://github.blog/changelog/2023-09-22-github-actions-transitioning-from-node-16-to-node-20/).

[33mcommit 58eba7809ac6ea02366cbdab90312dfa29404bda[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Apr 10 20:53:40 2024 +0000

    feat(Multilinear/Topology): define topology on `ContinuousMultilinearMap`s (#10777)
    
    Define `UniformSpace` instance that doesn't depend on the norm, replace uniformity in the `SeminormedAddCommGroup` instance.

[33mcommit 04893a0980b3501a8d9ed5d12e2fdbb007c3d0bd[m
Author: Joachim Breitner <mail@joachim-breitner.de>
Date:   Wed Apr 10 14:09:41 2024 +0000

    ci: nightly_detect_failure: quote secrets.SPEED (#12038)
    
    see https://leanprover.zulipchat.com/#narrow/stream/428973-nightly-testing/topic/Status.20update.20bot

[33mcommit 80ee2df08dc32eedf2be638abbc564d1d0b0fbea[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Wed Apr 10 13:42:45 2024 +0000

    ci: don't use 'return' in github action (#12043)
    
    This causes an error:
    
    line 3: return: can only `return' from a function or sourced script
    
    which means we do report a failure as expected, but in a roundabout way.

[33mcommit 9b4cab5703b3d3d88e63c26f439a4231b7bbd276[m
Author: judithludwig <judith.ludwig@iwr.uni-heidelberg.de>
Date:   Wed Apr 10 12:08:19 2024 +0000

    chore(RingTheory/Unramified): move differential properties (#12030)

[33mcommit 147c3d0e34783a6f156cccc8057c6895e55eb1af[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Wed Apr 10 10:42:19 2024 +0000

    feat: ample sets in real vector spaces (#11344)
    
    From the sphere eversion project.

[33mcommit 510ed4ef99f9770e95e914d2c7c83ea522da2f6a[m
Author: Ira Fesefeldt <fesefeldt@cs.rwth-aachen.de>
Date:   Wed Apr 10 09:29:52 2024 +0000

    feat: Ordinal Approximants of the least/greatest fixed point in a complete lattice (#8996)
    
    Define ordinal approximants for the least/greatest fixed points of a monotone function in a complete lattice. It is sometimes also called the constructive Knaster-Tarski Theorem, first introduced by Cousot & Cousot in 1979. This implementation is however not constructive.
    
    This has a variety of applications in non standard logics and proofs such as quantitative logics or cyclic proofs.
    
    
    
    Co-authored-by: Ira Fesefeldt <public@feuervogel.me>

[33mcommit 45d128c7aa87ab920877b9844a7076efbb0be8fc[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Apr 10 06:01:55 2024 +0000

    chore(List/Basic): golf some proofs (#11996)

[33mcommit d6990261f6e697fc15305a7b21ecf5b7e896dc33[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Wed Apr 10 06:01:54 2024 +0000

    doc(Topology,Analysis): fix over-zealous replacement true/false -> True/False (#11994)
    
    in doc comments.
    These are terms of type bool, hence should be (Bool.)true/false.
    
    And correct a typo also caused in the same PR.

[33mcommit 564995171e75499d1f14d2bdfbc518d93ce3e02e[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Wed Apr 10 06:01:53 2024 +0000

    chore: rename five lemmas involving mathlib3 names (#11934)

[33mcommit cbacc654281a03c6041d8e75e72364024f4052e6[m
Author: Scott Morrison <scott@tqft.net>
Date:   Wed Apr 10 06:01:52 2024 +0000

    chore: future-proof proofs in Category/Ring/Limits (#11839)
    
    These proofs will become slow after https://github.com/leanprover/lean4/pull/3807, but with these changes there is no regression. ü§∑‚Äç‚ôÄÔ∏è
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 6201c94254e40367395d82b9129f4bfc7d2f8650[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Wed Apr 10 06:01:51 2024 +0000

     chore(Data/Set/Function): add sections to group related material (#11675)
    
    - delay on open statement until actually needed
    - note that two lemmas seem mis-placed
    - use some namespaces

[33mcommit 2bce71f5ebe3522ba5b1919817e7d177fcaa56b2[m
Author: David Renshaw <dwrenshaw@gmail.com>
Date:   Wed Apr 10 05:24:40 2024 +0000

    chore: simplify proof of IsPiSystem.comap (#11052)
    
    Uses `Set.not_nonempty_iff_eq_empty` to shorten the proof of `IsPiSystem.comap`.

[33mcommit 09ed129d821f9a15ce8e4bd7dff82ea3bc2c5b98[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Tue Apr 9 23:35:59 2024 +0000

    chore(CategoryTheory): remove some unnecessary lemmas about final/initial functors (#12024)

[33mcommit 3fe6813085fbead640b065f407acba54da09decd[m
Author: Kevin Buzzard <k.buzzard@imperial.ac.uk>
Date:   Tue Apr 9 23:09:34 2024 +0000

    perf(Algebra.Category.ModuleCat.ChangeOfRings): some speedups (#11545)
    
    Squeezing dsimps/aesop_cats etc.

[33mcommit 65cbbe7f224992b30fab20ec9ec901dff06d2646[m
Author: Matthew Robert Ballard <matt@mrb.email>
Date:   Tue Apr 9 21:45:27 2024 +0000

    chore(Algebra.Group.UniqueProds): remove private instance (#12037)
    
    This is an `inferInstance`. Removing it doesn't seem to cause issues. Currently, it causes elaboration issues [Zulip](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Odd.20behaviour.20with.20inferring.20instances.2E).

[33mcommit 6144777798cfba2df6d195fb8a7985d8520c78d4[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Tue Apr 9 20:56:14 2024 +0000

    feat: add induction principle for `elementalStarAlgebra` (#12039)

[33mcommit b5b45d35e4ac2187c73eb85bd082d972a9982404[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Tue Apr 9 19:25:47 2024 +0000

    feat: add the Loewner partial order on continuous linear maps on a Hilbert space (#12026)
    
    The (Loewner) partial order on continuous linear maps on a Hilbert space determined by `f ‚â§ g` if and only if `g - f` is a positive linear map (in the sense of `ContinuousLinearMap.IsPositive`). With this partial order, the continuous linear maps form a `StarOrderedRing`.

[33mcommit e8433a6b8e7980bfaaf9b34513b77da2af14995a[m
Author: Adam Topaz <github@adamtopaz.com>
Date:   Tue Apr 9 08:07:34 2024 +0000

    feat: big Zariski is subcanonical (#12028)

[33mcommit aee79f6186f8145ef194a9d2d992ac9b718c3bf1[m
Author: Christopher Hoskin <christopher.hoskin@gmail.com>
Date:   Tue Apr 9 06:29:53 2024 +0000

    refactor(LinearAlgebra/BilinForm): Remove `structure BilinForm` from Mathlib, migrate all of `_root_.BilinForm` to `LinearMap.BilinForm` (#11278)
    
    Remove `structure BilinForm` from `LinearAlgebra/BilinearForm/Basic` and migrate all of `_root_.BilinForm` to `LinearMap.BilinForm`
    
    Closes: #10553
    
    This isn't the end of the story, as there's still a lot of overlap between `LinearAlgebra/BilinearForm` and `LinearAlgebra/SesquilinearForm` but that can be sorted out in subsequent PRs.
    
    Supersedes:
    
    - #11057
    - #11032
    - #10432
    - #10422
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>
    Co-authored-by: Christopher Hoskin <christopher.hoskin@overleaf.com>
    Co-authored-by: Christopher Hoskin <mans0954@users.noreply.github.com>
    Co-authored-by: Vierkantor <vierkantor@vierkantor.com>

[33mcommit 529959727564e086f5f501b98a5193660f1cc0cf[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Tue Apr 9 03:53:46 2024 +0000

    fix: add missing withOverApps (#12022)
    
    This fixes the delaborators for sums, products, infimums, and supremums of pi types and matrices.
    
    Also adds a missing `whenPPOption getPPNotation` to `Prefunctor.obj`.
    
    [Zulip thread](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/delaborator.20for.20Finset.2Esun.20does.20not.20trigger/near/432068318).

[33mcommit 76ab9dafe1312f4524e48f1333f307e479a4278f[m
Author: Fr√©d√©ric Marbach <66742248+frederic-marbach@users.noreply.github.com>
Date:   Mon Apr 8 23:17:59 2024 +0000

    feat(Algebra/Lie): prove that IsKilling transfers by isomorphisms (#12008)
    
    This proves `isKilling_of_equiv`, which states that if a Lie algebra is isomorphic to a Killing Lie algebra, then it is Killing too.
    
    This is a step towards the proof that all derivations over a finite dimensional semisimple Lie algebra are inner (see [this thread](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Derivations.20on.20Lie.20algebras)). Indeed, the proof that I have formalized relies on the fact that such a Lie algebra `L` is isomorphic to `ad(L)`, from which I want to infer that `ad(L)` is Killing.

[33mcommit 258fc2beeac592c9094694f078160fe1d528b598[m
Author: JonBannon <jbannon@siena.edu>
Date:   Mon Apr 8 22:05:32 2024 +0000

    feat: add `CoeFun` Instance for `PiLp` (#11943)
    
    This instance should make things easier to read and avoid defeq abuse. That is, given a term `x : PiLp p Œ±` (or for instance `x : EuclideanSpace ùïú n`), we can ensure that Lean interprets this is a function by writing `‚áëx`. This shouldn't be a `FunLike` instance because then the coercion `‚áë` would get unfolded to `FunLike.coe` instead of `WithLp.equiv`.

[33mcommit 34ebc9e9722bbc5e03894c30a354de8b68a98b92[m
Author: Mitchell Lee <trivial171@gmail.com>
Date:   Mon Apr 8 21:39:22 2024 +0000

    doc(Topology/Algebra/InfiniteSum/NatInt): mention products  (#12019)

[33mcommit 69bf34c214a5aae78d3119d36620103141f12e10[m
Author: Antoine Chambert-Loir <antoine.chambert-loir@u-paris.fr>
Date:   Mon Apr 8 20:05:40 2024 +0000

    feat(Mathlib/LinearAlgebra/DirectSum/Finsupp): tensor products of finsupp sums (#11635)
    
    ## Modules
    
    * `TensorProduct.finsuppLeft`, the tensor product of `Œπ ‚Üí‚ÇÄ M` and `N` is linearly equivalent to `Œπ ‚Üí‚ÇÄ M ‚äó[R] N`
    
    * `TensorProduct.finsuppScalarLeft`, the tensor product of `Œπ ‚Üí‚ÇÄ R` and `N` is linearly equivalent to `Œπ ‚Üí‚ÇÄ N`
    
    * `TensorProduct.finsuppRight`, the tensor product of `M` and `Œπ ‚Üí‚ÇÄ N` is linearly equivalent to `Œπ ‚Üí‚ÇÄ M ‚äó[R] N`
    
    * `TensorProduct.finsuppLeft'`, if `M` is an `S`-module, then the tensor product of `Œπ ‚Üí‚ÇÄ M` and `N` is `S`-linearly equivalent to `Œπ ‚Üí‚ÇÄ M ‚äó[R] N`
    
    
    This is the first part of PR #10824 which contains three applications of these functions to monoid algebras, polynomials and multivariate polynomials.
    
    It has been split because this part is reasonably sound, while the three other files are more like propositions.

[33mcommit bec07a6b65f8334997cc186cede83b6eab8fabec[m
Author: JanaGoeken <139259711+JanaGoeken@users.noreply.github.com>
Date:   Mon Apr 8 19:22:21 2024 +0000

    feat: Definition and Basic Properties of the Ternary Cantor Set (#11761)
    
    The group of Artur Szafarczyk, Suraj Krishna M S, JB Stiegler, Isabelle Dubois, Tom√°≈° Jakl, Lorenzo Zanichelli, Alina Yan, Emilie Uthaiwat, and I worked on a project of formalizing the ternary cantor set in the course of the LFTCM2024 workshop under the guidance of Filippo A. E. Nuccio.
    
    
    
    Co-authored-by: JanaGoeken <goeken@uni-bremen.de>
    Co-authored-by: Tom√°≈° Jakl <58531+jaklt@users.noreply.github.com>
    Co-authored-by: Tomas Jakl <jaklt@kam.mff.cuni.cz>
    Co-authored-by: Jireh Loreaux <loreaujy@gmail.com>

[33mcommit d991fe8f8093e7e364d2f14a45ca2ba10de17ea9[m
Author: Christian Merten <christian@merten.dev>
Date:   Mon Apr 8 18:56:11 2024 +0000

    chore(RingTheory/Etale): split in multiple folders and files (#12017)
    
    Splits `RingTheory/Etale.lean` into 3 new separate folders for √©tale (resp. unramified, resp. smooth) morphisms.

[33mcommit 8596db69580cc5f3abfaab7eaf31f9a3f2276f63[m
Author: Lucas Whitfield <lucaswhitfield@hotmail.com>
Date:   Mon Apr 8 18:06:39 2024 +0000

    feat(RingTheory/Noetherian): characterise nilpotent endomorphisms of finitely-generated modules (#11926)

[33mcommit 03e3005aa85bda908a1ffbad2df637cc8c5f5e41[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Mon Apr 8 16:29:32 2024 +0000

    feat: generalize `boundedFilterSubalgebra` (#10519)
    
    This previously only worked for normed fields, now it works for seminormed algebras.
    There is no particular motivation for this beyond seeing where `NormedSpace` is too strong.

[33mcommit d8c86746655a2bdfdf820fde46ca6cf907425074[m
Author: Thomas Browning <tb65536@uw.edu>
Date:   Mon Apr 8 15:44:27 2024 +0000

    refactor: Move `AddCircle.toCircle` to earlier file (#12000)
    
    This PR moves `AddCircle.toCircle` to the earlier file `Analysis/SpecialFunctions/Complex/Circle` since `AddCircle.toCircle` only depends on `periodic_expMapCircle` and not the heavy imports of `Analysis/Fourier/AddCircle`.

[33mcommit 372a08fe957604545d193e8d30fa741092037209[m
Author: David Loeffler <d.loeffler.01@cantab.net>
Date:   Mon Apr 8 14:57:39 2024 +0000

    feat(Analysis/Convex/Deriv): convex implies monotone deriv (#11602)
    
    The derivative of a convex function is monotone (variations on a theme)

[33mcommit 3576301e0de03843a33e1e37dad56455be96f473[m
Author: David Loeffler <d.loeffler.01@cantab.net>
Date:   Mon Apr 8 13:15:50 2024 +0000

    feat(ModularForms/JacobiTheta): derivative of theta function (#11824)
    
    This is a rewrite of `JacobiTheta/TwoVariable.lean`, adding a number of new results needed for Hurwitz and Dirichlet L-series.
    
    The main addition is developing the theory of the `z`-derivative of the theta function, as an object of study in its own right (functional equations, periodicity, holomorphy etc) ‚Äì¬†this is needed to prove analytic continuation + functional equations for odd Dirichlet characters.
    
    We also add a number of new results about the existing `jacobiTheta2` function:
    - converses of all the convergence statements (showing the series are *never* convergent if tau is outside the upper half-plane), which allows hypotheses to be removed from several results further downstream
    - differentiability in both variables jointly, not just each variable separately as before.

[33mcommit b8fc37d66a41ca7332b8bd15b3e5daf94353c0ca[m
Author: R√©my Degenne <Remydegenne@gmail.com>
Date:   Mon Apr 8 12:14:32 2024 +0000

    feat(MeasureTheory): add singularPart and rnDeriv lemmas (#11883)
    
    Also golf and move `rnDeriv_restrict`.

[33mcommit 6212c09c55e060d3fb789ec219cd524979bdb352[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Mon Apr 8 11:30:09 2024 +0000

    refactor: generalize instances of the continuous functional calculus (#11944)
    
    This refactors instances of the continuous functional calculus slightly. In particular, the derived instances for `IsSelfAdjoint` and `0 ‚â§ ¬∑` will now trigger automatically once the type class conditions are satisfied, and these are generic, not specific to C‚ãÜ-algebras. For nonnegative elements, this utilizes the new type class `NonnegSpectrumClass`.
    
    In addition, we show that the restricted continuous functional calculi are equal to their non-restricted counterparts.

[33mcommit 029ba7606b2856f16ad0b3324f9ec786cf11ec0c[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Mon Apr 8 10:17:56 2024 +0000

    feat: adjust priorities of real-to-complex instances (#11980)
    
    See https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/very.20slow.20instance.20synthesis/near/431682092. With the change,
    ```lean
    import Mathlib
    
    set_option trace.profiler true in
    noncomputable example : FiniteDimensional ‚Ñù (‚ÑÇ √ó ‚ÑÇ ‚ÜíL[‚ÑÇ] ‚ÑÇ) := by
      infer_instance
    ```
    goes down from 3.7s to 1.0s on my computer.

[33mcommit 7b7bbd7381c5445de85b93339023d25bf6180931[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Mon Apr 8 10:17:55 2024 +0000

    chore: remove more `bex` and `ball` from lemma names (#11615)
    
    Follow-up to #10816.
    
    Remaining places containing such lemmas are
    - `Option.bex_ne_none` and `Option.ball_ne_none`: defined in Lean core
    - `Nat.decidableBallLT` and `Nat.decidableBallLE`: defined in Lean core
    - `bef_def` is still used in a number of places and could be renamed
    - `BAll.imp_{left,right}`, `BEx.imp_{left,right}`, `BEx.intro` and `BEx.elim`
    
    I only audited the first ~150 lemmas mentioning "ball"; too many lemmas named after Metric.ball/openBall/closedBall.
    
    
    
    Co-authored-by: Ya√´l Dillies <yael.dillies@gmail.com>

[33mcommit cb4b5056939d4786d828b3d35eca98eecd50fe2e[m
Author: Moritz Doll <moritz.doll@googlemail.com>
Date:   Mon Apr 8 10:17:54 2024 +0000

    feat(Topology/Algebra/Module/StrongTopology): add monotonicity lemmas (#11600)

[33mcommit b27ccccb224259df5870195765eb67276bb0fa7d[m
Author: Scott Morrison <scott@tqft.net>
Date:   Mon Apr 8 09:07:17 2024 +0000

    chore: replace proof of natAbs_add_of_nonpos (#11995)
    
    Proof was breaking on `nightly-testing` / `bump/v4.8.0`, so just replace it with `omega` and be done.
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 1f25ef627f105b49f5d3193562138394c7f3a837[m
Author: Scott Morrison <scott@tqft.net>
Date:   Mon Apr 8 08:20:32 2024 +0000

    chore: rename IsRoot.definition back to IsRoot.def (#11999)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit b8145adda2a744f3a646ee93f5daa05a4855da73[m
Author: David Loeffler <d.loeffler.01@cantab.net>
Date:   Mon Apr 8 07:22:22 2024 +0000

    refactor(Topology/Order/Basic): split up large file (#11992)
    
    This splits up the file `Mathlib/Topology/Order/Basic.lean` (currently > 2000 lines) into several smaller files.

[33mcommit 2098023c9352400723c029b587592285acdf1211[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Mon Apr 8 06:14:41 2024 +0000

    doc: fix many more mathlib3 names in doc comments (#11987)
    
    A mix of various changes; generated with a script and manually tweaked.

[33mcommit d4b9a267bb74937a96dfa65bf817514f5fd48022[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Mon Apr 8 02:32:01 2024 +0000

    chore(Data/Nat/Defs): Integrate `Nat.sqrt` material (#11866)
    
    Move the content of `Data.Nat.ForSqrt` and `Data.Nat.Sqrt` to `Data.Nat.Defs` by using `Nat`-specific Std lemmas rather than the mathlib general ones. This makes it ready to move to Std if wanted.

[33mcommit ea26fdaf629ea6ece78f3d55b8779390a6c3efbc[m
Author: Yoh Tanimoto <57562556+yoh-tanimoto@users.noreply.github.com>
Date:   Mon Apr 8 02:01:41 2024 +0000

    feat(Topology/Algebra/Module/WeakDual): prove basic relations between the weak topology and the original topology (#11566)
    
    (This PR continues #11472)
    Prove the following basic facts about the weak topology in a topological vector space (or AddCommMonoid) `E`.
    - any set that is open in the weak topology is open in the original topology.
    - any function in `E` that converges to a point in the original topology (with respect to some filter) converges also in the weak topology.
    - if a function in `E` converges to a point in the original topology, then its composition with a continuous linear functional converges.
    - any function from `E` that is continuous in the weak topology is also continuous in the original topology.
    
    Motivation: WeakSpace has some basic properties, analogue of which are proved for WeakDual.
    
    I have some doubts:
    - in order to avoid typeclass instance problem, I had to add a type ascription `continuousLinearMapToWeakSpace : E ‚ÜíL[ùïú] WeakSpace ùïú E` when needed. Is this fine or is there a canonical way to avoid it? (I tried to add `variable (ùïú E) in` before def/thm but it gave type mismatch in many places)
    - I made two theorems about IsOpen, but not sure about the naming convention.
    
    
    [![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)

[33mcommit 67a73e5ac35aa491ca8aee2401e91b595e688806[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Sun Apr 7 23:15:02 2024 +0000

    feat: add a class to encode that the spectrum of nonnegative elements is nonnegative (#11993)
    
    When working with the continuous functional calculus generically, it is currently hard to establish lemmas that work well for positive across the board.
    
    This is in part due to the fact that one cannot conclude from the continuous functional calculus alone that the spectrum of nonnegative elements in a star-ordered ring is nonnegative. So, we use a type class to encode this, and this type class actually uses the quasispectrum, because for unital algebras the two notions are equivalent.

[33mcommit 08092d39eaf97c7d9a15608a8ca6ef110a60f8d6[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Sun Apr 7 23:15:01 2024 +0000

    doc(Tactic): fix more mathlib3 names in doc comments (#11949)
    
    Auto-generated using a script, with manual fix-ups.

[33mcommit 7254d17219d29663079c62aaecf7d80f583e0f2d[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Sun Apr 7 23:15:00 2024 +0000

    feat(Algebra/Homology): action of a bifunctor on cochain complexes and shifts (#10880)
    
    In this PR, we introduce the abbreviation `CochainComplex.mapBifunctor K‚ÇÅ K‚ÇÇ F` for `K‚ÇÅ` and `K‚ÇÇ` two cochain complexes, and `F` a bifunctor. We obtain isomorphisms which express the behavior of this construction with respect to shifts on both variables: `mapBifunctor (K‚ÇÅ‚ü¶x‚üß) K‚ÇÇ F ‚âÖ (mapBifunctor K‚ÇÅ K‚ÇÇ F)‚ü¶x‚üß` and `mapBifunctor K‚ÇÅ (K‚ÇÇ‚ü¶y‚üß) F ‚âÖ (mapBifunctor K‚ÇÅ K‚ÇÇ F)‚ü¶y‚üß`.
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit 2e7bb6401d7317257f01d9db8355b39617cce5b2[m
Author: Anatole Dedecker <anatolededecker@gmail.com>
Date:   Sun Apr 7 22:24:37 2024 +0000

    feat: general Ascoli theorem (#6844)
    
    Co-authored-by: @vbeffara (port to Lean4), @tb65536 (suggested to skip the totally bounded case and go straight to compactness using Tykhonov)
    
    This was discussed on Zulip [recently](https://leanprover.zulipchat.com/#narrow/stream/217875-Is-there-code-for-X.3F/topic/Arzela-Ascoli.20for.20uniform.20spaces) and [a while ago](https://leanprover.zulipchat.com/#narrow/stream/116395-maths/topic/Montel's.20theorem).

[33mcommit e29d107b8bbf247f2e8611d9e9aba82b180bd732[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Sun Apr 7 21:26:21 2024 +0000

    feat: Equivalence of arc and chord distances for unit complex numbers (#11124)
    
    From LeanAPAP

[33mcommit 345dab21d0ffb4e3466610f7065a581c2edb5fe8[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Sun Apr 7 20:38:45 2024 +0000

    feat(CategoryTheory): a functor between `FinitaryPreExtensive` categories reflects finite effective epi families if it reflects effective epis (#11491)
    
    We prove that a functor between `FinitaryPreExtensive` categories preserves (resp. reflects) finite
    effective epi families if it preserves (resp. reflects) effective epis.

[33mcommit 0a6649f37a3cd301ddfe206e000a39541829a5dd[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Sun Apr 7 19:21:51 2024 +0000

    feat: generically, the restriction of a continuous functional calculus is equal to the original (#11958)

[33mcommit 476265279d954a150d22e9a22fca8b856bc11a72[m
Author: Amelia Livingston <101damnations@github.com>
Date:   Sun Apr 7 17:47:36 2024 +0000

    feat(Algebra/Module): Use coercion from SemilinearEquivClass to SemilinearEquiv (#11966)

[33mcommit b2af0d13e12ea2c6afd4f45cee893d2c0ac4021a[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Sun Apr 7 17:47:35 2024 +0000

    chore: Rename `coe_nat`/`coe_int`/`coe_rat` to `natCast`/`intCast`/`ratCast` (#11499)
    
    This is less exhaustive than its sibling #11486 because edge cases are harder to classify. No fundamental difficulty, just me being a bit fast and lazy.
    
    Reduce the diff of #11203

[33mcommit 3cb545c7051d54647150720d875a0147e35df24c[m
Author: Jo√´l Riou <christian@merten.dev>
Date:   Sun Apr 7 17:14:11 2024 +0000

    feat: existence of a limit in a concrete category implies smallness (#11625)
    
    In this PR, it is shown that if a functor `G : J ‚•§ C` to a concrete category has a limit and that `forget C` is corepresentable, then `G ‚ãô forget C).sections` is small. As the corepresentability property holds in many concrete categories (e.g. groups, abelian groups) and that we already know since #11420 that limits exist under the smallness assumption in such categories, then this lemma may be used in future PR in order to show that usual forgetful functors preserve all limits (regardless of universe assumptions). This shall be convenient in the development of sheaves of modules.
    
    In this PR, universes assumptions have also been generalized in the file `Limits.Yoneda`. In order to do this, a small refactor of the file `Limits.Types` was necessary. This introduces bijections like `compCoyonedaSectionsEquiv (F : J ‚•§ C) (X : C) : (F ‚ãô coyoneda.obj (op X)).sections ‚âÉ ((const J).obj X ‚ü∂ F)` with general universe parameters. In order to reduce imports in `Limits.Yoneda`, part of the file `Limits.Types` was moved to a new file `Limits.TypesFiltered`.
    
    
    
    Co-authored-by: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>

[33mcommit f19f1aa2751e90133cac59ecb6942b975e8d16c4[m
Author: Adam Topaz <github@adamtopaz.com>
Date:   Sun Apr 7 14:48:53 2024 +0000

    feat(AlgebraicGeometry/OpenImmersion): The category structure on the type of open covers of a scheme. (#11946)
    
    Morphisms are refinements between open covers.

[33mcommit ab84fe139921886e0b51991a9ba1c5796172823c[m
Author: Moritz Doll <moritz.doll@googlemail.com>
Date:   Sun Apr 7 14:48:52 2024 +0000

    feat(Topology/Algebra/StrongTopology): introduce type synonym for abstract topologies on CLM (#11470)

[33mcommit 3556ded23c0b6914d97c31f71873a1c28235f89e[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Sun Apr 7 13:23:13 2024 +0000

    style: replace '.-/' by '. -/' (#11938)
    
    Purely automatic replacement. If this is in any way controversial; I'm happy to just close this PR.

[33mcommit 0b0e0502d67030c53a16fe89d2bd6da2cc684ab7[m
Author: Moritz Doll <moritz.doll@googlemail.com>
Date:   Sun Apr 7 13:23:12 2024 +0000

    chore(Analysis/Distribution/SchwartzSpace): improve proofs (#11684)
    
    Use `move_mul` to make a few proofs more robust.

[33mcommit 9e1329b724aa3232600e44bdc1e9ed9c25a84994[m
Author: Scott Morrison <scott@tqft.net>
Date:   Sun Apr 7 12:11:42 2024 +0000

    chore: make two proofs robust (#11983)
    
    Proofs by `simp` with many `-lemmas` are very fragile, and indeed this one broke on `nightly-testing`.
    
    Replaces with clearer proofs that use the relevant results already established, rather than fighting with `simp`.
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 38efe796f07e51aa3c9e6cfd5923d0a70460cea9[m
Author: Mario Carneiro <mcarneir@andrew.cmu.edu>
Date:   Sun Apr 7 12:11:41 2024 +0000

    feat: blacklist compiler definitions in shake (#11981)
    
    As [reported on Zulip](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Point.26Click.20library.20rewrite.20tactic/near/431717134).
    
    
    
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>
    Co-authored-by: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>

[33mcommit 115165149a436ddd142459d7c2d7a7d34d5e01ee[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Sun Apr 7 12:11:40 2024 +0000

    doc(Algebra,AlgebraicGeometry): remove mathlib3 names in doc comments (#11955)
    
    Mostly automatic, with a few manual corrections.

[33mcommit 141a2461c6340d56519c3e16f4e11632d9a2a727[m
Author: Andrew Yang <the.erd.one@gmail.com>
Date:   Sun Apr 7 11:41:56 2024 +0000

    chore: Remove `generalize'` (#11685)

[33mcommit 053d79fad267a808eed51c5c290a32f01040f5cf[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Sun Apr 7 08:13:57 2024 +0000

    chore: remove some mathlib3 names in doc comments (#11931)

[33mcommit 956a5c562aeb9c5eae62fe6aeeebd3e89defeb6d[m
Author: Scott Morrison <scott@tqft.net>
Date:   Sun Apr 7 08:13:56 2024 +0000

    chore: request a speed centre run for each nightly-testing-YYYY-MM-DD tag (#11856)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 47062a71ad8fca7f9003390007f6a0537c046b1e[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Sun Apr 7 07:06:21 2024 +0000

    chore: Split `Data.{Nat,Int}{.Order}.Basic` in group vs ring instances (#11924)
    
    Scatter the content of `Data.Nat.Basic` across:
    * `Data.Nat.Defs` for the lemmas having no dependencies
    * `Algebra.Group.Nat` for the monoid instances and the few miscellaneous lemmas needing them.
    * `Algebra.Ring.Nat` for the semiring instance and the few miscellaneous lemmas following it.
    
    Similarly, scatter
    * `Data.Int.Basic` across `Data.Int.Defs`, `Algebra.Group.Int`, `Algebra.Ring.Int`
    * `Data.Nat.Order.Basic` across `Data.Nat.Defs`, `Algebra.Order.Group.Nat`, `Algebra.Order.Ring.Nat`
    * `Data.Int.Order.Basic` across `Data.Int.Defs`, `Algebra.Order.Group.Int`, `Algebra.Order.Ring.Int`
    
    Also move a few lemmas from `Data.Nat.Order.Lemmas` to `Data.Nat.Defs`.
    
    Before
    ![pre_11924](https://github.com/leanprover-community/mathlib4/assets/14090593/be8a6259-9d2d-434d-b4a5-f5667feb9e1d)
    
    After
    ![post_11924](https://github.com/leanprover-community/mathlib4/assets/14090593/3944f37f-8cfd-4254-830b-d0dbcd23b50a)

[33mcommit 98715c2868954425d49dc10769409bd3e89f6194[m[33m ([m[1;31morigin/fix_prime_congruent_one[m[33m)[m
Author: Alex J Best <alex.j.best@gmail.com>
Date:   Sun Apr 7 05:56:03 2024 +0000

    feat: make push_neg fail if it didn't do anything (like simp) (#11784)

[33mcommit 562a9a453fde9da654da7b36b89f1d17f9b8c742[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sun Apr 7 05:06:48 2024 +0000

    chore(Matrix/ToLin): fix `Fintype`/`Finite` (#11734)
    
    Also drop a no longer needed `[DecidableEq _]` argument in 1 lemma.
    It was needed to generate a computable `Fintype (Set.range _)` instance
    but a `Finite` instance doesn't need it.

[33mcommit af58f9f3b4dba6a0d2e935789e7eae44cc98fff4[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Sun Apr 7 03:57:17 2024 +0000

    style: replace '/--A' by '/-- A' for each letter A. (#11939)
    
    Also do the same for "/-A". This is a purely aesthetic change (and exhaustive).

[33mcommit 869214f5db38aae1e0ec490787a88fb58494a19e[m
Author: Martin Dvo≈ô√°k <martin.dvorak@matfyz.cz>
Date:   Sun Apr 7 03:57:15 2024 +0000

    chore(Data/List/Join): better notation (#11724)
    
    Summary of changes (all changes are cosmetic):
    * use `L` for a 2D lists instead of `l` consistently
    * use dot notation more
    * use anonymous function argument

[33mcommit a7ffab835b456297520ec378aa00e46d1c35aa4b[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Sun Apr 7 02:48:34 2024 +0000

    chore(Data/Int/Cast): fix confusion between `OfNat` and `Nat.cast` lemmas (#11861)
    
    This renames
    
    * `Int.cast_ofNat` to `Int.cast_natCast`
    * `Int.int_cast_ofNat` to `Int.cast_ofNat`
    
    I think the history here is that this lemma was previously about `Int.ofNat`, before we globally fixed the simp-normal form to be `Nat.cast`.
    
    Since the `Int.cast_ofNat` name is repurposed, it can't be deprecated. `Int.int_cast_ofNat` is such a wonky name that it was probably never used.

[33mcommit de7e5c09504a5f4cca61bcc5659eaf01c9f52812[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Sat Apr 6 22:44:27 2024 +0000

    doc: replace mathlib3 names in doc comments (#11952)
    
    A few miscellaneous directories: `RingTheory`, `SetTheory`, `Combinatorics` and `CategoryTheory`.
    
    
    
    Co-authored-by: Scott Morrison <scott@tqft.net>

[33mcommit 0941f627824bc34cae4395f8e630f2ebae772df2[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Sat Apr 6 21:39:09 2024 +0000

    doc(Tactic/ToAdditive): fix mathlib3 naming in the documentation (#11951)

[33mcommit 7239b9f1333e66eee3e2b00ad449a10344655f1a[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Sat Apr 6 21:09:23 2024 +0000

    doc(Order): remove some mathlib3 names in docs (#11953)

[33mcommit a8a6713b92e1dc246a2d2a5255bb2d1846e88fe2[m[33m ([m[1;31morigin/use_match_expr[m[33m)[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Sat Apr 6 18:56:37 2024 +0000

    chore(Analysis): fix mathlib3 names; automated fixes (#11950)

[33mcommit a437be7c88fd1e5e7f496662ba50f7d06f06dce2[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Sat Apr 6 18:06:22 2024 +0000

    doc(Topology): fix more mathlib3 names in doc comments (#11948)

[33mcommit 85cbf2d01afaa7cda5597cf9c80c32be27b0c51f[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Sat Apr 6 17:15:37 2024 +0000

    feat: the Fourier transform a function with fast enough decay is smooth (#11776)

[33mcommit b845312f7d03185561788909cd70977e22c0af91[m
Author: Patrick Stevens <patrick+github@patrickstevens.co.uk>
Date:   Sat Apr 6 16:24:52 2024 +0000

    chore(Data/Real/Sqrt): delete commented-out incomplete code (#11909)
    
    Delete the currently-unused `sqrtAux`, which is a doomed attempt at a computable definition of `Real.sqrt`.

[33mcommit ad436877209feb736299dc7707c3c617cc048c7c[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Sat Apr 6 15:25:12 2024 +0000

    doc(MeasureSpace): document notation eventually/frequently (#11932)
    
    And add a section `ae` grouping material related to the a.e. filter.

[33mcommit 0d98b682398c3f2b62aee63ec5f155b95ed46acc[m
Author: Gabin <gabin1999@hotmail.com>
Date:   Sat Apr 6 15:25:11 2024 +0000

    feat(ModelTheory): lift of equivalences between direct limits, and direct limit of system of substructures (#11174)
    
    Define the equivalence between direct limits of isomorphic systems, and the equivalence between the direct limit of a system of substructures and the union of these substructures.
    Co-authored-by: Aaron Anderson <awainverse@gmail.com>
    
    
    
    Co-authored-by: Gabin <68381468+QuinnLesquimau@users.noreply.github.com>
    Co-authored-by: Johan Commelin <johan@commelin.net>

[33mcommit c86dc685fdd126a25449284907188f0540c3c582[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Sat Apr 6 14:26:32 2024 +0000

    doc(SmoothManifoldWithCorners): document notation (#11933)
    
    for models with corners and `\infty`
    
    The first two docstrings are small modifications of the module docstring.

[33mcommit 39ba55a7a8b833db18416e8ceca5af57a8e8ff1d[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Sat Apr 6 14:26:31 2024 +0000

    chore(Geometry/Manifold): rename two lemmas using mathlib3 names (#11929)
    
    - range_half_space -> range_euclideanHalfSpace
    - range_quadrant -> range_euclideanQuadrant

[33mcommit 1c861a033c939b7ecd1a8512004fb70f2f3dd72d[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Sat Apr 6 14:26:30 2024 +0000

    feat: generalize sq_pos_iff, sq_pos_of_ne_zero (#11743)
    
    This was previously about LinearOrderedRing, which is strictly stronger. The new assumptions match sq_nonneg.

[33mcommit 92f24cbd7fb61f288e535b054cf58cec280a9ec9[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Sat Apr 6 14:26:29 2024 +0000

    feat: GCDMonoid (Associates Œ±) instance (#11618)
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 68a8628510a1ecfefdaef0537de36d18177a718f[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Sat Apr 6 13:28:08 2024 +0000

    chore(SetTheory/Cardinal/Basic): add sections structuring the file better (#11603)
    
    This file is overly long: add some sections to structure the material better.
    
    And tweak one line break to be more logical.

[33mcommit f209d5e73e5b36b1abedd92e3f1c9ac75cf09aa8[m
Author: Fr√©d√©ric Marbach <66742248+frederic-marbach@users.noreply.github.com>
Date:   Sat Apr 6 11:52:04 2024 +0000

    feat(Algebra/Lie): add Finite instance for Lie derivations (#11927)
    
    This commit is a small step towards proving that all derivations of a finite-dimensional semisimple Lie algebra over a field are inner; an objective mentioned here: https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Derivations.20on.20Lie.20algebras. The proof will use the Killing form on the module of Lie derivations. The Killing form's API requires to work on modules which are both free and finite.
    
    This commit proves that, when `L` is a Lie algebra of finite dimension over a field, the module `LieDerivation R L L` is finite.

[33mcommit f9e043cb65bf0c189dc502d3ab97f65d7c1edece[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Sat Apr 6 10:45:09 2024 +0000

    chore(Data/List): Do not depend on algebra (#11845)
    
    Remove dependencies on algebra in the `Data.List` folder except for:
    * `Data.List.EditDistance`: Actually relies on algebra. Maybe should be moved?
    * `Data.List.Card`: Completely unused and redundant.
    * `Data.List.Cycle`: Relies on `Fintype`, which shouldn't rely on algebra but it's hard to fix right now. Maybe should be moved?
    * `Data.List.Func`: Completely unused and redundant.
    * `Data.List.Lex`: That's order theory. Could be moved.
    * `Data.List.Prime`. That's algebra. Should definitely be moved.
    * `Data.List.Sym`: Relies on `Multiset`, which shouldn't rely on algebra but it's hard to fix right now. Maybe should be moved?
    * `Data.List.ToFinsupp`: That's algebra. Should definitely be moved.
    
    As a consequence, move the big operators lemmas that were in there to `Algebra.BigOperators.List.Basic`. For the lemmas that were `Nat`-specific and not about auxiliary definitions, keep a version of them in the original file but stated using `Nat.sum`.
    
    Before
    ![pre_11845](https://github.com/leanprover-community/mathlib4/assets/14090593/5912261a-7c57-4231-a7d4-aed9ed7c8c79)
    
    After
    ![post_11845](https://github.com/leanprover-community/mathlib4/assets/14090593/c523c187-2f5a-4d65-ba88-ae489855039e)

[33mcommit 1de0ce568a0c1421931afe3682177948d0d88798[m
Author: kkytola <kalle.kytola@aalto.fi>
Date:   Sat Apr 6 10:45:08 2024 +0000

    feat: First countability of topology is preserved in inducing, embedding, and taking subspaces. (#11830)
    
    Add `firstCountableTopology_induced`, `Subtype.firstCountableTopology`, `Inducing.firstCountableTopology`, and `Embedding.firstCountableTopology`. These are pretty literal counterparts of the existing `secondCountableTopology_induced`, `Subtype.secondCountableTopology`, `Inducing.secondCountableTopology`, and `Embedding.secondCountableTopology`.
    
    
    
    Co-authored-by: kkytola <39528102+kkytola@users.noreply.github.com>

[33mcommit 9160ea198de03babbf8b4dbf267319b9de2183ba[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Sat Apr 6 09:41:29 2024 +0000

    refactor: Avoid `Rat` internals in the definition of `Field` (#11639)
    
    Soon, there will be `NNRat` analogs of the `Rat` fields in the definition of `Field`. `NNRat` is less nicely a structure than `Rat`, hence there is a need to reduce the dependency of `Field` on the internals of `Rat`.
    
    This PR achieves this by restating `Field.ratCast_mk'` in terms of `Rat.num`, `Rat.den`. This requires fixing a few downstream instances.
    
    Reduce the diff of #11203.
    
    
    
    
    Co-authored-by: Floris van Doorn <fpvdoorn@gmail.com>

[33mcommit 7a28dbc5058276b60fe74b20677def9189b8c7fb[m
Author: amosturchet <turchetamos@gmail.com>
Date:   Sat Apr 6 09:12:04 2024 +0000

    Feat (Analysis/Normed/Ring/Seminorm): add equivalence of MulRingNorms (#11852)
    
    Include the definition of equivalence of `MulRingNorms` and the lemmas proving it is an equivalence relation. For this we add a new import (to `Mathlib.Analysis.SpecialFunctions.Pow.Real`).
    We also include a lemma describing the values of a multiplicative ring norm on the naturals, stating that for all `n : ‚Ñï` if `f : MulRingNorm R` then `f n ‚â§ n`
    
    Co-authored-by:
    - David Kurniadi Angdinata <dka31@cantab.ac.uk>
    - Fabrizio Barroero <fabrizio.barroero@uniroma3.it>
    - Laura Capuano <laura.capuano@uniroma3.it>
    - Nirvana Coppola <nirvanac93@gmail.com>
    - Mar√≠a In√©s de Frutos Fern√°ndez <maria.defrutos@uam.es>
    - Silvain Rideau-Kikuchi <silvain.rideau-kikuchi@ens.fr>
    - Sam van Gool <vangool@irif.fr>
    - Francesco Veneziano <veneziano@dima.unige.it>

[33mcommit 74f9a89df6c7f715fe40d126bc2eb292716f7ea9[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Sat Apr 6 08:38:33 2024 +0000

    feat: add `of_eq` versions for lemmas on composition of derivatives (#11867)
    
    The versions we have assume that `f` is differentiable at `h x` and `h` is differentiable at `x`, to deduce that `f o h` is differentiable at `x`. In many applications, we have that `f` is differentiable at some point which happens to be equal to `h x`, but not definitionally, so one needs to jump through some hoops to apply the composition lemma. We add `of_eq` versions assuming instead that `f` is differentiable at `y` and that `y = h x`, which is much more flexible in practice.

[33mcommit 11431c65a6542c9f3c1b43345244070a6d7a26b2[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Sat Apr 6 07:28:34 2024 +0000

    chore: remove `mathport name: <expression>` lines (#11928)
    
    [Quoting](https://github.com/leanprover-community/mathlib4/pull/11905#issuecomment-2039272591) `@digama0`:
    > These were actually never meant to go in the file, they are basically debugging information and only useful on significantly broken mathport files. You can safely remove all of them.

[33mcommit 7c41b87402b0684e4e87c1beee7a73e24101603a[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Sat Apr 6 07:01:30 2024 +0000

    feat(CategoryTheory): a family is effective epi iff its precomposition with a family of split epis is (#11569)

[33mcommit ee6db57e626522c41df594626572bb0f805ec5ff[m
Author: Salvatore Mercuri <smercuri@ed.ac.uk>
Date:   Sat Apr 6 01:51:11 2024 +0000

    feat: homeomorphisms preserve local compactness (#11901)
    
    Add a theorem `Homeomorph.locallyCompactSpace` that if the codomain of a homeomorphism is a locally compact space, then the domain is also a locally compact space.

[33mcommit 3f22805959e0d0d2a79b84610a1fefaa86b58391[m
Author: Scott Carnahan <128885296+ScottCarnahan@users.noreply.github.com>
Date:   Sat Apr 6 00:52:31 2024 +0000

    feat(LaurentSeries): Hasse derivatives of Laurent series (#11430)
    
    This PR defines Hasse derivatives of formal Laurent series using integer binomial coefficients, and proves some basic properties.

[33mcommit f7519d5edffea570bc1e4c2c579ffcd016bf7c82[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Fri Apr 5 23:45:10 2024 +0000

    chore(Algebra/BigOperators/List): Use Std lemmas (#11725)
    
    * Make `Algebra.BigOperators.List.Basic`, `Data.List.Chain` not depend on `Data.Nat.Order.Basic` by using `Nat`-specific Std lemmas rather than general mathlib ones. I leave the `Data.Nat.Basic` import since `Algebra.BigOperators.List.Basic` is algebra territory.
    * Make `Algebra.BigOperators.List.Basic` not depend on `Algebra.Divisibility.Basic`. I'm not too sure about that one since they already are algebra. My motivation is that they involve ring-like objects while big operators are about group-like objects, but this is in some sense a second order refactor.
    * As a consequence, move the divisibility and `MonoidWithZero` lemmas from `Algebra.BigOperators.List.Basic` to `Algebra.BigOperators.List.Lemmas`.
    * Move the content of `Algebra.BigOperators.List.Defs` to `Algebra.BigOperators.List.Basic` since no file imported the former without the latter and their imports are becoming very close after this PR.
    * Make `Data.List.Count`, `Data.List.Dedup`, `Data.List.ProdSigma`, `Data.List.Zip` not depend on `Algebra.BigOperators.List.Basic`.
    * As a consequence, move the big operators lemmas that were in there to `Algebra.BigOperators.List.Basic`. For the lemmas that were `Nat` -specific, keep a version of them stated using `Nat.sum`.
    * To help with this, add `Nat.sum_eq_listSum (l : List Nat) : Nat.sum l = l.sum`.

[33mcommit add80962c7d3d6e533abcd0d47f5653f3f24f638[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Fri Apr 5 23:45:09 2024 +0000

    feat(CategoryTheory): reflecting the property of being precoherent and preregular (#11502)
    
    We prove that given a fully faitful functor `F : C ‚•§ D` which preserves and reflects finite
    effective epimorphic families, such that for every object `X` of `D` there exists an object `W` of
    `C` with an effective epi `œÄ : F.obj W ‚ü∂ X`, the category `C` is `Precoherent` whenever `D` is.
    
    We prove the corresponding result for `Preregular`, but then it is enought that `F` preserves and reflects effective epis.

[33mcommit 4c800605d6853658fdb6973ec024bfc553d409cc[m
Author: Xavier Roblot <46200072+xroblot@users.noreply.github.com>
Date:   Fri Apr 5 23:03:11 2024 +0000

    chore: Slightly modify the split of `CanonicalEmbedding` (#11917)
    
    Create a new directory for the split of `CanonicalEmbedding` since more material is coming.
    
    Also add some docstrings.

[33mcommit 9db18cff18a0ff47943a147f39db8fa760558882[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Fri Apr 5 23:03:10 2024 +0000

    feat: integration by parts on the whole real line, assuming integrability of the product (#11916)
    
    We already have that `‚à´ (x : ‚Ñù), u x * v' x = b' - a' - ‚à´ (x : ‚Ñù), u' x * v x` if `u * v` tends to `a'` and `b'` at minus infinity and infinity. Assuming morevoer that `u * v` is integrable, we show that it tends to `0` at minus infinity and infinity, and therefore that `‚à´ (x : ‚Ñù), u x * v' x = - ‚à´ (x : ‚Ñù), u' x * v x`. We also give versions with a general bilinear form instead of multiplication.

[33mcommit 64e5ddf0285f83c65721e7d920a4c026c8516cfc[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Fri Apr 5 21:50:50 2024 +0000

    chore(Field/InjSurj): Tidy (#11480)
    
    Among other things, change the `nsmul`, `zsmul`, `qsmul` fields to have `n`/`q` come before `x`, because this matches the lemmas we want to write about them. It would be preferrable to perform the same changes to the `AddMonoid`/`AddGroup`-like typeclasses, but this is impossible with the current `to_additive` framework, so instead I have inserted some `Function.swap` at the interface between `AddMonoid`/`AddGroup` and `Ring`/`Field`.
    
    Reduce the diff of #11203

[33mcommit 1b545f0b0e6fefe3bc244f14a7d8447d55645862[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Fri Apr 5 21:50:49 2024 +0000

    feat: continuous affine equivalences (#11341)

[33mcommit 01622329f1d24fdd5f4987fd23324e2b1d03dcac[m
Author: Xavier Roblot <46200072+xroblot@users.noreply.github.com>
Date:   Fri Apr 5 21:50:48 2024 +0000

    feat: Add `Zspan.fundamentalDomain_ae_parallelepiped` (#11321)
    
    Prove that the fundamental domain of a `‚Ñ§`-lattice is almost equal to the corresponding parallelepiped. This is useful because many results in measure theory use the parallelepiped associated to a basis.
    
    
    
    Co-authored-by: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>

[33mcommit fea58cd7343e3b40a779c909969b761100c623d9[m
Author: Alex Kontorovich <58564076+AlexKontorovich@users.noreply.github.com>
Date:   Fri Apr 5 21:50:47 2024 +0000

    refactor: typeclasses for measures on quotient spaces and groups (#7506)
    
    We introduce a new typeclass `QuotientMeasureEqMeasurePreimage` which expresses a relationship between a measure on a space and a measure on its quotient under a discrete group action. Namely, the volume of a measurable set in the quotient is equal to the volume of its preimage, intersected with any fundamental domain.
    
    Our main application is in the context of a discrete normal subgroup of a topological group acting on the group itself, so as to compare Haar measures on a group and its quotient. Before this typeclass, you could have Haar measure upstairs and downstairs and you would have ugly scaling factors if you wanted to compare the two. This typeclass more accurately reflects what is needed in order to have a clear relationship between the upstairs and downstairs measures.
    
    Two big theorems (proved under various technical assumptions, like finiteness of the volume - which shouldn't be necessary):
    
    (1) if you're Haar upstairs and satisfy `QuotientMeasureEqMeasurePreimage`, then you're Haar downstairs.
    
    And conversely (2): if you're Haar upstairs and downstairs, and scale correctly on a single measurable set, then you satisfy `QuotientMeasureEqMeasurePreimage`.
    
    Contains the forward-port of https://github.com/leanprover-community/mathlib/pull/18863
    
    Co-authored-by: Heather Macbeth <25316162+hrmacbeth@users.noreply.github.com>
    
    
    
    Co-authored-by: Heather Macbeth <25316162+hrmacbeth@users.noreply.github.com>

[33mcommit 75a72d07a33394e29766299caf306bfd33f51de0[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Fri Apr 5 21:50:45 2024 +0000

    refactor: Use `nsmul` in `zsmul_rec` (#862)
    
    It's annoying that `zsmulRec` uses `nsmulRec` to define `zsmul` even when the user already set `nsmul` explicitly. This PR changes `zsmulRec` to take `nsmul` as an argument.
    
    Co-authored-by: Jeremy Tan Jie Rui <reddeloostw@gmail.com>

[33mcommit d2bbe224467d4452d5dffa85070cdcfc183a032d[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Fri Apr 5 20:49:37 2024 +0000

    chore: reduce imports in Data.Nat.ModEq (#11923)

[33mcommit b54ea94059412224407be69bb026fbda5b295601[m
Author: damiano <adomani@gmail.com>
Date:   Fri Apr 5 20:49:36 2024 +0000

    fix: add trailing line break to `noshake.json` (#11860)
    
    Add a line break at the end of the `noshake.json` file.  Git does not like files that do not end in a new-line and when you `cat scripts/noshake.json` it is nicer if the file ends in a new line.  :smile:
    
    I labeled it as `bug`, because it bugs me. :cockroach:

[33mcommit 9821d04c06124ccc682cf0be66026fda2b1ecc4b[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Fri Apr 5 20:49:35 2024 +0000

    chore(Data/List/Func): Delete (#11847)
    
    This file was used in the Lean 3 implementation of `omega` and nowhere else. It's mathematically redundant with `Data.List.ToFinsupp`.

[33mcommit 7239f2e91fc5510f18f5a80d26f6b705043bf39b[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Fri Apr 5 20:49:34 2024 +0000

    chore(Data/List/Card): Delete (#11846)
    
    As prophecised by the module doc, this file has been made fully redundant by the advent of `Finset`

[33mcommit 62cf98c30f245c18ec7c55793c2817dcd75f3757[m
Author: Ga√´tan Serr√© <gaetan.serre@ens-paris-saclay.fr>
Date:   Fri Apr 5 19:57:23 2024 +0000

    feat(NumberTheory/Padics/PadicVal): Add `padicValNat_mul_pow_left/right` (#11354)
    
    Add two theorems solving goals of this form: for any primes `p` and `q` such that `p != q`, `padicValNat p (p^n * q^m) = n`
    
    
    
    
    Co-authored-by: Ga√´tan Serr√© <56162277+gaetanserre@users.noreply.github.com>

[33mcommit 2baa320cd40a73157eeca4e4340f50c0ed4439fa[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Fri Apr 5 18:00:50 2024 +0000

    chore: reduce mathlib dependencies in Data.Nat.Defs (#11918)
    
    It seems that most of this file belongs in Std.
    This changes some proofs to avoid dependencies on mathlib, notably on the typeclass-mediated order lemmas.

[33mcommit eb959642cc97695d3d392a8caacd9b8af2f47550[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Fri Apr 5 17:00:12 2024 +0000

    chore: Homogenise instances for `MulOpposite`/`AddOpposite` (#11485)
    
    by declaring them all in `where` style with implicit type assumptions and `inst` prefix
    
    Here to reduce the diff from #11203

[33mcommit d5a796bf260a81e8f626fd9bfe3e4c7da5c61c61[m
Author: Scott Morrison <scott@tqft.net>
Date:   Fri Apr 5 15:59:25 2024 +0000

    chore: don't import Field in Algebra.Ring.Equiv (#11881)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit bfa8843555053e1d5b7cbb61658f074724c93ade[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Fri Apr 5 15:59:24 2024 +0000

    feat: make `StarOrderedRing` a mixin (#11872)
    
    This makes `StarOrderedRing` take `StarRing` as a parameter instead of extending it, and as a result moves the typeclass to `Prop`. It was already a mixin with respect to the order and algebraic structure. There are two primary motivations:
    
    1. This makes it possible to directly assume that `C(Œ±, R)` is a `StarOrderedRing` with `[StarOrderedRing C(Œ±, R)]`, as currently there is no typeclass on `R` which would naturally guarantee this property. This is relevant as we want this type class on continuous functions for the continuous functional calculus.
    2. We will eventually want a `StarOrderedRing` instance on `C(Œ±, A)` where `A` is a complex (or even real) C‚ãÜ-algebra, and making this a mixin avoids loops with `StarRing`.

[33mcommit 3cc22ef503468e709aaf5d9463eafb3a9bbea23a[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Fri Apr 5 15:59:24 2024 +0000

    chore: Sort big operator order lemmas (#11750)
    
    Take the content of
    * some of `Algebra.BigOperators.List.Basic`
    * some of `Algebra.BigOperators.List.Lemmas`
    * some of `Algebra.BigOperators.Multiset.Basic`
    * some of `Algebra.BigOperators.Multiset.Lemmas`
    * `Algebra.BigOperators.Multiset.Order`
    * `Algebra.BigOperators.Order`
    
    and sort it into six files:
    * `Algebra.Order.BigOperators.Group.List`. I credit Yakov for https://github.com/leanprover-community/mathlib/pull/8543.
    * `Algebra.Order.BigOperators.Group.Multiset`. Copyright inherited from `Algebra.BigOperators.Multiset.Order`.
    * `Algebra.Order.BigOperators.Group.Finset`. Copyright inherited from `Algebra.BigOperators.Order`.
    * `Algebra.Order.BigOperators.Ring.List`. I credit Stuart for https://github.com/leanprover-community/mathlib/pull/10184.
    * `Algebra.Order.BigOperators.Ring.Multiset`. I credit Ruben for https://github.com/leanprover-community/mathlib/pull/8787.
    * `Algebra.Order.BigOperators.Ring.Finset`. I credit Floris for https://github.com/leanprover-community/mathlib/pull/1294.
    
    Here are the design decisions at play:
    * Pure algebra and big operators algebra shouldn't import (algebraic) order theory. This PR makes that better, but not perfect because we still import `Data.Nat.Order.Basic` in a few `List` files.
    * It's `Algebra.Order.BigOperators` instead of `Algebra.BigOperators.Order` because algebraic order theory is more of a theory than big operators algebra. Another reason is that algebraic order theory is the only way to mix pure order and pure algebra, while there are more ways to mix pure finiteness and pure algebra than just big operators.
    * There are separate files for group/monoid lemmas vs ring lemmas. Groups/monoids are the natural setup for big operators, so their lemmas shouldn't be mixed with ring lemmas that involves both addition and multiplication. As a result, everything under `Algebra.Order.BigOperators.Group` should be additivisable (except a few `Nat`- or `Int`-specific lemmas). In contrast, things under `Algebra.Order.BigOperators.Ring` are more prone to having heavy imports.
    * Lemmas are separated according to `List` vs `Multiset` vs `Finset`. This is not strictly necessary, and can be relaxed in cases where there aren't that many lemmas to be had. As an example, I could split out the `AbsoluteValue` lemmas from `Algebra.Order.BigOperators.Ring.Finset` to a file `Algebra.Order.BigOperators.Ring.AbsoluteValue` and it could stay this way until too many lemmas are in this file (or a split is needed for import reasons), in which case we would need files `Algebra.Order.BigOperators.Ring.AbsoluteValue.Finset`, `Algebra.Order.BigOperators.Ring.AbsoluteValue.Multiset`, etc...
    * `Finsupp` big operator and `finprod`/`finsum` order lemmas also belong in `Algebra.Order.BigOperators`. I haven't done so in this PR because the diff is big enough like that.

[33mcommit 1c351ac79b7648b78036f6e437c53a883ded4a7b[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Fri Apr 5 12:26:25 2024 +0000

    doc(AlgebraicGeometry/Scheme): turn some comments into doc comments (#11907)
    
    and tweak formatting of some doc comments
    
    Extracted from #11905.

[33mcommit 186055488e801f4addc56b7d78809b0d611f82ed[m
Author: sven-manthe <sven.manthe@uni-bonn.de>
Date:   Fri Apr 5 12:26:24 2024 +0000

    feat: add missing Set.Ioo_inter_Iio etc (#11902)
    
    add missing lemmas. I'm not sure if these should be @[simp], as e.g. Ico_inter_Ico isn't, but Ico_inter_Iio is

[33mcommit 48ec8b6143eb142329b6689f13d4cc4975a257bf[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Fri Apr 5 12:26:23 2024 +0000

    chore(Tactic/TypeStar): reduce imports (#11876)
    
    I noticed that this doesn't actually use `Std` or in fact any of its other imports.
    
    The downstream fallout is pretty small because `Mathlib.Tactic.Basic` imports `Std` anyway, so this only impacts files not downstream of that.

[33mcommit 94d1829a7fb4a6c701f239a90a997e994d69a41b[m
Author: kkytola <kalle.kytola@aalto.fi>
Date:   Fri Apr 5 12:26:22 2024 +0000

    feat: Continuous real-valued functions separate points in T3.5-spaces. (#11831)
    
    Continuous real-valued functions separate points in T3.5-spaces, spelled in terms of `SeparatesPoints`. There was a brief [Zulip discussion](https://leanprover.zulipchat.com/#narrow/stream/217875-Is-there-code-for-X.3F/topic/separatesPoints_continuous/near/430510853).
    
    
    
    Co-authored-by: kkytola <39528102+kkytola@users.noreply.github.com>

[33mcommit 1c8ae07c824dc4d767037a53381e7bc3c2c90315[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Fri Apr 5 11:13:26 2024 +0000

    doc: document some notation (#11922)
    
    We cannot literally use @[inherit_doc] in these cases, but we can slightly modify the underlying docstring or a turn a regular comment into a doc comment.

[33mcommit 492b0e507373e35481caddc4dbbcb57b0b7e707b[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Fri Apr 5 11:13:25 2024 +0000

    doc(Dynamics/OmegaLimit): document notation (#11921)
    
    And tweak the line breaks slightly.

[33mcommit 0996e120cae6c5a61ab787a5325db3f8c8a50e37[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Fri Apr 5 11:13:25 2024 +0000

    chore: move some basic multiplicity results out of Mathlib.RingTheory.Int.Basic (#11919)
    
    This means Mathlib.NumberTheory.Padics.PadicVal no longer needs to depend on Mathlib.RingTheory.Int.Basic, which is surprisingly heavy (in particular through Mathlib.RingTheory.Noetherian).

[33mcommit 8ba65cf332ce8b89b327bdbfd3a23b875987e5b4[m
Author: sven-manthe <sven.manthe@uni-bonn.de>
Date:   Fri Apr 5 11:13:24 2024 +0000

    feat: add `Ioo_disjoint_Ioo` (#11903)
    
    Without the DenselyOrdered-hypothesis, this is false in general.
    
    
    
    Co-authored-by: sven-manthe <147848313+sven-manthe@users.noreply.github.com>

[33mcommit 514a12b4933eac9fa012e60dac8177da5117a8e4[m
Author: damiano <adomani@gmail.com>
Date:   Fri Apr 5 11:13:23 2024 +0000

    fix: change `refine` to `exact` in files where it speeds up (#11896)
    
    See #11890 and this [Zulip discussion](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Usage.20of.20refine') for an in-depth explanation of why these `refine`s and not others.
    
    The short answer is that the files in which these replacements took place were more performant after the change than before.

[33mcommit 56e439ec275a319deed4f81f6436af5f0d9b6f00[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Fri Apr 5 10:00:41 2024 +0000

    move(Polynomial): Move out of `Data` (#11751)
    
    `Polynomial` and `MvPolynomial` are algebraic objects, hence should be under `Algebra` (or at least not under `Data`)

[33mcommit d9c412b8103b5098bf8b66cbb981b81a57375925[m
Author: Mitchell Lee <trivial171@gmail.com>
Date:   Fri Apr 5 09:01:52 2024 +0000

    feat: convergence of infinite sums in nonarchimedean abelian groups (#11688)
    
    Let `G` be a complete nonarchimedean abelian group and let `f : Œ± ‚Üí G` be a function. We prove that `f` is unconditionally summable if and only if `f a` tends to zero on the cofinite filter on `Œ±`.

[33mcommit 560486bb9d69604a74dd2dc4cfe4701611bd128a[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Fri Apr 5 07:33:51 2024 +0000

    chore: replace PORTING NOTE by Porting note (#11908)

[33mcommit bdd389726f8edac1ee29491f2af8b053d0390a33[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Fri Apr 5 07:33:50 2024 +0000

    chore: Delete `Init.Data.Nat.Bitwise` and `Init.Data.Int.Bitwise` (#11898)
    
    The lemmas can easily be moved to `Data.Nat.Bits` and `Data.Int.Bitwise` respectively.

[33mcommit 22afa0a40e798b029020d4f5fc29fccdfbb8f1ee[m
Author: Bolton Bailey <bolton.bailey@gmail.com>
Date:   Fri Apr 5 07:05:44 2024 +0000

    chore: split `NumberTheory.NumberField.CanonicalEmbedding` (#11873)
    
    #8361 indicates that this is the most compute-intensive file on the longest pole for compiling Mathlib. It's bottlenecked dependency is `Mathlib.MeasureTheory.Measure.Lebesgue.VolumeOfBalls`, and this import isn't used until the second half of the file, in the sections regarding convex bodies. I am therefore splitting the file at that point, from the context of the file it seems to me that this is a sensible split anyway.

[33mcommit 44c063e1e5c4efca80c2b0575a854c0934dd15c0[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Fri Apr 5 06:15:30 2024 +0000

    feat: `deriv` versions of composition lemmas with bilinear maps (#11868)
    
    We already have the `fderiv` versions.

[33mcommit 1d98ecadb05d7c3c6a422f7b8a7708ae188d3e2a[m
Author: Mario Carneiro <mcarneir@andrew.cmu.edu>
Date:   Fri Apr 5 05:44:52 2024 +0000

    fix: name collision on Countable.toSmall (#11914)
    
    This is currently causing mathport to fail, it's a new kind of name collision that has not occurred before: two definitions made in two different files are being `#align`ed to the same thing. Normally mathport will automatically rename one of them but in this case neither one imports the other so it doesn't know to avoid the situation.
    
    
    
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>

[33mcommit 8b50609cd8506f31c1ba9014362b991d018502ed[m
Author: Antoine Chambert-Loir <antoine.chambert-loir@u-paris.fr>
Date:   Fri Apr 5 00:53:52 2024 +0000

    feat: MulActionHom in the semilinear style (#6057)
    
    Generalize `MulActionHom` so that it allows two different monoids acting, related by a morphism. This is inspired by the treatment of (semi)linear maps in mathlib, and allows to refactor them.
    
    Let `M`, `N`, `X`, `Y` be types, with `SMul M X` and `SMul N Y`, and let `œÜ : M ‚Üí N` be a map.
    * `MulActionHom œÜ X Y`, the type of equivariant functions from `X` to `Y`, consists of functions `f : X ‚Üí Y` such that `f (m ‚Ä¢ x) = (œÜ m) ‚Ä¢ (f x)` for all `m : M` and `x : X`.
    
    Assume that we have `Monoid M`, `Monoid N` and that `œÜ : M ‚Üí* N`. For `A`, `B` by types with `AddMonoid A` and `AddMonoid B`, endowed with `DistribMulAction M A` and `DistribMulAction M B`:
    * `DistribMulActionHom œÜ A B` is  the type of equivariant additive monoid homomorphisms from `A` to `B`.
    
    Similarly, when `R` and `S` are types with `Semiring R`, `Semiring S`, `MulSemiringAction M R` and `MulSemiringAction N S`
    * `SMulSemiringHom œÜ R S` is the type of equivariant ring homomorphisms
      from `R` to `S`.
    
    The above types have corresponding classes:
    * `MulActionHomClass F œÜ X Y` states that `F` is a type of bundled `X ‚Üí Y` homs  which are `œÜ`-equivariant
    * `DistribMulActionHomClass F œÜ A B` states that `F` is a type of bundled `A ‚Üí B` homs  preserving the additive monoid structure and `œÜ`-equivariant
    * `SMulSemiringHomClass F œÜ R S` states that `F` is a type of bundled `R ‚Üí S` homs  preserving the ring structure and `œÜ`-equivariant
    
    ## Notation
    
    We introduce the following notation to code equivariant maps
    (the subscript index `‚Çë` is for *equivariant*) :
    * `X ‚Üí‚Çë[œÜ] Y` is `MulActionHom œÜ X Y`.
    * `A ‚Üí‚Çë+[œÜ] B` is `DistribMulActionHom œÜ A B`.
    * `R ‚Üí‚Çë+*[œÜ] S` is `MulSemiringActionHom œÜ R S`.
    
    When `M = N` and `œÜ = MonoidHom.id M`, we provide the backward compatible notation :
    * `X ‚Üí[M] Y` is `MulActionHom (@id M) X Y`
    * `A ‚Üí+[M] B` is `DistribMulActionHom (MonoidHom.id M) A B`
    * `R ‚Üí+*[M] S` is `MulSemiringActionHom (MonoidHom.id M) R S`
    
    This more general definition is propagated all over mathlib, in particular to `LinearMap`.
    
    The treatment of composition of equivariant maps is inspired by that of semilinear maps. We provide classes `CompTriple` and `MonoidHom.CompTriple` of ‚Äúcomposable triples`, and various instances for them.

[33mcommit 8e6493b6885fe258e869e939968a82a03db8bc24[m
Author: Jujian Zhang <jujian.zhang1998@outlook.com>
Date:   Thu Apr 4 23:53:56 2024 +0000

    feat(AlgebraicGeometry/ProjectiveSpectrum/Scheme): `fromSpec` is a continuous function so that we have `Spec A^0_f = Proj | D(f)` as topological spaces (#9629)
    
    
    
    Co-authored-by: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
    Co-authored-by: Jeremy Tan Jie Rui <reddeloostw@gmail.com>

[33mcommit 483848e8afb952d25f51f5ab865b4b3525c086b9[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Thu Apr 4 22:42:55 2024 +0000

    chore: tidy various files (#11624)

[33mcommit aad754f5a1541c28c6cd68bbb4900c4ec5004d22[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Thu Apr 4 22:42:54 2024 +0000

    chore: resolve a few porting notes `could not infer motive` (#11302)
    
    These are not all; most of these porting notes are still real.

[33mcommit 21e0675e44ce93dd2aaa7b40829e2cf774be7838[m
Author: Joseph Myers <jsm@polyomino.org.uk>
Date:   Thu Apr 4 22:42:53 2024 +0000

    feat(GroupTheory/GroupAction/Basic): various orbit lemmas (#11286)
    
    Add various miscellaneous lemmas about orbits, mainly about orbits under the subgroup / submonoid action.
    
    From AperiodicMonotilesLean.

[33mcommit 79a564391cea077bc88e7160ab66c1737919c571[m
Author: David Renshaw <dwrenshaw@gmail.com>
Date:   Thu Apr 4 22:42:52 2024 +0000

    chore: use CompositionSeries.ext_fun to simplify the proof of toList_injective (#11047)
    
    Eliminates two porting notes and reduces elaboration time of the def from 0.185 to 0.175 seconds.

[33mcommit fdfb154b335b2bef3c1df27cb78c1669857d0b33[m
Author: sven-manthe <sven.manthe@uni-bonn.de>
Date:   Thu Apr 4 21:40:23 2024 +0000

    doc: fix comment (#11900)
    
    fix comment calling a supremum infimum

[33mcommit 8a2f10064621308794b8d5ee9acd86b5684906ff[m
Author: sven-manthe <sven.manthe@uni-bonn.de>
Date:   Thu Apr 4 21:40:22 2024 +0000

    style: fix references to DenselyOrdered (#11897)
    
    Rename occurrences of "densely_ordered" to "denselyOrdered"
    
    
    
    Co-authored-by: sven-manthe <147848313+sven-manthe@users.noreply.github.com>

[33mcommit aca0073fdaafa5b66fd201d09c6836b77fc96418[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Thu Apr 4 21:40:21 2024 +0000

    feat(GroupTheory/Coxeter): decidability (#11879)

[33mcommit d11fcd104b148576e4c0f3a0d7eb21c0b684b4da[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Thu Apr 4 21:40:20 2024 +0000

    feat: allow the Open Mapping Theorem to apply to semilinear maps (#11722)
    
    this generalizes the Open Mapping Theorem for Banach spaces to semilinear maps.
    
    For now, we don't generalize the closed graph theorem. This is not because it's impossible, but only that it's currently prohibitively difficult since `LinearMap.graph` doesn't make sense for semilinear maps.

[33mcommit 974008758d1c8b4393f95cc19c0ab2a7c34dfed8[m
Author: Joseph Myers <jsm@polyomino.org.uk>
Date:   Thu Apr 4 21:40:19 2024 +0000

    feat(Data/Set/Pairwise/Basic): pairwise disjoint sets and subsingletons (#11629)
    
    Add a lemma giving a characterization of pairwise disjoint sets in terms of each value lying in at most one set:
    
    ```lean
    lemma subsingleton_setOf_mem_iff_pairwise_disjoint {f : Œπ ‚Üí Set Œ±} :
        (‚àÄ a, {i | a ‚àà f i}.Subsingleton) ‚Üî Pairwise (Disjoint on f) :=
    ```
    
    From AperiodicMonotilesLean.

[33mcommit 2c870c1aa687b2a8199cbd125ad1618a98b6f8c3[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Thu Apr 4 21:40:18 2024 +0000

    feat: add Set.countable_infinite_iff_nonempty_denumerable (#11605)
    
    From sphere-eversion; I'm just submitting this.

[33mcommit f37622ba2a6676abb9cc345e121b703ad8dc357d[m
Author: Timo Carlin-Burns <timorcb@gmail.com>
Date:   Thu Apr 4 21:40:17 2024 +0000

    feat: lemmas about Multiset.join (#11599)
    
    - `Multiset.map_join` corresponding to [`List.map_join`](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Data/List/Basic.html#List.map_join)
    - `Multiset.prod_join` corresponding to [`List.prod_join`](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Data/List/BigOperators/Basic.html#List.prod_join)

[33mcommit 0ee3d2411a40a6ae4f2c9c223d470d8d91bf5912[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Thu Apr 4 21:16:33 2024 +0000

    chore: update nolints.json (#11904)

[33mcommit 615cc224040900fbbfe0374af1180f0a5d06498b[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Thu Apr 4 19:28:05 2024 +0000

    doc(Algebra/Ring): add docstring for `CommRing` and `CommSemiring` (#11894)
    
    This PR resolves some nolints by adding docstrings for `CommRing` and `CommSemiring`.

[33mcommit 25e680d5188e2da14391c829dfb76584128fa5a5[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Thu Apr 4 18:16:37 2024 +0000

    chore(Data/Matrix): add explicit `of` typecasts (#11593)
    
    This adds some missing `Matrix.of` typecasts, and uses `Matrix.submatrix` in places where this is more reasonable than adding `of`.
    
    `Matrix.det_permute'` is a new lemma that fills the obvious gap that these `submatrix` restatements emphasize.

[33mcommit cfc96fe74f2737fbf80391ce6f21fd47fd4b39de[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Thu Apr 4 16:42:11 2024 +0000

    chore: Delete `Init.Data.Subtype.Basic` (#11887)
    
    The few useful lemmas can go to `Data.Subtype.Basic` and the other ones can be deleted.

[33mcommit 1d5ae6156c6ae9af08d38915ec6843c297c89c1e[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Thu Apr 4 16:42:10 2024 +0000

    chore: Remove `Init.Propext` (#10709)
    
    These lemmas can easily go to `Logic.Basic`

[33mcommit c06d0ad3d9d66abcd4307fb0cf58a1e108e273fd[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Thu Apr 4 15:52:03 2024 +0000

    chore(scripts): remove solved style exceptions (#11892)
    
    This PR removes solved `ERR_COP ` and `ERR_MOD` style exceptions.

[33mcommit e39cbd8f6ea5c5935bed5379031fa934f77afa8f[m
Author: sven-manthe <sven.manthe@gmerek-manthe.de>
Date:   Thu Apr 4 14:19:36 2024 +0000

    feat: list lemmas (#11626)
    
    Add some general purpose lemmas on lists. The new ext_get?' is intermediate between ext and ext_get, and for consistent naming add an alias ext_get? for ext.
    
    
    
    Co-authored-by: sven-manthe <147848313+sven-manthe@users.noreply.github.com>

[33mcommit f73c1a3720b685b6bd2fb6b0791e132b3d70ba64[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Thu Apr 4 13:54:17 2024 +0000

    feat(CategoryTheory): define class `ReflectsEffectiveEpis` (#11476)
    
    - [x] depends on: #11458

[33mcommit f113278febeed53d15ffbc64033747ef7c86729a[m
Author: Anatole Dedecker <anatolededecker@gmail.com>
Date:   Thu Apr 4 13:04:28 2024 +0000

    doc: fix typo introduced in #11869 (#11889)

[33mcommit 3e99b48baf21ffdd202d5c2e39990fc23f4c6d32[m
Author: Floris van Doorn <fpvdoorn@gmail.com>
Date:   Thu Apr 4 12:00:22 2024 +0000

    feat: add some docstrings to lemmas specialized to Nat and Int (#11694)

[33mcommit 3e060f08762821de30ecafb4e5f39075216c5816[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Thu Apr 4 10:53:26 2024 +0000

    chore: Remove `Init.Data.Int.CompLemmas` (#11882)
    
    Most lemmas are too specific to be reused so I deleted them. They must have been used for tactics in Lean 3.
    
    I moved the few lemmas that were generally useful (although I could only see one use, in `RingTheory.Localization.Away.Basic`!) to `Data.Int.Defs`.

[33mcommit 16eb4bdf35334195f01f36e9a0d96884fe6c4990[m
Author: Scott Morrison <scott@tqft.net>
Date:   Thu Apr 4 09:42:23 2024 +0000

    chore: remove some unnecessary 'open BigOperators' (#11880)
    
    Could we have an `open` linter, that checked for unused opened namespaces?
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 6d894901609c4194162563f3f6ba50c2045803aa[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Thu Apr 4 09:42:22 2024 +0000

    feat: `Decidable` instances for matrix symmetry (#11878)
    
    These are stated in the most general form possible, where they simply unfold the definition. This allows a few proofs to be golfed.

[33mcommit b918ee96ae8c1acf33bb66d3376e6000288d4e15[m
Author: Joseph Myers <jsm@polyomino.org.uk>
Date:   Thu Apr 4 09:42:21 2024 +0000

    feat(Logic/Equiv/Set): image of equiv applied to `setOf` (#11628)
    
    Add a lemma about the image of an equiv applied to `setOf`:
    
    ```lean
    lemma setOf_apply_symm_eq_image_setOf {Œ± Œ≤} (e : Œ± ‚âÉ Œ≤) (p : Œ± ‚Üí Prop) :
        {b | p (e.symm b)} = e '' {a | p a} := by
    ```
    
    From AperiodicMonotilesLean.

[33mcommit 434972cc960bfee4394f25937e8c0b4f7e1851b7[m
Author: L <hi@llllvvuu.dev>
Date:   Thu Apr 4 09:42:20 2024 +0000

    feat: bounding integrals by asymptotics, part 2: corollaries (#10388)
    
    Shortcuts for linearly ordered domains and/or continuous functions. As an example, I golf the existing `integrable_of_isBigO_exp_neg`.
    
    Another example usage: https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/1909a40253607bd2df18a738fc504fe81b132974/PrimeNumberTheoremAnd/PerronFormula.lean#L414-L436
    
    
    
    Co-authored-by: L Lllvvuu <git@llllvvuu.dev>

[33mcommit a45ae63747140c1b2cbad9d46f518015c047047a[m[33m ([m[1;33mtag: v4.7.0[m[33m)[m
Author: David Thrane Christiansen <david@davidchristiansen.dk>
Date:   Thu Apr 4 08:32:09 2024 +0000

    chore: bump toolchain to v4.7.0 (#11864)
    
    
    
    Co-authored-by: Sebastian Ullrich <sebasti@nullri.ch>

[33mcommit e5450096b074b32faf8bb81d0d3bb16a691335c1[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Thu Apr 4 07:25:49 2024 +0000

    chore: remove the ProofWidgets import (#11877)
    
    This follows on from #11350, following an alternative suggestion by @digama0.
    
    One argument for this pattern is that it also works for tests that import `ProofWidgets.Demos.*`, and any other auxiliary content in upstream packages that is not part of the top-level package.

[33mcommit 89a00da8c4971f8ed447d45fcae246634308dc73[m
Author: Brendan Seamas Murphy <shamrockfrost@gmail.com>
Date:   Thu Apr 4 00:36:53 2024 +0000

    Feat: Add some operations and lemmas on closure operators/order homs (#10348)
    
    This adds conjugation of order homomorphisms & closure operators by order isos, as well as two new extensionality lemmas for closure operators, a proof that the inf of a closed family is closed, and that the closure of an element is the GLB of all closed elements larger than it. There is also includes some minor refactoring, moving `Set.image_sSup` from `Mathlib/Order/Hom/CompleteLattice` to `Mathlib/Data/Set/Lattice` and adding some common lemmas for `EquivLike`-things to `OrderIso`.

[33mcommit 1c006b3f1835f41064fe822c418bce4515b4d761[m
Author: R√©my Degenne <Remydegenne@gmail.com>
Date:   Wed Apr 3 23:28:32 2024 +0000

    chore: Add pp_dot to measure definitions `trim`, `withDensity`, `restrict`, `rnDeriv` and `singularPart` (#11871)
    
    We use dot notation for them everywhere in the code. Let's use it in the infoview as well.

[33mcommit fcf9a439da0de48edab5138bde35679dea3ee970[m
Author: Anatole Dedecker <anatolededecker@gmail.com>
Date:   Wed Apr 3 23:28:31 2024 +0000

    feat: nhdsSet sends intersection of compact sets to their infimum (#11869)

[33mcommit 2b6a6f13b977c42ffd3ce0d548eaa5ab43137722[m
Author: Anatole Dedecker <anatolededecker@gmail.com>
Date:   Wed Apr 3 23:28:30 2024 +0000

    chore: rename StarSubalgebra.adjoin to StarAlgebra.adjoin (#11339)
    
    This makes it consistent with all the other `adjoin` in the library

[33mcommit e69a3c9d781e7f1c6bea5b5a902d5f3789ea974f[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Wed Apr 3 22:32:50 2024 +0000

    chore(GroupTheory/Coxeter/Basic): move matrices to a new file (#11875)
    
    These are moved without modification. A small part of the module docstring has been moved too.
    
    This is pre-work for #11836.

[33mcommit beeea28f77b228c4be596cdc7cb1dcd63c0a43e2[m
Author: Josha Dekker <114015169+JADekker@users.noreply.github.com>
Date:   Wed Apr 3 22:32:49 2024 +0000

    feat : new properties of the CardinalInterFilter (#11758)
    
    extend more of the API from CountableInterFilter
    to CardinalInterFilter
    
    
    
    
    Co-authored-by: Oliver Nash <github@olivernash.org>

[33mcommit fdb986a81847a2bbb6586468fc976beccd981f77[m
Author: Michael Stoll <Michael.Stoll@uni-bayreuth.de>
Date:   Wed Apr 3 22:32:48 2024 +0000

    feat(NumberTheory/LSeries/Dirichlet): new file, material on specific L-series (#11712)
    
    This PR adds a new file `NumberTheory.LSeries.Dirichlet` that contains results on L-series of specific functions:
    * the M√∂bius function
    * Dirichlet characters, with the constant function `1` as a special case
    * the arithmetic function `Œ∂` (which has the same L-series as the constant function `1`)
    * the von Mangoldt function and its twists by Dirichlet characters
    
    It also adds (L-series of zero and of the indicator function of `{1}`) and removes (convergence of the L-series of the constant function `1` / of  `Œ∂`; this is moved to the new file) some material to/from `NumberTheory.LSeries.Basic`.
    
    See [this thread on Zulip](https://leanprover.zulipchat.com/#narrow/stream/144837-PR-reviews/topic/L-series/near/424858837).

[33mcommit f28589d55ae8acf48a751c454109260dec6c3b46[m
Author: Scott Morrison <scott@tqft.net>
Date:   Wed Apr 3 21:20:58 2024 +0000

    chore: update Std (#11858)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 8d5f6cf4e5eccfb9a9c9f51321531a13341cbbd3[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Wed Apr 3 20:13:49 2024 +0000

    feat(CategoryTheory/Sites): add some API for regular sheaves and the equalizer condition (#10420)
    
    This PR gives an equivalent condition to `regularTopology.EqualizerCondition` (previously called `regularCoverage.EqualizerCondition`), phrased in more categorical language. We use this new condition to show that `EqualizerCondition`¬†respects natural isomorphisms.
    
    
    
    Co-authored-by: faenuccio <filippo.nuccio@univ-st-etienne.fr>
    Co-authored-by: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>

[33mcommit ff36646a1d3a38c53b313514195c9f135b86719e[m
Author: Christian Merten <christian@merten.dev>
Date:   Wed Apr 3 19:49:08 2024 +0000

    feat(RingTheory/Flat): flat is stable under base change (#11614)
    
    Shows that `Module.Flat` is stable under arbitrary base change of rings. Also adds the corresponding version for `Algebra.Flat`.

[33mcommit 6a3812f587f90f24821e5ed6cf155ccc9cc63b62[m
Author: Anne Baanen <vierkantor@vierkantor.com>
Date:   Wed Apr 3 17:37:30 2024 +0000

    refactor(Algebra/Module): Use coercion from SemilinearMapClass to SemilinearMap (#10758)
    
    This PR adds a coercion from any instance of `SemilinearMapClass` to `SemilinearMap`. This is the standard practice for other parts of the library, such as ring homs (see also the recent change #10368). I also expect this change will help with some rough edges in #6057. Previously, a coercion from `f : AlgHom` to `LinearMap` would look like `f.toNonUnitalAlgHom.toDistribMulActionHom.toLinearMap`, now it should look like `SemilinearMapClass.semilinearMap f`.
    
    The new coercion instances are `CoeHead` since the left hand side is a free variable `F`. I redefined the existing `DistribMulActionHom ‚Üí LinearMap` coercion in terms of the `SemilinearMapClass` coercion to ensure we don't get any diamonds.

[33mcommit 392a24a914e439c2606e7086c024ffac54d4acc5[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Wed Apr 3 11:58:15 2024 +0000

    chore(Data/Int): Rename `coe_nat` to `natCast` (#11637)
    
    Reduce the diff of #11499
    
    ## Renames
    
    All in the `Int` namespace:
    * `ofNat_eq_cast` ‚Üí `ofNat_eq_natCast`
    * `cast_eq_cast_iff_Nat` ‚Üí `natCast_inj`
    * `natCast_eq_ofNat` ‚Üí `ofNat_eq_natCast`
    * `coe_nat_sub` ‚Üí `natCast_sub`
    * `coe_nat_nonneg` ‚Üí `natCast_nonneg`
    * `sign_coe_add_one` ‚Üí `sign_natCast_add_one`
    * `nat_succ_eq_int_succ` ‚Üí `natCast_succ`
    * `succ_neg_nat_succ` ‚Üí `succ_neg_natCast_succ`
    * `coe_pred_of_pos` ‚Üí `natCast_pred_of_pos`
    * `coe_nat_div` ‚Üí `natCast_div`
    * `coe_nat_ediv` ‚Üí `natCast_ediv`
    * `sign_coe_nat_of_nonzero` ‚Üí `sign_natCast_of_ne_zero`
    * `toNat_coe_nat` ‚Üí `toNat_natCast`
    * `toNat_coe_nat_add_one` ‚Üí `toNat_natCast_add_one`
    * `coe_nat_dvd` ‚Üí `natCast_dvd_natCast`
    * `coe_nat_dvd_left` ‚Üí `natCast_dvd`
    * `coe_nat_dvd_right` ‚Üí `dvd_natCast`
    * `le_coe_nat_sub` ‚Üí `le_natCast_sub`
    * `succ_coe_nat_pos` ‚Üí `succ_natCast_pos`
    * `coe_nat_modEq_iff` ‚Üí `natCast_modEq_iff`
    * `coe_natAbs` ‚Üí `natCast_natAbs`
    * `coe_nat_eq_zero` ‚Üí `natCast_eq_zero`
    * `coe_nat_ne_zero` ‚Üí `natCast_ne_zero`
    * `coe_nat_ne_zero_iff_pos` ‚Üí `natCast_ne_zero_iff_pos`
    * `abs_coe_nat` ‚Üí `abs_natCast`
    * `coe_nat_nonpos_iff` ‚Üí `natCast_nonpos_iff`
    
    Also rename `Nat.coe_nat_dvd` to `Nat.cast_dvd_cast`

[33mcommit e048fd628f6b6a882490421a289efe2a2aca8d50[m
Author: Scott Morrison <scott@tqft.net>
Date:   Wed Apr 3 10:47:03 2024 +0000

    chore: another attempt at the new contributor bot (#11857)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit d9efb2acd2ac592c934837125ca1e437dcc4c3c5[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Wed Apr 3 10:47:02 2024 +0000

    chore(Tactic): solve `ERR_COP` style exceptions (#11826)
    
    This PR
    
    - [x] solves `ERR_COP` style exceptions by adding the copyright headers after having inspected the commit history of each file in Mathlib4 and in Mathlib3
    - [x] removes `ERR_COP` style exceptions from script

[33mcommit 1cca755bf20cfcec06dc01cdf4efac4e80b635eb[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Wed Apr 3 10:19:52 2024 +0000

    chore: swap argument order in `cfc` and `cfc‚Çô` (#11468)
    
    This changes the argument order for `cfc` and `cfc‚Çô` from `cfc (a : A) (f : R ‚Üí R)` to `cfc (f : R ‚Üí R) (a : A)`. This has a few advantages:
    
    1. It's closer to the usual reading (`cfc f a` vs. `f(a)` on paper).
    2. argument order looks better for `cfc_comp` (`cfc (g ‚àò f) a = cfc g (cfc f a)` instead of `cfc a (g ‚àò f) = cfc (cfc f a) g`).
    3. it will be much easier to speak of operator convexity and monotonicity if we can just write `cfc f`.

[33mcommit d6ce8fc2c542ed81b2364b04aa4a287eb6246aae[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Wed Apr 3 09:14:29 2024 +0000

    feat: drop completeness assumptions in theorems involving integrals (#11840)
    
    When computing the integral of a function taking values in a noncomplete space, we use the junk value `0`. This means that several theorems about integrals hold without completeness assumptions for trivial reasons. We use this to drop several completeness assumptions here and there in mathlib. This involves one nontrivial mathematical fact, that `E ‚ÜíL[ùïú] F` is complete iff `F` is complete, for which we add the missing direction (from left to right) in this PR.

[33mcommit 3b14f80de85938b4f21bde87bee55ba9e9a06066[m
Author: Jeremy Tan Jie Rui <reddeloostw@gmail.com>
Date:   Wed Apr 3 08:17:54 2024 +0000

    feat: Link finpartitions and setoids (#8735)
    
    
    
    
    Co-authored-by: Yakov Pechersky <ypechersky@treeline.bio>

[33mcommit af01418e44cde15e3685543a2a91b9aadbeb3458[m
Author: Rida Hamadani <mridahamadani@gmail.com>
Date:   Wed Apr 3 07:47:14 2024 +0000

    feat(Combinatorics/SimpleGraph): Girth is at least 3 (#11709)
    
    General lowerbound for girth, for example could be used to prove that girth equals 3 given 3 as an upperbound.
    
    
    
    Co-authored-by: Rida <106540880+Rida-Hamadani@users.noreply.github.com>

[33mcommit 5f4e6d8bbc670b24f90efc6cb1bf73a9222a8201[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Tue Apr 2 23:42:41 2024 +0000

    feat: pointwise scalar multiplication is monotone (#11809)
    
    Everywhere we have a `smul_mem_pointwise_smul` lemma, I've added this result.

[33mcommit 74bbb606c44ae4ce1a2ff1f8e3f3cee846365f28[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Tue Apr 2 17:45:07 2024 +0000

    chore(scripts): remove resolved `ERR_COP` style exceptions (#11854)
    
    This PR removes `ERR_COP` style exceptions that have been resolved in #11825.

[33mcommit a03d29ed6b6432c312aa45bb5325f2c140cd76f1[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Tue Apr 2 16:26:08 2024 +0000

    feat: small lemmas about moebius (#11770)

[33mcommit 68ab53e599abfdebcef550558f286f05ad91d509[m
Author: BGuillemet <benoit.guillemet@ens-paris-saclay.fr>
Date:   Tue Apr 2 16:26:07 2024 +0000

    feat: add `image_restrictPreimage` (#11640)
    
    - add the theorem `image_restrictPreimage`; use it to simplify the proof of `Set.restrictPreimage_isClosedMap`
    - add the equivalent for open maps `Set.restrictPreimage_isOpenMap`.
    - delete `IsClosedMap.restrictPreimage`, which duplicates `Set.restrictPreimage_isClosedMap`
    
    
    
    Co-authored-by: BGuillemet <115193742+BGuillemet@users.noreply.github.com>

[33mcommit 1fb63b468ac3fa2656f4094d6f745bb26bed0c41[m
Author: Floris van Doorn <fpvdoorn@gmail.com>
Date:   Tue Apr 2 15:35:38 2024 +0000

    refactor: golf proof using lmarginal (#10857)
    
    Co-authored-by: Heather Macbeth [25316162+hrmacbeth@users.noreply.github.com](mailto:25316162+hrmacbeth@users.noreply.github.com)

[33mcommit d001ff90d57716d88fdfaddd702ab60214ffee56[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Tue Apr 2 13:53:39 2024 +0000

    perf: speed up minkowskiBound_lt_boundOfDiscBdd (#11842)
    
    This saves several seconds on my machine, going from ~50k to ~27k heartbeats.

[33mcommit 921bb5007820b09b86ed9fce178671b31351f905[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Tue Apr 2 13:53:38 2024 +0000

    fix: align Int.norm_eq_abs with its mathlib3 meaning (#11841)

[33mcommit a3021aec7291bd30bb1063e15ecc2ac3cddba357[m
Author: Mitchell Lee <trivial171@gmail.com>
Date:   Tue Apr 2 13:07:31 2024 +0000

    feat: value of f (x + n * c), where f is antiperiodic with antiperiod c (#11436)
    
    Add `@[simp]` theorem `negOnePow_two_mul_add_one` to `Algebra.GroupPower.NegOnePow`, which states that `(2 * n + 1).negOnePow = -1`.
    
    Add theorems to `Algebra.Periodic` about the value of `f (x + n ‚Ä¢ c)`, `f (x - n ‚Ä¢ c)`, and `f (n ‚Ä¢ c - x)`, where we have `Antiperiodic f c`. All these theorems have variants for either `n : ‚Ñï` or `n : ‚Ñ§`, and they also have variants using `*` instead of `‚Ä¢` if the domain and codomain of `f` are rings.
    
    For all real numbers `x` and all integers `n`. deduce the following. All these theorems are in `Analysis.SpecialFunctions.Trigonometric.Basic`, they are not `@[simp]`, and they have a variation (using the notation `(-1) ^ n` instead of `n.negOnePow`) for natural number `n`.
    - `sin (x + n * œÄ) = n.negOnePow * sin x`
    - `sin (x - n * œÄ) = n.negOnePow * sin x`
    - `sin (n * œÄ - x) = -(n.negOnePow * sin x)`
    - `cos (x + n * œÄ) = n.negOnePow * cos x`
    - `cos (x - n * œÄ) = n.negOnePow * cos x`
    - `cos (n * œÄ - x) = n.negOnePow * cos x`

[33mcommit a2b6e2ea32a5417e672f947ac1a3536b96ee6730[m
Author: Fr√©d√©ric Marbach <66742248+frederic-marbach@users.noreply.github.com>
Date:   Tue Apr 2 12:35:27 2024 +0000

    chore(RingTheory): delete useless lemma (#11827)
    
    As discussed in https://github.com/leanprover-community/mathlib4/pull/11790 for the case of Lie derivations, it seems that this `map_sum` lemma is not useful since we can use the generic version.

[33mcommit 9ad9f6e3556cfda0977bea15a80aff898b77a662[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Tue Apr 2 11:51:10 2024 +0000

    feat: instances for actions of ulifted spaces (#11777)

[33mcommit ad7dd1ffaac83fe879ea6cb55b3b234db68e60c3[m
Author: Scott Morrison <scott@tqft.net>
Date:   Tue Apr 2 11:27:41 2024 +0000

    chore: try again with new contributor label (#11834)
    
    Add the `new-contributor` label if there are at most 5 exisiting PRs by this author. Also adds a CI status line "New Contributor Check (push) ‚Äî Found n PRs by this author." regardless.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 5a5e81abe58fd208a7a915f28ec01e9bc4904e71[m
Author: Scott Morrison <scott@tqft.net>
Date:   Tue Apr 2 09:53:40 2024 +0000

    chore(AlgebraicGeometry/Gluing): fix soon-to-be-broken proof (#11838)
    
    This proof had two `change`s added during porting, and these produce a massive timeout after the changes in https://github.com/leanprover/lean4/pull/3807.
    
    This PR replace the `change` with the appropriate `erw`, and is now fast before and after the change.
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit ae003d898c5f5910d4fc4fc283aa82ae0841734a[m
Author: Jeremy Tan Jie Rui <reddeloostw@gmail.com>
Date:   Tue Apr 2 09:53:39 2024 +0000

    feat: `findIdx` lemmas (#11808)
    
    Split from #9781.

[33mcommit 8d3a0438ab1d4671eda8ceadbef567fef4350c7a[m
Author: Bolton Bailey <bolton.bailey@gmail.com>
Date:   Tue Apr 2 09:53:38 2024 +0000

    refactor: Names the function of Equiv.piFinSuccAbove (#10545)
    
    Creates `extractNth` to do the opposite of `insertNth` for tuples. Rewrites the `Equiv` definition.
    
    
    
    Co-authored-by: Ya√´l Dillies <yael.dillies@gmail.com>

[33mcommit 23bc40b602065b88a76d624d04498360e4ec7b7c[m
Author: damiano <adomani@gmail.com>
Date:   Tue Apr 2 09:29:23 2024 +0000

    feat: add `mk_all` file (#11781)
    
    Typing `./scripts/mk_all.sh` updates the files
    ```
    Mathlib.lean
    MathlibExtras.lean
    Mathlib/Tactic.lean
    Counterexamples.lean
    Archive.lean
    ```
    so that they import all the available `.lean` files.
    
    [Zulip thread](https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/automatically.20generate.20ProjectName.2Elean/near/430236236)

[33mcommit 333e2d79fdaee86489af73dee919bc4b66957a52[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Tue Apr 2 00:30:38 2024 +0000

    chore(Data): solve `ERR_COP` style exceptions (#11825)
    
    This PR solves `ERR_COP` style exceptions by adding the copyright headers after having inspected the commit history of each file in Mathlib4 and in Mathlib3.

[33mcommit 69fafc8a239f537b290237775d43509b06d0cf51[m
Author: Scott Morrison <scott@tqft.net>
Date:   Tue Apr 2 00:06:05 2024 +0000

    chore: bump Std (#11833)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit d8d7e696a4c05914b5f2dbff8768541fe1dd4b39[m
Author: Fr√©d√©ric Marbach <66742248+frederic-marbach@users.noreply.github.com>
Date:   Mon Apr 1 21:53:17 2024 +0000

    feat(Algebra/Lie): define derivations on Lie algebras (#11790)
    
    This defines derivations on Lie algebras. The current definition of [Derivation](https://leanprover-community.github.io/mathlib4_docs/Mathlib/RingTheory/Derivation/Basic.html#Derivation) is restricted to commutative associative algebras, and thus cannot be used to manipulate derivations on Lie algebras. As discussed in [this Zulip thread](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Derivations.20on.20Lie.20algebras), we thus give a parallel definition of a `LieDerivation` structure, which is specific to derivations on Lie algebras.
    
    This PR is focused on the definition of this structure and the first associated properties. It adds a new file `Algebra.Lie.Derivation.Basic` which was mostly obtained by a large copy-paste of file `RingTheory.Derivation.Basic`. I report below the changes I made with respect to this other version.
    
    - Remove all `#align` directives
    - Adapt import statements
    - Add new definition of `LieDerivation`
    - Replace `namespace Derivation` with `namespace LieDerivation`
    - Remove `open Algebra`
    - Replace `Algebra A` with `LieAlgebra L` everywhere
    - Replace `Derivation R A M` with `LieDerivation R L M` everywhere
    - Delete field `map_one_eq_zero'` in instances, since we don't require it in the definition of Lie derivation
    - Adjust `simp only` tactics for `leibniz'` field in instances
    - Add lemma `apply_lie_eq_add` to restore usual Leibniz rule in Lie algebras (since our definition relies on left actions, so has a minus sign).
    - There is no unit 1 in a Lie algebra. We delete all related theorems
      - `map_one_eq_zero` (there is no 1 in a Lie algebra)
      - `map_coe_nat` (there is no "n : Nat" in a Lie algebra)
      - `map_coe_int` (there is no "n : Int" in a Lie algebra)
      - `leibniz_pow` (there is "power" in a Lie algebra)
      - `leibniz_of_mul_eq_one` (there is no [a,b]= 1 in a Lie algebra)
      - `leibniz_inv` and `leibniz_invOf` (no inverse in a Lie algebra)
      - `map_algebraMap` (no scalars in the Lie algebra)
    - Derivation has an `mk'` constructor to bypass the `map_one_eq_zero'` field in an `AddCancelCommMonoid M`. Since we don't require this property for Lie derivations, we delete everything related:  `mk'`, `coe_mk'`, `coe_mk'_linearMap` (the whole `section Cancel`)
    - Derivations have a theorem `eqOn_adjoin` to prove that if two derivations are equal on a set, they are equal on the subalgebra spanned by this set. We write it as `eqOn_lieSpan`. Since the proof of this result relied on an induction principle `RingTheory.Adjoin.Basic.adjoin_induction`, we needed a similar principle for Lie spans. We added it as the `Algebra.Lie.Submodule.lieSpan_induction` theorem in the `Algebra.Lie.Submodule` file.
    - Add a `SMulBracketCommClass` class to encode commutativity of scalar multiplication and left Lie action (as a substitute for `SMulCommClass S L M`), see `section Scalar`. Introduce instances for `S = Nat` and `S = Int`.
    - Unwrap useless section, useless variables
    - Delete `compAlgebraMap` theorem, related with a tower of algebras, since a Lie algebra cannot serve as a scalar field for another one.
    - Delete `section Pushforward` (and everything inside), as it was related to composing an A-linear map with a derivation. While this works when A is an associative algebra, one cannot use a Lie algebra in this role since it is not associative.
    - Could not figure out what the equivalent instance of `IsCentralScalar S (Derivation R A M)` for a Lie derivation should be, so I skipped this instance.

[33mcommit 2a4a37a6f64abee27370e9012d067c7a02656445[m
Author: Markus Himmel <markus@himmel-villmar.de>
Date:   Mon Apr 1 20:23:46 2024 +0000

    chore: add pp_dot to Functor.unop (#11823)

[33mcommit 16f050086b364e6b67ec3793ef652238271f5411[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Mon Apr 1 18:06:47 2024 +0000

    feat: cleanup file on derivative of Fourier transform (#11779)
    
    Rename `mul_L` to `fourierSMulRight` for predictability, expand the file-level docstring, extract a few lemmas from proofs, change `fourier_integral` to `fourierIntegral` in a few lemma names. There is essentially no new mathematical content. This is a preparation for the study of higher order derivatives in #11776.

[33mcommit 9d0b2332dd1c00199584abe8978d657648fd44e5[m
Author: Jeremy Tan Jie Rui <reddeloostw@gmail.com>
Date:   Mon Apr 1 16:53:37 2024 +0000

    refactor: move `SimpleGraph.Iso.card_edgeFinset_eq` to untangle imports (#11817)
    
    The single and currently unused theorem `card_edgeFinset_eq` in `Combinatorics.SimpleGraph.Maps` causes a dependency of that file on `Combinatorics.SimpleGraph.Finite`, which is problematic because the key concepts of `Maps` don't depend on graph finiteness at all. This commit moves the offending theorem to `Operations` in anticipation of #9317.

[33mcommit 08686b25d8d979a3e619258fd8e172dc78d863fa[m
Author: Ruben Van de Velde <scott.morrison@gmail.com>
Date:   Mon Apr 1 16:53:36 2024 +0000

    chore: avoid Ne.def (adaptation for nightly-2024-03-27) (#11813)

[33mcommit ab5ca9594533c178812f29c01a6eeb34a9a89c5a[m
Author: Antoine Chambert-Loir <antoine.chambert-loir@u-paris.fr>
Date:   Mon Apr 1 16:53:35 2024 +0000

    feat(Mathlib/RingTheory/Ideal/Operations): simplify definition of radical (#11723)
    
    * `add_pow_mem_of_pow_mem_of_le` says that (a + b) ^ k belongs to an ideal I if a ^ m and b ^ n belong to that ideal, and `m + n ‚â§ k + 1`.
    * `Commute.add_pow_of_add_le_succ_eq_zero_of_pow_eq_zero` says that `(a + b) ^ k = 0` if `a ^ m = 0`, `b^ n = 0`, and `m + n ‚â§ k + 1`.
    * this is used to simplify the definition of docs#Ideal.radical and the definition of docs#Commute.isNilpotent_add

[33mcommit 66c48cebf46e233015e3540fcadeff330360fa51[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Mon Apr 1 16:13:22 2024 +0000

    feat: bundled versions of two operations on continuous multilinear maps (#11775)
    
    We provide versions of `smulRight` and `compContinuousLinearMap` as a continuous bilinear (resp multilinear) map.

[33mcommit 8667e5da7a8163884a409b24fbffe8b1ccb8c8f4[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Apr 1 15:04:41 2024 +0000

    feat(Topology/Maps): add `*.of_subsingleton` and `*.of_isEmpty` (#11818)
    
    Also use `OpenEmbedding.of_subsingleton`
    to golf `AlgebraicGeometry.isOpenImmersion_of_isEmpty`.

[33mcommit b7ca9253641877128f9c6f4de0e91e74b3b129cd[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Apr 1 09:43:16 2024 +0000

    feat(Option/Basic): add 2 trivial lemmas (#11641)

[33mcommit 126ee583d7457633ce91670b38c4a9818cc55830[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Apr 1 09:16:42 2024 +0000

    chore(AkraBazzi): fix `Fintype`/`Finite` (#11816)

[33mcommit 64528268b3c2cf578639bc479828882a9ecd3a82[m
Author: Anatole Dedecker <anatolededecker@gmail.com>
Date:   Sun Mar 31 21:48:30 2024 +0000

    feat: add Tendsto.fst, Tendsto.snd, Tendsto.apply and nhds versions (#11812)
    
    - Add `Tendsto.fst`, `Tendsto.snd` and `Tendsto.apply` (these are about product of filters)
    - Move the current `Tendsto.apply` to `Tendsto.apply_nhds`, and add `Tendsto.fst_nhds` and `Tendsto.snd_nhds` (these are about neighborhoods in a product space)

[33mcommit 522c6682bfefe2c3ee49467c5d8fc4e4a903d9c3[m
Author: Mitchell Lee <trivial171@gmail.com>
Date:   Sun Mar 31 21:48:29 2024 +0000

    chore: move Coxeter groups file (#11804)
    
    Move `GroupTheory.SpecificGroups.Coxeter` to `GroupTheory.Coxeter.Basic`.

[33mcommit 6ed34ab602385de4b7ae8cdd9cb613dbbd18fce3[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sun Mar 31 21:48:28 2024 +0000

    chore(DFinsupp/Basic): drop a `DecidableEq` assumption (#11795)
    
    Golf `DFinsupp.finite_support`,
    drop an unneeded `DecidableEq` assumption.

[33mcommit c5b051636389880a38d183e3bffae65579ec815a[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sun Mar 31 20:40:04 2024 +0000

    chore(Finset/Basic): drop an unneeded `DecidableEq` assumption (#11796)

[33mcommit a87bb68046358de80a9d1499dd2312580add1e10[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sun Mar 31 17:44:42 2024 +0000

    chore(SimpleGraph/Clique): drop a `DecidableEq` assumption (#11811)

[33mcommit 9158f323bd15bc3bab5209558cb9bffa1f9f03ec[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Sun Mar 31 00:56:41 2024 +0000

    chore(Data/List): Depend less on big operators (#11741)
    
    * Make `Data.List.Count`, `Data.List.Dedup`, `Data.List.ProdSigma`, `Data.List.Range`, `Data.List.Rotate`, `Data.List.Zip` not depend on `Data.List.BigOperators.Basic`.
    * As a consequence, move the big operators lemmas that were in there to `Data.List.BigOperators.Basic`. For the lemmas that were `Nat`-specific, keep a version of them in the original file but stated using `Nat.sum`.
    * To help with this, add `Nat.sum_eq_listSum (l : List Nat) : Nat.sum l = l.sum`.

[33mcommit f4bf34decd44083e3173b759d64f0305c5255048[m
Author: Mitchell Lee <trivial171@gmail.com>
Date:   Sat Mar 30 22:01:45 2024 +0000

    feat: Infinite products (#11733)
    
    Last year, YaelDillies made a pull request to mathlib3 that unfortunately never got merged in: https://github.com/leanprover-community/mathlib/pull/18405. This is the mathlib4 version of that pull request.
    
    We define arbitrarily indexed products in a commutative monoid with a topology. This is done by "multiplicativizing" the currently existing definitions and theorems about arbitrarily indexed sums. That is, the existing code is rewritten in the multiplicative setting, and the original definitions and theorems are recovered using `@[to_additive]`. Please see this thread on Zulip for information on why this approach was chosen: https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Infinite.20products
    
    As YaelDillies wrote in the description of https://github.com/leanprover-community/mathlib/pull/18405, there are a few small technical issues that arise when directly "multiplicativizing" theorems in this way:
    - I have renamed `cauchySeq_finset_iff_vanishing` to `cauchySeq_finset_iff_sum_vanishing` to make the name multiplicativizable. This is slightly different from the name `cauchy_seq_finset_sum_iff_vanishing` that YaelDillies used, and it is meant to parallel the existing name `cauchySeq_finset_iff_tsum_vanishing`.
    - Currently, on master, there is a theorem called `tsum_sum` about taking the `tsum` of a `sum`, and a theorem called `tsum_prod` about taking a `tsum` on a product of two index sets. I have called the multiplicative versions `tprod_of_prod` and `tprod_prod`. This is slightly different from the names `tprod_prod''` and `tprod_prod` that YaelDillies used. eric-wieser suggested renaming `tsum_prod` to `tsum_prod_index` to get around this issue, which I can do in a separate pull request.

[33mcommit 1b40c7bc504e90d10618cf2c9fe3beb25659debb[m
Author: Ruben Van de Velde <scott.morrison@gmail.com>
Date:   Sat Mar 30 20:20:10 2024 +0000

    chore: avoid Ne.def (adaptation for nightly-2024-03-27) (#11801)

[33mcommit 573fa600958f0794e82c2daab049a218ad4df3cd[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Sat Mar 30 17:52:57 2024 +0000

    chore: mark EventuallyEq.refl as simp (#11475)
    
    Fixes #11441.

[33mcommit 345188e4a9f9e68552737b8e2ea2816eb54ddb6a[m
Author: EtienneC30 <etienne.marion30@gmail.com>
Date:   Sat Mar 30 17:04:27 2024 +0000

    feat: new lemmas about proper maps in Mathlib.Topology.ProperMap (#11754)
    
    These are new lemmas added to the file about proper maps.
    
    
    
    Co-authored-by: Etienne Marion <etienne.marion@ens-lyon.fr>
    Co-authored-by: EtienneC30 <66847262+EtienneC30@users.noreply.github.com>

[33mcommit a77f5537068e761bc67a11b112ef6f6f625417af[m
Author: Fr√©d√©ric Marbach <66742248+frederic-marbach@users.noreply.github.com>
Date:   Sat Mar 30 13:25:50 2024 +0000

    feat(Algebra/Free): add length_pos lemma for free magmas (#11783)
    
    This adds a `length_pos` lemma for multiplicative and additive free magmas.
    
    Indeed, it sometimes happens in proofs that we need to know that the length of any element is indeed strictly positive.

[33mcommit 956f433e34a531a732b3aebd894f103310eca1a0[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Sat Mar 30 08:23:24 2024 +0000

    feat: add `by volume_tac` to get a default measure in `AEStronglyMeasurable`  (#11771)
    
    This is already the case for `Integrable` and `AEMeasurable`.

[33mcommit 9b795560ce6e7bdf0aa2054b02bf2b18c5681bb0[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Sat Mar 30 07:23:09 2024 +0000

    feat: when a function has a Taylor series, then its iterated derivative is given by the Taylor series (#11772)
    
    We already have the localized version to a set, but not the global version.
    
    Also rename the localized version to a better name.

[33mcommit 9e78f5c2964d7d675d83ab46dab38df53a632083[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Fri Mar 29 22:03:27 2024 +0000

    chore: remove Complex/RCLike bit0/1 lemmas (#11414)
    
    These were interesting when they worked on number literals, which is no longer the case in lean4.

[33mcommit b5cf43efa9f11d617b3364daf7339797aa21176d[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Fri Mar 29 21:36:01 2024 +0000

    feat(AlgebraicTopology): the monoidal category structure on simplicial sets (#11396)
    
    If a category `C` has chosen finite products, then the functor category `J ‚•§ C` also. In particular, the category of simplicial sets is endowed with the monoidal category given by the explicit terminal object and binary products.
    
    Simplifications lemmas have also been added in the context of categories with chosen finite products. For terminal objects in such categories, the terminal object is given as a limit cone of `Functor.empty.{0} C` rather than `Functor.empty.{v} C` so as to be consistent with the limits API for terminal objects.
    
    Co-authored-by: Jack McKoen <mckoen@ualberta.ca>

[33mcommit 160fb23c2fdddeaf4b24ac532134de4535bc1dae[m
Author: Iv√°n Renison <85908989+IvanRenison@users.noreply.github.com>
Date:   Fri Mar 29 19:17:43 2024 +0000

    feat: `Not` is involutive (#11192)

[33mcommit 6bd93cd5e5b9163e2ce7f04a5c6cc816a302b580[m
Author: Jz Pan <acme_pjz@hotmail.com>
Date:   Fri Mar 29 17:32:29 2024 +0000

    feat(RingTheory/Flat/Basic): add `lTensor_preserves_injective_linearMap` (#11748)
    
    also move `lTensor_inj_iff_rTensor_inj` to `LinearMap`

[33mcommit 335f65c7640c79852ffda7dfccc0a01fec359026[m[33m ([m[1;31morigin/cyclic_end[m[33m)[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Fri Mar 29 15:59:37 2024 +0000

    chore(Data/Finset/Basic): Depend on less order theory (#11732)
    
    Move `Finset.biUnion` and `Finset.disjiUnion` to a new file so that `Data.Finset.Basic` doesn't depend on that much order theory.

[33mcommit 056bc615bbf0d8aadfe57132578f239b6f17e932[m
Author: Command-Master <commandmaster2017@gmail.com>
Date:   Fri Mar 29 15:34:03 2024 +0000

    chore(Combinatorics/Additive/PluenneckeRuzsa): add @to_additive to various formulations of Ruzsa's triangle inequality (#11766)
    
    Add `@to_additive` to `card_mul_mul_le_card_div_mul_card_div`, `card_div_mul_le_card_mul_mul_card_div` and `card_sub_mul_card_le_card_sub_mul_card_add` and correct their documentation.

[33mcommit e899dfee59d826612b9521e77e8f28e1b11e83a1[m
Author: Rida <mridahamadani@gmail.com>
Date:   Fri Mar 29 15:08:09 2024 +0000

    feat(Combinatorics/SimpleGraph): A graph has 3-clique iff it has a cycle of length 3 (#11434)
    
    This is nice to have because when combined with `is3Clique_iff`, we will be able to prove that a graph has a cycle by just proving that 3 vertices are pairwise adjacent.
    
    
    
    Co-authored-by: Rida <106540880+Rida-Hamadani@users.noreply.github.com>

[33mcommit 575260dec33e8b6db747b6985dde13902f2da094[m
Author: Edgar Costa <edgarc@mit.edu>
Date:   Fri Mar 29 10:05:56 2024 +0000

    feat: add a simp attribute to isUnit_iff_ne_zero (#11756)

[33mcommit 1c3231190ef98736c0f1f37d0a3d92403c28de79[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Fri Mar 29 10:05:55 2024 +0000

    feat(CategoryTheory/Localization): dualize results for right calculus of fractions (#11721)
    
    In this PR, the results for the left calculus of fractions are dualized in order to obtain similar results for the right calculus of fractions

[33mcommit 3b9115ffc3cae6fbd8bd8d17a8c422e2e5870f9d[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Fri Mar 29 10:05:54 2024 +0000

    feat(Polynomial): When the trailing degree is zero (#11655)
    
    Characterise when `trailingDegree p = 0` and `natTrailingDegree p = 0`. Also fix a few names.

[33mcommit fedc4ae3b60769804326a68089577626324666d9[m
Author: Johan Commelin <johan@commelin.net>
Date:   Fri Mar 29 10:05:53 2024 +0000

    chore(Polynomial/Derivative): golf derivative_mul (#11315)

[33mcommit 783b6bc9b8985c33ebb3f699094f4931b205e956[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Fri Mar 29 09:13:20 2024 +0000

    move(RCLike): Move out of `Data` (#11753)
    
    `RCLike` is an analytic typeclass, hence should be under `Analysis`

[33mcommit e6b2fea1828a87f02c64f444ea81834994128a1e[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Fri Mar 29 09:13:19 2024 +0000

    feat: Cardinal.mk_insert_le (#11749)

[33mcommit 3cecb823a74ed737c6ebc115e515eba649ec7715[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Fri Mar 29 08:47:54 2024 +0000

    chore(SimpleGraph): fix 3 `DecidableEq` assumptions (#11762)
    
    Found by a WIP linter in #10235

[33mcommit e89f285430f9da1529f731deb0fe63705a7daefb[m
Author: Mario Carneiro <mcarneir@andrew.cmu.edu>
Date:   Fri Mar 29 08:24:42 2024 +0000

    fix: shake: consider additions in downstream mode (#11763)
    
    As [reported on Zulip](https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/Tree.20shaking/near/430215312).
    
    
    
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>

[33mcommit f8bc0b20b821c72d560e86b296cc8360566ffb3d[m
Author: damiano <adomani@gmail.com>
Date:   Fri Mar 29 04:50:16 2024 +0000

    feat: `dupNamespace` as a syntax linter (#11154)
    
    An implementation of the `dupNamespace` from `Std` as a syntax linter.  The linter emits a warning for declarations that have a repeated, consecutive namespace:
    * `Nat.Nat.foo` triggers the linter;
    * `Nat.foo.Nat` does *not* trigger the linter.
    
    *Note.* This linter will not detect duplication in namespaces of autogenerated declarations (other than the one whose `declId` is present in the source declaration).
    
    [Zulip discussion](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/.60dupNamespace.60.20linter)
    
    The linter found
    ```lean
    private theorem Seminorm.Seminorm.isLUB_sSup ...
    ```
    that is skipped by the environment `dupNamespace` linter.

[33mcommit 57f72eeadf0c1c66a15f00cd415908383e37bb1d[m
Author: Riccardo Brasca <riccardo.brasca@gmail.com>
Date:   Thu Mar 28 18:15:53 2024 +0000

    feat: add card_eq_NrRealPlaces_add_NrComplexPlaces (#11745)
    
    We add `card_eq_NrRealPlaces_add_NrComplexPlaces: Fintype.card (InfinitePlace K).card =  NrRealPlaces K + NrComplexPlaces K` for a number field `K`.

[33mcommit 3959ff3cacbf10f6e5f202040fb126fef71db5fc[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Thu Mar 28 18:15:52 2024 +0000

    chore(SetTheory/Ordinal): reduce some open's; add section headers (#11596)

[33mcommit 485ed3cc2aa43a1642590b27c5fa556c442d1a33[m
Author: Josha Dekker <114015169+JADekker@users.noreply.github.com>
Date:   Thu Mar 28 18:15:51 2024 +0000

    feat : define CardinalInterFilter (#10531)
    
    CardinalInterFilter generalizes CountableInterFilter to allow for a specific cardinality, where the filter must be stable under intersections over a number of sets lower than this cardinality.
    
    Prepares the way for K-Lindel√∂f spaces.

[33mcommit d1a1aa1bc26d9674e4202321d4ae6ce7f3003506[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Thu Mar 28 17:08:11 2024 +0000

    chore: move some aliases earlier (#11122)

[33mcommit f09ccf67dae82f9c6a8bafa478949ac9cb871ad7[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Thu Mar 28 15:48:48 2024 +0000

    move(Data/List/BigOperators): Move to `Algebra.BigOperators.List` (#11729)
    
    This is algebra and should be foldered as such.

[33mcommit bb349f30dee0118f228d0a40db42e1985ae96dba[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Thu Mar 28 11:53:50 2024 +0000

    chore: Reduce scope of `LinearOrderedCommGroupWithZero` (#11716)
    
    Reconstitute the file `Algebra.Order.Monoid.WithZero` from three files:
    * `Algebra.Order.Monoid.WithZero.Defs`
    * `Algebra.Order.Monoid.WithZero.Basic`
    * `Algebra.Order.WithZero`
    
    Avoid importing it in many files. Most uses were just to get `le_zero_iff` to work on `Nat`.
    
    Before
    ![pre_11716](https://github.com/leanprover-community/mathlib4/assets/14090593/f7296277-67e3-47b1-9ecf-33f84ea11010)
    
    After
    ![post_11716](https://github.com/leanprover-community/mathlib4/assets/14090593/1aa508ce-3f52-485d-b251-4127dd208bdc)

[33mcommit 47a76467fe04e123f8b4721c498686ae6c39b0c0[m
Author: Jujian Zhang <jujian.zhang1998@outlook.com>
Date:   Thu Mar 28 10:26:54 2024 +0000

    refactor(Order/RelSeries): Use `RelHom` in `RelSeries.map` (#11730)
    
    split from #11147

[33mcommit f4401853a6ba7f54ad81a31749dd0063aabcad0c[m
Author: judithludwig <150042763+judithludwig@users.noreply.github.com>
Date:   Thu Mar 28 10:26:53 2024 +0000

    doc(RingTheory/Flat/Stability): fix docstring in composition (#11717)
    
    Corrects docstring on strategy to show flatness is stable under composition.

[33mcommit f9c49c900309c2c29772bc914f511b7f3ecd811b[m
Author: Jz Pan <acme_pjz@hotmail.com>
Date:   Thu Mar 28 10:26:52 2024 +0000

    feat(LinearAlgebra/DirectSum/Finsupp): add some more variants of `finsuppTensorFinsupp` (#11598)
    
    - add `finsuppTensorFinsuppLid`, `finsuppTensorFinsuppRid` as well as their simp lemmas
    - make `finsuppTensorFinsupp'` a special case of `finsuppTensorFinsuppLid`
    - add `TensorProduct.lid_eq_rid`

[33mcommit 9a3feeaee71c897343c76f794bd5f65bb640a45c[m
Author: Antoine Chambert-Loir <antoine.chambert-loir@u-paris.fr>
Date:   Thu Mar 28 10:26:51 2024 +0000

    change the order of operation in zsmulRec and nsmulRec (#11451)
    
    We change the following field in the definition of an additive commutative monoid:
    ```diff
     nsmul_succ : ‚àÄ (n : ‚Ñï) (x : G),
    -  AddMonoid.nsmul (n + 1) x = x + AddMonoid.nsmul n x
    +  AddMonoid.nsmul (n + 1) x = AddMonoid.nsmul n x + x
    ```
    where the latter is more natural
    
    We adjust the definitions of `^` in monoids, groups, etc.
    Originally there was a warning comment about why this natural order was preferred
    
    > use `x * npowRec n x` and not `npowRec n x * x` in the definition to make sure that
    > definitional unfolding of `npowRec` is blocked, to avoid deep recursion issues.
    
    but it seems to no longer apply.
    
    Remarks on the PR :
    * `pow_succ` and `pow_succ'` have switched their meanings.
    * Most of the time, the proofs were adjusted by priming/unpriming one lemma, or exchanging left and right; a few proofs were more complicated to adjust.
    * In particular, [Mathlib/NumberTheory/RamificationInertia.lean] used `Ideal.IsPrime.mul_mem_pow` which is defined in [Mathlib/RingTheory/DedekindDomain/Ideal.lean]. Changing the order of operation forced me to add the symmetric lemma `Ideal.IsPrime.mem_pow_mul`.
    * the docstring for Cauchy condensation test in [Mathlib/Analysis/PSeries.lean] was
    mathematically incorrect, I added the mention that the function is antitone.

[33mcommit 43618f93e8839f1867931b797dd8ae88d53dd622[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Thu Mar 28 10:26:50 2024 +0000

    chore: Rename `IsROrC` to `RCLike` (#10819)
    
    `IsROrC` contains data, which goes against the expectation that classes prefixed with `Is` are prop-valued. People have been complaining about this on and off, so this PR renames `IsROrC` to `RCLike`.

[33mcommit 4347fcd1eb22abd58825b25eb0110ea8b8414c7f[m
Author: blizzard_inc <thrashy4inbox@gmail.com>
Date:   Thu Mar 28 10:26:49 2024 +0000

    feat (Topology/EMetricSpace): ext lemmas for Extended metric classes (#10813)
    
    
    previously the `ext` tactic would fail for these classes. now it won't.

[33mcommit e18e9225ee93a51b683ef93d9e12b4300aabf5d4[m
Author: Riccardo Brasca <riccardo.brasca@gmail.com>
Date:   Thu Mar 28 10:26:48 2024 +0000

    feat: characterize roots of unity in cyclotomic extensions (#10710)
    
    We add `IsPrimitiveRoot.exists_pow_or_neg_mul_pow_of_isOfFinOrder`: If `x` is a root of unity (spelled as `IsOfFinOrder x`) in an `n`-th cyclotomic extension of `‚Ñö`, where `n` is odd, and `Œ∂` is a primitive `n`-th root of unity, then there exists `r < n` such that `x = Œ∂^r` or `x = -Œ∂^r`.
    
    From flt-regular
    
    - [x] depends on: #11235

[33mcommit d2f16b1bef1031d71e1591e1bdb1350839926ad5[m
Author: Arend Mellendijk <arend.mellendijk@gmail.com>
Date:   Thu Mar 28 10:26:46 2024 +0000

    feat(NumberTheory/ArithmeticFunction): Basic lemmas about `Œº^2` (#10672)
    
    Basic results stating `Œº^2` is the indicator function for squarefree natural numbers. This came up during my Selberg sieve project.
    
    
    
    Co-authored-by: Arend Mellendijk <FLDutchmann@users.noreply.github.com>

[33mcommit ea083105e5450c53be6ba297f51ff1aa04f8ce7e[m
Author: David Loeffler <d.loeffler.01@cantab.net>
Date:   Thu Mar 28 10:00:52 2024 +0000

    feat (NumberTheory/LSeries): Dirichlet series as Mellin transforms  (#11190)
    
    Show that the Mellin transform of a power series in `exp (-t)` is the corresponding Dirchlet series.

[33mcommit b3744d540c953fdd339d5e866f9978dac01ff7dd[m
Author: Filippo A. E. Nuccio <filippo.nuccio@univ-st-etienne.fr>
Date:   Wed Mar 27 19:08:28 2024 +0000

    feat(Data/Polynomial/FieldDivision): add two lemmas about normalization of X (#11720)
    
    Add two lemmas `normUnit_X` and `X_eq_normalize` on the normalization unit for the monoid `X`.

[33mcommit 171abc8c44b7e9cbed676d1bdc2bc29a3fbd5ec9[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Wed Mar 27 17:25:17 2024 +0000

    feat(Algebra/GroupWithZero): remove already existing lemmas (#11691)
    
    Undo #11677 since we have found out that the lemmas
    
    https://github.com/leanprover-community/mathlib4/blob/044f1333d4e273d0d45e7fdeaf07266d7e043c32/Mathlib/Algebra/GroupWithZero/Divisibility.lean#L171-L179
    
    already exist in the same file with different names `mul_dvd_mul_iff_left` and `mul_dvd_mul_iff_right`:
    
    https://github.com/leanprover-community/mathlib4/blob/0f2ac6785f4ecb39c798a30eee01dafa63c828d7/Mathlib/Algebra/GroupWithZero/Divisibility.lean#L46-L58

[33mcommit 4e40a0d0fb2d8b3c1c0c8df04b70f2d9e4b813a6[m
Author: R√©my Degenne <Remydegenne@gmail.com>
Date:   Wed Mar 27 15:04:15 2024 +0000

    feat: Radon-Nikodym theorem for transition kernels (#10950)
    
    Let `Œ≥` be a countably generated measurable space and `Œ∫ Œ∑ : kernel Œ± Œ≥` be finite kernels. We build a function `rnDeriv Œ∫ Œ∑ : Œ± ‚Üí Œ≥ ‚Üí ‚Ñù‚â•0‚àû` jointly measurable on `Œ± √ó Œ≥` and a kernel `singularPart Œ∫ Œ∑ : kernel Œ± Œ≥` such that `Œ∫ = withDensity Œ∑ (rnDeriv Œ∫ Œ∑) + singularPart Œ∫ Œ∑` and for all `a : Œ±`, `singularPart Œ∫ Œ∑ a ‚üÇ‚Çò Œ∑ a` .

[33mcommit 89e669ab6eb35e2cd874e6ff5771e8ad3e804b3b[m
Author: R√©my Degenne <Remydegenne@gmail.com>
Date:   Wed Mar 27 14:40:14 2024 +0000

    refactor: use CdfToKernel in CondCdf (#11529)
    
    The recently added file CdfToKernel contains generalizations of many lemmas in the file CondCdf. This PR refactors CondCdf to use the new results.
    
    
    
    Co-authored-by: R√©my Degenne <remydegenne@gmail.com>

[33mcommit 59a00afaa6326219c9fcc9016f4b4305bdd0972f[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Wed Mar 27 13:47:10 2024 +0000

    chore(Probability/Kernel/CondCdf): cleanup (#10635)
    
    - [x] depends on: #10298
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit 3713a3fe88bcce456d945daa23801f0717e5ee7c[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Wed Mar 27 12:36:45 2024 +0000

    chore(Data/List): Use Std lemmas (#11711)
    
    Make use of `Nat`-specific lemmas from Std rather than the general ones provided by mathlib. Also reverse the dependency between `Multiset.Nodup`/`Multiset.dedup` and `Multiset.sum` since only the latter needs algebra. Also rename `Algebra.BigOperators.Multiset.Abs` to `Algebra.BigOperators.Multiset.Order` and move some lemmas from `Algebra.BigOperators.Multiset.Basic` to it.
    
    The ultimate goal here is to carve out `Data`, `Algebra` and `Order` sublibraries.

[33mcommit 48efc23ffc2f9f5f5682441d05458c248c7d2912[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Wed Mar 27 11:32:27 2024 +0000

    chore(Data/Nat/Factorial): Use Std lemmas (#11715)
    
    Make use of `Nat`-specific lemmas from Std rather than the general ones provided by mathlib.
    
    The ultimate goal here is to carve out `Data`, `Algebra` and `Order` sublibraries.

[33mcommit 85b063b5c24e3b758e3ab3a735945454135eb095[m
Author: Filippo A. E. Nuccio <filippo.nuccio@univ-st-etienne.fr>
Date:   Wed Mar 27 11:32:26 2024 +0000

    feat(DedekindDomain.Ideal): remove Domain assumption from DedekindDomain (#11527)
    
    Probably because in `mathlib4` the definition `IsDedekindDomain` *extends* `Domain`, and this was not the case in `mathlib3`, there are unused hypothesis of the form
    ```lean
    variable [IsDomain R] [IsDedekindDomain R]
    ```
    and this PR removes the first one, that can be inferred by the second, both in variable declarations and in theorem/definition assumptions. A regex search has been performed on the library to search for all occurrences and none is left.

[33mcommit 6b82a470e7b76c1ca489acfafa44ea01737b7da2[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Wed Mar 27 10:32:31 2024 +0000

    feat: add a `MulDistribMulAction` instance for `DomMulAct` (#11345)
    
    [Zulip thread](https://leanprover.zulipchat.com/#narrow/stream/217875-Is-there-code-for-X.3F/topic/.E2.9C.94.20the.20permutation.20on.20indexed.20product.20group/near/426212874)

[33mcommit 137f088df28d0c8dcfb0fdd0b022cf2a5a3e72d7[m
Author: Thomas Browning <tb65536@uw.edu>
Date:   Wed Mar 27 09:30:56 2024 +0000

    refactor(Algebra/GroupPower/IterateHom): Use `HomClass` to generalize `map_iterate` statements (#11266)
    
    This PR uses the `HomClass` architecture to generalize the `map_iterate` statements in `Algebra/GroupPower/IterateHom.lean`.

[33mcommit 5bc68d9f5a6c4eca4ec422e6c5f9674e55ce8926[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Tue Mar 26 23:09:39 2024 +0000

    chore(Data/Nat): Use Std lemmas (#11661)
    
    Move basic `Nat` lemmas from `Data.Nat.Order.Basic` and `Data.Nat.Pow` to `Data.Nat.Defs`. Most proofs need adapting, but that's easily solved by replacing the general mathlib lemmas by the new Std `Nat`-specific lemmas and using `omega`.
    
    ## Other changes
    
    * Move the last few lemmas left in `Data.Nat.Pow` to `Algebra.GroupPower.Order`
    * Move the deprecated aliases from `Data.Nat.Pow` to `Algebra.GroupPower.Order`
    * Move the `bit`/`bit0`/`bit1` lemmas from `Data.Nat.Order.Basic` to `Data.Nat.Bits`
    * Fix some fallout from not importing `Data.Nat.Order.Basic` anymore
    * Add a few `Nat`-specific lemmas to help fix the fallout (look for `nolint simpNF`)
    * Turn `Nat.mul_self_le_mul_self_iff` and `Nat.mul_self_lt_mul_self_iff` around (they were misnamed)
    * Make more arguments to `Nat.one_lt_pow` implicit

[33mcommit 7151d90b96e43cfcfb9dea7f95fb33887b48b783[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Tue Mar 26 22:45:57 2024 +0000

    style: add missing spaces between a tactic name and its arguments (#11714)
    
    After the `(d)simp` and `rw` tactics - hints to find further occurrences welcome.
    
    [zulip discussion](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Style.3A.20spacing.20between.20tactic.20name.20and.20arguments)
    
    Co-authored-by: @sven-manthe

[33mcommit eaede86aa7777630a3826cd8f3fbf0cbaafa53e6[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Tue Mar 26 18:12:24 2024 +0000

    feat(Algebra/Divisibility): generalise `mul_dvd_mul_left` to `Monoid` (#11695)
    
    `mul_dvd_mul_left` was implemented for `CommMonoid`.
    
    We have generalised it to `Monoid`.

[33mcommit 6983af433995df0e12420e749e8b9ff197e2c16c[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Tue Mar 26 16:49:33 2024 +0000

    chore(CategoryTheory): add some trivial API lemmas for `Zag` and `Zigzag` (#11696)

[33mcommit a492bebc97779a7a3f8a5dddf7b2672296432d75[m
Author: Rida <mridahamadani@gmail.com>
Date:   Tue Mar 26 15:23:53 2024 +0000

    feat(Combinatorics/SimpleGraph): Cycles length is at least 3 (#11693)
    
    Check [this](https://leanprover.zulipchat.com/#narrow/stream/252551-graph-theory/topic/.E2.9C.94.20Cycles.20lengths.20is.20at.20least.203) conversation on zulip.

[33mcommit 84843a286fb71b367c10839a5757818e867265d4[m
Author: damiano <adomani@gmail.com>
Date:   Tue Mar 26 15:23:51 2024 +0000

    fix: use username to label new contributors (#11690)
    
    [Zulip message](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/.60new-contributor.60.20labelling.20workflow.20broken.3F/near/429629879)

[33mcommit 588c277e312caa7f9db53efbc1624a9bb79eeabc[m
Author: Matthew Robert Ballard <matt@mrb.email>
Date:   Tue Mar 26 15:23:50 2024 +0000

    perf(Group.Units): factor out data fields  (#11332)
    
    We factor out data fields to avoid unecessary unfolding.
    
    
    
    Co-authored-by: Matthew Robert Ballard <100034030+mattrobball@users.noreply.github.com>

[33mcommit 78660691e262ccf3c22390bda656410f4c7e7356[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Tue Mar 26 15:23:49 2024 +0000

    feat(Data/Set/Intervals/Disjoint): i[Inter|Union]_Ii[c|o]... (#10298)
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit c9c8738ec44e42e777804b1bd621596c4bee0146[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Tue Mar 26 14:16:09 2024 +0000

    chore(Data/List/Join): Delete deprecated lemmas (#11665)
    
    These two lemmas have been deprecated for more than a year and are on my way for #11633.

[33mcommit 5cc0a412b7d0d30421a2b126c6ebf629f735b59f[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Mar 26 14:16:08 2024 +0000

    chore(List/ReduceOption): move from Basic.lean (#11662)
    
    Also rename `List.IsPrefix.filter_map` to `List.IsPrefix.filterMap`
    and protect some theorems in the `List.IsPrefix` namespace.

[33mcommit d298fc06e02783eb574f8c25b00b31b4238f8998[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Tue Mar 26 14:16:07 2024 +0000

    chore: remove unnecessary Finset qualifications (#11659)
    
    Co-authored-by: Junyan Xu <junyanxumath@gmail.com>

[33mcommit 9d4c1bc6cf46d9ee5fe67964ac179afccfdec5fa[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Mar 26 14:16:06 2024 +0000

    chore(List): deprecate `List.ret` (#11651)
    
    Use `List.pure` from Lean core instead.

[33mcommit 4de5addca619e1485e4d6fff26c7f1f334dcf20e[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Tue Mar 26 13:32:22 2024 +0000

    feat(CategoryTheory/Sites): a functor into a precoherent category satisfying `Functor.EffectivelyEnough` is cover dense (#11686)

[33mcommit 04a0187c195dd22cc8cc004defad8684a79bcf38[m
Author: Matthew Robert Ballard <matt@mrb.email>
Date:   Tue Mar 26 13:32:21 2024 +0000

    perf(Topology.Algebra.Module): factor out `smul` (#11331)
    
    We want to avoid making Lean unfold `smul` during unification. A separate instance does helps at the cost of some elaboration failures.

[33mcommit 98b2339d0dc7070562d72ebf89661bfce81cfaab[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Mar 26 12:38:36 2024 +0000

    chore(List/Basic): golf `disjoint_{p,}map` (#11680)
    
    Golf `List.disjoint_map` and `List.disjoint_pmap`

[33mcommit d5876416fb13cd8edb246664b1f22cf40c22ba56[m
Author: Markus Himmel <markus@himmel-villmar.de>
Date:   Tue Mar 26 11:50:13 2024 +0000

    chore: remove duplicates of `IsLimit.op` and variants (#11683)

[33mcommit 3fea5dc365d79076b5989ea69e02507999819cf9[m
Author: Scott Morrison <scott@tqft.net>
Date:   Tue Mar 26 09:53:40 2024 +0000

    chore: fix two porting notes (#11682)
    
    Fix two porting notes (one that should have been a porting note!) while looking at `on_goals`.
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 1b735be4be37e9e14437ab94a3193b8c634960df[m
Author: Scott Morrison <scott@tqft.net>
Date:   Tue Mar 26 09:53:39 2024 +0000

    chore: remove superfluous uses of triv (#11679)
    
    Std defines `triv`, a slight variation on `trivial`. It appears that Mathlib doesn't care about the distinction (any more?) and so we can consolidate on a single tactic.
    
    https://github.com/leanprover/std4/pull/712 separately replaces `triv` in Std with an error explaining to use `trivial`.
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 470d77338d8d8b41797ab5c490926ef6383d5484[m
Author: Timo Carlin-Burns <timorcb@gmail.com>
Date:   Tue Mar 26 09:53:38 2024 +0000

    doc: port algebra library notes (#10970)
    
    These were lost in the port because they were in the file [`tactic/lint/type_classes.lean`](https://github.com/leanprover-community/mathlib/blob/master/src/tactic/lint/type_classes.lean#L68-L96), which is an unported linter.

[33mcommit 30850dba6554df47eeb9a8aafae445d585f49e73[m
Author: Joseph Myers <jsm@polyomino.org.uk>
Date:   Tue Mar 26 09:53:37 2024 +0000

    feat: `Pairwise` and composition with an equiv (#10706)
    
    Add a lemma about `Pairwise` being preserved by composing the arguments of the pairwise relation with an equiv.
    
    ```lean
    lemma EquivLike.pairwise_comp_iff {X : Type*} {Y : Type*} {F} [EquivLike F Y X]
        (f : F) (p : X ‚Üí X ‚Üí Prop) : Pairwise (fun y z ‚Ü¶ p (f y) (f z)) ‚Üî Pairwise p := by
    ```
    
    This depends on `Mathlib.Data.FunLike.Equiv` and
    `Mathlib.Logic.Pairwise`, neither of which imports the other, so to avoid increasing the imports of very basic files I put it in its own new file, but feel free to suggest a better location of this lemma (and to golf the proof).
    
    From AperiodicMonotilesLean.

[33mcommit f5373eed0a601d313dd9b5723fc486548619ac45[m
Author: thorimur <68410468+thorimur@users.noreply.github.com>
Date:   Tue Mar 26 08:53:43 2024 +0000

    chore: handle comment nesting in `lint-style.py` (#10994)
    
    This PR adjusts `annotate_comments` to respect comment nesting while linting.
    
    Note that `annotate_strings` does not necessarily respect comment nesting, so this is an improvement, not a full fix. (Likewise, `annotate_comments` (still) doesn't ignore comment markers in strings.)
    
    See [Zulip](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/False.20positive.20on.20.60.E2.86.90.60.20style.20linter).

[33mcommit 92c745e2994217861e83a6e65a6ee286dd6f5cd6[m
Author: Scott Morrison <scott@tqft.net>
Date:   Tue Mar 26 07:43:39 2024 +0000

    chore: don't use classical! when classical suffices (#11681)
    
    (In fact, this is every use of `classical!` in Mathlib.)
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit f88c58544aa850884fb201f6fa29344f6268729c[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Tue Mar 26 07:43:38 2024 +0000

    feat(Algebra/GroupWithZero): add `dvd_of_mul_dvd_mul` (#11677)
    
    `dvd_of_mul_dvd_mul_left` and `dvd_of_mul_dvd_mul_right` were implemented only for `Nat` and `Int`.
    
    We've generalised it for `CancelCommMonoidWithZero`.

[33mcommit dca027f0817b6a7cdd6954e965680f28252e53f8[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Tue Mar 26 07:43:37 2024 +0000

    feat(CategoryTheory/GradedObject): the right unitor (#11676)
    
    This PR defines a right unitor isomorphism for graded objects. The code is completely parallel to PR #10701.

[33mcommit eec91f378a5dc919526a9e26c71e0451b80558ec[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Tue Mar 26 07:43:36 2024 +0000

    move(Combinatorics/Enumerative): Create folder (#11666)
    
    Move `Catalan`, `Composition`, `DoubleCounting`, `Partition` to a new folder `Combinatorics.Enumerative`.

[33mcommit dda2b3f9d6c525a42d4ff328a37036d5ced89f44[m
Author: Markus Himmel <markus@himmel-villmar.de>
Date:   Tue Mar 26 07:43:35 2024 +0000

    feat: limits in the category of elements (#11484)

[33mcommit a57ceda54e4c5f1707670ef1f05df167e163eafc[m
Author: Markus Himmel <markus@himmel-villmar.de>
Date:   Tue Mar 26 07:43:35 2024 +0000

    refactor: generalize universes for commuting filtered colimits and finite limits (#11325)

[33mcommit 01a0b4e60e778e4e6a629b81f3fca1dd423176ba[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Mar 26 06:36:18 2024 +0000

    chore(Init/Data/Int): drop deprecated lemmas (#11664)
    
    Cherry-picked from #9607
    Co-authored-by: @semorrison

[33mcommit 859f37607d4c162e74ba1565511baf0345d636a7[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Mar 26 06:36:17 2024 +0000

    chore(*): migrate from `RingHom.map_*` to `_root_.map_*` (#11660)
    
    Cherry-picked from #9607
    Co-authored-by: @semorrison

[33mcommit 7015aaaf2b34005e64b416e3736442702e89493f[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Tue Mar 26 05:32:01 2024 +0000

    chore(Data/List/GetD): Use Std lemmas (#11653)
    
    ... instead of importing `Data.Nat.Order.Basic`

[33mcommit 1c0ac885c9b8aa4daa1830acb56b755140a8059f[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Mon Mar 25 23:44:29 2024 +0000

    feat(CategoryTheory): define the notion of effectively enough objects with respect to a functor (#11567)
    
    The notion means that for every object in the target, there is an effective epi to it from an object in the image of the functor.

[33mcommit 103d868920c23be42cde493246a7da660149bd8b[m[33m ([m[1;31morigin/RB/card_inf_place2[m[33m)[m
Author: Floris van Doorn <fpvdoorn@gmail.com>
Date:   Mon Mar 25 21:24:41 2024 +0000

    fix: typo in module doc of NumberTheory/Cyclotomic/Basic (#11670)

[33mcommit a251ad4621fbba21ca0d49adfd48c212dcc8f98d[m
Author: Michael Stoll <Michael.Stoll@uni-bayreuth.de>
Date:   Mon Mar 25 20:19:45 2024 +0000

    feat(NumberTheory/LSeries/Convolution): new file; convolution of sequences and products of L-series (#11634)
    
    This is the next PR in a sequence that establishes general results on L-series.
    See [this thread on Zulip](https://leanprover.zulipchat.com/#narrow/stream/144837-PR-reviews/topic/L-series/near/424858837).
    
    This adds the definition of the Dirichlet convolution of two sequences (as `LSeries.convolution`) and shows that the associated L-series is the product of the L-series associated to the two original sequences.

[33mcommit 2d2e953b5b7ce492e8b3062178fdfee8c4123f86[m
Author: Bolton Bailey <bolton.bailey@gmail.com>
Date:   Mon Mar 25 20:19:44 2024 +0000

    feat: add lemma List.prod_map_one (#11112)
    
    Adds the lemma, and `to_additive` tags it

[33mcommit 2c429c3c379cff812f3418403399ca9798b47469[m
Author: Jeremy Tan Jie Rui <reddeloostw@gmail.com>
Date:   Mon Mar 25 20:19:42 2024 +0000

    feat: Bernoulli's inequality for `0 < p < 1` (#10982)
    
    Also substantially speed up some existing proofs in the `p < 1` case.

[33mcommit e80129c501fb8046d1d87dae1b379aebec0767fb[m
Author: Markus Himmel <markus@himmel-villmar.de>
Date:   Mon Mar 25 19:47:26 2024 +0000

    feat: some missing API for the category of elements (#11483)
    
    The most significant change is the introduction of the simp lemma `map_snd`.

[33mcommit ac9ad40ffc0c10776f8c8b56909fadd83a9d0848[m
Author: Felix-Weilacher <fweilach@andrew.cmu.edu>
Date:   Mon Mar 25 19:10:26 2024 +0000

    feat(MeasureTheory.MeasurableSpace.CountablyGenerated): add SeparatesPoints and related theorems (#11048)
    
    the goal of the PR is to clarify the relationship between the following closely related assumptions on a measurable space:
    * Being countably generated (`CountablyGenerated`)
    * Separating points (`SeparatesPoints`)
    * Having a countable separating family of measurable sets (`HasCountableSeparatingOn _ MeasurableSet univ`)
    * Having singletons be measurable (`MeasurableSingletonClass`)
    
    It defines `SeparatesPoints` and registers all implications between combinations of these properties as instances (or rather a minimal set needed to deduce all others).
    
    It also proves an optimal theorem regarding when a measurable space appears as an induced subspace of the Cantor Space `Nat -> Bool`. This will be used to generalize topological assumptions to measure theoretic ones in some theorems in `MeasureTheory.Constructions.Polish`.
    
    
    
    Co-authored-by: Felix-Weilacher <112423742+Felix-Weilacher@users.noreply.github.com>

[33mcommit e2e83b9d8720d9402f7233843d9ef17a54a5a9ec[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Mar 25 14:43:04 2024 +0000

    chore(List/BigOperators): generalize a lemma (#11644)
    
    `List.prod_map_neg` doesn't need a `CommMonoid`.

[33mcommit 496f2278b1142e4c6dc5f73dd0a5d10700be4895[m
Author: damiano <adomani@gmail.com>
Date:   Mon Mar 25 13:03:02 2024 +0000

    fix: label new contributors? (#11658)
    
    This PR hopefully fixes the automatic labeling of new contributors.
    
    I looked for the entry `.pull_request.user.login` but I could not find it.  For this reason, I switched to using the existing `.head_commit.author.name`.
    
    You can look at the `install elan` step of [this CI run](https://github.com/leanprover-community/mathlib4/actions/runs/8419868223/job/23053404627?pr=11656) to see what are the available fields.
    
    As a small sanity check, the first commit of this PR changed `< 5 PRs` to `> 5 PRs` and the bot added the `new-contributor` label to this PR.  The second commit reverted this change.
    
    [Zulip discussion](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/.60new-contributor.60.20labelling.20workflow.20broken.3F)

[33mcommit 6134a02603a4e97934768d71026cfc53466d122a[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Mar 25 09:46:55 2024 +0000

    chore(List/Basic): use `mem_filter` to golf 2 proofs (#11652)

[33mcommit 7f145201788b1d104bfb1d8c9d6a24c110b0b9b3[m
Author: Filippo A. E. Nuccio <filippo.nuccio@univ-st-etienne.fr>
Date:   Mon Mar 25 09:03:58 2024 +0000

    doc(RepresentationTheory): add some doc for three basic files (#11643)
    
    Add some doc concerning Schur's lemma, orthogonality of characters and irreducible representations being defined as simple objects.

[33mcommit d6a4b5d2dd31035c9c76db59bb9bc6921eb77d58[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Mon Mar 25 07:55:15 2024 +0000

    chore: Make `Finset.preimage` not depend on `Finset.sum` (#11601)
    
    and `Data.Finset.LocallyFinite` not depend on `Finset.sum` too

[33mcommit aae9d296f859fb97923157dc9ae60fbaf718af8a[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Mon Mar 25 03:22:47 2024 +0000

    ci: Raise Archive build failures (#11612)
    
    CI didn't catch the fallout from #11530 because we forgot to pipe the errors coming from `lake build Archive` and `lake build Counterexamples` back to the logs. This PR makes sure that happens.

[33mcommit c59421a22fba92fc11c7788a3a92699154cbbfdb[m
Author: Scott Morrison <scott@tqft.net>
Date:   Mon Mar 25 02:58:11 2024 +0000

    chore: remove @[eqns] on Ordnode.rotateR/L (#11649)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit f7c6a4c64c370cd3e836465ab360226586d42e88[m
Author: Scott Morrison <scott@tqft.net>
Date:   Mon Mar 25 02:18:46 2024 +0000

    chore: remove @[eqns] in Algebra/Homology/Homotopy (#11648)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit f2f41de14b32360a9b4e731dfb935f38d897ec85[m
Author: Scott Morrison <scott@tqft.net>
Date:   Mon Mar 25 02:18:45 2024 +0000

    chore: rm @[eqns] in SetTheory/Ordinal/Notation (#11646)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit c1056b03e9852a84baf7442076353f2ccf05c47b[m
Author: Scott Morrison <scott@tqft.net>
Date:   Mon Mar 25 01:53:52 2024 +0000

    chore: rm @[eqns] in Ordmap (#11645)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 31188bc4505cc4386355040cbe0c9f805297ac63[m
Author: Scott Morrison <scott@tqft.net>
Date:   Mon Mar 25 01:19:44 2024 +0000

    chore: remove unnecessary @[eqns] attributes (#11460)
    
    These attributes are unused in Mathlib.
    
    Many of them were workarounds for the now-resolved leanprover/lean4#2243; this also allows the lemmas themselves (`hasFiniteIntegral_def`, `integrable_def`, `mem‚Ñíp_def`, and `integrableOn_def`) to be deleted.
    
    We are currently experiencing problems with the `@[eqns]` attribute on the Lean nightlies. I'm uncertain yet what the outcome is going to be there, but it seems prudent to reduce our unnecessary exposure to a language feature added in Mathlib.
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 11e323efe514844587305802203328ef3898037c[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Sun Mar 24 22:59:09 2024 +0000

    feat: renaming symmetric MvPolynomials (#11251)
    
    Co-authored-by: Junyan Xu <junyanxumath@gmail.com>

[33mcommit 0e6c4e2e56aa0c95319098f34cee55a1e9e33652[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Sun Mar 24 21:52:56 2024 +0000

    chore: Deprecated aliases for `Rat.cast_natCast`, `Rat.cast_intCast` (#11636)
    
    These were moved in #11552.

[33mcommit 1f8fea7df73c00544c5863018a698792f8c1d9c3[m
Author: Markus Himmel <markus@himmel-villmar.de>
Date:   Sun Mar 24 20:38:18 2024 +0000

    feat: ind-objects are closed under isomorphism (#11623)

[33mcommit 31bc122d72aa71cf31f0fb9b61e0c70b0e26f8d4[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Sun Mar 24 20:38:17 2024 +0000

    chore: Golf `Set.pair_eq_pair_iff` (#11564)
    
    Resolve a porting note

[33mcommit 0c297cbed86c7358191878ee7abd82465afabc96[m
Author: smorel394 <smorel@math.princeton.edu>
Date:   Sun Mar 24 20:38:16 2024 +0000

    feat(Analysis/NormedSpace/PiTensorProduct/{InjectiveNorm, ProjectiveNorm}, LinearAlgebra/PiTensorProduct): define the injective and projective norms on `PiTensorProduct` and prove the universal property of the first one (#11534)
    
    Define the injective and projective cross norms on a `PiTensorProduct` of normed vector spaces `E·µ¢` over a nontrivially normed field `ùïú` (cf https://en.wikipedia.org/wiki/Topological_tensor_product#Cross_norms_and_tensor_products_of_Banach_spaces).
    
    The projective norm, defined in `Analysis/NormedSpace/PiTensorProduct/ProjectiveNorm.lean`, is the biggest norm on the `PiTensorProduct` satisfying  `‚Äñ‚®Ç‚Çú[ùïú] i, m i‚Äñ ‚â§ Œ† i, ‚Äñm i‚Äñ` for every `m` in `Œ† i, E·µ¢`. We are mainly interested in the injective norm in this PR, so we just give the definition of the projective norm and its basic properties. To help with the proofs, we introduce some lemmas in `LinearAlgebra/PiTensorProduct.lean` about the set of lifts in `FreeAddMonoid (R √ó Œ† i, s i)` of an element `x` of `‚®Ç[R] i, s i`.
    
    The injective norm, defined in `Analysis/NormedSpace/PiTensorProduct/InjectiveSeminorm.lean`, is chosen to satisfy the following property: for every normed `ùïú`-vector space `F`, the linear equivalence `MultilinearMap ùïú E F ‚âÉ‚Çó[ùïú] (‚®Ç[ùïú] i, E·µ¢) ‚Üí‚Çó[ùïú] F` expressing the universal property of the tensor product induces an isometric linear equivalence `ContinuousMultilinearMap ùïú E F ‚âÉ‚Çó·µ¢[ùïú] (‚®Ç[ùïú] i, E·µ¢) ‚ÜíL[ùïú] F`.
    
    The idea is the following: Every normed `ùïú`-vector space `F` defines a linear map from `‚®Ç[ùïú] i, E·µ¢` to `ContinuousMultilinearMap ùïú E F ‚Üí‚Çó[ùïú] F`, which sends `x` to the map `f ‚Ü¶ f.lift x`. Thanks to `PiTensorProduct.projectiveSeminorm_bound`, this map lands in `ContinuousMultilinearMap ùïú E F ‚ÜíL[ùïú] F`. As this last space has a natural operator seminorm, we get an induced seminorm on `‚®Ç[ùïú] i, E·µ¢`, which, by `PiTensorProduct.projectiveSeminorm_bound`, is bounded above by the projective seminorm. We then take the `sup` of these seminorms as `F` varies; as this family of seminorms is bounded, its `sup` has good properties.
    
    In fact, we cannot take the `sup` over all normed spaces `F` because of set-theoretical issues, so we only take spaces `F` in the same universe as `‚®Ç[ùïú] i, E·µ¢`. We then prove in `PiTensorProduct.norm_eval_le_injectiveSeminorm` that this gives the same result, because every multilinear map from `E` to `F` factors though a normed vector space in the same universe as `‚®Ç[ùïú] i, E·µ¢`.
    
    # Main definitions
    
    * `PiTensorProduct.projectiveSeminorm`: The projective seminorm on `‚®Ç[ùïú] i, E·µ¢`.
    * `PiTensorProduct.toDualContinuousMultilinearMap`: The `ùïú`-linear map from `‚®Ç[ùïú] i, E·µ¢` to `ContinuousMultilinearMap ùïú E F ‚ÜíL[ùïú] F` sending `x` to the map `f ‚Ü¶ f x`.
    * `PiTensorProduct.injectiveSeminorm`: The injective seminorm on `‚®Ç[ùïú] i, E·µ¢`.
    * `PiTensorProduct.liftEquiv`: The bijection between `ContinuousMultilinearMap ùïú E F`
    and `(‚®Ç[ùïú] i, E·µ¢) ‚ÜíL[ùïú] F`, as a continuous linear equivalence.
    * `PiTensorProduct.liftIsometry`: The bijection between `ContinuousMultilinearMap ùïú E F`
    and `(‚®Ç[ùïú] i, E·µ¢) ‚ÜíL[ùïú] F`, as an isometric linear equivalence.
    * `PiTensorProduct.tprodL`: The cacnonical continuous multilinear map from `E`
    to `‚®Ç[ùïú] i, E·µ¢`.
    * `PiTensorProduct.mapL`: The continuous linear map from `‚®Ç[ùïú] i, E·µ¢` to `‚®Ç[ùïú] i, E'·µ¢`
    induced by a family of continuous linear maps `E·µ¢ ‚ÜíL[ùïú] E'·µ¢`.
    * `PiTensorProduct.mapLMultilinear`: The continuous multilinear map from
    `fun i ‚Ü¶ (E·µ¢ ‚ÜíL[ùïú] E'·µ¢)` to `(‚®Ç[ùïú] i, E·µ¢) ‚ÜíL[ùïú] (‚®Ç[ùïú] i, E'·µ¢)` sending a family
    `f` to `PiTensorProduct.mapL f`.
    
    # Main results
    
    * `PiTensorProduct.norm_eval_le_projectiveSeminorm`: For every `x` in `‚®Ç[ùïú] i, E·µ¢` and every continuous multilinear map `f` from `E` to a normed space `F`, we have `‚Äñf.lift  x‚Äñ ‚â§ ‚Äñf‚Äñ * projectiveSeminorm x `. This implies in particular:
    * `PiTensorProduct.injectiveSeminorm_le_projectiveSeminorm`: The injective seminorm is bounded above by the projective seminorm.
    * `PiTensorProduct.norm_eval_le_injectiveSeminorm`: The main property of the injective seminorm on
    `‚®Ç[ùïú] i, E·µ¢`: for every `x` in `‚®Ç[ùïú] i, E·µ¢` and every continuous multilinear map `f` from `E`
    to a normed space `F`, we have `‚Äñf.lift  x‚Äñ ‚â§ ‚Äñf‚Äñ * injectiveSeminorm x `.
    * `PiTensorProduct.mapL_opNorm`: If `f` is a family of continuous linear maps
    `f·µ¢ : E·µ¢ ‚ÜíL[ùïú] F·µ¢`, then `‚ÄñPiTensorProduct.mapL f‚Äñ ‚â§ ‚àè i, ‚Äñf·µ¢‚Äñ`.
    * `PiTensorProduct.mapLMultilinear_opNorm` : If `F` is a normed vecteor space, then
    `‚ÄñmapLMultilinear ùïú E F‚Äñ ‚â§ 1`.
    
    # TODO (in a future PR)
    
    If all `E·µ¢` are separated and satisfy `SeparatingDual`, then the seminorm on `‚®Ç[ùïú] i, E·µ¢` is a norm. This uses the construction of a basis of the `PiTensorProduct`, hence depends on PR #11156. It should probably go in a separate file, which is why I am creating a directory Analysis/NormedSpace/PiTensorProduct.
    
    # Technical issues
    
    * Ideally, I would prefer not to define `liftEquiv` and to have only `liftIsometry`, but I am using `liftEquiv.left_inv` in the proof that `liftIsometry` preserves norms.
    
    
    
    Co-authored-by: smorel394 <67864981+smorel394@users.noreply.github.com>

[33mcommit fe4454af900584467d21f4fd4fe951d29d9332a7[m
Author: Matthew Robert Ballard <matt@mrb.email>
Date:   Sun Mar 24 19:38:18 2024 +0000

    chore(Algebra.Module): make `Function.Surjective.module` reducible  (#11631)
    
    This is used to construct instances of classes and needs to be reducible to unfold during unification performed in the process of typeclass synthesis, see the library note [reducible non-instances]

[33mcommit f4fd1b19f0e2ab3989c2fef5511ab2341f8b2607[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sun Mar 24 17:50:33 2024 +0000

    feat(Logic/IsEmpty): add instances for `Quot` and `Quotient` (#11616)

[33mcommit 0523bd89e63fc853eb95a502edafe4ce828b88ae[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sun Mar 24 17:50:32 2024 +0000

    feat: image of a von Neumann bounded set under a multilinear map (#10743)

[33mcommit 971aea74163949e6d4a686a3f60c7660d979d269[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Sun Mar 24 17:19:32 2024 +0000

    chore(Analysis/NormedSpace/PiLp): golf a proof (#11619)

[33mcommit f29c550a54ab935b1b3f27d7de89fecdb7007632[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Sun Mar 24 16:44:40 2024 +0000

    chore: add missing aliases for recently renamed lemmas (#11117)
    
    From #9618, #10525 and #10614.

[33mcommit a746c523bc0f831c9d1f39d77c382ac798748e02[m
Author: Christian Merten <christian@merten.dev>
Date:   Sun Mar 24 13:55:39 2024 +0000

    refactor(Algebra/Category): replace `TypeMax` constructions by `UnivLE` assumptions (#11420)
    
    Replaces `TypeMax` limit constructions in `MonCat`, `GroupCat`, `Ring`, `AlgebraCat` and `ModuleCat` by the `UnivLE` analogs. Also generalizes some universe assumptions.

[33mcommit ac1182835d2d1cb42c76a0f4b60c42183b5c8ed9[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Sun Mar 24 11:48:31 2024 +0000

    feat(Algebra/Homology): the action of a bifunctor on homological complexes factors through homotopies (#10800)
    
    Given a `TotalComplexShape c‚ÇÅ c‚ÇÇ c`, a functor `F : C‚ÇÅ ‚•§ C‚ÇÇ ‚•§ D`, we study the behavior with respect to homotopies or the  functoriality of the action of `F` on homological complexes: if `f‚ÇÅ` and `f‚ÇÅ'` are homotopic maps, then the maps `mapBifunctorMap f‚ÇÅ f‚ÇÇ F c` and `mapBifunctorMap f‚ÇÅ' f‚ÇÇ F c` are also homotopic.
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit ffd402537a31413780cca9773edc70921a446452[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Sun Mar 24 10:44:42 2024 +0000

    chore: rename lemmas involving closedUnder{Co}limits  (#11608)
    
    They contain a hypothesis `ClosedUnder{Co}Limits`, hence should be named accordingly.

[33mcommit 0865637367e087d90ae1e34b27f0b6c9a9b1ce25[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Sun Mar 24 10:44:41 2024 +0000

    doc: Improve `Field`'s fields docstrings (#11508)
    
    Reduce the diff of #11203

[33mcommit 08172593c8646b1b77ec3277b5df5637f0ae8f78[m
Author: Christian Merten <christian@merten.dev>
Date:   Sun Mar 24 09:49:13 2024 +0000

    chore(Algebra/Category/MonCat): improve definitional properties in restrict scalars (#11597)
    
    Replaces two usages of `subst` by an explicit construction in `ChangeOfRings`.

[33mcommit 28e1bd49018baff3563fc4b31ab786aa8abc1208[m
Author: David Loeffler <d.loeffler.01@cantab.net>
Date:   Sun Mar 24 09:49:12 2024 +0000

    feat(NumberTheory/Harmonic): Euler-Mascheroni constant (#11589)
    
    Add the Euler-Mascheroni constant `Œ≥` (the limit of `harmonic n - log n` as `n` goes to infinity)

[33mcommit 5d242aa47c4fb789655f338564328231f9c16138[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Sun Mar 24 09:49:11 2024 +0000

    fix: improve simp lemmas around PartENat.ofENat (#11553)

[33mcommit acda20c6211deb403cb606ab0c522341f42dadfa[m
Author: JovanGerb <jovan.gerbscheid@gmail.com>
Date:   Sun Mar 24 09:17:19 2024 +0000

    style: remove redundant instance arguments (#11581)
    
    I removed some redundant instance arguments throughout Mathlib. To do this, I used VS Code's regex search. See https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/repeating.20instances.20from.20variable.20command
    I closed the previous PR for this and reopened it.

[33mcommit 2b282122c9684ea5365a71ec5ef28bb8f5628b94[m
Author: David Loeffler <d.loeffler.01@cantab.net>
Date:   Sun Mar 24 09:17:18 2024 +0000

    refactor(Analysis/Fourier): use `AddChar` machinery in `FourierTransform` (#11417)
    
    The file `Analysis/Fourier/FourierTransform.lean` predates the general approach to additive characters elsewhere in the library; this merges the two (getting rid of the rather kludgy notation `e [x]` in the process).  I also rejigged some slow proofs, to make them compile slightly faster.

[33mcommit f16daa685ba9d0edae66d5f355726f8733d0b668[m
Author: Bolton Bailey <bolton.bailey@gmail.com>
Date:   Sun Mar 24 09:17:17 2024 +0000

    feat: Polynomial.mul_modByMonic (#11113)
    
    Adds simp lemma for `(p * q) %‚Çò q = 0` and `(q * p) %‚Çò q = 0`.
    
    Also corrects a misspelling: `dvd_iff_modByMonic_eq_zero` should be `modByMonic_eq_zero_iff_dvd`

[33mcommit 555069bd76c4f9e4e056e59201acf33d8e3b4fa8[m
Author: Bolton Bailey <bolton.bailey@gmail.com>
Date:   Sun Mar 24 08:11:00 2024 +0000

    feat: generalize `algHom_C`, add `killCompl_C` (#11205)
    
    Generalizes `algHom_C` to work over polynomials of different variable types. Adds related lemma `killCompl_C` using this. Also removes simp tags from a few lemmas that are made redundant by this.

[33mcommit 8b3db4c313a6f4de7128342a47e0815b1d0c4bb6[m
Author: Thomas Browning <tb65536@uw.edu>
Date:   Sun Mar 24 08:10:59 2024 +0000

    feat(GroupTheory/FixedPointFree): New file (#11091)
    
    This PR adds a new file containing the definition of fixed-point-free automorphisms and some basic properties.

[33mcommit 9682f6b2288b81b1e758e1f28b51c10a69928f8e[m
Author: David Renshaw <dwrenshaw@gmail.com>
Date:   Sun Mar 24 06:28:35 2024 +0000

    chore: make List.mem_split an alias of List.append_of_mem (#11060)
    
    `List.mem_split` duplicates `List.append_of_mem` from `Std`:
    https://github.com/leanprover/std4/blob/a756b7d643ae5dcd7bf314e99f8e493e5d81b9ed/Std/Data/List/Lemmas.lean#L94-L96
    
    This PR makes it an alias.
    
    
    
    Co-authored-by: Ya√´l Dillies <yael.dillies@gmail.com>

[33mcommit 5fc4f8617197091bb2298b2c43417293e334f807[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Sun Mar 24 01:16:41 2024 +0000

    ci: Import `Archive` when checking YAML files (#11562)
    
    We sometimes want to refer to Archive declarations in the YAML files. This is currently impossible because the script in `checkYaml` only imports `Mathlib`. This PR changes it to also import `Archive`.
    
    It also changes the hyperlinks to Archive to instead list declarations directly.
    
    Also fix the fallout from #11530 that CI didn't catch that because we forgot to pipe the errors coming from `lake build Archive` (see #11612).
    
    Co-authored-by: Enrico Borba <enricozb@gmail.com>
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 853378fdf75711d9cf056372d7814a1def170088[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Sat Mar 23 22:56:57 2024 +0000

    chore: rename misnamed lemmas involving isOpenMap (#11607)
    
    - open_map_of_strict_deriv -> isOpenMap_of_hasStrictDerivAt
    - open_map_of_strict_fderiv_equiv -> isOpenMap_of_hasStrictFderivAt_equiv
    These lemmas have conclusion `isOpenMap`, hence should be named accordingly.

[33mcommit f2373e037073413f1832ddc2745a851cb00f2aa4[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Sat Mar 23 22:13:16 2024 +0000

    chore: avoid some unused variables (#11594)
    
    These will be caught by the linter in a future lean version.

[33mcommit 87ee74b152d115f520a1d996ac43a75e6ae37d1a[m
Author: Mario Carneiro <mcarneir@andrew.cmu.edu>
Date:   Sat Mar 23 19:58:37 2024 +0000

    fix: use binary recursion for `Sum.pow` (#11558)
    
    fixes #11543
    
    
    
    
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>

[33mcommit 76e46f2e6bb3e5d92c84801d763a973b646301d3[m
Author: Hongyu Ouyang <96765450+casavaca@users.noreply.github.com>
Date:   Sat Mar 23 19:34:29 2024 +0000

    chore: fix some @[ext] attribute (#11494)
    
    This PR contains 2 changes:
    
    1. Order/Interval.lean: Add `@[ext (flat := false)]`, which addressed the porting notes.
    2. Matrix/Basic.lean: the porting notes were no longer true, as everything still works after reverting to the original code (this was fixed in https://github.com/leanprover/std4/pull/159).
    3. Algebra/Order/Interval.lean updated now that `ext_iff`'s namespace is changed due to 1.
    
    Partially addresses #11182

[33mcommit cd9902cc6977109300779405515040a4dbcaf2fa[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Sat Mar 23 17:33:58 2024 +0000

    move(Topology/Order): Move anything that doesn't concern algebra (#11610)
    
    Move files from `Topology.Algebra.Order` to `Topology.Order` when they do not contain any algebra. Also move `Topology.LocalExtr` to `Topology.Order.LocalExtr`.
    
    According to git, the moves are:
    
    * `Mathlib/Topology/{Algebra => }/Order/ExtendFrom.lean`
    * `Mathlib/Topology/{Algebra => }/Order/ExtrClosure.lean`
    * `Mathlib/Topology/{Algebra => }/Order/Filter.lean`
    * `Mathlib/Topology/{Algebra => }/Order/IntermediateValue.lean`
    * `Mathlib/Topology/{Algebra => }/Order/LeftRight.lean`
    * `Mathlib/Topology/{Algebra => }/Order/LeftRightLim.lean`
    * `Mathlib/Topology/{Algebra => }/Order/MonotoneContinuity.lean`
    * `Mathlib/Topology/{Algebra => }/Order/MonotoneConvergence.lean`
    * `Mathlib/Topology/{Algebra => }/Order/ProjIcc.lean`
    * `Mathlib/Topology/{Algebra => }/Order/T5.lean`
    * `Mathlib/Topology/{ => Order}/LocalExtr.lean`

[33mcommit 8c5b9da8f6a5ef522e64d34ecc6f38ea2fca582f[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Sat Mar 23 16:50:12 2024 +0000

    feat: four small lemmas about successors of finite cardinals (#11544)
    
    Co-authored-by: @fpvandoorn
    
    <!-- The text above the `

[33mcommit 4ea4a86a9ccc0a4675ecbc48c2546fd2ea889262[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Sat Mar 23 16:05:15 2024 +0000

    chore: Rename `mul`-`div` cancellation lemmas (#11530)
    
    Lemma names around cancellation of multiplication and division are a mess.
    
    This PR renames a handful of them according to the following table (each big row contains the multiplicative statement, then the three rows contain the `GroupWithZero` lemma name, the `Group` lemma, the `AddGroup` lemma name).
    
    | Statement           | New name                | Old name                |
    |

[33mcommit cde19d456ed9b97c3619b5dfd708fe028bcd3f4b[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Sat Mar 23 15:40:59 2024 +0000

    chore(Distribution/SchwartzSpace): remove unused have (#11609)

[33mcommit a0e02a9399daf134f538b3f0e09cbf560875b33c[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Sat Mar 23 15:40:58 2024 +0000

    feat: `Real.toNNReal_abs` (#11606)
    
    Partially forward-port https://github.com/leanprover-community/mathlib/pull/16976
    
    Also fix an unused argument that somehow made it to master, likely from #10661.

[33mcommit 557de17480ee6c14f1e192d71cda88af0312d566[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Sat Mar 23 10:50:22 2024 +0000

    fix(slim_check): do not crash when binders contain a function type (#11231)
    
    Previously
    ```lean
    import Mathlib
    
    open scoped BigOperators in
    example (n : ‚Ñï) : ‚àë f : Unit ‚Üí Fin (n + 1), f () = 0 := by slim_check
    ```
    failed with
    ```
    application type mismatch
      SlimCheck.NamedBinder "a._@._hyg.23" (Unit ‚Üí Fin (n + 1))
    argument
      Unit ‚Üí Fin (n + 1)
    has type
      Type : Type 1
    but is expected to have type
      Prop : Type
    ```

[33mcommit e8abc61dba28e3cec860de064eaf7c14e33c6b00[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Sat Mar 23 10:02:42 2024 +0000

    feat(CategoryTheory): reindex effective epi families (#11568)
    
    Co-authored-by: Adam Topaz @adamtopaz <topaz@ualberta.ca>

[33mcommit 3bb443ca00d75c1010abb277520558fe28f1e4ca[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Sat Mar 23 09:36:49 2024 +0000

    feat(Topology): `TotallySeparatedSpace.t2Space` (#11449)
    
    This instance seems to have been missing.

[33mcommit 179b9ad488e5e10af513516aaa0e64dd25406956[m
Author: Riccardo Brasca <riccardo.brasca@gmail.com>
Date:   Sat Mar 23 07:52:39 2024 +0000

    feat: add `fermatLastTheoremWith_of_fermatLastTheoremWith_coprime` (#11374)
    
    We add `fermatLastTheoremWith_of_fermatLastTheoremWith_coprime`: To prove Fermat Last Theorem one can assume that `a`, `b` and `c` are coprime.

[33mcommit 1ed91c39c2d55ac47d305f2ef90f8f037ccce84e[m
Author: Jeremy Tan Jie Rui <reddeloostw@gmail.com>
Date:   Sat Mar 23 07:52:38 2024 +0000

    feat: definition and properties of the Tur√°n graph (#9645)
    
    The first part of the main file in #9317.
    
    
    
    Co-authored-by: Ya√´l Dillies <yael.dillies@gmail.com>

[33mcommit b0e8c8687a18b787c2e674bdf825947ed22d582f[m
Author: Matthew Robert Ballard <matt@mrb.email>
Date:   Sat Mar 23 07:28:08 2024 +0000

    chore(SemiRingCat/RingCat): make `SemiRingCat` and `RingCat` reducible (#11595)
    
    Since both `SemiRingCat` and `RingCat` are wrappers around a structure instance, there should be no advantage to making `default` transparency.

[33mcommit 8b3fbc9236da458f58b005d34dd6c82d67ffa2bb[m
Author: Moritz Doll <moritz.doll@googlemail.com>
Date:   Sat Mar 23 07:28:07 2024 +0000

    feat: Positivity extension for Bochner integral (#10661)
    
    Inspired by #10538 add a positivity extension for Bochner integrals.

[33mcommit f2f4854ba1c616fc736419ad1254f15ccfb27a6f[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Sat Mar 23 06:14:53 2024 +0000

    feat(RingTheory/PiTensorProduct): extensionality and isomorphisms (#11196)

[33mcommit 297145fb6d1c6ec2115a758857199ea5e14c851a[m
Author: Kyle Miller <kmill31415@gmail.com>
Date:   Sat Mar 23 03:03:08 2024 +0000

    chore: improve proof quality in `Data.Finset.Card` (#11592)
    
    Switch to using tactics rather than term proofs, and cleanup formatting that was from mathport. The intent is to make it more maintainable.
    
    (A subproof of `Finset.card_eq_of_bijective` was used as an example of mathlib in the LeanSSR paper.)

[33mcommit 7339b9f2a297e85b2e5d9076710bf1b43aff1bc8[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Sat Mar 23 01:52:40 2024 +0000

    chore(GroupTheory): rename induction arguments for `Sub{semigroup,monoid,group}` (#11461)
    
    The additive version are still incorrectly named, but these can easily be tracked down later (#11462) by searching for `to_additive (attr := elab_as_elim)`.

[33mcommit b555e0acd132e385521b0bac58f4c48bdce1ff0a[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Fri Mar 22 23:35:08 2024 +0000

    fix: rename MvPolynomial.C_mul_X (#11574)
    
    This makes it consistent with `MvPolynomial.isHomogeneous_X_pow` and `MvPolynomial.isHomogeneous_C_mul_X_pow` below. Alternatively all three could go into the `MvPolynomial.IsHomogeneous` namespace.

[33mcommit 66f56c61a7cc04550e89be05ef42388e9b818abe[m
Author: Adam Topaz <github@adamtopaz.com>
Date:   Fri Mar 22 17:14:59 2024 +0000

    fix: fix bug in `Random.randFin`. (#11587)
    
    https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Bug.20in.20randFin/near/428340514

[33mcommit ab37dcaf82bc9dfd68fa4b0a7b823ad1286f8958[m
Author: David Loeffler <d.loeffler.01@cantab.net>
Date:   Fri Mar 22 16:42:54 2024 +0000

    refactor(Analysis/Calculus/MeanValue): move convexity material elsewhere (#11588)
    
    This PR carves off lemmas about convex functions from `Analysis/Calculus/MeanValue.lean` and relocates them to a new file. (This is a preparatory step for adding some more lemmas on this topic, since `MeanValue.lean` is already over-long.)

[33mcommit 818ec2309a735946ea146d82d0bda47e29fc6247[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Fri Mar 22 15:32:38 2024 +0000

    chore: avoid some unused variables (#11583)
    
    These will be caught by the linter in a future lean version.

[33mcommit b7f0470e7d62670886ce3866a11101832df1eb58[m
Author: FordUniver <61389961+FordUniver@users.noreply.github.com>
Date:   Fri Mar 22 14:25:59 2024 +0000

    chore(Set/Finset): standardize names of distributivity laws (#11572)
    
    Standardizes the following names for distributivity laws across `Finset` and `Set`:
    
    - `inter_union_distrib_left`
    - `inter_union_distrib_right`
    - `union_inter_distrib_left`
    - `union_inter_distrib_right`
    
    Makes arguments explicit in:
    
    - `Set.union_inter_distrib_right`
    - `Set.union_inter_distrib_left`
    - `Set.inter_union_distrib_right`
    
    Deprecates these theorem names:
    
    - `Finset.inter_distrib_left`
    - `Finset.inter_distrib_right`
    - `Finset.union_distrib_right`
    - `Finset.union_distrib_left`
    - `Set.inter_distrib_left`
    - `Set.inter_distrib_right`
    - `Set.union_distrib_right`
    - `Set.union_distrib_left`
    
    Fixes use of deprecated names and implicit arguments in these files:
    
    - Topology/Basic
    - Topology/Connected/Basic
    - MeasureTheory/MeasurableSpace/Basic
    - MeasureTheory/Covering/Differentiation
    - MeasureTheory/Constructions/BorelSpace/Basic
    - Data/Set/Image
    - Data/Set/Basic
    - Data/PFun
    - Data/Matroid/Dual
    - Data/Finset/Sups
    - Data/Finset/Basic
    - Combinatorics/SetFamily/FourFunctions
    - Combinatorics/Additive/SalemSpencer
    - Counterexamples/Phillips.lean
    - Archive/Imo/Imo2021Q1.lean

[33mcommit 1111ecb4f336c10f3f563560da37d1ee5f432ab1[m
Author: John Talbot <john.talbot@gmail.com>
Date:   Fri Mar 22 14:25:57 2024 +0000

    feat(SimpleGraph/Coloring): Surjectivity of graph colorings (#11397)
    
    Add two simple results on graph colorings with œá(G) colors.
    1. If r ‚â§ œá(G) and C is an r-coloring of G then C is surjective
    2. If G has an Œ±-coloring then œá(G) = |Œ±| iff every such coloring is surjective.
    
    
    
    Co-authored-by: Ya√´l Dillies <yael.dillies@gmail.com>

[33mcommit 08e73cbcac4bc140756880a8217f726883e3f244[m
Author: Martin Dvo≈ô√°k <martin.dvorak@matfyz.cz>
Date:   Fri Mar 22 13:23:07 2024 +0000

    chore(Algebra/BigOperators/Basic): argument name (#11571)
    
    
    
    Co-authored-by: madvorak <dvorakmartinbridge@seznam.cz>

[33mcommit 9764de806a62d2761ae6155a52080f7f91c75f8c[m
Author: Jeremy Tan Jie Rui <reddeloostw@gmail.com>
Date:   Fri Mar 22 12:17:19 2024 +0000

    chore: change authorship of Leibniz series proof (#11578)

[33mcommit dddd92df0654b17f067ee7cd7f7ac137a50a553e[m
Author: Scott Morrison <scott@tqft.net>
Date:   Fri Mar 22 07:07:46 2024 +0000

    chore: bump Std (#11576)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit cc28353bec92c3774a88e3b21f9a15cbcc29e24e[m
Author: Scott Morrison <scott@tqft.net>
Date:   Fri Mar 22 02:18:40 2024 +0000

    chore: don't use String->Name coercion, which may be removed (#11556)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 1f7fecef2b9a28f8dc750fba7ba00e6fbfd25879[m
Author: Scott Morrison <scott@tqft.net>
Date:   Fri Mar 22 12:57:53 2024 +1100

    chore: import ProofWidgets, so tests work (#11350)
    
    Currently you need to run
    ```
    lake build ProofWidgets
    make tests
    ```
    to reliably get tests to work.
    
    ---
    <!-- The text above the `---` will become the commit message when your
    PR is merged. Please leave a blank newline before the `---`, otherwise
    GitHub will format the text above it as a title.
    
    To indicate co-authors, include lines at the bottom of the commit
    message
    (that is, before the `---`) using the following format:
    
    Co-authored-by: Author Name <author@email.com>
    
    Any other comments you want to keep out of the PR commit should go
    below the `---`, and placed outside this HTML comment, or else they
    will be invisible to reviewers.
    
    If this PR depends on other PRs, please list them below this comment,
    using the following format:
    - [ ] depends on: #abc [optional extra text]
    - [ ] depends on: #xyz [optional extra text]
    -->
    
    [![Open in
    Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)

[33mcommit eb5cb7e4bb323d681bb4356c47da3d2b00dfe55a[m
Author: Kyle Miller <kmill31415@gmail.com>
Date:   Thu Mar 21 23:59:09 2024 +0000

    feat: let `congr!` discharge equalities of `BEq` instances (#11179)
    
    Adds a congruence lemma for `BEq` instances that makes use of `LawfulBEq` instances, and gives `congr!` the ability to use this congruence lemma. This is meant to help with diamonds that arise from interactions between Decidable and BEq instances.
    
    This feature can be turned off using the `beqEq` configuration setting, like `congr! (config := { beqEq := false })`.

[33mcommit 0f2c3bc002f2da22ca58a49c8558219eb49e3ac6[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Thu Mar 21 18:11:56 2024 +0000

    chore(LpSpace): cleanup `Fintype`/`Finite` (#11428)
    
    Also rename `*lpBcf` to `*lpBCF` and drop 2 duplicate instances.

[33mcommit 8a8d3883fad00ee81fe20aaec6b609866132aa8a[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Thu Mar 21 15:28:18 2024 +0000

    chore: work around simp issues in future nightlies (#11546)

[33mcommit b6fe43dfe490d6749abab69bd8135fa836cb6017[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Thu Mar 21 14:51:10 2024 +0000

    chore(LinearAlgebra): fix Fintype/Finite assumptions (#11565)
    
    .. in `equivOfPiLEquivPi`, `coePiBasisFun.toMatrix_eq_transpose`, `vecMul_surjective_iff_exists_left_inverse`, and `mulVec_surjective_iff_exists_right_inverse`

[33mcommit def6f030b4b785e87f6ba842c890756501e4fa03[m
Author: Moritz Doll <moritz.doll@googlemail.com>
Date:   Thu Mar 21 14:51:09 2024 +0000

    feat(Analysis/Distribution/SchwartzSpace): generalize the integral (#11373)

[33mcommit dff9042e145f907f200e01e56e15ebc046c146ba[m
Author: David Loeffler <d.loeffler.01@cantab.net>
Date:   Thu Mar 21 14:51:08 2024 +0000

    feat(Analysis/PSeries): some summability results (#11150)
    
    Summability of `n ‚Ü¶ 1 / |n + a| ^ s` and `n ‚Ü¶ n ^ k exp (-r * n)`

[33mcommit 02b189d7395fbce49adae521a92e5dbc33997f84[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Thu Mar 21 14:25:16 2024 +0000

    chore(DirectSum): drop a `DecidableEq` assumption (#11537)

[33mcommit b4f13104466e0e7ce3ca3e92d84f1bfebe905c4e[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Thu Mar 21 13:04:20 2024 +0000

    chore(DedekindDomain): drop a `DecidableEq` assumption (#11532)

[33mcommit ebbc0fe2a788979f9147bb3d51a17ff16e3fe3b1[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Thu Mar 21 13:04:19 2024 +0000

    chore(HahnSeries): fix `Fintype`/`Finite` (#11531)

[33mcommit 51ab0bbfea0ca1b75fd166da49948a8a480e1dc5[m
Author: R√©my Degenne <Remydegenne@gmail.com>
Date:   Thu Mar 21 12:35:06 2024 +0000

    chore(MeasureTheory.Decomposition.Lebesgue): cleaning and a few new basic lemmas (#11561)
    
    Move lemmas to put similar ones together, replace `refine'` by `refine` and `=>` by `‚Ü¶`.
    Lemmas added:
    * `singularPart_add_rnDeriv` and `rnDeriv_add_singularPart`: almost aliases of `haveLebesgueDecomposition_add`
    * `haveLebesgueDecomposition_smul'`, `haveLebesgueDecomposition_rnDeriv`
    * `singularPart_eq_zero_of_ac`, `singularPart_eq_zero`, `singularPart_self`, `singularPart_eq_self`
    
    
    
    Co-authored-by: R√©my Degenne <remydegenne@gmail.com>

[33mcommit bba4917dc01009b014f3e2b64bd965777ea85282[m
Author: Markus Himmel <markus@himmel-villmar.de>
Date:   Thu Mar 21 10:04:05 2024 +0000

    feat: add API for extension of cones (#11560)

[33mcommit aab5a051f461ef11bea685fa71ea62dfe73cf002[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Thu Mar 21 09:38:30 2024 +0000

    chore(AffineSpace/Matrix): fix `Fintype`/`Finite` (#11559)

[33mcommit 6b5676602085ed9a341728c9b39893bfeac0c731[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Thu Mar 21 09:38:29 2024 +0000

    chore(Star/Matrix): drop `DecidableEq` assumptions (#11557)

[33mcommit b505e8e95355ffa50b65cb450e35e8e5aa19cab3[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Thu Mar 21 08:50:28 2024 +0000

    chore: rename away from 'def' (#11548)
    
    This will become an error in 2024-03-16 nightly, possibly not permanently.
    
    
    
    Co-authored-by: Scott Morrison <scott@tqft.net>

[33mcommit 5befdcb9964fec0dd865b9ff6aa79dfe8bcc9d5d[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Thu Mar 21 06:43:12 2024 +0000

    chore: classify "`simp` can prove" porting notes (#11550)
    
    Classifies by adding issue number #10618 to porting notes claiming "`simp` can prove it".

[33mcommit bf26b9c5916539c3f2e861c641b086688943bb04[m
Author: Bolton Bailey <bolton.bailey@gmail.com>
Date:   Thu Mar 21 05:04:33 2024 +0000

    chore: split insertNth lemmas from List.Basic (#11542)
    
    Removes the `insertNth` section of this long file to its own new file. This section seems to be completely independent of the rest of the file, so this is a fairly easy split to make.

[33mcommit fa6bad67263f946dc73f955341882ca165f62b5c[m
Author: Mitchell Lee <trivial171@gmail.com>
Date:   Thu Mar 21 02:09:36 2024 +0000

    feat: the generators of a presented group generate the presented group (#11493)
    
    - Add `FreeGroup.closure_range_of`: the subgroup closure of the range of `FreeGroup.of : Œ± ‚Üí FreeGroup Œ±` is `‚ä§`. (That is, the generators of a free group generate the free group.)
    - Add `PresentedGroup.closure_range_of`: the subgroup closure of the range of `PresentedGroup.of : Œ± ‚Üí PresentedGroup rels` is `‚ä§`. (That is, the generators of a presented group generate the presented group.)

[33mcommit c5a921ecec0db297ed7d867efeece56a971e21f6[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Thu Mar 21 00:51:52 2024 +0000

    chore: simplify some proofs for the 2024-03-16 nightly (#11547)
    
    Some small changes to adapt to the 2024-03-16 nightly that can land in advance.

[33mcommit 026dd7019a2e8d3325cfde62ae3186d879727065[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Wed Mar 20 23:42:49 2024 +0000

    chore: Rename `cat_coe_nat`/`cast_coe_int` to `cast_natCast`/`cast_intCast` (#11552)
    
    Reduce the diff of #11499

[33mcommit c63c49a48813d30081915e5acc671f70a65cf8a4[m
Author: Bolton Bailey <bolton.bailey@gmail.com>
Date:   Wed Mar 20 22:37:13 2024 +0000

    chore: golf two_lt_card_iff (#11541)
    
    Makes the proof of this lemma shorter and perhaps cleaner by adding a new lemma and moving it forward to take advantage of the preexisting `card_eq_three`
    
    
    
    Co-authored-by: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>

[33mcommit b163aa02c078917352368e6f049cc1dc1c00880d[m
Author: Markus Himmel <markus@himmel-villmar.de>
Date:   Wed Mar 20 22:11:17 2024 +0000

    feat: remove superseded `small_of_fintype` (#11326)

[33mcommit d8258805abacf5e1925ac9aecc5c943f9974be9f[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Mar 20 20:37:04 2024 +0000

    chore(HomOrthogonal): fix `Fintype`/`Finite` (#11539)

[33mcommit 5db12dbc524490cd4f349d9ca1e80d05043ccf13[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Mar 20 19:29:17 2024 +0000

    chore(Module/Zlattice): fix `Fintype`/`Finite` (#11538)

[33mcommit 4e3a442436a1eae605034e670e6426ba77d25c79[m
Author: Michael Stoll <Michael.Stoll@uni-bayreuth.de>
Date:   Wed Mar 20 19:03:24 2024 +0000

    feat(NumberTheory/LSeries/Deriv): derivatives of L-series (#11245)
    
    This adds a file `Mathlib.NumberTheory.LSeries.Deriv` that contains results on differentiability and derivatives of L-series, including the fact that the L-series is holomorphic on its right half-plane of absolute convergence.
    
    See [this thread](https://leanprover.zulipchat.com/#narrow/stream/144837-PR-reviews/topic/L-series/near/424858837) on Zulip.
    
    
    
    Co-authored-by: David Loeffler <d.loeffler.01@cantab.net>

[33mcommit 5b192fd118426110fc165d1112d9b7dab44f4649[m[33m ([m[1;31morigin/removeArguments[m[33m)[m
Author: David Loeffler <d.loeffler.01@cantab.net>
Date:   Wed Mar 20 16:24:08 2024 +0000

    feat(NumberTheory/LSeries): abstract functional equations (#11176)
    
    A general framework for proving analytic continuation & functional equations via Mellin transforms.

[33mcommit 32531f6a61daf705cf6b38726b3c2ac5bcc553d1[m
Author: R√©my Degenne <Remydegenne@gmail.com>
Date:   Wed Mar 20 15:45:55 2024 +0000

    feat: density of a finite kernel wrt another kernel (#10948)
    
    Let `Œ∫ : kernel Œ± (Œ≥ √ó Œ≤)` and `ŒΩ : kernel Œ± Œ≥` be two finite kernels with `kernel.fst Œ∫ ‚â§ ŒΩ`, where `Œ≥` has a countably generated œÉ-algebra (true in particular for standard Borel spaces).
    We build a function `f : Œ± ‚Üí Œ≥ ‚Üí Set Œ≤ ‚Üí ‚Ñù` jointly measurable in the first two arguments such that for all `a : Œ±` and all measurable sets `s : Set Œ≤` and `A : Set Œ≥`, `‚à´ x in A, f a x s ‚àÇ(ŒΩ a) = (Œ∫ a (A √óÀ¢ s)).toReal`.
    
    
    
    Co-authored-by: R√©my Degenne <remydegenne@gmail.com>

[33mcommit a584fa177566f0d0f75e9d4263d618bd58c739f1[m
Author: David Renshaw <dwrenshaw@gmail.com>
Date:   Wed Mar 20 15:20:23 2024 +0000

    fix: add imports now needed in Imo1998Q2 and Imo1988Q6 (#11535)
    
    Fixes breakage from #11507.

[33mcommit 01017f42108c701bd12747e2f892b260d0e75dc4[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Wed Mar 20 13:56:14 2024 +0000

    chore(GroupTheory/Nilpotent): slight golfs and clean-up (#11516)
    
    - replace apply foo.mpr by rw [foo], golfing into the next line
    - replace a few `@foo _ _ _` by named arguments

[33mcommit fa3a2fdc7d3f777f8b231c64de1db7c1ad75d826[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Wed Mar 20 13:56:13 2024 +0000

    golf: replace some `apply foo.mpr` by `rw [foo]` (#11515)
    
    Sometimes, that line can be golfed into the next line.
    Inspired by a [comment](https://github.com/leanprover-community/mathlib4/pull/11208#discussion_r1530467335) of @loefflerd; any decisions are my own.

[33mcommit 3a427de210c0cb6b0771aba4528860665f7c5c2f[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Mar 20 13:11:05 2024 +0000

    refactor(UniformSpace): change the definition (#10901)
    
    - replace `isOpen_uniformity` with `nhds_eq_comap_uniformity`
      as I suggested in #2028
    - don't extend `UniformSpace.Core` so that we can drop `refl`,
      as it follows from `nhds_eq_comap_uniformity`;
    - drop `UniformSpace.mk'` - can't be a `match_pattern` anymore;
    - deprecate `UniformSpace.ofNhdsEqComap`.

[33mcommit 75dad16215b174854391fabf06c00782dc1a42e6[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Wed Mar 20 12:03:47 2024 +0000

    chore: Rename `zpow_coe_nat` to `zpow_natCast` (#11528)
    
    ... and add a deprecated alias for the old name. This is mostly just me discovering the power of `F2`

[33mcommit 9db657964122050f7da70caad14e477e86b49a55[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Wed Mar 20 10:53:26 2024 +0000

    chore(Data/Funlike): update examples and replace Lean 3 syntax (#11409)
    
    Fully update the module docstrings (in particular, the examples given therein) after #8386.
    
    This includes switching to where syntax, but also replacing Lean 3 syntax, replacing => by "\mapsto" while at it and indenting code per the style guide. As such, it's also a follow-up to #11301.
    
    Co-authored-by: @Vierkantor
    
    
    
    Co-authored-by: Vierkantor <vierkantor@vierkantor.com>

[33mcommit f637899e5ca4b2a7120dca3cdb79a96822a080e4[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Wed Mar 20 10:53:25 2024 +0000

    chore: golf using `filter_upwards` (#11208)
    
    This is presumably not exhaustive, but covers about a hundred instances.
    
    Style opinions (e.g., why a particular change is great/not a good idea) are very welcome; I'm still forming my own.

[33mcommit 64aa2a28f527e8c24a719580e8bd56356cbf5640[m
Author: Johan Commelin <johan@commelin.net>
Date:   Wed Mar 20 10:53:23 2024 +0000

    chore(LinearAlgebra/Matrix/ToLin): clean up (#11171)

[33mcommit 63ca896d7c056a1cb9d9abd5f41afb4c19a5f32b[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Wed Mar 20 10:53:22 2024 +0000

    chore(Topology/ContinuousFunction/Bounded): Rename instances (#10780)
    
    All the unnamed instances here were very long, and Moritz recently linked one of these to a newcomer.
    
    Also slightly clean up the `Lattice` instance

[33mcommit 61e0ad2f87ae679be1b6e436821c76a276358f25[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Wed Mar 20 09:04:06 2024 +0000

    chore: Move basic ordered field lemmas (#11503)
    
    These lemmas are needed to define the semifield structure on `NNRat`, hence I am repurposing `Algebra.Order.Field.Defs` from avoiding a timeout (which I believe was solved long ago) to avoiding to import random stuff in the definition of the semifield structure on `NNRat` (although this PR doesn't actually reduce imports there, it will be in a later PR).
    
    Reduce the diff of #11203

[33mcommit 0153e9bb6a5e0aaf5ef13f3f5a244cec0d9545c9[m
Author: Yury G. Kudryashov <kmill31415@gmail.com>
Date:   Wed Mar 20 04:59:33 2024 +0000

    feat(Lean/Expr): define `Expr.eraseProofs` (#10867)
    
    Co-authored-by: @kmill , @thorimur
    
    
    
    Co-authored-by: Yury G. Kudryashov <urkud@urkud.name>

[33mcommit 4c8f5f4b2dc1df4f04cb5e71fb08367a97769627[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Mar 20 02:43:19 2024 +0000

    feat(Separation): define R0 spaces (#10621)
    
    Generalize `coclosedCompact_eq_cocompact` and `relativelyCompact`.

[33mcommit 69fd837a71463d8905afbf335b908a035aa11a7e[m
Author: Jeremy Tan Jie Rui <reddeloostw@gmail.com>
Date:   Tue Mar 19 23:05:11 2024 +0000

    refactor: single-edge graph (#9736)
    
    From https://github.com/leanprover-community/mathlib4/pull/9267#discussion_r1451605191:
    > I would prefer we use lattice operations for adding edges. The idea is to make constructor `SimpleGraph.edge (v w : V) : SimpleGraph V` that creates a graph with a single edge between `v` and `w` if they're not equal (and no edge if they are), and then `G.addEdge v w` would instead be `G ‚äî edge v w`. This is more versatile, though perhaps lemmas such as `addEdge_of_adj` are a bit more brittle to apply.

[33mcommit d0257020513851aa276246e01c104b06ea39cf02[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Tue Mar 19 22:00:37 2024 +0000

    chore: Move `pow_lt_pow_succ` to `Algebra.Order.WithZero` (#11507)
    
    These lemmas can be defined earlier, ridding us of an import in `Algebra.GroupPower.Order`

[33mcommit 119c442ed44b84b08764546b4411b2327db7eec1[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Tue Mar 19 20:08:16 2024 +0000

    chore: classify "added `theorem`" porting notes (#11513)
    
    Classifies by adding issue number #11432 to porting notes claiming "added theorem" or "added lemma".

[33mcommit 5dc8b362b3ea6ffbb7cc7800372073ad9f7bdd7f[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Tue Mar 19 20:08:15 2024 +0000

    chore: classify `new definition` porting notes (#11512)
    
    Classifies by adding issue number #11446 to porting notes claiming "added definition".

[33mcommit b3a2821f5f972a3229b9fd01c3fd065383d485c9[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Tue Mar 19 20:08:14 2024 +0000

    chore: tidy various files (#11490)

[33mcommit c9f13612c5f6500620f9b971f7ec57dda7fcd041[m
Author: Amelia Livingston <101damnations@github.com>
Date:   Tue Mar 19 18:17:49 2024 +0000

    perf(LinearAlgebra.TensorProduct.Basic): add `TensorProduct.addMonoid` (#11505)
    
    We define `TensorProduct.addCommMonoid` in terms of `TensorProduct.addMonoid` to reduce unfolding.

[33mcommit 75784e0d905cdc1d09dbea42083afb078e75134a[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Tue Mar 19 18:17:48 2024 +0000

    chore: rename open_range to isOpen_range, closed_range to isClosed_range (#11438)
    
    All these lemmas refer to the range of some function being open/range (i.e. `isOpen` or `isClosed`).

[33mcommit 5c4a670cff6c67eabd6056e3a906233defe69178[m
Author: awueth <83429722+awueth@users.noreply.github.com>
Date:   Tue Mar 19 17:09:13 2024 +0000

    feat(Data/Matrix/Basic): add missing theorem mulVec_sub (#11392)
    
    Adds the following missing theorem
    ```
    theorem mulVec_sub [Fintype n] (A : Matrix m n Œ±) (x y : n ‚Üí Œ±) :
        A *·µ• (x - y) = A *·µ• x - A *·µ• y
    ```
    Currently there only is ```mulVec_sub```. I asked about it here on [zulip](https://leanprover.zulipchat.com/#narrow/stream/113489-new-members/topic/No.20theorem.20Matrix.2EmulVec_sub).

[33mcommit e623116d4b5ab7ea5ec8f3416cb1edac7dc6c5dc[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Tue Mar 19 17:09:12 2024 +0000

    feat: lemmas about `List.reverseRecOn` (#11257)
    
    This renames the arguments to the eliminators to be more ergonomic when using the `induction` tactic.
    
    I also changed the definition in an attempt to make the proof easier.

[33mcommit 82e96fe9796b0e9235986614695cb725a2020f2b[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Tue Mar 19 16:06:54 2024 +0000

    chore: Protect `Nat.xor_comm` (#11506)
    
    as it conflicts with `xor_comm` in the root namespace. Also protect `Nat.xor_assoc` in case someone adds `xor_assoc`.

[33mcommit 8ff9aa61aa54b5a0eaede0e1db6e9e167cb05bd5[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Tue Mar 19 14:54:03 2024 +0000

    chore: Move `GroupWithZero` lemmas earlier (#10919)
    
    Move from `Algebra.GroupWithZero.Units.Lemmas` to `Algebra.GroupWithZero.Units.Basic` the lemmas that can be moved.

[33mcommit 5f5e83b04dc7c6ed82c596c14bd3fdd0e9a7b381[m
Author: Markus Himmel <markus@himmel-villmar.de>
Date:   Tue Mar 19 14:21:17 2024 +0000

    feat: cocones lift to the over category (#11488)

[33mcommit e2f74f2c6fc3d9b6fd3c1f02b13ac0401ab261c9[m
Author: Xavier Roblot <46200072+xroblot@users.noreply.github.com>
Date:   Tue Mar 19 14:21:15 2024 +0000

    feat: Add `Zlattice.basis` (#11323)
    
    For a  `‚Ñ§`-lattice `L` of `E`, defined as a discrete subgroup that spans the whole space `E` over `K`, proves that any  `‚Ñ§`-basis of `L` is also a `K`-basis of `E`. This provides the link between the two points of view on lattices in this file.

[33mcommit 6d4365dba4d36ff9ceafd8ace95b560f01bdd4c7[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Tue Mar 19 13:54:03 2024 +0000

    chore(CategoryTheory): split the file `CategoryTheory/Sites/EffectiveEpimorphic/Basic.lean` (#11458)
    
    Adds no new material, just splits the file into smaller chunks and removes a couple of useless lemmas.
    
    - [x] depends on: #11457

[33mcommit c9a06998fe84b2f04365a09f8f597c5c620d79a7[m
Author: Scott Morrison <scott@tqft.net>
Date:   Tue Mar 19 10:57:11 2024 +0000

    chore: update github actions (#11467)
    
    Hopefully has no effect except to remove some warnings in the build logs.
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 921f506f2a1465f0ace97d7ce393992dbdf30744[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Tue Mar 19 10:57:10 2024 +0000

    feat(Algebra/Homology): behaviour of the total complex with respect to the shifts (#10854)
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit 4bf0be48ca88a6c2f0866fe2604bcdf6ec565641[m
Author: Scott Morrison <scott@tqft.net>
Date:   Tue Mar 19 09:49:28 2024 +0000

    chore(Mathlib/Data/List/Basic): minimize imports (#11497)
    
    Use `Nat` specialized theorems, and `omega`, where necessary to avoid needing to import the abstract ordered algebra hierarchy for basic results about `List`.
    
    Import graph between `Mathlib.Order.Basic` and `Mathlib.Data.List.Basic`:
    * [before.pdf](https://github.com/leanprover-community/mathlib4/files/14646805/before.pdf)
    * [after.pdf](https://github.com/leanprover-community/mathlib4/files/14646804/after.pdf)
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 8a2bb969b64a0964468284696a7ba8b577dd2b78[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Tue Mar 19 09:18:55 2024 +0000

    feat(Algebra/Homology): the category of short complexes is linear (#10923)
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit c13f0f5bfdf81a648b610b96e8381ccde5da237a[m
Author: Markus Himmel <markus@himmel-villmar.de>
Date:   Tue Mar 19 06:00:54 2024 +0000

    feat: further relax assumptions for (co)limits in Type (#11487)
    
    After #11148, all results about concrete limits and colimits hold whenever the relevant (co)limits exist, which is optimal. Thanks to Jo√´l Riou for making this possible!

[33mcommit 919892de30d1f0c439334232c933e7130111353e[m
Author: Scott Morrison <scott@tqft.net>
Date:   Tue Mar 19 03:58:53 2024 +0000

    chore: add actionlint (#11471)
    
    
    
    Co-authored-by: adomani <adomani@gmail.com>
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>
    Co-authored-by: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>

[33mcommit efca024344c56aaeef933ea1b2243a4342275a14[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Tue Mar 19 03:35:19 2024 +0000

    fix(Cache): do not read lake-manifest.json at import-time (#11492)
    
    Previously this file was read four times at runtime, and once for each file at compile time. Now it is read only once, when `lake exe cache` is run.
    
    `initialize` is not a substitute for correctly passing global state through a program; my impression is that it is intended for *language-* rather than program-level initialization.
    
    The performance impact is negligible, but the new code is more predictable.
    
    Tested on mathlib, and on a package created using `lake new foo math`, pointed at this mathlib branch. `lake exe cache get` works correctly (leaves `lake build` with nothing to do) in both cases.

[33mcommit 23ebcffbdbca2ad688beba752a235d7f89f3c33c[m
Author: Joseph Myers <jsm@polyomino.org.uk>
Date:   Tue Mar 19 00:24:56 2024 +0000

    feat(GroupTheory/GroupAction/SubMulAction): two more orbit lemmas (#11463)
    
    Add two more lemmas about orbits in a `SubMulAction`, both closely related to the existing `val_image_orbit`.
    
    From AperiodicMonotilesLean.
    
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 346550b886da1378d601c189eb522b448db94501[m
Author: Christopher Hoskin <vierkantor@vierkantor.com>
Date:   Mon Mar 18 23:55:30 2024 +0000

    refactor(LinearAlgebra/BilinearForm/Basic): descope `BilinForm` to modules over commutative semirings (#11280)
    
    Require the module in the definition of the `BilinForm` structure to be over a commutative semiring.
    
    This PR is a per-requisite for #11278. It supersedes #10422.
    
    It's been pointed out elsewhere that the current definition over a non-commutative semiring doesn't make mathematical sense: https://github.com/leanprover-community/mathlib4/issues/10553#issuecomment-1944434170
    
    Eventually the non-commutative situation may be considered in a mathematically meaningful way in the context of sesquilinear maps (e.g. something like https://github.com/leanprover-community/mathlib4/pull/9334#pullrequestreview-1880856848).
    
    Co-authored-by: @Vierkantor
    
    
    
    Co-authored-by: Christopher Hoskin <christopher.hoskin@gmail.com>
    Co-authored-by: Christopher Hoskin <christopher.hoskin@overleaf.com>
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit e38a3c0732d7f5f6a4d582d5b6e49c648c468260[m
Author: Markus Himmel <markus@himmel-villmar.de>
Date:   Mon Mar 18 21:07:09 2024 +0000

    feat: functor creates limit if it lifts a single limit cone (#11482)

[33mcommit 7ba92d5c60edc3d6e4f023e9bada7d5272004a06[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Mon Mar 18 20:42:51 2024 +0000

    feat(CategoryTheory): construction of a functor for the small object argument (#11056)
    
    Given a family of morphisms `f i : A i ‚ü∂ B i` in a category `C` and an object `S : C`, we define a functor `SmallObject.functor f S : Over S ‚•§ Over S` which shall play an important role in the formalization of the "small object argument".
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit a67cd894a3166710502a71594555fb3d7580c8ad[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Mon Mar 18 20:42:50 2024 +0000

    feat(CategoryTheory/GradedObject): the associator for the composition of bifunctors (#10747)
    
    When bifunctors `F‚ÇÅ‚ÇÇ`, `G`, `F` and `G‚ÇÇ‚ÇÉ` are equipped with a natural isomorphism `G(F‚ÇÅ‚ÇÇ(X‚ÇÅ, X‚ÇÇ), X‚ÇÉ) ‚âÖ F(X‚ÇÅ, G‚ÇÇ‚ÇÉ(X‚ÇÇ, X‚ÇÉ))` in three variables, then under reasonable assumptions and conditions on indices, there is an associator isomorphism for the action of these bifunctors on graded objects `mapBifunctorMapObj G œÅ‚ÇÅ‚ÇÇ.q (mapBifunctorMapObj F‚ÇÅ‚ÇÇ œÅ‚ÇÅ‚ÇÇ.p X‚ÇÅ X‚ÇÇ) X‚ÇÉ ‚âÖmapBifunctorMapObj F œÅ‚ÇÇ‚ÇÉ.q X‚ÇÅ (mapBifunctorMapObj G‚ÇÇ‚ÇÉ œÅ‚ÇÇ‚ÇÉ.p X‚ÇÇ X‚ÇÉ)`.
    
    This shall be used in order to construct the associator isomorphism for the monoidal category structure on graded objects.
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit 15e8bbd965a916dc85c3a4139fce168a2b244cd9[m
Author: Filippo A. E. Nuccio <filippo.nuccio@univ-st-etienne.fr>
Date:   Mon Mar 18 20:17:41 2024 +0000

    chore(Order/Birkhoff): remove unnecessary assumption (#10924)
    
    Remove the assumption that the type be a distributive lattice when partial order suffices in Birkhoff's representation theorem.
    
    Co-authored by : Sam van Gool @samvang
    
    
    
    Co-authored-by: Ya√´l Dillies <yael.dillies@gmail.com>
    Co-authored-by: Sam <59202064+samvang@users.noreply.github.com>
    Co-authored-by: samvang <59202064+samvang@users.noreply.github.com>

[33mcommit 75c86f04e73fcfbb20dcfa62e7f1f47c88401534[m
Author: Johan Commelin <johan@commelin.net>
Date:   Mon Mar 18 17:11:01 2024 +0000

    chore(*): remove empty lines between variable statements (#11418)
    
    Empty lines were removed by executing the following Python script twice
    ```python
    import os
    import re
    
    
    # Loop through each file in the repository
    for dir_path, dirs, files in os.walk('.'):
      for filename in files:
        if filename.endswith('.lean'):
          file_path = os.path.join(dir_path, filename)
    
          # Open the file and read its contents
          with open(file_path, 'r') as file:
            content = file.read()
    
          # Use a regular expression to replace sequences of "variable" lines separated by empty lines
          # with sequences without empty lines
          modified_content = re.sub(r'(variable.*\n)\n(variable(?! .* in))', r'\1\2', content)
    
          # Write the modified content back to the file
          with open(file_path, 'w') as file:
            file.write(modified_content)
    ```

[33mcommit 43cd363dca1b6b8c11ff0d39af58f5a0d89b40a2[m
Author: Kevin Buzzard <k.buzzard@imperial.ac.uk>
Date:   Mon Mar 18 16:28:50 2024 +0000

    fix(RingTheory.Kaehler): fix map docstring (#11459)

[33mcommit 6aee244f06d450fff992a2a174c11c9b4616f5b4[m
Author: Xavier Roblot <46200072+xroblot@users.noreply.github.com>
Date:   Mon Mar 18 12:19:48 2024 +0000

    chore: Define the class `IsZlattice` (#11356)
    
    See the Zulip [thread](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Class.20.60IsZlattice.60/near/426301607)

[33mcommit f2e29b631b2e041fc99cb9eec385938d76b61c38[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Mon Mar 18 10:51:18 2024 +0000

    chore(Algebra/*/Opposite): fix names for ring-related instances (#11453)

[33mcommit e22cf367604bd3644e5555ce48e66e670d87b5e7[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Mar 18 10:51:17 2024 +0000

    chore(*): Fintype -> Finite, drop Decidable (#11423)
    
    Also, in some cases drop unneeded `Fintype` arguments.

[33mcommit 86b4c66bb69880486a2d287adf974855ed0f7ac8[m
Author: Richard Copley <buster@buster.me.uk>
Date:   Mon Mar 18 10:51:16 2024 +0000

    fix: rename `LocallyFiniteOrderTop.ofIic` to `LocallyFiniteOrderBot` (#11371)
    
    It's about `LocallyFiniteOrderBot`, so the current name is simply wrong.
    
    Also fix documentation mistakes. These errors were already present in Mathlib 3, before the port.
    
    
    
    Co-authored-by: Richard Copley <rcopley@gmail.com>

[33mcommit fdc00438d342491de0ed8acec3ebf0b7ba8adbb8[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Mon Mar 18 09:46:33 2024 +0000

    chore: classify "`@[simp]` can prove" porting notes (#11474)
    
    Classifies by adding issue number #10618 to porting notes claiming
    
    > `@[simp]` can prove

[33mcommit 93867128b9fad80fb34549e65ccbdcb5cb16319b[m
Author: Kevin Buzzard <k.buzzard@imperial.ac.uk>
Date:   Mon Mar 18 09:20:32 2024 +0000

    feat: add mod n cyclotomic character (#6342)
    
    We define the group homomorphism Aut(L)->(Z/dZ)^* coming from the action on the n'th roots of unity in L. Here d is the number of n'th roots of unity in L (which might not be n in this generality).
    
    We also make API for the standard special case when there are n n'th roots of unity in L, calling it `ModularCyclotomicCharacter`.
    
    Joint work with Hanneke Wiersema, coming from the Leiden conference on machine checked mathematics.

[33mcommit 7f61923ac7a0b566f4d0ab98bb87446bbfe416ec[m
Author: Scott Morrison <scott@tqft.net>
Date:   Mon Mar 18 08:09:08 2024 +0000

    chore: fix quotes in nightly-testing bot (#11469)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 1640667583db65dab892533b0059dac5c0a67270[m
Author: damiano <adomani@gmail.com>
Date:   Sun Mar 17 22:48:35 2024 +0000

    CI: lint, also after unsuccessful shake (#11454)
    
    This PR changes the behaviour of CI: after an unsuccessful `shake`, CI will continue to lint mathlib.
    
    You can take a look at #11452 for an example of the CI proposed in this PR acting in a situation where an unused import is present.  `shake` fails, but CI still linted mathlib.
    
    [Zulip discussion](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/CI.3A.20continue.20on.20failure.3F/near/426905828)

[33mcommit d706fb5abfd2e92fdf515d291d7eedbaf20258e0[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Sun Mar 17 21:35:25 2024 +0000

    chore: classify "removed `@[pp_nodot]`" porting notes (#11447)
    
    Classifies by adding issue number #11180 to porting notes claiming:
    
    > removed `@[pp_nodot]`

[33mcommit 3fcb743a3b902512d7a3d53f2c3dcb4b5425f786[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Sun Mar 17 21:35:24 2024 +0000

    chore: classify `new definition` porting notes (#11446)
    
    Classifies by adding issue number #11445 to porting notes claiming anything equivalent to:
    
    - "new definition"
    - "added definition"

[33mcommit 15ca3da0729aacf1512f4d3c30d64a79614118b6[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Sun Mar 17 21:35:23 2024 +0000

    chore: classify `rfl required` porting notes (#11442)
    
    Classifies by adding issue number #11441 to porting notes claiming:
    
    > `rfl` required.

[33mcommit 391753451ef753aaf534534b505d24bed783efd9[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Sun Mar 17 21:35:22 2024 +0000

    chore: classify `new instance` porting notes (#11433)
    
    Classifies by adding issue number #10754 to porting notes claiming "new instance".

[33mcommit 55fe40272e2f90efb7c5cc9e7b1219fd8f95e685[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Sun Mar 17 21:35:21 2024 +0000

    chore: classify `new theorem / theorem` porting notes (#11432)
    
    Classifies by adding issue number #10756 to porting notes claiming anything equivalent to:
    
    - "added theorem"
    - "added theorems"
    - "new theorem"
    - "new theorems"
    - "added lemma"
    - "new lemma"
    - "new lemmas"

[33mcommit d47822ad114140ef5e5f0506975742d57527490f[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sun Mar 17 21:35:20 2024 +0000

    chore(Squarefree): drop a `DecidableEq` assumption (#11427)
    
    Use `classical` instead

[33mcommit 42034198d68bfb8ae440c1d819b8552d28580242[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sun Mar 17 21:35:19 2024 +0000

    chore(UniqueFactorizationDomain): golf (#11424)
    
    Move `factors_zero` up, use it to golf `ne_zero_of_mem_factors`

[33mcommit d94dbffde2e4f84a7df9ba36e80680ba20ad4eed[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Sun Mar 17 21:03:31 2024 +0000

    fix(CategoryTheory): fix a typo in `IsLimit` file (#11450)

[33mcommit 9d3f2bf8a149ca8d150b28e81d13b928fffb4728[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Sun Mar 17 17:51:07 2024 +0000

    chore(Algebra): improve argument names to induction principles (#11439)
    
    These are the case names used by the `induction` tactic after the `with`.
    
    This replaces `H0`, `H1`, `Hmul` etc with `zero`, `one`, `mul`.
    
    This PR does not touch `Submonoid` or `Subgroup`, as `to_additive` does not know how to rename the argument names.
    There are ways to work around this, but I'd prefer to leave them to a later PR.
    
    This also leaves the `closure_induction‚ÇÇ` variants alone, as renaming the arguments is more work for less gain.

[33mcommit 8a25f82b678582ba35929b465a91b0edfd61db00[m
Author: R√©my Degenne <Remydegenne@gmail.com>
Date:   Sun Mar 17 17:51:06 2024 +0000

    feat(Probability/Kernel): build a kernel from a kernel CDF (#11209)
    
    Let `Œ∫ : kernel Œ± (Œ≤ √ó ‚Ñù)` and `ŒΩ : kernel Œ± Œ≤` be two finite kernels. A function `f : Œ± √ó Œ≤ ‚Üí StieltjesFunction` is called a conditional kernel CDF of `Œ∫` with respect to `ŒΩ` if it is measurable, tends to to 0 at -‚àû and to 1 at +‚àû for all `p : Œ± √ó Œ≤`, if `fun b ‚Ü¶ f (a, b) x` is `(ŒΩ a)`-integrable for all `a : Œ±` and `x : ‚Ñù` and for all measurable sets `s : Set Œ≤`, `‚à´ b in s, f (a, b) x ‚àÇ(ŒΩ a) = (Œ∫ a (s √óÀ¢ Iic x)).toReal`.
    
    From such a function with property `hf : IsCondKernelCDF f Œ∫ ŒΩ`, we build a `kernel (Œ± √ó Œ≤) ‚Ñù` denoted by `hf.toKernel f` such that `Œ∫ = ŒΩ ‚äó‚Çñ hf.toKernel f`.
    
    The new file has substantial overlap with the contents of `Probability.Kernel.Disintegration` and `Probability.Kernel.CondCdf`: these two files will later be refactored to use the code in this PR.
    
    
    
    Co-authored-by: R√©my Degenne <remydegenne@gmail.com>

[33mcommit b6531c9ee4cf85fc25f416e4faae18fb78b24bee[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Sun Mar 17 17:02:33 2024 +0000

    chore: resolve "`apply` ‚Üí `induction`" porting notes (#11444)
    
    Resolves porting notes claiming "`apply` ‚Üí `induction`" since the new `induction` is more idiomatic than `apply`.

[33mcommit 0a75699a7239a5191ef24a8df3b940884fec29bc[m
Author: kkytola <kalle.kytola@aalto.fi>
Date:   Sun Mar 17 14:50:57 2024 +0000

    feat: Levy-Prokhorov topology is finer than convergence in distribution (#10406)
    
    This PR establishes an easy topology comparison: the topology given by the L√©vy-Prokhorov distance is finer than the topology of convergence in distribution.
    
    
    
    Co-authored-by: kkytola <39528102+kkytola@users.noreply.github.com>
    Co-authored-by: kkytola <‚Äúkalle.kytola@aalto.fi‚Äù>
    Co-authored-by: Yury G. Kudryashov <urkud@urkud.name>

[33mcommit c8b75810ec3a3b0f39d02459ff8f632a0476de86[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Sun Mar 17 13:36:14 2024 +0000

    doc: fix Lean 3 syntax in more tests and docstrings (#11426)
    
    Best reviewed commit by commit.

[33mcommit b504561eea619027f9657c95838c915cda874824[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Sun Mar 17 13:36:13 2024 +0000

    fix(Order/Zorn): update usage example to Lean 4 syntax (#11425)
    
    Double-checking the syntax is welcome.

[33mcommit e88fcb888fd17e7a2beef4ae599309145696a816[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Sun Mar 17 13:36:12 2024 +0000

    doc: replace `variables`, `universes`' syntax in doc comments (#11404)
    
    It's deprecated in favour of `variable`; likely a leftover from the port.
    Also replace `universes`, which is invalid now.

[33mcommit e7d9628f45fde599b27f676ca29617dc95e85f9c[m
Author: Anatole Dedecker <anatolededecker@gmail.com>
Date:   Sun Mar 17 13:36:12 2024 +0000

    chore: add @[elab_as_elim] to some adjoin_induction lemmas (#11338)

[33mcommit f0f609c6c7be9826135f58242be8d7e87ded7c9e[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Sun Mar 17 12:29:18 2024 +0000

    chore: replace remaining lambda syntax (#11405)
    
    Includes some doc comments and real code: this is exhaustive, with two exceptions:
    - some files are handled in #11409 instead
    - I left FunProp/{ToStd,RefinedDiscTree}.lean, Tactic/NormNum and Tactic/Simps alone, as these seem likely enough to end up in std.
    
    Follow-up to #11301, much shorter this time.

[33mcommit 6e3842d18ea982a82964364df9809ba38cca5ac9[m
Author: Christian Merten <christian@merten.dev>
Date:   Sun Mar 17 09:55:03 2024 +0000

    fix(Equiv/TransferInstance): `Module` instance diamond (#11419)
    
    Currently `Equiv.algebra` is defined in terms of `RingHom.toAlgebra'` which causes the induced `Module R` instance to not be defeq to the one from `Equiv.module`. This commit fixes this by defining `Equiv.algebra` in terms of `Algebra.ofModule`.

[33mcommit 2fbad35e1be9157b83b5298eb503c1dcd54c12bc[m
Author: David Loeffler <d.loeffler.01@cantab.net>
Date:   Sun Mar 17 08:48:57 2024 +0000

    refactor(Algebra/Group/AddChar): reimplement using structures (#11375)
    
    Following discussion at #11313 this is an attempt to refactor `Algebra/Group/AddChar.lean` such that `AddChar A M` is a structure in its own right rather than a type synonym for `Multiplicative A ‚Üí* M`.
    
    We also relax typeclass assumptions considerably (only assuming commutativity, etc, where it is really needed) and add some new functionality, e.g. composition with monoid morphisms on either side (`MonoidHom.compAddChar` and `AddChar.compAddMonoidHom`).

[33mcommit 6d1dffa1281a6e231f594e4c49ec01bc3ad9974e[m
Author: damiano <adomani@gmail.com>
Date:   Sun Mar 17 06:28:18 2024 +0000

    chore: make sure that Archive and Counterexamples are quiet (#11377)
    
    This PR proposes two changes to CI.
    
    ###  Quiet `Archive` and `Counterexamples`
    
    CI checks that building `Mathlib` and `test` produces no messages.  However, `Archive` and `Counterexamples` could be noisy and CI would not detect it.  This PR makes sure that also `Archive and `Counterexamples` are quiet.
    
    I noticed that `Archive` and `Counterexamples` were not required to be quiet, since they contained unused tactics flagged by the linter.
    
    EDIT: this second item is already available -- see Floris' comment below.
    
    ###  Upload the cache even when `Mathlib` is noisy
    
    This PR moves the check of quietness of `Mathlib` until after the uploading cache step, so that you can have the cache available to fix the noisiness!
    
    As a check, PR #11378 made `Mathlib` noisy, CI failed, but only after uploading the cache and building `Archive`, `Counterexamples`.  See in particular [this CI run](https://github.com/leanprover-community/mathlib4/actions/runs/8285030855/job/22671860704).

[33mcommit 7acbfc587540f6cda242e16dc439e14dbafb8890[m
Author: Markus Himmel <markus@himmel-villmar.de>
Date:   Sun Mar 17 01:49:41 2024 +0000

    feat: preserves colimit if colimit.post is iso (#11421)

[33mcommit de6d95204e228b9b72373dd3be16d14dc5fb7d9c[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sat Mar 16 21:39:59 2024 +0000

    chore(Preadditive/Biproducts): fix `Decidable`/`Fintype` (#11422)
    
    * Assume `[Finite J]` instead of `[Fintype J]` whenever we don't need data to formulate the theorem.
    * Drop `[DecidableEq]` assumptions in `biproduct.reindex`.

[33mcommit 957cdb7c485060b6a429b15e9de23153d5721e8a[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Sat Mar 16 20:45:48 2024 +0000

    chore: classify `broken dot notation` porting notes (#11429)
    
    Classifies by adding issue number #11036 to porting notes claiming:
    
    > dot notation no longer works

[33mcommit bad9e36c122df48c1aca84dd27d084d7b45ffb0a[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Sat Mar 16 19:33:17 2024 +0000

    feat: add Basis.flag_le_ker_dual (#11265)
    
    From sphere-eversion; I adapted the proof to mathlib's definition and golfed it a bit.
    This adds a new import; as this file is not imported anywhere, this seems fine.

[33mcommit 16cc6aac91ec671f7b65d89e1b915541e0e5dd1c[m
Author: Anatole Dedecker <anatolededecker@gmail.com>
Date:   Sat Mar 16 17:36:14 2024 +0000

    feat: review and expand API on behavior of topological bases under some constructions (#10732)
    
    The main addition is `IsTopologicalBasis.inf` (see https://leanprover.zulipchat.com/#narrow/stream/217875-Is-there-code-for-X.3F/topic/Inf.20of.20a.20pair.20of.20topologies/near/419989448), and I also reordered things to be in the more typical order (deducing the `Pi` version from the `iInf` version rather than the converse).
    
    Also a few extra golfs and variations.
    
    
    
    Co-authored-by: Yury G. Kudryashov <urkud@urkud.name>
    Co-authored-by: Christopher Hoskin <christopher.hoskin@gmail.com>
    Co-authored-by: Christopher Hoskin <christopher.hoskin@overleaf.com>

[33mcommit 524b851dfc011ebdaccb35313bfc60d50981877c[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Sat Mar 16 16:28:59 2024 +0000

    chore: label one porting note and fix another (#11411)
    
    Two comments with Lean 3 code looked like they should have been labelled "porting note".
    Do so; one of them can be fixed now.

[33mcommit 38b7f4a3a9153f603a878d000deb5d0a6b974f87[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Sat Mar 16 16:28:58 2024 +0000

    style(tests/Tauto): remove Lean 3 syntax in comments and touch up style (#11403)
    
    - Remove Lean 3 syntax in comments: there's no reason it should be there.
    - Indent the 'by' blocks according to the style guide.
    - Add some blank lines at beginnings of sections; that's good practice.

[33mcommit 27d3439fba4c5fb3d8c793c295941c25ea6cd963[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Sat Mar 16 16:28:57 2024 +0000

    chore: prevent API leakage on SimplexCategory (#11395)
    
    This PR removes the `simps` attribute in the definition of the category structure on `SimplexCategory` so as to prevent API leakage. Better suited `simp` lemmas are added. The definition of `SimplexCategory.const` is also generalized in order to describe any constant map in `SimplexCategory`.

[33mcommit 1e2c40679f693c82b7fdafd5208ce22071b87de9[m
Author: David Loeffler <d.loeffler.01@cantab.net>
Date:   Sat Mar 16 15:45:47 2024 +0000

    feat(InfiniteSum/NatInt): lemmas on sums over ‚Ñ§ (#11069)
    
    This PR combines several results involving topological sums over `‚Ñ§`. These results are used in #10011 (Hurwitz zeta functions) where sums over `‚Ñ§` feature heavily.
    
    * Fill in `tsum` and `Summable` variants for lemmas proved for `HasSum`
    
    * Rename some lemmas (with deprecated aliases) to impose a consistent naming scheme
    
    * Generalise several lemmas to allow the target space to be a topological monoid rather than a group.
    
    * Speed up some slow proofs (the old `summable_int_of_summable_nat` took about 10s to compile on my machine, its replacement `Summable.of_nat_of_neg` is 1000 times faster)

[33mcommit 1f22e02b142d32b5a59deaa68d203dfac83b8494[m
Author: Markus Himmel <markus@himmel-villmar.de>
Date:   Sat Mar 16 14:21:55 2024 +0000

    chore: golf proof of RepresentablyFlat.comp (#11416)

[33mcommit 00106234d9d02dc87edb1c544cf59b0028d7dace[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sat Mar 16 13:20:06 2024 +0000

    feat: better `polishSpace_of_complete_second_countable` (#10890)
    
    * Make it work for a `UniformSpace` with extra properties.
    * Use it to golf some instances.
    
    Co-authored-by: @ADedecker

[33mcommit 001273f6aa14661f918df32d07f39516aae1a762[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Sat Mar 16 11:51:36 2024 +0000

    fix(Polynomial/Laurent): replace Lean 3 syntax in comments (#11407)
    
    
    
    Co-authored-by: damiano <adomani@gmail.com>

[33mcommit 448065a6c6641b954c23c5779d7400a33c1ab0c4[m
Author: Kevin Buzzard <k.buzzard@imperial.ac.uk>
Date:   Sat Mar 16 10:44:23 2024 +0000

    perf: small speedup in InjSurj (#11413)
    
    This new order matches the order in the `extends` clause, and so results in less eta expansion.
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 14b7f747b009373b5f6e6ed2095b780a2c94db2d[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Sat Mar 16 10:05:33 2024 +0000

    docs(FunLike/Fintype): fix typo in doc comments (#11402)
    
    The non-dependent version of `DFunLike.{fintype,finite}` is called `FunLike.{fintype,finite}`; the names in the docstring do not exist.

[33mcommit a81a438d73a64284e7f95b6ec3bcd2139281e02f[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Sat Mar 16 09:40:02 2024 +0000

    doc(RepresentationTheory/FdRep): fix spelling typo (#11410)

[33mcommit 1a1dffdd3d023000aecf7e6940843980dcce9170[m
Author: Jon Eugster <eugster.jon@gmail.com>
Date:   Fri Mar 15 22:49:53 2024 +0000

    chore: fix `extract_lets` without `at` (#11400)
    
    Make `extract_lets` (without any specified `at`) work on just the goal. This supplements the already valid syntax `extract_lets at h ‚ä¢` and `extract_lets at *`

[33mcommit 980b8c7ab3924024a6568f2d4e8763772413bee7[m
Author: Markus Himmel <markus@himmel-villmar.de>
Date:   Fri Mar 15 22:26:31 2024 +0000

    feat(CategoryTheory): right adjoints are representably flat (#11412)

[33mcommit 73d8d1551b94ddc30faeb2161bac1e14ed75fc29[m
Author: Johan Commelin <johan@commelin.net>
Date:   Fri Mar 15 21:44:05 2024 +0000

    perf(test/observe): set low maxHeartbeats for test (#10498)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit e21671e7f68037b027dc6b9c0b43205dec8aaf15[m
Author: Scott Carnahan <128885296+ScottCarnahan@users.noreply.github.com>
Date:   Fri Mar 15 17:24:58 2024 +0000

    feat(RingTheory/HahnSeries/Basic): Make a Hahn series from a function with support bounded below (#9574)
    
    Given a locally finite linearly ordered set `Œì` and a function `f` on `Œì` whose support is bounded below, we produce a Hahn series whose coefficients are given by `f`.  We introduce a theorem (borrowing from mathlib3 #18604) for translating the vanishing condition to the partially well-ordered support condition that is used in the definition of Hahn Series.

[33mcommit ef2b6f2b9a86d94dcb2e6d045cc178fa86cb7de5[m
Author: Timo Carlin-Burns <timorcb@gmail.com>
Date:   Fri Mar 15 16:36:55 2024 +0000

    chore: add decidability assumptions where needed for the statement (#11157)
    
    The general policy in mathlib is to include decidability assumptions on a theorem if and only if they are used in its statement. @fpvandoorn has been working on a linter to detect cases which violate the backwards direction of that policy. (i.e. cases where `Classical.propDecidable` appears in a theorem's statement.) I've started going through [the output of that linter](https://gist.github.com/fpvandoorn/05cca028139e98bded9874169a1332d5) and this PR contains fixes for the two files I've finished so far.
    
    [Zulip thread about the linter](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/prop.20decidable.20linter/near/424101789)

[33mcommit aae7c58b533d976b8a5f52746ae7227d43b1475b[m
Author: Geoffrey Irving <irving@naml.us>
Date:   Fri Mar 15 16:00:06 2024 +0000

    feat: Semicontinuity of `f ‚àò g` for `f` semicontinuous, `g` continuous (#10822)
    
    Only the other direction exists currently, it seems.

[33mcommit 567bf08f63687833ef096577ebd36ee1f0da50d1[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Fri Mar 15 15:34:46 2024 +0000

    feat: an abstract continuous functional calculus for non-unital algebras (#11221)

[33mcommit d7e494414a0bfb3d4df1cb006b2e61aae29ca34e[m
Author: Timo Carlin-Burns <timorcb@gmail.com>
Date:   Fri Mar 15 12:53:30 2024 +0000

    fix: remove DecidableEq assumption from `factors` (#11158)
    
    It doesn't make a lot of sense for `factors` to require a `DecidableEq` assumption since it's not used in the statement, and the definition is already noncomputable. This PR removes that assumption and updates some lemmas later in the file accordingly.

[33mcommit ebabd04610d74fb0976943bfe44d1b80ba27ac57[m
Author: Jeremy Tan Jie Rui <reddeloostw@gmail.com>
Date:   Fri Mar 15 12:53:29 2024 +0000

    feat: counting elements in an interval with given residue (#9348)
    
    
    
    Co-authored-by: Yury G. Kudryashov <urkud@urkud.name>

[33mcommit b90c18e53acf27862c83f440034af08d5e5801aa[m
Author: Oliver Nash <github@olivernash.org>
Date:   Fri Mar 15 11:56:06 2024 +0000

    feat: add lemma `CanonicallyOrderedCommMonoid.single_le_prod` (#11383)

[33mcommit 2a70469b00e13369b97d224ce74a5b72dfc8ab80[m
Author: Oliver Nash <github@olivernash.org>
Date:   Fri Mar 15 10:37:48 2024 +0000

    feat: add lemmas `Polynomial.natDegree_sum_le_of_forall_le` (#11381)
    
    Also add two missing `simp` attributes

[33mcommit 6f69c4d32ac6feb33423a7d8f860eafeebf2e068[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Fri Mar 15 09:45:17 2024 +0000

    refactor: flip `LinearMap.convexHull_image` and rename to `LinearMap.image_convexHull` (#11298)
    
    - flip `LinearMap.convexHull_image` and rename to `image_convexHull`
    - while at it, also flip the direction of `convexHull_smul` and `convexHull_neg` to match this
    
    - fix argument order of `AffineMap.convexHull_image`: have the `AffineMap` argument come first; there's no good reason not to and this enables dot notation
    - inline variable `(s : Set E)` to achieve this; this is slightly clearer anyway
    
    [zulip discussion](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/image_convexHull.20vs.20convexHull_image)

[33mcommit 1384de0d072088c6eb8e33a7993aac5520f28843[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Fri Mar 15 08:34:44 2024 +0000

    chore: tidy various files (#11135)

[33mcommit c7950e4e52057c71c699329f7cdfcd2a32a48532[m
Author: Scott Morrison <scott@tqft.net>
Date:   Fri Mar 15 06:18:41 2024 +0000

    chore: remove unneeded decreasing_by and termination_by (#11386)
    
    The termination checker has been getting more capable, and many of the `termination_by` or `decreasing_by` clauses in Mathlib are no longer needed.
    
    (Note that `termination_by?` will show the automatically derived termination expression, so no information is being lost by removing these.)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 11b06ab2246eb9d0d6b0f9474a8c0ef61e437215[m
Author: damiano <adomani@gmail.com>
Date:   Fri Mar 15 06:18:40 2024 +0000

    chore: remove unused tactics in Archive and Counterexamples (#11379)
    
    More unused tactics flagged by the linter (#11308): these are all the changes in `Archive/Counterexamples` that the linter found.

[33mcommit cef4a3741c6b8f939a9c5bd74f90ee5d48d689e2[m
Author: Hongyu Ouyang <96765450+casavaca@users.noreply.github.com>
Date:   Fri Mar 15 05:55:30 2024 +0000

    chore: resolve a few porting notes of "original proof fails". (#11388)

[33mcommit 1217b6287a52e800e67df697d5f0e105c249cf77[m
Author: Scott Morrison <scott@tqft.net>
Date:   Fri Mar 15 05:29:44 2024 +0000

    chore: nightly-testing bot posts in the public stream (#11390)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 5c2a2a2109243310946b2a901598b32be14081c4[m
Author: Scott Morrison <scott@tqft.net>
Date:   Fri Mar 15 04:37:34 2024 +0000

    chore: the nightly-testing bot can remind us when to create PRs (#11391)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 0d8cfe0774aae0ae831db43db211dcbd73ac2c73[m
Author: Scott Morrison <scott@tqft.net>
Date:   Fri Mar 15 04:06:03 2024 +0000

    chore: fix nightly-testing bot logic (#11389)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit bdfe635dce70490422d0f987083f6bf04fa3ae8b[m
Author: Oliver Nash <github@olivernash.org>
Date:   Fri Mar 15 01:01:53 2024 +0000

    feat: add lemmas `Matrix.cons_val_three`, `Matrix.cons_val_four` (#11382)
    
    I just needed the `three` version of these when doing some explicit computations with a cubic polynomial. Obviously there is a limit to how far we should go but I think the proposed values are reasonable.

[33mcommit 532c33b8e0537d54ed80347900e9e6966ab64adb[m
Author: Adam Topaz <github@adamtopaz.com>
Date:   Thu Mar 14 22:18:09 2024 +0000

    feat: chosen finite products in a category (#11248)
    
    This PR introduces a class for categories with explicit choices of binary products and terminal objects, and introduces the associated (Cartesian) symmetric monoidal instance. The primary use of this class is to be able to define internal algebraic objects in categories with chosen finite products, while retaining good definitional properties of the products in question, primarily as a convenience.
    
    We introduce an instance of this new class for the category of types where the binary product is the usual type-theoretic product and the terminal object is `PUnit`. Future work will introduce an instance for other categories, especially the category of affine schemes which should make objects like group schemes more convenient.
    
    NOTE: In some sense this reverses the refactor done in https://github.com/leanprover-community/mathlib/pull/3995 but only in the particular case of binary products and terminal objects. Working with (nonexplicit) (co)limits is still the preferred way to work with (co)limits in abstract categories, and instances of `ChosenFiniteProducts` (and other similar classes which may be introduced in the future) should be carefully considered before they are introduced.

[33mcommit 0c4d96e6b94d1d61c45658d569d6e4a56fa68535[m
Author: Floris van Doorn <fpvdoorn@gmail.com>
Date:   Thu Mar 14 19:53:20 2024 +0000

    fix: add DecidableEq to two lemmas (#11376)

[33mcommit 415f2144b5cdea8d78c7370c0d2a956174223a8d[m
Author: uniwuni <uniwuni@protonmail.com>
Date:   Thu Mar 14 18:30:53 2024 +0000

    feat(RingTheory/Localization): add facts about localization at minimal prime ideals (#11201)
    
    Show that localization at minimal primes results in rings with only a single prime ideal, implying that every non-unit element is nilpotent.
    
    Co-authored-by: Junyan Xu <junyanxumath@gmail.com>
    
    
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>
    Co-authored-by: uniwuni <95649083+uniwuni@users.noreply.github.com>

[33mcommit bbb8984de17b95a705485c5d607fe0eade1ba0e6[m
Author: Scott Morrison <scott@tqft.net>
Date:   Thu Mar 14 18:06:36 2024 +0000

    feat: use polyrith/linear_combination in Algebra/Star/CHSH (#11211)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit c33c2724ab69cd409188a2b5316b4b55d12e48f7[m
Author: damiano <adomani@gmail.com>
Date:   Thu Mar 14 16:09:03 2024 +0000

    chore: remove tactics (#11365)
    
    More tactics that are not used, found using the linter at #11308.
    
    The PR consists of tactic removals, whitespace changes and replacing a porting note by an explanation.

[33mcommit 5e218f10b363a5fb8a3c6b9d9d57a93013c2d3f1[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Thu Mar 14 16:09:01 2024 +0000

    chore: resolve some porting notes which are fixed now (#11317)
    
    It started with the one in `Convex/Combination` and spiralled into revisiting all notes with `needs` in them.
    The `ToLin` changes overlap with #11171.

[33mcommit 9c2d8e0bcd11af0055eeae18cbad20e239dccc4d[m
Author: Joachim Breitner <mail@joachim-breitner.de>
Date:   Thu Mar 14 15:04:30 2024 +0000

    refactor(Data.Finset.Card): termination_by change (#11370)
    
    this will break once https://github.com/leanprover/lean4/pull/3658
    lands, so let's fix this now.
    
    Also avoids binding unused variables in `termination_by`.

[33mcommit 7f38ed7c027c8884b78224ad9ee2137ee3b6ca0d[m
Author: Oliver Nash <github@olivernash.org>
Date:   Thu Mar 14 11:12:46 2024 +0000

    feat: the `n`th symmetric power is equivalent to maps of total mass `n`. (#11360)
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit af0f54a90e733ee91959d46480d4fd04c4c158a8[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Thu Mar 14 10:04:41 2024 +0000

    chore: replace `Œª` by `fun` (#11301)
    
    Per the style guidelines, `Œª` is disallowed in mathlib.
    This is close to exhaustive; I left some tactic code alone when it seemed to me that tactic could be upstreamed soon.
    
    Notes
    - In lines I was modifying anyway, I also converted `=>` to `‚Ü¶`.
    - Also contains some mild in-passing indentation fixes in `Mathlib/Order/SupClosed`.
    - Some doc comments still contained Lean 3 syntax `Œª x, `, which I also replaced.
    
    <!-- The text above the `

[33mcommit b4fac691c46a1c1f00fd036710f58689efe11b97[m
Author: Joachim Breitner <mail@joachim-breitner.de>
Date:   Thu Mar 14 09:40:24 2024 +0000

    chore: ci: do no add full-ci to lean PRs (#11369)
    
    it triggers rebuilds and can be annoying.

[33mcommit ac06536a15c9ab675c569a40f4ddbf433b7a7949[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Thu Mar 14 07:36:00 2024 +0000

    chore: fix todo for sigmaFinsuppEquivDFinsupp_smul (#11355)

[33mcommit 69adfea7ea6eacb83097ff8c868ce81c807baf1b[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Thu Mar 14 06:52:08 2024 +0000

    chore(Topology/Instances/Discrete): merge 2 instances (#11296)
    
    Prove `DiscreteTopology.secondCountableTopology_of_countable` directly,
    deprecate `DiscreteTopology.secondCountableTopology_of_encodable`.

[33mcommit 18ecf71e5bffc7662e4ae0ca68e3fad8639885a3[m
Author: Bolton Bailey <bolton.bailey@gmail.com>
Date:   Thu Mar 14 01:34:26 2024 +0000

    feat: add lemma `Finsupp.erase_apply` (#11242)
    
    Adds a lemma

[33mcommit 3d9e3df952734c07510772c21e15d2af35f17833[m
Author: damiano <adomani@gmail.com>
Date:   Wed Mar 13 23:02:41 2024 +0000

    fix: add MVar context in MoveAdd (#11352)
    
    This PR fixes a test that failed in the upgrade to v4.8.0.
    
    [Zulip](https://leanprover.zulipchat.com/#narrow/stream/428973-nightly-testing/topic/MoveAdd)

[33mcommit b99084a9df2154a53974a3bc6825eb694efaa5a0[m
Author: damiano <adomani@gmail.com>
Date:   Wed Mar 13 20:53:15 2024 +0000

    chore: remove unused tactics (#11351)
    
    I removed some of the tactics that were not used and are hopefully uncontroversial arising from the linter at #11308.
    
    As the commit messages should convey, the removed tactics are, essentially,
    ```
    push_cast
    norm_cast
    congr
    norm_num
    dsimp
    funext
    intro
    infer_instance
    ```

[33mcommit 59f72a90276da41af9f9e7bd18f96530d0f0d01c[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Wed Mar 13 20:53:14 2024 +0000

    chore: remove more autoImplicit (#11336)
    
    ... or reduce its scope (the full removal is not as obvious).

[33mcommit a30ed54eda2776e29639e40f9c77354925e46990[m
Author: L <hi@llllvvuu.dev>
Date:   Wed Mar 13 20:53:13 2024 +0000

    feat: relationship between Mellin transform/inverse and Fourier transform/inverse (#10944)
    
    
    
    Co-authored-by: L Lllvvuu <git@llllvvuu.dev>
    Co-authored-by: L <git@llllvvuu.dev>

[33mcommit 27ff5b0f21616dfd0c2d2d07396e5e3f1a55c4d2[m
Author: Matthew Robert Ballard <matt@mrb.email>
Date:   Wed Mar 13 20:28:01 2024 +0000

    perf(Algebra.Homology.Bifunctor): minor rearrangement to proofs (#11359)
    
    Often cleaning up with `dsimp` before using other tactics can speed up unification checks in a proof. This is one such example speeding up this file by 30% on my machine.
    
    
    
    Co-authored-by: Matthew Robert Ballard <100034030+mattrobball@users.noreply.github.com>

[33mcommit 66a742c0afddb2c5dc5b625336b9ff274022faca[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Wed Mar 13 20:03:50 2024 +0000

    feat: add an `eval%` elaborator for interpolating the output of `#eval` (#10742)
    
    This is taken from [my zulip message here](https://leanprover.zulipchat.com/#narrow/stream/217875-Is-there-code-for-X.3F/topic/How.20to.20simplify.20this.20proof.20without.20using.20a.20have.20statement.3F/near/422294189).
    
    As an example:
    ```lean
    example : 2^10 = eval% 2^10 := by
      -- goal is `2^10 = 1024`
      sorry
    ```

[33mcommit d048b949b1671bf48a80bfdd585115b4816d0b41[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Mar 13 17:36:30 2024 +0000

    feat(MetricSpace): add `tendsto_closedBall_smallSets` (#11068)
    
    Use it to golf `Vitali.exists_disjoint_covering_ae`

[33mcommit 98385b0ead631fe85c3b2f963ca1057293d27e60[m
Author: R√©my Degenne <Remydegenne@gmail.com>
Date:   Wed Mar 13 15:40:13 2024 +0000

    feat: add a variant of `measurableSet_eq_fun` that applies to ENNReal (#11275)

[33mcommit 2731f8194d892cbac1b73315b11a42ec9f400f1e[m
Author: R√©my Degenne <Remydegenne@gmail.com>
Date:   Wed Mar 13 15:40:12 2024 +0000

    feat: add set_lintegral variants of lintegral lemmas (#11274)

[33mcommit e82ee277c7cf0855c96740746702d13f609f3d3d[m
Author: R√©my Degenne <Remydegenne@gmail.com>
Date:   Wed Mar 13 15:40:11 2024 +0000

    feat: countable filtration in a countably generated measurable space (#10945)
    
    In a countably generated measurable space `Œ±`, we can build a sequence of finer and finer finite measurable partitions of the space such that the measurable space is generated by the union of all partitions.
    This sequence of partitions (`countablePartition Œ± n`) is defined in `MeasureTheory.MeasurableSpace.CountablyGenerated`. This is a new file in which we put the definition of `CountablyGenerated` (which was previously in MeasurableSpace.Basic).
    
    In `Probability.Process.CountablyGenerated`, we build the filtration generated by `countablePartition Œ± n` for all `n : ‚Ñï`, which we call `countableFiltration Œ±`.
    
    
    
    Co-authored-by: R√©my Degenne <remydegenne@gmail.com>

[33mcommit 46c190e6b971797ff68b036f8e69ed78a9056a2e[m
Author: R√©my Degenne <Remydegenne@gmail.com>
Date:   Wed Mar 13 15:14:32 2024 +0000

    feat(Probability/Kernel): add `ae_compProd_iff` (#11276)
    
    Let `Œ∫ : kernel Œ± Œ≤` and `Œ∑ : kernel (Œ± √ó Œ≤) Œ≥` be two s-finite kernels and `p` a predicate on `Œ≤ √ó Œ≥`.
    If the set `{ x | p x}` is measurable, then `(‚àÄ·µê bc ‚àÇ(Œ∫ ‚äó‚Çñ Œ∑) a, p bc) ‚Üî ‚àÄ·µê b ‚àÇŒ∫ a, ‚àÄ·µê c ‚àÇŒ∑ (a, b), p (b, c)`.

[33mcommit 5887aee0e5a083ccb70d2ab64fe1c6b3eab96f06[m
Author: Chris Birkbeck <c.birkbeck@ucl.ac.uk>
Date:   Wed Mar 13 13:54:43 2024 +0000

    Composing non_zero function with injective fun is non_zero (#11244)
    
    Some basic missing lemmas about injective function composition.  See this Zulip [thread](https://leanprover.zulipchat.com/#narrow/stream/217875-Is-there-code-for-X.3F/topic/injective.20function.20composed.20with.20non.20zero.20function.20ne.20zero)
    
    
    
    Co-authored-by: Chris Birkbeck <c.birkbeck@uea.ac.uk>
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 60ad74281cb0b6e2eb0fc3fcf4660ac90975e5ef[m
Author: Matthew Robert Ballard <matt@mrb.email>
Date:   Wed Mar 13 12:48:39 2024 +0000

    perf(Abelian.InjectiveResolution): refactor `CochainComplex.mkAux`  (#11349)
    
    Similar to the changes for `ChainComplex.mkAux` we remove the ad-hoc `MkStruct` and replace with it `ShortComplex`.

[33mcommit ee18bf38f103b6c314be9e23f073eacb81e6872e[m
Author: damiano <adomani@gmail.com>
Date:   Wed Mar 13 11:52:17 2024 +0000

    chore: remove useless tactics (#11333)
    
    The removal of some pointless tactics flagged by #11308.

[33mcommit 2c97c632aee6e097c489a811ec37ab1e860d5d47[m
Author: Jz Pan <acme_pjz@hotmail.com>
Date:   Wed Mar 13 11:26:34 2024 +0000

    feat(FieldTheory/SeparableDegree): some results on separable degree one polynomials (#10404)
    
    - `perfectField_iff_splits_of_natSepDegree_eq_one`: A field is perfect if and only if every separable degree one polynomial splits.
    - add some criteria of a monic polynomial being separable degree one
    - add some convenient results of separable degree of a polynomial

[33mcommit 9fb3e1ad427da4386894e1d3954ebcb945b9c138[m
Author: Filippo A. E. Nuccio <filippo.nuccio@univ-st-etienne.fr>
Date:   Wed Mar 13 10:15:10 2024 +0000

    feat(Algebra/Ring/Equiv): add lemma isUnit_iff (#11237)
    
    Add one lemma stating that an element is a unit if and only if its image through a ring equivalence is a unit.

[33mcommit 526c94c0634f3649dc07a50c8c79f3b046735d42[m
Author: Scott Morrison <scott@tqft.net>
Date:   Wed Mar 13 02:56:54 2024 +0000

    fix: patch for std4#579 (#11347)
    
    This if @fgdorais's patch for https://github.com/leanprover/std4/pull/579.
    
    Co-authored-by: F. G. Dorais <fgdorais@gmail.com>
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit c489838a0c52d6d65a6b6332aeddba6752e8e3a2[m
Author: Ga√´tan Serr√© <gaetan.serre@ens-paris-saclay.fr>
Date:   Tue Mar 12 22:57:45 2024 +0000

    doc(NumberTheory/Padics/PadicVal): typo (#11320)
    
    Fix a typo.

[33mcommit bb81b9f6262be20690f96f4695e0acad8b3593a0[m
Author: Vincent Beffara <vbeffara@gmail.com>
Date:   Tue Mar 12 22:57:44 2024 +0000

    feat: strengthen `tendsto_tsum_of_dominated_convergence` a little (#11236)
    
    Replace the uniform bound by an eventual uniform bound along the filter.

[33mcommit 577e8250831daa2c463b466c52894f11ff7063db[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Tue Mar 12 22:57:43 2024 +0000

    feat(Algebra/Homology): the symmetry of the total complex (#10770)
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit ea7752a5fec2613aba7b0a99da0be9e02c252725[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Tue Mar 12 22:57:42 2024 +0000

    feat(Algebra/Homology): the action of a bifunctor on homological complexes (#10764)
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit 1cf1beb7a3e17ddbfde46ed73293188b53f21c9e[m
Author: Matthew Robert Ballard <matt@mrb.email>
Date:   Tue Mar 12 22:32:48 2024 +0000

    chore (Multiset.Fintype): remove `Multiset.coe_eq`  (#11340)
    
    This is now a `rfl` and in the latest nightly becomes a `synTaut`. We remove it.

[33mcommit d73713b9b350dacdbe514d8f1b39c914606b7e8c[m
Author: Markus Himmel <markus@himmel-villmar.de>
Date:   Tue Mar 12 20:09:30 2024 +0000

    refactor: generalize universes for colimits in Type (#11148)
    
    This is a smaller version of #7020. Before this PR, for limits, we gave instances for small indexing categories, but for colimits, we gave instances for `TypeMax`. This PR changes so that we give instances for small indexing categories in both cases. This is more general and also more uniform.
    
    Co-authored-by: Jo√´l Riou <rioujoel@gmail.com>

[33mcommit f070f429de135430c4dc3070e171490aa20bcfbb[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Tue Mar 12 19:39:39 2024 +0000

    feat: define `quasispectrum` for non-unital algebras (#11219)
    
    This defines the `quasispectrum` of an element `a : A` where `A` is a non-unital `R`-algebra. When `A` is unital and `R` is a semifield, then `quasispectrum R a = spectrum R a ‚à™ {0}`. The definition proceeds via *quasiregular* elements, which are also defined herein. The quasispectrum will serve as the domain of the continuous functions appearing in the continuous functional calculus for non-unital algebras.

[33mcommit 1c3f3619fac2611a7d6ac0ba61aa15c2016167c5[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Tue Mar 12 19:14:45 2024 +0000

    feat: uniqueness of the continuous functional calculus (#11256)
    
    This establishes uniqueness of the continuous functional calculus for unital algebras. When the scalar ring is `‚Ñù` or `‚ÑÇ`, this follows immediately from Stone-Weierstrass, but for `‚Ñù‚â•0`, we need to reuse the result for `‚Ñù`. This is tricky, as we need to upgrade an `‚Ñù‚â•0`-algebra homomorphism (with domain `C((s : Set ‚Ñù‚â•0), ‚Ñù‚â•0)`) to a `‚Ñù`-algebra homomorphism (with domain `C(((‚Üë) '' s : Set ‚Ñù), ‚Ñù)`). This is the reason the `UniqueContinuousFunctionalCalculus` class exists in the first place, as opposed to simply appealing directly to Stone-Weierstrass to prove `StarAlgHom.ext_continuousMap`.

[33mcommit e8f233630b530da8986ef9d08d26f9eae01ac66e[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Tue Mar 12 18:49:50 2024 +0000

    chore: rename `Ssyt` to `SemistandardYoungTableau` (#11328)
    
    Per [Zulip](https://leanprover.zulipchat.com/#narrow/stream/113489-new-members/topic/Quantum.20information.20theory/near/426134633)

[33mcommit 9ddaa42803e0ace1698428f35aaaa4d5ed17c4ce[m
Author: Antoine Chambert-Loir <antoine.chambert-loir@u-paris.fr>
Date:   Tue Mar 12 16:34:59 2024 +0000

    feat(Mathlib/LinearMap/TensorProduct/RightExtactness) : generalize and add 2 thms (#11303)
    
    * Generalize one assumption from `AddCommGroup` to `AddCommMonoid` at one place (no modification of a proof is needed)
    * Add two lemmas that compute the range of `LinearMap.rTensor` and `LinearMap.lTensor`
    * Adjust the names of a few lemmas : `rTensor.surjective` becomes `LinearMap.rTensor_surjective`, etc.
    
    
    
    Co-authored-by: Antoine Chambert-Loir <antoine.chambert-loir@math.univ-paris-diderot.fr>

[33mcommit bbf2206016a67e7d54812dcf76f830c704df378c[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Tue Mar 12 11:33:08 2024 +0000

    chore: golf using omega (#11318)
    
    Backported from #11314.

[33mcommit 4feda97f714030799f3bccc049a5386a8e576ba3[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Tue Mar 12 11:06:46 2024 +0000

    chore: one golf using omega (#11319)

[33mcommit 110a0a3feaae9ac852066dd4c6dfc38f1b956a6c[m
Author: David Loeffler <d.loeffler.01@cantab.net>
Date:   Tue Mar 12 11:06:45 2024 +0000

    chore(Algebra/Group/AddChar): move results (#11312)
    
    Currently the definition of additive characters (from an additive to a multiplicative monoid) is hidden away in
    `NumberTheory/LegendreSymbol`. These constructions seem to be getting used more widely, e.g. in Ya√´l's LeanAPAP project; so this PR carves off the parts of `NumberTheory/LegendreSymbol/AddCharacter` which don't depend on cyclotomic field arithmetic and moves them to `Algebra/Group`.

[33mcommit a979c4617fdef8d02e190e4370335948c15fc967[m
Author: Michael Stoll <Michael.Stoll@uni-bayreuth.de>
Date:   Tue Mar 12 11:06:44 2024 +0000

    feat(NumberTheory/LSeries/Linearity): move/add statements on linearity of L-series (#11214)
    
    This adds a file `NumberTheory.LSeries.Linearity`, which contains statements on
    * addition (moved from `NumberTheory.LSeries.Basic`)
    * negation and
    * scalar multiplication
    
    of L-series, and corresponding statements for `LSeries.term`, `LSeriesHasSum` and `LSeriesSummable`.
    
    See [this thread](https://leanprover.zulipchat.com/#narrow/stream/144837-PR-reviews/topic/L-series/near/424858837) on Zulip.

[33mcommit d1d17722b84ca3ebd060fd318f7ffa0542c1fe9f[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Tue Mar 12 11:06:43 2024 +0000

    feat(LightProfinite): being light is a property of a profinite space (#10391)
    
    This PR defines the class `Profinite.IsLight`¬†which is the property of a profinite space to have countably many clopens. We prove that such a profinite space gives rise to a `LightProfinite`, and the underlying profinite space of a `LightProfinite` is light.
    
    - [x] depends on: #10390

[33mcommit d42434478f9ca3eddfd9941ef53dee37c3c9db29[m
Author: Jz Pan <acme_pjz@hotmail.com>
Date:   Tue Mar 12 11:06:42 2024 +0000

    feat(FieldTheory/IsPerfectClosure): predicate `IsPerfectClosure` (#8696)
    
    Main definitions
    
    - `pNilradical`: the `p`-nilradical of a ring is an ideal consists of elements `x` such that
      `x ^ p ^ n = 0` for some `n` (`mem_pNilradical`). It is equal to the nilradical if `p > 1`
      (`pNilradical_eq_nilradical`), otherwise it is equal to zero (`pNilradical_eq_bot`).
    
    - `IsPRadical`: a ring homomorphism `i : K ‚Üí+* L` of characteristic `p` rings is called `p`-radical,
      if or any element `x` of `L` there is `n : ‚Ñï` such that `x ^ (p ^ n)` is contained in `K`,
      and the kernel of `i` is contained in the `p`-nilradical of `K`.
      A generalization of purely inseparable extension for fields.
    
    - `IsPerfectClosure`: a ring homomorphism `i : K ‚Üí+* L` of characteristic `p` rings makes `L` a
      perfect closure of `K`, if `L` is perfect, and `i` is `p`-radical.
    
    - `PerfectRing.lift`: if a `p`-radical ring homomorphism `K ‚Üí+* L` is given, `M` is a perfect ring,
      then any ring homomorphism `K ‚Üí+* M` can be lifted to `L ‚Üí+* M`.
      This is similar to `IsAlgClosed.lift` and `IsSepClosed.lift`.
    
    - `PerfectRing.liftEquiv`: `K ‚Üí+* M` is one-to-one correspondence to `L ‚Üí+* M`,
      given by `PerfectRing.lift`. This is a generalization to `PerfectClosure.lift`.
    
    - `IsPerfectClosure.equiv`: perfect closures of a ring are isomorphic.
    
    Main results
    
    - `IsPRadical.trans`: composition of `p`-radical ring homomorphisms is also `p`-radical.
    
    - `PerfectClosure.isPerfectClosure`: the absolute perfect closure `PerfectClosure` is a
      perfect closure.
    
    - `IsPRadical.isPurelyInseparable`, `IsPurelyInseparable.isPRadical`: `p`-radical and
      purely inseparable are equivalent for fields.
    
    - `perfectClosure.isPerfectClosure`: the (relative) perfect closure `perfectClosure` is a
      perfect closure.

[33mcommit 3c029be96a48dc3e2c43747d1e4100b97c8a77f5[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Tue Mar 12 10:00:17 2024 +0000

    feat: `cons` lemmas for `Finset.noncommProd` (#11194)
    
    These are more general than the `insert` versions as they do not assume `DecidableEq`.
    
    This also lets some later proofs be golfed.

[33mcommit 598676f82e34c63999989f36fe12458ac1c3ae62[m
Author: Matthew Robert Ballard <matt@mrb.email>
Date:   Tue Mar 12 09:02:15 2024 +0000

    perf(LinearAlgebra.PiTensorProduct): don't unfold `piTensorHomMap‚ÇÇ`  (#11307)
    
    The currently definition of `piTensorHomMap‚ÇÇ` results in a large term causing `dsimp` and `simp` to work too hard. This PR breaks up the definition into a function defnition and two lemmas. The result is a 17% speed up.

[33mcommit 069773767b49c50ca966b2c8795f1e710251a476[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Mar 12 09:02:14 2024 +0000

    chore(Set/Image): restore `forall_range_iff` (#11287)
    
    ... as a `@[deprecated] alias`
    
    Also add dates to some theorems deprecated in #10816,
    deprecate `Set.exists_range_iff'`,
    and use `simp`-normal form in the definition of `ParacompactSpace`.

[33mcommit fbcc29db090337082f8632f9be7b59b913dc6d0d[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Tue Mar 12 09:02:13 2024 +0000

    chore: golf some MvPolynomial degree results (#11258)
    
    Co-authored-by: Junyan Xu <junyanxumath@gmail.com>

[33mcommit ada69fd3f2c9852aaa1cb73ddbf1c6346d3bbc7d[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Mar 12 08:37:16 2024 +0000

    chore(Nobeling): drop unneeded `[Inhabited I]` assumptions (#11310)

[33mcommit 55524115d22faa753b5222d6ddef7ce1d8bbad51[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Mar 12 07:55:23 2024 +0000

    chore(Computability): `Encodable`/`Fintype` -> `Countable`/`Finite` (#10869)
    
    Also golf a proof

[33mcommit 5908dd8db2654b449c8334deba7044ab3795fd91[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Mar 12 07:27:58 2024 +0000

    chore(RingTheory/Trace): `Fintype` -> `Finite` (#11309)

[33mcommit 0ffa9b67d8a760611cd97108b0717b9910da3759[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Tue Mar 12 05:52:53 2024 +0000

    fix(Analysis/Convex/Combination): resolve one easy porting note (#11306)

[33mcommit 82863af537fb2782ae17d669b8d11677b43350eb[m
Author: Joseph Myers <jsm@polyomino.org.uk>
Date:   Tue Mar 12 05:52:52 2024 +0000

    feat(Data/Setoid/Basic): equivalence for quotients by two setoids (#11295)
    
    Given two equivalence relations with `r ‚â§ s`, define an equivalence between a sigma type for the sum of the quotients by `r` on each equivalence class by `s`, and the quotient by `r`.
    
    The motivating example is bijecting between orbits of an action by a subgroup: the orbits considered within each orbit of the action by the full group are equivalent to the orbits when the subgroup acts directly on the whole space.  This is a generic version for an arbitrary pair of setoids with `r ‚â§ s`, to be used in defining the version for orbits.
    
    Feel free to golf or suggest a better name for the equivalence.
    
    From AperiodicMonotilesLean.

[33mcommit a2120dc0e5b5b82cf5eb5930bd6e369bc3840c48[m
Author: Matthew Robert Ballard <matt@mrb.email>
Date:   Tue Mar 12 05:27:07 2024 +0000

    perf(CategoryTheory.Subterminal): avoid autoParams  (#11305)
    
    With `aesop_cat` as `autoParam` this was taking 20-25s to build one declaration. This explicitly provides fills the argument and significantly speeds up the build. A comment is left about the issue.
    
    
    
    Co-authored-by: Matthew Robert Ballard <100034030+mattrobball@users.noreply.github.com>

[33mcommit eb655f8b42bd1b1416a916c422ddf614db603159[m
Author: L <hi@llllvvuu.dev>
Date:   Tue Mar 12 01:07:25 2024 +0000

    feat: `@[simp]` `Icc a b ‚àà ùìù x` (#11178)
    
    Currently doesn't simplify since `interior_Icc` goes the other way.
    
    We were using it in PrimeNumberTheoremAnd for things like "point does not lie on boundary of rectangle".
    
    
    
    
    Co-authored-by: L Lllvvuu <git@llllvvuu.dev>

[33mcommit 349b843151f3816c914153da608e0c6f029d3a9c[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Mar 11 22:04:21 2024 +0000

    feat(Normed/Group): add `lt` version of `IsBounded.exists_pos_norm_le` (#10861)

[33mcommit d76a6b4c3eadae865b844ed53491e1135c097585[m
Author: Matthew Robert Ballard <matt@mrb.email>
Date:   Mon Mar 11 18:02:30 2024 +0000

    perf(InnerProduct.Adjoint): speed up elaboration in two proofs (#11300)
    
    For as yet un-completely diagnosed reasons, `unitary.star_mul_self_of_mem hu` for `(hu : u ‚àà unitary (H ‚ÜíL[ùïú] H))` elaborates slowly thanks to `[1.068378s] ‚úÖ ContinuousLinearMap.comp (ContinuousLinearMap.adjoint u) u =?= star ?a * ?b`. This PR pulls out the statements into `have`'s which speeds up the proofs significantly. #11299 documents the issue for future investigation.

[33mcommit b97074b1c22a6253770f694e9cbac4abb862fc3b[m
Author: Markus Himmel <markus@himmel-villmar.de>
Date:   Mon Mar 11 17:11:44 2024 +0000

    chore: move `cofiltered_of_hasFiniteLimits` to the correct file (#11291)

[33mcommit 8939670c6ed4b12c3426541af567376871c783fc[m
Author: Riccardo Brasca <riccardo.brasca@gmail.com>
Date:   Mon Mar 11 17:11:43 2024 +0000

    Add Commute.orderOf_mul_pow_eq_lcm (#11235)
    
    We add `Commute.orderOf_mul_pow_eq_lcm`: if two commuting elements `x` and `y` of a monoid have order `n` and `m`, there is an element of order `lcm n m`. The result actually gives an explicit (computable) element, written as the product of a power of `x` and a power of `y`.
    
    Co-authored-by: Junyan Xu <[junyanxu.math@gmail.com](mailto:junyanxu.math@gmail.com)>

[33mcommit f884087a041da7998696e87352f6f06e2e5f5713[m
Author: Johan Commelin <johan@commelin.net>
Date:   Mon Mar 11 16:48:39 2024 +0000

    chore(Archive/Imo): Fix comment in Imo2019Q2 (#11294)

[33mcommit 08a5f163f734c599f0f7eb942bd2e2ae8b2e09d4[m
Author: Moritz Doll <moritz.doll@googlemail.com>
Date:   Mon Mar 11 12:58:51 2024 +0000

    chore: Fix alias (#11293)

[33mcommit 38c617fbbcff753b7e80e05d8d4673d2ac601cad[m
Author: Moritz Doll <moritz.doll@googlemail.com>
Date:   Mon Mar 11 12:58:50 2024 +0000

    feat(LinearAlgebra/BilinearMap): restrict scalars (#6133)
    
    Generalizes the previous definition and moves it into `LinearAlgebra/BilinearMap`.
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>
    Co-authored-by: Anne Baanen <Vierkantor@users.noreply.github.com>

[33mcommit 5176bb0db8887c141a0a8d70366a8404e34bb622[m
Author: EmilieUthaiwat <emiliepathum@gmail.com>
Date:   Mon Mar 11 12:06:41 2024 +0000

    feat(RingTheory/UniqueFactorizationDomain): add lemma UniqueFactorizationMonoid.IsPrime.exists_mem_Prime_of_neq_bot (#11218)
    
    We add `UniqueFactorizationMonoid.IsPrime.exists_mem_Prime_of_neq_bot`: if an integral domain is a `UniqueFactorizationMonoid`, then every nonzero prime ideal contains a prime element.
    
    We plan to add the other implication (known as Kaplansky's criterion) in a future PR.
    
    
    
    Co-authored-by: EmilieUthaiwat <102412311+EmilieUthaiwat@users.noreply.github.com>
    Co-authored-by: faenuccio <filippo.nuccio@univ-st-etienne.fr>

[33mcommit 5c8fab173617c014f41ae341d2689d3e98769b65[m
Author: Mario Carneiro <mcarneir@andrew.cmu.edu>
Date:   Mon Mar 11 08:57:03 2024 +0000

    fix: restore `ext1?`/`ext?` (deleted upstream) as syntax stubs (#11234)
    
    Fixing mathport breakage.
    
    
    
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>

[33mcommit cbd8ede17dcc053dd3807df094b38f61987fa48c[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Mar 11 07:38:44 2024 +0000

    chore(Algebra/DirectLimit): drop some `DecidableEq` assumptions (#11288)
    
    ... by moving `variable [DecidableEq Œπ]` to `section`s.

[33mcommit 0235206a23845048426490495e9a8947162a3340[m
Author: Joseph Myers <jsm@polyomino.org.uk>
Date:   Mon Mar 11 07:38:43 2024 +0000

    feat(GroupTheory/GroupAction/Basic): additivize two lemmas (#11285)
    
    I see no reason for the omission of `@[to_additive]` on these two `pretransitive_iff_...` lemmas, so add it here.
    
    From AperiodicMonotilesLean.

[33mcommit 3936b6d6e528940872bc52fd47ba4c5a7d83de5a[m
Author: Kevin Buzzard <k.buzzard@imperial.ac.uk>
Date:   Mon Mar 11 07:38:42 2024 +0000

    feat: avoid junk values in statement of Riemann hypothesis (#11267)
    
    Mathematicians will be unnerved by us evaluating the zeta function at 1 and getting a complex number. Pointed out by Jordan Ellenberg on Twitter.

[33mcommit c671da20f0a9c6375a329f6b4a723ba9e0d8eb5a[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Mar 11 07:02:30 2024 +0000

    chore(Multilinear/Basic): golf (#11289)

[33mcommit 0ee5f8231fc294d4ee59712faf6b20ecd0d2c6bf[m
Author: Antoine Chambert-Loir <antoine.chambert-loir@u-paris.fr>
Date:   Mon Mar 11 05:26:27 2024 +0000

    Acl/reorg tensor product (#11282)
    
    Move:
    * `Mathlib/Algebra/Module/DirectLimitAndTensorProduct.lean` to
    `LinearAlgebra/TensorProduct/DirectLimit.lean`
    * `Mathlib/LinearAlgebra/TensorProduct` to `Mathlib/LinearAlgebra.TensorProduct.Basic.lean`
    * `Mathlib/RingTheory/TensorProduct` to `Mathlib/RingTheory/TensorProduct/Basic.lean`.
    
    
    This follows suggestions 1, 2, 3 of
    
    https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Tensor.20Products.20of.20modules.20and.20rings/near/424605543
    
    
    
    Co-authored-by: Antoine Chambert-Loir <antoine.chambert-loir@math.univ-paris-diderot.fr>

[33mcommit f8a97cf5e91d469f02268f3c6a4041e039483a11[m
Author: Michael Stoll <Michael.Stoll@uni-bayreuth.de>
Date:   Mon Mar 11 05:02:04 2024 +0000

    feat(NumberTheory/LSeries): introduce notations (#11253)
    
    This just introduces `L` as a short notation for `LSeries` and `‚Üóf` as notation for `fun n : ‚Ñï ‚Ü¶ (f n : ‚ÑÇ)`,
    both scoped to `LSeries.notation`. The latter makes it convenient to use arithmetic functions
    or Dirichlet characters (or anything that coerces to a function `N ‚Üí R`, where `‚Ñï` coerces
    to `N` and `R` coerces to `‚ÑÇ`) as arguments to `LSeries` etc. The first is for convenience (and agreement with informal math, where we write "L(f, s)"), and the second one considerably simplifies statements involving Dirichlet characters or arithmetic functions like the von Mangoldt function and their L-series.
    
    See [here](https://leanprover.zulipchat.com/#narrow/stream/144837-PR-reviews/topic/L-series/near/424858837) on Zulip.

[33mcommit bbdc3c0af32d6db38c36b057d121ff52891d1e00[m
Author: Oliver Nash <github@olivernash.org>
Date:   Sun Mar 10 21:13:58 2024 +0000

    feat: orthogonality of Lie algebra root spaces (#10879)
    
    
    
    Co-authored-by: Johan Commelin <johan@commelin.net>

[33mcommit 38155ec45163a1df60041fbbdd4236ead46a6ae1[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sun Mar 10 19:38:25 2024 +0000

    refactor(UniformSpace): drop `separationRel` (#10644)
    
    We had duplicated API between topological spaces and uniform spaces.
    In this PR I mostly deduplicate it with some exceptions:
    
    - `SeparationQuotient.lift'` and `SeparationQuotient.map`
      are leftovers from the old version
      that are designed to work with uniform spaces;
    - probably, some theorems/instances still assume `UniformSpace`
      when `TopologicalSpace` would work.
    
    Outside of `UniformSpace/Separation`, I mostly changed `SeparatedSpace` to `T0Space`
    and `separationRel` to `Inseparable`. I also rewrote a few proofs that were broken by the API change.
    
    Fixes #2031

[33mcommit 533116b3067cd19dc01abfa2c786483fe727c652[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sun Mar 10 18:54:21 2024 +0000

    feat(ConstMulAction): add `closure_smul‚ÇÄ'`, generalize (#10860)
    
    - Add `closure_smul‚ÇÄ'`, a version of `closure_smul‚ÇÄ`
      assuming `c ‚â† 0` and no `T1Space`.
    - Generalize some lemmas from TVS to a continuous `MulActionWithZero`.

[33mcommit 927ac92544445c2347b22c00f0ef12820dc4e30d[m
Author: damiano <adomani@gmail.com>
Date:   Sun Mar 10 16:40:29 2024 +0000

    chore: more `squeeze_simp`s arising from linter (#11259)
    
    The squeezing continues!  All found by the linter at #11246.

[33mcommit 4b02ae4a3342432c71bf77f3790ab43f46a40184[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Sun Mar 10 15:04:02 2024 +0000

    fix(Algebra/Order/CauSeq/Completion): fix qsmul instance diamond (#11263)

[33mcommit 021eb7a4531538c50fc4770f50af7816a42a9274[m
Author: Geoffrey Irving <irving@naml.us>
Date:   Sun Mar 10 14:17:37 2024 +0000

    feat: Add a few continuity lemmas for products (#10820)
    
    1. `ContinuousAt.comp‚ÇÇ`, `ContinuousAt.comp‚ÇÇ_continuousWithinAt`, and `_of_eq` versions.
    2. `ContinuousAt.along_{fst,snd}`: Continuous functions are continuous in their first and second arguments.

[33mcommit 27a5a081be52fede8af8dbb7762eda7aadd829d2[m
Author: Christian Merten <christian@merten.dev>
Date:   Sun Mar 10 13:39:55 2024 +0000

    fix(Equiv/TransferInstance): move `to_additive` attribute (#11277)
    
    Removes `to_additive` from a `MulZeroClass` instance and instead puts it on the corresponding `MulOneClass` instance (more explanation here: https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/to_additive.20on.20MulZeroClass).

[33mcommit 3a90ec9170acfc424997dabaa897bc4fa5cca3e2[m
Author: Abdullah Uyu <abdullahuyu@gmail.com>
Date:   Sun Mar 10 12:47:43 2024 +0000

    fix(LinearAlgebra/Projectivization/Independence): use DivisionRing instead of Field (#11232)
    
    I need $K$ to be a skew field instead of a field to prove that projectivization of a vector space is a projective geometry stated in proposition 2.1.6 in the book "Modern Projective Geometry" by Claude-Alain Faure and Alfred Fr√∂licher, see p. 27-28. In p.27, just before the proposition, it is noted that "... $K$ is allowed to be a skew field (often called *division ring*)."

[33mcommit 6406e7525dfda46a089c104118f544e49009dee6[m
Author: R√©my Degenne <Remydegenne@gmail.com>
Date:   Sun Mar 10 07:58:09 2024 +0000

    feat(Probability/Kernel): add `compProd_add_left/right` (#11272)
    
    Interaction of the composition-product of kernels with addition.

[33mcommit 78d08f6a0e780912782a13bfdbeb961434e827e0[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sun Mar 10 07:58:08 2024 +0000

    feat(Normed/Group): add `inseparable_one_iff_norm` (#11270)

[33mcommit c2910adba59712ed3943bb127436d87fefb5274f[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Sun Mar 10 07:34:04 2024 +0000

    fix(Topology): typo in a docstring in `DiscreteQuotient/Basic` (#11269)

[33mcommit fe1db9e25f5df9b8081e0e6ccfc403ac35a6fab6[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sun Mar 10 07:08:46 2024 +0000

    chore(Convex/Strong): golf using `gcongr` (#11271)

[33mcommit fcbd004b7897443b571a6e73341208dcdcb45d2e[m
Author: Jack <mckoen@ualberta.ca>
Date:   Sat Mar 9 23:36:11 2024 +0000

    feat: computable products and coproducts of functors to `Type u` (#10616)
    
    This PR defines an explicit binary product and binary coproduct for functors `F : C ‚•§ Type u` for an arbitrary category `C`. This is a generalization of #9704.
    
    
    
    Co-authored-by: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>

[33mcommit d004cbb5db17ced694a54ff1e2a9fb7809527a62[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Sat Mar 9 22:29:28 2024 +0000

    feat: Small sets of games/surreals are bounded (#10458)
    
    Finish forwarding porting https://github.com/leanprover-community/mathlib/pull/15260 after #10566 ported just the changes in `PGame.lean`.
    
    We don't port `upper_bound_numeric` (or `lower_bound_numeric`) because `upper_bound` was deleted following review feedback on the previous forward-porting PR #10566.
    
    
    
    Co-authored-by: Yury G. Kudryashov <urkud@urkud.name>
    Co-authored-by: timotree3 <timorcb@gmail.com>

[33mcommit 68f3af6197be99bdeff0c6392a01a74478774860[m
Author: Jeremy Tan Jie Rui <reddeloostw@gmail.com>
Date:   Sat Mar 9 18:26:27 2024 +0000

    chore: remove deprecated `aux` alias with typoed name (#11141)
    
    The code in question was barely three days old by the time it was deprecated anyway.

[33mcommit 71b0e26ffeec25ecf41c0b81bc17d2a89d74d491[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Sat Mar 9 17:22:46 2024 +0000

    refactor: do not allow `qsmul` to default automatically (#11262)
    
    Follows on from #6262.
    Again, this does not attempt to fix any diamonds; it only identifies where they may be.

[33mcommit 4d23d2cb379836b0dae6cc01855762411d1bc81d[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Sat Mar 9 16:00:56 2024 +0000

    chore(Order): add missing `inst` prefix to instance names (#11238)
    
    This is not exhaustive; it largely does not rename instances that relate to algebra, and only focuses on the "core" order files.

[33mcommit d8c7b27eaf75719dc35f82205b3848d260d2c513[m
Author: Kyle Miller <kmill31415@gmail.com>
Date:   Sat Mar 9 14:30:20 2024 +0000

    chore: remove unnecessary `pp_dot`s (#11166)
    
    Release 4.7.0-rc1 makes it unnecessary to add `pp_dot` to structure fields. It used to be that function fields wouldn't pretty print using dot notation when the function was applied unless `pp_dot` was added.

[33mcommit 0961dd3cc64bf42f2d97cd99bc3f9a5c6a981391[m
Author: Chris Wong <lambda.fairy@gmail.com>
Date:   Sat Mar 9 11:58:42 2024 +0000

    chore: simplify proof for Quotient.fintype (#11260)

[33mcommit bf263ff8638e3112e6fdfebdbedad191582f6528[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Sat Mar 9 11:33:25 2024 +0000

    feat: instantiate the continuous functional calculus (#10779)
    
    This adds instances of the continuous functional calculus for unital C‚ãÜ-algebras for normal, selfadjoint, and positive elements.

[33mcommit 25c534098076855b4605e2633ccb66b069e6a28b[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Sat Mar 9 10:41:46 2024 +0000

    chore: resolve `(coe : ‚Ñ§ ‚Üí Œ±) to ((‚Üë) : ‚Ñ§ ‚Üí Œ±)` porting notes (#11250)
    
    Resolves porting notes claiming "change `(coe : ‚Ñ§ ‚Üí Œ±)` to `((‚Üë) : ‚Ñ§ ‚Üí Œ±)`" by substituting `Int.cast` with `(‚Üë)`.

[33mcommit e42f78a95c25fada719b2cc8eb6c6a2c69447f99[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Sat Mar 9 09:32:01 2024 +0000

    refactor: do not allow `nsmul` and `zsmul` to default automatically (#6262)
    
    This PR removes the default values for `nsmul` and `zsmul`, forcing the user to populate them manually.
    The previous behavior can be obtained by writing `nsmul := nsmulRec` and `zsmul := zsmulRec`, which is now in the docstring for these fields.
    
    The motivation here is to make it more obvious when module diamonds are being introduced, or at least where they might be hiding; you can now simply search for `nsmulRec` in the source code.
    
    Arguably we should do the same thing for `intCast`, `natCast`, `pow`, and `zpow` too, but diamonds are less common in those fields, so I'll leave them to a subsequent PR.
    
    
    
    Co-authored-by: Matthew Ballard <matt@mrb.email>

[33mcommit 95abf566ab8589bba96a224cedc7cc40575f869a[m
Author: R√©my Degenne <Remydegenne@gmail.com>
Date:   Sat Mar 9 08:55:53 2024 +0000

    feat: `tendsto_of_integral_tendsto_of_monotone` (#11167)
    
    Add `tendsto_of_integral_tendsto_of_monotone`, as well as `...of_antitone` and the corresponding results for `lintegral`.
    
    Also:
    - move some results about measurability of limits of (E)NNReal valued functions from BorelSpace.Metrizable to BorelSpace.Basic to make them available in Integral.Lebesgue.
    - add `lintegral_iInf'`, a version of `lintegral_iInf` for a.e.-measurable functions. We already have the corresponding `lintegral_iSup'`.
    
    
    
    Co-authored-by: sgouezel <sebastien.gouezel@univ-rennes1.fr>

[33mcommit 1c5c3facaf3745f452f36ed3558ffe6a11f4c857[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Sat Mar 9 07:56:06 2024 +0000

    chore: classify `deprecated` porting notes (#11230)
    
    Classifies by adding issue number #11229 to porting notes claiming:
    
    > deprecated

[33mcommit 9ffca8178c9b63d4b5d4eae364d126f1dba3cfca[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Sat Mar 9 07:56:05 2024 +0000

    chore: classify `added dsimp` porting notes (#11228)
    
    Classifies by adding issue number #11227 to porting notes claiming anything equivalent to:
    
    - "added `dsimp`"
    - "`dsimp` added"
    - "`dsimp` now needed"

[33mcommit 4d57cdd8ec3d7b176985bb27aab47d8243239007[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Sat Mar 9 07:27:52 2024 +0000

    chore: classify `rw to erw` porting notes (#11225)
    
    Classifies by adding issue number #11224 to porting notes claiming:
    
    > change `rw` to `erw`

[33mcommit 88f2145cfc4fff039c0d9af2d3ffebc3d2f88acf[m
Author: uniwuni <uniwuni@protonmail.com>
Date:   Fri Mar 8 23:09:42 2024 +0000

    feat(Data/Opposite): Show that op, unop are surjective (#11240)

[33mcommit 1ad8c3fe8360ddcbbaec065b64d0b74b582452ad[m
Author: damiano <adomani@gmail.com>
Date:   Fri Mar 8 22:04:56 2024 +0000

    chore: squeeze some non-terminal simps (#11247)
    
    This PR accompanies #11246, squeezing some non-terminal `simp`s highlighted by the linter until I decided to stop!

[33mcommit 9fede314bb51a36883b6c5a27d84d0029df84316[m
Author: Yakov Pechersky <ypechersky@treeline.bio>
Date:   Fri Mar 8 21:06:28 2024 +0000

    feat(SuccPred): {succ,pred}_{min,max} (#9367)
    
    
    
    
    Co-authored-by: Ya√´l Dillies <yael.dillies@gmail.com>

[33mcommit c992d17b544b031c3de32a94177112b0b55a478b[m
Author: uniwuni <uniwuni@protonmail.com>
Date:   Fri Mar 8 20:34:04 2024 +0000

    feat(CategoryTheory/EssentialImage): show that surjective functors are essentially surjective (#11239)
    
    Show that if `F.obj` is surjective, `F` is essentially surjective.

[33mcommit 158514fbc661190e1fb934ba0b32a6a894e8188d[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Fri Mar 8 18:41:44 2024 +0000

    feat(UniformSpace/CompactConvergence): prove metrizability (#10942)

[33mcommit cb921c1cdc041fa66802c02d67784c1addeee945[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Fri Mar 8 16:17:44 2024 +0000

    feat(UniformConvergenceTopology): add `isClosed_setOf_continuous` (#10902)
    
    See [Zulip chat](https://leanprover.zulipchat.com/#narrow/stream/116395-maths/topic/Is.20there.20a.20name.20for.20.22closure.20is.20the.20union.20of.20.60Specializes.60.22.3F)

[33mcommit fe3996683c6f840f187a7905ddfdce27a834400e[m
Author: Shad Amethyst <adrien.burgun@orange.fr>
Date:   Fri Mar 8 10:12:28 2024 +0000

    feat(Topology): Define `PerfectSpace` (#10246)
    
    Introduces a new class, `PerfectSpace`, which requires that `Set.univ` is a perfect set. This is equivalent to say that no points are isolated (`perfectSpace_iff_forall_not_isolated`).

[33mcommit 099074e1d554d2b4ca8c5f850d3cdefc29d888d0[m
Author: smorel394 <smorel@math.princeton.edu>
Date:   Fri Mar 8 09:46:38 2024 +0000

    feat(LinearAlgebra/PiTensorProduct): some more functoriality properties of `PiTensorProduct` (#11152)
    
    * Prove some properties of `PiTensorProduct.map`, for example the compatibility with composition and reindeixing, and the fact that it sends the identity to the identity.
    * Construct `PiTensorProduct.map` as a `MultilinearMap` on the family of linear maps.
    * Upgrade `PiTensorProduct.map f` to a linear equivalence called `PiTensorProduct.congr f` when `f` is a family of linear equivalences.
    * For `Œπ` a `Fintype`, define the canonical linear equivalence (given by multiplication) `constantBaseRingEquiv`  from `‚®Ç i : Œπ, R` and `R`.
    
    
    
    Co-authored-by: smorel394 <67864981+smorel394@users.noreply.github.com>
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit e5bcceb1c70d27ef3e2cc4ccfa250458a686a950[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Fri Mar 8 09:17:10 2024 +0000

    feat: continuity of the parametric set integral (#11108)
    
    From the sphere eversion project.
    
    In passing, we rename variables in one more lemma and use fun_prop in a tiny way.

[33mcommit 9830814c3db38a8c278a4d70fb13821e10775a43[m
Author: Christopher Hoskin <christopher.hoskin@gmail.com>
Date:   Fri Mar 8 09:17:08 2024 +0000

    refactor(Algebra/Lie/SkewAdjoint): from BilinForm to LinearMap.BilinForm (#11078)
    
    Replaces `BilinForm` with `LinearMap.BilinForm` in support of #10553

[33mcommit 68df7d0d0fcf87893d90dd02ece86b79b3a18e58[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Fri Mar 8 08:08:10 2024 +0000

    chore: classify `new lemma` porting notes (#11217)
    
    Classifies by adding issue number #10756 to porting notes claiming anything semantically equivalent to:
    
    - "new lemma"
    - "added lemma"

[33mcommit 86f95a40832809c0e1f2c159816b340908b7acc2[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Fri Mar 8 08:08:09 2024 +0000

    chore: classify `todo` porting notes (#11216)
    
    Classifies by adding issue number #11215 to porting notes claiming "TODO".

[33mcommit c697e040e56edcb7d981b56097fd14167ca9098c[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Fri Mar 8 07:00:40 2024 +0000

    chore: Remove `ball` and `bex` from lemma names (#10816)
    
    `ball` for "bounded forall" and `bex` for "bounded exists" are from experience very confusing abbreviations. This PR renames them to `forall_mem` and `exists_mem` in the few `Set` lemma names that mention them.
    
    Also deprecate `ball_image_of_ball`, `mem_image_elim`, `mem_image_elim_on` since those lemmas are duplicates of the renamed lemmas (apart from argument order and implicitness, which I am also fixing by making the binder in the RHS of `forall_mem_image` semi-implicit), have obscure names and are completely unused.

[33mcommit 0c4cb8258e108d73ac220401bfeb99f04f90182b[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Thu Mar 7 21:56:57 2024 +0000

    feat: results about `List.orderedInsert` (#11191)
    
    I suspect I will need some of these for #10660

[33mcommit 87c01ca01dbe4defb9d7f105620011f5a04d9566[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Thu Mar 7 21:56:56 2024 +0000

    feat: Absolute value and positive parts in pi types (#10256)
    
    and a few more lemmas.
    
    From LeanAPAP

[33mcommit 861e4fd322e035859008041300b4b2026181a216[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Thu Mar 7 21:32:17 2024 +0000

    feat: define `ContinuousMapZero` (#11220)
    
    This defines the type of continuous maps `C(X, R)‚ÇÄ` (notation is scoped) that map zero to zero. This type is used to define the continuous functional calculus for non-unital algebras. While it is possible to use a term, namely an ideal of `C(X, R)` given by the kernel of the evaluation (at zero) map, this caused problems with type class inference.

[33mcommit b6e4828fbec6e200ca5842d64443253e4d5af571[m
Author: L <hi@llllvvuu.dev>
Date:   Thu Mar 7 20:58:52 2024 +0000

    feat: improper integration by parts (#10874)
    
    
    
    
    Co-authored-by: L Lllvvuu <git@llllvvuu.dev>
    Co-authored-by: Moritz Firsching <firsching@google.com>
    Co-authored-by: L <git@llllvvuu.dev>

[33mcommit ee3a8f2c586d4a63459a1993398767566acecfd8[m
Author: Yuma Mizuno <mizuno.y.aj@gmail.com>
Date:   Thu Mar 7 18:39:26 2024 +0000

    chore(CategoryTheory/Monoidal): replace `ùüô X ‚äó f` with `X ‚óÅ f` (#11223)
    
    Extracted from #6307

[33mcommit b10f73d5a5f97fc50b84bce0d1c015702e8a0967[m
Author: Michael Stoll <Michael.Stoll@uni-bayreuth.de>
Date:   Thu Mar 7 17:56:48 2024 +0000

    chore: add shortcut `T2Space ‚ÑÇ` instance (#11222)
    
    This adds a shortcut instance for `T2Space ‚ÑÇ` in `Analysis.Complex.Basic`.
    
    See [this thread](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/.22.23synth.20T2Space.20.E2.84.82.22.20fails/near/425351881) on Zulip.

[33mcommit c5eaf25c6f7a7f513bde3cb2cc25df08de15f4ff[m
Author: Michael Stoll <Michael.Stoll@uni-bayreuth.de>
Date:   Thu Mar 7 16:36:26 2024 +0000

    feat: sums over residue classes (#11189)
    
    This adds a file `Analysis.SumOverResidueClass`, whose main result is
    ```lean
    /-- A decreasing sequence of real numbers is summable on a residue class
    if and only if it is summable. -/
    lemma summable_indicator_mod_iff {m : ‚Ñï} [NeZero m] {f : ‚Ñï ‚Üí ‚Ñù} (hf : Antitone f) (k : ZMod m) :
        Summable ({n : ‚Ñï | (n : ZMod m) = k}.indicator f) ‚Üî Summable f
    ```
    We then use this to show that the harmonic series still diverges when restricted to a residue class.
    
    This is needed for the proof that the abscissa of absolute convergence of a Dirichlet L-series is 1.

[33mcommit 62be35deb755e9605ecca828046be1044dbf0230[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Thu Mar 7 15:45:35 2024 +0000

    feat: generalize some lemmas about iterated derivatives (#11213)

[33mcommit 938e7b1c94a8e7f0f0d833e1b0c569dc2556e178[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Thu Mar 7 15:45:34 2024 +0000

    feat: unitary operators on a Hilbert space coincide with linear isometric equivalences (#10858)
    
    This constructs a group isomorphism `unitary (H ‚ÜíL[ùïú] H) ‚âÉ‚ãÜ (H ‚âÉ‚Çó·µ¢[ùïú] H)` where `H` is a Hilbert space. In addition, several lemmas are provided for convenience concerning unitary operators.

[33mcommit 28b31c2ba1e8a0f3cb47b007e0dc833868cfc9bf[m
Author: Moritz Doll <moritz.doll@googlemail.com>
Date:   Thu Mar 7 15:45:33 2024 +0000

    feat(Analysis/Distribution/SchwartzSpace): Constructor for CLMs to normed space and integration (#10652)
    
    - We define a constructor for continuous linear maps from Schwartz space into normed spaces similar to mkCLM
    - Define the integral as a distribution on Schwartz space (moved to lemmas from `Analysis/Distribution/FourierSchwartz` to `Analysis/Distribution/SchwartzSpace` for that)
    - Golf a few definitions

[33mcommit 0eaff3630080f2b834b490f935b619a72c9abac9[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Thu Mar 7 15:09:11 2024 +0000

    chore(Order): Make more arguments explicit (#11033)
    
    Those lemmas have historically been very annoying to use in `rw` since all their arguments were implicit. One too many people complained about it on Zulip, so I'm changing them.
    
    Downstream code broken by this change can fix it by adding appropriately many `_`s.
    
    Also marks `CauSeq.ext` `@[ext]`.
    
    ## `Order.BoundedOrder`
    
    * `top_sup_eq`
    * `sup_top_eq`
    * `bot_sup_eq`
    * `sup_bot_eq`
    * `top_inf_eq`
    * `inf_top_eq`
    * `bot_inf_eq`
    * `inf_bot_eq`
    
    ## `Order.Lattice`
    
    * `sup_idem`
    * `sup_comm`
    * `sup_assoc`
    * `sup_left_idem`
    * `sup_right_idem`
    * `inf_idem`
    * `inf_comm`
    * `inf_assoc`
    * `inf_left_idem`
    * `inf_right_idem`
    * `sup_inf_left`
    * `sup_inf_right`
    * `inf_sup_left`
    * `inf_sup_right`
    
    ## `Order.MinMax`
    
    * `max_min_distrib_left`
    * `max_min_distrib_right`
    * `min_max_distrib_left`
    * `min_max_distrib_right`
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 7e0bc5a7c6c4304480f2fafe0408a1edd536a679[m
Author: Tom√°≈° Sk≈ôivan <skrivantomas@seznam.cz>
Date:   Thu Mar 7 11:11:16 2024 +0000

    feat: set up fun_prop for Differentiable and HasFDeriv (#11153)
    
    Basic setup for `fun_prop` for Differentiable(At/On/Within) and HasFDeriv(At/Within/Strict).
    
    Mainly consists of marking theorems with `fun_prop` attribute but I had to formulate appropriate `_pi` and `_apply` theorems. Proofs of `_apply` theorems can probably be golfed into neater form.

[33mcommit d7714b7c9757a89d19ee3817ad6b4da3086d9893[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Thu Mar 7 08:49:06 2024 +0000

    feat: restriction of the continuous functional calculus to a scalar subring (#10768)

[33mcommit 24e73186670a6ff742a6a16ddd8d94869b319667[m
Author: sven-manthe <sven.manthe@gmerek-manthe.de>
Date:   Thu Mar 7 06:34:56 2024 +0000

    feat: add simp lemma (#11206)
    
    It is already there for inf/sup, now add it to inter/union. Now simp succeeds in cases where previously symm; simp was necessary

[33mcommit c8e50e0cdcbf8e52dd24487871e410bd011aa5c9[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Thu Mar 7 06:34:55 2024 +0000

    chore: Rename monotonicity of `/` lemmas (#10634)
    
    The new names and argument orders match the corresponding `*` lemmas, which I already took care of in a previous PR.
    
    From LeanAPAP

[33mcommit c8969e40e1194dd2d0529e00893e5b25290d5736[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Thu Mar 7 05:27:18 2024 +0000

    chore(Algebra/Group): Do not import `GroupWithZero` (#11202)
    
    I am claiming that anything within the `Algebra.Group` folder should be additivisable, to the exception of `MonoidHom.End` maybe. This is not the case of `NeZero`, `MonoidWithZero` and `MonoidWithZeroHom` which were all imported to prove a few lemmas. Those lemmas are easily moved to another file.

[33mcommit 35909eaa5b71d0bd5a6e259b5cc9732132d977c7[m
Author: Yuma Mizuno <mizuno.y.aj@gmail.com>
Date:   Wed Mar 6 21:35:42 2024 +0000

    chore(CategoryTheory/MonoidalCategory): split the monoidal composition (#11149)
    
    I realized that the monoid composition `‚äó‚â´` can be defined without depending on the free monoid category, and that it is still useful.

[33mcommit c747be0a71d6ecf87729539a6ab3d9a110b64656[m
Author: Eric Rodriguez <ericrboidi@gmail.com>
Date:   Wed Mar 6 18:13:51 2024 +0000

    chore: scope `open Classical` (#11199)
    
    We remove all but one `open Classical`s, instead preferring to use `open scoped Classical`. The only real side-effect this led to is moving a couple declarations to use `Exists.choose` instead of `Classical.choose`.
    
    The first few commits are explicitly labelled regex replaces for ease of review.

[33mcommit 5eb05fbcf6575aed2b57bf80e796024a91bdb1a3[m
Author: R√©my Degenne <Remydegenne@gmail.com>
Date:   Wed Mar 6 17:32:03 2024 +0000

    feat: add tendsto_iff_tendsto_subseq_of_antitone (#11200)
    
    Add `tendsto_iff_tendsto_subseq_of_antitone`, next to `tendsto_iff_tendsto_subseq_of_monotone`.
    
    
    
    Co-authored-by: R√©my Degenne <remydegenne@gmail.com>

[33mcommit 89ea8c2fe8177c407a1385dd36f76c732d6cacd4[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Wed Mar 6 16:49:09 2024 +0000

    golf(Archive/Partition): inline unfold_let into subsequent simp (#11204)

[33mcommit e6d6f9ddc8888f245b6a5be6e3b67bbe1ecf2a0d[m
Author: Christian Merten <christian@merten.dev>
Date:   Wed Mar 6 12:56:30 2024 +0000

    feat(CategoryTheory/Galois): Fibers are represented by Galois objects (#10426)
    
    We show that if `X` is an object in a Galois category, then there exists an object `A` and a point `a` in the fiber of `A` such that `A` is Galois and that the evaluation map at `a` from `A ‚ü∂ X` to the fiber of `X` is bijective.
    
    This is the main input in the pro-representability of fiber functors.

[33mcommit 9fa6633541a90aeff159e00e291e6ae16dffbac5[m
Author: Shad Amethyst <adrien.burgun@orange.fr>
Date:   Wed Mar 6 11:37:20 2024 +0000

    refactor(Order): rename cInf -> csInf and cSup -> csSup (#10985)
    
    Does the following renames:
    - `cSup_eq_max'` -> `csSup_eq_max'`
    - `cInf_eq_min'` -> `csInf_eq_min'`
    - `cSup_mem` -> `csSup_mem`
    - `cInf_mem` -> `csInf_mem`
    - `cSup_lt_iff` -> `csSup_lt_iff`
    - `lt_cInf_iff` -> `lt_csInf_iff`

[33mcommit 6dc895db1ebaba474f5ec8a4f94781fc2d64cae6[m
Author: Scott Morrison <scott@tqft.net>
Date:   Wed Mar 6 11:37:19 2024 +0000

    feat: the opposite of a braided category is braided (#10095)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 2111d69aa1b05303c5c73b53d210061c7774f77a[m
Author: Michael Stoll <Michael.Stoll@uni-bayreuth.de>
Date:   Wed Mar 6 11:04:40 2024 +0000

    feat(Analysis/Calculus/{Iterated}Deriv/*): add lemmas on composition with negation (#11173)
    
    This adds
    ```lean
    lemma deriv_comp_neg (f : ùïú ‚Üí F) (a : ùïú) : deriv (fun x ‚Ü¶ f (-x)) a = -deriv f (-a)
    
    /-- A variant of `deriv_const_smul` without differentiability assumption when the scalar
    multiplication is by field elements. -/
    lemma deriv_const_smul' {f : ùïú ‚Üí F} {x : ùïú} {R : Type*} [Field R] [Module R F] [SMulCommClass ùïú R F]
        [ContinuousConstSMul R F] (c : R) :
        deriv (fun y ‚Ü¶ c ‚Ä¢ f y) x = c ‚Ä¢ deriv f x
    
    lemma iteratedDeriv_neg (n : ‚Ñï) (f : ùïú ‚Üí F) (a : ùïú) :
        iteratedDeriv n (fun x ‚Ü¶ -(f x)) a = -(iteratedDeriv n f a)
    
    lemma iteratedDeriv_comp_neg (n : ‚Ñï) (f : ùïú ‚Üí F) (a : ùïú) :
        iteratedDeriv n (fun x ‚Ü¶ f (-x)) a = (-1 : ùïú) ^ n ‚Ä¢ iteratedDeriv n f (-a)
    ```
    which will come in handy in some future PRs on L-series.
    
    See [here](https://leanprover.zulipchat.com/#narrow/stream/144837-PR-reviews/topic/L-series/near/424858837) on Zulip.

[33mcommit 59fdb6b04d7d16825a54483d550d9572ff473abf[m[33m ([m[1;33mtag: v4.7.0-rc2[m[33m)[m
Author: Scott Morrison <scott@tqft.net>
Date:   Wed Mar 6 09:17:16 2024 +0000

    chore: move to v4.7.0-rc2 (#11198)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 60b7f5a62b6fd370ab3f31005ea8fb067e6b7214[m
Author: Geoffrey Irving <irving@naml.us>
Date:   Wed Mar 6 07:35:34 2024 +0000

    feat: Add UniformCauchySeqOn.cauchySeq (#10815)
    
    We have `UniformCauchySeqOn.cauchy_map`.  This is the special case of that if one wants exactly `CauchySeq`, which is a Cauchy map specialized to `atTop`.

[33mcommit 242d9298b7ac29c073abee29bf5882234acfd5b4[m
Author: Jo√´l Riou <reddeloostw@gmail.com>
Date:   Wed Mar 6 04:59:23 2024 +0000

    feat(Algebra/Homology): the homotopy category of cochain complexes is triangulated (#9550)
    
    In this PR, we show that for any additive category `C`, the pretriangulated category `HomotopyCategory C (ComplexShape.up ‚Ñ§)` is triangulated, i.e. the octahedron axiom holds.
    
    
    
    Co-authored-by: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit 9405a73250c8699ccefda7bcde25860fce06331d[m
Author: Scott Morrison <scott@tqft.net>
Date:   Wed Mar 6 00:59:12 2024 +0000

    chore: split CategoryTheory.FinCategory (#9923)
    
    Minor clean up of imports, getting ready to minimize the heartbeats variation observed/reduced in #9732.
    
    This has the effect of slightly (although not enough) delaying the import of `positivity` (which in turn imports the kitchen sink) into the category theory development.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit e7756e995e594b7eabe1e56f31c00e6f66e74ab5[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Tue Mar 5 23:12:06 2024 +0000

    style: remove three double spaces (#11186)

[33mcommit 21e3d3bc1000134b5a769fa26566317ef8a9dc61[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Tue Mar 5 22:19:30 2024 +0000

    chore: classify `was infer_instance` porting notes (#11188)
    
    Classifying by adding issue number #11187 to porting notes claiming:
    
    > was `infer_instance`

[33mcommit 28527d30a1deaa8dfc7061aa2b8819bfee196ef6[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Tue Mar 5 22:19:29 2024 +0000

    chore: classify `@[simp] removed` porting notes (#11184)
    
    Classifying by adding issue number #11119 to porting notes claiming anything semantically equivalent to:
    
    - "`@[simp]` removed [...]"
    - "@[simp] removed [...]"
    - "removed `simp` attribute"

[33mcommit 15d4635633d51ef451e62402d63f92d5075988f4[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Tue Mar 5 22:19:28 2024 +0000

    chore: classify `removed @[ext]` porting notes (#11183)
    
    Classifies by adding issue number #11182 to porting notes claiming:
    
    > removed `@[ext]`

[33mcommit 76aa1eb14ca6cc2b0dba5e04c05cc004dcfafb8f[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Tue Mar 5 21:30:14 2024 +0000

    chore: classify `removed @[pp_nodot]` porting notes (#11181)
    
    Classifies by adding issue number #11180 to porting notes claiming:
    
    > removed `@[pp_nodot]`

[33mcommit 4e4717f55d67d34a129b22260d19136255732de1[m
Author: Markus Himmel <markus@himmel-villmar.de>
Date:   Tue Mar 5 20:12:08 2024 +0000

    feat: lift concrete description of colimits in Type to functor category (#10967)

[33mcommit 2a65c8db2a3d360ab01ac149592d5b8f7813606b[m
Author: Kyle Miller <kmill31415@gmail.com>
Date:   Tue Mar 5 18:47:09 2024 +0000

    chore: update unexpanders (#11165)
    
    lean4#3375 makes it so that unexpanders do not need to handle overapplication.

[33mcommit 1029b4ff6df6e4e3ecf77936fd2b5d9871bc9e8e[m
Author: Yuma Mizuno <mizuno.y.aj@gmail.com>
Date:   Tue Mar 5 16:05:15 2024 +0000

    feat(CategoryTheory/Monoidal): add whiskerings to free monoidal categories (#11172)
    
    Since the coherence tactic assume that a certain defeq property holds for structural morphisms in a monoidal category and their corresponding morphisms in the free monoidal category, we want free monoidal categories to have the whiskering operators as primitives.
    
    This PR also simplified the proof of the coherence theorem, and removed some porting notes.

[33mcommit 9fb833b8330ac5403dde5d09f5fb5bc49a40d220[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Tue Mar 5 16:05:14 2024 +0000

    feat: Fourier inversion formula (#10810)
    
    We show the Fourier inversion formula on finite-dimensional real inner product spaces: if `f` and its Fourier transform are both integrable, then `ùìï‚Åª (ùìï f) = f` at continuity points of `f`.

[33mcommit 6dcd9f8d51836b91d1d92c6c4f403df43f9f67a4[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Tue Mar 5 16:05:13 2024 +0000

    feat: Weighted H√∂lder inequality, Cauchy-Schwarz with square roots (#10630)
    
    From LeanAPAP

[33mcommit 923d04ad061750d97fd836f0463b124c6f7ad82c[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Mar 5 15:28:13 2024 +0000

    feat(Separation): add `T25Space (Subtype p)` (#11055)
    
    Add `Filter.Tendsto.lift'_closure`,
    `R1Space.of_continuous_specializes_imp`,
    and `T25Space.of_injective_continuous`.

[33mcommit fbca142e939823d2f94b764bd494f9295a07561b[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Mar 5 15:28:12 2024 +0000

    refactor(CompactOpen): redefine in terms of `Set.image2` and `Set.MapsTo` (#11053)

[33mcommit dcaca11327d79f7d3fa96b3e7ce4931f1631c8a8[m
Author: smorel394 <smorel@math.princeton.edu>
Date:   Tue Mar 5 14:11:30 2024 +0000

    doc(Algebra/Module/LinearMap/End, LinearAlgebra/Dual): fix typos in docstrings (#11170)
    
    Fix two typos:
    * In `LinearAlgebra/Dual`, the doctring of `TensorProduct.dualDistribInvOfBasis` says "An inverse to `dual_tensor_dual_map` given bases.", but `dual_tensor_dual_map` is now called `TensorProduct.dualDistrib`.
    * In `Algebra/Module/LinearMap/End`, the doctstring of `LinearMap.smulRight` says "When `f` is an `R`-linear map taking values in `S`, then `fun ‚Ü¶ b, f b ‚Ä¢ x` is an `R`-linear map.". The map should be `fun b ‚Ü¶ f b ‚Ä¢ x`.

[33mcommit a49c6bcade53134c6c94b90dafa76cb86ef13d23[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Tue Mar 5 14:11:29 2024 +0000

    feat: generalize a few assumptions around AddMonoidAlgebra degrees (#11168)

[33mcommit 6b5dcd21968f575f7a6872b85de3e4ea5897dbe2[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Tue Mar 5 14:11:28 2024 +0000

    chore(MeasureTheory/Integral/SetIntegral): rename type variables (#11131)
    
    Rename measurable spaces \alpha and \beta to X and Y.
    Rename variables a : X and b : Y to x and y, respectively (and associated hypotheses as well).

[33mcommit c84996b8c844d2a14f18b02fbb2a7b5eead3e396[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Tue Mar 5 14:11:27 2024 +0000

    chore: fix simp issues around Ideal.quotientKerAlgEquivOfRightInverse (#11014)
    
    Several simp lemmas were poorly named and not in simp normal form.

[33mcommit babb8ed93ea297649c9e447d90364976ee7b8cfd[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Tue Mar 5 14:11:26 2024 +0000

    feat(CategoryTheory/GradedObject): the left unitor (#10701)
    
    This PR defines a left unitor isomorphism for graded objects. A special case of this construction shall be used in the construction of the monoidal category structure on graded objects indexed by an additive monoid.

[33mcommit ce5f65a6cf574386e3618a734285e3d96e2a6fa4[m
Author: Joseph Myers <jsm@polyomino.org.uk>
Date:   Tue Mar 5 13:00:13 2024 +0000

    feat: `funext_iff_of_subsingleton` (#11140)
    
    Add a lemma about equality of functions from a subsingleton type:
    
    ```lean
    lemma funext_iff_of_subsingleton [Subsingleton Œ±] {g : Œ± ‚Üí Œ≤} (x y : Œ±) :
        f x = g y ‚Üî f = g := by
    ```
    
    This isn't a `simp` lemma; it isn't entirely clear whether equality of functions or of particular values should necessarily be considered simpler, and making it a `simp` lemma introduces a `simpNF` linter failure for `eq_rec_inj`.
    
    From AperiodicMonotilesLean.

[33mcommit f5aa22dfa1ef233f1c5c61ffd01cca45aeb72da5[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Tue Mar 5 13:00:12 2024 +0000

    feat(Algebra/Homology): the category of homological complexes is linear (#10891)
    
    In this PR, it is shown that if `C` is a `R`-linear category, then the category of homological complexes in `C` is `R`-linear. (This is also obtained for the homotopy category.)
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit 76c060990c5cea31c850c52e45e4efe51b7a313e[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Tue Mar 5 12:37:19 2024 +0000

    chore: remove some obsolete entries in noshake.json (#11169)
    
    Either they are no longer needed, or shake recognizes the dependency on its own.

[33mcommit 8c06311ca618df292ddf96bbc5e2e11dc9a65f65[m
Author: damiano <adomani@gmail.com>
Date:   Tue Mar 5 09:18:12 2024 +0000

    chore: Remove duplicate namespace in `Seminorm.Seminorm.isLUB_sSup` (#11161)
    
    A private duplicated namespace found by the linter in #11154.

[33mcommit 4fa7d618928e491db6f23e80faffa019e1a975a8[m
Author: David Loeffler <d.loeffler.01@cantab.net>
Date:   Tue Mar 5 08:34:20 2024 +0000

    feat(SpecialFunctions/Gamma): Deligne's archimedean Gamma-factors (#11159)
    
    Add Deligne's variants of the Gamma function used in functional equations of L-functions.

[33mcommit f8120d5e5acf10be04f372b7704179d3a3ee03bd[m
Author: David Loeffler <d.loeffler.01@cantab.net>
Date:   Tue Mar 5 08:34:19 2024 +0000

    feat(OperatorNorm/Prod): norm of first/second projection (#11002)
    
    Operator norm of the projection maps `E √ó F ‚Üí E` and `E √ó F ‚Üí F` for (semi)normed spaces

[33mcommit d230ed6e142a334f78f99158c070341a1ca2bbe0[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Mar 5 07:39:43 2024 +0000

    chore(Int/LeastGreatest): use classical logic (#11163)

[33mcommit 16003723509e6a2d8517dac98e096e3b3ca6b1de[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Mar 5 06:22:10 2024 +0000

    feat(LocallyConvex/Bounded): add `isVonNBounded_iff_tendsto_smallSets_nhds` (#10776)
    
    * add `absorbs_iff_eventually_nhds_zero`,
      `isVonNBounded_iff_tendsto_smallSets_nhds`,
      and `isVonNBounded_pi_iff`;
    * generalize some lemmas from `NormedField` to `NormedDivisionRing`;
    * use new lemmas to golf 2 proofs

[33mcommit b74ece727c42328fa3d13be39522ec82c758a625[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Mar 5 05:13:20 2024 +0000

    chore(UniformSpace): move lemmas about compact sets together (#10783)
    
    Also add a `Filter.HasBasis` version of the Lebesgue number lemma, use it to golf `IsCompact.nhdsSet_basis_uniformity`, and use `IsCompact.nhdsSet_basis_uniformity`
    to golf `lebesgue_number_of_compact_open`.

[33mcommit fa48894a5d2780c6593a224003a660ca039e3e8f[m[33m ([m[1;33mtag: v4.7.0-rc1[m[33m)[m
Author: Scott Morrison <scott@tqft.net>
Date:   Tue Mar 5 04:47:26 2024 +0000

    chore: move Mathlib to v4.7.0-rc1 (#11162)
    
    This is a very large PR, but it has been reviewed piecemeal already in PRs to the `bump/v4.7.0` branch as we update to intermediate nightlies.
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>
    Co-authored-by: Kyle Miller <kmill31415@gmail.com>
    Co-authored-by: damiano <adomani@gmail.com>

[33mcommit 0b52a6a5bb899008d51a55cb045a9db75e5d5549[m
Author: Junyan Xu <junyanxumath@gmail.com>
Date:   Tue Mar 5 01:29:45 2024 +0000

    feat: sum and product of commuting semisimple endomorphisms (#10808)
    
    + Prove `isSemisimple_of_mem_adjoin`: if two commuting endomorphisms of a finite-dimensional vector space over a perfect field are both semisimple, then every endomorphism in the algebra generated by them (in particular their product and sum) is semisimple.
    
    + In the same file LinearAlgebra/Semisimple.lean, `eq_zero_of_isNilpotent_isSemisimple` and `isSemisimple_of_squarefree_aeval_eq_zero` are golfed, and `IsSemisimple.minpoly_squarefree` is proved
    
    RingTheory/SimpleModule.lean:
    
    + Define `IsSemisimpleRing R` to mean that R is a semisimple R-module.
    add properties of simple modules and a characterization (they are exactly the quotients of the ring by maximal left ideals).
    
    + The annihilator of a semisimple module is a radical ideal.
    
    + Any module over a semisimple ring is semisimple.
    
    + A finite product of semisimple rings is semisimple.
    
    + Any quotient of a semisimple ring is semisimple.
    
    + Add Artin--Wedderburn as a TODO (proof_wanted).
    
    + Order/Atoms.lean: add the instance from `IsSimpleOrder` to `ComplementedLattice`, so that `IsSimpleModule ‚Üí IsSemisimpleModule` is automatically inferred.
    
    Prerequisites for showing a product of semisimple rings is semisimple:
    
    + Algebra/Module/Submodule/Map.lean: generalize `orderIsoMapComap` so that it only requires `RingHomSurjective` rather than `RingHomInvPair`
    
    + Algebra/Ring/CompTypeclasses.lean, Mathlib/Algebra/Ring/Pi.lean, Algebra/Ring/Prod.lean: add RingHomSurjective instances
    
    
    RingTheory/Artinian.lean:
    
    + `quotNilradicalEquivPi`: the quotient of a commutative Artinian ring R by its nilradical is isomorphic to the (finite) product of its quotients by maximal ideals (therefore a product of fields).
    `equivPi`: if the ring is moreover reduced, then the ring itself is a product of fields. Deduce that R is a semisimple ring and both R and R[X] are decomposition monoids. Requires `RingEquiv.quotientBot` in RingTheory/Ideal/QuotientOperations.lean.
    
    + Data/Polynomial/Eval.lean: the polynomial ring over a finite product of rings is isomorphic to the product of polynomial rings over individual rings. (Used to show R[X] is a decomposition monoid.)
    
    Other necessary results:
    
    + FieldTheory/Minpoly/Field.lean: the minimal polynomial of an element in a reduced algebra over a field is radical.
    
    + RingTheory/PowerBasis.lean: generalize `PowerBasis.finiteDimensional` and rename it to `.finite`.
    
    Annihilator stuff, some of which do not end up being used:
    
    + RingTheory/Ideal/Operations.lean: define `Module.annihilator` and redefine `Submodule.annihilator` in terms of it; add lemmas, including one that says an arbitrary intersection of radical ideals is radical. The new lemma `Ideal.isRadical_iff_pow_one_lt` depends on `pow_imp_self_of_one_lt` in Mathlib/Data/Nat/Interval.lean, which is also used to golf the proof of `isRadical_iff_pow_one_lt`.
    
    + Algebra/Module/Torsion.lean: add a lemma and an instance (unused)
    
    + Data/Polynomial/Module/Basic.lean: add a def (unused) and a lemma
    
    + LinearAlgebra/AnnihilatingPolynomial.lean: add lemma `span_minpoly_eq_annihilator`
    
    Some results about idempotent linear maps (projections) and idempotent elements, used to show that any (left) ideal in a semisimple ring is spanned by an idempotent element (unused):
    
    + LinearAlgebra/Projection.lean: add def `isIdempotentElemEquiv`
    
    + LinearAlgebra/Span.lean: add two lemmas
    
    
    
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>

[33mcommit 9254f532dec163b31586ad10868fde6969c8d151[m[33m ([m[1;31morigin/hmonroe_leastnumber[m[33m)[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Mon Mar 4 21:58:02 2024 +0000

    chore(Integral/SetIntegral): various small clean-ups (#11160)
    
    See the individual commit messages for details.
    
    Extracted from #11108.

[33mcommit f07bffd09fba8a6f74f4e518dba352712c8304f4[m
Author: Kevin Buzzard <k.buzzard@imperial.ac.uk>
Date:   Mon Mar 4 21:58:01 2024 +0000

    doc(FieldTheory/Finiteness): fix docstring (#11151)

[33mcommit c9e0f483288d4e8b0aa671bbc414dfd4d8744b2d[m
Author: Kevin Buzzard <k.buzzard@imperial.ac.uk>
Date:   Mon Mar 4 21:58:00 2024 +0000

    feat(Data/ZMod/Basic): more ringEquivCongr API (#11075)
    
    Add rfl, symm and trans lemmas for ringEquivCongr.

[33mcommit 99969936b9188578c5fc207414e5a24569d80616[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Mon Mar 4 21:27:49 2024 +0000

    feat: Fourier integral of Gaussians on inner product spaces (#11035)
    
    Also rename (and deprecate) a few statements by changing `fourierTransform` to `fourierIntegral`: the Fourier transform for general L^2 functions is not given by the Fourier integral, so we should separate cleanly the two of them.

[33mcommit 144ba2b4119ab5c92e6190ced6e1ea2cfeee29cf[m
Author: Bolton Bailey <bolton.bailey@gmail.com>
Date:   Mon Mar 4 20:44:35 2024 +0000

    feat: `Option {b // b ‚â† a} ‚âÉ Œ±` (#11095)
    
    Extract from `partialFunEquivPointed` the equivalence between any type with a distinguished element and an Option type.
    
    Co-authored-by: @YaelDillies <yael.dillies@gmail.com>
    Co-authored-by: @fpvandoorn <fpvdoorn@gmail.com>
    
    
    
    Co-authored-by: Ya√´l Dillies <yael.dillies@gmail.com>

[33mcommit 7f32cc791b35ef05f0616cc44114cee05f52b8f4[m
Author: Bolton Bailey <bolton.bailey@gmail.com>
Date:   Mon Mar 4 20:11:12 2024 +0000

    chore: split MvPolynomial.Variables (#11094)
    
    Splits this file into two. The sections about `degree` related concepts are totally independent of the `vars` related concepts so this was a clean split.

[33mcommit 8a0b321a6c45d86496c52acf0d10d0810c4f9fc2[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Mon Mar 4 19:37:10 2024 +0000

    refactor: move material about the Dominated Convergence Theorem into one file (#11139)
    
    [Suggested](https://github.com/leanprover-community/mathlib4/pull/11108#issuecomment-1975318101) by @loefflerd.
    Only code motion (and cosmetic adaptions, such as minimising import and open statements).
    
    Pre-requisite for #11108 and (morally) #11110.

[33mcommit e3e4eeab8cbfb7220b4d1e0f0117ecf993174909[m
Author: Riccardo Brasca <riccardo.brasca@gmail.com>
Date:   Mon Mar 4 18:12:34 2024 +0000

    feat: prove case 1 of FLT in the case n=3 (#10698)
    
    We prove the so called case 1 of Fermat Last Theorem for exponent `n = 3`: if `a b c : ‚Ñï` are such that `¬¨ 3 ‚à£ a * b * c` then `a ^ 3 + b ^ 3 ‚â† c ^ 3`.
    
    From flt-regular

[33mcommit 39f3b00d363ce6b7029c48b365c96ccb35977eb2[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Mon Mar 4 15:47:54 2024 +0000

    feat: version of the extreme value theorem without a non-emptiness assumption (#9872)
    
    Adapted and generalised from sphere-eversion; I'm just upstreaming it.

[33mcommit 8be0b69cd52728b6359c4b5ce142a16a13e834cf[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Mon Mar 4 14:39:53 2024 +0000

    style: homogenise porting notes (#11145)
    
    Homogenises porting notes via capitalisation and addition of whitespace.
    
    It makes the following changes:
    - converts "--porting note" into "-- Porting note";
    - converts "porting note" into "Porting note".

[33mcommit b4d178519df595a700ea64e772a721fa52d53fa5[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Mon Mar 4 13:19:23 2024 +0000

     feat: primitive of a parametrised integral is continuous (#11110)
    
    if it is bounded by an integrable function: by the dominated convergence theorem.
    
    From the sphere-eversion project.
    The first two commits are preliminary clean-up; happy to split these into a separate PR.

[33mcommit 5925ea9ba2855f58fdde427199200d511e1855fc[m
Author: Antoine Chambert-Loir <antoine.chambert-loir@u-paris.fr>
Date:   Mon Mar 4 10:56:50 2024 +0000

    chore(GroupTheory/Perm/Cycle/Basic): Split (#10907)
    
    The file Mathlib.GroupTheory.Perm.Cycle.Basic was too big and this PR splits it in several components:
    * `Mathlib.GroupTheory.Perm.Cycle.Basic` contains everything related to a permutation being a cycle,
    * `Mathlib.GroupTheory.Perm.Cycle.Factors` is about the cycles of a permutation and the decomposition of a permutation into disjoint cycles
    * `Mathlib.GroupTheory.Perm.Closure` contains generation results for the permutation groups
    * `Mathlib.GroupTheory.Perm.Finite` contains general results specific to permutation of finite types
    
    I moved some results to `Mathlib.GroupTheory.Perm.Support`
    
    I also moved some results from `Mathlib.GroupTheory.Perm.Sign` to `Mathlib.GroupTheory.Perm.Finite`
    
    Some imports could be reduced, and the shake linter required a few adjustments in some other.
    
    
    
    Co-authored-by: Antoine Chambert-Loir <antoine.chambert-loir@math.univ-paris-diderot.fr>

[33mcommit 1095e9af4d1f75960ab5485a6c5b3a851f48b5f4[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Mon Mar 4 10:09:32 2024 +0000

    feat(CategoryTheory/Limits/Shapes/Biproducts): functoriality of bicones is full and faithful (#11130)
    
    This follows the API pattern set by `Cone` and `Cocone`.
    
    This also renames `CategoryTheory.Limits.Cones.functorialityFaithful` to `CategoryTheory.Limits.Cones.functoriality_faithful` to match the corresponding `Cocone` instance.

[33mcommit e612a999e8c28f29ff53ca370d0fafcb6e373dee[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Mar 4 10:09:30 2024 +0000

    chore(ModelTheory/DirectLimit): `Fintype` -> `Finite`, `Encodable` -> `Countable` (#10913)

[33mcommit 3e6dab64636e495a2f86fbc0cbaadb0c71da0912[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Mon Mar 4 09:02:51 2024 +0000

    chore: classify `@[simp] removed` porting notes (#11121)
    
    Classifies by adding issue number #11119 to porting notes claiming anything semantically equivalent to:
    
    - "`@[simp]` removed [...]"
    - "@[simp] removed [...]"
    - "removed `@[simp]`"

[33mcommit ba66cf768db20d9479b254bef76b5a5dafdffb06[m
Author: Michael Stoll <Michael.Stoll@uni-bayreuth.de>
Date:   Mon Mar 4 09:02:50 2024 +0000

    refactor(NumberTheory/LSeries/*): change type of argument to `‚Ñï ‚Üí ‚ÑÇ`, add `LSeries.term` + API etc. (#11111)
    
    See [this thread](https://leanprover.zulipchat.com/#narrow/stream/144837-PR-reviews/topic/.2310725.20and.20.2310728.3A.20L-series/near/422590170) on Zulip.
    
    The main point of this PR is to refactor `LSeries` and friends to use an argument `f : ‚Ñï ‚Üí ‚ÑÇ` instead of `f : ArithmeticFunction ‚ÑÇ`. Since I was at it anyway, I also did a few more things:
    * Move the L-series stuff out of the `ArithmeticFunction` namespace. Use `LSeries` as a namespace for some of the declarations instead.
    * Introduce `LSeries.term f s n`; this denotes the `n`th term in the L-series `LSeries f s`. This is defined to be zero for `n = 0`; otherwise it is the usual `f n / n ^ s`. Provide basic API for it.
    * Re-write `LSeries` etc. in terms of `LSeries.term`. Attempt to isolate the meat of the proofs in suitable API lemmas for `LSeries.term`. Add some API (like congruence lemmas).
    * Use `s` for the complex variable (in place of `z` or `w`; `s` and `s'` when two are required), following the notational convention in analytic number theory.
    * Golf some proofs.
    * Add some documentation (and modify existing docstrings to fit the changes).
    
    
    
    
    Co-authored-by: Michael Stoll <99838730+MichaelStollBayreuth@users.noreply.github.com>

[33mcommit 5f834b3b45e8ee9943272c3f90e72130321f3716[m
Author: Riccardo Brasca <riccardo.brasca@gmail.com>
Date:   Mon Mar 4 09:02:49 2024 +0000

    feat: the ring of integers of the p-th cyclotomic field is a PID if p = 3 or p = 5 (#10683)
    
    We prove that the ring of integers of the p-th cyclotomic field is a PID if p = 3 or p = 5.
    
    From flt-regular
    
    - [x] depends on: #10492
    - [x] depends on: #10502

[33mcommit dad5e8c449e037e72c9890baa70a85b2a307db68[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Mon Mar 4 07:58:24 2024 +0000

    chore: Golf `Ideal.radical_pow` (#11144)
    
    Also make `n` implicit and replace `0 < n` with `n ‚â† 0`

[33mcommit 2e87ddab3473cbd8834bfe0de73413bf7be32cd3[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Mon Mar 4 07:58:23 2024 +0000

    chore: Rename lemmas about the coercion `List ‚Üí Multiset` (#11099)
    
    These did not respect the naming convention by having the `coe` as a prefix instead of a suffix, or vice-versa. Also add a bunch of `norm_cast`

[33mcommit b36e0be283d9d2981e66dd52bf6789e10c7702bf[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Mon Mar 4 07:11:32 2024 +0000

    perf: speed up MvPolynomial.prime_rename_iff (#11138)
    
    This takes it from over 4 seconds to under 1 second on my machine. Most of the time was taken by erw and convert.

[33mcommit 2b4e55314b0724e24865f5e82bd0bd4a35290851[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Mon Mar 4 04:31:35 2024 +0000

    chore: classify `simp can prove` porting notes (#11120)
    
    Classifies by adding issue number #10618 to porting notes claiming anything semantically equivalent to
    - "`simp` can prove this"
    - "`simp` can simplify this`"
    - "was `@[simp]`, now can be proved by `simp`"
    - "was `@[simp]`, but `simp` can prove it"
    - "removed simp attribute as the equality can already be obtained by `simp`"
    - "`simp` can already prove this"
    - "`simp` already proves this"
    - "`simp` can prove these"

[33mcommit 52762e248fde90c70e53dbc0aa1cbd5ed2db7f96[m
Author: miguelmarco <wieser.eric@gmail.com>
Date:   Sun Mar 3 21:54:56 2024 +0000

    feat(Set): API for subset restriction and coercion to/from subtypes (#9940)
    
    Api for subset restriction and coercion to/from subtypes
    
    Co-authored-by: Miguel Marco <mmarco@unizar.es>
    
    
    
    Co-authored-by: Miguel Marco <mmarco@unizar.es>
    Co-authored-by: Kyle Miller <kmill31415@gmail.com>
    Co-authored-by: mmarco <mmarco@kali>
    Co-authored-by: Winston Yin <winstonyin@gmail.com>

[33mcommit 656e737b9a3a127865e42cec69f8f24630ca82de[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Sun Mar 3 21:07:36 2024 +0000

    chore: remove three style exceptions which were already fixed (#11137)

[33mcommit 8102736da378a0707e68582b5b6c9d3d01913aa9[m
Author: Joseph Myers <jsm@polyomino.org.uk>
Date:   Sun Mar 3 21:07:35 2024 +0000

    feat(SetTheory/Cardinal): `sInf_eq_zero_iff`, `iInf_eq_zero_iff` (#11132)
    
    Add the two lemmas
    
    ```lean
    lemma sInf_eq_zero_iff {s : Set Cardinal} : sInf s = 0 ‚Üî s = ‚àÖ ‚à® ‚àÉ a ‚àà s, a = 0 := by
    ```
    
    and
    
    ```lean
    lemma iInf_eq_zero_iff {Œπ : Sort*} {f : Œπ ‚Üí Cardinal} :
        (‚®Ö i, f i) = 0 ‚Üî IsEmpty Œπ ‚à® ‚àÉ i, f i = 0 := by
    ```
    
    Feel free to golf.
    
    From AperiodicMonotilesLean.

[33mcommit da8fc11435a66ab238095e43e900544e628f8e5e[m
Author: Timo Carlin-Burns <timorcb@gmail.com>
Date:   Sun Mar 3 20:44:06 2024 +0000

    doc: replace typo'd `j` with `j'` (#11136)

[33mcommit c0210180b6fb3887f245d59a0f03926ff0bb83ed[m
Author: Jeremy Tan Jie Rui <reddeloostw@gmail.com>
Date:   Sun Mar 3 17:49:48 2024 +0000

    feat: prove Leibniz œÄ series with Abel's limit theorem (#11098)
    
    This resolves the Zulip comment [here](https://leanprover.zulipchat.com/#narrow/stream/217875-Is-there-code-for-X.3F/topic/Bounds.20on.20alternating.20convergent.20series/near/416938975).

[33mcommit 244fea281227d1b77f3f21dbeb1551a7ff85fb6a[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Sun Mar 3 17:13:19 2024 +0000

    chore: adjust some lemmas to the naming convention (#11118)

[33mcommit bf9724aa3f507588e226671283bd7561812ee67d[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Sun Mar 3 08:30:58 2024 +0000

    feat: the category of `CategoryTheory.Limits.BinaryBicones` (#11102)
    
    This follows on from #7209

[33mcommit 9a0ce883a014d7747c7030479875b3478862df7a[m
Author: Matthew Robert Ballard <matt@mrb.email>
Date:   Sat Mar 2 22:40:22 2024 +0000

    chore(RingTheory.Polynomial.Basic): clean up porting notes (#10909)
    
    Lean is so much more ergonomic now.

[33mcommit 8426743e8c29dd6c5161e28a3fe616911f71a06e[m
Author: Bolton Bailey <bolton.bailey@gmail.com>
Date:   Sat Mar 2 22:11:17 2024 +0000

    style: add nonterminal simp checker (#7496)
    
    Adds a linter that detects calls to `simp` where the next line is at the same indentation level.
    
    
    
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>

[33mcommit cddd40b13751035b75906b17674492052ef80bde[m
Author: David Renshaw <dwrenshaw@gmail.com>
Date:   Sat Mar 2 20:50:40 2024 +0000

    refactor: deprecate duplicated RespectsIso theorem (#11115)
    
    Deprecates `RespectsIso.ofRestrict_morphismRestrict_iff_of_isAffine` in favor of the older `RespectsIso.basicOpen_iff_localization`, and removes a local notation that is only used in the removed proof.

[33mcommit fb2570a4660a748bc85728de1b95619043ea8b15[m
Author: Jujian Zhang <jujian.zhang1998@outlook.com>
Date:   Sat Mar 2 20:50:39 2024 +0000

    feat(LinearAlgebra/PiTensorProduct): arbitrary tensor product of algebras (#9395)
    
    Let $R$ be a commutative ring and $(A_i)$ a bunch of $R$-algebras, then $\bigotimes_{R} A$ is an $R$-algebra as well. In particular, taking $R$ to be $\mathbb{Z}$, we get tensor product of rings
    
    
    
    Co-authored-by: Riccardo Brasca <riccardo.brasca@gmail.com>
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit e6232b7c39e75f2055cdcb4f2a49b7fe1467911a[m
Author: Bolton Bailey <bolton.bailey@gmail.com>
Date:   Sat Mar 2 20:05:13 2024 +0000

    feat: add lemma prod_X_pow_eq_monomial (#11109)
    
    Adds lemma about product of variables equalling a monomial

[33mcommit 146948d787739618cb598a1f6e1dda3873582044[m
Author: Jujian Zhang <jujian.zhang1998@outlook.com>
Date:   Sat Mar 2 17:21:16 2024 +0000

    feat(RingTheory/Flat/Basic): a module is flat iff tensoring preserves injectivity of linear maps (#9120)
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>
    
    
    
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>

[33mcommit 17a992713f19a07bad69df14cbf00fdcd6dac084[m
Author: Scott Carnahan <128885296+ScottCarnahan@users.noreply.github.com>
Date:   Sat Mar 2 15:57:45 2024 +0000

    feat(LinearAlgebra/RootSystem/Defs): Properties of pairs of roots (#10666)
    
    Given a pair of roots, we can describe the "angle" between them using the pairing between root `i` and coroot `j` together with the reverse pairing.  This PR adds language for describing the various cases.
    
    
    
    Co-authored-by: Oliver Nash <github@olivernash.org>

[33mcommit a3508a507c12376320349b4f5ae68a9a26db514a[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Sat Mar 2 14:52:39 2024 +0000

    perf: don't use the whole simp set in `proveFinsetNonempty` (#11105)
    
    The new `proveFinsetNonempty` prover was timing out all over the place when I tried to bump LeanAPAP. Turns out we had left `aesop` use the whole `simp` set!
    
    
    
    Co-authored-by: Vierkantor <vierkantor@vierkantor.com>

[33mcommit 0eb97a5b1fc88daf0494c27f05bcdb453351930a[m
Author: Bolton Bailey <bolton.bailey@gmail.com>
Date:   Sat Mar 2 14:52:38 2024 +0000

    chore: add simp to Polynomial.X_ne_zero (#11101)
    
    As requested [here](https://github.com/leanprover-community/mathlib4/pull/11071#issuecomment-1973230519) by @riccardobrasca

[33mcommit 5112b8d86cb2216cc2be2132da26ac33267b8f8c[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Sat Mar 2 14:20:44 2024 +0000

    feat: Linear and quadratic bounds on `sin` and `cos` (#10525)
    
    ... including Jordan's inequality: `2 / œÄ * x ‚â§ sin x` for `0 ‚â§ x ‚â§ œÄ / 2`
    
    From LeanAPAP

[33mcommit 4e3cf2fa03b4c01d9de001c2a01aba2a1495ef81[m
Author: Christopher Hoskin <christopher.hoskin@overleaf.com>
Date:   Sat Mar 2 13:38:09 2024 +0000

    Refactor(Analysis): from BilinForm to LinearMap.BilinForm (#11097)
    
    Replaces `BilinForm` with `LinearMap.BilinForm` in support of #10553
    
    
    
    Co-authored-by: Christopher Hoskin <mans0954@users.noreply.github.com>
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 1aabff10b7a7e02374f13a12d6e0fefb916b840f[m
Author: Bolton Bailey <bolton.bailey@gmail.com>
Date:   Sat Mar 2 09:06:35 2024 +0000

    feat: MvPolynomial.degreeOf_C_mul (#11073)
    
    Adds lemma about the degree of a polynomial multiplied by a constant.

[33mcommit fd31677f3c35d25c7c5f166cc3d19bf6bd8ea256[m
Author: L <hi@llllvvuu.dev>
Date:   Sat Mar 2 08:11:05 2024 +0000

    chore(IntegralEqImproper): remove unnecessary abs (#11096)
    
    
    
    Co-authored-by: L Lllvvuu <git@llllvvuu.dev>

[33mcommit e7991a6bedc97ed0ea667ae44d268634e5dd8815[m
Author: David Renshaw <dwrenshaw@gmail.com>
Date:   Sat Mar 2 06:44:47 2024 +0000

    fix: correctly elaborate Simp.Config in field_simp (#11087)
    
    `elabSimpConfig` expects the `cfg` syntax to be wrapped in an "optional node".

[33mcommit 37bc4aba4d4bb3c67f7c91dbba829297102468d1[m
Author: David Renshaw <dwrenshaw@gmail.com>
Date:   Sat Mar 2 00:03:09 2024 +0000

    refactor: optimize proofs with omega (#11093)
    
    I ran [tryAtEachStep](https://github.com/dwrensha/tryAtEachStep) on all files under `Mathlib` to find all locations where `omega` succeeds. For each that was a `linarith` without an `only`, I tried replacing it with `omega`, and I verified that elaboration time got smaller. (In almost all cases, there was a noticeable speedup.) I also replaced some slow `aesop`s along the way.

[33mcommit ab90a4e3762a4f338bc844857a51c2daf1d1406e[m
Author: Fr√©d√©ric Marbach <66742248+frederic-marbach@users.noreply.github.com>
Date:   Fri Mar 1 19:08:27 2024 +0000

    doc: fix typos in tags header (#11088)
    
    Fix 1 typo, 5 lowercase, 4 header depths

[33mcommit e32925bc31d77f9da527fdb3d9c37974dd8ac582[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Fri Mar 1 19:08:26 2024 +0000

    chore: Rename `LocallyFiniteOrder` instances (#11076)
    
    The generated names were too long

[33mcommit 8a40b522f90e81019e75a48226ae19d6b88e4671[m
Author: Yuma Mizuno <mizuno.y.aj@gmail.com>
Date:   Fri Mar 1 18:37:24 2024 +0000

    feat(CategoryTheory/Monoidal): replace `ùüô X ‚äó f` with `X ‚óÅ f` (#10912)
    
    We set `id_tensorHom` and `tensorHom_id` as simp lemmas. Partially extracted from #6307.

[33mcommit 008d6e9665fafe24aaa3ac859419b5a61f1e3fcc[m
Author: Richard Copley <buster@buster.me.uk>
Date:   Fri Mar 1 17:50:59 2024 +0000

    fix: denote alternating map by ‚ãÄ, not Œõ (#11064)
    
    That is, `\bigwedge`, not `\Lambda`
    
    
    
    
    Co-authored-by: Richard Copley <rcopley@gmail.com>
    Co-authored-by: Patrick Massot <patrickmassot@free.fr>

[33mcommit ce6aea3bae2c52ca1257bdab19af8dcc019f2c62[m
Author: David Renshaw <dwrenshaw@gmail.com>
Date:   Fri Mar 1 17:22:51 2024 +0000

    refactor: simplify vector span proof in AffineSubspace (#11074)
    
    Replaces a 4-line subproof in `vsub_mem_vectorSpan_of_mem_spanPoints_of_mem_spanPoints` with a simple application of `Submodule.sub_mem`.

[33mcommit 0257770cb813ba8eb67fd3425e052716b21bac30[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Fri Mar 1 17:22:50 2024 +0000

    chore: rename induction principle arguments around `CliffordAlgebra` (#10908)
    
    In order to improve the ergonomics of the `induction` tactic, this renames the arguments of:
    * `ExteriorAlgebra.induction`
    * `TensorAlgebra.induction`
    * `CliffordAlgebra.induction`
    * `CliffordAlgebra.left_induction`
    * `CliffordAlgebra.right_induction`
    * `CliffordAlgebra.even_induction`
    * `CliffordAlgebra.odd_induction`
    * `Submodule.iSup_induction'`
    * `Submodule.pow_induction_on_left'`
    * `Submodule.pow_induction_on_right'`
    
    This is slightly awkward for name-resolution within these induction principles, as the argument names end up clashing with the function they are about. Thankfully, this pain is not transferred to the caller using `induction _ using _`.

[33mcommit 5156e2492dc075f31f8128b21df79aba6060a645[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Fri Mar 1 17:22:48 2024 +0000

    feat: Angle between complex numbers (#10226)
    
    Prove that the angle between two complex numbers is the absolute value of the argument of their quotient.
    
    From LeanAPAP

[33mcommit c26b7f1332f86c00490ab787462529372f0ff8ed[m
Author: Jujian Zhang <jujian.zhang1998@outlook.com>
Date:   Fri Mar 1 17:22:47 2024 +0000

    feat(AlgebraicGeometry/ProjectiveSpectrum/Scheme): `fromSpec` and `toSpec` compose to identity (#9618)
    
    
    
    Co-authored-by: Jeremy Tan Jie Rui <reddeloostw@gmail.com>

[33mcommit 25d9b37b895e62ea887a37eee0eef9d628c10d0c[m
Author: Bolton Bailey <bolton.bailey@gmail.com>
Date:   Fri Mar 1 16:25:57 2024 +0000

    feat: MvPolynomial.X_ne_zero (#11071)
    
    Proves that a variable is not the zero polynomial, analogous to `Polynomial.X_ne_zero`.

[33mcommit 45a9252fec6a52bc3952944098044e76256f877d[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Fri Mar 1 16:25:56 2024 +0000

    chore(Data/Finsupp/Defs): rename instances (#10976)
    
    This adds the `inst` prefix that is expected in Lean 4.
    
    Performed using the F2 shortcut (renaming `foo` to `Finsupp.instFoo`, then deleting the redundant `Finsupp`)
    
    All the changes to downstream files are fallout, no names have been changed there.

[33mcommit 456ecaa5d1acadc240e97e3f96d84f524ef435aa[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Fri Mar 1 16:25:55 2024 +0000

    feat: `positivity` extension for the coercion `‚Ñù ‚Üí ‚ÑÇ` (#9528)
    
    From LeanAPAP

[33mcommit 86b7828a1e4debe4984e5051220a6026c8d4c6a1[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Fri Mar 1 13:29:52 2024 +0000

    chore: solve `not necessary anymore` porting notes (#11086)
    
    Solves porting notes claiming
    - "not necessary anymore"
    - "not used anymore"
    
    by simply deleting them.

[33mcommit 8f422f3d63d738290e879f1ccca3379aef39f549[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Fri Mar 1 13:29:51 2024 +0000

    chore: classify `added instance` porting notes (#11085)
    
    Classifies by adding issue number #10754 to porting notes claiming anything semantically equivalent to:
    
    - "added instance"
    - "new instance"
    - "adding instance"
    - "had to add this instance manually"

[33mcommit e6a09f7c1688081a1cfad57b394967e7eec50344[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Fri Mar 1 13:29:50 2024 +0000

    chore: classify `slow / slower` porting notes (#11084)
    
    Classifies by adding issue number #11083 to porting notes claiming anything semantically equivalent to:
    
    - "very **slow**; improve performance?"
    - "quite **slow**; improve performance?"
    - "`tactic" was **slow**"
    - "removed `attribute` because it caused extremely **slow** `tactic`"
    - "proof was rewritten, because it was too **slow**"
    - "doing this make things very **slow**"
    - "**slower** implementation"

[33mcommit 8f878f1cb7007460a5dd9f53a40482ec87146bf5[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Fri Mar 1 13:29:49 2024 +0000

    chore: classify `cannot automatically derive` porting notes (#11082)
    
    Classifies by adding issue number #11081 to porting notes claiming:
    
    > cannot automatically derive

[33mcommit 2a70ed260bba36967c134456c6fb81f22bda5535[m
Author: Joachim Breitner <mail@joachim-breitner.de>
Date:   Fri Mar 1 13:29:48 2024 +0000

    refactor: induction‚ÇÇ_symm: Be more explicit in the case variables (#11023)
    
    and in `setToL1_mono_left`, instantiate the induction theorem
    explicitly.
    
    In https://github.com/leanprover/lean4/pull/3505 I am fixing a big where
    `induction` will assume the wrong number of parameters for a case when
    there are let-bindings in the type involved. As part of this I am no
    longer reducing definitions when looking for `forall`s; this is arguably
    more predictable and more likely what the user wants.
    
    There are two breakages in mathlib due to this, and the fix can already
    be applied now.

[33mcommit 697da3ff006ae52cd96e4c22fdaeb01a2a6e2ea0[m
Author: Kevin Buzzard <k.buzzard@imperial.ac.uk>
Date:   Fri Mar 1 13:29:47 2024 +0000

    feat(FieldTheory/KrullTopology): topology on finite Galois group is discrete (#10841)
    
    From the FLT project.

[33mcommit 744792b43cbc7b3c5ec8f86518e1154e8a021b58[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Fri Mar 1 13:29:46 2024 +0000

    chore: split `MetricSpace/Baire` (#10648)
    
    * move definition to `Topology/Defs/Basic`;
    * move lemmas to `Topology/Baire/Lemmas`;
    * move instances to `Topology/Baire/CompleteMetrizable` and `Topology/Baire/LocallyCompactRegular`;
    * assume `[UniformSpace X] [IsCountablyGenerated (ùì§ X)]` instead of `[PseudoMetricSpace X]` in the 1st theorem.
    
    This way `Lemmas` file does not depend on analysis.

[33mcommit 9a944835f282ac07efc45ab302ecc616b79536d1[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Fri Mar 1 13:29:45 2024 +0000

    chore(Init/Fin): deprecate `Fin.eq_of_veq` and `Fin.veq_of_eq` (#10626)
    
    We have `Fin.eq_of_val_eq` and `Fin.val_eq_of_eq` in Lean core now.
    Also slightly shake the tree.

[33mcommit c50fed87e281c1346e396f038167c018533aa3e4[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Fri Mar 1 13:29:44 2024 +0000

    chore: move Nat.repr_length to Data.Nat.Digits (#10511)
    
    There's no need to have this result so early.
    
    No changes to the moved code.

[33mcommit 267bced6f7515592aaa7af66cb1bf024e2dfcd3e[m
Author: Riccardo Brasca <riccardo.brasca@gmail.com>
Date:   Fri Mar 1 13:29:43 2024 +0000

    feat: cyclotomic fields are totally complex (#10502)
    
    We prove that cyclotomic fields are totally complex.
    
    From flt-regular.

[33mcommit 12b19a27741e7a8688388cd813b1f20449f0dbcb[m
Author: Scott Carnahan <128885296+ScottCarnahan@users.noreply.github.com>
Date:   Fri Mar 1 13:29:42 2024 +0000

    feat(Data/Polynomial/Smeval): multiplicativity and composition for `Polynomial.smeval` (#10057)
    
    This PR adds multiplicativity and composition results for `Polynomial.smeval` in the power-associative algebra setting.

[33mcommit 9c3a83a811308ed237b68dab4332df96411b45fa[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Fri Mar 1 13:29:41 2024 +0000

    feat: interval version of parametric integral lemmas (#10004)
    
    Based on code from the sphere eversion project.
    
    
    
    Co-authored-by: David Loeffler <d.loeffler.01@cantab.net>

[33mcommit 9a32235886015e8cc7b78ea7224b43409e4103bc[m
Author: Jeremy Tan Jie Rui <reddeloostw@gmail.com>
Date:   Fri Mar 1 13:29:40 2024 +0000

    feat: Abel's limit theorem (#10000)
    
    From https://leanprover.zulipchat.com/#narrow/stream/217875-Is-there-code-for-X.3F/topic/Bounds.20on.20alternating.20convergent.20series/near/418770183

[33mcommit 57e3f1d70de8c527f082475aac50c3b40828a69a[m
Author: Arend Mellendijk <arend.mellendijk@gmail.com>
Date:   Fri Mar 1 13:29:39 2024 +0000

    feat: explicit logarithmic bounds on the harmonic numbers (#9984)
    
    Prove $\log(n+1) \le H_n \le 1 + \log(n)$ for all natural numbers $n$.
    
    There is an existing proof that $H_n$ is not an integer which uses p-adics. Since the new result uses some heavy machinery that is disjoint from the existing proof, the file is split into three parts to keep the dependencies lighter.
    
    See [zulip](https://leanprover.zulipchat.com/#narrow/stream/217875-Is-there-code-for-X.3F/topic/basic.20log.20bounds.20on.20harmonic.20sums)
    
    
    
    Co-authored-by: Arend Mellendijk <FLDutchmann@users.noreply.github.com>

[33mcommit 92c93d7cba80c7df3880b75af125a41fa6e598b6[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Fri Mar 1 12:29:27 2024 +0000

    chore: add missing `elab_as_elim` (#11061)
    
    Dependent induction did not support this attribute in Lean 3.
    
    A few downstream `apply`s change to `refine` as a result.
    A future PR could replace some of these with `induction`.

[33mcommit 79aeb7795667559ed3564ad8cc0841d064becd78[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Fri Mar 1 09:34:21 2024 +0000

    chore: backport a few misc changes from #11070 to master (#11079)
    
    A random collection of changes, backporting from the upcoming Lean bump.
    - squeeze one simp
    - backport one more simp change (which probably was missed in the previous backports)
    - rewrite the `field_simp` in SolutionOfCubic: with the upcoming Lean bump, this would become **very** slow
    
    Similar to #10996 and #11001.

[33mcommit ad0819184331f35289bb70650256049c5c9ec5d7[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Fri Mar 1 09:34:20 2024 +0000

    chore(Separation): rename some lemmas (#11054)
    
    Mathport chose wrong names for these constructors.

[33mcommit f56665db8177aa672797d9de630baacecadfcc7d[m
Author: Jz Pan <acme_pjz@hotmail.com>
Date:   Fri Mar 1 09:34:19 2024 +0000

    feat(FieldTheory/PurelyInseparable): some more results for purely inseparable extension (#10882)
    
    - `perfectClosure.perfect(Ring|Field)`: if `E` is a perfect field of characteristic `p`, then the (relative) perfect closure `perfectClosure F E` is perfect.
    - `Is[PurelyIn]separable.[fin][In]sepDegree_eq`: various degrees of a [purely in]separable extension
    - `IntermediateField.sepDegree_adjoin_eq_of_isAlgebraic_of_isPurelyInseparable[']`: if `K / E / F` is a field extension tower, such that `E / F` is purely inseparable, then for any subset `S` of `K` such that `F(S) / F` is algebraic, the `E(S) / E` and `F(S) / F` have the same separable degree.
    - `minpoly.map_eq_of_separable_of_isPurelyInseparable`: if `K / E / F` is a field extension tower, such that `E / F` is purely inseparable, then for any element `x` of `K` separable over `F`, it has the same minimal polynomials over `F` and over `E`.
    - `Polynomial.Separable.map_irreducible_of_isPurelyInseparable`: if `E / F` is a purely inseparable field extension, `f` is a separable irreducible polynomial over `F`, then it is also irreducible over `E`.

[33mcommit 7455834fd159cf6ed63b633c2a5249937a438afa[m
Author: Kevin Buzzard <k.buzzard@imperial.ac.uk>
Date:   Fri Mar 1 08:46:52 2024 +0000

    feat(GroupTheory/SpecificGroups/Cyclic): unique_zpow_zmod (#11016)
    
    Suggested in #6342 .

[33mcommit 4a174927f86f971be3d57067b928da7e418ec078[m
Author: Michael Stoll <Michael.Stoll@uni-bayreuth.de>
Date:   Fri Mar 1 07:18:31 2024 +0000

    chore(NumberTheory/LegendreSymbol/AddCharacter): weaken typeclass assumptions (#11049)
    
    This is an analogue of #11012. It weakens the type class assumptions in various definitions and statements about additive characters. Prompted by [this message on Zulip](https://leanprover.zulipchat.com/#narrow/stream/217875-Is-there-code-for-X.3F/topic/Multiplicative.20characters.20of.20finite.20groups/near/423755277).

[33mcommit c7394bfb27f466a0cd35d0003d4dba824b94b3d4[m
Author: Jz Pan <acme_pjz@hotmail.com>
Date:   Fri Mar 1 06:30:17 2024 +0000

    feat(RingTheory/UniqueFactorizationDomain): add `WfDvdMonoid.max_power_factor[']` and `multiplicity.finite_of_not_isUnit` (#11066)
    
    - makes `UniqueFactorizationMonoid.max_power_factor` obsolete
    - makes the proof of `multiplicity.finite_prime_left` trivial
    - relax the condition of `exists_reduced_fraction'`
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>

[33mcommit 2a0739561acdae879ca34df7b2d67e9db18a5bab[m
Author: Floris van Doorn <fpvdoorn@gmail.com>
Date:   Fri Mar 1 04:38:40 2024 +0000

    feat: allow adding extra lemmas to noncomm_ring tactic (#10804)

[33mcommit a424c0948fcba4ce6f56c32ac7070440373adf9a[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Thu Feb 29 21:30:27 2024 +0000

    feat: `IsTorsionFree M ‚Üî NoZeroSMulDivisors ‚Ñï M` (#10918)
    
    and some subgroup results.
    
    From PFR

[33mcommit 77166edfdc8d29eda9e977f19e720b7aac7435d1[m
Author: Jack Valmadre <jack.valmadre@gmail.com>
Date:   Thu Feb 29 18:56:13 2024 +0000

    feat: Add norm_iteratedFDeriv_prod_le using Sym (#10022)
    
    add (iterated) deriv for prod
    
    * Add `HasFDerivAt` + variants for `Finset.prod` (and `ContinuousMultilinearMap.mkPiAlgebra`)
    * Add missing `iteratedFDerivWithin` equivalents for zero, const (resolves a todo in `Analysis.Calculus.ContDiff.Basic`)
    * Add `iteratedFDeriv[Within]_sum` for symmetry
    * Add a couple of convenience lemmas for `Sym` and `Finset.{prod,sum}`

[33mcommit a98429836ee86c13f69f3dc458a1eac29d852dc4[m
Author: Markus Himmel <markus@himmel-villmar.de>
Date:   Thu Feb 29 18:30:39 2024 +0000

    feat: filtered category is finally small if there is a small weakly terminal set (#10949)

[33mcommit 64848f61be38941d8eee5bfb6b0a7971bc0ae424[m
Author: Floris van Doorn <fpvdoorn@gmail.com>
Date:   Thu Feb 29 17:22:05 2024 +0000

    add two to_additive name translations (#10831)
    
    * Remove manual translations that are now guessed correctly
    * Fix some names that were incorrectly guessed by humans (and in one case fix the multiplicative name). Add deprecations for all name changes.
    * Remove a couple manually additivized lemmas.

[33mcommit 3eced184108487d20a55293be4d94d7ff4ab2509[m
Author: Anne Baanen <vierkantor@vierkantor.com>
Date:   Thu Feb 29 15:38:07 2024 +0000

    fix(Data/Finset): don't show a warning if `proveFinsetNonempty` fails (#11072)
    
    The `proveFinsetNonempty` procedure uses aesop under the hood for solving a goal. If aesop fails, the procedure returns `none`. However, aesop itself also emits a warning, even if the surrounding code can catch the case where the procedure fails. So we tell aesop to not complain.
    
    Co-Authored-By: Ya√´l Dillies <yael.dillies@gmail.com>

[33mcommit 45041bba1b69b74f322443f6e238735155015187[m
Author: Blackfeather007 <2100017455@stu.pku.edu.cn>
Date:   Thu Feb 29 14:27:15 2024 +0000

    feat: Equivalent characterizations of lower- and upper-semicontinuous functions (#7851)
    
    We add `lowerSemicontinuousAt_iff_le_liminf`, `lowerSemicontinuous_iff_IsClosed_epigraph` and variants.
    
    
    
    Co-authored-by: Floris van Doorn <fpvdoorn@gmail.com>

[33mcommit 0aaf3be3e28ae3a74531f09a6744d36911c34ccc[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Thu Feb 29 13:07:22 2024 +0000

    doc(LinearAlgebra/PiTensorProduct): improve docstring for tprod notation (#11063)
    
    Also remove a TODO by @kmill; `tprod r fun i => f i` delaborates correctly now. `tprod R f` does not use notation, but this is no different to the behavior of `Finset.sum s f`.

[33mcommit 2353c4e34ff225a3890f76ab6315d76584255c93[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Thu Feb 29 12:38:36 2024 +0000

    fix(LinearAlgebra/TensorPower): correct notation precedence (#11062)
    
    This removes some ugly parens that were introduced during porting

[33mcommit 73d45f44c3ebcface215d09fafb2250674bc8fa9[m
Author: Antoine Chambert-Loir <antoine.chambert-loir@u-paris.fr>
Date:   Thu Feb 29 12:38:35 2024 +0000

    split power series in several files (#10866)
    
    This PR split the files devoted to power series (especially RingTheory/PowerSeries/Basic) into several ones:
    
    * RingTheory/MvPowerSeries/Basic - initial definitions (multivariate)
    * RingTheory/MvPowerSeries/Trunc - truncation
    * RingTheory/MvPowerSeries/Inverse - stuff pertaining to inverses
    
    * RingTheory/PowerSeries/Basic - initial definitions (univariate)
    * RingTheory/PowerSeries/Trunc - truncation
    * RingTheory/PowerSeries/Inverse - stuff pertaining to inverses
    * RingTheory/PowerSeries/Order - stuff pertaining to order
    
    it remains to adjust the other files (PowerSeries/Derivative and PowerSeries/WellKnown)
    
    
    
    Co-authored-by: Antoine Chambert-Loir <antoine.chambert-loir@math.univ-paris-diderot.fr>
    Co-authored-by: Johan Commelin <johan@commelin.net>
    Co-authored-by: faenuccio <filippo.nuccio@univ-st-etienne.fr>

[33mcommit d1e0bc5256cbad4f9f3520868768b82f31020881[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Thu Feb 29 12:10:12 2024 +0000

    chore: classify `broken proof was` porting notes (#11040)
    
    Classifies by adding issue number #11039 to porting notes claiming:
    
    > broken proof was

[33mcommit a4e76ac40ab7d2a0d4a210c0d94e930b96d43fb1[m
Author: smorel394 <smorel@math.princeton.edu>
Date:   Thu Feb 29 11:10:04 2024 +0000

    refactor(LinearAlgebra/ExteriorAlgebra/{Basic,Grading}): add a definition and notation for the exterior powers of a module (#10744)
    
    This is split off from PR #10654 (that actually proves some properties of the exterior powers). It introduces the reducible definition `exteriorPower R n M` for the `n`th exterior power of the `R`-module `M`; this is of type `Submodule R (ExteriorAlgebra R M)` and defined as `LinearMap.range (ExteriorAlgebra.Œπ R : M ‚Üí‚Çó[R] ExteriorAlgebra R M) ^ n`.
    It also introduces the notation `Œõ[R]^n M` for `exteriorPower R n M`.
    
    Note: for a reason that I don't understand, Lean becomes unable to synthesize the `SetLike.GradedMonoid` instance on `fun (i : ‚Ñï) ‚Ü¶ (Œõ[R]^i) M`, so I added it manually in `ExteriorAlgebra/Graded.lean`. I am far from sure that this is the correct solution.
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>
    Co-authored-by: Richard Copley <buster@buster.me.uk>

[33mcommit 925c6abe8832cfa7c561feeb1cf1e9cd283c6271[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Thu Feb 29 10:41:24 2024 +0000

    feat: `positivity` extensions for `Finset.card`, `Fintype.card` (#10610)
    
    Leverage the new `proveFinsetNonempty` prover to write a `positivity` extension about `Finset.card`. Also write the corresponding `positivity` extension for `Fintype.card`.
    
    I put the two new extensions in a new file rather than `Tactic.Positivity.Basic` or `Data.Fintype.Card` because the former doesn't import any finiteness and the latter doesn't import linearly ordered fields. But I don't really mind where the extensions end up.
    
    From LeanAPAP
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>
    Co-authored-by: Alex J Best <alex.j.best@gmail.com>

[33mcommit 2f2096e5a76a4e8f1c13e8376fc6919c0fba435f[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Thu Feb 29 09:37:35 2024 +0000

    chore(Data/Finset/Lattice): better docs for `gcongr` lemmas (#11067)
    
    I accidentally merged #9520
    before pushing these changes requested by @Vierkantor

[33mcommit 51b9fc49c5cfdb0cf9dced8e2531fa01c3adb692[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Thu Feb 29 09:37:34 2024 +0000

    chore: Generalise big operators lemmas to `PosMulMono` (#10875)
    
    Action a TODO

[33mcommit 10672055d9336ee0553536a7061115d8c447dda3[m
Author: David Loeffler <d.loeffler.01@cantab.net>
Date:   Thu Feb 29 08:53:34 2024 +0000

    chore(Topology/Algebra/InfiniteSum): split up large file (#11050)
    
    Split up `Mathlib.Topology.Algebra.InfiniteSum.Basic` (1600 lines) into smaller files.

[33mcommit 7ca43cbd6aa34058a1afad8e47190af3ec1f9bdb[m[33m ([m[1;33mtag: v4.6.0[m[33m)[m
Author: Scott Morrison <scott@tqft.net>
Date:   Thu Feb 29 02:46:33 2024 +0000

    chore: bump toolchain to v4.6.0 (#11065)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 13e13156623cf482880fa6c4cf42fe20c78cd5f3[m
Author: Yuma Mizuno <mizuno.y.aj@gmail.com>
Date:   Thu Feb 29 02:01:04 2024 +0000

    feat(CategoryTheory/Monoidal): redefine `tensorLeft` by using whiskering (#10898)
    
    Extracted from #6307

[33mcommit efdfa67fdfa798e11a5726b43041df8dc725e10f[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Thu Feb 29 00:55:44 2024 +0000

    feat(Finset): add `gcongr` attributes (#9520)
    
    
    
    Co-authored-by: Johan Commelin <johan@commelin.net>

[33mcommit d8924e0a9f1c85212a88ef0d4966d9bb5c70502b[m
Author: Bergschaf <christian.k@netcom-mail.de>
Date:   Wed Feb 28 23:16:06 2024 +0000

    feat(LinearAlgebra/Matrix/Adjugate): adjugate_fin_three, adjugate_fin_three_of (#11005)
    
    Add `adjugate_fin_three` and `adjugate_fin_three_of` theorems, in the same style as `adjugate_fin_two`.
    
    
    
    
    Co-authored-by: Bergschaf <86738237+Bergschaf@users.noreply.github.com>

[33mcommit eaf18cb1e3b76a33d2cb40752a4857edffc7fa8b[m
Author: Jujian Zhang <jujian.zhang1998@outlook.com>
Date:   Wed Feb 28 22:21:23 2024 +0000

    feat : rework enough-injectiveness proof of groups using character module (#8559)
    
    For $R$-modules $M$ and $D$ where $D$ is injective, we can consider the dual module $M^\star := \mathrm{Hom}_R(M, D)$.
    $(\cdot^\star)$ can define a contravariant functor $R$-mod to $R$-mod by $L \mapsto L^\star$ where $L^\star f = f \circ L$ where $L \in \mathrm{Hom}_R(M, N)$ and $f \in N^\star$. This functor sends monomorphisms to epimorphisms.
    
    For an abelian group $A$, it is useful to consider its character module in the unit rational circle. This construction appears in proof of enough-injectiveness of groups and it can be shown that a module is flat if and only if its character module is injective, [reference](https://www.cambridge.org/core/journals/canadian-mathematical-bulletin/article/module-is-flat-if-and-only-if-its-character-module-is-injective/8D9669F28AC4DE35A1D65EA864F9B5DE). Hence we use Baer to relate ideals.
    
    Also refactored enough-injectiveness of abelian groups. The refactor is not a separated PR because construction of character module needs some result from `GroupCat/Injective.lean` file.
    
    
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>

[33mcommit aa178a855c47c99e856b978e63fadec2f697b33d[m
Author: Bergschaf <christian.k@netcom-mail.de>
Date:   Wed Feb 28 21:39:38 2024 +0000

    refactor(LinearAlgebra/Matrix/Adjugate): shorten proof of adjugate_fin_two (#11051)

[33mcommit dce76308bda485f6fdea022b6d23911669a38d70[m[33m ([m[1;31morigin/deprecated_syntax[m[33m)[m
Author: Markus Himmel <markus@himmel-villmar.de>
Date:   Wed Feb 28 20:02:35 2024 +0000

    feat(CategoryTheory): the recognition theorem for ind-objects (#10973)

[33mcommit 449a4a9b1f60534d5b369625de6347db35182ba2[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Wed Feb 28 17:59:47 2024 +0000

    feat: `‚Ñï`, `‚Ñ§` and `‚Ñö‚â•0` are star-ordered rings (#10633)
    
    Also golf the existing instance for `‚Ñö` and rename `Rat.num_nonneg_iff_zero_le` to `Rat.num_nonneg`, `Rat.num_pos_iff_pos` to `Rat.num_pos`.
    
    From LeanAPAP

[33mcommit a6f770740f4c07b236c336115f4de99c28cd8910[m
Author: David Renshaw <dwrenshaw@gmail.com>
Date:   Wed Feb 28 16:59:05 2024 +0000

    chore: use lt_add_one to simplify proof of exists_abs_lt (#11046)

[33mcommit 9c5ebcdde2976a27eaaea7817d716c686ebf5387[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Wed Feb 28 16:59:04 2024 +0000

    chore: classify `broken dot notation` porting notes (#11038)
    
    Classifies by adding issue number #11036 to porting notes claiming:
    
    > broken dot notation

[33mcommit 7bd999cc300f0542b24b869a4024bdacdec7063a[m
Author: Kevin Buzzard <k.buzzard@imperial.ac.uk>
Date:   Wed Feb 28 16:59:03 2024 +0000

    feat(Data/ZMod/Basic): add some ringEquivCongr API (#11018)
    
    These seem to me to be the bare minimum.

[33mcommit 0bbdc65469c2a743d4926b83efeeffc3b6e0e078[m
Author: Oliver Butterley <oliver.butterley@gmail.com>
Date:   Wed Feb 28 16:59:02 2024 +0000

    feat(Mathlib.Topology.Compactness.Compact): add sInter version of Cantor's intersection theorem (#10956)
    
    The iInter version of Cantor's intersection theorem is already present: `IsCompact.nonempty_iInter_of_directed_nonempty_compact_closed`.
    The proof of the added sInter version takes advantage of the iInter version.
    
    Much of the addition due to [conversation with Sebastien Gouezel on Zulip](https://leanprover.zulipchat.com/#narrow/stream/217875-Is-there-code-for-X.3F/topic/.E2.9C.94.20Obtain.20sInter.20version.20of.20an.20iInter.20theorem).
    
    [![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)

[33mcommit 74460c6f0599c512c06a12703056d269cd7576f0[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Wed Feb 28 16:59:01 2024 +0000

    feat(SetTheory): Upper bound for games (#10566)
    
    Partially forward-port https://github.com/leanprover-community/mathlib/pull/15260

[33mcommit bc3809376b3f9c3615015b833ebd7acc4151a3fe[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Wed Feb 28 16:06:14 2024 +0000

    chore: classify `was decide!` porting notes (#11044)
    
    Classifies by adding issue number #11043 to porting notes claiming:
    
    > was `decide!`

[33mcommit 295fa27650b1a1236b031e85939c61e1fdacb794[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Wed Feb 28 16:06:13 2024 +0000

    chore: classify `broken ext` porting notes (#11042)
    
    Classifies by adding issue number #11041 to porting notes claiming:
    
    > broken ext

[33mcommit cd23c6694a5ff528ab78c090d2013ea378c2f43b[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Wed Feb 28 15:10:53 2024 +0000

    chore: remove stream-of-conciousness syntax for `obtain` (#11045)
    
    This covers many instances, but is not exhaustive.
    
    Independently of whether that syntax should be avoided (similar to #10534), I think all these changes are small improvements.

[33mcommit 866dfe56cc0541fbe0331ecacd1687bb99172f39[m
Author: David Renshaw <dwrenshaw@gmail.com>
Date:   Wed Feb 28 15:10:52 2024 +0000

    refactor: use smul_algebraMap to simply proof of FixedPoints.intermediateField.algebraMap_mem' (#11025)
    
    Uses `smul_algebraMap` to simplify the proof of `FixedPoints.intermediateField.algebraMap_mem'`.
    
    Amusingly, the current tactic-mode proof is very nearly identical to the body of `smul_algebraMap`:
    https://github.com/leanprover-community/mathlib4/blob/bb9eaa6b041bc19ca8615a24fa48e463c672c150/Mathlib/Algebra/Algebra/Basic.lean#L403-L405
    
    After making this simplificiation, I observe the time reported by `trace.profiler` to drop from 0.13 to 0.12 seconds.

[33mcommit 1896df51d7fcb38df7c21160fb9facd882fcd6b8[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Wed Feb 28 14:01:33 2024 +0000

    chore: remove porting notes involving the ematch attribute (#11037)
    
    `ematch` is not coming back (and was already completely unused for years in Lean 3).

[33mcommit 30f062740f16bb285c62657dba39fa627693e242[m
Author: awueth <d.loeffler.01@cantab.net>
Date:   Wed Feb 28 12:44:59 2024 +0000

    feat: Laplacian matrix of a simple graph (#8594)
    
    Contains the definition of the graph laplacian and proofs of some its properties, including that it is positive semidefinite and that the dimension of its nullspace equals the number of connected components of the graph.
    
    
    
    Co-authored-by: awueth <83429722+awueth@users.noreply.github.com>

[33mcommit a66bd9db425cb81d51358ebcd50c5df521650d10[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Wed Feb 28 10:54:01 2024 +0000

    chore(Order/Lattice): Resolve porting notes (#11034)
    
    * The `dsimp` issue has been resolved.
    * I knew that the lemmas provable by `simp` were provable by `simp` in Lean 3, but the simp nf linter was more lax. Now there's definitely no need to tag them.
    * `ematch` is not coming back (and was already completely unused for years in Lean 3).
    * Unification has changed in Lean 4, so it's really unsurprising that we need to provide an extra argument to `sup_ind`. It's not expectable that this will ever change, neither is it necessary.
    * Dot notation on `Function.update` is still broken. This is the last remaining porting note.

[33mcommit 4900a2c5b000492d1d0c6730f26d77a570b1a66c[m
Author: David Renshaw <dwrenshaw@gmail.com>
Date:   Wed Feb 28 10:53:59 2024 +0000

    chore: use mk_pow to simply proof of frobenius_mk (#11024)
    
    Uses `mk_pow`, which was recently introduced in #10282, to simplify the proof of `frobenius_mk`.
    
    After this change, I observe the time reported by `trace.profiler` to drop from 0.10 to 0.035 seconds on this theorem.

[33mcommit 02e43f82922fe7eb2be80a61ad922c92790862e0[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Wed Feb 28 10:53:58 2024 +0000

    chore: remove AlgHom.coeOutRingHom (#11011)
    
    It is redundant with the coercion for RingHomClass.toRingHom.

[33mcommit 9420a7db93404fce191238b32fd9023f4976fc92[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Wed Feb 28 10:53:57 2024 +0000

    chore: remove duplicated namespaces from instances (#10899)

[33mcommit 33245d8c78aef252a336c113b33e678184c9974c[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Wed Feb 28 10:53:56 2024 +0000

     fix: formatting in three authors lines (#10877)
    
    And remove the associated style exceptions.

[33mcommit e69cb643a7e87acc632c5a1b00bfc79bce2453e4[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Wed Feb 28 09:50:09 2024 +0000

    feat: Unions and intersections indexed by `Finset.sigma` (#10851)
    
    Followup to #8964
    
    From PFR

[33mcommit f5e8fa18d5a94db4a55b0ff392e1041baf731c4f[m
Author: Jujian Zhang <jujian.zhang1998@outlook.com>
Date:   Wed Feb 28 08:33:01 2024 +0000

    feat(LinearAlgebra/TensorProduct): add `TensorProduct.map‚ÇÇ` (#10986)

[33mcommit d6136815c5e53b39c5a8ec57b075705a9ccbe4ff[m
Author: Antoine Chambert-Loir <antoine.chambert-loir@u-paris.fr>
Date:   Wed Feb 28 07:39:30 2024 +0000

    feat(Mathlib/RingTheory/Ideal/QuotientOperations): First Isomorphism Theorem for algebras (#11027)
    
    We add the First Isomorphism Theorem for algebras.
    (only the surjective version was present in mathlib).
    We also adjust the docstring on top of the file.
    
    
    
    Co-authored-by: Antoine Chambert-Loir <antoine.chambert-loir@math.univ-paris-diderot.fr>

[33mcommit e059984c052670ceca4ee8ce26b6cd310f903c81[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Wed Feb 28 07:04:44 2024 +0000

    feat: the Fourier transform is self-adjoint (#10833)
    
    Also extend the notation `ùìï` for the Fourier transform to inner product spaces, introduce a notation `ùìï‚Åª` for the inverse Fourier transform, and generalize a few results from the real line to inner product spaces.

[33mcommit ae9f685e8bfb15fef2a2ee46b979596b211507b9[m
Author: Anne Baanen <vierkantor@vierkantor.com>
Date:   Wed Feb 28 00:59:53 2024 +0000

    chore(Algebra/BigOperators): reduce imports for `Multiset.prod` (#10987)
    
    I noticed that `BigOperators/Multiset/Basic.lean` transitively imports a lot of files, and it sits on the longest pole. If we move one lemma to another file, we can severely restrict the amount of imports required.
    
    Looks like the extra imports that `shake` didn't notice were due to instances being filled in that we didn't actually need.
    
    
    
    Co-authored-by: Anne Baanen <Vierkantor@users.noreply.github.com>
    Co-authored-by: Jeremy Tan Jie Rui <reddeloostw@gmail.com>
    Co-authored-by: Parcly Taxel <reddeloostw@gmail.com>

[33mcommit d67e17585de263f600b4c1e3a27e0e4da9bff6ad[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Wed Feb 28 00:16:46 2024 +0000

    feat: `MeasureSpace` instance on `unitInterval` (#10452)
    
    Also shows that it is a probability measure, and that `symm` is measurable.
    
    This deprecates two duplicate theorems.
    
    [Zulip](https://leanprover.zulipchat.com/#narrow/stream/217875-Is-there-code-for-X.3F/topic/MeasureSpace.20instance.20on.20unitInterval/near/420921313)

[33mcommit fca284d15f5270b98dcdae0cb0099a1fb44ec08f[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Tue Feb 27 23:07:13 2024 +0000

    feat(Topology/Category): `EffectiveEpi` iff `QuotientMap` in `TopCat` (#10993)
    
    
    
    Co-authored-by: faenuccio <filippo.nuccio@univ-st-etienne.fr>

[33mcommit 5d73e334b0e1f20d16a4b627c65a6a5e33da001e[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Feb 27 23:07:13 2024 +0000

    chore(Cauchy): drop `Nonempty`/`Inhabited` assumptions (#10871)
    
    Use `haveI` to drop unneeded `Nonempty`/`Inhabited` assumptions.

[33mcommit 65d37dc6412f280a667037cd83fc1f1423cb14cb[m
Author: Jujian Zhang <jujian.zhang1998@outlook.com>
Date:   Tue Feb 27 22:35:23 2024 +0000

    feat(Algebra/Module/CharacterModule): definition of character module (#10767)
    
    For an `R`-module `M`, its character module is defined as the group homorphisms from `M` to the unit rational circle where the `R`-module structure is given by `rf(m) = f(rm)`. Let us denote the character module by `M*`
    
    Then each linear map `f : A -> B` gives a linear map `f*` from `B*` to `A*` by composition.
    When `f` is injective, `f*` is surjective.
    
    There is a natural isomorphism between `Hom(A, B*)` and `(A ‚äó B)*`
    
    
    
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>

[33mcommit bb9eaa6b041bc19ca8615a24fa48e463c672c150[m
Author: Matthew Robert Ballard <matt@mrb.email>
Date:   Tue Feb 27 20:35:52 2024 +0000

    chore(AlgebraicGeometry.StructureSheaf): remove `erw`  (#11022)
    
    We replace a `erw` chain with a single `rw` and `exact`. Readability is also arguably improved.

[33mcommit e10b4f54f2ffff4fb951874aeb2064b5ec360d45[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Tue Feb 27 19:35:53 2024 +0000

    feat: abstract continuous functional calculus for unital algebras (#5750)
    
    This PR introduces two classes `ContinuousFunctionalCalculus` and `UniqueContinuousFunctionalCalculus`. The former provides a collection of star algebra homomoprhisms from the continuous functions on the spectrum of an element `a : A`, into the algebra `A` itself, subject to the constraint that `a` satisfies a certain predicate `p : A ‚Üí Prop`. These morphisms are continuous (even closed embeddings) and send the identity function to `a` itself, and moreover, the spectrum of the image of an element is its range.
    
    The latter class says that there is at most one such star algebra homomorphism which is continuous and maps the identity to `a`; in practice, this is a consequence of the Stone-Weierstrass theorem, but we create a separate class because we will also want a version for `‚Ñù‚â•0`-valued functions. This latter class is the key to establish the compositional property of the continuous functional calculus, `cfc_comp : cfc a (g ‚àò f) = cfc (cfc a f) g`. This is one of the key properties of the continuous functional calculus that makes it useful.

[33mcommit 3a74a20c4e5f8076ff261161a4264c60ac5ee900[m
Author: Kevin Buzzard <k.buzzard@imperial.ac.uk>
Date:   Tue Feb 27 18:23:20 2024 +0000

    feat(Algebra/GroupPower/Basic): add zpow_eq_zpow_zmod (#11009)
    
    To match `pow_eq_pow_mod` for monoids.

[33mcommit d552538041ae17e4388fda1c5beb821b5bfd77d1[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Tue Feb 27 17:09:55 2024 +0000

    fix: correct statement of `zpow_ofNat` and `ofNat_zsmul` (#10969)
    
    Previously these were syntactically identical to the corresponding `zpow_coe_nat` and `coe_nat_zsmul` lemmas, now they are about `OfNat.ofNat`.
    
    Unfortunately, almost every call site uses the `ofNat` name to refer to `Nat.cast`, so the downstream proofs had to be adjusted too.

[33mcommit e43a9e458a176df246f63be69f9766c5a4ddf2b5[m
Author: Michael Stoll <Michael.Stoll@uni-bayreuth.de>
Date:   Tue Feb 27 16:43:50 2024 +0000

    feat(NumberTheory/LegendreSymbol/MulCharacter): weaken assumptions (#11012)
    
    This PR weakens the type class assumptions on some results about multiplicative characters  (from assuming the domain is a commutative ring to only requiring it is a commutative monoid).
    
    See [here](https://leanprover.zulipchat.com/#narrow/stream/217875-Is-there-code-for-X.3F/topic/Multiplicative.20characters.20of.20finite.20groups/near/423605701) on Zulip.
    
    
    
    Co-authored-by: Michael Stoll <99838730+MichaelStollBayreuth@users.noreply.github.com>

[33mcommit 740f664fcd33fc666977955f420bec14a00ff775[m
Author: David Loeffler <d.loeffler.01@cantab.net>
Date:   Tue Feb 27 15:33:03 2024 +0000

    feat(MeasureTheory/Integral): hasSum_integral_of_summable_integral_norm (#10614)
    
    A lemma on interchanging sums and integrals (pretty much equivalent to`integral_tsum`, but without explicitly mentioning `ENNReals`, `lintegrals` etc). Also, correct a random capitalisation glitch I spotted in the process.

[33mcommit b15d9b9e380aad8c0a4cb0eb1925280a1f3e0de5[m
Author: Filippo A. E. Nuccio <filippo.nuccio@univ-st-etienne.fr>
Date:   Tue Feb 27 13:37:09 2024 +0000

    feat(Mathlib/Analysis/SpecificLimits/Basic.lean): add iff versions of lemmas about x^n going  to 0 iff x < 1 (#11008)
    
    Add the two iff versions (for NNReals and ENNReals) of the statement that $x^n$ tends to $0$ if and only if $x<1$.
    
    
    
    Co-authored-by: Jeremy Tan Jie Rui <reddeloostw@gmail.com>

[33mcommit 08a9eb380d09279fdf7e7169574485bee9fed61d[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Tue Feb 27 13:37:08 2024 +0000

    chore: avoid Coe.coe in eleven_dvd_of_palindrome (#11006)

[33mcommit b640e0bb8dfab12d96adcaa7c1289af772482e71[m
Author: Michael Stoll <Michael.Stoll@uni-bayreuth.de>
Date:   Tue Feb 27 13:37:07 2024 +0000

    feat(NumberTheory/LSeries/*): add material on convergence (#10728)
    
    This continues a series of PRs on L-series.
    
    Here we add `ArithmeticFunction.LSeriesHasSum` (in `NumberTheory.LSeries.Basic`) and `ArithmeticFunction.abscissaOfAbsConv` (in a new file `NumberTheory.LSeries.Convergence`), together with some results about these notions.
    
    See [here](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/L-series/near/422275501) on Zulip.

[33mcommit c8ec7abb6d9f6165e7b9a83d645e6681600c4296[m
Author: Jujian Zhang <jujian.zhang1998@outlook.com>
Date:   Tue Feb 27 13:37:06 2024 +0000

    feat(AlgebraicGeometry/ProjectiveSpectrum/Scheme): `toSpec` and `fromSpec` compose to identity (#9601)
    
    
    
    Co-authored-by: Jeremy Tan Jie Rui <reddeloostw@gmail.com>

[33mcommit 64f31cfd8eec09bfe7c63263d4556f61a87e3974[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Tue Feb 27 12:29:07 2024 +0000

    chore: cleanup DecidableEq instances for WithTop/Bot (#11010)
    
    Avoid relying on the autogenerated name, and remove duplicate instances.

[33mcommit 5bd4e6631ac675bfb63ab821d9823f1f3a1f1a2c[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Feb 27 11:16:43 2024 +0000

    chore(Set,Finset): add `gcongr` attributes (#11004)

[33mcommit 341794fa8b5fb5c2f73fb362a288b4f5490009d5[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Tue Feb 27 10:52:05 2024 +0000

    chore: make natDegree_sub_C rw_search test more robust (#11007)
    
    Sometimes it comes up with rw [@natDegree_sub, @sub_eq_neg_add, @natDegree_add_C, @natDegree_neg] instead.

[33mcommit d9589c141f7be50fb517744b67832424defd19cc[m
Author: Scott Morrison <scott@tqft.net>
Date:   Tue Feb 27 08:54:21 2024 +0000

    chore: more backporting of simp changes from #10995 (#11001)
    
    
    
    Co-authored-by: Patrick Massot <patrickmassot@free.fr>
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 27710436fae2f9592622b55a0239611ce4807a9e[m
Author: Jujian Zhang <jujian.zhang1998@outlook.com>
Date:   Tue Feb 27 08:54:20 2024 +0000

    feat(Algebra/Module/LinearMap/Basic): module structures of (semi)-linear maps over `DomMulAct` of a ring (#10766)
    
    
    
    
    splitted from #8559
    
    
    These are written by @alreadydone
    
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 6b17b3a912b05e5bcdae222f19696f63db578e6b[m
Author: Rida <mridahamadani@gmail.com>
Date:   Tue Feb 27 07:41:20 2024 +0000

    feat(Combinatorics/SimpleGraph/AdjMatrix): prove equation relating `adjMatrix` with its `compl` (#10992)
    
    This is an equation that is used in many graph theory proofs.  In particular, I want to use it in the proof of the Hoffman-Singleton theorem.
    
    
    
    Co-authored-by: Rida <106540880+Rida-Hamadani@users.noreply.github.com>
    Co-authored-by: Jeremy Tan Jie Rui <reddeloostw@gmail.com>

[33mcommit ea286e3c85c493c1613f87b2292fa1738b0bd677[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Tue Feb 27 07:41:19 2024 +0000

    chore: classify `need dsimp only` porting notes (#10972)
    
    Classifies by adding issue number #10971 to porting notes claiming:
    
    > need `dsimp only`.

[33mcommit c70ed9576b86034cdff5c5799adb2f90c0f558ce[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Tue Feb 27 07:41:18 2024 +0000

    chore: classify `simp cannot prove` porting notes (#10960)
    
    Classifies by adding issue number #10959 porting notes claiming anything semantically equivalent to:
    
    - "`simp` cannot prove this"
    - "`simp` used to be able to close this goal"
    - "`simp` can't handle this"
    - "`simp` used to work here"

[33mcommit 1ea834419aff54c7dbb6b11f2fadc0287d685dbf[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Tue Feb 27 07:41:17 2024 +0000

    chore: classify `added lemma` porting notes (#10958)
    
    Classifies by adding issue number #10756 to porting notes claiming `added lemma`.

[33mcommit 51d070d77dffdb0fdc343e2a38913e3d7513d47f[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Feb 27 07:41:16 2024 +0000

    chore(Topology/Sequences): split file (#10943)
    
    I want to have access to the definitions much earlier.
    Also, most of the file doesn't need metric spaces at all.

[33mcommit d0946f02184b7d0399b664b9bef6b919ea4c2ffa[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Tue Feb 27 07:41:15 2024 +0000

    chore: classify `was tidy` porting notes (#10937)
    
    Classifies by adding issue number (#10936) to porting notes claiming anything semantically equivalent to:
    
    - "used to be `tidy`"
    - "was `tidy `"

[33mcommit 87798abd756bc2dfc1963644a0fd93b3e33f6bd0[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Tue Feb 27 07:41:14 2024 +0000

    chore: classify `used to be dsimp` porting notes (#10935)
    
    Classifies by adding issue number (#10934) to porting notes claiming anything semantically equivalent to:
    
    - "used to be `dsimp`"
    - "was `dsimp`"

[33mcommit d8fa853a3ec32bd830aa849c6cbff549d3d59507[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Tue Feb 27 07:41:13 2024 +0000

    chore: classify `simp can prove` porting notes (#10930)
    
    Classify by adding issue number (#10618) to porting notes claiming anything semantically equivalent to
    - "`simp` can prove this"
    - "`simp` can simplify this`"
    - "was `@[simp]`, now can be proved by `simp`"
    - "was `@[simp]`, but `simp` can prove it"
    - "removed simp attribute as the equality can already be obtained by `simp`"
    - "`simp` can already prove this"
    - "`simp` already proves this"
    - "`simp` can prove these"

[33mcommit df231e4c4e0c8a54b790a29fd062ed867e31f3df[m
Author: Joseph Myers <jsm@polyomino.org.uk>
Date:   Tue Feb 27 07:41:12 2024 +0000

    feat(Logic/Equiv/Defs): composing an `EquivLike` with its `symm` (#10911)
    
    If you convert an `EquivLike` to an `Equiv` in order to use `symm`, you can get combinations of the coercion of that `EquivLike` direct to a function, and the coercion of that `symm` to a function, which should simplify but `simp` fails to do anything with.  Add four `simp` lemmas to enable `simp` to act on such combinations.
    
    From AperiodicMonotilesLean.

[33mcommit 27ac37c55123a74113885bd7e88783aff4b730f8[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Tue Feb 27 07:41:11 2024 +0000

    chore: update `style-exceptions.txt` (#10876)
    
    - remove style warnings that have been fixed
    - adjust lines for files that have been shrunk.
    Thanks to everybody who contributed by splitting large files!
    
    All changes are cherry-picked from running `./script/update-style-exceptions.sh` locally.

[33mcommit c19d45ab87116863b90f5fcff3b7b0db7bfe4887[m
Author: David Loeffler <d.loeffler.01@cantab.net>
Date:   Tue Feb 27 06:49:36 2024 +0000

    feat(Data/Sign): some more API for `SignType` (#10920)
    
    Since `Real.sign` etc are being deprecated in favour of the generic `SignType.sign`, this PR adds some more API for the latter: in particular, compatibility of the canonical maps in and out of `SignType` with maps satisfying suitable assumptions. This is a prerequisite for #10011.

[33mcommit 2414ba09683d020daab208e4a9c29f15772910fa[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Feb 27 06:49:35 2024 +0000

    chore(GroupTheory/Perm): drop `DecidableEq`, `Fintype` -> `Finite` (#10917)

[33mcommit 3c1a8148b215fbd2919275adf4ad17c3b1d6e7d6[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Tue Feb 27 06:22:00 2024 +0000

    feat(CategoryTheory/Sites): coherent and regular topologies respect equivalences of categories (#10013)
    
    This PR transports the coherent and regular topologies along equivalences of categories, and provides API for checking the sheaf condition on one of the equivalent defining sites.

[33mcommit 38bce757295c41e657f36f7f66f8254fd4a4697e[m
Author: Patrick Massot <patrickmassot@free.fr>
Date:   Tue Feb 27 04:55:38 2024 +0000

    chore: prepare Lean version bump with explicit simp (#10999)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 957ff6947f1c305e16f89305f41c48ddc67b3e7d[m
Author: Scott Morrison <scott@tqft.net>
Date:   Tue Feb 27 02:54:55 2024 +0000

    chore: backport upcoming changes to simp in Counterexamples + Archive (#10996)
    
    Please see https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/Help.20with.20.60nightly-testing.60/near/423522417
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 7aeba51a8ee90d2ac46d07ed53f0d220757e0679[m
Author: David Loeffler <d.loeffler.01@cantab.net>
Date:   Tue Feb 27 00:53:35 2024 +0000

    chore(Analysis/NormedSpace): split up OperatorNorm.lean (#10990)
    
    Split the 2300-line behemoth `OperatorNorm.lean` into 8 smaller files, of which the largest is 600 lines.

[33mcommit 0cf504dea55e8c8f9f1edf05915928c6e2287141[m
Author: Riccardo Brasca <riccardo.brasca@gmail.com>
Date:   Mon Feb 26 23:59:38 2024 +0000

    feat: generalize tensor product constructions to semirings (#10988)
    
    The current proofs already work for semirings.

[33mcommit cda31e7edb548b514c1de6b438a50dc772376254[m
Author: Yuma Mizuno <mizuno.y.aj@gmail.com>
Date:   Mon Feb 26 23:59:37 2024 +0000

    refactor(CategoryTheory/Monoidal/Rigid): use monoidalComp in the proofs (#10326)
    
    Similar to #10078

[33mcommit 162edaa41a7d44fe4e9bf80e7896211942822d71[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Mon Feb 26 23:59:36 2024 +0000

    feat: lemmas about germs in topological spaces (#9747)
    
    From sphere-eversion; I'm just upstreaming it.
    
    Co-authored by: @PatrickMassot (original author)

[33mcommit f633abad127a73791964221dae315a77b730a463[m
Author: Martin Dvo≈ô√°k <martin.dvorak@matfyz.cz>
Date:   Mon Feb 26 22:59:41 2024 +0000

    feat: fractional polymorphisms for VCSP (#7894)
    
    
    
    Co-authored-by: madvorak <dvorakmartinbridge@seznam.cz>

[33mcommit 214935bb32f81f43760aa47091d79147aea689f2[m
Author: Jujian Zhang <jujian.zhang1998@outlook.com>
Date:   Mon Feb 26 22:11:18 2024 +0000

    feat(Algebra/Module/Injective) : If $M$ is an injective $R$-module in some universe, it is also injective in higher universes (#8905)
    
    This is because injective modules are Baer, and Baer modules do not concern universe levels
    
    
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>

[33mcommit 4a0fa672fbbec2fbacccc17ded8647258361fda4[m
Author: Martin Dvo≈ô√°k <martin.dvorak@matfyz.cz>
Date:   Mon Feb 26 22:11:16 2024 +0000

    feat: VCSP examples added (#7893)

[33mcommit ad43b38a19477c0ec52cd2b3d778440c46859fee[m
Author: damiano <adomani@gmail.com>
Date:   Mon Feb 26 13:55:47 2024 +0000

    chore: use set and manually rewrite (#10980)
    
    This is an attempt to fix `Mathlib/Algebra/ContinuedFractions/Computation/CorrectnessTerminating.lean`.
    
    I replaced some `let`s by `set`s and used rewrites when `field_simp` seemed to unfold the lets.
    
    [Zulip discussion](https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/Help.20with.20.60nightly-testing.60)

[33mcommit c8bd1526ad5d918c301b21352da030a97cab03f3[m
Author: Geoffrey Irving <irving@naml.us>
Date:   Mon Feb 26 09:39:29 2024 +0000

    feat: Add `Set.subset_setOf` and `Set.setOf_subset` lemmas (#10812)
    
    Expressions like `s ‚äÜ setOf p` often appear unintentionally; these replace them with clean `‚àÄ` statements.
    
    These aren't registered as `@[simp]`, not least because doing so breaks a few things in mathlib, and it's not clear one always wants to do these.

[33mcommit fc8f41751c2eaedca152a4ab3b78f6540bdcfa7b[m
Author: R√©my Degenne <Remydegenne@gmail.com>
Date:   Mon Feb 26 08:00:11 2024 +0000

    feat: measurable parametric Stieltjes functions (#10952)
    
    We provide tools to build a measurable function `Œ± ‚Üí StieltjesFunction` with limits 0 at -‚àû and 1 at +‚àû for all `a : Œ±` from a measurable function `f : Œ± ‚Üí ‚Ñö ‚Üí ‚Ñù`. These measurable parametric Stieltjes functions are cumulative distribution functions (CDF) of Markov kernels.
    The reason for going through `‚Ñö` instead of defining directly a Stieltjes function is that since `‚Ñö` is countable, building a measurable function is easier and we can obtain properties of the form `‚àÄ·µê (a : Œ±) ‚àÇŒº, ‚àÄ (q : ‚Ñö), ...` (for some measure `Œº` on `Œ±`) by proving the weaker `‚àÄ (q : ‚Ñö), ‚àÄ·µê (a : Œ±) ‚àÇŒº, ...`.
    
    TODO: I will later refactor the CondCdf file to use this file. This will also be used in another new file to build CDFs of kernels, towards proving disintegration of kernels.
    
    
    
    Co-authored-by: R√©my Degenne <remydegenne@gmail.com>

[33mcommit e903c3fc8ef8b337628c4c5e5f545828d7c63499[m
Author: R√©my Degenne <Remydegenne@gmail.com>
Date:   Mon Feb 26 07:32:33 2024 +0000

    feat: lemmas about `kernel.withDensity` (#10799)
    
    Add a few simp lemmas about withDensity of constant functions 1 and 0, and the 3 more interesting lemmas
    - `withDensity_add_right`: `withDensity Œ∫ (f + g) = withDensity Œ∫ f + withDensity Œ∫ g`
    - `withDensity_sub_add_cancel`: `withDensity Œ∫ (fun a x ‚Ü¶ f a x - g a x) + withDensity Œ∫ g = withDensity Œ∫ f`
    - `withDensity_mul`: `withDensity Œ∫ (fun a x ‚Ü¶ f a x * g a x) = withDensity (withDensity Œ∫ fun a x ‚Ü¶ f a x) g`
    
    
    
    Co-authored-by: R√©my Degenne <remydegenne@gmail.com>

[33mcommit f13499e1a66dcaa68fdb0f5475e9445b79014c0e[m
Author: R√©my Degenne <Remydegenne@gmail.com>
Date:   Mon Feb 26 06:46:40 2024 +0000

    feat: isCoboundedUnder_le lemmas (#10946)

[33mcommit 42c0da3789fb78b087c5eba91438f358b2306f90[m
Author: Hunter Monroe <github.com@huntermonroe.com>
Date:   Mon Feb 26 04:29:35 2024 +0000

    feat(Logic): Godel Beta Function (toward first incompleteness theorem) (#8887)
    
    This file proves G√∂del's Beta Function Lemma, used to prove the First Incompleteness Theorem. This code is a step towards eventually including a proof of G√∂del's First Incompleteness Theorem
    and other key results from the repository https://github.com/iehality/lean4-logic.
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>
    Co-authored-by: jeh <hodellurt@gmail.com>
    Co-authored-by: Palalansouk√Æ <palalansouki@gmail.com>
    Co-authored-by: palalansouki <palalansouki@gmail.com>

[33mcommit 7eae15ac94b4e35036a3472a650d426fd6c80c40[m[33m ([m[1;31morigin/hmonroe_arith[m[33m)[m
Author: damiano <adomani@gmail.com>
Date:   Mon Feb 26 01:48:01 2024 +0000

    chore: format to avoid multiple goals (#10979)
    
    As requested on [Zulip](https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/Help.20with.20.60nightly-testing.60/near/423307621)

[33mcommit fb56e88b13bf555b061c89fda92f89b9fb24aca1[m
Author: Mario Carneiro <mcarneir@andrew.cmu.edu>
Date:   Mon Feb 26 01:48:00 2024 +0000

    chore: cleanup proof of `Nat.Partrec.Code.rec_prim` (#10978)
    
    This is in preparation for a fix to be performed on `nightly-testing`. It restores the proof structure to something more similar to the original lean 3 proof.
    
    
    
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>

[33mcommit 8db59278a649d0162b0571ee8d33882c08c49cc5[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Mon Feb 26 01:47:59 2024 +0000

    style: fix typos in porting notes (#10931)

[33mcommit 9f926b1a999ef8bd44030534c9e5c6a4ba7e6897[m
Author: Christopher Hoskin <christopher.hoskin@gmail.com>
Date:   Mon Feb 26 00:38:02 2024 +0000

    refactor(LinearAlgebra/QuadraticForm): Replace `BilinForm` with a scalar valued bi `LinearMap` (#10238)
    
    Following on from #10097, which converted the companion of a quadratic form with a bilinear map, this PR replaces a number of results about quadratic forms and bilinear forms with results about quadratic forms and scalar valued bilinear maps. The long term aim is to be able to consider quadratic maps.
    
    The main change is to `LinearAlgebra/QuadraticForm/Basic`, but this necessitates changes throughout `LinearAlgebra/QuadraticForm/`. Minor changes are also required elsewhere:
    
    - `LinearAlgebra/CliffordAlgebra/`
    - `LinearAlgebra/Matrix/PosDef`
    - `LinearAlgebra/SesquilinearForm`
    - A number of additional results about tensor products and linear maps are also required.
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>
    Co-authored-by: Christopher Hoskin <christopher.hoskin@overleaf.com>

[33mcommit bbe9baad3447f315cf9d772bd3f7a1b7ba55a62d[m
Author: Timo Carlin-Burns <timorcb@gmail.com>
Date:   Mon Feb 26 00:38:01 2024 +0000

    chore: add lemmas for nat literals corresponding to lemmas for nat casts (#8006)
    
    I loogled for every occurrence of `"cast", Nat` and `"natCast"` and where the casted nat was `n`, and made sure there were corresponding `@[simp]` lemmas for `0`, `1`, and `OfNat.ofNat n`. This is necessary in general for simp confluence. Example:
    
    ```lean
    import Mathlib
    
    variable {Œ± : Type*} [LinearOrderedRing Œ±] (m n : ‚Ñï) [m.AtLeastTwo] [n.AtLeastTwo]
    
    example : ((OfNat.ofNat m : ‚Ñï) : Œ±) ‚â§ ((OfNat.ofNat n : ‚Ñï) : Œ±) ‚Üî (OfNat.ofNat m : ‚Ñï) ‚â§ (OfNat.ofNat n : ‚Ñï) := by
      simp only [Nat.cast_le] -- this `@[simp]` lemma can apply
    
    example : ((OfNat.ofNat m : ‚Ñï) : Œ±) ‚â§ ((OfNat.ofNat n : ‚Ñï) : Œ±) ‚Üî (OfNat.ofNat m : Œ±) ‚â§ (OfNat.ofNat n : Œ±) := by
      simp only [Nat.cast_ofNat] -- and so can this one
    
    example : (OfNat.ofNat m : Œ±) ‚â§ (OfNat.ofNat n : Œ±) ‚Üî (OfNat.ofNat m : ‚Ñï) ‚â§ (OfNat.ofNat n : ‚Ñï) := by
      simp -- fails! `simp` doesn't have a lemma to bridge their results. confluence issue.
    ```
    
    As far as I know, the only file this PR leaves with `ofNat` gaps is `PartENat.lean`. #8002 is addressing that file in parallel.
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 40aaad72aeb3fee15a91d28ba4d3d24fd4e4a9d9[m
Author: Richard Copley <buster@buster.me.uk>
Date:   Sun Feb 25 23:46:32 2024 +0000

    chore: generalize more `DirectSum` results to avoid negation (#10965)
    
    Generalize `Basis.tensorProduct` and `instance Module.Free.tensor` to CommSemiring and AddCommMonoid, as a follow-up to #10828.
    
    Plus style fixes:
    * tidy up LinearAlgebra.DirectSum.Finsupp.lean:
      * delete unused `universe` declaration
      * delete duplicate `open TensorProduct`
      * delete redundant `noncomputable` annotation and associated comment (due to `noncomputable section` in the same file)
      * use `variable`
    * delete "typeclass reminders" in "Module.Flat.iff_rTensor_injective'" (no longer needed)
    * whitespace fixes
    * simplify file structure (`section`/`namespace`/`open`/`variable`)
    
    
    
    Co-authored-by: Richard Copley <rcopley@gmail.com>

[33mcommit adc83f436ff738adc2790fb2d9aebf5abd03c6d5[m
Author: Markus Himmel <markus@himmel-villmar.de>
Date:   Sun Feb 25 22:36:14 2024 +0000

    feat: the definition of an ind-object (#10963)

[33mcommit 61dc2d0874d02ad1d8b9b5f37db12231a9094a4c[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sun Feb 25 22:36:13 2024 +0000

    chore(Algebra/Order/Group): move `PositiveCone`s to a new file (#10868)
    
    Nothing else in the library (but a similar file about rings)
    depend on these constructors.

[33mcommit 3fe3c0442f8113fb69f8fe66757cc56effcbda35[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Sun Feb 25 22:07:54 2024 +0000

    feat(CategoryTheory): the quotient category is linear (#10887)
    
    Under suitable assumptions on a congruence `r` on a `R`-linear category `C`, it is shown in this PR that `Quotient r` is also a `R`-linear category.
    
    (This shall be applied to the homotopy category of homological complexes in a future PR.)
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit 2f370aeb650a1e4f8a20369b9133d920ec654ca7[m
Author: R√©my Degenne <Remydegenne@gmail.com>
Date:   Sun Feb 25 21:34:25 2024 +0000

    feat: IsFiniteMeasure and IsProbabilityMeasure lemmas for the measure associated with a Stieltjes function (#10961)

[33mcommit 2e5e165007b86e39fe56842d7668e24f133cb3fc[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Sun Feb 25 21:06:54 2024 +0000

    feat(CategoryTheory/GradedObject): the single functor (#10700)
    
    This PR defines the functor `GradedObject.single : C ‚•§ GradedObject J C` which sends an object `X : C` to the graded object which is `X` in degree `j` and the initial object of `C` in other degrees.
    
    This shall be used in the construction of the unit of the tensor product on `I`-graded objects (when `I` is an additive monoid).
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit ca54d66e2ed18151269929a025664fe572f25fc4[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Sun Feb 25 21:06:53 2024 +0000

    feat(CategoryTheory/Localization): main results on left calculus of fractions (#10607)
    
    In this PR, given a class of morphisms W : MorphismProperty C which admits a left calculus of fractions, we obtain that if `L : C ‚•§ D` is a localization functor for W, then morphisms in `D` can be computed using left fractions, and we show that the functor `L.mapArrow : Arrow C ‚•§ Arrow D` is essentially surjective.
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit da1fa193c256c3e7e4932b870109712276717a8f[m
Author: Timo Carlin-Burns <timorcb@gmail.com>
Date:   Sun Feb 25 19:55:45 2024 +0000

    chore: add instance from `Nat.AtLeastTwo n` to `NeZero n` (#10964)
    
    This PR cleans up some lemmas where we're taking named instance parameters `[h : Nat.AtLeastTwo n]` and manually proving inequalities like `0 < n` from `h` by adding an instance of `NeZero n` from `Nat.AtLeastTwo n` as well as a couple of other helper lemmas.
    
    This removes `Nat.AtLeastTwo.ne_zero`, as `NeZero.ne_zero` replaces it.

[33mcommit 6c70bee7e93ac1ca3220ac9741c970e36207a2f9[m
Author: Joseph Myers <jsm@polyomino.org.uk>
Date:   Sun Feb 25 19:55:44 2024 +0000

    feat: `Pairwise.range_pairwise` (#10957)
    
    Add another lemma relating `_root_.Pairwise` and `Set.Pairwise`:
    
    ```lean
    lemma Pairwise.range_pairwise (hr : Pairwise (r on f)) : (Set.range f).Pairwise r := by
    ```
    
    From AperiodicMonotilesLean.
    
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 89415b3911b02465645869fe39936a0d05d0f5fe[m
Author: Markus Himmel <markus@himmel-villmar.de>
Date:   Sun Feb 25 18:50:54 2024 +0000

    feat: `small_iUnion` and `small_sUnion` (#10921)
    
    Also moves the other results about `Small` on sets to their own file.

[33mcommit dc217ae3e8ed621e5102fb6e47b076cf39c48a09[m
Author: Kevin Buzzard <k.buzzard@imperial.ac.uk>
Date:   Sun Feb 25 18:26:44 2024 +0000

    fix: typo (#10966)
    
    
    This was accidentally mangled in #10900.

[33mcommit a62da66e7a0150f1918d350530848bd81c57acb8[m
Author: Scott Morrison <scott@tqft.net>
Date:   Sun Feb 25 13:35:59 2024 +0000

    chore: bump dependencies (#10954)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>
    Co-authored-by: Riccardo Brasca <riccardo.brasca@gmail.com>

[33mcommit a3692d9199dfe905fc6e0edbd130c374ec097634[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Sun Feb 25 13:35:58 2024 +0000

    fix(Algebra/DirectSum/Ring): correct mis-ported lemma names (#10953)
    
    
    
    Co-authored-by: timotree3 <timorcb@gmail.com>

[33mcommit 23adc28995cdeaa0c9c5e7505cb5c518b4c40835[m
Author: Scott Morrison <scott@tqft.net>
Date:   Sun Feb 25 13:35:57 2024 +0000

    chore: fix port of join_filter_isEmpty_eq_false (#10951)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 68312f01664c9c18a100bdc39c0d1885ebf62db2[m
Author: Joseph Myers <jsm@polyomino.org.uk>
Date:   Sun Feb 25 13:35:56 2024 +0000

    feat: `Subsingleton.pairwise` (#10938)
    
    We have `Set.Subsingleton.pairwise`, but not, it seems, the corresponding lemma for `Pairwise` as applied to a relation on a subsingleton type rather than a subsingleton set.
    
    From AperiodicMonotilesLean.

[33mcommit 2599c3bb27cc06d5953c5453e04141e16bdfd66f[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Sun Feb 25 13:35:55 2024 +0000

    chore: classify `removed @[nolint has_nonempty_instance]` porting notes (#10929)
    
    Classifies by adding issue number (#10927) to porting notes claiming `removed @[nolint has_nonempty_instance]`.

[33mcommit 46974e92276c335b41277addf83df55f8c080702[m
Author: Scott Morrison <scott@tqft.net>
Date:   Sun Feb 25 12:34:02 2024 +0000

    chore: bump aesop; update syntax (#10955)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 46be27702c6ec64a8ca8839e40beaa40ebef746c[m
Author: Matthew Robert Ballard <matt@mrb.email>
Date:   Sun Feb 25 10:47:30 2024 +0000

    chore: split `Order`ed instances for subobjects into separate files  (#10900)
    
    Moving these to separate files should make typeclass synthesis less expensive. Additionally two of them are quite long and this shrinks them slightly.
    
    This handles:
    * `Submonoid`
    * `Subgroup`
    * `Subsemiring`
    * `Subring`
    * `Subfield`
    * `Submodule`
    * `Subalgebra`
    
    This also moves `Units.posSubgroup` into its own file.
    
    The copyright headers are from:
    * https://github.com/leanprover-community/mathlib/pull/6489
    * https://github.com/leanprover-community/mathlib/pull/8466
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 46beab5f2093934dde29c984278fa1859e4d53e0[m
Author: Scott Morrison <scott@tqft.net>
Date:   Sun Feb 25 10:18:20 2024 +0000

    chore: omit a proof in CategoryTheory/Limits/Cones that aesop now does (#10947)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 4cf5bbbf701396435b56f9309c24d523466edc7c[m
Author: Matthew Robert Ballard <matt@mrb.email>
Date:   Sun Feb 25 09:00:18 2024 +0000

    chore(Measure.MeasureSpace): clean up uses of `@` (#10932)
    
    We eliminate all possible uses of `@`'s either through deletion or replacement with an explicit argument. A comment about a diamond is slightly clarified.
    
    
    
    Co-authored-by: Kevin Buzzard <k.buzzard@imperial.ac.uk>

[33mcommit 350561867855cfbe239f6941a2619d382ffb0f33[m
Author: Mario Carneiro <mcarneir@andrew.cmu.edu>
Date:   Sun Feb 25 05:29:45 2024 +0000

    feat: breadcrumb path for `assert_not_exists` (#10940)
    
    As [requested on Zulip](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/assert_not_exists/near/423181469).
    
    
    
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>
    Co-authored-by: Scott Morrison <scott@tqft.net>

[33mcommit a36350f2089912de4d11fbccb92d7575bf9f28e0[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sun Feb 25 01:09:03 2024 +0000

    refactor(UniformConvergenceTopology): redefine using `UniformOnFun` (#10873)

[33mcommit c8eaa1893fab14d6ab1c334076463659ac8ab829[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sat Feb 24 23:45:35 2024 +0000

    chore(NormedSpace/Basic): rename type variables (#10863)
    
    Also use `letI` for theorems about non-canonical instances.

[33mcommit 29c854d2e07d6c04770b09ee089cb92559479e24[m
Author: Matthew Robert Ballard <matt@mrb.email>
Date:   Sat Feb 24 22:44:03 2024 +0000

    chore(diamonds): appropriate transparency levels for diamond checks (#10910)
    
    Currently, we have multiple "no-diamond" tests of the form
    ```lean
    example : x = y := rfl
    ```
    where `X` and `Y` are instances of some `class`. The problem is that since `simp` and type class synthesis operate at `reducible_and_instances` transparency this check means little.
    
    We went through all the mentions of diamonds and either added `with_reducible_and_instancse` or added a reference to the issue #10906.
    
    
    
    Co-authored-by: Kevin Buzzard <k.buzzard@imperial.ac.uk>

[33mcommit 13ae635bfb3585e0a585075722f8d3a3109dfdbc[m
Author: Yuma Mizuno <mizuno.y.aj@gmail.com>
Date:   Sat Feb 24 21:34:32 2024 +0000

    feat(CategoryTheory/Monoidal/Mon_): add simp lemmas (#10905)

[33mcommit 4dd3701e9f9104c88fe7eabd39428515184ee167[m
Author: Markus Himmel <markus@himmel-villmar.de>
Date:   Sat Feb 24 20:05:52 2024 +0000

    feat: full subcategory for a small set is essentially small (#10922)

[33mcommit 6af752e0797f7a8ca9ef05fb5e7378d627cd264f[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Sat Feb 24 18:40:20 2024 +0000

    chore: classify `added lemma` porting notes (#10926)

[33mcommit 1d96f99124e228dfa48c41ec604c030d520a2c04[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Sat Feb 24 18:40:19 2024 +0000

    chore: classify `added instance` porting notes (#10925)
    
    Classifies by adding issue number (#10754) to porting notes claiming `added instance`.

[33mcommit fd1b0477aa4d31e0380e3bbcaa38dd5f3e11f59e[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Sat Feb 24 18:05:17 2024 +0000

    feat: Add `Module.End.baseChangeHom` (#10928)
    
    This is a more-bundled version of `LinearMap.baseChangeHom`

[33mcommit cf963957b32ffc7edc3fa85e09f1f1cd8b646291[m
Author: Kevin Buzzard <k.buzzard@imperial.ac.uk>
Date:   Sat Feb 24 17:22:55 2024 +0000

    fix(RingTheory/RootsOfUnity/Basic): generalise some results to monoids (#10605)
    
    These results are all proved for commutative semirings but all work for commutative monoids.

[33mcommit d3dbfd96d551bb78ae75db33df18a386bda9b81b[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sat Feb 24 15:31:46 2024 +0000

    chore(MeasureTheory): move Measure/OuterMeasure to `OuterMeasure/Basic` (#10916)
    
    I'm going to generalize some constructions
    from measures to outer measures and this file is already too large.

[33mcommit a25ebf08c9bed61f72f9e2117b4676a6d5d25c38[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sat Feb 24 12:33:40 2024 +0000

    chore(StdBasis): `Fintype` -> `Finite` (#10914)

[33mcommit d6542aa57e8ddf3e66d1330309fb75bf5dfff4d3[m
Author: Thomas Browning <tb65536@uw.edu>
Date:   Sat Feb 24 12:06:11 2024 +0000

    feat(GroupTheory/Perm/ClosureSwap): A transitive permutation group generated by transpositions must be the whole symmetric group (#10035)
    
    This PR proves that a transitive permutation group generated by transpositions must be the whole symmetric group.
    
    
    
    Co-authored-by: Thomas Browning <tb65536@users.noreply.github.com>

[33mcommit 558a4f941e501db4139535f6d3791930afeeab98[m
Author: Markus Himmel <markus@himmel-villmar.de>
Date:   Sat Feb 24 11:39:38 2024 +0000

    feat: final functors with filtered codomain (#10892)

[33mcommit 1caa43c0b095a87565f91d2a550ee109d45a1fb5[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sat Feb 24 11:15:36 2024 +0000

    chore(CategoryTheory/Limits): `Fintype` -> `Finite` (#10915)

[33mcommit 5ac4fc9295e041af2849679d416f9744393386f4[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Sat Feb 24 01:16:02 2024 +0000

    chore: rename arguments to `PiTensorProduct` induction principles (#10904)
    
    This looks much nicer in the `induction` tactic than `C1` and `Cp`, as
    ```lean
    induction a using PiTensorProduct.induction_on with
    | smul_tprod r a => sorry
    | add x y hx hy => sorry
    ```

[33mcommit ee8d1db069c2e5c59018a1bb3b5131f06bfe1566[m
Author: Ali Ramsey <k.buzzard@imperial.ac.uk>
Date:   Sat Feb 24 00:47:42 2024 +0000

    feat(RingTheory): hopf algebra definition (#10079)
    
    Add definition of a Hopf algebra. For FLT.
    
    
    
    Co-authored-by: al-ramsey <s2158261@ed.ac.uk>
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 9a891c304c6282917dcbbd32291112e09514b7e8[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Sat Feb 24 00:18:17 2024 +0000

    chore(CategoryTheory): remove an unnecessary instance and golf a proof in the effective epi file (#10734)
    
    We remove an instance saying that `Sigma.desc`¬†is an `Epi`, because we have the stronger instance that it's an `EffectiveEpi`.
    
    We also give the corresponding result using general colimit API, and prove the old one using that.

[33mcommit 3c38b0159fcda7b59d1262c4fd44c0f7301ab5b8[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Fri Feb 23 23:50:15 2024 +0000

    chore(CategoryTheory/Sites): golf and tidy up proof that extensive+regular generate coherent (#10903)

[33mcommit c951d81465b64a569fe4b06bea9f27521037bdbc[m
Author: Jz Pan <acme_pjz@hotmail.com>
Date:   Fri Feb 23 22:33:03 2024 +0000

    feat(FieldTheory/Adjoin): add `IntermediateField.[fin]rank_bot'` (#10896)

[33mcommit 0fb7df8dc452c880ae1150a56e183c47996542be[m
Author: Jz Pan <acme_pjz@hotmail.com>
Date:   Fri Feb 23 22:33:02 2024 +0000

    feat(Algebra/Associated): add `Associated.map` (#10895)

[33mcommit 64d2ea853040021f9b6e5ef406626ccca9cb303e[m
Author: Markus Himmel <markus@himmel-villmar.de>
Date:   Fri Feb 23 22:33:01 2024 +0000

    feat: push forward `FinallySmall` along a final functor (#10894)

[33mcommit 10079c6d809346addac5c4809ee9157a303e0434[m
Author: Markus Himmel <markus@himmel-villmar.de>
Date:   Fri Feb 23 22:33:00 2024 +0000

    feat: final functors with filtered domain (#10720)

[33mcommit fec1a6461080dda51209582f0b3bf59c652585b6[m
Author: Wen Yang <yang-wen@139.com>
Date:   Fri Feb 23 22:32:59 2024 +0000

    feat(LinearAlgebra/Matrix): define projective special linear group (#7791)
    
    
    
    
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>
    Co-authored-by: Ya√´l Dillies <yael.dillies@gmail.com>

[33mcommit 0ed4b45cc7cd67709d553090d748d3b8ed237d19[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Fri Feb 23 22:00:23 2024 +0000

    chore(DFinsupp/Order): drop a `Decidable` assumption (#10870)

[33mcommit 0b055722a8a116f95dd0d19cb09098562d7926e8[m
Author: Markus Himmel <markus@himmel-villmar.de>
Date:   Fri Feb 23 22:00:22 2024 +0000

    feat: another characterization of filtered categories in terms of type-valued limits (#10665)

[33mcommit 4d0e638765203196f9becb1c52a94b0a39b9e1ee[m
Author: David Kurniadi Angdinata <dka31@cantab.ac.uk>
Date:   Fri Feb 23 22:00:21 2024 +0000

    feat(AlgebraicGeometry/EllipticCurve/Projective): implement equations and nonsingularity for projective coordinates (#9416)
    
    Define a projective point representative over a ring `R` as the type `Fin 3 -> R`, and its equivalence class `PointClass` as a quotient by the usual scaling relation. Define the analogous `equation` and `nonsingular` predicates on `Fin 3 -> F` over a field `F`, and lift `nonsingular` to `PointClass`. This also has minimal API (e.g. it's missing many of the `equation` lemmas) as most computations should ideally be done using the affine API.
    
    This is the first in a series of four PRs leading to #8485

[33mcommit 11b3632558b8a2ff787540a2f2aca62ed2f1f2aa[m
Author: Jz Pan <acme_pjz@hotmail.com>
Date:   Fri Feb 23 21:19:46 2024 +0000

    feat(FieldTheory/Separable): add result on `Associated` and `Polynomial.Separable` (#10897)
    
    ... which states that if two polynomials are associated, then¬†one is separable if and only if another one is. Also a separable polynomial multiplied by a unit is also separable.

[33mcommit 33d32d5d544017007ffceff424e673cfe11d6ee9[m
Author: Shad Amethyst <adrien.burgun@orange.fr>
Date:   Fri Feb 23 19:51:25 2024 +0000

    feat: Small lemmas around |a - b| and Int.natAbs (a - b) (#10027)
    
    Proves the following statements:
    - if `0 ‚â§ a ‚â§ n` and `0 ‚â§ b ‚â§ n`, then `|a - b| ‚â§ n` (similarly with `|a - b| < n`)
    - `0 < |a - b|` iff `a ‚â† b`
    
    
    
    Co-authored-by: Ya√´l Dillies <yael.dillies@gmail.com>

[33mcommit 800df68e5eef9123a0233d85b5124c72051cacbc[m
Author: David Kurniadi Angdinata <dka31@cantab.ac.uk>
Date:   Fri Feb 23 18:48:10 2024 +0000

    feat(AlgebraicGeometry/EllipticCurve/Jacobian): implement equations and nonsingularity for Jacobian coordinates (#9432)
    
    Define a Jacobian point representative over a ring `R` as the type `Fin 3 -> R`, and its equivalence class `PointClass` as a quotient by the usual weighted scaling relation. Define the analogous `equation` and `nonsingular` predicates on `Fin 3 -> F` over a field `F`, and lift `nonsingular` to `PointClass`. This also has minimal API (e.g. it's missing many of the `equation` lemmas) as most computations should ideally be done using the affine API.
    
    This is the first in a series of four PRs leading to #9405 and is analogous to #9416

[33mcommit 45fab6c6c4c307196408a1b61c69f1ae8178b3a2[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Fri Feb 23 18:09:26 2024 +0000

    chore: classify `added instance` porting notes (#10884)
    
    Classifies by adding issue number (#10754) to porting notes claiming `added instance`.

[33mcommit 29cdb910f17cb20bbc169d781dd53e478997c8f4[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Fri Feb 23 17:24:57 2024 +0000

    feat(Algebra/Homology): the total complex functor (#10711)
    
    In this PR, the construction of the total complex of a bicomplex is extended to a functor `HomologicalComplex‚ÇÇ.totalFunctor : HomologicalComplex‚ÇÇ C c‚ÇÅ c‚ÇÇ ‚•§ HomologicalComplex C c‚ÇÅ‚ÇÇ`.

[33mcommit b86c0d7ac4f9c39c0cb53c67964b7793d89bd5dc[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Fri Feb 23 16:04:41 2024 +0000

    chore: classify `added proof` porting notes (#10889)
    
    Classifies by adding issue number (#10888) to porting notes claiming `added proof`.

[33mcommit 1bd0ec543de3b7c03ed62631ba061f2113507a10[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Fri Feb 23 16:04:40 2024 +0000

    chore: classify `added lemma` porting notes (#10885)
    
    Classifies by adding number (#10756) to porting notes claiming `added lemma`.

[33mcommit 98d430d2f31051a1be28d2577983bd7c47b52786[m
Author: damiano <adomani@gmail.com>
Date:   Fri Feb 23 16:04:39 2024 +0000

    fix: add `&` in front of `before, after` (#10881)
    
    Use `&"before"` and `&"after"` in `ExtendDocs`.
    
    [Zulip discussion](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/.60after.60.20is.20a.20reserved.20token)

[33mcommit 86b84c52880e799449226c39569a69a0483b7646[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Fri Feb 23 14:58:32 2024 +0000

    style: reduce spacing variation in "porting note" comments (#10886)
    
    In this pull request, I have systematically eliminated the leading whitespace preceding the colon (`:`) within all unlabelled or unclassified porting notes. This adjustment facilitates a more efficient review process for the remaining notes by ensuring no entries are overlooked due to formatting inconsistencies.

[33mcommit f5e69ecacbe618607a2f1607d93d6938964d245c[m
Author: R√©my Degenne <Remydegenne@gmail.com>
Date:   Fri Feb 23 13:15:41 2024 +0000

    feat: add `measurableSet_tendsto_nhds` (#10146)
    
    Add `measurableSet_tendsto`: the set of points for which a measurable sequence of functions converges to a given filter is measurable.
    
    
    
    Co-authored-by: R√©my Degenne <remydegenne@gmail.com>

[33mcommit 1afb2fb367016e634ac19ab1bb806260fddf0978[m
Author: Shad Amethyst <adrien.burgun@orange.fr>
Date:   Fri Feb 23 11:29:50 2024 +0000

    feat(GroupTheory/Exponent): lemmas around Monoid.exponent and Subgroup/Submonoid (#10598)
    
    Proves some helpful properties of `Monoid.exponent` on `Submonoid G` and `Subgroup G`:
    - the exponent of a group is equal to 1 iff the monoid is trivial (previously only the reverse implication was proven)
    - the exponent of `G` divides the exponent of `H` if there exists a multiplication-preserving injection from `G` to `H`
    - `Monoid.exponent G = Monoid.exponent H` if `G ‚âÉ* H`
    - `Monoid.exponent ‚ä§ = Monoid.exponent G`
    - `g ^ Monoid.exponent H = 1` if `g ‚àà H`
    - generalizes `one_lt_exponent` to `LeftCancelMonoid`

[33mcommit 496a4b4889288185bc341e9733d274a7e9d9c8ca[m
Author: Matthew Robert Ballard <matt@mrb.email>
Date:   Fri Feb 23 11:29:49 2024 +0000

    chore(Order.Grade): protect GradedOrder.grade (#10558)
    
    In #10496, a better fix was suggested in the comments by @Ruben-VandeVelde: make `GradedOrder.grade` `protected` to freely use `grade` for `_root_.grade`. This implements that fix.

[33mcommit 23cc9c41bdb450d913a889c0e00cb96ed95c426e[m
Author: Xavier Roblot <46200072+xroblot@users.noreply.github.com>
Date:   Fri Feb 23 11:29:47 2024 +0000

    feat: Proof of Hermite theorem on number fields of bounded discriminant (#10030)
    
    Let `N` be an integer.  Then there are only finitely many number fields (in some fixed extension of `‚Ñö`) of discriminant bounded in absolute value by `N`.

[33mcommit 3c307701fa7e9acbdc0680d7f3b9c9fed9081740[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Fri Feb 23 10:47:10 2024 +0000

    chore(Analysis/NormedSpace/LinearIsometry): Rename instances (#10847)
    
    All the autogenerated instance names here were very long, and Junyan recently linked one of these to a newcomer.

[33mcommit 36892106064555c85a0bbf805c5520a0b765b7b9[m
Author: damiano <adomani@gmail.com>
Date:   Fri Feb 23 08:58:59 2024 +0000

    chore: `mathlib3` to `mathlib` (#10872)
    
    I just noticed this reference to `mathlib3` and updated it.

[33mcommit 3fd653ca4bfdd1eed263f843e04a722d6cd601c4[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Fri Feb 23 02:47:12 2024 +0000

    chore: generalize typeclasses for `exp` on `DualNumber` (#10865)

[33mcommit 79866cea848feea75d371cd163e358a15461c3fe[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Fri Feb 23 02:03:39 2024 +0000

    feat: between star ordered rings, star-preserving ring homomorphisms preserve order (#10563)

[33mcommit 9e2d51752895ec60d7d99ff7a20e378fee071549[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Fri Feb 23 00:32:14 2024 +0000

    fix(Analysis/Normed/Group): make instance helpers reducible (#10726)
    
    [Zulip thread](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/defeq.20of.20.60NormedAddCommGroup.20.E2.84.82.60/near/422248635)
    
    This slightly simplifies two downstream proofs, as a bonus.
    
    
    
    Co-authored-by: Matthew Ballard <matt@mrb.email>

[33mcommit 73c76f614d96f888329a7b9665ac16f3845db0b5[m
Author: Xavier Xarles <xavier.xarles@uab.cat>
Date:   Fri Feb 23 00:32:14 2024 +0000

    feat: IsUnit if exists both inverses (#10719)
    
    Added one theorem
    
    
    
    Co-authored-by: Xavier Xarles <56635243+XavierXarles@users.noreply.github.com>
    Co-authored-by: adomani <adomani@gmail.com>
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit ad2c78f569f9e62d14cf6502e91c0b896056a6cd[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Fri Feb 23 00:32:13 2024 +0000

    refactor(Data/Finsupp): Make `Finsupp.filter` computable (#8979)
    
    This doesn't have any significant downstream fallout, and removes some subsingleton elimination from one or two proofs.
    
    This enables some trivial computations on factorizations, eg finding the odd prime factors:
    ```lean
    /-- info: fun‚ÇÄ | 3 => 2 | 5 => 1 -/
    #guard_msgs in
    #eval (Nat.factorization 720).filter Odd
    ```
    
    [Zulip thread](https://leanprover.zulipchat.com/#narrow/stream/144837-PR-reviews/topic/.238979.20making.20Finsupp.2Efilter.20computable/near/420898226)

[33mcommit f44237be424bbb54953c6470e55eb96029920f21[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Thu Feb 22 23:46:30 2024 +0000

    chore(NoncommPiCoprod): drop some `DecidableEq` assumptions (#10862)
    
    Use `letI := Classical.decEq Œπ`
    to make Lean use the classical instance
    instead of the one in the `variable`s.

[33mcommit e9e590d6c8ac700344aad38f47e84b8bf1cbcf57[m
Author: Antoine Chambert-Loir <antoine.chambert-loir@u-paris.fr>
Date:   Thu Feb 22 22:58:19 2024 +0000

    feat: generalize direct sum results to avoid negation (#10828)
    
    Three files are modified, where the hypotheses are relaxed from `Ring` or `CommRing` to `Semiring` or `CommSemiring`, and `AddCommGroup` to `AddCommMonoid`.
    Besides this, no definition is changed, and for one proof in `RingTheory.Flat.Basic`, I needed to add an instance (`letI`‚Ä¶) in the proof.
    (Everything pertains to direct sums of modules.)
    
    
    
    Co-authored-by: Antoine Chambert-Loir <antoine.chambert-loir@math.univ-paris-diderot.fr>
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 50bf7913bc560663fb253f4ca8b788ac2759505c[m
Author: Geoffrey Irving <irving@naml.us>
Date:   Thu Feb 22 22:14:28 2024 +0000

    feat: Complex `exp`, `log`, and `cpow` are analytic (#10811)
    
    These are all immediate from differentiability.
    
    We also record several rewrite lemmas for switching between analyticity and differentiability.  These are immediate from existing theorems, but as far as I can tell don't yet exist as iffs.

[33mcommit 10dce3722cfc7ee7db25a3113905c53e20eaabdc[m
Author: Arend Mellendijk <arend.mellendijk@gmail.com>
Date:   Thu Feb 22 20:18:22 2024 +0000

    feat: `arith_mult`: an `aesop` tactic for proving `IsMultiplicative` statements (#9310)
    
    Add a tactic that proves multiplicativity of arithmetic functions using Aesop by applying structural lemmas, akin to the `continuity` and `measurability` tactics.
    
    
    
    Co-authored-by: Arend Mellendijk <FLDutchmann@users.noreply.github.com>

[33mcommit 94a09b79f4be2a5afabf9360044c6930b0fb7ee3[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Thu Feb 22 19:15:53 2024 +0000

    feat: simpler conditions for SpectrumRestricts for `‚ÑÇ`, `‚Ñù` and `‚Ñù‚â•0`. (#10826)
    
    This provides conditions which are easier to verify for `SpectrumRestricts` when the scalar rings are `‚ÑÇ`, `‚Ñù`, or `‚Ñù‚â•0`. In addition, it provides a condition for the spectrum to restrict to `‚Ñù‚â•0` in terms of the spectral radius.

[33mcommit 6b92deac8cec09fd29d7e3628c4b0dfbc87830e4[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Thu Feb 22 18:08:27 2024 +0000

    feat: add `IsUnit.mem_unitary_of_star_mul_self` and protect some `.star` lemmas (#10855)

[33mcommit 3f4e4420b1e26599b9e7642dfc6f9614d4927dee[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Thu Feb 22 17:42:16 2024 +0000

    feat: Basic conditional probability lemmas (#10785)
    
    From PFR

[33mcommit 2c9f0c15cc8d511c35d6b96cf8b4f5b746e6ad1f[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Thu Feb 22 17:05:34 2024 +0000

    feat: extend convergence of integrals against peak functions to noncompact settings (#10829)
    
    This makes it possible to use Gaussians as peak functions in the proof of Fourier inversion.

[33mcommit 965479ba5b73ccf7cd86bbe9afd3c224298462ba[m
Author: Jz Pan <acme_pjz@hotmail.com>
Date:   Thu Feb 22 16:20:25 2024 +0000

    feat(Algebra/CharP/IntermediateField): characteristic of intermediate fields (#10839)
    
    Add some convenient instances for determining the characteristic of intermediate fields, similar to `SubsemiringClass.instCharZero`.

[33mcommit 1e5697b8567ec16aedb4eac8c931ef1c4fede3a6[m
Author: Oliver Nash <github@olivernash.org>
Date:   Thu Feb 22 16:20:24 2024 +0000

    feat: add lemma `LieAlgebra.IsKilling.eq_zero_of_apply_eq_zero_of_mem_rootSpaceProductNegSelf` (#10803)

[33mcommit eaba1225feae6b8be53052e8ac49f6ee593255c4[m
Author: R√©my Degenne <Remydegenne@gmail.com>
Date:   Thu Feb 22 16:20:23 2024 +0000

    feat: add versions of the monotone convergence theorem for the Bochner integral (#10793)

[33mcommit 7bb1f49ef836a797c2cffa9824e93adaf8b67256[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Thu Feb 22 15:18:26 2024 +0000

    feat: Dependent eliminator for `Fin 0` (#10850)
    
    `Fin.elim0` and `Fin.elim0'` are exactly the same function (non-dependent eliminator for `Fin 0`) and we were missing the dependent version (I suspect that `Fin.elim0` originally was dependent, and became non-dependent upon landing in Std).
    
    From PFR

[33mcommit 1dee6e1ab8e341b4045296387144474b14886d73[m
Author: damiano <adomani@gmail.com>
Date:   Thu Feb 22 15:18:25 2024 +0000

    fix: lint also #evals (#10849)
    
    Lint against `#eval`s in `Mathlib`.
    
    This PR is built on top of #10848.

[33mcommit ae19d826d39222656725353d40273ff40c29c8ed[m
Author: Jujian Zhang <jujian.zhang1998@outlook.com>
Date:   Thu Feb 22 15:18:24 2024 +0000

    feat: Some constructions about `RelSeries` (`reverse`, `snoc`, `cons`, `tail`, `smash`) (#3852)
    
    - reverse a `RelSeries` to give another `RelSeries` of the opposite relation
    - `cons`: put a smaller element in the front
    - `snoc`: put a larger element in the end
    - `tail`: chop off the first element
    - `eraseLast`: chop off the last element
    - `smash`: glue two relation series togather
    
    
    
    Co-authored-by: Floris van Doorn <fpvdoorn@gmail.com>

[33mcommit 72c702f69ce58dfc92f44b2713ccdc103405cedc[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Thu Feb 22 14:01:01 2024 +0000

    feat: `positivity` extension for `Rat.num`, `Rat.den` (#10218)
    
    and rename `num_nonneg_iff_zero_le` to `num_nonneg`, `num_pos_iff_pos` to `num_pos`
    
    From LeanAPAP

[33mcommit 8a0970fcd7359db06cf1e88bcf058b4d8a3c9196[m
Author: damiano <adomani@gmail.com>
Date:   Thu Feb 22 12:56:08 2024 +0000

    chore: replace `#eval` by `run_cmd` in `Funlike/Basic` (#10848)
    
    This is the only `#eval` used in `Mathlib`.

[33mcommit 563fbc18e5f86d44b3b96edcfd36bd4b2134d7ab[m
Author: Floris van Doorn <fpvdoorn@gmail.com>
Date:   Thu Feb 22 12:56:07 2024 +0000

    feat: cyclic group lemmas (#10832)
    
    * Add a lemma stating that non-identity element of a finite group of prime order generates the group (stated in 4 ways)
    * Use this to golf `isCyclic_of_prime_card`
    * Add a version of `isUnit_iff_exists_inv` for non-commutative monoids.

[33mcommit 80e03a8bade34f278dfadfe0c3661975e6145f4f[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Thu Feb 22 12:56:06 2024 +0000

    chore(Topology): move more definitions to `Defs` (#10623)

[33mcommit a1edd24c6609d1719e55e745c9f2d0c40f7aeb8e[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Thu Feb 22 12:56:05 2024 +0000

    feat(CategoryTheory/Localization): construction of a localized category using left fractions (#10606)
    
    In this PR, given a class of morphisms `W : MorphismProperty C` which admits a left calculus of fractions, we construct a localized category in which the morphisms are equivalence classes of left fractions.

[33mcommit d824f0fbab4313e55e5f22c6a11a82a44b73eff6[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Thu Feb 22 12:56:04 2024 +0000

    feat(Topology/Order): generalize disjoint_nhds_atTop (#10580)
    
    Generalize to a `Preorder`, add an `Iff` version.

[33mcommit f2d8a000078fce27dcecb2870344a4df6574c4be[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Thu Feb 22 12:56:03 2024 +0000

    feat: Positivity extension for `Finset.sum` (#10538)
    
    Also define a new `aesop` rule-set and an auxiliary metaprogram `proveFinsetNonempty` for dealing with `Finset.Nonempty` conditions.
    
    From LeanAPAP
    
    Co-authored-by: Alex J. Best <alex.j.best@gmail.com>
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>
    Co-authored-by: Alex J Best <alex.j.best@gmail.com>

[33mcommit 1443e142be0d004f0860b96cf9b118a9597a2e2b[m
Author: R√©my Degenne <Remydegenne@gmail.com>
Date:   Thu Feb 22 11:57:04 2024 +0000

    feat: add `integral_eq_iff_of_ae_le` (#10792)

[33mcommit dc07ce1801957425765a670576180d1affcd24c1[m
Author: R√©my Degenne <Remydegenne@gmail.com>
Date:   Thu Feb 22 11:57:03 2024 +0000

    feat: add variants of `tendsto_integral_of_L1` (#10790)
    
    Add variants for set integrals and with the convergence hypothesis expressed with `snorm`.

[33mcommit ae0fb61354688e3ce8b9815620f431160bf2a61a[m
Author: R√©my Degenne <Remydegenne@gmail.com>
Date:   Thu Feb 22 11:57:02 2024 +0000

    feat: range of `enumerateCountable` when the default value belongs to the set (#10787)

[33mcommit 3718a428ddfac91483575256fcdc2b3bb474ccaa[m
Author: Oliver Nash <github@olivernash.org>
Date:   Thu Feb 22 09:41:18 2024 +0000

    feat: add lemma `LieModule.exists_pos_smul_add_smul_rootSpaceProductNegSelf_eq_zero` (#10748)

[33mcommit d67f7a69dcfdb95a27f4261dd23abacfa655619b[m
Author: Geoffrey Irving <irving@naml.us>
Date:   Thu Feb 22 09:41:17 2024 +0000

    feat: Add `mul_inv` and `inv_mul` versions of `div_le_one_of_le` (#10597)
    
    These are exactly `div_le_one_of_le` with `a / b` replaced by `a * b‚Åª¬π` and `b‚Åª¬π * a`.
    
    They come up frequently because some tactics produce inverses as normal forms over division.  The iff versions with `0 < b` already exist as `mul_inv_le_one_iff` and `inv_mul_le_one_iff`; the point of these is to have a weaker nonnegativity assumption on `b`.

[33mcommit 87ac4e6bc348cadfdb35e52ba8197fae49e4a8e1[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Thu Feb 22 08:30:00 2024 +0000

    feat: `a‚Åª¬π * b = 1 ‚Üí a = b` (#10835)
    
    and other basic lemmas.
    
    From PFR

[33mcommit a319cfe88718d3be9a54b2cca7236461ed5ed25d[m
Author: Geoffrey Irving <irving@naml.us>
Date:   Thu Feb 22 06:08:04 2024 +0000

    feat: Add `ContinuousAt.eventually_mem` (#10838)
    
    This is essentially the same as `Filter.Tendsto.eventually_mem`, but infers in more cases when applied.
    
    Zulip discussion: https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/ContinuousAt.2Eeventually_mem'/near/422664457

[33mcommit 7289300204269508707b975b44ec42a87eeaac8c[m
Author: damiano <adomani@gmail.com>
Date:   Thu Feb 22 04:14:40 2024 +0000

    chore: a non-lean linter for #-commands (#10809)
    
    This PR introduces an `awk`-based linter for checking that `Mathlib/*.lean` files do not contain `#`-commands.
    
    It takes the names of the commands that begin with `#` by running
    ```lean
    import Mathlib
    #help command
    ```
    and after that it is all text-based substitutions.
    
    It triggers an error on lines that begin with `#cmd`, omitting (most) lines contained comment blocks.
    
    CI for this PR should fail until #10772 and #10827 have been merged.

[33mcommit 096b9e1b4de2c367be250bceec4dfa31d4cf4cd7[m
Author: damiano <adomani@gmail.com>
Date:   Thu Feb 22 03:16:37 2024 +0000

    chore: move #guard_msgs in PosDef to test file (#10827)
    
    This PR moves a `#guard_msgs` command from `LinearAlgebra/Matrix/PosDef` to a test file: it is a preparation for #10809.

[33mcommit 911c16919654c70ebb46700ca8a31c45351f32dd[m
Author: Geoffrey Irving <irving@naml.us>
Date:   Thu Feb 22 00:33:38 2024 +0000

    feat: Lemmas about `(extChartAt I x).target` being open if we're boundaryless (#10840)
    
    `(extChartAt I x).source` is always open, so there are nice lemmas like
    
    1. `isOpen_extChartAt_source`
    2. `extChartAt_source_mem_nhds`
    3. `extChartAt_source_mem_nhds'`
    
    `(extChartAt I x).target` fails to be open near manifold boundary points, but we recover the nice lemmas when `I.Boundaryless`.

[33mcommit 7d3ff008cb2f762c83124f1ab1fef4da8ab17bf9[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Thu Feb 22 00:33:36 2024 +0000

    feat: `Real.toNNReal` bundled as a continuous map (#10825)

[33mcommit 854ab51de12b08210d8a83fcc7b752c0a3341f73[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Wed Feb 21 23:48:42 2024 +0000

    chore: `pp_dot` on `‚Ñù‚â•0‚àû` definitions (#10837)

[33mcommit ea36aa7d5120f9d05d7bdf7314425cc6a909f26d[m
Author: damiano <adomani@gmail.com>
Date:   Wed Feb 21 22:52:41 2024 +0000

    chore: remove terminal, terminal `refine`s (#10762)
    
    I replaced a few "terminal" `refine/refine'`s with `exact`.
    
    The strategy was very simple-minded: essentially any `refine` whose following line had smaller indentation got replaced by `exact` and then I cleaned up the mess.
    
    This PR certainly leaves some further terminal `refine`s, but maybe the current change is beneficial.

[33mcommit f3fd0b2b75a7a1542ba66eb49bb07f90616cd403[m
Author: Scott Morrison <scott@tqft.net>
Date:   Wed Feb 21 20:21:30 2024 +0000

    chore: move Levenshtein distance #guard to test/ (#10772)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit ded9fee51ceadfb157c6fce2d64fd6d241e40c05[m
Author: damiano <adomani@gmail.com>
Date:   Wed Feb 21 19:28:54 2024 +0000

    docs: fix typo in .github/workflows/b*.yml* (#10817)
    
    Just a simple `Countexamples --> Counterexamples` typo.
    Just a simple `Countexamples --> Counterexamples` typo.
    Just a simple `Countexamples --> Counterexamples` typo.
    Just a simple `Countexamples --> Counterexamples` typo.

[33mcommit b5161cd5c29a17dbe69dcae16a19ead03a97bc34[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Feb 21 19:28:53 2024 +0000

    chore(LinearMap/Pointwise): golf (#10775)

[33mcommit ffbaf173ef720e9e9aa5ea59f92490a011ea1c2e[m
Author: Tom√°≈° Sk≈ôivan <skrivantomas@seznam.cz>
Date:   Wed Feb 21 19:28:52 2024 +0000

    fix: refactor of `fun_prop` and several bug fixes (#10724)
    
    fix: refactor of `fun_prop` and several bug fixes
    
    1. support for proving recursive functions
    `fun_prop` correctly uses local hypothesis coming from induction step
    2. unfolds let variables when necessary
    3. unfolds `id`, `Function.comp`, `Function.uncurry`, `HasUncurry.uncurry`
    Many theorems in mathlib are stated using `id`, `Function.comp` etc. to prevent restating all these theorems `fun_prop` just unfolds these common functions.
    4. does not get blocked by `autoParam` or `outParam`
    5. support for custom bundled morphism coercions. `DFunLike.coe` is not hardcoded anymore and any morphism coercion can be registered with `@[fun_prop_coe]` attribute
    6. internal counter to prevent infinite loops

[33mcommit 8eef2a77743e754387943375a86dbf3641b4c594[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Wed Feb 21 19:00:53 2024 +0000

    feat: add a `SpectrumRestricts` structure (#10735)
    
    when `A` is and `S`-algebra and `R` is a subring of `S`, `SpectrumRestricts (a : A) (f : S ‚Üí R)` means that the `S`-spectrum of `a` is entirely contained within the image of the `R`-spectrum of `a` under `algebraMap R S`. We include `f` because we want to explicitly specify the function that takes us back into `R` from `S`.

[33mcommit 00df8d1b0d1ec1aa3a934eeab6b7c1237c74006c[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Feb 21 17:49:50 2024 +0000

    feat(UniformSpace): add `Unique` instance (#10774)
    
    There is only one `UniformSpace` structure on a `Subsingleton`.

[33mcommit 65d9c6c4d7f2bad2aac31291c2a7dccee4ea8a35[m
Author: R√©my Degenne <Remydegenne@gmail.com>
Date:   Wed Feb 21 16:46:17 2024 +0000

    feat: add `tendsto_atBot_atTop_of_antitone` (#10794)

[33mcommit 10e929a254938156c046ce223d819cb07d0f5faf[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Wed Feb 21 16:46:16 2024 +0000

    chore: classify `added lemma` porting notes (#10791)
    
    Classifies by adding number (#10756) to porting notes claiming `added lemma`.

[33mcommit ba55c689b2a339601a15bfd0e38207b446f8ef15[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Wed Feb 21 16:46:15 2024 +0000

    chore: classify `previously simp` porting notes (#10789)
    
    Classifies by adding issue number (#10745) to porting note claiming anything semantically equivalent to `was simp`.
    
    Related merged PR: #10746.

[33mcommit 7a17e9debe6c7b8a494caada80faa5781fb73d2a[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Wed Feb 21 16:46:14 2024 +0000

    chore: add some `fun_prop` attributes for continuity (#10769)

[33mcommit f17e232420d02eefb6b737b71f5dbb02385a3436[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Feb 21 16:46:13 2024 +0000

    refactor(MeasureTheory): redefine `‚â§` on measures (#10714)
    
    Redefine `‚â§` on `MeasureTheory.Measure`
    so that `Œº ‚â§ ŒΩ ‚Üî ‚àÄ s, Œº s ‚â§ ŒΩ s` by definition
    instead of `‚àÄ s, MeasurableSet s ‚Üí Œº s ‚â§ ŒΩ s`.
    
    ### Reasons
    
    - this way it is defeq to `‚â§` on outer measures;
    - if we decide to introduce an order on all `DFunLike` types
      **and** migrate measures to `FunLike`, then this is unavoidable;
    - the reasoning for the old definition was
      "it's slightly easier to prove `Œº ‚â§ ŒΩ` this way";
      the counter-argument is
      "it's slightly harder to apply `Œº ‚â§ ŒΩ` this way".
    
    ### Other changes
    
    - golf some proofs broken by this change;
    - add `@[gcongr]` tags to some `ENNReal` lemmas;
    - fix the name
      `ENNReal.coe_lt_coe_of_le` -> `ENNReal.ENNReal.coe_lt_coe_of_lt`;
    - drop an unneeded `MeasurableSet` assumption
      in `set_lintegral_pdf_le_map`

[33mcommit b06068c3595d2afad6662600de0e3a8ec837198b[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Wed Feb 21 16:46:12 2024 +0000

    chore: classify `added to ease automation` porting notes (#10689)
    
    - [x] Classifies by adding issue number (#10688) to porting notes claiming anything semantically equivalent to `added to ease automation`.
    - [x] Enforce singular convention converting "porting notes" to "porting note".

[33mcommit 5722a178bb23265969b68fe9b6f95606515860a1[m
Author: Alex Keizer <alex@keizer.dev>
Date:   Wed Feb 21 15:14:15 2024 +0000

    feat: show that every polynomial functor is a (trivial) QPF (#10807)
    
    Every polynomial functor `P` is trivially also a quotient of a polynomial functor, namely, it's a quotient of itself through equality. That is, `abs` and `repr` are just the identity.

[33mcommit c0d05dba72aaaf12c72c62c4ab84e6e781acbfd5[m
Author: Alex Keizer <alex@keizer.dev>
Date:   Wed Feb 21 15:14:14 2024 +0000

    feat: transport an `MvQPF` instance along an equivalence (#10806)
    
    This is code ported from [alexkeizer/QpfTypes](https://github.com/alexkeizer/QpfTypes).
    It's primary use is to show that existing type functions which are equivalent to polynomial functors but not defined as such (e.g., `Sum`, `Prod`, etc.) are QPFs.

[33mcommit dd9c1eb3dad6757ffbd65d6e5d5447e913527cd3[m
Author: Alex Keizer <alex@keizer.dev>
Date:   Wed Feb 21 15:14:13 2024 +0000

    feat: provide an instance of `Fintype (Fin2 n)` (#10805)
    
    This enables use of the `fin_cases` tactic on premises `i : Fin2 _`

[33mcommit bafc1ac756ac723440367f5bbd20254ccf6e886a[m
Author: R√©my Degenne <Remydegenne@gmail.com>
Date:   Wed Feb 21 15:14:12 2024 +0000

    feat: add `MeasurableEmbedding.comap_add` (#10795)
    
    Also add a simp attribute to `AbsolutelyContinuous.zero`.
    
    
    
    Co-authored-by: R√©my Degenne <remydegenne@gmail.com>

[33mcommit 807b7b42daa712c8f28a6c9dcac654202349abbe[m
Author: R√©my Degenne <Remydegenne@gmail.com>
Date:   Wed Feb 21 15:14:11 2024 +0000

    feat: add `tendsto_nat_ceil_atTop` (#10786)

[33mcommit 359d4b984ae2b170505d30ae24fe81bdf220f916[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Feb 21 15:14:10 2024 +0000

    feat(UniformSpace): add `UniformSpace.isClosed_ball` (#10782)

[33mcommit 24c9aaa1324fd7dcb9235ea365368b000f0a9e0e[m
Author: R√©my Degenne <Remydegenne@gmail.com>
Date:   Wed Feb 21 14:19:40 2024 +0000

    feat: add `kernel.(co)map_id` (#10801)

[33mcommit 7d7cd8cfc73c3d934fd4b35ff65791921b93a1ca[m
Author: R√©my Degenne <Remydegenne@gmail.com>
Date:   Wed Feb 21 14:19:39 2024 +0000

    chore: add `@[simp]` to `limsup_const` and `liminf_const` (#10798)

[33mcommit 79d097fa4a3758eb0433fe9937b112bab9715d4e[m
Author: R√©my Degenne <Remydegenne@gmail.com>
Date:   Wed Feb 21 14:19:38 2024 +0000

    feat: MeasurableSpace.generateFrom lemmas (#10797)

[33mcommit e6bc0f58c617b13224bb5030c0a448cc04732acd[m
Author: R√©my Degenne <Remydegenne@gmail.com>
Date:   Wed Feb 21 14:19:37 2024 +0000

    feat: add `snorm_restrict_le` (#10788)

[33mcommit c63ddc259fc8177934b931d4934d9b20cad89cb0[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Wed Feb 21 14:19:37 2024 +0000

    feat: unitary elements are normal (#10778)

[33mcommit 88a36ee6447ba3cd2bb6f1c525079aa0b1268593[m
Author: R√©my Degenne <Remydegenne@gmail.com>
Date:   Wed Feb 21 13:31:21 2024 +0000

    feat: instances `CovariantAddLE` and `OrderBot` for kernel (#10802)

[33mcommit 8b2dfa4e358ef9969cc5f519810315b205710e24[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Wed Feb 21 03:47:55 2024 +0000

    feat: `StarAlgEquiv`'s on C‚ãÜ-algebras are isometric (#10504)

[33mcommit 25c79aba86de3a4e96bc3dbf78f604994926c0ae[m
Author: Matthew Robert Ballard <matt@mrb.email>
Date:   Tue Feb 20 23:51:59 2024 +0000

    chore(workflows): correct commenting attempt in yml  (#10771)
    
    GPT got confused about how to declare a comment in `yaml`.

[33mcommit 91c040610af9c1979a75286bd3f2df4b4a39a270[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Tue Feb 20 23:51:58 2024 +0000

    chore: Remove `Init.CCLemmas` (#10696)
    
    Those lemmas were weird and unused, except the last few about transitivity of `=` and `‚â†`, which I moved to `Logic.Basic`

[33mcommit 719d6e1010c67f075ae69551a41f09ca790ab387[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Tue Feb 20 23:51:58 2024 +0000

    chore: classify `dsimp can prove this` porting notes (#10686)
    
    Classifies by adding issue number (#10685) to porting notes claiming `dsimp can prove this`.

[33mcommit 89fd8bf0b24aa509a29d5253a8c25f04fa6ee856[m
Author: Oliver Nash <github@olivernash.org>
Date:   Tue Feb 20 23:51:57 2024 +0000

    feat: add lemma `LinearMap.trace_restrict_eq_sum_trace_restrict` (#10638)

[33mcommit 3811e3e614b939040a3a32deb1f468552b8907f1[m
Author: Thomas Browning <tb65536@uw.edu>
Date:   Tue Feb 20 23:51:55 2024 +0000

    refactor: Split off the Pontryagin dual into separate file (#10620)
    
    This PR splits off the Pontryagin dual to a separate file to avoid unnecessary imports in `ContinuousMonoidHom.lean`. For instance, local compactness of the Pontryagin dual will require some heavy imports such as Arzela-Ascoli and the fact that the exponential map is a covering map.
    
    
    
    Co-authored-by: Thomas Browning <tb65536@users.noreply.github.com>

[33mcommit 63e4e10298e408359c0a002e800fec3cc88d9c8e[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Tue Feb 20 22:17:20 2024 +0000

    chore: classify `avoid simpNF linter error` porting notes (#10760)
    
    Classifies by adding issue number (#10759) to porting notes claiming:
    
    > removed `@[simp]` to avoid a `simpNF` linter error.

[33mcommit 58db12e9ed12805dcdef9fd81cdc3c7b8ef0b6c0[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Tue Feb 20 22:17:19 2024 +0000

    chore: classify `was rw` porting notes (#10692)
    
    Classifies by adding issue number (#10691) to porting notes claiming `was rw`.

[33mcommit 90d86d7ccf5ac671bc50fdfca34918a2440465d6[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Tue Feb 20 22:17:18 2024 +0000

    chore: classify `dsimp cannot prove this` porting notes (#10676)
    
    Classifies by adding issue number (#10675) to porting notes claiming `dsimp cannot prove this`.

[33mcommit d9e8ed1a4c3243ed1475543d80d8fbe19051b62f[m
Author: Markus Himmel <markus@himmel-villmar.de>
Date:   Tue Feb 20 22:17:17 2024 +0000

    feat(CategoryTheory): filtered if every finite diagram admits a cocone (#10664)

[33mcommit de765f60e98be0b9a372057b674307aede7ec72f[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Tue Feb 20 22:17:16 2024 +0000

    chore: classify `simp can do this` porting notes (#10619)
    
    Classify by adding issue number (#10618) to porting notes claiming anything semantically equivalent to `simp can prove this` or `simp can simplify this`.

[33mcommit 55a538bda8da6d83acc70e7fc977a179ca0c530a[m
Author: Joseph Tooby-Smith <72603918+jstoobysmith@users.noreply.github.com>
Date:   Tue Feb 20 22:17:15 2024 +0000

    feat(CategoryTheory/WithTerminal): Add pseudofunctors (#10533)
    
    Defined the  pseudofunctors from `Cat` to `Cat` induced by `WithTerminal` and `WithInitial`.

[33mcommit a7d3f186449b00509e1c7f3ae5150fc516b059fb[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Tue Feb 20 20:13:06 2024 +0000

    doc(Analysis/NormedSpace/Star/GelfandDuality): update TODO list (#10763)

[33mcommit 71e045ac81d083488f5bdeb1a4e14e7bafd508f1[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Tue Feb 20 20:13:05 2024 +0000

    chore: classify `was simp` porting notes (#10746)
    
    Classifies by adding issue number (#10745) to porting notes claiming `was simp`.

[33mcommit 0f21e517900c0a48f2ae0e2167e850666b112dcc[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Tue Feb 20 17:52:12 2024 +0000

    chore: change from plural to singular in porting notes (#10761)

[33mcommit a5e4848cda24ea6090fd25fcae404e8d184966c2[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Tue Feb 20 17:52:11 2024 +0000

    chore: classify `added lemma` porting notes (#10757)
    
    Classifies by adding issue number (#10756) to porting notes claiming `added lemma`.

[33mcommit ecce7d9f975aa4137f959f1d806e4b10f50d6585[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Tue Feb 20 17:52:10 2024 +0000

    chore: classify `added dsimp only` porting notes (#10753)
    
    Classifies by adding issue number (#10752) to porting notes claiming `added dsimp only`.

[33mcommit c52180241aa65781f67df5091a98ba786186a367[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Tue Feb 20 17:52:09 2024 +0000

    chore: classify `added to clean up types` porting notes (#10751)
    
    Classifies by adding issue number (#10750) to porting notes claiming `added to clean up types`.

[33mcommit 2e24591b39d5d6b845c0cc413f93a24f090bbc8b[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Feb 20 17:52:08 2024 +0000

    feat(UniformSpace): add `IsCountablyGenerated (ùì§ _)` instances (#10699)
    
    This typeclass says that the uniformity is pseudometrizable.

[33mcommit 8afb4109c09b235f75b4836eeb00f4252629ce64[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Feb 20 17:52:07 2024 +0000

    chore(UniformSpace): golf (#10627)
    
    Golf the instance for `UniformSpace (Œ± ‚äï Œ≤)`
    using the `ofNhdsEqComap` constructor.
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit b255974ff7e3b8a0c2d3ce149c012e8475ef42d1[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Tue Feb 20 17:52:06 2024 +0000

    chore: move BddBelow.finite_of_bddAbove to Order.LocallyFinite (#10613)

[33mcommit c08fc633010261f414f8c701272a13d1663bd541[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Tue Feb 20 17:52:04 2024 +0000

    refactor: do not import old-style `have`/`suffices`/`replace` within mathlib (#10534)
    
    This syntax remains available downstream with `import Mathlib.Tactic`, but is no longer available in mathlib itself.
    
    This follows on from #10640, which remove all current uses of this syntax.
    
    By removing these imports, we prevent further regressions in mathlib,
    and save reviewers from having to look out for this in review.
    
    In future we could delete this syntax entirely, but this would harm downstream code, especially mathport output.
    
    
    
    Co-authored-by: sgouezel <sebastien.gouezel@univ-rennes1.fr>

[33mcommit bcc8209ff4cf388c317c76e6981abe3eb9633005[m
Author: L <hi@llllvvuu.dev>
Date:   Tue Feb 20 17:52:03 2024 +0000

     feat: `iInter_sigma`, `biInter_sigma`, `biSup_sigma`, `biInf_sigma` (#8964)
    
    similar to `prod_sigma`, `prod_sigma'`, `iInf_sigma`, `iInf_sigma'`, `iSup_sigma`, `iSup_sigma'`
    
    From PFR
    
    
    
    Co-authored-by: L Lllvvuu <git@llllvvuu.dev>

[33mcommit 6f4fbe6dd588509716a6cff94e39fa8998cbe5b6[m
Author: David Kurniadi Angdinata <dka31@cantab.ac.uk>
Date:   Tue Feb 20 17:52:02 2024 +0000

    feat(Data/Nat/EvenOddRec): add strong recursion principle on even and odd numbers (#5932)

[33mcommit 283cf08eb8deda4a7c6d927d00ff6455195b92fb[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Tue Feb 20 16:40:35 2024 +0000

    chore: classify `added instance` porting notes (#10755)
    
    Classifies by adding issue number (#10754) to porting notes claiming `added instance`.

[33mcommit d2a67d61b64874f1d8a8fda609bc06e9cb7b13da[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Tue Feb 20 16:40:34 2024 +0000

    chore: classify `added to speed up elaboration` porting notes (#10695)
    
    Classifies by adding issue number (#10694) to porting notes claiming `added to speed up elaboration`.

[33mcommit b82dd45e7e6dbb2ea112d2419d1c8033c2f5e235[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Tue Feb 20 14:35:54 2024 +0000

    feat(Counterexamples/CliffordAlgebra_not_injective): Some quadratic forms cannot be constructed from bilinear forms (#9670)
    
    Turns out that this follows trivially from the previous counterexample.
    
    Perhaps there's a slicker proof that doesn't go via Clifford algebras at all, but it seemed worth recording this one anyway.

[33mcommit e887d2dc58b2f57eac7fcf26a6988ecec855862f[m
Author: Thomas Zhu <thomas.zhu.sh@hotmail.com>
Date:   Tue Feb 20 14:35:53 2024 +0000

    feat(NumberTheory/LegendreSymbol): `@[csimp]` rule for `jacobiSym` and `legendreSym` (#9329)
    
    Main definitions:
    * `def jacobiSym.fastJacobiSym (a : ‚Ñ§) (b : ‚Ñï) : ‚Ñ§`
    * `@[csimp] theorem jacobiSym.fastJacobiSym.eq : jacobiSym = jacobiSym.fastJacobiSym`
    * `def legendreSym.fastLegendreSym (p : ‚Ñï) [Fact p.Prime] (a : ‚Ñ§) : ‚Ñ§`
    * `@[csimp] theorem legendreSym.fastLegendreSym.eq : legendreSym = legendreSym.fastLegendreSym`
    
    Also added tests
    
    
    
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>
    Co-authored-by: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>

[33mcommit 85db972fe9297fa38018f008c527e6d9a5db7643[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Tue Feb 20 12:29:52 2024 +0000

    chore: Remove `Init.IteSimp` (#10708)
    
    These lemmas can easily go in `Logic.Basic`. Also rename and restate them to better match the convention.

[33mcommit 4c3321a1362503284a9a15c84ea9453aef551332[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Tue Feb 20 11:30:46 2024 +0000

    feat(CategoryTheory/GradedObject): more about the action of a composition of bifunctors (#10667)
    
    The action on graded objects of a trifunctor obtained by composition of two bifunctors can be computed as a composition of the actions of these two bifunctors. In this PR, we consider the case when we apply a bifunctor to the second and third variables and then a bifunctor to the first variable and the result of this. The new code is very similar to #8242.

[33mcommit 7dad88a60457570c1759dd1de17861b31f99ebfb[m
Author: Markus Himmel <markus@himmel-villmar.de>
Date:   Tue Feb 20 11:30:45 2024 +0000

    feat: (co)cones as elements of limit of hom functor (#10662)
    
    We exhibit the natural isomorphism between cones on `F` with cone point `X` and the set `lim Hom(X, F¬∑)` and similarly the natural isomorphism between cocones on `F` with cocone point `X` and the set `lim Hom(F¬∑, X)`.

[33mcommit bb76bc8ab25b80a67b7c98bc58c92df80343f8aa[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Tue Feb 20 10:08:45 2024 +0000

    chore: adjust style and docstring of `ContinuousMap.compRightAlgHom` (#10740)

[33mcommit c9eb34ffdc51497f4f2cd630a234ad07d4fa7abf[m
Author: Matthew Robert Ballard <matt@mrb.email>
Date:   Tue Feb 20 10:08:44 2024 +0000

    perf(Matrix.SpecialLinearGroup): clean up with `dsimp` first  (#10738)
    
    This reduces the number of instructions by over a third using `dsimp` to clean up an expression before starting a proof.

[33mcommit c39e9efa0202433c06ab6e623dca2dedb9c62b3b[m
Author: Markus Himmel <markus@himmel-villmar.de>
Date:   Tue Feb 20 10:08:43 2024 +0000

    feat: filtered categories are connected (#10718)

[33mcommit 0a3cc5707f36d9f5a52b66df121f9d6ceca19bf5[m
Author: Omar Mohsen <omars252@hotmail.com>
Date:   Tue Feb 20 10:08:42 2024 +0000

    doc: Change old Lean 3 commands to Lean 4 in implementation notes (#10707)
    
    I changed Lean's 3 old "variables" command to Lean's 4 command "variable" in some implementation notes.
    I might have missed some
    
    Co-authored-by: Omar Mohsen <36500353+OmarMohsenGit@users.noreply.github.com>

[33mcommit db5a937643e4550103c77d57b38a7a27e08b86e7[m
Author: Daniel Darabos <darabos.daniel@gmail.com>
Date:   Tue Feb 20 10:08:41 2024 +0000

    chore: Remove unnecessary "rw"s (#10704)
    
    Remove unnecessary "rw"s.

[33mcommit c76aa9d64f9991c868aabe322448ab8d874a8b9a[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Tue Feb 20 10:08:40 2024 +0000

    move: Algebraic pi instances (#10693)
    
    Rename
    * `Data.Pi.Algebra` to `Algebra.Group.Pi.Basic`
    * `Algebra.Group.Pi` to `Algebra.Group.Pi.Lemmas`
    
    Move a few instances from the latter to the former, the goal being that `Algebra.Group.Pi.Basic` is about all the pi instances of the classes defined in `Algebra.Group.Defs`. `Algebra.Group.Pi.Lemmas` will need further rearranging.

[33mcommit 2b9e5ce461e4dcb7cc86204b7e1d1723496cf369[m
Author: Kevin Buzzard <k.buzzard@imperial.ac.uk>
Date:   Tue Feb 20 08:45:49 2024 +0000

    style(Algebra/DirectSum/Ring): add newline (#10737)

[33mcommit c91623e450de0e59460f572ab89af66a721793c2[m
Author: Kevin Buzzard <k.buzzard@imperial.ac.uk>
Date:   Tue Feb 20 08:45:48 2024 +0000

    fix(RingTheory/Finiteness): stablizes -> stabilizes (#10736)

[33mcommit 73c0d3b2fb8f5379d291fc737a0fda5e277ad9ef[m
Author: Jack Valmadre <jack.valmadre@gmail.com>
Date:   Tue Feb 20 08:45:47 2024 +0000

    feat: Basic theorems for iteratedFDerivWithin (#10733)
    
    Basic theorems for iteratedFDerivWithin

[33mcommit 300250f247ff7ff1550cb360e99bd2f505439b4e[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Tue Feb 20 08:45:46 2024 +0000

    chore(Init/Data/Nat/Lemmas): rename 3 lemmata (#10730)
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit 4a99b7e2851df4256e96f68bf7501f5848801443[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Tue Feb 20 08:45:45 2024 +0000

    chore: replace Lean 3 syntax `Œª x,` in doc comments (#10727)
    
    Use Lean 4 syntax `fun x ‚Ü¶` instead, matching the style guide.
    This is close to exhaustive for doc comments; mathlib has about 460 remaining uses of Œª (not all in Lean 3 syntax).

[33mcommit 21472664c54bb6e7fe4a120aefa52cf212be8d7c[m
Author: Kyle Miller <kmill31415@gmail.com>
Date:   Tue Feb 20 06:59:00 2024 +0000

    feat: `#check` tactic (#9902)
    
    This provides a tactic version of the `#check` command. The term provided to `#check` may refer to local variables in the proof.
    
    This is similar to how `#find` is both a command and a tactic.

[33mcommit 410db9009f4e34a6bcd70cd795bba47e0222502a[m
Author: Arend Mellendijk <arend.mellendijk@gmail.com>
Date:   Tue Feb 20 03:48:28 2024 +0000

    fix(Logic/Embedding/Basic): Generalise `arrowCongrRight_apply` (#10739)
    
    `f` does not need to be an embedding, and this version is syntactically strictly more general.

[33mcommit ea9e243b5a959b0cf7f33731b73cc4737df840d0[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Feb 20 01:19:59 2024 +0000

    chore(LinearAlgebra): Fintype -> Finite (#10722)

[33mcommit 9b3394a5a22efb514deb6f3db5855f19c801c3b6[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Feb 20 00:28:29 2024 +0000

    chore(Equiv/Fintype): `Fintype` -> `Finite` (#10723)

[33mcommit 2d37a854f39f9acb32f663c0c0161b7d7a9b6ae5[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Mon Feb 19 22:34:41 2024 +0000

    chore replace to_digits in comment (#10729)
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit c29b514805000f01102609d52ac627e248c4070e[m
Author: Joseph Myers <jsm@polyomino.org.uk>
Date:   Mon Feb 19 22:34:40 2024 +0000

    feat: `stabilizer_univ`, `stabilizer_finset_univ` (#10705)
    
    Add a `simp` lemma about the pointwise group action on a set: `stabilizer G (Set.univ : Set Œ±) = ‚ä§`.  Also add an analogous lemma for the `Finset` case, though I didn't need that one.
    
    From AperiodicMonotilesLean.

[33mcommit b9578e8d0267663d917695fc1f67d062328563ef[m
Author: Moritz Doll <moritz.doll@googlemail.com>
Date:   Mon Feb 19 22:34:39 2024 +0000

    chore(MeasureTheory/Function/ConditionalExpectation/Real): cleanup (#10684)
    
    - Use dot-notation
    - Replace one `Classical.choose_spec` by `rcases`
    - Inline short `exact`s

[33mcommit 43b77bb98cb23b84844a37d027ed034d6e97d8ed[m
Author: Joseph Myers <jsm@polyomino.org.uk>
Date:   Mon Feb 19 21:18:02 2024 +0000

    feat: `smul_set_disjoint_iff` (#10703)
    
    Add a `simp` lemma about the group action on a set: `Disjoint (a ‚Ä¢ s) (a ‚Ä¢ t) ‚Üî Disjoint s t`.
    
    From AperiodicMonotilesLean.

[33mcommit 6590f1490a1986ff60a8d287753aa222cbe2d4c4[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Mon Feb 19 20:27:30 2024 +0000

    chore: classify `lemma was not necessary` porting notes (category theory) (#10674)
    
    Classifies by adding issue number (#10688) to porting notes claiming `ext/simp lemma was not necessary`.
    
    Co-authored-by: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>

[33mcommit eaaf55621733b356c7f64d8466d9b464c3749140[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Mon Feb 19 20:27:29 2024 +0000

    feat(CategoryTheory/Triangulated): more API (#10527)
    
    In this PR, it is shown that in order to show that a pretriangulated category is triangulated category, i.e. in order to check the octahedron axiom, it is possible to replace a given diagram by an isomorphic diagram. This shall be used in #9550 in order to show that the homotopy category of cochain complexes in an additive category is triangulated.

[33mcommit 4ae8a4ddefd9518e4034e4d9267da42785f53f38[m
Author: Oliver Nash <github@olivernash.org>
Date:   Mon Feb 19 19:19:05 2024 +0000

    feat: basic theory of chains of roots / weights of Lie algebras / modules (#10548)

[33mcommit 8a5cead13b71cd90122b467e64e59f6a02677804[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Mon Feb 19 17:38:43 2024 +0000

    feat: Boxes in locally finite ordered rings (#10506)
    
    Define the sequence of "hollow boxes" indexed by natural numbers as the successive differences of the "boxes" `Icc (-n) n`.

[33mcommit 83de24545b8ae116809c408fd0ab7a92305fcd73[m
Author: David Kurniadi Angdinata <dka31@cantab.ac.uk>
Date:   Mon Feb 19 17:38:43 2024 +0000

    refactor(AlgebraicGeometry/EllipticCurve/*): rename baseChange to map (#9744)
    
    This is in accordance with other similar definitions e.g. `Polynomial.map`. It turns out that rewrite lemmas of the form `(W.map (œÜ.comp œà)).negY/addX/addY = œà ((W.map œÜ).negY/addX/addY)` are rather annoying to use, so they are replaced with the original `baseChange` functionality that says `(W.baseChange B).negY/addX/addY = œà ((W.baseChange A).negY/addX/addY)`. This addresses the issue in #9596 pointed out by @riccardobrasca, but for the Weierstrass curve `W` rather than its points.

[33mcommit 9ece706370bee34c2b65f2f9717f43302917196a[m
Author: Markus Himmel <markus@himmel-villmar.de>
Date:   Mon Feb 19 16:57:08 2024 +0000

    chore: generalize theorems from IsConnected to IsPreconnected (#10713)

[33mcommit e478d1c027a3445a734bae7bf7ff670f0b4b164e[m
Author: Wen Yang <yang-wen@139.com>
Date:   Mon Feb 19 15:34:14 2024 +0000

    feat(LinearAlgebra/Matrix): center of special linear group (#7826)
    
    The center of a special linear group of degree `n` is a subgroup composed of scalar matrices,
    in which the scalars are the `n`-th roots of `1`.
    Co-authored-by: Oliver Nash <[github@olivernash.org](mailto:github@olivernash.org)>
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>

[33mcommit 65037e3470a82737b4ce82d6a0c4e4f7534fbf47[m
Author: Antoine Chambert-Loir <antoine.chambert-loir@u-paris.fr>
Date:   Mon Feb 19 12:52:26 2024 +0000

    docstring(Algebra/DirectSum/Basic): correct docstring (#10715)
    
    The docstring for docs#DirectSum indicated `DirectSum Œ≤` instead of `DirectSum Œπ Œ≤`.
    
    
    
    Co-authored-by: Antoine Chambert-Loir <antoine.chambert-loir@math.univ-paris-diderot.fr>

[33mcommit e3e1b3f91bf6818abb2647643bcc7c850e3dad4d[m
Author: Johan Commelin <johan@commelin.net>
Date:   Mon Feb 19 12:21:37 2024 +0000

    chore(RingTheory/MvPolynomial/Homogeneous): extract api lemma from existing proof (#10658)

[33mcommit f749ee56d95717bfc40f6167da6aee678d89c2d4[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Mon Feb 19 10:30:43 2024 +0000

    fix: correct deprecation suggestions for algebra classes (#10702)

[33mcommit c1e6b9cb62fa471ecf2b228084a40a594c43563a[m
Author: Xavier Roblot <46200072+xroblot@users.noreply.github.com>
Date:   Mon Feb 19 09:46:11 2024 +0000

    feat: Add `NumberField.is_primitive_element_of_infinitePlace_lt` (#10033)
    
    Prove the following
    ```lean
    theorem NumberField.is_primitive_element_of_infinitePlace_lt (x : ùìû K)
         {w : InfinitePlace K} (h‚ÇÅ : x ‚â† 0) (h‚ÇÇ : ‚àÄ ‚¶Éw'‚¶Ñ, w' ‚â† w ‚Üí w' x < 1)
         (h‚ÇÉ : IsReal w ‚à® |(w.embedding x).re| < 1) : ‚Ñö‚üÆ(x:K)‚üØ = ‚ä§ := by
    ```
    
    If the place `w` is not real, we need the condition `|(w.embedding x).re| < 1` to ensure `x` is not a real number at the place `w`.

[33mcommit a4fac96e87b9afedd331ba15bede72af2bd6ca63[m
Author: Johan Commelin <johan@commelin.net>
Date:   Mon Feb 19 08:49:50 2024 +0000

    feat(LinearAlgebra/Charpoly): the characteristic polynomial of a direct sum (#10663)
    
    ... is the product of the characteristic polynomials.

[33mcommit 69eaf3b0e04b0a5437f0574382782c9edd2347fb[m
Author: Johan Commelin <johan@commelin.net>
Date:   Mon Feb 19 07:48:07 2024 +0000

    feat(Data/Polynomial/RingDivision): eq_zero_of_forall_eval_zero_of_natDegree_lt_card (#10656)

[33mcommit ba7255599b3377e02217ba9e3d01edeaace892b8[m
Author: Matthew Robert Ballard <matt@mrb.email>
Date:   Mon Feb 19 04:21:59 2024 +0000

    chore(Convex.Body): address porting note  (#10697)
    
    It appears this note no longer applies.

[33mcommit b860b8abcca27c7cf2514bf98135554734b02d70[m
Author: Scott Morrison <scott@tqft.net>
Date:   Mon Feb 19 03:57:58 2024 +0000

    chore: remove duplicate BitVec instances (#10712)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 89162a46fe581c3a8078d24520aaac6111226f20[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Sun Feb 18 23:34:50 2024 +0000

    fix: rename Irreducible.nat_degree_le_two (#10687)

[33mcommit b9a311a837df9385d91769c43783735df4dd9911[m
Author: Scott Morrison <scott@tqft.net>
Date:   Mon Feb 19 09:40:39 2024 +1100

    chore: post success messages about nightly-testing (#10679)
    
    ---
    <!-- The text above the `---` will become the commit message when your
    PR is merged. Please leave a blank newline before the `---`, otherwise
    GitHub will format the text above it as a title.
    
    To indicate co-authors, include lines at the bottom of the commit
    message
    (that is, before the `---`) using the following format:
    
    Co-authored-by: Author Name <author@email.com>
    
    Any other comments you want to keep out of the PR commit should go
    below the `---`, and placed outside this HTML comment, or else they
    will be invisible to reviewers.
    
    If this PR depends on other PRs, please list them below this comment,
    using the following format:
    - [ ] depends on: #abc [optional extra text]
    - [ ] depends on: #xyz [optional extra text]
    -->
    
    [![Open in
    Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)

[33mcommit d475374f5e4e7ad1260dd93b29d3995ff3129941[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Sun Feb 18 16:29:59 2024 +0000

    chore: Remove `PosPart` notation class (#10690)
    
    These two notation classes should have been removed in #9740

[33mcommit 9a04ccc451e3dc67346530f657ebaafe5d7987ba[m
Author: Johan Commelin <johan@commelin.net>
Date:   Sun Feb 18 13:05:10 2024 +0000

    chore(RingTheory/Polynomial/Basic): add lemma aeval_natDegree_le (#10659)
    
    This lemma is used in the proof of existence of Cartan subalgebras

[33mcommit 10ab06c9e648814df638aedf657baa1f652d53ae[m
Author: Johan Commelin <johan@commelin.net>
Date:   Sun Feb 18 13:05:09 2024 +0000

    chore(SetTheory/Cardinal/Basic): Cardinal.exists_finset_le_card (#10651)

[33mcommit a8804281157638b13e7a088006748797ef5bdf04[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Sun Feb 18 12:31:54 2024 +0000

    feat(CategoryTheory/Limits): universal colimits are colimits (#10677)
    
    This was missing, but essentially what was proved in the analogous statement for Van Kampen colimits.

[33mcommit f6d4f4c41eeb38fd10a8a3761b5b0841ba2516ab[m
Author: Brendan Seamas Murphy <shamrockfrost@gmail.com>
Date:   Sun Feb 18 09:43:21 2024 +0000

    Refactor(Mathlib/CategoryTheory/Core): Make functorToCore compute (#10649)
    
    Change `functorToCore` to use `Groupoid.inv` instead of `IsIso.inv` and as a consequence make it's computable.

[33mcommit a13e8040c0c36beb8f7e9aa8354efc6f3a72ee41[m
Author: sgouezel <rothgami@math.hu-berlin.de>
Date:   Sun Feb 18 09:43:20 2024 +0000

    chore: remove stream-of-consciousness uses of `have`, `replace` and `suffices` (#10640)
    
    No changes to tactic file, it's just boring fixes throughout the library.
    
    This follows on from #6964.
    
    
    
    Co-authored-by: sgouezel <sebastien.gouezel@univ-rennes1.fr>
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 746ffd57fed33454da73bdbc3797d11bd4f30282[m
Author: Scott Morrison <scott@tqft.net>
Date:   Sun Feb 18 08:41:00 2024 +0000

    chore: bump dependencies (#10625)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit dcfd3b10a46c8c2b2082e844a900df9596a38b0a[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Sat Feb 17 23:07:19 2024 +0000

    chore: add issue number to `instance was not necessary` porting notes (#10671)
    
    Adds issue number (#10670) to porting notes claiming `instance was not necessary`.

[33mcommit 28bbcdd2c3baad62a08272ca267db4db133216a4[m
Author: Johan Commelin <johan@commelin.net>
Date:   Sat Feb 17 22:20:59 2024 +0000

    chore(Data/Polynomial/Degree/TrailingDegree): some basic api lemmas (#10657)

[33mcommit e58bf58f4913b63483921722263a36f75e7b2fac[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Sat Feb 17 20:32:13 2024 +0000

    feat: add monic_X_pow_add_C (#10643)

[33mcommit 5e53cc19d5ffdb2bb8c47c40c02f3060c2018290[m
Author: JADekker <114015169+JADekker@users.noreply.github.com>
Date:   Sat Feb 17 18:52:50 2024 +0000

    Convolution of measures (#9372)
    
    Add definition of convolution of measures on monoids.
    Add commutativity of convolution if the monoid is commutative.
    Add convolution of measures is finite if both measures are finite.

[33mcommit 996ae393ea72fb4c28b4c004527eb09cf6a6ddd8[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sat Feb 17 16:56:55 2024 +0000

    chore(Topology): `Inhabited` -> `Nonempty` (#10647)

[33mcommit 5a7ae92d90cdfbbd759f97c78ac6e445ce7f3b34[m
Author: L <hi@llllvvuu.dev>
Date:   Sat Feb 17 16:56:54 2024 +0000

    feat: add `@[fun_prop]` to `continuous_{im,re,ofReal}` (#10624)
    
    
    
    Co-authored-by: L Lllvvuu <git@llllvvuu.dev>

[33mcommit fd9854c4cac4ec89f8ab5792a2b61844f1b34d8a[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Sat Feb 17 16:15:31 2024 +0000

    feat(CategoryTheory): equivalences of categories preserve effective epis (#10421)

[33mcommit 2ef6133e346abcf20a2e9f72360f97eddf3c583d[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Sat Feb 17 15:25:07 2024 +0000

    chore(LinearAlgebra): Introduce a `LinearMap.BilinForm` alias (#10632)
    
    This is one of the steps in #10553.
    
    Once we eliminate `_root_.BilinForm`, we can drop the `LinearMap.` prefix.
    
    Requested on Zulip [by me](https://leanprover.zulipchat.com/#narrow/stream/116395-maths/topic/Bounded.20bilinear.20forms/near/261981962) (2021), [by @kmill](https://leanprover.zulipchat.com/#narrow/stream/116395-maths/topic/.60bilinear_form.60/near/310675731) (2022), and perhaps one or two other places.
    
    
    
    Co-authored-by: Christopher Hoskin <christopher.hoskin@gmail.com>

[33mcommit 778c315f1f65cfb3fb544cfa9bf003d2ef16a72b[m
Author: kkytola <kalle.kytola@aalto.fi>
Date:   Sat Feb 17 14:51:26 2024 +0000

    feat: L√©vy-Prokhorov distance (#8719)
    
    This PR adds the L√©vy-Prokhorov distance on the space of finite measures on an emetric space, and shows that it is a pseudoemetric.
    
    
    
    Co-authored-by: kkytola <‚Äúkalle.kytola@aalto.fi‚Äù>
    Co-authored-by: Yury G. Kudryashov <urkud@urkud.name>
    Co-authored-by: kkytola <39528102+kkytola@users.noreply.github.com>

[33mcommit 4c32db76e6d9dfe0d8c777640c72e55127fe319a[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Sat Feb 17 12:31:36 2024 +0000

    chore(Algebra/Category): resolve porting notes `was not necessary in mathlib` (#10646)
    
    In this case https://github.com/leanprover-community/mathlib4/blob/4b36afcf085586739aa4e59d507a7d01d9a2dbbf/Mathlib/Algebra/Category/GroupWithZeroCat.lean#L55-L62
    
    and this case https://github.com/leanprover-community/mathlib4/blob/4b36afcf085586739aa4e59d507a7d01d9a2dbbf/Mathlib/Algebra/Category/GroupWithZeroCat.lean#L92-L94
    
    `was not necessary in mathlib` seems to mean that Lean 4 does less work to see through definitional equalities when looking for instances.
    
    I've commented the first instance out and it seems to be really needed since it returns errors, while the second one doesn't give any error when commented out.
    
    In this PR I've removed the porting note comment for the first instance and removed the whole second instance.
    
    Here is the associated comment on Zulip: https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Addressing.20porting.20notes.3F/near/421930836.

[33mcommit d02cf66e45e13cf8e2da0ac0a9a990667bc0159f[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Sat Feb 17 09:43:57 2024 +0000

    feat: Conjugate exponents in `‚Ñù‚â•0` (#10589)
    
    It happens often that we have `p q : ‚Ñù‚â•0` that are conjugate. So far, we only had a predicate for real numbers to be conjugate, which made dealing with `‚Ñù‚â•0` conjugates clumsy.
    
    This PR
    * introduces `NNReal.IsConjExponent`, `NNReal.conjExponent`
    * renames `Real.IsConjugateExponent`, `Real.conjugateExponent` to `Real.IsConjExponent`, `Real.conjExponent`
    * renames a few more lemmas to match up the `Real` and `NNReal` versions
    
    From LeanAPAP

[33mcommit 1a7456e3362b211ee3a0aa4116a8fec19086f51b[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Sat Feb 17 03:41:20 2024 +0000

    feat: several results about Monoid.Exponent (#9975)
    
    
    
    Co-authored-by: Jireh Loreaux <loreaujy@gmail.com>

[33mcommit 77ef919b809fd4d9368336195b3bd743929b6a94[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Sat Feb 17 03:12:26 2024 +0000

    chore(Algebra/TrivSqZeroExt): use `open scoped RightActions` (#10546)
    
    One lemma statement has changed (up to associativity).
    
    This is one of the more compelling justifications for #8909.

[33mcommit 09342771af657165cb0bcc3d47a2517f19140756[m
Author: Brendan Seamas Murphy <shamrockfrost@gmail.com>
Date:   Fri Feb 16 21:36:47 2024 +0000

    Refactor(Mathlib/CategoryTheory/Monoidal/Opposite): Make MonoidalOpposite a structure (#10642)
    
    Refactor `MonoidalOpposite` into a structure for consistency with `Opposite`.

[33mcommit 5644b99eb42ddfb5ea71651d490590fd7c0c122a[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Fri Feb 16 20:10:26 2024 +0000

    chore(Topology/DenseEmbedding): minimize open statements (#10636)
    
    Salvaged from #9981.

[33mcommit 56349361f89eb62d983fa8e43c91d2df5743228f[m
Author: Brendan Seamas Murphy <shamrockfrost@gmail.com>
Date:   Fri Feb 16 19:21:15 2024 +0000

    Feat: Add Yang-Baxter equation and the opposite braided monoidal category  (#10415)
    
    This PR adds some basics about monoidal opposite categories and their relation to the original category, as well as the Yang-Baxter equation for braided monoidal categories. It should be easy to define an action of the braid group on an object of a braided monoidal category from this.

[33mcommit 29c27c3944066c20b6e153a565886bc524c6af7d[m
Author: smorel394 <wieser.eric@gmail.com>
Date:   Fri Feb 16 17:31:44 2024 +0000

    feat(LinearAlgebra/{ExteriorAlgebra,CliffordAlgebra}): Functoriality of the exterior algebra and some lemmas about generation (#9718)
    
    This does a few things:
    - Define the algebra morphism `TrivSqZeroExt.map f` between trivial square-zero extensions induced by a linear map`f`, and establish some of its basic properties (functoriality, composition with the basic maps to/from `TrivSqZeroExt`). Note that we only consider the case of a commutative base ring, because the case of a general base ring requires morphisms of bimodules, which we do not have.
    - Define the algebra morphism `ExteriorAlgebra.map f` between exterior algebras induced by a linear map `f`. This is a straightforward application of the similar construction for Clifford algebras, but I think it is still useful to have. Basic properties of this construction are proved: functoriality, composition with `ExteriorAlgebra.Œπ`, `ExteriorAlgebra.ŒπInv` (this part uses the first point) and `ExteriorAlgebra.ŒπMulti`. Then exactness properties of the construction is studied:
      - If the linear map is surjective, then the map on exterior algebras is also surjective. This actually holds for Clifford algebras, so I added a lemma called `CliffordAlgebra.map_surjective` in `LinearAlgebra/CliffordAlgebra/Basic.lean`. For exterior algebras, the converse holds and is also proved.
      - If the linear map has a retraction, then the map on exterior algebras is injective. So if the base ring is a field, the map on exterior algebras is injective if the linear map is injective.
    
    - Establish some properties of `ExteriorAlgebra.ŒπMulti`:
      - `ExteriorAlgebra.ŒπMulti_range`: The range of `ŒπMulti R n` is contained in the `n`th exterior power (define here as `LinearMap.range (Œπ R : M ‚Üí‚Çó[R] ExteriorAlgebra R M) ^ n`).
      - `ExteriorAlgebra.ŒπMulti_span_fixedDegree`: This range spans the `n`th exterior power.
      - `ExteriorAlgebra.ŒπMulti_span`: The union over all `n` of the range of `ŒπMulti R n` spans the whole exterior algebra (this is in `LinearAlgebra/ExteriorAlgebra/Grading.lean` because the proof uses the graded module structure, but it might be possible to do something simpler).
    
    - Construct `ExteriorAlgebra.ŒπMulti_family`: This takes a natural number `n` and a family of vectors `v` indexed by a linearly ordered type `I`, and it returns the family of `n`-fold products of the `v i` in the exterior algebra, indexed by the set of finsets of `I` of cardinality `n`. (The point, to be proved in another PR, is that when `v` is a basis, then `ExteriorAlgebra.ŒπMulti_family R n v` is a basis of the `n`th exterior power.)
    
    
    
    Co-authored-by: morel <smorel@math.princeton.edu>
    Co-authored-by: smorel394 <67864981+smorel394@users.noreply.github.com>

[33mcommit cf6053db1f6d4b3744a1a570e07776f256863969[m
Author: Antoine Chambert-Loir <antoine.chambert-loir@u-paris.fr>
Date:   Fri Feb 16 16:23:21 2024 +0000

    bug (Mathlib.Data.Finset.Sym) : suppress global variable (m : Sym alpha n) (#10637)
    
    A global `variable {m : Sym Œ± n}` was present in `Mathlib.Data.Finset.Sym` with the very unfortunate effect that docs#Finset.sym_eq_empty was using it :
    
    ```
    theorem Finset.sym_eq_empty {Œ± : Type u_1} [DecidableEq Œ±] {s : Finset Œ±} {n : ‚Ñï}
        {m : Sym Œ± n} :
        Finset.sym s n = ‚àÖ ‚Üî n ‚â† 0 ‚àß s = ‚àÖ
    ```
    
     thus making it impossible to use to prove its goal.
     The line is modified, added in a few functions when needed.
    
    
    
    Co-authored-by: Antoine Chambert-Loir <antoine.chambert-loir@math.univ-paris-diderot.fr>

[33mcommit 2d36cb15a0eb76faf2df4862ba0a729a02337b05[m
Author: JADekker <114015169+JADekker@users.noreply.github.com>
Date:   Fri Feb 16 14:44:36 2024 +0000

    feat : refactor `IsUniform` through uniformMeasure (#10456)
    
    Refactor the definitions and proofs of IsUniform through the new `uniformMeasure`, which abstracts away from the need of a random variable and probability space.
    
    A future PR can refactor the PMF parts in terms of a `uniformMeasure`.
    
    This was #10141, which was split into a small PR to move the results (merged) and this one.

[33mcommit a2f488371f799d0fee41b8a9aa2924a75604c6e0[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Fri Feb 16 14:44:34 2024 +0000

    fix(TopologicalSpace/Basic): restore curly braces in `continuous_def` (#10110)
    
    These were placed on purpose; reverting them caused breakage downstream.
    
    
    
    Co-authored-by: grunweg <grunweg@posteo.de>
    Co-authored-by: Yury G. Kudryashov <urkud@urkud.name>

[33mcommit e554fa55d17410cb23c8fedd219e465fd17a5630[m
Author: Geoffrey Irving <irving@naml.us>
Date:   Fri Feb 16 13:14:42 2024 +0000

    feat: Add `Real.pi_nonneg = Real.pi_pos.le` (#10596)
    
    I think if `Real.exp_nonneg` exists as a separate lemma, `Real.pi_nonneg` is reasonable.  And it's useful as a separate lemma for Aesop purposes too.

[33mcommit b6bc497005c44fbb698cb2ec67bb51040b32f2ec[m
Author: Eric Rodriguez <ericrboidi@gmail.com>
Date:   Fri Feb 16 11:14:11 2024 +0000

    ci: properly check cache (#9933)
    
    Currently, the cache is locally existing in the runner, so the step that checks the cache trivially succeeds. This should stop any future silent cache failures.

[33mcommit 4bb195e198e9bafab58061c76973843a34ed785c[m
Author: Xavier Xarles <xavier.xarles@uab.cat>
Date:   Fri Feb 16 10:21:51 2024 +0000

    feat: A result on composition of lift of MonoidLocalization (#10373)
    
    Added a result on composition of lift of the localization map on Monoids. Modified some cases'.
    
    
    
    Co-authored-by: Xavier Xarles <56635243+XavierXarles@users.noreply.github.com>

[33mcommit 369f8d74a74ffed30e49f9416aff705c362fd683[m
Author: Felix-Weilacher <fweilach@andrew.cmu.edu>
Date:   Fri Feb 16 07:59:15 2024 +0000

    chore: move DiscreteTopology.secondCountableTopology_of_countable (#10615)
    
    Implement a porting note to move this instance to a much more natural file.

[33mcommit 49755ec81157cd652ce690a28fb689ecb556d831[m
Author: JADekker <114015169+JADekker@users.noreply.github.com>
Date:   Fri Feb 16 07:26:04 2024 +0000

    feat : add that a Sigma-compact space is Lindel√∂f (#10601)
    
    Add a small result: sigma-compact spaces are Lindel√∂f.

[33mcommit 3660a8f3955b041a7402b005bff03d7ed2eba7e9[m
Author: Kyle Miller <kmill31415@gmail.com>
Date:   Fri Feb 16 05:21:09 2024 +0000

    refactor: prefer `s ‚à© .` when passing to a subset of `s` (#10433)
    
    This is partial work to make `s ‚à© .` be consistently used for passing to a subset of `s`. This is sort of an adjoint to `(Subtype.val : s -> _) '' .`, except for the fact that it does not produce a `Set s`.
    
    The main API changes are to `Subtype.image_preimage_val` and `Subtype.preimage_val_eq_preimage_val_iff` in `Mathlib.Data.Set.Image`. Changes in other modules are all proof fixups.
    
    [Zulip discussion](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Passing.20to.20subsets.20of.20a.20subspace/near/420917406)

[33mcommit e4037a3ecfa48f37305065313d256f134663c391[m
Author: Scott Carnahan <128885296+ScottCarnahan@users.noreply.github.com>
Date:   Fri Feb 16 04:51:10 2024 +0000

    chore: Split HahnSeries file (#10595)
    
    The HahnSeries file is approaching 2000 lines, and I was hoping to add some more material on Hahn series in the near future.  This PR splits the material roughly according to what structure we see in the coefficients: `Basic` assumes that the coefficient type `R` has zero, `Addition` assumes addition, `Multiplication` more or less assumes some multiplicative structure.

[33mcommit 9e1a0e749c3243db13f3d40291100c79e212e341[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Fri Feb 16 04:01:36 2024 +0000

    feat(Data/Matrix/Notation): lemmas about numeric literals and small matrices (#10592)
    
    [Zulip](https://leanprover.zulipchat.com/#narrow/stream/113489-new-members/topic/Complex.20Numbers.20in.20Matrices/near/421653137)

[33mcommit 6ec9e85bc8827d9fe6d2081337948266fcbba02b[m
Author: L <hi@llllvvuu.dev>
Date:   Fri Feb 16 01:59:00 2024 +0000

    feat: improper integrals of 1/(1 + x^2) (#10234)
    
    
    
    Co-authored-by: L Lllvvuu <git@llllvvuu.dev>

[33mcommit e7fd6c924038fc4d1603cca0780c116be47fb1d7[m
Author: Wen Yang <yang-wen@139.com>
Date:   Fri Feb 16 01:10:31 2024 +0000

    feat(Data/Setoid): another way to define piecewise functions (#7273)
    
    Use `IndexedPartition` to define `piecewise` functions. This is natural for piecewise functions that are split into many pieces.‚Äã

[33mcommit e8f18827848efd3d280dac0a0f85eb716cd6e4ba[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Fri Feb 16 00:13:41 2024 +0000

    perf: speed up galActionHom_bijective_of_prime_degree (#10608)
    
    This takes the proof from approximately 3 seconds to half a second on my laptop.
    
    convert spent a fair amount of time dealing with the equality of Fintype.card calls with the same type but different Fintype instances. This sidesteps the issue by translating to Nat.card, which doesn't have the instance argument.

[33mcommit 6af8f3b3549befc7241823d9cacc965f4a47e897[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Thu Feb 15 23:16:46 2024 +0000

    refactor(Cardinal): redefine `toNat` and `toPartENat` (#10472)
    
    Redefine these operations in terms of `toENat`.

[33mcommit 25577a7ea684247114272a3d82bd1382baebe9aa[m
Author: Wen Yang <yang-wen@139.com>
Date:   Thu Feb 15 22:29:59 2024 +0000

    refactor : add namespace `UpperHalfPlane.ModularGroup` (#7885)
    
    Rename some definitions and theorems about $SL(2, ‚Ñ§)$ in `Analysis/Complex/UpperHalfPlane/Basic.lean` to place them in the namespace `UpperHalfPlane.ModularGroup`, in order to avoid the confusion with definitions and theorems about $SL(2, ‚Ñù)$. For example, `UpperHalfPlane.det_coe'` is renamed to `UpperHalfPlane.ModularGroup.det_coe'`, because we will have `UpperHalfPlane.SL2R.det_coe'`.
    
    
    
    Co-authored-by: Johan Commelin <johan@commelin.net>

[33mcommit 60c811a4f40b845096e5417c64b6c16c5306e264[m
Author: Riccardo Brasca <riccardo.brasca@gmail.com>
Date:   Thu Feb 15 21:17:39 2024 +0000

    feat: the absolute discriminant of cyclotomic fields (#10492)
    
    We compute the absolute discriminant of cyclotomic fields.
    
    
    From flt-regular.

[33mcommit 9c73cb5891df657c60599a6d3e3e001a3fc49d80[m
Author: David Renshaw <dwrenshaw@gmail.com>
Date:   Thu Feb 15 20:02:02 2024 +0000

    chore: simplify `birthday` proof; avoiding max recursion depth is easier now (#10602)
    
    Now that `decide := false` is the default for simp, we can use a plain `simp only` instead of two `rw` steps.
    I observe (via `set_option trace.profiler true`) the new proof to take about 0.03 seconds whereas the current one
    takes about 0.05 seconds.
    If I add in `Nat.descFactorial` to the simp lemmas (as it used to be, according to the comment), the proof slows down
    to about 0.10 seconds.

[33mcommit 18b3970ebfe5dd587a835f68ce237fdda232ef8d[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Thu Feb 15 20:02:01 2024 +0000

    feat: Variant of structure theorem of finite abelian groups (#10587)
    
    where the trivial factors have been dropped.
    
    I have the idea of a general approach to dropping trivial terms from a direct sum. However it is too complicated for me to unsorry it and overkill here, so I am leaving it as a comment.
    
    From LeanAPAP

[33mcommit c5234383dcea960c0e3172906946569b6f978950[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Thu Feb 15 20:02:00 2024 +0000

    chore: Golf `exists_pow_eq_one_of_zpow_eq_one` (#10559)
    
    and replace it by two more explicit lemmas

[33mcommit a39f83f36132e50a9adfe463af924b3668174c79[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Thu Feb 15 20:01:59 2024 +0000

    refactor(Set/Finite): redefine using `_root_.Finite` (#10542)

[33mcommit dc082806f6cbc47703219fb590f099a2ca17ea0c[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Thu Feb 15 20:01:58 2024 +0000

    chore(CauSeq): Cleanup (#10530)
    
    * Rename `Data.Real.CauSeq` to `Algebra.Order.CauSeq.Basic`
    * Rename `Data.Real.CauSeqCompletion` to `Algebra.Order.CauSeq.Completion`
    * Move the general lemmas about `CauSeq` from `Data.Complex.Exponential` to a new file `Algebra.Order.CauSeq.BigOperators`
    * Move the lemmas mentioning `Module` from `Algebra.BigOperators.Intervals` to a new file `Algebra.BigOperators.Module`
    * Move a few more lemmas to earlier files
    * Deprecate `abv_sum_le_sum_abv` as it's a duplicate of `IsAbsoluteValue.abv_sum`

[33mcommit 06dbc0dbad83a289db80117669a6066f01d57ec5[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Thu Feb 15 20:01:57 2024 +0000

    chore: golf Polynomial.Degree.Definitions (#10526)

[33mcommit abef58c0891024902c6d9b175d3b711b9e1961a4[m
Author: igorkhavkine <igor@tichy>
Date:   Thu Feb 15 19:01:02 2024 +0000

    refactor(MeasureTheory/Function/UniformIntegrable): removed needlessly explicit argument (#10599)
    
    A `variable` declaration made `(Œº)` an explicit argument, even though it could be deduced from other arguments in almost all cases. The declaration was removed and the change propagated to other files.

[33mcommit 2be6479c7bfc10496ba5c55e7d20de4c6294f046[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Thu Feb 15 19:01:01 2024 +0000

    chore(Topology/GDelta): use new-style dot notation (#10583)
    
    Rename many `isGŒ¥_some` lemmas to `IsGŒ¥.some`.
    Also resolve a TODO.

[33mcommit ba213d0c67b0214df13890513e7697e05642e421[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Thu Feb 15 19:01:00 2024 +0000

    chore(Topology/OrderClosed): review API (#10570)
    
    - Generalize lemmas from `OrderClosedTopology`
      to `ClosedIciTopology` or `ClosedIicTopology`.
    - Deprecate `isClosed_le'`/`isClosed_ge'`,
      use more readable `isClosed_Iic`/`isClosed_Ici` instead.

[33mcommit 1e0f1e2aec9614cf5090e232bf34508a2cfe6d25[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Thu Feb 15 19:00:59 2024 +0000

    feat: `‚Ñù‚â•0` is a star-ordered ring (#10547)
    
    and other basic lemmas, including a version of Cauchy-Schwarz stated using `Real.sqrt`
    
    From LeanAPAP
    
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 4b36afcf085586739aa4e59d507a7d01d9a2dbbf[m
Author: Jz Pan <acme_pjz@hotmail.com>
Date:   Thu Feb 15 18:13:06 2024 +0000

    feat(Algebra/CharP/*): add `RingHom.(charP|expChar)[_iff]` (#10574)
    
    similar to `RingHom.charZero[_iff]`

[33mcommit 702cfa15bd0ac0facfa59082954c0a8d3e617b98[m
Author: Johan Commelin <johan@commelin.net>
Date:   Thu Feb 15 18:13:06 2024 +0000

    chore(.github/workflows): add label after maintainer merge (#10483)
    
    By automatically adding a label,
    it is easier to find PRs that have been maintainer merged
    but slipped through some crack.

[33mcommit dc1309b82b4ac4b068035a12a8b5e0725a2146d1[m
Author: Thomas Browning <tb65536@uw.edu>
Date:   Thu Feb 15 17:35:27 2024 +0000

    feat(Analysis/Complex/Circle): `UniformGroup` instance on `circle` (#10577)
    
    This PR adds a `UniformGroup` instance on `circle`.

[33mcommit cfad572bbf3626b66e9e6f7ba6d83d6a41abfe2d[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Thu Feb 15 17:35:26 2024 +0000

    refactor: drop some `*HomClass`es (#10544)
    
    Drop classes that mix `OrderHomClass` with algebraic hom classes.

[33mcommit 15a6827f8e9642f78a07d7e4d90fcd795ecfcccc[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Thu Feb 15 16:16:02 2024 +0000

    chore(Topology/Order): delete 2 lemmas (#10576)
    
    They were deprecated since the file was ported in #2052

[33mcommit 9e9d545b62e5d45ba638324ebd9265a52370e968[m
Author: Jz Pan <acme_pjz@hotmail.com>
Date:   Thu Feb 15 16:16:01 2024 +0000

    feat(FieldTheory/Perfect): add `roots_X_pow_char[_pow]_sub_C[_pow]` (#10573)
    
    corollaries of `roots_expand[_pow]`

[33mcommit f23db5addcfc782a999a6cf4c8e686fad0afd9f8[m
Author: Jz Pan <acme_pjz@hotmail.com>
Date:   Thu Feb 15 16:16:00 2024 +0000

    feat: add some simple results regarding polynomials (#10572)
    
    - `Polynomial.map_contract`: `Polynomial.map` and `Polynomial.contract` commutes
    - `Irreducible.natDegree_pos`: an irreducible polynomial over a field must have positive degree (not true if it's not a field)
    - `Polynomial.Monic.nextCoeff_pow`: corollary of `Polynomial.Monic.nextCoeff_mul`
    - `Polynomial.exists_monic_irreducible_factor`: a polynomial over a field which is not a unit must have a monic irreducible factor (not true if it's not a field)

[33mcommit 51f04865fc2d77e34c805f6eb446264787fe9a7d[m
Author: Jz Pan <acme_pjz@hotmail.com>
Date:   Thu Feb 15 16:15:59 2024 +0000

    feat: add `Multiset.toFinset_(eq_singleton|card_eq_one)_iff` (#10571)

[33mcommit 9f7fef49601a10ddd3310c4376ca52e69a025ca2[m
Author: Johan Commelin <johan@commelin.net>
Date:   Thu Feb 15 16:15:58 2024 +0000

    chore(LinearAlgebra/Matrix/Charpoly): place more decls in Matrix namespace (#10488)

[33mcommit 8257db381a012345f5e63b7790224343c3cc7bc1[m
Author: negiizhao <egresf@gmail.com>
Date:   Thu Feb 15 16:15:57 2024 +0000

    chore(FieldTheory/PolynomialGaloisGroup): move lemmas, reduce imports (#9886)
    
    #dependencies:
    `Mathlib.FieldTheory.PolynomialGaloisGroup`: 1826->1323
    `Mathlib.Analysis.Complex.Polynomial`: 1811->1826
    
    This needed one small change to a moved proof because `conj` is not allowed as an identifier when the `ComplexConjugate` locale is open.
    
    
    
    
    Co-authored-by: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>

[33mcommit 870cb7db320a03b74f10bcfecdc9be58f00303d6[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Thu Feb 15 16:15:56 2024 +0000

    feat: add a `TietzeExtension` class (#9788)
    
    This adds a class `TietzeExtension` to encode the Tietze extension theorem as a type class that can be satisfied by various types. For now, we provide instances for `‚Ñù`, `‚Ñù‚â•0`, `‚ÑÇ`, `IsROrC ùïú`, pi types, product types, as well as constructors via homeomorphisms or retracts of a `TietzeExtension` space, and also a constructor for finite dimensional topological vector spaces.

[33mcommit 88ec96d50bd2e52f4dc048710b8f32bb60ea4b0f[m
Author: Jeremy Toh <7417963+deepimpactmir@users.noreply.github.com>
Date:   Thu Feb 15 15:14:39 2024 +0000

    fix(Ring.Basic): fix typo in doc for `evalAdd` (#10586)
    
    Fix typo

[33mcommit dfb8f608e9debce7e59ae5a4ab2d50d662d822c6[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Thu Feb 15 15:14:38 2024 +0000

    chore(MonoidAlgebra/Grading): drop `DecidableEq` assumption (#10578)

[33mcommit abf7370f31ece17067aba8a34ddbc87031dfe516[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Thu Feb 15 14:03:56 2024 +0000

    style(Order): use `where __ := x` instead of `:= { x with }` (#10588)
    
    The former style encourages one parent per line, which is easier to review and see diffs of. It also allows a handful of `:= fun a b =>`s to be replaced with the less noisy `a b :=`.
    
    A small number of `inferInstanceAs _ with`s were removed, as they are automatic in those places anyway.

[33mcommit 30a9315c0ea94d52c175dfde72708aa3754c8002[m
Author: Shad Amethyst <adrien.burgun@orange.fr>
Date:   Thu Feb 15 13:05:15 2024 +0000

    feat(GroupTheory/GroupAction): define MulAction.period and create GroupTheory/GroupAction/Period (#9490)
    
    Defines `MulAction.period g a` as a wrapper around `Function.minimalPeriod (fun x => g ‚Ä¢ x) a`,
    allowing for some cleaner proofs involving the period of a group action.
    The existing `MulAction.*_minimalPeriod_*` lemmas are changed to be defined using their now-preferred `MulAction.*_period_*` counterparts,
    although they will only be made deprecated in another pull request.
    The `Mathlib.GroupTheory.GroupAction.Period` module is also created, for additional lemmas around `MulAction.period`.
    
    Some core lemmas need to remain in `Mathlib.Dynamics.PeriodicPts`, as they are needed for `ZMod` and the quotient group.

[33mcommit d43978d8598f6bd10470f95c1f828c34b39faba2[m
Author: Oliver Nash <github@olivernash.org>
Date:   Thu Feb 15 11:58:43 2024 +0000

    feat: add lemma `LinearMap.trace_lie` and move `Bracket` instance (#10584)
    
    It is useful to have access to this bracket definition without having to import a bunch of Lie algebra theory.

[33mcommit cbef07bb09341f356fb1b81e2a5bffd989178215[m
Author: Mar√≠a In√©s de Frutos-Fern√°ndez <mariaines.dff@gmail.com>
Date:   Thu Feb 15 11:05:39 2024 +0000

    feat(Topology.Algebra.Valuation): add integer_isOpen (#8148)
    
    The unit ball in a valued ring is open.

[33mcommit 2e99d8afcd674e12726da263e705b81a6fec62e3[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Thu Feb 15 09:58:49 2024 +0000

    chore(Data/Finset): drop 2 `DecidableEq` assumptions (#10575)
    
    In 1 case, golf the proof.

[33mcommit de992dc0a340fc7884b30615a46e186373dcb07c[m
Author: Geoffrey Irving <irving@naml.us>
Date:   Thu Feb 15 09:58:48 2024 +0000

    feat(Algebra/Order/AbsoluteValue): Add AbsoluteValue.{le_add,sub_le_add} (#10561)
    
    These triangle inequalities bound `abv (a + b)` from below and `abv (a - b)` from above, and are essentially `AbsoluteValue.le_sub` and `.add_le` with signs flipped, respectively.

[33mcommit 9c4bc63f9e73172c73cf338328258400e62f5aeb[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Thu Feb 15 09:33:31 2024 +0000

    chore(Normed/Group/Tannery): drop `DecidableEq` assumption (#10579)

[33mcommit cc424f68c2fdde580e399b1d80e3400fd382bd4f[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Thu Feb 15 08:23:00 2024 +0000

    feat: `Unique (Set.Icc a a)` (#10567)

[33mcommit 38c547ff15964e9e2251bd7da687ab8465dfb307[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Thu Feb 15 07:38:04 2024 +0000

    feat(Bornology/Constructions): drop `[Finite Œπ]` assumption (#10582)

[33mcommit 2288eab633b105bd27d662fac6dd430e1fb122f7[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Thu Feb 15 06:24:16 2024 +0000

    chore(LinearAlgebra): golf (#10569)
    
    - rename `span_eq_top_of_linearIndependent_of_card_eq_finrank`
      to `LinearIndependent.span_eq_top_of_card_eq_finrank`;
    - add a version `LinearIndependent.span_eq_top_of_card_eq_finrank'`
      with different typeclass assumptions;
    - use `rfl` to prove `Algebra.discr_def`;
    - golf `Algebra.discr_not_zero_of_basis`.

[33mcommit c9a8b43ee3517aaed7ab3439cdf6eef6bf3421e7[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Thu Feb 15 06:24:15 2024 +0000

    feat(Topology/Constructions): add `continuous_bool_rng` (#10513)
    
    Provide continuity criteria for functions `X ‚Üí Bool`
    and, more generally, `X ‚Üí Y`, where `Y` has discrete topology.

[33mcommit 775d9b8f3a677c74ac9f89b289656ab7b5f54c63[m
Author: Matthew Robert Ballard <matt@mrb.email>
Date:   Thu Feb 15 05:46:21 2024 +0000

    chore(Topology.GDelta): remove porting note (#10557)
    
    A `TODO` was added inside a porting note. We change it to a `TODO`.

[33mcommit dabdf31a3632d93aaeb420919ca78019e1b22f1a[m
Author: Scott Morrison <scott@tqft.net>
Date:   Thu Feb 15 02:51:27 2024 +0000

    chore: bump Std (#10568)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 1297e8b59251915a34ee66ecf362118837c02e02[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Thu Feb 15 01:43:46 2024 +0000

    chore: Better names for `(‚åäa‚åã‚Çä : Œ±) = ‚åäa‚åã` (#10252)
    
    The new lemma names are more symmetric, hence hopefully more discoverable

[33mcommit d639f57a730fdcafba8a63fcdfc77640cffd27db[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Thu Feb 15 00:39:12 2024 +0000

    chore(StronglyMeasurable): Rename monotonicity along absolutely continuous measures (#10564)
    
    Rename `AEStronglyMeasurable.mono'` to `AEStronglyMeasurable.mono_ac`.
    
    Partly forward-port https://github.com/leanprover-community/mathlib/pull/18863
    
    
    
    Co-authored-by: Yury G. Kudryashov <urkud@urkud.name>

[33mcommit 8920fa9680289e6bbfeb8c3f8b8c9cc63d7e862f[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Feb 14 23:28:23 2024 +0000

    chore(Topology/Order): golf, deprecate (#10554)
    
    - golf `atBot_le_nhds_bot` and `atTop_le_nhds_top`;
    - deprecate them;
    - use `tendsto_atTop_iInf` instead in `CondCdf`.

[33mcommit 6fc843475f3f2de08b5490ddcbd7ffa5988ad245[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Wed Feb 14 23:28:22 2024 +0000

    chore: Turn `Complex.int_cast_abs` around (#10543)
    
    A goal about real numbers should not suddenly turn into a goal about complex numbers!

[33mcommit 20a33190c3c7fce6ae1b56085466802e22b10a06[m
Author: Kyle Miller <kmill31415@gmail.com>
Date:   Wed Feb 14 22:15:47 2024 +0000

    refactor(Tactic/Explode): use ppConst that was upstreamed to std (#10552)

[33mcommit 4fe12e026f062898b5b17431ab36e7696ad12248[m
Author: Johan Commelin <johan@commelin.net>
Date:   Wed Feb 14 22:15:46 2024 +0000

    chore(RingTheory/MvPolynomial/Homogeneous): misc lemmas on homogeneous polyomials (#10478)

[33mcommit 600ca01668c764802f65a480e362436890c15778[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Wed Feb 14 22:15:45 2024 +0000

    perf: Use spread notation in ring transfer definitions (#10131)
    
    Make sure that `Function.Injective.somethingRing` looks like
    ```
    def ... : SomethingRing Œ≤ where
      toA := hf.a f ...
      __ := hf.b f ...
      __ := hf.c f ...
    ```
      if `SomethingRing Œ± extends A Œ±, B Œ±, C Œ±`.
    
    This should hopefully give a performance boost in applications.
    
    Incidentally, there were a few missing transfer definitions, so I added them as I needed them.
    
    
    
    
    Co-authored-by: Matthew Ballard <matt@mrb.email>
    Co-authored-by: Johan Commelin <johan@commelin.net>

[33mcommit 8f52544748b2f2ae8678b96bb369de0f3ab4ad51[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Wed Feb 14 21:13:00 2024 +0000

    feat(Topology/Order): assorted lemmas (#10556)
    
    * Add `upperBounds_closure`, `lowerBounds_closure`, `bddAbove_closure`, `bddBelow_closure`.
    * Add `IsAntichain.interior_eq_empty`.
    * Generalize `nhds_left'_le_nhds_ne` and `nhds_right'_le_nhds_ne` to a `Preorder`.
    
    Partly forward-ports https://github.com/leanprover-community/mathlib/pull/16976

[33mcommit b2c40e862ea3880a0a74b4ff8db7a30f260674c7[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Feb 14 20:20:00 2024 +0000

    chore(Perm/Sign): `Fintype` -> `Finite` (#10549)

[33mcommit 30e83bf01a2c9f78c6d85567e5546b35a571149f[m
Author: Markus Himmel <markus@himmel-villmar.de>
Date:   Wed Feb 14 19:13:47 2024 +0000

    feat: finality of a certain functor related to colimits of representable presheaves (#10339)
    
    This is the final missing ingredient of the [recognition theorem for Ind-objects (Prop. 4.8)](https://ncatlab.org/nlab/show/ind-object#recognition_of_indobjects), so after this is done it's probably finally time to get the definition of an Ind-object into mathlib.

[33mcommit 816a7eb4fb64d2e1ba8de375ac0a4e64ffd61f2d[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Wed Feb 14 19:13:46 2024 +0000

    feat: add a `DilationEquiv` for scaling in normed spaces (#10009)

[33mcommit aa79ce0735a5e378a0dbc51eeff43676a644bfb3[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Feb 14 18:23:35 2024 +0000

    chore(OrderOfElement,Sylow): `Fintype` -> `Finite` (#10550)

[33mcommit 765353a8b532e94e90e394b95462e0a1e613fe56[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Wed Feb 14 17:45:38 2024 +0000

    feat(CategoryTheory/Sites): add a left version of `sheafCongr` (#10423)

[33mcommit e0e7b0c4c3ffd1cbbe42a47e6c1db573547a0845[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Wed Feb 14 17:09:15 2024 +0000

    chore(CategoryTheory/Limits/HasLimits): golf proofs (#10532)

[33mcommit f0a799f72549f46006d2a7d4bcdf8526c8507965[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Wed Feb 14 15:41:37 2024 +0000

    feat: connect AddMonoidAlgebra.supDegree and Polynomial.natDegree/degree (#10518)

[33mcommit 8e570e7948c5ea01ac6aef2ba46d94be6f8b31e8[m
Author: Scott Carnahan <128885296+ScottCarnahan@users.noreply.github.com>
Date:   Wed Feb 14 15:41:35 2024 +0000

    feat: `DistribSMul R R` instance for `NonUnitalNonAssocSemiring R` (#10162)
    
    Nonunital Nonassociative semirings act (in some sense) on themselves by multiplication, and this multiplication satisfies the requirements of the `DistribSMul` class.  This is part of a refactor of HahnSeries that includes having `HahnSeries Œì R` act on `HahnSeries Œì V` for `V` an `R`-module.
    
    I'm not sure about the best file for this instance.  `#find_home!` suggested `Mathlib.Algebra.SMulWithZero`, but it looks a bit strange there.
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit e1a19e31b523f061a6c81e42d6f83c7d7b8e25cd[m
Author: L <hi@llllvvuu.dev>
Date:   Wed Feb 14 14:50:37 2024 +0000

    feat: dot notation for `IsTheta.add_isLittleO`, and `add_comm`ed variants (#10386)
    
    BREAKING CHANGE: Change `IsTheta.add_isLittleO` into a dot-notation statement, in line with the existing `IsBigO.add_isLittleO`. Move the current `IsTheta.add_isLittleO` statement to `IsLittleO.right_isTheta_add'`, in line with the existing `IsLittleO.right_isBigO_add`.
    
    feat: Add `add_comm`ed variants of related lemmas.
    
    These changes smoothen the flow when proving e.g.
    `a + b + c + d + e + f =Œò[l] d`.
    
    
    
    
    Co-authored-by: L Lllvvuu <git@llllvvuu.dev>

[33mcommit 8658c57e5c5f58de63e87e63bb7297154f7e3217[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Wed Feb 14 14:03:17 2024 +0000

    feat: `NormedAlgebra.complexToReal` and other `RestrictScalars` instances (#10374)
    
    This adds some instances regarding normed algebra structures to `RestrictScalars` to mimic those for normed spaces.
    
    In addition, given a normed `‚ÑÇ`-algebra, this puts a normed `‚Ñù`-algebra structure on the same space. This is *not* adding any new data instances, as these already exist from `Algebra.complexToReal`.

[33mcommit ca4293b7fdda24c59db378d1983eff7185426ae5[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Wed Feb 14 12:29:09 2024 +0000

    feat: add the coercion from types satisfying `StarAlgEquivClass` to `StarAlgEquiv` (#10368)

[33mcommit 73913b694359086496387b6b677e77f6d0d8a325[m
Author: Yuma Mizuno <mizuno.y.aj@gmail.com>
Date:   Wed Feb 14 11:28:56 2024 +0000

    feat(CategoryTheory/Bicategory): adjunctions as Kan extensions (#10045)
    
    We also show that a left adjoint commutes with left Kan extensions.
    - [x] depends on: #10178

[33mcommit ed633828ce6ef9b4d3cc85531672daa27fa38404[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Wed Feb 14 10:22:14 2024 +0000

    refactor(Probability/Kernel/CondCdf): mv atBot_le_nhds_bot/top (#10132)
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit b94dc6892eaece45d3dffc95d00e6efd6ce29aa7[m
Author: Wrenna Robson <wren.robson@gmail.com>
Date:   Wed Feb 14 10:22:13 2024 +0000

    feat(GroupTheory/Submonoid/Units): Add `Submonoid.units` and related definitions and lemmas. (#9006)
    
    The subgroup of the type of units added in this PR is something we have in other guises, which are somewhat less useful for some forms of working. The intention is to provide different options depending on how you want to think about the group of units in a submonoid.
    
    
    
    Co-authored-by: lines <34025592+linesthatinterlace@users.noreply.github.com>
    Co-authored-by: Johan Commelin <johan@commelin.net>

[33mcommit a24907839ba28f0009af978642d62e1cc3076038[m
Author: Kyle Miller <kmill31415@gmail.com>
Date:   Wed Feb 14 09:39:28 2024 +0000

    feat: `DecidableEq` for `Multiset.ToType` (#10505)
    
    Also clean up some of the documentation, for instance removing the claim that you shouldn't use `Multiset.ToType` directly.

[33mcommit 1c8f2465affc9eb4e3f803c8cf1f4a2688d88f89[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Wed Feb 14 09:39:28 2024 +0000

    feat(Analysis/Asymptotics/Asymptotics): generalize smul lemmas to normed rings (#9811)
    
    Using `BoundedSMul` instead of `NormedSpace` makes these true more generally. The old proofs do not generalize, so are replaced with copies of the `mul` proofs.
    
    The `const_smul_self` lemmas match the existing `const_mul_self` ones.
    
    `shake` then reports that the imports can be reduced.

[33mcommit 166c0adb5c640595997cc8722e711e5a7b6fbcb8[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Wed Feb 14 09:39:27 2024 +0000

    feat(LinearAlgebra/CliffordAlgebra): isomorphism for direct sums of vector spaces (#7644)
    
    The main result here is `CliffordAlgebra (Q‚ÇÅ.prod Q‚ÇÇ) ‚âÉ‚Çê[R] (evenOdd Q‚ÇÅ ·µç‚äó[R] evenOdd Q‚ÇÇ)`.
    
    The proof of `map_inl_mul_map_inr_of_mem_evenOdd` is rather ugly here, but I suspect to pull off an `ext`-based proof, we need a bunch of missing infrastructure:
    * Morphisms of graded algebras
    * The tensor product of graded algebras *as a graded algebra*
    
    
    
    Co-authored-by: Oliver Nash <github@olivernash.org>

[33mcommit 30c9985e8dbbabdf3c13f49d381769c18596a1af[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Feb 14 08:30:08 2024 +0000

    feat: an irreducible real polynomial has degree ‚â§2 (#10431)

[33mcommit da3c42f780ef4a3601634dc0e4cfbb664d2ed76f[m
Author: Shad Amethyst <adrien.burgun@orange.fr>
Date:   Wed Feb 14 08:30:07 2024 +0000

    feat(Algebra/Group): Add commute_iff_eq and a few lemmas on conjugation (#9870)
    
    This introduces some helpful, small lemmas around conjugation in groups, as well as `commute_iff_eq`,
    which removes the need to use `show` or `unfold` to get an expression of the form `a * b = b * a` to prove.

[33mcommit fabcf9d9161294482ec11bcbfe487324c7bd42f5[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Wed Feb 14 08:30:06 2024 +0000

    feat(Algebra/Group): Miscellaneous lemmas (#9387)
    
    From LeanAPAP, LeanCamCombi and PFR

[33mcommit bfaf1a5ed1faab4a39d0aab7550a0eebb309193d[m
Author: Mario Carneiro <mcarneir@andrew.cmu.edu>
Date:   Wed Feb 14 08:30:05 2024 +0000

    feat: simp config opts in norm_num (#7112)
    
    This adds support for `norm_num (config := ...)`, which just forwards the config args to `simp`. The case of `{decide := false}` came up in https://leanprover.zulipchat.com/#narrow/stream/113489-new-members/topic/Prove.20decidable.20statement.20by.20evaluation/near/390390131 .
    
    
    
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>

[33mcommit 98a6b5385c9bf89c854d5c1622c79decffc83acb[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Wed Feb 14 07:40:12 2024 +0000

    chore: redistribute tags for `fun_prop` regarding continuity across the library (#10494)
    
    
    
    
    Co-authored-by: Yury G. Kudryashov <urkud@urkud.name>

[33mcommit f148b92ca83f87204086e7f2ed1ecf0957a42768[m
Author: Christian Merten <joel.riou@universite-paris-saclay.fr>
Date:   Wed Feb 14 07:40:11 2024 +0000

    feat(CategoryTheory/Galois): decomposition in connected components (#10419)
    
    Shows that any object in a Galois category is the sum of its connected components. Also shows that the connected components are unique up to isomorphism.
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>
    Co-authored-by: Christian Merten <christian@merten.dev>

[33mcommit 7a64c731fc969c7b2866d9c8aecdc74cfd33c77b[m
Author: Xavier Roblot <46200072+xroblot@users.noreply.github.com>
Date:   Wed Feb 14 07:40:10 2024 +0000

    chore: Some constants in `CanonicalEmbedding` should be `NNReal` and not `ENNReal` (#10032)
    
    
    
    Co-authored-by: Yury G. Kudryashov <urkud@urkud.name>

[33mcommit d70cb7c094987a81b6a048a3472cc9891710b9f2[m
Author: Scott Carnahan <128885296+ScottCarnahan@users.noreply.github.com>
Date:   Wed Feb 14 06:30:12 2024 +0000

    chore: Split LinearAlgebra/RootSystem/Basic into two files. (#10523)
    
    I put the definitions into the new file `Defs` and left the results in `Basic`.  Also, I added some todos.
    
    I welcome any suggestions for improved splitting schemes.

[33mcommit 3984e585e2cfcc3c7c0265baec0986f277ff9df8[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Feb 14 06:30:12 2024 +0000

    chore(Data/Fin): move `Fin.equiv_iff_eq` (#10522)
    
    The new proof is longer but I need this lemma before `Fintype`
    for a future refactor, see #9794

[33mcommit b5ee7ad87b732542b1bc11b1fb31c46a0d67c93f[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Wed Feb 14 06:30:11 2024 +0000

    chore: small fixes around Nat.find/findGreatest (#10512)

[33mcommit 5cc14ef3af7b0cfd7d843fc80edaea3c91a22244[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Feb 14 06:30:10 2024 +0000

    feat(ENat): add several lemmas (#10508)
    
    Add lemmas needed for #10472

[33mcommit e862bf834e574405cbcb59f4f55349b313a66e3b[m
Author: Bolton Bailey <bolton.bailey@gmail.com>
Date:   Wed Feb 14 06:30:09 2024 +0000

    chore: add VSCode branch protection to master (#10322)
    
    Adds branch protection to VSCode for the master branch, so users don't commit accidentally.
    
    <img width="2560" alt="Screenshot 2024-02-06 at 10 30 14 PM (2)" src="https://github.com/leanprover-community/mathlib4/assets/8030599/fcdfb49d-f14a-4b9d-888c-ed24f9edcd75">

[33mcommit 35df9089253cbc33b55d1004971411882318c2ed[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Feb 14 06:30:08 2024 +0000

    feat(Analysis/Convex): homeomorphism to the ball (#10136)
    
    Prove that for a convex bounded set `s` with nonempty interior,
    there exists a homeomorphism
    that sends `interior s` to `ball 0 1` and `closure s` to `closedBall 0 1`.
    
    Motivated by lemmas in Shamrock-Frost/BrouwerFixedPoint

[33mcommit e3c9f965f04a98ce74c7d60cc0c49d22186a9ef7[m
Author: Scott Morrison <scott@tqft.net>
Date:   Wed Feb 14 05:27:07 2024 +0000

    chore: bump Std (#10514)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>
    Co-authored-by: Tobias Grosser <tobias@grosser.es>

[33mcommit d5d33e01ce1a5bdbbf7cac58dcc7de20dcc1aa8e[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Wed Feb 14 04:22:40 2024 +0000

    feat: add `Submodule.Quotient.instBoundedSMul` (#10520)
    
    The proof needs minimal modifications to go through for the inequality case.

[33mcommit f499c227bc1644861db4972b6003dffeec926065[m
Author: damiano <adomani@gmail.com>
Date:   Wed Feb 14 04:22:39 2024 +0000

    chore: remove `include/omit` porting notes (#10517)
    
    See [this Zulip discussion](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Addressing.20porting.20notes.3F/near/421342495).

[33mcommit 4ef20c4aaa870cf65bdc8377f73a04aa7a79981f[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Wed Feb 14 04:22:38 2024 +0000

    chore: remove useless `include` porting note (#10516)
    
    This one was added by myself and not removed in #10503.

[33mcommit ff139a35046c34389d62b49f3a0ec9062f467b03[m
Author: Matthew Robert Ballard <matt@mrb.email>
Date:   Wed Feb 14 04:22:37 2024 +0000

    chore(Order.Grade): remove porting notes (#10496)
    
    Simple changes to remove porting notes.

[33mcommit de51f2a66890c085f45855fac8b97162e8b7cd2d[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Wed Feb 14 04:22:36 2024 +0000

    feat: injectivity of continuous linear maps is an open condition (#10487)
    
    in finite-dimensional spaces over a complete field. This is used to showing that immersions are open.
    NB: this result is false for general continuous maps (only surjectivity is open there).
    
    From the sphere-eversion project.

[33mcommit bdcbe09293f25d483a4e493c7f184fab4d39e6b3[m
Author: Ruben Van de Velde <timorcb@gmail.com>
Date:   Wed Feb 14 03:21:19 2024 +0000

    feat: add SModEq.instTrans (#10495)

[33mcommit 525d753940c3060256e87fe9a43490f648b53685[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Wed Feb 14 03:21:19 2024 +0000

    feat(MeasureTheory/Integral/IntervalIntegral): integral_Iic_add_Ioi (#10485)
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit 3809ca5a91093c0cbc38bb24758232523fa14aee[m
Author: Jz Pan <acme_pjz@hotmail.com>
Date:   Wed Feb 14 03:21:18 2024 +0000

    feat(FieldTheory/Perfect): add various convenient lemmas for `iterateFrobenius[Equiv]` (#10405)

[33mcommit 72068a1591c5bfcb79725d92504b7e3bf6f9a0be[m
Author: Johan Commelin <johan@commelin.net>
Date:   Wed Feb 14 03:21:17 2024 +0000

    feat(LinearAlgebra/Charpoly): the universal characteristic polynomial (#10358)

[33mcommit e50aeb4df33dc28e56df042d2b0f68b202ef505e[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Wed Feb 14 03:21:16 2024 +0000

     chore: Move LinearMap.ker to a new file  (#10233)
    
    This shortens `Mathlib.LinearAlgebra.Basic`, which is both longer than we like and doesn't have a clear scope.

[33mcommit 5bade013895117d13fbaea7f5a51872554dd16cc[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Wed Feb 14 03:21:15 2024 +0000

    feat: Variants of monotonicity from existence of a derivative (#10229)
    
    This PR provides variants of `deriv` lemmas stated in terms of `HasDerivAt`
    
    From LeanAPAP

[33mcommit 129c0e0e513c5b6c2f91eef85df579b140b002a2[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Wed Feb 14 03:21:14 2024 +0000

    refactor: Use `p‚Åª¬π` instead of `1 / p` in conjugate exponents (#10216)
    
    I am keeping some `1 / p` lemmas behind to keep the diff small but the goal is to get rid of them entirely.

[33mcommit 1f2d1550752cfa09f431330b650b784e64e0c60e[m
Author: Jeremy Tan Jie Rui <reddeloostw@gmail.com>
Date:   Wed Feb 14 03:21:13 2024 +0000

    feat: complex arctangent (#9889)

[33mcommit 93d4e6e3df3108a31f335016085b1f7f812f7858[m
Author: Jujian Zhang <jujian.zhang1998@outlook.com>
Date:   Wed Feb 14 03:21:12 2024 +0000

    feat(Algebra/Category/Ring/Constructions): categorical product of rings is the cartesian product (#9394)
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 3b7004611f97bb19a895fc883e8620d4397c65de[m
Author: Yongyi <yongyi781@outlook.com>
Date:   Wed Feb 14 03:21:12 2024 +0000

    feat: ZMod cyclic equivs (#9038)
    
    
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>
    Co-authored-by: Johan Commelin <johan@commelin.net>

[33mcommit be086f5b6c162e614bb4618c9e4a6d9e4c1340ae[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Feb 14 02:40:52 2024 +0000

    chore(Analysis/SpecificLimits/Normed): drop unneeded import (#10407)

[33mcommit 84a99a9e71c576675bc5882ad05332c13fb12261[m
Author: Moritz Doll <moritz.doll@googlemail.com>
Date:   Wed Feb 14 02:40:51 2024 +0000

    feat(Analysis/Distribution/SchwartzMap): pderiv equals lineDeriv (#9954)

[33mcommit 088de1d8811ff52b7e3ec3d5129610fc76eb89cc[m
Author: Matthew Robert Ballard <matt@mrb.email>
Date:   Wed Feb 14 01:35:55 2024 +0000

    chore(Normed.Group.BallSphere): address porting notes (#10510)
    
    There are no longer timeouts in typeclass synthesis.

[33mcommit 052755a13602877ae95a36ec3644a12d0b28352a[m
Author: Matthew Robert Ballard <matt@mrb.email>
Date:   Wed Feb 14 01:35:54 2024 +0000

    chore(MetricSpace.Gluing): address porting note (#10509)
    
    The current porting note says ``TODO: w/o `@`, tries to generate some `[MetricSpace _]` before finding `X` `Y` `` but removing the `@` seems to generate identical terms with `pp.all true`.
    
    
    
    Co-authored-by: Matthew Robert Ballard <100034030+mattrobball@users.noreply.github.com>

[33mcommit c9ad2c586d4bc449211ae31bbd84d11ba36d9078[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Feb 14 01:35:53 2024 +0000

    refactor(WithZeroTopology): use `nhdsAdjoint` (#10411)
    
    It's more specialized than `mkOfNhds`.
    Also golf and rename lemmas about `nhdsAdjoint`.

[33mcommit 73ed7df41063d427d9e6473d1e0c917d40a5551d[m
Author: Brendan Seamas Murphy <shamrockfrost@gmail.com>
Date:   Wed Feb 14 01:35:52 2024 +0000

    feat(Logic/Function/FromTypes): Add curried heterogeneous function types (#10394)
    
    See #10389

[33mcommit 3737bb40709f6baabbe2fb55a3b0d0eea06c21e3[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Wed Feb 14 01:35:51 2024 +0000

    feat(Topology): some trivial equivalences with the set of clopens (#10390)
    
    This is needed for the construction of limits and colimits in `LightProfinite`.

[33mcommit 1e659b6cbc62647584699ed96dff6d786fed16e0[m
Author: Scott Carnahan <128885296+ScottCarnahan@users.noreply.github.com>
Date:   Wed Feb 14 01:35:50 2024 +0000

    feat: HahnModule action by HahnSeries (#10164)
    
    Given a `SMul R V` instance, we introduce `HahnModule Œì R V` as an alias for HahnSeries Œì V, and produce a `SMul (HahnSeries Œì R) (HahnModule Œì R V)` instance.  We use the `SMul` instance to shorten the `Mul` instance.  We will work our way up to `Module (HahnSeries Œì R) (HahnModule Œì R V)` in a later PR.
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit c78323877eeb2157a41b39ec159970dcb257075f[m
Author: Xavier Roblot <46200072+xroblot@users.noreply.github.com>
Date:   Wed Feb 14 01:35:49 2024 +0000

    chore: Golf some proofs in `ClassGroup` using `FractionalIdeal.num` and `FractionalIdeal.den` (#9853)

[33mcommit ca018e18a326306d7c134709624625cf8c4abaf2[m
Author: Martin Dvo≈ô√°k <martin.dvorak@matfyz.cz>
Date:   Wed Feb 14 01:35:48 2024 +0000

    feat: `Finset.nsmul_inf'` (#9838)

[33mcommit 6f6928d415ecd7743be3468cef94ec0b5cc67cac[m
Author: Antoine Chambert-Loir <antoine.chambert-loir@u-paris.fr>
Date:   Wed Feb 14 01:35:47 2024 +0000

    feat(RingTheory/PowerSeries/Basic): coeff of products (#9309)
    
    * Use the class `HasPiAntidiagonal` defined in PR #7904 to compute the coefficients of products of power series (in several or one variable) : `MvPowerSeries.coeff_prod` and `PowerSeries.coeff_prod`
    * Update the file `Archive/Partition.lean` accordingly
    
    Co-author : Maria Ines de Frutos Fernandez
    
    Based on work of Bhavik Mehta in `Archive/Partition.lean`
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>
    Co-authored-by: Antoine Chambert-Loir <antoine.chambert-loir@math.univ-paris-diderot.fr>
    Co-authored-by: mariainesdff <mariaines.dff@gmail.com>

[33mcommit ca78f3f3301570d284e3d6b5610002c6b34d70bf[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Wed Feb 14 01:35:45 2024 +0000

    feat(Condensed): functor from `TopCat.{u+1}` to `CondensedSet.{u}` (#8821)
    
    We define the functor which associates a condensed set to a topological space, with the correct universe levels.

[33mcommit bb8fb4e482974583af5b7a2aa0a89a30b7dd8a43[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Wed Feb 14 01:35:44 2024 +0000

    feat: charts are structomorphisms (#8160)
    
    This is the `ChartedSpace` analogue of `contMDiffOn_extChartAt` and `contMDiffOn_extChartAt_symm`; proving this revealed a few gaps in other API. This may be useful for showing open subsets of a manifold are submanifolds.
    
    
    
    Co-authored-by: grunweg <grunweg@posteo.de>

[33mcommit e4bee60ae72a53a83c86b1f07a7f1b5e23f1cd53[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Feb 14 00:27:09 2024 +0000

    chore(*): golf (#10417)

[33mcommit 6f21dbdaa28f56a357a54314d726abbd8cba5974[m
Author: Bolton Bailey <bolton.bailey@gmail.com>
Date:   Wed Feb 14 00:27:08 2024 +0000

    chore: Split off getD/getI lemmas from Data.List.Basic (#10337)
    
    Splits off some lemmas from the end of this file, reducing the size of what is currently the longest file in mathlib.

[33mcommit 5eae4d85f7bc9ecfa655443cfc52a74171a3e13f[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Wed Feb 14 00:27:07 2024 +0000

    feat(CategoryTheory): Guitart exact squares (#10270)
    
    This PR defines the categorical notion of `2`-exact square in the sense of Guitart. It is introduced in order to prepare for future applications to derived functors.
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit 5efaaf85ad79019cd07ee03c0b61cea95409fc5e[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Wed Feb 14 00:27:06 2024 +0000

    feat: better uniqueness results for the Haar measure (#9909)
    
    We show that two Haar measures give the same measure to sets with compact closure, and to open sets, without any regularity assumptions. This is based on McQuillan's answer on https://mathoverflow.net/questions/456670.

[33mcommit c390cdc7ce2e904c2e848c5050b7dc8a0bd6d823[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Tue Feb 13 23:17:27 2024 +0000

    doc: fix typo (#10500)

[33mcommit 2cc4dd053360a61d6f36cb9de7cb8c0db8a6cf11[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Feb 13 23:17:26 2024 +0000

    chore(Topology/Order): move `OrderClosedTopology` to a new file (#10497)

[33mcommit 69935384775671bfcaa40d22431253ba77846864[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Tue Feb 13 23:17:25 2024 +0000

    feat: a star monoid homomorphism induces a monoid homomorphism on `unitary` submonoids (#10370)
    
    This adds a few facts related to `unitary` elements and their behavior with respect to star monoid homomorphisms.

[33mcommit 5dde42186bfd103feae7c61e9b8090a7f34c4e13[m
Author: Kevin Buzzard <k.buzzard@imperial.ac.uk>
Date:   Tue Feb 13 23:17:24 2024 +0000

    fix: remove an unnecessary instance or two (#10116)
    
    These instances don't seem to be necessary (and there's evidence in a porting note that one of them used to be).

[33mcommit b4adfe725a0746b0be1d11c5efc7b1a03b3da276[m
Author: Jeremy Tan Jie Rui <reddeloostw@gmail.com>
Date:   Tue Feb 13 23:17:23 2024 +0000

    feat: arctangent addition and Machin's formula for œÄ (#9847)
    
    `four_mul_arctan_inv_5_sub_arctan_inv_239` is theorem 1 in my own #6091.

[33mcommit 1799b8c3e1e75437cca4d7f15d60c2261240cd27[m
Author: Anne Baanen <vierkantor@vierkantor.com>
Date:   Tue Feb 13 23:17:22 2024 +0000

    feat(Data/Polynomial): irreducibility of degree-{2,3} polynomials (#9697)
    
    The goal is to show that a degree 2 or 3 polynomial is irreducible iff it doesn't have roots. We already have `Polynomial.Monic.irreducible_iff_natDegree'` and some existing results in Lean 3: https://github.com/lean-forward/class-group-and-mordell-equation/blob/main/src/number_theory/assorted_lemmas.lean#L254 and the main work is to connect these bits together.
    
    I added a few helper lemmas about the "monicization" of a polynomial `p`, `p * C (leadingCoeff p)‚Åª¬π`. Then I used these to show the `Polynomial.Monic.irreducible_iff ...` statements could be translated to (not necessarily monic) polynomials over a field, then I specialized these results to the degree-{2,3} case.
    
    I created a new file because I couldn't find an obvious place that imported both `Polynomial.FieldDivision` and `Tactic.IntervalCases`.
    
    Zulip discussion: https://leanprover.zulipchat.com/#narrow/stream/113489-new-members/topic/Polynomial.20irreducible
    
    
    
    
    Co-authored-by: Anne Baanen <Vierkantor@users.noreply.github.com>

[33mcommit 625e2ac81bb5ddd7d39e2d52925da26144a85e4c[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Tue Feb 13 21:51:38 2024 +0000

    chore: remove useless `include` and `omit` porting notes (#10503)

[33mcommit 3b447547fcb29b0365d974eeba3aecff8b6ae2fb[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Tue Feb 13 21:51:37 2024 +0000

    chore: Move `Equiv.sigmaEquivOptionOfInhabited` (#10501)
    
    This has nothing to do with `Finset`

[33mcommit 4ed1f68198ff9cfc4119ef34ac92fbd719a2fcd9[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Tue Feb 13 21:51:36 2024 +0000

    fix: transitivity aliases trans (#10491)

[33mcommit 728e439184d39c0788e77f95ffa6e37849dd2905[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Feb 13 21:51:34 2024 +0000

    feat(Topology/Order): add `nhds_mkOfNhds_of_hasBasis` (#10408)
    
    * add `TopologicalSpace.nhds_mkOfNhds_of_hasBasis`
    * add `Trans` instance for `Filter.mem_of_superset`
    * change assumptions of `TopologicalSpace.nhds_mkOfNhds`, golf
      - the new assumption is equivalent to the old one with `t ‚äÜ s` removed
      - but is formulated in terms of `Filter.Eventually`

[33mcommit 7a7528441dd349e5ba2305bc82ee88df9ba23f74[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Tue Feb 13 21:51:33 2024 +0000

    feat: extend AddMonoidAlgebra.supDegree API (#10355)
    
    This is a part of #7173 that I hope will be uncontroversial.

[33mcommit 10d64868c1bd7bc8b9b05a8cc143091334646ff3[m
Author: Shad Amethyst <adrien.burgun@orange.fr>
Date:   Tue Feb 13 21:51:32 2024 +0000

    refactor(Topology): split Topology.Perfect into two modules (#10272)
    
    Splits `Topology.Perfect` into two modules: `Topology.Perfect`, where the existing definition of `Perfect` and `Preperfect` are kept, and `Topology.MetricSpace.Perfect`, in which the theorems specific to metric spaces are moved.

[33mcommit 9b6ad3c98cece2ae4a41ebbe2a27aa8c53fd726f[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Tue Feb 13 21:51:31 2024 +0000

    feat: Submonoid of nonnegative elements (#10209)
    
    Define the `Submonoid` of elements greater than `1`, the `AddSubmonoid` of nonnegative elements, move `posSubmonoid` with them and rename it to `Submonoid.pos`.
    
    From LeanAPAP and partly extracted from #4871

[33mcommit 12d8bb68915c62bacb7e5d1e564830ed4c8d0b5b[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Tue Feb 13 21:51:30 2024 +0000

    feat(Algebra/Homology): two descriptions of the derived category as a localized category (#9660)
    
    In this PR, it is shown that under certain conditions on the complex shape `c`, the category `HomologicalComplexUpToQuasiIso C c` of homological complexes up to quasi-isomorphisms, which is a localization of the category of homological complexes, is also a localization of the homotopy category. In particular, in the case of cochain complexes indexed by the integers, this means that the derived category of an abelian category `C` can be obtained either in a single step by formally inverting the quasi-isomorphisms in the category of cochain complexes, or in two steps by first passing to the homotopy category (which is a quotient category) and then formally inverting the quasi-isomorphisms in the homotopy category.

[33mcommit bdcd9b36fa394a036b6db8a52cddc984f4da9afd[m
Author: Joachim Breitner <mail@joachim-breitner.de>
Date:   Tue Feb 13 21:51:28 2024 +0000

    chore: CI: run tests with -k (#9656)
    
    when checking the fallout from breaking changes it would be good to see
    all failing tests in the build log, and not just the first one, to
    reduce round-trips. I believe we can achieve that using `make -k`.

[33mcommit d13557bc1766b3bbc74d4acd147d9cb94541ad20[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Tue Feb 13 21:51:27 2024 +0000

    feat: `(a + b) ^ n ‚â§ 2 ^ (n - 1) * (a ^ n + b ^ n)` (#9484)
    
    Note that this inequality is trivial if the constant is `2 ^ n` instead.
    
    Due to the current import situation, I've had to downgrade the proof to not use `gcongr`, `positivity`, `ring`. This is currently hard to fix.
    
    From LeanAPAP

[33mcommit 693347426a7ad550fd62aa5325801ca1047a0f2a[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Tue Feb 13 21:51:26 2024 +0000

    feat(Algebra/Homology): the total complex of a bicomplex (#9331)

[33mcommit 5eadc415b24ca636c721b5a5f43160a048cf7e8a[m
Author: Bolton Bailey <bolton.bailey@gmail.com>
Date:   Tue Feb 13 21:51:25 2024 +0000

    feat: add new Equiv.piFinCastSucc (#9028)
    
    
    
    Co-authored-by: Jireh Loreaux <loreaujy@gmail.com>

[33mcommit 2ee70d2c91cf214771ff2f460b24e49e02f4bae3[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Feb 13 19:40:18 2024 +0000

    chore(NonnegHomClass): rename `map_nonneg` to `apply_nonneg` (#10507)
    
    ... to avoid conflict with `_root_.map_nonneg`,
    see [Zulip](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/map_nonneg).

[33mcommit d7a0fb3604960040a24113f2b970969109267c5e[m
Author: Johan Commelin <johan@commelin.net>
Date:   Tue Feb 13 19:40:17 2024 +0000

    CI(bors): set the max batch size to 16 (#10499)
    
    Zulip: https://leanprover.zulipchat.com/#narrow/stream/345428-mathlib-reviewers/topic/Bors.20batch.20size

[33mcommit 322e4a615839ed8c0673ce8820370363b41e0949[m
Author: Jon Eugster <eugster.jon@gmail.com>
Date:   Tue Feb 13 19:40:16 2024 +0000

    chore: bump importGraph (#10490)

[33mcommit 9afd0027499b6bc55c8d11eb22137f97342a9d25[m
Author: Scott Morrison <scott@tqft.net>
Date:   Tue Feb 13 19:40:15 2024 +0000

    chore: bump Std (#10482)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 64ceea9d037b41f9d770a59a332c613af7e0b269[m
Author: Johan Commelin <johan@commelin.net>
Date:   Tue Feb 13 19:40:14 2024 +0000

    chore(Data/List/TFAE): add tfae_not_iff (#10479)

[33mcommit a63ec2b862b6cae7667c18edcd30004ba426aad8[m
Author: David Renshaw <dwrenshaw@gmail.com>
Date:   Tue Feb 13 19:40:13 2024 +0000

    chore: remove no-longer-needed Nat.digits workarounds (#10429)
    
    `norm_num` now successfully reduces `Nat.digits` calls that have concrete arguments, so we can clean up some old workarounds.
    
    This all works because Lean 4.6.0 introduced "simprocs", including the default-enabled `reduceLE`, `reduceMod`, `reduceDiv`, etc. which `norm_num` can invoke to discharge the side-goals required by applications of `digits_of_two_le_of_pos`.
    
    Another crucial aspect is that `{ decide := false }` is the default for `simp` (and `norm_num`) after #8366.  Otherwise,
    the `Acc`-based recursion in `digitsAux` would bog down kernel reduction.

[33mcommit 7b0f450d920a55bcc337f3b868989374e9b16374[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Tue Feb 13 19:40:12 2024 +0000

    feat: add `fst` and `snd` for `QuadraticForm.Isometry` (#10381)
    
    Also adds `proj` for the `Pi` variation, along with `Isometry.ofEq` to make it possible to state the theorems for the `Pi` type.

[33mcommit 43b760b44fd9657a18158899161264787b88ba90[m
Author: Bolton Bailey <bolton.bailey@gmail.com>
Date:   Tue Feb 13 19:40:12 2024 +0000

    chore: add setting to prevent accidental editing of dependencies (#10320)
    
    Adds `**/.lake/**` and `**/.elan/**` to a readonly include list in the VSCode workspace settings. This should prevent users from accidentally editing files in dependencies they might navigate to in VSCode.

[33mcommit 3cb73aefc5a9f49e9d854f5209aa2c41ee27a557[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Tue Feb 13 19:40:11 2024 +0000

    chore: Move lemmas about `Function.const` to the `Function` namespace (#10220)
    
    They were in the `Pi` namespace instead.

[33mcommit dbe95581be34b11d3b5e1e3674a0bebc172ee619[m
Author: Jeremy Tan Jie Rui <reddeloostw@gmail.com>
Date:   Tue Feb 13 19:40:09 2024 +0000

    feat: bounds on alternating convergent series (#10120)
    
    https://leanprover.zulipchat.com/#narrow/stream/217875-Is-there-code-for-X.3F/topic/Bounds.20on.20alternating.20convergent.20series/near/418770183

[33mcommit ff21e64fa364a848ab3d425a1af4636078df83c9[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Tue Feb 13 19:40:08 2024 +0000

    feat: fintsupport of (smooth) partitions of unity (#10015)
    
    From sphere-eversion: the result is used there for smooth partitions of unity, but also holds in the continuous setting.
    
    In passing,
    - use `Type*` (not `Type _`) in `sum_finsupport_smul_eq_finsum`,
    - tag `SmoothPartitionOfUnity.toPartitionOfUnity` with @simps.

[33mcommit 8eaff3eb4c162804f67e0c9536645a0ae1c4219e[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Tue Feb 13 19:40:08 2024 +0000

    feat(Algebra/Homology/HomotopyCategory): alternative description of distinguished triangles (#9370)
    
    In this PR, it is shown that a triangle in the homotopy category is distinguished iff it is isomorphic to the triangle associated to a degreewise split short exact sequence of cochain complexes.

[33mcommit 71296caa9297876651305bd5cfb4f9cbd5e98560[m
Author: Wen Yang <johan@commelin.net>
Date:   Tue Feb 13 15:17:29 2024 +0000

    feat(LinearAlgebra/Matrix): scalar if commutes with every nontrivial transvection (#7815)
    
    `M` is a scalar matrix if it commutes with every nontrivial transvection (elementary matrix).
    
    Also adds `iff` versions and corrects the names of the lemmas in #7810
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>
    
    
    
    Co-authored-by: Wen Yang <yang-wen@139.com>
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 95eca4bb6f0a82bafe5d87d53234bb9d4d524f1e[m
Author: Wen Yang <yang-wen@139.com>
Date:   Tue Feb 13 15:17:27 2024 +0000

    feat(Topology/Algebra/Order): continuous injective function on interval is strictly monotone (#7018)
    
    Suppose `f : [a, b] ‚Üí Œ¥` or `f : (a, b) ‚Üí Œ¥` is continuous and injective. Then `f` is strictly monotone.
    
    Co-authored-by: Johan Commelin <johan@commelin.net>
    
    Co-authored-by: Ya√´l Dillies <yael.dillies@gmail.com>
    
    
    
    Co-authored-by: Ya√´l Dillies <yael.dillies@gmail.com>
    Co-authored-by: Johan Commelin <johan@commelin.net>

[33mcommit 398ea8dd194ef2eb28e2b6b507335199f38d5da6[m
Author: Scott Carnahan <128885296+ScottCarnahan@users.noreply.github.com>
Date:   Tue Feb 13 14:05:49 2024 +0000

    feat(LinearAlgebra/RootSystem/Basic): rm finiteness from def (#10473)
    
    There are many interesting infinite root systems, so we remove the finiteness assumption from the definition.  A few results use finiteness unnecessarily, so their proofs are revised.

[33mcommit 8f463bc6368a6fa966db0a8b4253949ae7e6a9c6[m
Author: Scott Carnahan <128885296+ScottCarnahan@users.noreply.github.com>
Date:   Tue Feb 13 14:05:48 2024 +0000

    feat: Define general binomial coefficients (Ring.choose) (#9719)
    
    We define generalized binomial coefficients, and prove a couple basic properties. In particular, we show that
    multiplication by a suitable factorial yields a descending Pochhammer evaluation.  We also show that casting `Nat.choose` is the same as taking `Ring.choose` of a natural number cast.  To prove these, we add some results about polynomial evaluation.

[33mcommit 103d8a15d3bfa290b9fca499d31a9ef8d9f876e4[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Tue Feb 13 14:05:47 2024 +0000

    feat: the homotopy category of cochain complexes is pretriangulated (#9032)
    
    This PR defines the pretriangulated structure on the homotopy category of cochain complexes in an additive category.
    
    This result first appeared in the Liquid Tensor Experiment. In the LTE, the formalization followed the Stacks Project: in particular, the distinguished triangles were defined using degreewise-split short exact sequences of cochain complexes. Here, we follow the original definitions in Verdier's thesis (with the better sign conventions from the introduction of Brian Conrad's book *Grothendieck duality and base change*).
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit ab35bb3e7575aa71a5706b1795ee4fe3ebcc283d[m
Author: Bulhwi Cha <chabulhwi@semmalgil.com>
Date:   Tue Feb 13 12:46:18 2024 +0000

    chore: avoid non-terminal `simp`s and golf proofs (#10486)
    
    * Replace non-terminal `simp`s with `simp only`s.
    * Golf proofs.

[33mcommit 8108f470600b8b1a946dd84edefa314eec94f97e[m
Author: Mario Carneiro <mcarneir@andrew.cmu.edu>
Date:   Tue Feb 13 12:46:17 2024 +0000

    feat: shake: error if not built (#10484)
    
    As [suggested on Zulip](https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/Tree.20shaking/near/421206132), we can detect if there are unbuilt oleans and error out rather than giving incorrect output.
    
    
    
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>

[33mcommit 34661a71c2671c280e1ed9075d1e9fdaa1be5eca[m
Author: Johan Commelin <johan@commelin.net>
Date:   Tue Feb 13 12:46:16 2024 +0000

    chore(LinearAlgebra/Matrix/Charpoly): charpoly of block matrix (#10480)

[33mcommit 88ad821ee4c3fd36336ecbf66803ed261429380c[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Feb 13 12:46:15 2024 +0000

    feat(Order/Filter): add `Filter.Tendsto.iterate` (#10477)

[33mcommit 583592fb15e1913f1a57b3f7d66f05cfcde163be[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Feb 13 12:46:14 2024 +0000

    chore(Data/Fin/Basic): drop an `import` (#10467)
    
    This removes the following files from the `import` closure of `Data.Fin.Basic`:
    
    ```
    Mathlib.Algebra.Group.Equiv.Basic
    Mathlib.Algebra.Group.Hom.Basic
    Mathlib.Algebra.Group.InjSurj
    Mathlib.Algebra.Group.OrderSynonym
    Mathlib.Algebra.Group.Units.Equiv
    Mathlib.Algebra.Group.Units.Hom
    Mathlib.Algebra.GroupWithZero.Basic
    Mathlib.Algebra.GroupWithZero.InjSurj
    Mathlib.Algebra.GroupWithZero.Units.Basic
    Mathlib.Algebra.GroupWithZero.Units.Equiv
    Mathlib.Algebra.Order.Group.Units
    Mathlib.Algebra.Order.Monoid.Basic
    Mathlib.Algebra.Order.Monoid.OrderDual
    Mathlib.Algebra.Order.Monoid.TypeTags
    Mathlib.Algebra.Order.Monoid.Units
    Mathlib.Algebra.Order.WithZero
    Mathlib.Data.Int.Cast.Basic
    ```

[33mcommit c23202088d3008d6083c8cb879364f868cfb4651[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Feb 13 12:46:13 2024 +0000

    chore(Cardinal/Basic): split (#10466)
    
    Move `toNat` and `toPartENat` to new files.
    
    No changes in the code moved to the new files.
    One lemma remains in `Basic` but used `toNat` in the proof,
    so I changed the proof.
    
    I'm going to redefine them in terms of `toENat`, so I need to move them out of `Basic` first.

[33mcommit a8eca7702ef81c676eb5b83f589db30f4506d7be[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Feb 13 12:46:13 2024 +0000

    chore(FinsuppVectorSpace): golf, `Fintype` -> `Finite` (#10464)
    
    - Golf `Finset.sum_single_ite`. Should it go to another file?
    - Assume `Finite` instead of `Fintype` in `equivFun_symm_stdBasis`.

[33mcommit 678a9b1ba8dba463eb10a7d51ae809b6dd3b7c47[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Tue Feb 13 12:46:12 2024 +0000

    chore: tidy various files (#10453)

[33mcommit 268cb37dff10baf86c5627af16feffa6916bf41a[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Feb 13 12:46:11 2024 +0000

    feat(Filter/Pi): add `pi_principal` and `pi_pure` (#10450)

[33mcommit b7c097400dcfb4fa217d672b6ad4f9bea9614467[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Feb 13 12:46:10 2024 +0000

    feat(Function): add `FactorsThrough.comp_{left,right}` (#10449)
    
    - Add `Function.FactorsThrough.rfl`, `Function.FactorsThrough.comp_left`, and `Function.FactorsThrough.comp_right`.
    - Fix a typo in the module docstring of `Function/OfArity`.

[33mcommit 74925360828ec44f3c5e33d84e37768ce56d47a6[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Feb 13 12:46:09 2024 +0000

    chore(AffineIsometry): weaken some Normed* to Seminormed* (#10448)
    
    - Reorder `variable`s so that related variables
      are declared on the same line;
    - Use `Seminormed*`/`PseudoMetric*` for all non-primed type variables.
    - Introduce `V‚ÇÅ'`/`P‚ÇÅ'` for a normed add torsor.

[33mcommit 9db90fd78fe15e9a19d79318b87d43293487cf16[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Feb 13 12:46:08 2024 +0000

    chore(SimpleGraph/IncMatrix): review `Decidable*`/`Fintype _` assumptions (#10445)
    
    Drop unneeded assumptions, modify other assumptions to match exactly what's required to formulate the theorems.

[33mcommit c6636bb80dfc15c20145c47aeaea0403258bf61f[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Feb 13 12:46:07 2024 +0000

    chore(SimpleGraph/Finite): drop some `DecidableEq` assumptions (#10441)
    
    - don't assume `DecidableEq` in `card_edgeFinset_le_card_choose_two`;
    - make `edgeFinset_deleteEdges` work with any `Fintype G.edgeSet`
      and `Fintype (G.deleteEdges s).edgeSet` instances;
    - don't assume `DecidbaleEq` in theorems about `DeleteFar`.

[33mcommit 4597f54ae531f367486e1dbe41ed3d8323f0a876[m
Author: atarnoam <atarnoam@gmail.com>
Date:   Tue Feb 13 11:56:29 2024 +0000

    feat: innerRegular_map_mul (#10401)
    
    The image of an inner regular measure under left/right multiplication is again inner regular.

[33mcommit 1115238858b34439a3fe5d96da7719a0b702231a[m
Author: Jz Pan <acme_pjz@hotmail.com>
Date:   Tue Feb 13 11:24:23 2024 +0000

    feat: Add `Finset.card_union_eq_card_add_card` and golf (#10471)
    
    
    
    Co-authored-by: Ya√´l Dillies <yael.dillies@gmail.com>

[33mcommit 7dd3560026f9e2c82b8eec71796d5262905182cd[m
Author: Matthew Robert Ballard <matt@mrb.email>
Date:   Tue Feb 13 10:50:08 2024 +0000

    perf (Algebra.DirectLimit): use `suppress_compilation` (#9664)
    
    Uses `suppress_compilation` to lessen the load on Lean when building the file.

[33mcommit 4f8cced6f0c5a2877186e53e8c2d2437338cf11f[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Tue Feb 13 09:59:52 2024 +0000

    feat: add Integrable.of_integral_ne_zero (#10430)

[33mcommit b005724431066cdf626fee8bd608594747920b7b[m
Author: Markus Himmel <markus@himmel-villmar.de>
Date:   Tue Feb 13 09:59:51 2024 +0000

    feat: computation of `Over A` for a presheaf `A` (#10245)

[33mcommit 7fa9bfd0e724e896fdd50de90debe565937a4bb1[m
Author: Scott Morrison <scott@tqft.net>
Date:   Tue Feb 13 07:51:53 2024 +0000

    chore: remove @[simp] from tsub_eq_zero_iff_le (#10474)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 964b3dc1108b2b828c19227d0cd5fc05bd076e6f[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Tue Feb 13 07:51:52 2024 +0000

    doc: fix typos (#10457)
    
    Fixed minor typos.

[33mcommit 938ebf0f7884008823726e4e41586bc9e04e138f[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Tue Feb 13 07:51:52 2024 +0000

    feat: add compactness of the spectrum as an instance (#10371)

[33mcommit 32ec47abdf65838c6d38155925e1c859801b0f51[m
Author: L <hi@llllvvuu.dev>
Date:   Tue Feb 13 07:04:36 2024 +0000

    feat: `DifferentiableOn.cpow` (#10203)
    
    direct application of the content above it.
    
    
    
    Co-authored-by: L Lllvvuu <git@llllvvuu.dev>

[33mcommit c892c4c81a8ef11396bea56811ac47c2c02361c7[m
Author: Scott Morrison <scott@tqft.net>
Date:   Tue Feb 13 05:56:12 2024 +0000

    chore: bump Std (#10475)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 6a78c1745b7f362b7ed830de34e3dc6df40e9024[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Feb 13 05:08:40 2024 +0000

    chore(PowerSeries/Basic): drop a `DecidableEq` assumption (#10434)

[33mcommit f236307f8073b191c5ddb4c1bcdca56acbf71a62[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Feb 13 04:00:12 2024 +0000

    chore(LinearAlgebra/Finsupp): `Fintype` -> `Finite` (#10463)

[33mcommit cfea3dca280b0e01316980e2468e4f6e50407d14[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Feb 13 04:00:11 2024 +0000

    chore(Lebesgue/EqHaar): `Fintype` -> `Finite` (#10461)

[33mcommit 295eaa2dd504170afdc93dc608753caf89532477[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Feb 13 04:00:10 2024 +0000

    chore(Ideal/QuotientOperations): `Fintype` -> `Finite` (#10460)

[33mcommit 2524d76a7c1a045ee847e9a4b36359270034f31b[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Tue Feb 13 04:00:09 2024 +0000

    move: Move `MonoidWithZeroHom` to its own file (#10438)
    
    `MonoidWithZeroHom` confusingly pulled `Algebra.GroupWithZero.Defs` in `Algebra.Group.Hom.Defs`.

[33mcommit 62ac0bddb896008f17f1eb4cc45e8949c095bc59[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Feb 13 03:34:01 2024 +0000

    chore(SimpleGraph/DegreeSum): drop some `DecidableEq` assumptions (#10443)

[33mcommit 739a6e5fe4cded7e9f6ec8e740d3d005816594d5[m
Author: Mario Carneiro <mcarneir@andrew.cmu.edu>
Date:   Tue Feb 13 01:01:39 2024 +0000

    fix: `shake --downstream` bug (#10469)
    
    The old code was not taking into account a certain import situation, and the fix requires recalculating the whole transitive dependency graph, which is a bit expensive. Furthermore, the output is now more nuanced, because instead of saying "remove A, instead import A in B1, B2", it may need to suggest importing other files like "remove A, instead import C1 in B1 and C2, C3 in B2". It could suggest to import `A` in all affected downstream files, but those files might not be using `A` directly so this would cause shake to complain again after applying the fix.
    
    
    
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>

[33mcommit a6f14574d8673761c2659d035525417540a9db15[m
Author: YnirPaz <paznir83@gmail.com>
Date:   Mon Feb 12 23:48:15 2024 +0000

    fix(Cardinal): fix theorem names (#10465)
    
    Remove unnecessary `of_lt_aleph_0` from 2 theorem names. Also fix typos in the comments of 2 other files.
    
    
    
    Co-authored-by: damiano <adomani@gmail.com>

[33mcommit a6948377329374a3ec0154e171796c201ab3a523[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Feb 12 23:48:14 2024 +0000

    chore(QuadraticForm): `Fintype -> Finite`, `DecidableEq` (#10462)

[33mcommit 839d7c02985c99239d28b6f8b7cbb4aa9bdf33bd[m
Author: Enrico Borba <enricozb@users.noreply.github.com>
Date:   Mon Feb 12 22:42:53 2024 +0000

    feat: Fin.exists_fin_succ' (#10459)
    
    Adds `Fin.exists_fin_succ'`, which is analogous to [`Fin.forall_fin_succ'`](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Data/Fin/Basic.html#Fin.forall_fin_succ').

[33mcommit b569e065beb4d6580ab9857ea1ffc1e7ac9345df[m
Author: Junyan Xu <junyanxumath@gmail.com>
Date:   Mon Feb 12 20:59:06 2024 +0000

    feat: introduce `IsRelPrime` and `DecompositionMonoid` and refactor (#10327)
    
    + Introduce typeclass `DecompositionMonoid`, which says every element in the monoid is primal, i.e., whenever an element divides a product `b * c`, it can be factored into a product such that the factors divides `b` and `c` respectively. A domain is called pre-Schreier if its multiplicative monoid is a decomposition monoid, and these are more general than GCD domains.
    
    + Show that any `GCDMonoid` is a `DecompositionMonoid`. In order for lemmas about `DecompositionMonoid`s to automatically apply to `UniqueFactorizationMonoid`s, we add instances from `UniqueFactorizationMonoid Œ±` to `Nonempty (NormalizedGCDMonoid Œ±)` to `Nonempty (GCDMonoid Œ±)` to `DecompositionMonoid Œ±`. ([Zulip](https://leanprover.zulipchat.com/#narrow/stream/144837-PR-reviews/topic/non-normalizable.20gcd_monoid/near/316895209)) See the bottom of message for an updated diagram of classes and instances.
    
    + Introduce binary predicate `IsRelPrime` which says that the only common divisors of the two elements are units. Replace previous occurrences in mathlib by this predicate.
    
    + Duplicate all lemmas about `IsCoprime` in Coprime/Basic (except three lemmas about smul) to `IsRelPrime`. Due to import constraints, they are spread into three files Algebra/Divisibility/Units (including key lemmas assuming DecompositionMonoid), GroupWithZero/Divisibility, and Coprime/Basic.
    
    + Show `IsCoprime` always imply `IsRelPrime` and is equivalent to it in Bezout rings. To reduce duplication, the definition of Bezout rings and the GCDMonoid instance are moved from RingTheory/Bezout to RingTheory/PrincipalIdealDomain, and some results in PrincipalIdealDomain are generalized to Bezout rings.
    
    + Remove the recently added file Squarefree/UniqueFactorizationMonoid and place the results appropriately within Squarefree/Basic. All results are generalized to DecompositionMonoid or weaker except the last one.
    
    [Zulip](https://leanprover.zulipchat.com/#narrow/stream/217875-Is-there-code-for-X.3F/topic/Coprime.20if.20product.20is.20squarefree/near/419334520)
    
    With this PR, all the following instances (indicated by arrows) now work; this PR fills the central part.
    ```
                                                                              EuclideanDomain (bundled)
                                                                                  ‚Üô          ‚Üñ
                                                                     IsPrincipalIdealRing ‚Üê Field (bundled)
                                                                                ‚Üì             ‚Üì
             NormalizationMonoid ‚Üê          NormalizedGCDMonoid ‚Üí GCDMonoid  IsBezout ‚Üê ValuationRing ‚Üê DiscreteValuationRing
                       ‚Üì                             ‚Üì                 ‚Üò       ‚Üô
    Nonempty NormalizationMonoid ‚Üê Nonempty NormalizedGCDMonoid ‚Üí  Nonempty GCDMonoid ‚Üí IsIntegrallyClosed
                                                     ‚Üë                    ‚Üì
                        WfDvdMonoid ‚Üê UniqueFactorizationMonoid ‚Üí DecompositionMonoid
                                                     ‚Üë
                                           IsPrincipalIdealRing
    ```
    
    
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>
    Co-authored-by: Oliver Nash <github@olivernash.org>

[33mcommit 4b401b7c5f98df27b213cff1cdc81b036ce6d215[m
Author: Scott Morrison <scott@tqft.net>
Date:   Mon Feb 12 19:50:41 2024 +0000

    chore: bump Std (#10455)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>
    Co-authored-by: Alex Keizer <alex@keizer.dev>
    Co-authored-by: Tobias Grosser <tobias@grosser.es>

[33mcommit 64edf0194eb557ceff47c9a1d517f065439c44d7[m
Author: Oliver Nash <github@olivernash.org>
Date:   Mon Feb 12 17:24:13 2024 +0000

    feat: the pairing of a Lie algebra root space with its negative (#10454)

[33mcommit 1db5524fe0fe0d6b3dd09790da2c1067703513fa[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Feb 12 15:37:03 2024 +0000

    chore(Measure/Regular): reorder lemmas, change TC assumptions (#10447)
    
    * move `IsCompact.exists_isOpen_lt_of_lt` before `IsCompact.measure_eq_iInf_isOpen`;
    * weaken TC assumptions from `[IsFiniteMeasureOnCompacts Œº] [LocallyCompactSpace Œ±] [RegularSpace Œ±]` to `[IsLocallyFiniteMeasure Œº] [R1Space Œ±]`.
    
    Not sure if we have other ways to get a locally finite measure though.

[33mcommit 2feb8a343f68a869685bffe885d477931e940b12[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Feb 12 14:50:07 2024 +0000

    feat(Topology/Bases): add a version of `Set.PairwiseDisjoint.countable_of_isOpen` (#10439)
    
    Add a version for `Pairwise (Disjoint on _)`,
    not `Set.PairwiseDisjoint _`.

[33mcommit 998cfc8bbcf09a654986ea0e26373c1f7d1bd6eb[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Mon Feb 12 14:11:49 2024 +0000

    feat(CategoryTheory/Functor): pointwise left Kan extensions (#10413)
    
    In this PR, we introduce pointwise left Kan extensions: a criteria `IsPointwiseLeftKanExtension`, a typeclass `HasPointwiseLeftKanExtension` (which asserts the existence of certain colimits) and a construction of a pointwise left Kan extension when `HasPointwiseLeftKanExtension` holds. We also show that pointwise left Kan extensions are left Kan extensions.
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit 22379b09e887564e6103a20e87fe38bb758c8e0d[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Mon Feb 12 14:11:47 2024 +0000

    feat(CategoryTheory/Sites): characterise the covering sieves of the regular topology (#9976)
    
    Analogous to the characterisation for the covering sieves of the coherent topology: A sieve is a covering sieve for the regular topology iff it contains an effective epi.
    
    - [x] depends on: #9944

[33mcommit 5bb667412e88825db17bca9dbd43517f8e4353ce[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Mon Feb 12 13:42:25 2024 +0000

    refactor(Tactic/Positivity): use stricter Qq matching (#10196)
    
    The previous code often discarded the safety features of Qq by casting quoted terms to `Expr` and back. This is far from an exhaustive replacement.
    
    This makes use of a bug fix in Lean 4.6.0rc1 that allows us to write things like
    ```lean
    match u, Œ±, e with
    | 0, ~q(‚Ñ§), ~q(@Int.floor $Œ±' $i $j $a) =>
    ```
    Previously these `match`es did not generalize `u` correctly.
    
    To make Qq happy, we introduce a few more `assertInstancesCommute` that were not previously here.
    Without them, there is a higher risk that `positivity` produces an ill-typed proof in weird situations.
    Like every `assertInstancesCommute`, this comes at a small performance cost that could be eliminated by using the unsafe `assumeInstancesCommute` instead.
    
    Another very small performance hit here is from the (possibly unnecessary) defeq check of the types before checking defeq of the values. On the other hand, this might actually increase performance when the match fails due to a type mismatch.
    
    There is probably some boilerplate that can be extracted from the repetition here; but I am declaring that out of scope for this PR: the goal is to establish a canonical spelling for this sort of matching, so that future extensions copy-pasted from these extensions inherit the spelling automatically.

[33mcommit 7ccf57f99aa802829c0274efad14ed3edb8da6fd[m
Author: JADekker <114015169+JADekker@users.noreply.github.com>
Date:   Mon Feb 12 12:42:10 2024 +0000

    feat : Move various notions of uniform probability distributions to one file.  (#10451)
    
    feat : collect uniform distribution for measures
    and uniform PMF in one file.
    
    This collects the various notions of uniform
    distribution in one file, to unify them with a
    forthcoming PR.

[33mcommit f9d86759a3f25e9edb5532f97e72cd5083c5ddf5[m
Author: Michael Stoll <Michael.Stoll@uni-bayreuth.de>
Date:   Mon Feb 12 12:14:45 2024 +0000

    feat(NumberTheory/ArithmeticFunction): add separate scopes for notations (and a lemma) (#10403)
    
    This adds individual scopes `ArithmeticFunction.zeta`, ..., `ArithmeticFunction.Omega`, `ArithmeticFunction.Moebius`, `ArithmeticFunction.vonMangoldt` for the notations `Œ∂`, `œÉ`, `œâ`, `Œ©` and `Œº`, `Œõ`.
    This makes it possible to access a selected subset of these instead of either none or all of them.
    
    We also add the lemma `ArithmeticFunction.pmul_assoc`.
    
    See [here](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Nat.2EArithmeticFunction.20--.3E.20ArithmeticFunction/near/420800408) and [here](https://leanprover.zulipchat.com/#narrow/stream/270676-lean4/topic/How.20do.20you.20hide.20scoped.20notation/near/418117690) on Zulip.

[33mcommit e5de077ca290e3e8aaaa8b9bc9b58c73f41675b7[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Feb 12 10:30:35 2024 +0000

    chore(SetFamily/FourFunctions): drop some unneeded `DecidableEq` assumptions (#10442)
    
    
    
    Co-authored-by: Ya√´l Dillies <yael.dillies@gmail.com>

[33mcommit 57a4bbf794d81a6dd926a005a4df10ffa3976c14[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Feb 12 10:30:34 2024 +0000

    chore(LinearAlgebra/Multilinear): drop a `DecidableEq` assumption (#10437)

[33mcommit 32a9a0986263d0a977390a6836fa77369d71cf26[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Mon Feb 12 10:30:33 2024 +0000

    chore(Data/Finset/Basic): lemmas about `toFinset` (#10427)

[33mcommit 88b30bb7106eb3c02dc0f9be40e3751862e1775a[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Mon Feb 12 10:30:32 2024 +0000

    feat(CategoryTheory/Limits/MonoCoprod): inclusions of subcoproducts are mono (#10400)
    
    In this PR, it is shown that when suitable coproducts exists in a category satisfying `[MonoCoprod C]`, then if `X : I ‚Üí C` and `Œπ : J ‚Üí I` is an injective map, the canonical morphism `‚àê (X ‚àò Œπ) ‚ü∂ ‚àê X` is a monomorphism.
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit 2357b64566a8add1f0b363267a9c3953d43253c1[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Mon Feb 12 10:30:31 2024 +0000

    chore(NNRat): Rearrange imports (#10392)
    
    The goal is to separate the field material on `Rat`/`NNRat` from everything before to make way for `NNRat.cast`. We achieve this by
    * splitting `Data.Rat.NNRat` into
      * `Data.NNRat.Defs` for the foundationl stuff that will be needed in the definition of `Field`
      * `Data.NNRat.Lemmas` for the field and big operators material
    * moving the field material from `Data.Rat.Order` to `Data.Rat.Basic`
    * proving a few lemmas by `rfl` rather than `coeHom.some_now_unavailable_lemma`
    * renaming `Data.Rat.NNRat.BigOperators` to `Data.NNRat.BigOperators`

[33mcommit 0796b0605cf97b2737cd458b74fbcdcb5436a9c7[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Mon Feb 12 10:30:30 2024 +0000

    chore(Tactic/{Positivity,NormNum}): remove support for non-canonical spellings (#10344)
    
    `Mul.mul` or `Nat.mul` etc should not ever appear in a goal, so there is little reason for these tactics to support them.
    If these are in your goal, then something has already gone wrong and `norm_num` isn't responsible for saving you; that's `simp` or `dsimp`'s job.
    
    
    [Zulip thread](https://leanprover.zulipchat.com/#narrow/stream/144837-PR-reviews/topic/.2310344.20removing.20norm_num.20support.20for.20Nat.2Esub.2C.20Sub.2Esub.2C.20etc/near/420507739)

[33mcommit 6b846c81ca2306066b2ba4c88e02c3438327b5bb[m
Author: Eric Rodriguez <ericrboidi@gmail.com>
Date:   Mon Feb 12 10:30:29 2024 +0000

    fix(positivity): now understands weak `0 < x` hypotheses (#10293)
    
    This matching used to be done solely by `norm_num`, but this doesn't work if the type has a zero that's not coupled with the algebraic hierarchy.

[33mcommit e2abe9f3158d4d66483e8dd546367a2bf0c347d4[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Mon Feb 12 10:30:28 2024 +0000

    feat: the Fourier transform of a Schwartz function is differentiable (#10268)

[33mcommit 8a5da17db79146db00328f4beadbd15941fd9d3a[m
Author: Shad Amethyst <adrien.burgun@orange.fr>
Date:   Mon Feb 12 10:30:27 2024 +0000

    feat(GroupTheory/GroupAction): new `FixedPoints` module with a few basic properties of `fixedBy` (#9477)
    
    Introduces a new module, `Mathlib.GroupTheory.GroupAction.FixedPoints`,
    which contains some properties of `MulAction.fixedBy` that wouldn't quite belong to `Mathlib.GroupTheory.GroupAction.Basic`.

[33mcommit 35a3866a4fe18487568ee2777b3c085436a5630b[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Mon Feb 12 10:30:26 2024 +0000

    chore(Util/SynthesizeUsing): Qq-ify (#9437)
    
    Most of the callers were already passing `q()` arguments anyway.

[33mcommit 4841d69daf84bd4c67067eb239463b08df6a03d0[m
Author: Timo Carlin-Burns <timorcb@gmail.com>
Date:   Mon Feb 12 10:30:25 2024 +0000

    fix(Data/Set/Image): simp confluence issues with `image_subset_iff` (#8683)
    
    `image_subset_iff` is a questionable simp lemma because it converts an application of `Set.image` into an application of `Set.preimage` unconditionally. This means that if any simp lemma applies to images, there must be a corresponding lemma for preimages. These lemmas are what I found missing after loogling.
    
    I also added machine-checked examples of each confluence issue to a new file `tests/simp_confluence`.

[33mcommit cd4edcb7d79bb711ff7d2d6ca53e20d743d45ba8[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Feb 12 09:20:09 2024 +0000

    chore(Tactic/GCongr): move `@[gcongr]` tags around (#9393)
    
    * Add `import Mathlib.Tactic.GCongr.Core`
      to `Algebra/Order/Ring/Lemmas`.
    * Move most `@[gcongr]` tags next to the lemmas.
    
    See [Zulip thread](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Mathlib.2FTactic.2FGCongr)
    
    
    
    Co-authored-by: Jeremy Tan Jie Rui <reddeloostw@gmail.com>

[33mcommit 9ff7dbc133122ef393ea8b98883281947d3f3c78[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Feb 12 08:25:01 2024 +0000

    chore(CategoryTheory/Sites): `Fintype` ‚Üí `Finite` (#10440)
    
    Also rename `Presieve.extensive` to `Presieve.Extensive` to follow the naming convention.

[33mcommit bc539a7bf0db20af3c37b83219372c040eea8bd8[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Mon Feb 12 08:25:00 2024 +0000

    feat: Complete `NNReal` coercion lemmas (#10214)
    
    Add a few missing lemmas about the coercion `NNReal ‚Üí Real`. Remove a bunch of `protected` on the existing coercion lemmas (so that it matches the convention for other coercions). Rename `NNReal.coe_eq` to `NNReal.coe_inj`
    
    From LeanAPAP

[33mcommit a13a6b8d78e05435a2a0a4dba4f058c9db210883[m
Author: Scott Morrison <scott@tqft.net>
Date:   Mon Feb 12 07:17:49 2024 +0000

    chore: bump dependencies (#10446)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 3eba30e01f4e19d92d7ca65522b51a24d470442e[m
Author: Bolton Bailey <bolton.bailey@gmail.com>
Date:   Mon Feb 12 07:17:48 2024 +0000

    feat: add lemmas to simplify List.modifyNth (#10318)
    
    Adds three lemmas, I don't think any of them are in the library anywhere already.

[33mcommit 105a8c511333991187f53e0840326963e609e91d[m
Author: Matthew Robert Ballard <matt@mrb.email>
Date:   Mon Feb 12 07:17:47 2024 +0000

    chore: clean up uses of `Pi.smul_apply` (#9970)
    
    After #9949, `Pi.smul_apply` can be used in `simp` again. This PR cleans up some workarounds.

[33mcommit fa3313a1fc92ebc5761b89af004215ac88cbebc2[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Mon Feb 12 06:18:56 2024 +0000

    chore: Split off `WithTop` lemmas (#10239)
    
    from `Algebra.BigOperators.Order` . Add the corresponding `WithBot` lemmas.

[33mcommit baf06fe64caf653f1b71e7de0c82f58a3083a2c1[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Mon Feb 12 04:37:31 2024 +0000

    chore: add `fun_prop` attribute to various continuity lemmas (#10369)

[33mcommit 66ad57182e3b930c6dbbb1e1d11e22251d1fcb19[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Mon Feb 12 00:36:37 2024 +0000

    feat: A natural is odd iff it's coprime with 2 (#10222)
    
    From LeanAPAP

[33mcommit 80bf34f135feada59306897fd987470cd817b815[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Sun Feb 11 21:58:26 2024 +0000

    feat: `(s ‚à© t).card = s.card + t.card - (s ‚à™ t).card` (#10224)
    
    once coerced to an `AddGroupWithOne`. Also unify `Finset.card_disjoint_union` and `Finset.card_union_eq`
    
    From LeanAPAP

[33mcommit c79c211014aa9efd5cd5627c58efe72d315fee34[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Sun Feb 11 21:19:50 2024 +0000

    doc: fix typo (#10435)
    
    Fixed minor typo.

[33mcommit d18f1d0bba5d43d1ac3c37e1b561360ea64c7cdd[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sun Feb 11 19:22:27 2024 +0000

    chore(Order/*): move `SupSet`, `Set.sUnion` etc to a new file (#10232)

[33mcommit 78e6ce74b03b6a03586f004edd3f2b2a5059f1a4[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sun Feb 11 18:26:20 2024 +0000

    chore(*): use notation for nhds (#10416)
    
    Also fix `GeneralizedContinuedFraction.of_convergence`:
    it worked for the `Preorder.topology` only.

[33mcommit 76c1f6e7b045158af66688954fb6543151879aee[m
Author: Christian Merten <christian@merten.dev>
Date:   Sun Feb 11 14:32:22 2024 +0000

    chore(CategoryTheory/Limits/Concrete): generalize universe assumptions (#10418)
    
    Generalizes universe assumptions for various statements on colimits in concrete categories. Also simplifies some proofs.

[33mcommit b08d71d8eb364629a68a29c26fb65401cba3b6d2[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Sun Feb 11 14:32:22 2024 +0000

    chore(CategoryTheory/Sites): golf some proofs in the coherent topology file (#9979)

[33mcommit 750e6f244489d08a01945eb7c0278f67b9e38c01[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sun Feb 11 13:33:04 2024 +0000

    feat(LocallyConvex/Bounded): add `IsVonNBounded.add` etc (#10135)
    
    * add `IsVonNBounded.add`, `IsVonNBounded.vadd`,
      and `isVonNBounded_vadd`;
    * generalize some lemmas in `Topology/Algebra/Monoid`
      from `Monoid` to `MulOneClass`,
      move them to a new section.
    
    
    
    Co-authored-by: Ya√´l Dillies <yael.dillies@gmail.com>

[33mcommit a7e85ccbdb48aea0a3377b90bc9d69cbb870f044[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Sun Feb 11 09:45:11 2024 +0000

    feat(CategoryTheory): the typeclass Functor.HasRightKanExtension (#10384)
    
    This PR introduces the typeclass `HasRightKanExtension L F` which asserts the existence of a right Kan extension of a functor `F` along `L`. A chosen extension is obtained as `rightKanExtension L F`.
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit 841bef78260cf3074576dfedbd529ed34fd036f1[m
Author: David Renshaw <dwrenshaw@gmail.com>
Date:   Sun Feb 11 05:41:36 2024 +0000

    feat: add Prime.not_dvd_finset_prod and Prime.not_dvd_finsupp_prod (#10047)
    
    We already have `Prime.not_dvd_prod`, which is about list products: https://github.com/leanprover-community/mathlib4/blob/1fec3c4a56a0a991f7324bb7b1f89ab6a6795d19/Mathlib/Data/List/Prime.lean#L41-L43
    
    This PR adds analogous theorems for `Finset` and `Finsupp`.

[33mcommit 877599c8dedfa0cff8c76df42d9cfa385dfc17a4[m
Author: Xavier Roblot <46200072+xroblot@users.noreply.github.com>
Date:   Sun Feb 11 05:12:32 2024 +0000

    feat: show that the Riemann integral is equal to the Bochner integral for continuous functions (#10144)

[33mcommit 7d2b303e1e49d38ab5fbf2a6b4872e5b721691fe[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Sun Feb 11 03:49:18 2024 +0000

    chore: remove Fintype.card_fin_even (#10273)
    
    This instance was meant to apply to even literal numbers. Because Lean 4 no longer uses bit0/bit1 for literals, it no longer serves that purpose. Instead, a specific instance for Fin 2 is added.

[33mcommit 87dac0aae37728234522e08690dba7bf1b1dd633[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Sun Feb 11 00:59:07 2024 +0000

    doc: fix typo (#10409)
    
    Fix minor typo.

[33mcommit 32cce69ea1ff3d9e15eafe7b2efdaea9d9e5e7d2[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Sun Feb 11 00:33:18 2024 +0000

    fix(Profinite/Nobeling): remove duplicated proof (#10410)

[33mcommit 25c2e96a350d027a9373ce86cfe8156018b9c2f3[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Sat Feb 10 22:15:37 2024 +0000

    fix(Testing/SlimCheck/Testable): do not call `inferType` on an expression with `bvar`s (#9722)
    
    Fixes a bug reported twice on Zulip:
    * https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/slim_check.20question/near/412709012
    * https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/slim_check.20giving.20wrong.20counterexamples.3F/near/420008365
    
    Both test-cases are included

[33mcommit a6a17daf8c81a2c35aff2e43a431a7c591fa708a[m
Author: Michael Stoll <Michael.Stoll@uni-bayreuth.de>
Date:   Sat Feb 10 13:10:19 2024 +0000

    chore(NumberTheory/ArithmeticFunction): remove `Nat.` part  from `ArithmeticFunction` namespace (#10399)
    
    This changes `Nat.ArithmeticFunction` to `ArithmeticFunction` since the `Nat` part seems redundant.
    
    See [here](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Nat.2EArithmeticFunction.20--.3E.20ArithmeticFunction/near/420713063) on Zulip.

[33mcommit ba309fb00814da171fa9234d9754b1d0ca7fbac4[m
Author: Yuma Mizuno <mizuno.y.aj@gmail.com>
Date:   Sat Feb 10 12:15:54 2024 +0000

    feat(Bicategory/Adjunction): the left triangle implies the right triangle for equivalences (#10398)

[33mcommit fa90a960aa2bc97fdec368b029a476ac399882a0[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Sat Feb 10 10:41:51 2024 +0000

    chore(CategoryTheory/Sites): reorganise the material related to the coherent, regular and extensive topologies (#9944)
    
    This PR adds essentially no new material (except the names `regularTopology`¬†and `extensiveTopology` which were missing). It only reorganises the material that was previously in `CategoryTheory/Sites/Coherent/Basic` and `CategoryTheory/Sites/Coherent/RegularExtensive`, spreading it across six files in the `Coherent¬†` folder.
    
    - [x] depends on: #9920

[33mcommit b6a4cc4c914d05cad491647c69de8dfd43b60588[m
Author: Amelia Livingston <101damnations@github.com>
Date:   Sat Feb 10 10:41:50 2024 +0000

    refactor(RepresentationTheory/GroupCohomology): tidy up 8599 and add more low degree cocycle API (#8785)

[33mcommit b9ecf684ed9c819aadfedf98b9408bb02c846524[m
Author: Junyan Xu <junyanxumath@gmail.com>
Date:   Sat Feb 10 09:56:33 2024 +0000

    chore: relax typeclass assumption in `Polynomial.support_smul` (#10397)
    
    
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>

[33mcommit e7a73bf30c29611b0ebbb0c169de94977fbc459c[m
Author: Junyan Xu <junyanxumath@gmail.com>
Date:   Sat Feb 10 09:09:01 2024 +0000

    feat(PerfectRing): roots of `Polynomial.expand` (#9311)
    
    Inspired by #9271
    
    Prove the main theorem `rootMultiplicity_expand` and derive corollaries about `Polynomial.roots`. Refactor `rootsExpand(Pow)EquivRoots` using the new lemmas.
    
    
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>
    Co-authored-by: acmepjz <acme_pjz@hotmail.com>

[33mcommit b1a09514e5543efb07e5748b55bcbf1d9bd32655[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Sat Feb 10 06:34:59 2024 +0000

    feat: everywhere positive sets for a measure (#10139)
    
    A set `s`  is everywhere positive with respect to a measure `mu` if, for every point in `s`, all its neighborhoods inside `s` have positive measure. We create a new file about this notion.
    
    The main result of the file is Halmos theorem (1950): the Haar measure on a locally compact group is completion-regular, i.e., finite-measure sets can be approximated from inside by level sets of compactly supported continuous functions. (its proof uses subtle properties of everywhere positive sets, although this is not apparent in the statement).

[33mcommit 7dea24a9faaa4559ae49bbcb1507ff8a56e2e4d1[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Sat Feb 10 05:27:40 2024 +0000

    fix: improve the logging behavior of `slim_check` (#10393)
    
    There was a bug in the tactic that meant it would always print "no goals to be solved".
    
    This also promotes the code-generation from `IO` to `CoreM`, so that the output can be sent through the logging infrastructure rather than `IO.println`.
    This is important, because tests are not allowed to be noisy, and we have no way to capture `IO` output.

[33mcommit a99ce01eb134ffea8f4cd842349d22bd7722e747[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Sat Feb 10 05:01:45 2024 +0000

    chore(CategoryTheory/Sites): create a folder for files related to the coherent topology (#9920)
    
    Creates the folder `CategoryTheory/Sites/Coherent` and moves two files into it. Preparation for further reorganisation of this material and additions to it.

[33mcommit d43db9f525ec944de28b8e5c6140b5b3d6c50dcb[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Sat Feb 10 01:29:01 2024 +0000

    chore(Tactic/CancelDenoms/Core): Qq-ify (#9422)
    
    This means all the unification is done at compile-time rather than runtime.
    
    To make the type of the proof expressible with Qq, we have to construct the numeric literal up front.
    
    I can't actually measure a meaningful performance difference in the tactic now,  but this spelling is more strongly-typed, and thus the semantics are clearer.

[33mcommit 1c8a8a8e980830b252aa126cf2751ead088c63f6[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Fri Feb 9 22:56:46 2024 +0000

    chore: tidy various files (#10362)

[33mcommit e7d5230e6c19b2aef68f8234fd3f501f5003f36b[m
Author: Michael Stoll <Michael.Stoll@uni-bayreuth.de>
Date:   Fri Feb 9 21:00:14 2024 +0000

    chore(NumberTheory/LSeries): create directory, move file (#10385)
    
    This PR creates a new directory `Mathlib/NumberTheory/LSeries` and moves the file `Mathlib/NumberTheory/LSeries.lean` to `Mathlib/NumberTheory/LSeries/Basic.lean`.
    
    This is in preparation of adding more material on L-series. See [here](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/L-series/near/420712599) on Zulip.

[33mcommit 0be5ab033ba1444d632c32aab8cd79fb9aefd049[m
Author: Sebastian Ullrich <sebasti@nullri.ch>
Date:   Fri Feb 9 21:00:13 2024 +0000

    chore: cache: do not try to upload files just downloaded (#9687)
    
    If `put` in CI finds that an archive already exists in the local cache, we can assume it exists in the cloud cache as well. Should provide a good-enough avoidance of repeatedly uploading the same archive on hosts like Cloudflare that do not support no-overwrite and still save a ton of write requests on Azure.
    
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>

[33mcommit 1d066860c6a09175b855ba42790314e688728e07[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Fri Feb 9 20:27:07 2024 +0000

    feat(CategoryTheory/Limits): pushouts in the category of sets (#9992)
    
    This PR studies pushouts in the category of types. Specific properties of the pushout when one of the morphisms is injective are obtained.
    
    This PR partly removes the reference to the issue https://github.com/leanprover-community/mathlib4/issues/5752 : the `HasPushouts (Type _)` instance can now be found automatically, but not `HasPullbacks`.
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit de7d014c5d2a8b01ae5c5859c002eea6515febc8[m
Author: Martin Dvo≈ô√°k <martin.dvorak@matfyz.cz>
Date:   Fri Feb 9 19:37:45 2024 +0000

    feat: `Matrix.fromRows` and `Matrix.fromColumns` multiplied by vectors (#10379)
    
    
    Zulip discussion:
    https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/.E2.9C.94.20sumType_zeroFun_dotProduct
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 77656757a5ece80969d66f7447518ceafb96e5f1[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Fri Feb 9 19:37:44 2024 +0000

    feat: generalize `ContinuousMultilinearLinearMap.mkPiField` to `mkPiRing` (#9910)
    
    This matches the generality of the non-continuous versions.
    
    The `norm_smulRight` lemma is the only new result.

[33mcommit c721d5cc34b3de4035902ffad63762e605b025d7[m
Author: Christopher Hoskin <christopher.hoskin@gmail.com>
Date:   Fri Feb 9 19:11:38 2024 +0000

    refactor(Topology/Order) : Fix inconsistencies between Lower/Upper and Scott topologies (#10346)
    
    - Make type explicit in def of Scott-Hausdorff and Scott topologies
    - Move `With{Lower|Upper}Homeomorph` into the correct namespace
    
    
    
    Co-authored-by: Christopher Hoskin <mans0954@users.noreply.github.com>

[33mcommit c4cd464baebba7087437c2949e275d6c04bdba99[m
Author: YnirPaz <paznir83@gmail.com>
Date:   Fri Feb 9 16:54:30 2024 +0000

    docs: incorrect file name (#10382)
    
    docs(SetTheory/Ordinal/Basic.lean): fix file name
    
    Change OrdinalArithmetic.lean to Ordinal/Arithmetic.lean.

[33mcommit 1b99589c8d864ac20f01547b43d02a670a29cbf8[m
Author: JADekker <114015169+JADekker@users.noreply.github.com>
Date:   Fri Feb 9 16:54:29 2024 +0000

    feat : Add metric Lindel√∂f = second countable (#10376)
    
    Add SecondCountableTopology.from_pseudometric_Lindelof, which is an instance that creates a second countable topology from a pseudometric Lindelof space. This allows one to synthesize that a pseudometric Lindelof space is a `SeparableSpace`.

[33mcommit 65cb92789241341b6a057c038f41940e5cd60eb3[m
Author: Sebastian Ullrich <sebasti@nullri.ch>
Date:   Fri Feb 9 16:31:29 2024 +0000

    chore: add "porting notes" benchmarking metric (#5994)

[33mcommit 9983069fe1323295bef67a813de0101b1f4e59f5[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Fri Feb 9 16:01:58 2024 +0000

    doc: fix typo (#10380)
    
    Fixed a minor typo.

[33mcommit 9a10bb9bd6de4564d4adb259ee321c709e2b6aa6[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Fri Feb 9 15:09:39 2024 +0000

    feat: add `Isometry.nnnorm_map` (#10367)
    
    This is not placed directly next to its `norm` cousin because there is no `NNNorm` instance on `SeminormedGroups` at that point in the file.

[33mcommit 117789e22967c11dd1fc3d7716dca99d23145fb9[m
Author: L <hi@llllvvuu.dev>
Date:   Fri Feb 9 14:17:45 2024 +0000

    feat: generalize `cocompact_eq` (#10285)
    
    example use case: `cocompact_le` with `integrable_iff_integrableAtFilter_cocompact` from #10248 becomes a way to prove integrability from big-O estimates (e.g. #10258)
    
    
    
    Co-authored-by: L Lllvvuu <git@llllvvuu.dev>

[33mcommit 22ba268f0f0bd39df3faee02883a91eb2482bfcc[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Fri Feb 9 13:35:34 2024 +0000

    chore: rename declarations containing `nNReal` to `nnreal` (#10372)

[33mcommit 359fc77c63f37b7de88ad2b57f9667d55d04f115[m
Author: Scott Morrison <scott@tqft.net>
Date:   Fri Feb 9 12:54:00 2024 +0000

    chore: bump Std (#10378)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 3a4cb1bae23f88fa34e6339c56368052d83f9ed9[m
Author: Oliver Nash <github@olivernash.org>
Date:   Fri Feb 9 12:11:32 2024 +0000

    chore: remove porting note + workaround now that `simp` fixed (#10375)

[33mcommit 3e8b888dc9e0163fcb30caf6cf53a2c8cc2d680c[m
Author: Xavier Roblot <46200072+xroblot@users.noreply.github.com>
Date:   Fri Feb 9 11:48:35 2024 +0000

    feat: Add exists_ideal_in_class_of_norm_le (#9084)
    
    Prove that each class of the classgroup of a number field contains an integral ideal of small norm.

[33mcommit 160455508bf64a8dd92e6288445b51e3c09247a5[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Fri Feb 9 09:06:20 2024 +0000

    feat: adds `IsSelfAdjoint.algebraMap` (#10366)
    
    `algebraMap R A r` is selfadjiont when `A` is a star `R`-algebra and `r` is selfadjoint.

[33mcommit dd92a5ccab16cbfff61a6baec003e20e79466eae[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Fri Feb 9 09:06:19 2024 +0000

    feat: add `star_mul_self_add_self_mul_star` (#10365)
    
    adds the lemma: `star a * a + a * star a = 2 ‚Ä¢ ((‚Ñú a) ^ 2 + (‚Ñë a) ^ 2)` for star algebras over `‚ÑÇ`.

[33mcommit c94fc52148efe1614b2976ae76ef7862d7f5cae3[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Fri Feb 9 08:22:46 2024 +0000

    doc: fix typo (#10360)
    
    Fixed minor typo.

[33mcommit 2e153a6391654fa2b82a1258cfa8c38043225969[m
Author: Christian Merten <christian@merten.dev>
Date:   Fri Feb 9 04:56:16 2024 +0000

    chore(CategoryTheory/Galois): fix spelling and rename connected objects (#10363)
    
    Changes the spelling of `FibreFunctor` to `FiberFunctor` to match the US spelling and adapts other names accordingly. Renames `ConnectedObject` to `IsConnected` to match `IsGalois`.

[33mcommit f5a4b1023cf54a95906b40dbd4d0b1b81368e5c7[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Fri Feb 9 04:56:15 2024 +0000

    chore(Analysis/Seminorm): golf (#10323)
    
    - Add `absorbent_iff_eventually_nhdsWithin_zero`.
    - Use it to golf `Seminorm.bddAbove_of_absorbent`.

[33mcommit 23bf9fba412bd5b9d88b52303c09defa8bf083fb[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Fri Feb 9 04:56:14 2024 +0000

    feat(CategoryTheory): characterization of epi/mono with limits (#9989)
    
    In this PR, it is shown that monomorphisms can be characterized in terms of pullback squares. Future applications of this include the fact that if a family of functors reflects isomorphisms, it shall also reflect monomorphisms and epimorphisms (provided suitable limits/colimits exist).

[33mcommit 8b0bff10cec4bcedcb238f28f058b1f735c1fe5d[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Fri Feb 9 04:56:13 2024 +0000

    feat(CategoryTheory/Localization): the localized category has finite products (#9692)
    
    In this PR, it is shown that under suitable assumptions, a localized category has finite products.

[33mcommit 6bbc37067d55f0a66876d14ddf1e41126362aaea[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Fri Feb 9 04:56:12 2024 +0000

    feat(Algebra/Homology/HomotopyCategory): rotating and shifting distinguished triangles (#9615)
    
    In this PR, we obtain the main technical results that shall be used to verify the pretriangulated category axioms for the homotopy category of cochain complexes: the isomorphisms `mappingCone.rotateTrianglehIso` and `mappingCone.shiftTriangleIso` which express the behavior of standard distinguished triangles with respect to rotation and shift.

[33mcommit df4dbd30880a9c42ef79e40919043fa6a4cc4766[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Fri Feb 9 04:26:51 2024 +0000

    feat(Algebra/Homology): the class of quasi-isomorphisms in the homotopy category (#9686)
    
    This PR introduces the class of quasi-isomorphisms in the homotopy category of homological complexes.

[33mcommit f7a7fe0f25ffdbdaa0bab6ee5de3329fa802615c[m
Author: Scott Morrison <scott@tqft.net>
Date:   Fri Feb 9 00:04:31 2024 +0000

    chore: move ProofWidgets to v0.0.28 (#10364)
    
    This should resolve an issue with errors about the ProofWidgets lakefile that users have been experiencing since `v4.6.0-rc1`.
    
    See [zulip](https://leanprover.zulipchat.com/#narrow/stream/270676-lean4/topic/Invalid.20lake.20configuration/near/419519707).
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 7bb42396d9eee41e911ef01f6aa2f1478a780515[m
Author: Moritz Doll <moritz.doll@googlemail.com>
Date:   Thu Feb 8 22:44:56 2024 +0000

    feat(NormedSpace): Move toSpanNonzeroSingleton to new file and add LinearIsometryEquiv (#10118)

[33mcommit bdeb5d975153d7fce49f47be55a8fb7f7791373a[m
Author: Moritz Doll <moritz.doll@googlemail.com>
Date:   Thu Feb 8 21:54:00 2024 +0000

    feat: Characterization of CocompactMap in terms of norms (#10182)

[33mcommit 721955621079aec78bb0e97f404694b100e5e639[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Thu Feb 8 20:41:42 2024 +0000

    feat(CategoryTheory/Localization): right resolutions (#10301)
    
    Given a morphism of localizers `Œ¶ : LocalizerMorphism W‚ÇÅ W‚ÇÇ` (i.e. `W‚ÇÅ` and `W‚ÇÇ` are morphism properties on categories `C‚ÇÅ` and `C‚ÇÇ`, and we have a functor`Œ¶.functor : C‚ÇÅ ‚•§ C‚ÇÇ` which sends morphisms in `W‚ÇÅ` to morphisms in `W‚ÇÇ`), we introduce the notion of right resolutions of objects in `C‚ÇÇ`: if `X‚ÇÇ : C‚ÇÇ`, a right resolution consists of an object `X‚ÇÅ : C‚ÇÅ` and a morphism `w : X‚ÇÇ ‚ü∂ Œ¶.functor.obj X‚ÇÅ` that is in `W‚ÇÇ`. Then, the typeclass `Œ¶.HasRightResolutions` holds when any `X‚ÇÇ : C‚ÇÇ` has a right resolution. This shall be used in future works on derived functors.
    
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit 7ab6771e8218f7ea8204a987a433ae2cb6ad96b0[m
Author: Christian Merten <christian@merten.dev>
Date:   Thu Feb 8 20:07:16 2024 +0000

    feat(CategoryTheory/Galois): characterisation of connected finite `G`-sets (#10228)
    
    A finite `G`-set is connected if and only if the `G`-action is transitive.

[33mcommit 5e760630bf79cae9a8f02c9406d54ad593f6ff31[m
Author: Junyan Xu <junyanxumath@gmail.com>
Date:   Thu Feb 8 20:07:15 2024 +0000

    doc: separable closure of F in E (#9958)
    
    Change the expression "separable closure of `E / F`" to "separable closure of `F` in `E`", which IMO is closer to everyday usage. I think we should do the same for "perfect closure" in #9488.
    
    Also remove the use of some parenthesized adjectives: IMO "(some adjective)" signifies that "some adjective" will be assumed to be the default in subsequent text, making it unnecessary to mention "some adjective" every time. This applies to "(relative)" and "(infinite)" in the file SeparableClosure. Writing both "(infinite)" and "(finite)" signifies that both are assumed to be default, which is not our intention (I think we intend to make "infinite" the default). Therefore I kept the first "(infinite)" and removed all subsequent "(infinite)" and parentheses around "finite".
    
    In the file SeparableDegree, the infinite separable degree is not yet defined, so "finite" is the default instead: indeed the file omits "finite" almost everywhere, so I just remove the remaining three occurrences of "(finite)".
    
    
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>
    Co-authored-by: acmepjz <acme_pjz@hotmail.com>

[33mcommit 28dae78ba7dfa5ad2c0a61992a4dd242189f6bda[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Thu Feb 8 19:09:05 2024 +0000

    feat: change `Subgroup` and `Submonoid` induction principles to work with `induction` (#9861)
    
    Induction principles have to be fully dependent in order to work with the `induction` tactic. This is usually a good thing anyway, since the dependent version is often more convenient to use, and avoids the caller having to fumble with generalizing over an existential.
    
    This changes the following induction principles (and their additive versions):
    * `Submonoid.closure_induction_{left,right}`
    * `Subgroup.closure_induction_{left,right}`
    * `Subgroup.closure_induction''` (no submonoid version exists)
    
    Arguments to these lemmas have also been renamed to drop the `H`, as seems to be preferred for `induction` lemmas.

[33mcommit fd0d24aba61472605cbf85ed0ac9275984e02648[m
Author: Christian Merten <christian@merten.dev>
Date:   Thu Feb 8 17:51:34 2024 +0000

    feat(CategoryTheory/Galois): definition and characterisation of Galois objects (#10215)
    
    Defines Galois objects in a Galois category in a fibre functor independent way, also gives an equivalent characterisation in terms of a fibre functor.
    
    To allow for a definition that only depends on `C`, contrary to what was said earlier, we introduce a `GaloisCategory` typeclass extending `PreGaloisCategory` that additionally asserts the existence of a fibre functor.
    
    
    
    Co-authored-by: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>

[33mcommit a1375b1b7fc8ae004959b85353e12cd3ceaeff83[m
Author: damiano <adomani@gmail.com>
Date:   Thu Feb 8 16:52:48 2024 +0000

    docs: add `monicity` to the module docs (#10359)
    
    Adding docs is (almost) always good!  In this case, it was prompted by [this Zulip discussion](https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/.22Missing.20Tactics.22.20list/near/420442132).

[33mcommit faecefeb97d9966ffdc5dd1d1fccea681ad27cfc[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Thu Feb 8 16:52:47 2024 +0000

    feat(Algebra/UniformConvergence): drop unneeded assumptions (#10321)
    
    - Prove a version
      of `UniformOnFun.continuousSMul_induced_of_image_bounded`
      for `UniformFun`s.
    - Deal with `œÜ : H ‚Üí‚Çó[ùïú] (Œ± ‚Üí E)` and `ofFun ‚àò œÜ`,
      not `œÜ : H ‚Üí‚Çó[ùïú] (Œ± ‚Üí·µ§[ùîñ] E)`.
    - Drop unneeded assumptions (nonempty, directed).

[33mcommit 511f7e7b93efc5189e387533f0b4cd3374f01406[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Thu Feb 8 16:52:47 2024 +0000

    feat(UniformConvergenceTopology): add `UniformOnFun.continuous_rng_iff` (#10317)

[33mcommit 1f7bdd4a60674087eea1d4e4898390b6d200e954[m
Author: Moritz Doll <moritz.doll@googlemail.com>
Date:   Thu Feb 8 16:52:46 2024 +0000

    feat(MeasureTheory): integral_comp for LinearIsometryEquiv  (#10105)
    
    Composition with a LinearIsometryEquiv on a finite dimensional real Hilbert space preserves integrals.

[33mcommit 00c3cd407c0b306a4c9e11db99d0feffb4d69904[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Thu Feb 8 16:52:45 2024 +0000

    feat(CategoryTheory): prerequisites for the existence of finite products in localized categories (#9702)
    
    This PR contains various prerequisites in order to show that under suitable assumptions, a localized category of a category that has finite products also has finite products:
    * the equivalence of categories `(J ‚Üí C) ‚âå (Discrete J ‚•§ C)`
    * more API for the existence of limits as a consequence of a right adjoint to the constant functor `C ‚•§ (J ‚•§ C)`.
    * the typeclass `MorphismProperty.IsStableUnderFiniteProducts`

[33mcommit b6771e1fe4498ab0ebf5695227c61b2675d4dc86[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Thu Feb 8 16:52:44 2024 +0000

    feat(Algebra/Homology): signs for the construction of the total complex (#9335)
    
    This PR creates a new file `Algebra.Homology.ComplexShapeSigns` which deals with signs conventions for the definition of total complexes of bicomplexes, the extension of bifunctors to complexes, the tensor product, etc.

[33mcommit 1c01109db8c98d4b8fd5f182cea39c19f09a61bf[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Thu Feb 8 14:48:18 2024 +0000

    feat: change Type to Sort in `Algebra/Classes`, fix some priorities (#10354)

[33mcommit a2a2298f6200b0286bf7de1e5577041d36da57bb[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Thu Feb 8 14:48:17 2024 +0000

    feat(Algebra/Homology/HomotopyCategory): definition of the distinguished triangles (#9614)
    
    This PR defines the triangles which shall be the distinguished triangles for the (pre)triangulated structure on the homotopy category of cochain complexes in an additive category.

[33mcommit 12f566f057dd7e5252da3ed11cbb22c4b57ff16a[m
Author: Patrick Massot <patrickmassot@free.fr>
Date:   Thu Feb 8 13:29:02 2024 +0000

    feat: Add SurjOn.image_preimage (#10342)

[33mcommit 3939e04db6201ddb6b4df9e3090666c98ea512f4[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Thu Feb 8 13:29:01 2024 +0000

    feat(Analysis/Convex): lemmas about low-dimensional `stdSimplex`es (#10325)
    
    Forward-port of leanprover-community/mathlib#19101
    Motivated by https://github.com/Shamrock-Frost/BrouwerFixedPoint
    
    Co-authored-by: @Shamrock-Frost

[33mcommit 890dba7427077f141a6b269c8cb441a42c2bbb2b[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Thu Feb 8 13:29:00 2024 +0000

    chore: tidy various files (#10311)

[33mcommit 71b03a208842032fbc6fb705e4a92546a8ec2a8a[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Thu Feb 8 13:28:59 2024 +0000

    chore(CountableDenseLinearOrder): `Encodable` -> `Countable` (#10308)

[33mcommit 79c11a0100ed9df67a59e8f062c43e33a12a990d[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Thu Feb 8 13:28:58 2024 +0000

    fix: more accurate docstring (#9919)
    
    The statement of a TODO in `CategoryTheory.Abelian.Refinements` is fixed. Contrary to what was suggested, arguing "up to refinements" in abelian categories corresponds to arguing to a "refinements" topology on abelian categories, rather than the canonical topology.

[33mcommit dbe43ae0b5762bf7d89908c596efdd3ff7e8e7ac[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Thu Feb 8 12:19:53 2024 +0000

    feat: lower priority in Init/Order/Defs (#10357)

[33mcommit 262ef855daa06357366a23ed4b338d90346afe0b[m
Author: Scott Morrison <scott@tqft.net>
Date:   Thu Feb 8 10:24:49 2024 +0000

    chore: nlinarith bug caused by exposing loose bvars (#10353)
    
    Certainly better fixes to the panicking problem here are possible, by simply not traversing into places that would have loose bvars. However I'd like to get this patched quickly, so anyone wanting to make such a change can please do it in a follow up PR! :-)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 4656d5455da9dad68cde5489d043554348ae3329[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Thu Feb 8 10:24:48 2024 +0000

    chore: remove unnecessary `Mathlib.Meta.Positivity` namespacing (#10343)

[33mcommit 75ae8cbbeba910cd41b550d58aef20d6b07e175e[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Thu Feb 8 10:24:47 2024 +0000

    chore(NormedSpace/FiniteDimension): reuse a proof about groups (#10313)
    
    Reuse `HasCompactSupport.eq_zero_or_locallyCompactSpace_of_addGroup`
    in the proof of `HasCompactSupport.eq_zero_or_finiteDimensional`.

[33mcommit 90a2e14255771938229ba409b256ee9dbe041827[m
Author: Brendan Seamas Murphy <shamrockfrost@gmail.com>
Date:   Thu Feb 8 09:11:42 2024 +0000

    Feat(Logic/Nonempty): Add a non-dependent version of `Nonempty.forall` for better unification (#10347)
    
    Add a non-dependent version of `Nonempty.forall` for better unification

[33mcommit d57d0cd55362bffa22ae2e07a05b2020a502eb20[m
Author: damiano <adomani@gmail.com>
Date:   Thu Feb 8 09:11:41 2024 +0000

    Deprecate allowing auto-replacement (#10302)
    
    Following [these](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Thank.20you.20for.20the.20deprecation.20warnings!/near/420078161) [Zulip](https://leanprover.zulipchat.com/#narrow/stream/270676-lean4/topic/machineApplicableDeprecated.20tag.20attribute/near/397630551) discussions, I realised that my deprecation script produced a deprecation syntax that did not allow for auto-replacement in S√©bastien's #10185.
    
    This PR fixes the deprecation statements, allowing self-correction: 119 times I replaced
    
    `@[deprecated xxx] --> @[deprecated]`.

[33mcommit a1d9afe78d3b8306b06260f7428180b6fbed74c1[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Thu Feb 8 08:31:06 2024 +0000

    feat(CategoryTheory/Functor): definition of Kan extensions (#10195)
    
    This PR introduces basic definitions for Kan extensions of functors. It prepares for future development of derived functors and a refactor of the file `CategoryTheory.Limits.KanExtension`.
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit e4ddbbb38079e8008dfe8b8fdbcb9bc1e2431c35[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Thu Feb 8 07:19:16 2024 +0000

    feat: fix `decidableEq` and `decidableLT` fields in the `LinearOrder` instance on `Bool` (#10333)
    
    Currently, the fields are filled in by an automatic parameter, which does not match the canonical decidability instances on Bool, creating some diamonds down the road.

[33mcommit 62126e3cbdb13e8ddd676b456cea999cd2e274bf[m
Author: Moritz Doll <moritz.doll@googlemail.com>
Date:   Thu Feb 8 06:06:16 2024 +0000

    feat(Analysis/Distribution/SchwartzMap): projection to ZeroAtInfty and corresponding type class (#9987)
    
    Adds a characterization of ZeroAtInfty in terms of norms and uses one direction to show that every Schwartz function is zero at infinity.
    We also add a few lemmas that characterize elements of the `cocompact` filter in terms of norm estimates.

[33mcommit 922e827c77bb3f60417a259de8f96d9ec125d66c[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Thu Feb 8 05:11:39 2024 +0000

    chore(LinearAlgebra/QuadraticForm): fixups to #10097 (#10167)
    
    I didn't get a chance to review #10097 before it was merged; this contains some minor fixups.
    
    This removes `LinearMap.linMulLin`, as it can be recovered easily via `LinearMap.mul`.

[33mcommit 2ae084bf0336df14c396e81d587dd801cf8bcb78[m
Author: Scott Morrison <scott@tqft.net>
Date:   Thu Feb 8 04:11:07 2024 +0000

    chore: bump Std (#10351)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 8d817bbea3313e497d6f65f9757dc1b40bc9fc53[m
Author: Wrenna Robson <wren.robson@gmail.com>
Date:   Wed Feb 7 22:43:18 2024 +0000

    feat(Data/Fin/OrderHom): Factor out `succAbove` and `predAbove` from `Data.Fin.Basic`. (#10166)
    
    Move `succAbove` and `predAbove` to their own file, updating their documentation and adding an `OrderHom` instance for `predAbove`, `predAboveOrderHom`.

[33mcommit 031453e0041b9477a586cc41cae27ecfd9e22cdc[m
Author: Xavier Roblot <46200072+xroblot@users.noreply.github.com>
Date:   Wed Feb 7 22:10:20 2024 +0000

    feat: Proof that `IntermediateField.lift` is injective (#10031)
    
    Add `map_injective` and `lift_injective` for `IntermediateField`. Also minize the imports

[33mcommit 9b7f99bdfda4d274c4c0b290d8c91632c0cbae09[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Wed Feb 7 19:45:29 2024 +0000

    doc: fix typos (#10334)

[33mcommit b4f55ab21eafdee5194dd9e2aa2b065a29ebea82[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Feb 7 19:45:29 2024 +0000

    chore(Topology/Algebra): add missing `#align`s (#10307)

[33mcommit 92e0962fd08f464e2725e452852f36a5dacc9f81[m
Author: Brendan Seamas Murphy <shamrockfrost@gmail.com>
Date:   Wed Feb 7 19:45:28 2024 +0000

    chore(Data/Set/Lattice): Deduplicate namespace Set. from CABA instance (#10263)
    
    Dedup Set.Set.completeBooleanAlgebra to Set.completeBooleanAlgebra

[33mcommit 9eec23d04b2c6920c7a6b56f2c1ea1abc1dc6c74[m
Author: Xavier Roblot <46200072+xroblot@users.noreply.github.com>
Date:   Wed Feb 7 19:45:27 2024 +0000

    feat: Generalize results of `CanonicalEmbedding` to fractional ideals (#9837)
    
    The main results of `NumberTheory.NumberField.CanonicalEmbedding`, that is `exists_ne_zero_mem_ringOfIntegers_lt` and `exists_ne_zero_mem_ringOfIntegers_of_norm_le` about the existence of algebraic integers satisfying special properties, are generalized from the ring of integers to fractional ideals.

[33mcommit c458927d73c9e001280d8aeccef670b3fd448581[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Wed Feb 7 19:19:40 2024 +0000

    chore: shake some imports (#10341)

[33mcommit e4d4665e31b6bb1af932f09836a0a51b3c2e773d[m
Author: Newell Jensen <newell.jensen@gmail.com>
Date:   Wed Feb 7 17:07:43 2024 +0000

    feat(GroupTheory/SpecificGroups/Coxeter) : Add Coxeter Systems and Coxeter Groups (#8223)
    
    Coxeter Systems and Coxeter Groups
    
    
    Co-authored-by: Oliver Nash <github@olivernash.org>

[33mcommit ba9f2e5baab51310883778e1ea3b48772581521c[m
Author: Scott Morrison <scott@tqft.net>
Date:   Wed Feb 7 15:18:19 2024 +0000

    chore: bump dependencies (#10315)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 8857f4e274320b26374cb41773618a7a92288aca[m
Author: Oliver Nash <github@olivernash.org>
Date:   Wed Feb 7 15:18:18 2024 +0000

    feat: add proof of Jordan-Chevalley-Dunford decomposition (#10295)

[33mcommit 9ac3278bc7ffe80b6dd4095a6d97afe9e7607f15[m
Author: Johan Commelin <johan@commelin.net>
Date:   Wed Feb 7 14:08:14 2024 +0000

    feat(RingTheory/MvPolynomial): funext for homogeneous polynomials (#10300)

[33mcommit 7b9334116f181c70ec0d71f43d0d8fe066c26839[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Feb 7 13:39:53 2024 +0000

    chore(NewtonIdentities): drop `DecidableEq` assumptions (#10324)

[33mcommit 4daa227dc74213b981af913324bd4854b86fc668[m
Author: Moritz Doll <moritz.doll@googlemail.com>
Date:   Wed Feb 7 13:12:33 2024 +0000

    feat(MeasureTheory): product of bases and Basis.addHaar commute (#10115)

[33mcommit bfb91cdb56a586c61eff3ca3af41e090b439f745[m
Author: Scott Morrison <scott.morrison@gmail.com>
Date:   Wed Feb 7 23:50:52 2024 +1100

    revert "shake"
    
    This reverts commit b90d21b12feea09dc6e6c2aa01d613a4aa291235.

[33mcommit b90d21b12feea09dc6e6c2aa01d613a4aa291235[m
Author: Scott Morrison <scott.morrison@gmail.com>
Date:   Wed Feb 7 23:50:02 2024 +1100

    shake

[33mcommit b763c212531f828689d9d7b14dd31b219f5ed337[m[33m ([m[1;31morigin/revert_3258[m[33m)[m
Author: Scott Morrison <scott.morrison@gmail.com>
Date:   Wed Feb 7 23:39:54 2024 +1100

    Revert "chore: adaptation PR for leanprover/lean4#3258 (fixing cache isssue in split tactic) (#10328)"
    
    This reverts commit 99a46af439dfceb9052b4f2a667364a31207d035.

[33mcommit 99a46af439dfceb9052b4f2a667364a31207d035[m
Author: Scott Morrison <scott@tqft.net>
Date:   Wed Feb 7 23:38:28 2024 +1100

    chore: adaptation PR for leanprover/lean4#3258 (fixing cache isssue in split tactic) (#10328)
    
    Adaptation PR for leanprover/lean4#3258, which fixes
    leanprover/lean4#3229.
    
    ---
    <!-- The text above the `---` will become the commit message when your
    PR is merged. Please leave a blank newline before the `---`, otherwise
    GitHub will format the text above it as a title.
    
    To indicate co-authors, include lines at the bottom of the commit
    message
    (that is, before the `---`) using the following format:
    
    Co-authored-by: Author Name <author@email.com>
    
    Any other comments you want to keep out of the PR commit should go
    below the `---`, and placed outside this HTML comment, or else they
    will be invisible to reviewers.
    
    If this PR depends on other PRs, please list them below this comment,
    using the following format:
    - [ ] depends on: #abc [optional extra text]
    - [ ] depends on: #xyz [optional extra text]
    -->
    
    [![Open in
    Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)
    
    ---------
    
    Co-authored-by: leanprover-community-mathlib4-bot <leanprover-community-mathlib4-bot@users.noreply.github.com>

[33mcommit 3eb9163add5828846e94568c0b1233384e0bf566[m
Author: Markus Himmel <markus@himmel-villmar.de>
Date:   Wed Feb 7 10:11:14 2024 +0000

    refactor: move natural isomorphisms involving inverses of equivalences (#10278)
    
    - Move all results from `CategoryTheory/Functor/InvIsos.lean` to `CategoryTheory/Equivalence.lean` and delete the former file
    - Replace use of `eqToIso (Functor.comp_id G)` with `G.rightUnitor`
    - Move into `Iso` namespace to enable dot notation
    - Add analogous results stated in terms of `Equivalence` instead of `IsEquivalence`

[33mcommit 963467adad9608bd1e7e7723d362a689588aa09c[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Feb 7 05:43:43 2024 +0000

    chore(ClassNumber/AdmissibleAbsoluteValue): Fintype -> Finite (#10309)

[33mcommit deb48fabfeef42eb106d079d11e44ebc0e30ecf3[m
Author: Martin Dvo≈ô√°k <martin.dvorak@matfyz.cz>
Date:   Wed Feb 7 05:43:42 2024 +0000

    chore: `Matrix.mulVec` and `Matrix.vecMul` get infix notation (#10297)
    
    Zulip discussion:
    https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/Notation.20for.20mul_vec.20and.20vec_mul
    
    
    
    Co-authored-by: Martin Dvorak <mdvorak@ista.ac.at>

[33mcommit 2fe4a57dd3961d221f6d1c804d377b44ba95634c[m
Author: Wrenna Robson <wren.robson@gmail.com>
Date:   Wed Feb 7 04:38:13 2024 +0000

    feat(Data/Fin/Basic): Rename and extend *_above and _below lemmas (#10163)
    
    Rename `succAbove_below`, `succAbove_above`, `predAbove_below` and `predAbove_Above` to more appropriate things, and vary and extend these results to allow for faster proofs elsewhere.
    
    
    
    Co-authored-by: Johan Commelin <johan@commelin.net>

[33mcommit bbbf03784a32878a2a0ca2bebfd886f6ffacc66d[m
Author: Jeremy Tan Jie Rui <reddeloostw@gmail.com>
Date:   Wed Feb 7 03:57:33 2024 +0000

    refactor: split out graph darts (#10312)
    
    Continuation from #10123. `Combinatorics.SimpleGraph.Basic` is now under 1000 lines.

[33mcommit eb994467eb816853002991b358d63df978b7af19[m
Author: Matthew Robert Ballard <matt@mrb.email>
Date:   Wed Feb 7 01:59:24 2024 +0000

    chore: remove duplicate instances (#10316)
    
    These are a few places where duplicates of instances are in scope, eg `variable {K : Type*} [Field K] ... theorem foo [Field K] ....`.

[33mcommit 49212605e40e9d9fcbcd9968ce362f91dad303ca[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Feb 6 21:44:25 2024 +0000

    chore(FieldTheory/Fixed): `Fintype` -> `Finite` (#10310)

[33mcommit 3dc8a1d846d3863706cdbcfc0155b12372e38035[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Feb 6 21:44:24 2024 +0000

    chore(Equiv/Fintype): `Fintype` -> `Finite` in `Equiv.toCompl` (#10305)
    
    Also drop `DecidablePred` assumptions.

[33mcommit ec4beba20683205b0e28705941ece81e541a3e9d[m
Author: Jz Pan <acme_pjz@hotmail.com>
Date:   Tue Feb 6 21:44:23 2024 +0000

    refactor(FieldTheory/PerfectClosure): change the order of some results (#10282)
    
    - Now the perfect closure is a perfect ring without requiring base ring to be a field.
    - Add `mk_pow` and `mk_surjective`.
    - Add explicit names to all of the instances.
    - Add docstrings for the file.

[33mcommit 8cc0b2a6086dc500cdcd239312f659d8cd921ccb[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Tue Feb 6 21:44:22 2024 +0000

    feat(Positivity): Strictness extractors (#10274)
    
    Define combinators to turn strictness assumptions into proofs of nonnegativity or nonzeroness.
    
    These are useful to write `positivity` extensions where having `0 < a` doesn't help.
    
    We might want binary combinators in the future. Eg the pattern "Binary function `foo` is positive/nonnegative/nonzero if its inputs are" is very common.

[33mcommit 8fac0fc0745c59ebbbed59f7bb3f783e1db2040b[m
Author: Scott Carnahan <128885296+ScottCarnahan@users.noreply.github.com>
Date:   Tue Feb 6 20:37:36 2024 +0000

    feat: HahnSeries smul order inequality (#9848)
    
    Given a Hahn series `x` and a scalar `r` such that `r ‚Ä¢ x ‚â† 0`, the order of `r ‚Ä¢ x` is not strictly less than the order of `x`.  If the exponent poset is linearly ordered, the order of `x` is less than or equal to the order of `r ‚Ä¢ x`.  (Note that the order of a Hahn series is not uniquely defined when the exponent poset is not linearly ordered.) This is a complement to the addition result `HahnSeries.min_order_le_order_add`.

[33mcommit 10e41e851b1ba614bc39a03f750fde74e4cbc6e4[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Feb 6 19:27:13 2024 +0000

    chore(Category/Profinite): `Fintype` -> `Finite` (#10306)

[33mcommit 33c4af8d3eddfe663931170b188ae80958bbc103[m
Author: L <hi@llllvvuu.dev>
Date:   Tue Feb 6 19:27:12 2024 +0000

    feat: bounding integrals by asymptotics, part 1 (#10248)
    
    part 1: corollaries such as for `atTop ‚Ñù` yet to come
    
    
    
    Co-authored-by: L Lllvvuu <git@llllvvuu.dev>
    Co-authored-by: L <git@llllvvuu.dev>

[33mcommit 0174e788526a5471c011a2a92154c6d871517a2c[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Tue Feb 6 19:27:11 2024 +0000

    feat: Make the coercion `‚Ñù‚â•0 ‚Üí ‚Ñù‚â•0‚àû` commute defeqly with `nsmul` and `pow` (#10225)
    
    by tweaking the definition of the `AddMonoid` and `MonoidWithZero` instances for `WithTop`. Also unprotect `ENNReal.coe_injective` and rename `ENNReal.coe_eq_coe ‚Üí ENNReal.coe_inj`.
    
    From LeanAPAP

[33mcommit cc31307c1f9b25919b5eafd57ca45c907ad36c69[m
Author: Anatole Dedecker <anatolededecker@gmail.com>
Date:   Tue Feb 6 18:38:19 2024 +0000

    chore: very slight cleanup of `isCompact_pi_infinite` (#10299)
    
    The main change is to not unfold `Filter.pi` and use the API directly. Since this is the kind of proofs people would have a look at I think it's nice to have it match the way we would advise to write it with the current state of the API.

[33mcommit 9f7d05c8c3d355f343054784d20cbf0e1b226e9b[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Tue Feb 6 18:38:18 2024 +0000

    doc: fix typos (#10296)
    
    Fixed minor typos.

[33mcommit 62b46d13a0510b4157ee394ebc57d207bc5ed39b[m
Author: Junyan Xu <junyanxumath@gmail.com>
Date:   Tue Feb 6 18:38:17 2024 +0000

    feat: define `ContinuousMultilinearMap.linearDeriv` and show it's the `fderiv` (#9846)
    
    Co-authored-by: Sophie Morel
    
    
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>
    Co-authored-by: morel <smorel@math.princeton.edu>

[33mcommit d172b39748ec7d0ca17b530e0b19eddc143b4aae[m
Author: Jz Pan <acme_pjz@hotmail.com>
Date:   Tue Feb 6 18:38:16 2024 +0000

    feat(FieldTheory/PurelyInseparable): definition and basic results of purely inseparable extensions (#9488)
    
    Main defintions:
    
    - `IsPurelyInseparable`: typeclass for purely inseparable field extension: an algebraic extension
      `E / F` is purely inseparable if and only if the minimal polynomial of every element of `E ‚àñ F`
      is not separable.
    
    Main results (not exhaustive):
    
    - `isPurelyInseparable_iff_mem_pow`: a field extension `E / F` of exponential characteristic `q` is
      purely inseparable if and only if for every element `x` of `E`, there exists a natural number `n`
      such that `x ^ (q ^ n)` is contained in `F`.
    
    - `IsPurelyInseparable.trans`: if `E / F` and `K / E` are both purely inseparable extensions, then
      `K / F` is also purely inseparable.
    
    - `isPurelyInseparable_iff_natSepDegree_eq_one`: `E / F` is purely inseparable if and only if for
      every element `x` of `E`, its minimal polynomial has separable degree one.
    
    - `isPurelyInseparable_iff_minpoly_eq_X_pow_sub_C`: a field extension `E / F` of exponential
      characteristic `q` is purely inseparable if and only if for every element `x` of `E`, the minimal
      polynomial of `x` over `F` is of form `X ^ (q ^ n) - y` for some natural number `n` and some
      element `y` of `F`.
    
    - `isPurelyInseparable_iff_minpoly_eq_X_sub_C_pow`: a field extension `E / F` of exponential
      characteristic `q` is purely inseparable if and only if for every element `x` of `E`, the minimal
      polynomial of `x` over `F` is of form `(X - x) ^ (q ^ n)` for some natural number `n`.
    
    - `isPurelyInseparable_iff_finSepDegree_eq_one`: an algebraic extension is purely inseparable
      if and only if it has (finite) separable degree one.
    
      **TODO:** remove the algebraic assumption. (will be in later PR)
    
    - `IsPurelyInseparable.normal`: a purely inseparable extension is normal.
    
    - `separableClosure.isPurelyInseparable`: if `E / F` is algebraic, then `E` is purely inseparable
      over the (relative) separable closure of `E / F`.
    
    - `IsPurelyInseparable.injective_comp_algebraMap`: if `E / F` is purely inseparable, then for any
      reduced ring `L`, the map `(E ‚Üí+* L) ‚Üí (F ‚Üí+* L)` induced by `algebraMap F E` is injective.
      In other words, a purely inseparable field extension is an epimorphism in the category of fields.
    
    - `isPurelyInseparable_adjoin_iff_mem_pow`: if `F` is of exponential characteristic `q`, then
      `F(S) / F` is a purely inseparable extension if and only if for any `x ‚àà S`, `x ^ (q ^ n)` is
      contained in `F` for some `n : ‚Ñï`.
    
    - `Field.finSepDegree_eq`: if `E / F` is algebraic, then the `Field.finSepDegree F E` is equal to
      `Field.sepDegree F E` as a natural number. This means that the cardinality of `Field.Emb F E`
      and the degree of `(separableClosure F E) / F` are both finite or infinite, and when they are
      finite, they coincide.
    
    TODO: (will be in later PR)
    
    - `IsPurelyInseparable.of_injective_comp_algebraMap`: if `L` is an algebraically closed field
      containing `E`, such that the map `(E ‚Üí+* L) ‚Üí (F ‚Üí+* L)` induced by `algebraMap F E` is
      injective, then `E / F` is purely inseparable. In other words, epimorphisms in the category of
      fields must be purely inseparable extensions. Need to use the fact that `Emb F E` is infintie
      when `E / F` is (purely) transcendental.
    
    - Prove that the (infinite) inseparable degree are multiplicative; linearly disjoint argument is needed.
    
    
    
    Co-authored-by: Junyan Xu <junyanxumath@gmail.com>
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>

[33mcommit d7eae98ecc136c2523189f08a0b1ca10921a66fa[m
Author: Ali Ramsey <s2158261@ed.ac.uk>
Date:   Tue Feb 6 17:35:05 2024 +0000

    feat(RingTheory): bialgebra definition (#10076)
    
    Add definition of a bialgebra. For FLT.
    
    
    
    Co-authored-by: Kevin Buzzard <k.buzzard@imperial.ac.uk>
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 8e0aa1319faca34dd307f6a5a0af4a1d1f245566[m
Author: Floris van Doorn <fpvdoorn@gmail.com>
Date:   Tue Feb 6 17:35:04 2024 +0000

    fix: improvements I noticed when teaching (#8420)
    
    * Rename (and generalize and move)
    
    ```
    Int.units_ne_neg_self -> units_ne_neg_self
    Int.neg_units_ne_self -> neg_units_ne_self
    ```
    * Change the `simps` config for `Closeds`
    * Add some `gcongr`-lemmas (currently is a bit picky about the exact statement of lemmas tagged with `gcongr`, so I had to add some variants that I could tag).

[33mcommit 229b0badf67874eff8c6a1b1d2829ac79762911e[m
Author: Oliver Nash <github@olivernash.org>
Date:   Tue Feb 6 16:43:07 2024 +0000

    feat: define Newton's method and prove decomposition as nilpotent + root (#10284)
    
    This is just a modified version of the code provided by Antoine Chambert-Loir here: https://leanprover.zulipchat.com/#narrow/stream/116395-maths/topic/jordan-chevalley.20decomposition/near/411402670
    
    Co-authored-by: Antoine Chambert-Loir <antoine.chambert-loir@math.univ-paris-diderot.fr>

[33mcommit cafe0493941607edbbbeebe0b822ef3e98762c3c[m
Author: Christian Merten <136261474+chrisflav@users.noreply.github.com>
Date:   Tue Feb 6 16:43:06 2024 +0000

    chore(RingTheory/Flat): remove finished TODOs (#10221)

[33mcommit ded9c66f3c1fd9165a252bd431b87c84b4efae15[m
Author: berndlosert <berndlosert@gmail.com>
Date:   Tue Feb 6 16:16:33 2024 +0000

    doc(Topology.Category.TopCat.Basic): fix links (#10242)
    
    The `trivial` link was linking to Init.Core and `topology.category.TopCat.adjunctions` is from Lean 3 and not valid anymore in Lean 4.

[33mcommit ebb7343ed3b97f70bf7ea9bf2389c2f4e52f526d[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Tue Feb 6 15:01:04 2024 +0000

    chore: Make sure `WithOne` doesn't import rings (#10275)
    
    Reorder the `WithOne` material.
    * `Algebra.Group.WithOne.Defs` was hiding a `Ring` import! I credit Johan and Mario for https://github.com/leanprover-community/mathlib/pull/2707.
    * `WithBot` is not needed to define `WithOne.unone`. It's simpler to redefine it by hand. In the future, we might want to have an `Option` version (but not sure how much that's worth, since it would basically be `Option.get` again).

[33mcommit 97121712f27e458a916d57fd08fb69bae903bb28[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Tue Feb 6 15:01:02 2024 +0000

    doc: add docstrings for ChartedSpace.{atlas,chartAt} and their aliases (#10169)

[33mcommit f43e781d464ad712df5ac7353a4a1218fdcb2cdf[m
Author: David Renshaw <dwrenshaw@gmail.com>
Date:   Tue Feb 6 15:01:01 2024 +0000

    chore: clean up evalNot norm_num extension (#9532)
    
    * Uses `deriveBool`, which was added in #3892, and allows removal of some `have` lines.
    * Changes an `if then else` into a match. This is more readable in my opinion.

[33mcommit a83ab195ac103f3d7bc37c729ae7bca8b50e8735[m
Author: Scott Morrison <scott@tqft.net>
Date:   Tue Feb 6 13:53:47 2024 +0000

    chore: bump Std to leanprover/std4#590 (#10294)
    
    The two `exact?` tests which initially failed have already been improved in Std's test suite for `std_exact?`, so I'm just dropping them here.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit cea4cc6eef18d1a9cd5acacfdc74851e681a3d0b[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Tue Feb 6 13:53:46 2024 +0000

    chore(MetricSpace/HausdorffDistance): split in two (#9809)
    
    The file was becoming a bit large (1550 lines). Split in two files of about 900 and 700 lines:
    the first file contains more basic material, the second file contains all material related to thickenings.
    
    Extend the module docstrings by mentioning the main results in this file.

[33mcommit 383d015aba749aaf99be92ef7e903f9500eaf326[m
Author: David Loeffler <d.loeffler.01@cantab.net>
Date:   Tue Feb 6 13:53:44 2024 +0000

    feat(Analysis/Analytic/Meromorphic): more API for meromorphic functions (#9621)
    
    This PR adds "order of vanishing" for meromorphic functions, and some basic API for functions `MeromorphicOn` a set.

[33mcommit ebb0ed2bc4b8186193a055116d7e6ba1aa5e86d6[m
Author: ADedecker <anatolededecker@gmail.com>
Date:   Tue Feb 6 14:47:05 2024 +0100

    Revert "chore: very slight cleanup of `isCompact_pi_infinite`"
    
    This reverts commit 7a153efa32647849ab6eacf206fa85bcc78e420e.

[33mcommit 7a153efa32647849ab6eacf206fa85bcc78e420e[m
Author: ADedecker <anatolededecker@gmail.com>
Date:   Tue Feb 6 14:44:50 2024 +0100

    chore: very slight cleanup of `isCompact_pi_infinite`

[33mcommit 3007dc8384add2925f2d26777619866c6ac4bb93[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Tue Feb 6 12:08:40 2024 +0000

    chore(Tactic): clean up `q()` notation (#10227)
    
    There is no need to write `(q(some_lemma))`, `q(some_lemma)` already has the right precedence. This also removes some `by exact`s that were either cargo-culted, or fixed by a recent change to Lean / Quote4.

[33mcommit 909ee227c8aa03d748e537ecd22795c4a7c1ff46[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Tue Feb 6 12:08:39 2024 +0000

    chore: uneven spacing for ‚ü® ‚ü© (#10014)
    
    This cleans up instances of
    ```
    ‚ü® foo, bar‚ü©
    ```
    and
    ```
    ‚ü®foo, bar ‚ü©
    ```
    where spaces a on the inside one side, but not on the other side. Fixing this by removing the extra space.
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit fbec264c765ca0b097b50fe27f72080e81e7f3a7[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Tue Feb 6 10:43:28 2024 +0000

    refactor(PartialHomeomorph): make (s : Opens \alpha) implicit (#10082)
    
    It is always used in conjunction with a hypothesis `hs` about `s`.
    
    In Lean 3, these arguments were kept explicit on purpose: given a definition `myDef {x : Œ±} (hx : MyProp x)`,
    if the proof of `hx` was nontrivial (not a variable), Lean would pretty-print it as `myDef _`.
    
    In Lean 4, setting `pp.proofs.withType` or `pp.proofs` to true makes such terms pretty-print as `myDef (x : MyProp)`.
    Hence, this workaround is no longer necessary.
    
    Follow-up to #9894.

[33mcommit 34bbb84ef06f627c6562d5f443fc44666f5c86f8[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Feb 6 09:06:19 2024 +0000

    chore(Analysis/BoxIntegral): `Fintype` -> `Finite` (#10292)

[33mcommit 7ab60686f064a7f73461b1d8c71993fbc36bb50d[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Feb 6 09:06:18 2024 +0000

    chore(InnerProductSpace/Basic): drop some `DecidableEq` assumptions (#10291)

[33mcommit 718437417b23d1bfbde949afdf430e1d7f20d134[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Tue Feb 6 09:06:17 2024 +0000

    chore: tidy various files (#10269)

[33mcommit 691d343449aba8c7db04ca52f30d43504df00a7f[m
Author: Markus Himmel <markus@himmel-villmar.de>
Date:   Tue Feb 6 08:35:34 2024 +0000

    feat: final if colimit of composition with Yoneda is terminal (#10279)

[33mcommit 3fea559cc231973969742d815ef10b7d8eeba031[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Feb 6 07:47:11 2024 +0000

    chore(Algebra/Category): `Fintype` -> `Finite` (#10290)

[33mcommit e2cf2aefd589d0367e86aa205bdbdb19b6d05a78[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Feb 6 07:47:10 2024 +0000

    chore(MeasureTheory): `Fintype` -> `Finite` (#10289)
    
    * Rename `hasFiniteIntegral_of_fintype` to `HasFiniteIntegral.of_finite`, generalize to `[Finite Œ±]`, golf.
    * Rename `integrable_of_fintype` to `Integrable.of_finite`, generalize to `[Finite Œ±]`.
    * Rename `SimpleFunc.ofFintype` to `SimpleFunc.ofFinite`, generalize to `[Finite Œ±]`, use it to golf `SimpleFunc.ofIsEmpty`.
    * Rename `stronglyMeasurable_of_fintype` to `StronglyMeasurable.of_finite`, deprecate `stronglyMeasurable_of_isEmpty`.

[33mcommit d64b678277e81c206bb6382bc3685e4a4cc917ac[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Feb 6 07:47:09 2024 +0000

    chore(PartialHomeomorph): `Fintype` -> `Finite` (#10288)

[33mcommit a76d5c1caf4132153fd1412f37466abf0f60ce2b[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Feb 6 07:47:08 2024 +0000

    feat(Topology/Bases): review `IsSeparable` API (#10286)
    
    * upgrade `isSeparable_iUnion` to an `Iff` lemma, restore the original version as `IsSeparable.iUnion`;
    * add `isSeparable_union` and `isSeparable_closure`;
    * upgrade `isSeparable_pi` from `[Finite Œπ]` to `[Countable Œπ]`, add `IsSeparable.univ_pi` version;
    * add `Dense.isSeparable_iff` and `isSeparable_range`;
    * rename `isSeparable_of_separableSpace_subtype` to `IsSeparable.of_subtype`;
    * rename `isSeparable_of_separableSpace` to `IsSeparable.of_separableSpace`.

[33mcommit 318c8c160e2db2a5d83f72cc5ba98ea1153cd3c5[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Tue Feb 6 07:47:07 2024 +0000

    doc: fix typo (#10280)

[33mcommit d78efd06e1abe6424756d529cc3942efc4d0ae50[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Feb 6 07:03:55 2024 +0000

    chore(NormedSpace/Basic): move some theorems to `NormedSpace.Real` (#10206)
    
    This way we don't switch between general normed spaces and real normed spaces
    back and forth throughout the file.

[33mcommit e415c3ba4d1e59e5af6d0b9b4f71797f97cad62a[m[33m ([m[1;31morigin/test_build[m[33m)[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Feb 6 02:47:28 2024 +0000

    chore(LpSeminorm): further split the file (#10207)

[33mcommit 328b7ecbc986507635abf725bbed4da70e418298[m
Author: Tom√°≈° Sk≈ôivan <skrivantomas@seznam.cz>
Date:   Mon Feb 5 20:21:09 2024 +0000

    chore(fun_prop): move examples to a separate test file (#10281)
    
    chore(fun_prop): move examples to a separate test file

[33mcommit ef34249cd47a1855306e4b08f6f54db54e86b412[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Mon Feb 5 18:23:41 2024 +0000

    doc: fix typo (#10277)

[33mcommit c6a73d4f5ca062cb3fb9631b4ceacbe526407a49[m
Author: Anne Baanen <vierkantor@vierkantor.com>
Date:   Mon Feb 5 18:00:09 2024 +0000

     refactor(Data/FunLike): use unbundled inheritance from FunLike (#8386)
    
    The FunLike hierarchy is very big and gets scanned through each time we need a coercion (via the `CoeFun` instance). It looks like unbundled inheritance suits Lean 4 better here. The only class that still extends `FunLike` is `EquivLike`, since that has a custom `coe_injective'` field that is easier to implement. All other classes should take `FunLike` or `EquivLike` as a parameter.
    
    [Zulip thread](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/.60example.20.28p.20.3A.20P.29.20.3A.20Q.20.3A.3D.20p.60.20takes.200.2E25s.20to.20fail!)
    
    ## Important changes
    
    Previously, morphism classes would be `Type`-valued and extend `FunLike`:
    ```lean
    /-- `MyHomClass F A B` states that `F` is a type of `MyClass.op`-preserving morphisms.
    You should extend this class when you extend `MyHom`. -/
    class MyHomClass (F : Type*) (A B : outParam <| Type*) [MyClass A] [MyClass B]
      extends FunLike F A B :=
    (map_op : ‚àÄ (f : F) (x y : A), f (MyClass.op x y) = MyClass.op (f x) (f y))
    ```
    After this PR, they should be `Prop`-valued and take `FunLike` as a parameter:
    ```lean
    /-- `MyHomClass F A B` states that `F` is a type of `MyClass.op`-preserving morphisms.
    You should extend this class when you extend `MyHom`. -/
    class MyHomClass (F : Type*) (A B : outParam <| Type*) [MyClass A] [MyClass B]
      [FunLike F A B] : Prop :=
    (map_op : ‚àÄ (f : F) (x y : A), f (MyClass.op x y) = MyClass.op (f x) (f y))
    ```
    (Note that `A B` stay marked as `outParam` even though they are not purely required to be so due to the `FunLike` parameter already filling them in. This is required to see through type synonyms, which is important in the category theory library. Also, I think keeping them as `outParam` is slightly faster.)
    
    Similarly, `MyEquivClass` should take `EquivLike` as a parameter.
    
    As a result, every mention of `[MyHomClass F A B]` should become `[FunLike F A B] [MyHomClass F A B]`.
    
    ## Remaining issues
    
    ### Slower (failing) search
    
    While overall this gives some great speedups, there are some cases that are noticeably slower. In particular, a *failing* application of a lemma such as `map_mul` is more expensive. This is due to suboptimal processing of arguments. For example:
    ```lean
    variable [FunLike F M N] [Mul M] [Mul N] (f : F) (x : M) (y : M)
    
    theorem map_mul [MulHomClass F M N] : f (x * y) = f x * f y
    
    example [AddHomClass F A B] : f (x * y) = f x * f y := map_mul f _ _
    ```
    Before this PR, applying `map_mul f` gives the goals `[Mul ?M] [Mul ?N] [MulHomClass F ?M ?N]`. Since `M` and `N` are `out_param`s, `[MulHomClass F ?M ?N]` is synthesized first, supplies values for `?M` and `?N` and then the `Mul M` and `Mul N` instances can be found.
    
    After this PR, the goals become `[FunLike F ?M ?N] [Mul ?M] [Mul ?N] [MulHomClass F ?M ?N]`. Now `[FunLike F ?M ?N]` is synthesized first, supplies values for `?M` and `?N` and then the `Mul M` and `Mul N` instances can be found, before trying `MulHomClass F M N` which *fails*. Since the `Mul` hierarchy is very big, this can be slow to fail, especially when there is no such `Mul` instance.
    
    A long-term but harder to achieve solution would be to specify the order in which instance goals get solved. For example, we'd like to change the arguments to `map_mul` to look like `[FunLike F M N] [Mul M] [Mul N] [highPriority <| MulHomClass F M N]` because `MulHomClass` fails or succeeds much faster than the others.
    
    As a consequence, the `simpNF` linter is much slower since by design it tries and fails to apply many `map_` lemmas. The same issue occurs a few times in existing calls to `simp [map_mul]`, where `map_mul` is tried "too soon" and fails. Thanks to the speedup of leanprover/lean4#2478 the impact is very limited, only in files that already were close to the timeout.
    
    ### `simp` not firing sometimes
    
    This affects `map_smul‚Çõ‚Çó` and related definitions. For `simp` lemmas Lean apparently uses a slightly different mechanism to find instances, so that `rw` can find every argument to `map_smul‚Çõ‚Çó` successfully but `simp` can't: leanprover/lean4#3701.
    
    ### Missing instances due to unification failing
    
    Especially in the category theory library, we might sometimes have a type `A` which is also accessible as a synonym `(Bundled A hA).1`. Instance synthesis doesn't always work if we have `f : A ‚Üí* B` but `x * y : (Bundled A hA).1` or vice versa. This seems to be mostly fixed by keeping `A B` as `outParam`s in `MulHomClass F A B`. (Presumably because Lean will do a definitional check `A =?= (Bundled A hA).1` instead of using the syntax in the discrimination tree.)
    
    ## Workaround for issues
    
    The timeouts can be worked around for now by specifying which `map_mul` we mean, either as `map_mul f` for some explicit `f`, or as e.g. `MonoidHomClass.map_mul`.
    
    `map_smul‚Çõ‚Çó` not firing as `simp` lemma can be worked around by going back to the pre-FunLike situation and making `LinearMap.map_smul‚Çõ‚Çó` a `simp` lemma instead of the generic `map_smul‚Çõ‚Çó`. Writing `simp [map_smul‚Çõ‚Çó _]` also works.
    
    
    
    Co-authored-by: Matthew Ballard <matt@mrb.email>
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>
    Co-authored-by: Scott Morrison <scott@tqft.net>
    Co-authored-by: Anne Baanen <Vierkantor@users.noreply.github.com>

[33mcommit 55f0d234db3171d98b71dc821b88ce9dabb518a2[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Mon Feb 5 15:53:53 2024 +0000

    doc: fix typos (#10271)
    
    Fix typos in docstrings and code.

[33mcommit 208205e6bec7331f908ba50267cdd2c31462731f[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Feb 5 14:11:35 2024 +0000

    chore(WithTop): add `@[simp]` to `coe_add` (#10204)

[33mcommit 2e5d90d55812d87aac442ee496bc9e1a3ee530cd[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Feb 5 14:11:34 2024 +0000

    chore(Topology): move some definitions to new files (#10151)
    
    In some cases, the order of implicit arguments changed
    because now they appear in a different order in `variable`s.
    
    Also, some definitions used greek letters for topological spaces,
    changed to `X`/`Y`.

[33mcommit ad95668564046a495380809b0505330627e16e90[m
Author: Oliver Nash <github@olivernash.org>
Date:   Mon Feb 5 13:02:07 2024 +0000

    feat: add lemma `exists_squarefree_dvd_pow_of_ne_zero` (#10241)

[33mcommit 65a5eadcbc0216985e787be2995e1f31532e9025[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Mon Feb 5 13:02:06 2024 +0000

    chore: Move `positivity` extensions (#10140)
    
    The goal here is to have access to `positivity` earlier in the import hierarchy

[33mcommit 6d578c588734ab5f076a14045b4d53b7deaee7a5[m
Author: Richard Copley <buster@buster.me.uk>
Date:   Mon Feb 5 11:50:25 2024 +0000

    feat: tensor algebra of free module over integral domain is a domain (#9890)
    
    Provide instances
      * `Nontrivial (TensorAlgebra R M)` when `M` is a module over
        a nontrivial semiring `R`
      * `NoZeroDivisors (FreeAlgebra R X)` when `R` is a commutative
        semiring with no zero-divisors and `X` any type
      * `IsDomain (FreeAlgebra R X)` when `R` is an integral domain
        and `X` is any type
      * `TwoUniqueProds (FreeMonoid X)` where `X` is any type
        (this provides `NoZeroDivisors (MonoidAlgebra R (FreeMonoid X))`
        when `R` is a semiring and `X` any type,
        via `TwoUniqueProds.toUniqueProds`
        and `MonoidAlgebra.instNoZeroDivisorsOfUniqueProds`)
      * `NoZeroDivisors (TensorAlgebra R M)` when `M` is a free module
        over a commutative semiring `R` with no zero-divisors
      * `IsDomain (TensorAlgebra R M)` when `M` is a free module over
        an integral domain `R`
    
    In Algebra.Group.UniqueProds:
    * Rename `UniqueProds.mulHom_image_of_injective` to
      `UniqueProds.of_injective_mulHom`.
    * New lemmas `UniqueMul.of_mulHom_image`, `UniqueProds.of_mulHom`,
      `TwoUniqueProds.of_mulHom` show the relevant property holds in the
      domain of a multiplicative homomorphism if it holds in the codomain,
      under a certain hypothesis on the homomorphism.
    
    
    Co-authored-by: Richard Copley <rcopley@gmail.com>
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>

[33mcommit 3284c6f21936535d19e24dd71cdb237b227f058f[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Feb 5 11:04:43 2024 +0000

    chore(LinearAlgebra/*Dual*): Fintype -> Finite (#10265)
    
    Also use lowercase for `DualBases` axioms.

[33mcommit d27890e8b77b5d9d00d6d13610a1dad0c8cea1bd[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Feb 5 10:10:50 2024 +0000

    chore(MetricSpace/Baire): fix Encodable/Countable (#10249)
    
    - Assume `{Œπ : Sort*} [Countable Œπ]`
      instead of `{Œπ : Type*} [Encodable Œπ]`.
    - Generalize 2nd Baire theorem from T‚ÇÇ spaces to R‚ÇÅ spaces.
    - Rename type variables.

[33mcommit 6d4aa853464317a69f630e3f60be7ef09e1426fc[m
Author: Markus Himmel <markus@himmel-villmar.de>
Date:   Mon Feb 5 10:10:49 2024 +0000

    feat: trivial morphisms in StructuredArrow (#10244)

[33mcommit eedf69c94107be4446f00303539ff8510fe4cad5[m
Author: Jack Valmadre <jack.valmadre@gmail.com>
Date:   Mon Feb 5 10:10:49 2024 +0000

    feat: fderiv of ContinuousMultilinearMap applied to const; use for SchwartzMap.iteratedPDeriv (#9576)
    
    add `ContinuousMultilinearMap.apply`; use for `fderiv`, `iteratedFDeriv`, `SchwartzMap.iteratedPDeriv`
    
    Defining `ContinuousMultilinearMap.apply` as a CLM (using existing proof of continuity) enables the proof that the application of a `ContinuousMultilinearMap` to a constant commutes with differentiation.
    
    This closes a todo in `Mathlib/Analysis/Distribution/SchwartzSpace.lean`.
    
    
    
    Co-authored-by: Jack Valmadre <jvlmdr@users.noreply.github.com>

[33mcommit fbee97e1a7e822babeef45999b9292f2a64aa1ed[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Feb 5 09:20:04 2024 +0000

    chore(Topology): Fintype -> Finite (#10262)

[33mcommit a12f60d418e65204e80a06e18db8132fd61ec210[m
Author: Moritz Doll <moritz.doll@googlemail.com>
Date:   Mon Feb 5 07:15:57 2024 +0000

    feat(Analysis/InnerProductSpace): product of orthonormal basis is orthonormal basis of the L2-product (#10107)

[33mcommit 31eb08ad3b1c4919ad23a87b7a0438e9a504525a[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Feb 5 06:26:52 2024 +0000

    chore(Normed): move `abs_norm`, add `abs_norm'` (#10202)

[33mcommit 6bd7a4911dc7d41337d2ebecc2b732d6194b1d79[m
Author: Junyan Xu <junyanxumath@gmail.com>
Date:   Mon Feb 5 03:57:25 2024 +0000

    chore: golf `separable_iff_squarefree` (#10236)
    
    In fact this theorem admits a proof without using any lemmas introduced in #10170.
    
    For this I had to remove some redundant [GCDMonoid R] assumptions in RingTheory/PrincipalIdealDomain.lean.
    
    
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>

[33mcommit c174b2decb3935de377a3089fb7bbddb15846b43[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Feb 5 02:27:31 2024 +0000

    chore(Module/Torsion): drop `DecidableEq` assumptions (#10253)

[33mcommit 8dd23a49039bc1ce86ef4985acc6ba633c1c2c5c[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Feb 5 00:24:16 2024 +0000

    feat(Matrix/CharP): drop `Fintype` assumption (#10261)
    
    Also generalize `[Ring R]` to `[AddMonoidWithOne R]`.

[33mcommit 1dc9adffe16449da45fc957f9f7f19d511d0897a[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Feb 5 00:24:15 2024 +0000

    chore(NormedSpace/Exponential): Fintype ‚Üí Finite (#10260)

[33mcommit 28c00920ed67ac0f4a5b056aae9d57abd7776bac[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Mon Feb 5 00:24:14 2024 +0000

    fix: generalize DivisionRing.toOfScientific (#9947)
    
    If you can cast a rat to a type, then we probably want decimal notation to work there too.
    
    This has the benefit of making the instance computable even in cases where some parts of the division ring structure are not.
    It also means that this could apply to matrices of rational numbers, which are not a division ring, but could have a rat cast.

[33mcommit 7bcc50412e839b136afedb496ab7a04487851d35[m
Author: Plamen Dimitrov <plamen.dimitrov@intra2net.com>
Date:   Mon Feb 5 00:24:13 2024 +0000

    Focus post-installation steps in the README (#7441)
    
    Installation of mathlib4 is never explicitly explained with the main link focusing on installing Lean4 itself. As most of the setup and making the library available happens when creating a Lean workspace, combine both links into the same section to follow right after the fairly short installation section.

[33mcommit 77ea537a3cc2f7d7c1ea63b90688a71a4578d46e[m
Author: Scott Morrison <scott@tqft.net>
Date:   Sun Feb 4 23:05:53 2024 +0000

    feat: register omega with hint (#10259)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit cbe30b9e820da75930d81b3af175e76470703772[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sun Feb 4 23:05:52 2024 +0000

    feat(EuclideanDomain): drop `DecidableEq` assumptions (#10255)

[33mcommit 203b39666b4f8eee2fe8c29a497ad1222a7b219a[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sun Feb 4 23:05:51 2024 +0000

    chore(MeasureTheory/Cylinders): drop unneeded `DecidableEq` assumptions (#10254)

[33mcommit 78c16c2f770a2767c42a008479855d95d3c555f9[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sun Feb 4 23:05:50 2024 +0000

    feat(LinearAlgebra/Basis): assume `[Finite Œπ]` instead of `[Fintype Œπ]` (#10251)

[33mcommit c3c60474a096101e22a476908650c88d6c0004c8[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sun Feb 4 23:05:49 2024 +0000

    chore(HausdorffDimension): fix `Encodable`/`Countable` (#10250)

[33mcommit 3646044d6316aad487f976d7c0290ab991b099d5[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sun Feb 4 23:05:48 2024 +0000

    chore(LinearAlgebra,BigOperators): drop some decidability assumptions (#10237)
    
    Found by a linter from #10235.

[33mcommit a619d25bae9144192c1f34903fdc4b9835c6e45f[m
Author: Tom√°≈° Sk≈ôivan <skrivantomas@seznam.cz>
Date:   Sun Feb 4 21:54:33 2024 +0000

    feat: `fun_prop` tactic for proving Continuous, Differentiable, Measurable, ... (#10040)
    
    New tactic `fun_prop` to prove FUNction PROPerties like continuity, differentiability, ...

[33mcommit 7ea85499adb94f4fcd6c7db2f9d88cf5bf074613[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sun Feb 4 21:28:57 2024 +0000

    chore(Topology/Category): `[Fintype _]` -> `[Finite _]` (#10257)

[33mcommit 08f99f87097d4d9e8ae542acbd9fafbd8c5e9899[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Sun Feb 4 19:00:05 2024 +0000

    feat(CategoryTheory): PreservesLimits instances for adjoint functors (#9990)
    
    This PR adds `PreservesColimits/PreservesLimits` instances for adjoint functors.
    
    
    
    Co-authored-by: Markus Himmel <markus@himmel-villmar.de>

[33mcommit a55d6e57970aa2e342ac9f6de1c2f5beec64e90b[m
Author: Markus Himmel <markus@himmel-villmar.de>
Date:   Sun Feb 4 17:54:30 2024 +0000

    feat: safe variants of eqToHom_map (#10243)
    
    `eqToHom_map` is notoriously not a good `simp` lemma, but these variants should be safe and already go a long way.

[33mcommit 96b716e807cb75264b33c28ccbbe512742570d3e[m
Author: Markus Himmel <markus@himmel-villmar.de>
Date:   Sun Feb 4 16:12:50 2024 +0000

    chore: fix some Lean-3-isms in comments (#10240)

[33mcommit 7f6325178f4a6a093fcecb905a0077b3a9e9db76[m
Author: Johan Commelin <johan@commelin.net>
Date:   Sun Feb 4 13:41:58 2024 +0000

    chore(Data/Finsupp/Fin): add Finsupp.cons_support (#10192)

[33mcommit e3a011e5d86f8225c0a8f74722f273cfe52dcb5b[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Sun Feb 4 13:16:30 2024 +0000

    chore: rename op_norm to opNorm (#10185)
    
    
    
    Co-authored-by: adomani <adomani@gmail.com>

[33mcommit c9843f72e402554ba439d7e1f0e1d4a715e2fcdf[m
Author: Gabin <68381468+QuinnLesquimau@users.noreply.github.com>
Date:   Sun Feb 4 03:19:42 2024 +0000

    feat(ModelTheory/Basic): additional simp lemmas (#9953)
    
    Also results about injectivity.

[33mcommit cfdc84619dbc3758f135bcfd07ad64cba10c32a0[m
Author: Scott Morrison <scott@tqft.net>
Date:   Sun Feb 4 02:08:21 2024 +0000

    chore: cleanup use of simp singlePass option (#9928)
    
    Of the 18 uses of `singlePass`, in 3 cases we can just use `rw`, in 4 cases it isn't needed at all.
    
    In the other 11 cases we are always use it as `simp (config := {singlePass := true}) only [X]` (i.e. with just a single simp lemma), and that `simp` call would loop forever (usually failing with a maxRecDepth error, sometimes with heartbeats). I've left these as is.
    
    There's also one case where there was a missing `only`.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit c4152bb6ba0fd8b0dd9bb7cb688fdda84c197267[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sun Feb 4 02:08:20 2024 +0000

    refactor(Set/Countable): redefine `Set.Countable` (#9831)
    
    Redefine `Set.Countable s` as `_root_.Countable s`.
    Fix compile, golf some of the broken proofs.

[33mcommit 3a748a56b494eedc56a52a2e806ed58ccbf490cb[m
Author: Martin Dvo≈ô√°k <martin.dvorak@matfyz.cz>
Date:   Sun Feb 4 01:43:28 2024 +0000

    chore(NumberTheory/Bertrand): inconsistent names of assumptions n_large (#10102)

[33mcommit b8ea7cb7072a51dd9c80dcc72153af0d07e7a64b[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Sat Feb 3 21:50:25 2024 +0000

    feat: support Int.natAbs in norm_num (#8855)
    
    
    
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>

[33mcommit b2f2f2cf814f99ea76c80d80208d000333c0727a[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Sat Feb 3 14:26:37 2024 +0000

    feat: `num` and `den` lemmas (#10219)
    
    Add a few basic lemmas about `Rat` and `NNRat` and fix some lemma names
    
    From LeanAPAP

[33mcommit 69f70a5a5d0b5999939c5a7c1b3d60568f82e6bf[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Sat Feb 3 14:26:36 2024 +0000

    chore: Rename `Real.ciSup_empty` (#10217)
    
    and a few more to clarify that they are about `IsEmpty`, not about `‚àÖ`. Make a few more lemmas simp.`

[33mcommit 7af47e01b4dbac5372aefe94996598e26ec7358c[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Sat Feb 3 14:26:35 2024 +0000

    feat: Injectivity on `{a, b}` (#10212)
    
    From LeanAPAP

[33mcommit 57408307eb5b6ff830239bc5995614209a945bb2[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Sat Feb 3 14:26:34 2024 +0000

    feat: `r ‚Ä¢ x / y = r ‚Ä¢ (x / y)` (#10211)
    
    From LeanAPAP

[33mcommit 0201c4411e6cae1f06e825236399bd7a75ecac32[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Sat Feb 3 14:26:34 2024 +0000

    feat: `a ^ (n % Nat.card G) = a ^ n` (#10210)
    
    From LeanAPAP

[33mcommit 3752900e2f1f63b288b060f609b855513e479efc[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Sat Feb 3 14:26:33 2024 +0000

    refactor: Make `Nat.floorRoot` computable (#10208)
    
    Avoiding `Finsupp.mapRange` means that we can actually compute the function.

[33mcommit 7509e796a5f20757d691ae59d0a12d586ff92cfd[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Sat Feb 3 14:26:32 2024 +0000

    feat: `a / c ‚â° b / c [PMOD p]` (#9619)
    
    Also fix a few misported names.
    
    From LeanAPAP

[33mcommit b2f1824c1d0f700719b7c432e34bd29f75cd0300[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Sat Feb 3 13:58:41 2024 +0000

    chore: Rename `Finpartition.supParts` (#10223)
    
    This should be `Finpartition.sup_parts` according to the naming convention

[33mcommit 469d1d7387d3781f4c2d8c2da204f264e6792c06[m
Author: Christian Merten <christian@merten.dev>
Date:   Sat Feb 3 12:31:48 2024 +0000

    feat(CategoryTheory/SingleObj): characterise (co)limits of shape `SingleObj M` in types (#10213)
    
    In the category of types: limits of shape `SingleObj M` are fixed points, colimits are quotients.

[33mcommit aec6887485a6cb8acd708bc5f1f1f331312180a3[m
Author: Oliver Nash <github@olivernash.org>
Date:   Sat Feb 3 11:32:55 2024 +0000

    feat: a polynomial over a perfect field is separable iff it is square-free (#10170)
    
    Yet another small step toward Jordan-Chevalley-Dunford.
    
    This was far more work than expected, partly because of missing API for `Squarefree`, and partly because the definition `IsCoprime` is the wrong concept for unique factorization domains.

[33mcommit 4d359a9bdcc3dabec793c88ec4b342a1b13b465b[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sat Feb 3 07:19:43 2024 +0000

    chore(Absorbs, Balanced): more lemmas, golf, generalize (#10201)
    
    * add `balanced_iff_closedBall_smul`, `balanced_neg`;
    * generalize `Balanced.neg_mem_iff` to a `SeminormedRing` + `NormOneClass`,
      add `Balanced.neg_eq`
    * add `Balanced.smul_mem_mono` and `Balanced.smul_congr`;
    * rename `Balanced.mem_smul_iff` to `Balanced.smul_mem_iff`;
    * rename `balanced_zero_union_interior` to `Balanced.zero_insert_interior`,
      use `insert 0 (interior A)` instead of `0 ‚à™ interior A`;
    * make `Balanced.interior` and `Balanced.closure` protected;
    * deprecate `Absorbs.zero_mem'`;
    * rename `balanced_convexHull_of_balanced` to `Balanced.convexHull`;
    * add `absorbs_iff_eventually_cobounded_mapsTo`, use it to golf some proofs.

[33mcommit 68e1e1e7f298e17c82870af2d97fdae0b3711b24[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sat Feb 3 07:19:42 2024 +0000

    chore(LpSeminorm): move `Trim` section to a new flie (#10197)

[33mcommit a0cb47af1a49c8127d3faa0c879c23cc224b331a[m
Author: Johan Commelin <johan@commelin.net>
Date:   Sat Feb 3 07:19:41 2024 +0000

    feat(Algebra/Lie): Engel subalgebras (#10158)
    
    Progress toward https://github.com/leanprover-community/mathlib4/issues/10065

[33mcommit 1a8eb3bd7db88e78201266c26cd31f7939fa9541[m
Author: Junyan Xu <junyanxumath@gmail.com>
Date:   Sat Feb 3 06:55:34 2024 +0000

    chore: golf #10193 (#10205)
    
    + add `rename_isHomogeneous` without `Injective` assumption, and rename `rename_isHomogeneous` to `rename_isHomogeneous_iff`.
    
    + refactor `degreeOf_le_totalDegree` through `restrictTotalDegree_le_restrictDegree `
    
    
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>

[33mcommit 620df7c2178b9ed24a80b4215b1630e20872ff5d[m
Author: Jeremy Tan Jie Rui <reddeloostw@gmail.com>
Date:   Sat Feb 3 03:33:59 2024 +0000

    refactor: split out finiteness properties for simple graphs (#10123)

[33mcommit 34d2de58d9ded5f02bfdd366dee74c5e01c6a3f1[m
Author: Matthew Robert Ballard <matt@mrb.email>
Date:   Sat Feb 3 01:50:57 2024 +0000

    chore(Measure.FiniteMeasure): remove an `@` replace with arguments for implicit parameters (#10194)
    
    The porting note seems to have slightly mis-diagnosed the problem here. This is more accurate and easier to read.

[33mcommit bbb28935e413aeddd0219d4c6fccbd47d4f029d5[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Sat Feb 3 01:01:09 2024 +0000

    chore: cleanup TODOs around leanprover/lean4#3060 (#10198)
    
    Mathlib is now using v4.6.0-rc1, which includes the fix in leanprover/lean4#3060

[33mcommit 0e978d6f81a6535606b6f28852cea025316e2cca[m
Author: Johan Commelin <johan@commelin.net>
Date:   Sat Feb 3 01:01:08 2024 +0000

    chore: misc lemmas about polynomials (#10193)

[33mcommit c167d468951bbd9259ed30af30f58e510b4f7914[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Fri Feb 2 23:47:47 2024 +0000

    chore(*): shake imports (#10199)
    
    * Remove `Data.Set.Basic` from `scripts/noshake.json`.
    * Remove an exception that was used by `example`s only,
      move these `example`s to a new test file.
    * Drop an exception for `Order.Filter.Basic`
      dependency on `Control.Traversable.Instances`,
      as the relevant parts were moved to `Order.Filter.ListTraverse`.
    * Run `lake exe shake --fix`.

[33mcommit c838d28fb418158125f1551662ef55113d22eeec[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Fri Feb 2 23:14:13 2024 +0000

    feat: Flooring, ceiling roots of a natural number (#8839)
    
    This PR defines the flooring and ceiling root of a natural number. The `n`-th flooring/ceiling root of `a` is the natural number whose `p`-adic valuation is the floor/ceil of the `p`-adic valuation of `a`. Those operations are respectively the right and left adjoints to the map `a ‚Ü¶ a ^ n`.
    
    For example the `2`-nd flooring and ceiling roots of `2^3 * 3^2 * 5` are `2 * 3` and `2^2 * 3 * 5` respectively.

[33mcommit 35337573e0f968389927ab33d9caf4c58018e740[m
Author: Matthew Robert Ballard <matt@mrb.email>
Date:   Fri Feb 2 21:55:14 2024 +0000

    chore: remove detrital heartbeat bumps (#10191)
    
    With multiple changes, it is a good time to check if existing `set_option maxHeartbeats` and `set_option synthInstance.maxHeartbeats` remain necessary. This brings the number of files with such down from 23 to 9. Most are straight deletions though I did change one proof.

[33mcommit b1b4ebf76b3638a84ff2728bd6a2c8c37d4d219f[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Fri Feb 2 21:55:13 2024 +0000

    chore(FiniteDimensional): rename lemmas (#10188)
    
    Rename lemmas to enable new-style dot notation or drop repeating `FiniteDimensional.finiteDimensional_*`.
    Restore old names as deprecated aliases.

[33mcommit eb8dc109444ed85404145858f7f49897504e3746[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Fri Feb 2 21:55:12 2024 +0000

    chore: golf integral_inv_one_add_sq (#10184)

[33mcommit 6daa3eb78c1c21da6211959ea292013fa7d5cbc1[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Fri Feb 2 21:55:11 2024 +0000

    feat(Set/Lattice): upgrade some lemmas to `iff`s (#10181)

[33mcommit 9db1819670426e165ca735730e61aec2be19971a[m
Author: Mario Carneiro <mcarneir@andrew.cmu.edu>
Date:   Fri Feb 2 21:55:10 2024 +0000

    chore: upgrade styfle/cancel-workflow-action (#10155)
    
    The old version is giving warnings in CI as of a week ago.
    
    
    
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>

[33mcommit 4b37d531fa2a707fe5bc7456ff6a35646c317473[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Fri Feb 2 21:55:09 2024 +0000

    chore: tidy various files (#10007)

[33mcommit d04f8d39c0e47a0d73450b49f6c0665897cdcaf7[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Fri Feb 2 21:03:09 2024 +0000

    fix(RingTheory/DedekindDomain/Ideal): remove porting note (#10173)

[33mcommit 382799bce9fb3d7a30f8243564ea894161cac230[m
Author: Jz Pan <acme_pjz@hotmail.com>
Date:   Fri Feb 2 21:03:08 2024 +0000

    feat(RingTheory/Polynomial/IrreducibleRing): add `Monic.irreducible_of_irreducible_map_of_isPrime_nilradical` (#10157)
    
    A monic polynomial over an irreducible ring is irreducible if it is irreducible after mapping into an integral domain.

[33mcommit 96a6d295b519028ea964f2821adbfac0ac24c718[m
Author: Junyan Xu <junyanxumath@gmail.com>
Date:   Fri Feb 2 21:03:07 2024 +0000

    refactor: generalize `CharP+Prime` to `ExpChar` in `frobenius`  (#10016)
    
    Consequently, the part about `frobenius` in Algebra/CharP/Basic is moved to CharP/ExpChar, and imports are adjusted as necessary.
    
    + Add instances from `CharP+Fact(Nat.Prime)` and `CharZero` to `ExpChar`, to allow lemmas generalized to ExpChar still apply to CharP.
    
    + Remove lemmas in Algebra/CharP/ExpChar from [#9799](https://github.com/leanprover-community/mathlib4/commit/1e74fcfff8d5ffe5a3a9881864cf10fa39f619e6) because they coincide with the generalized lemmas, and golf the other lemmas (in Algebra/CharP/Basic).
    
    + Define the RingHom `iterateFrobenius` and the semilinear map `LinearMap.(iterate)Frobenius` for an algebra. When the characteristic is zero (ExpChar is 1), these are all equal to the identity map (¬∑ ^ 1). Also define `iterateFrobeniusEquiv` for perfect rings.
    
    + Fix and/or generalize other files.
    
    
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>
    Co-authored-by: acmepjz <acme_pjz@hotmail.com>

[33mcommit 0311bbc2b4fee42645483e264700225ed32db3e6[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Fri Feb 2 19:14:21 2024 +0000

    feat(Topology): add `lift'_nhds_interior` etc (#10175)

[33mcommit 056cc4b21e25e8d1daaeef3a6e3416872c9fc12c[m
Author: Mario Carneiro <mcarneir@andrew.cmu.edu>
Date:   Fri Feb 2 17:38:32 2024 +0000

    feat: add `lake exe shake` to CI (#9751)
    
    - [X] depends on: #9830
    - [X] depends on: #9772
    - [X] depends on: #9996
    
    This checks files for unused imports. The output here is piped through `gh-problem-matcher-wrap` so that it will show up as annotations.
    
    
    
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>

[33mcommit 3d28521672baf750880133e55a619cde31729a75[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Fri Feb 2 14:03:37 2024 +0000

    fix: ensure that the linter fails when it should (#10187)

[33mcommit 935c0797b55d78fb9b37dae5a107454b09ecce56[m
Author: Anatole Dedecker <anatolededecker@gmail.com>
Date:   Fri Feb 2 14:03:36 2024 +0000

    feat: relative versions of equicontinuity (#9286)
    
    - [x] depends on: #7568
    
    
    
    Co-authored-by: Heather Macbeth <25316162+hrmacbeth@users.noreply.github.com>

[33mcommit 23d27aa145be85d330bcbb19b99f5ad7f74d13a9[m
Author: Johan Commelin <johan@commelin.net>
Date:   Fri Feb 2 13:15:18 2024 +0000

    chore(Algebra/Module/LinearMap): split into 3 files (#10183)

[33mcommit b75513bfa194c1cc489acfbe61ea5eed19b6296d[m
Author: Anatole Dedecker <anatolededecker@gmail.com>
Date:   Fri Feb 2 13:15:17 2024 +0000

    feat: add some consequences of Tychonoff's theorem (#10161)
    
    Preliminaries for #6844
    The way I prove Ascoli's theorem is by using equicontinuity to reduce it to the case of the product topology, where one can use Tychonoff, hence these variations.

[33mcommit 41ab33215165cab5b29cb68b5cdd1125701cbe49[m
Author: Anne Baanen <vierkantor@vierkantor.com>
Date:   Fri Feb 2 13:15:16 2024 +0000

    feat(Shake): output clarifications (#9996)
    
    A new user running `lake exe shake --fix` will see lots of messages like "add:" "remove:" "fix:" and won't know what to do with it. I think these minor changes to the output will massively clarify what the tool actually wants you to do.

[33mcommit c68625d2595b912adeeb575906ceb4345dd47bfc[m
Author: Anatole Dedecker <anatolededecker@gmail.com>
Date:   Fri Feb 2 12:29:12 2024 +0000

    feat: iff version of UniformInducing.comap_uniformSpace (#10153)
    
    Preliminaries for #6844

[33mcommit 30f2ec52997b325c5681c45e4de5ddecb8edf85d[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Fri Feb 2 11:53:49 2024 +0000

    chore: update style exceptions (#10168)
    
    - two long files have been split now (remove their entries)
    - add an exception for `DedekindDomain/Ideal.lean`, which #9727 pushed over the limit

[33mcommit 894a8976758fd05065ecfea29bc827719101fa93[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Fri Feb 2 09:30:31 2024 +0000

    chore(Integral/Bochner): golf (#10180)

[33mcommit a6e70f20bde774fefe54936fea94fa5e340edd34[m
Author: Yuma Mizuno <mizuno.y.aj@gmail.com>
Date:   Fri Feb 2 06:57:22 2024 +0000

    chore(CategoryTheory/Bicategory): create Kan directory (#10178)
    
    I plan to put some files in this new directory.

[33mcommit a705a6f9a49eb3aef83fdb082e0396f8d31ea2c4[m
Author: Yuma Mizuno <mizuno.y.aj@gmail.com>
Date:   Fri Feb 2 06:57:21 2024 +0000

    chore(CategoryTheory/Bicategory): remove porting note (#10174)

[33mcommit 007ad7420b9123f3528b160831786e3b6054b2b0[m
Author: Yuma Mizuno <mizuno.y.aj@gmail.com>
Date:   Fri Feb 2 06:26:26 2024 +0000

    refactor(CategoryTheory/Monoidal/Braided): use monoidalComp in the proofs (#10078)
    
    - [x] depends on: #10061

[33mcommit 490d2d4820d3ed2dea34f47f3cdfe9d72b8fbc80[m[33m ([m[1;33mtag: v4.6.0-rc1[m[33m)[m
Author: Scott Morrison <scott@tqft.net>
Date:   Fri Feb 2 04:48:09 2024 +0000

    chore: move to v4.6.0-rc1, merging adaptations from bump/v4.6.0 (#10176)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>
    Co-authored-by: Joachim Breitner <mail@joachim-breitner.de>

[33mcommit 86ecbac93d1ab0e23016a1c513269df8ac034507[m
Author: Scott Morrison <scott@tqft.net>
Date:   Fri Feb 2 03:17:04 2024 +0000

    chore: bump Std (#10177)
    
    There's an exciting linter failure on `bump/v4.6.0`, and I'm wondering if this is caused by strange simp lemmas in leanprover/std4#558, so I'm updating to that before the bump.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit e7d0ec3b0e6eba28ec671fd55d54891227ad0749[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Fri Feb 2 00:24:22 2024 +0000

    doc: fix typos (#10171)
    
    Fix minor typos in the following files:
    
    - [x] `GroupTheory/Nilpotent.lean`
    - [x] `GroupTheory/PushoutI.lean`
    - [x] `SetTheory/Cardinal/ENat.lean`
    - [x] `SetTheory/Cardinal/Subfield.lean`
    - [x] `RepresentationTheory/Action/Basic.lean`
    - [x] `RepresentationTheory/Action/Limits.lean`
    - [x] `Logic/Function/OfArity.lean`

[33mcommit aa20ff6f3effa95af3be5043c93d35a712cd79c4[m
Author: Michael Stoll <Michael.Stoll@uni-bayreuth.de>
Date:   Thu Feb 1 21:13:09 2024 +0000

    feat(Data/Complex/Order, Analysis/Complex/Basic): add OrderClosedTopology instance, monotonicity of ofReal (#10112)
    
    This adds an `OrderClosedTopology` instance (scoped to `ComplexOrder`) for the complex numbers (to make things like `tsum_le_tsum` work with the partial order on the complex numbers) and the fact that `Complex.ofReal'` is monotone with respect to this order.
    
    
    
    Co-authored-by: Michael Stoll <99838730+MichaelStollBayreuth@users.noreply.github.com>

[33mcommit eb6e6bc8c202590702fab2575aeec6f2a435cc44[m
Author: Michael Stoll <Michael.Stoll@uni-bayreuth.de>
Date:   Thu Feb 1 21:13:08 2024 +0000

    feat(NumberTheory/LegendreSymbol/MulCharacter): add a coercion and a lemma (#10039)
    
    This is the sixth PR in a sequence that adds auxiliary lemmas from the [EulerProducts](https://github.com/MichaelStollBayreuth/EulerProducts) project to Mathlib.
    
    It adds a coercion from multiplicative characters to homomorphisms of monoids with zero and a variant of `MulChar.one_apply_coe` that is more convenient to use in some contexts.

[33mcommit 14151c79a2c4277cd4f1adf55db505057687b844[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Thu Feb 1 21:13:07 2024 +0000

    refactor(Data/Rat/NNRat): move module and algebra instances (#9951)
    
    As with #9950, this is motivated by:
    * Getting `NNRat` closed to `norm_num`
    * Being able to put an `nnrat_cast` field in `DivisionSemiring`s
    
    This brings down the number of dependencies of `NNRat` by around 600.

[33mcommit 9bd968ea10773e87abd65537113b673c762761dc[m
Author: Johan Commelin <johan@commelin.net>
Date:   Thu Feb 1 20:02:07 2024 +0000

    chore: create Algebra/Module/LinearMap/Basic in preparation of splitting (#10160)
    
    - chore: create Algebra/Module/LinearMap in preparation of splitting
    - adjust imports

[33mcommit 2ba297e6c80984b3ea08e1a79e94b926f0b6df15[m
Author: Michael Stoll <Michael.Stoll@uni-bayreuth.de>
Date:   Thu Feb 1 20:02:06 2024 +0000

    feat(Analysis/SpecialFunctions): some lemmas on complex functions of natural numbers (#10034)
    
    This is the fourth PR in a sequence that adds auxiliary lemmas from the [EulerProducts](https://github.com/MichaelStollBayreuth/EulerProducts) project to Mathlib.
    
    It adds some lemmas on functions of complex numbers applied to natural numbers:
    ```lean
    lemma Complex.natCast_log {n : ‚Ñï} : Real.log n = log n
    
    lemma Complex.natCast_arg {n : ‚Ñï} : arg n = 0
    
    lemma Complex.natCast_mul_natCast_cpow (m n : ‚Ñï) (s : ‚ÑÇ) : (m * n : ‚ÑÇ) ^ s = m ^ s * n ^ s
    
    lemma Complex.natCast_cpow_natCast_mul (n m : ‚Ñï) (z : ‚ÑÇ) : (n : ‚ÑÇ) ^ (m * z) = ((n : ‚ÑÇ) ^ m) ^ z
    
    lemma Complex.norm_log_natCast_le_rpow_div (n : ‚Ñï) {Œµ : ‚Ñù} (hŒµ : 0 < Œµ) : ‚Äñlog n‚Äñ ‚â§ n ^ Œµ / Œµ
    ```
    (and `ofNat` versions of the first two).

[33mcommit ad46cc4e0d12a565432039b79c7054597109abcf[m
Author: Christian Merten <christian@merten.dev>
Date:   Thu Feb 1 20:02:04 2024 +0000

    feat(CategoryTheory/Galois): evaluation is injective and more basic properties (#9841)
    
    Shows one of the key technical lemmas about Galois categories, namely that evaluation on a point of the fibre of morphisms out of a connected object is injective.
    
    Also adds some more basic properties on when objects are initial and preservation and reflection of monomorphisms.

[33mcommit e64d0a161b8ccdd45cb8d9db09910eb461f5d0f7[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Thu Feb 1 18:57:15 2024 +0000

    refactor(Order/CompleteLatticeIntervals): move lemmas with a multiset dependency to a new file (#10165)
    
    This reworks the location of the lemmas from #10086, by moving them to a new `Mathlib.Order.CompactlyGenerated.Intervals` file.
    The existing `Mathlib.Order.CompactlyGenerated` is moved to `Mathlib.Order.CompactlyGenerated.Basic` for consistency.

[33mcommit 6dd08a56727cfc02b47890cbf06b7c06cd86555b[m
Author: Christian Merten <christian@merten.dev>
Date:   Thu Feb 1 18:09:25 2024 +0000

    feat(RingTheory/Flat): definition of flat ring homomorphism and stability under composition (#10148)
    
    Adds the definition of flat algebras, flat ring homomorphisms and shows that flatness is stable under composition.

[33mcommit e1d0b5c3f8c3e35b45fa75af29a705aafee1de28[m
Author: Christian Merten <christian@merten.dev>
Date:   Thu Feb 1 17:35:23 2024 +0000

    feat(RepresentationTheory/Action): `MulAction` instance for objects of `Action V G` with concrete `V` (#9668)
    
    For `X : Action V G` and `ConcreteCategory V` adds a `MulAction G ((forget _).obj X))` instance.

[33mcommit a55d1223ed304adf5a620db9c85bd7eeb29809e3[m
Author: Wrenna Robson <wren.robson@gmail.com>
Date:   Thu Feb 1 16:22:24 2024 +0000

    feat(Data/Fin/Basic): Improvement and extension of order results (#10156)
    
    Refines and extends results relating to the monotonicity of succ, castSucc, and related functions

[33mcommit be2a49b5e0cd41b16a3341022747f9356a60bc76[m
Author: Oliver Nash <github@olivernash.org>
Date:   Thu Feb 1 15:16:47 2024 +0000

    feat: a linear endomorphism that is a root of a squarefree polynomial is semisimple (#10128)
    
    The main result is `Module.End.isSemisimple_of_squarefree_aeval_eq_zero`

[33mcommit 618b0bbdbd3b4e83be57fd241d86bfa17d284ff5[m
Author: Christian Merten <christian@merten.dev>
Date:   Thu Feb 1 14:46:44 2024 +0000

    feat(RepresentationTheory/Action): add `ofMulAction` constructor for `FintypeCat` (#9665)
    
    Adds the analogue of `Action.ofMulAction` for `FintypeCat`.

[33mcommit fc2bdcd8779bfa1eef8b316f3b1fccae1c298426[m
Author: Mario Carneiro <mcarneir@andrew.cmu.edu>
Date:   Thu Feb 1 13:54:33 2024 +0000

    feat: leantar: remove corrupted files instead of failing (#10063)
    
    The [latest leantar bump](https://github.com/digama0/leangz/compare/v0.1.10...v0.1.11) resolves an issue [reported on Zulip](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/build.20failing/near/418290193), in which corrupted ltar files would result in an error message and failing error code (although it still unpacks everything else). Now, when you pass the `--delete-corrupted` flag to `leantar` (enabled by default in `lake exe cache get`), it will instead delete any input files that failed to parse, meaning that `lake build` can be used to reconstruct the file, and a second invocation of `lake exe cache get` will try again to download the file.
    
    The new leantar version also makes sure to remove any partially written files for a given archive in the event of an IO or parse error during unpacking.
    
    
    
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>

[33mcommit fe642cfe005cebf7ad864d6e867b64376a7eba0e[m
Author: Christopher Hoskin <christopher.hoskin@gmail.com>
Date:   Thu Feb 1 12:43:57 2024 +0000

    refactor(LinearAlgebra/QuadraticForm/Basic): Use bilinear maps for the companion (#10097)
    
    This PR replaces the companion `(B : BilinForm R M)` of a quadratic form with a bilinear map `(B : M ‚Üí‚Çó[R] M ‚Üí‚Çó[R] R)`.
    
    This is intended as a baby step towards generalising quadratic forms to quadratic maps. In the future we could allow for companion bilinear or even sesquilinear maps into an `R`-module.
    
    
    
    Co-authored-by: Christopher Hoskin <mans0954@users.noreply.github.com>
    Co-authored-by: Christopher Hoskin <christopher.hoskin@overleaf.com>

[33mcommit 2bbb174e220102ef0e10179f69f1bd890baa4aed[m
Author: David Kurniadi Angdinata <dka31@cantab.ac.uk>
Date:   Thu Feb 1 11:35:02 2024 +0000

    feat(GroupTheory/GroupAction/Basic): define subgroups fixed by group actions (#10043)

[33mcommit a2c91ca1c8f835e653573e7acbf60de1b5b287d7[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Thu Feb 1 10:54:47 2024 +0000

    refactor(PartialHomeomorph): Remove explicit variable (x : M). (#10083)
    
    Instead, supply it as needed.
    
    This replaces an explicit argument (x : M) by an implicit `{x : M}` in the following lemmas:
    - extChartAt_source_mem_nhds'
    - extChartAt_source_mem_nhdsWithin'
    - continuousAt_extChartAt'
    - extChartAt_image_nhd_mem_nhds_of_boundaryless
    - extChartAt_target_mem_nhdsWithin'
    - nhdsWithin_extChartAt_target_eq'
    - continuousAt_extChartAt_symm'
    - continuousAt_extChartAt_symm''
    - map_extChartAt_nhdsWithin_eq_image'
    - map_extChartAt_nhdsWithin'
    - map_extChartAt_symm_nhdsWithin'
    - map_extChartAt_symm_nhdsWithin_range'
    - extChartAt_preimage_mem_nhdsWithin'
    - extChartAt_preimage_mem_nhdsWithin
    - extChartAt_preimage_mem_nhds'
    - extChartAt_preimage_mem_nhds
    
    
    
    Co-authored-by: grunweg <grunweg@posteo.de>

[33mcommit f8b99c796c1ec0fbc91bef1103e18d20bd074e04[m
Author: Michael Stoll <Michael.Stoll@uni-bayreuth.de>
Date:   Thu Feb 1 09:38:24 2024 +0000

    feat(Analysis.Calculus.FDeriv.Analytic + Analysis.Complex.TaylorSeries): Taylor series of holomorphic functions (#10087)
    
    See [here](https://leanprover.zulipchat.com/#narrow/stream/217875-Is-there-code-for-X.3F/topic/The.20Taylor.20series.20of.20an.20entire.20function.20converges.20to.20it/near/417334632) on Zulip.
    
    This adds some general lemmas due to Junyan Xu, culminating in
    ```lean
    theorem HasFPowerSeriesOnBall.hasSum_iteratedFDeriv {ùïú : Type*} [NontriviallyNormedField ùïú] {E : Type*}
        [ NormedAddCommGroup E] [NormedSpace ùïú E] {F : Type*} [NormedAddCommGroup F]
        [NormedSpace ùïú F] {p : FormalMultilinearSeries ùïú E F} {f : E ‚Üí F} {x : E} {r : ‚Ñù‚â•0‚àû}
        (h : HasFPowerSeriesOnBall f p x r) [CompleteSpace F] [CharZero ùïú] {y : E} (hy : y ‚àà EMetric.ball 0 r) :+1:
        HasSum (fun n ‚Ü¶ (n ! : ùïú)‚Åª¬π‚Ä¢ (iteratedFDeriv ùïú n f x) fun x ‚Ü¶ y) (f (x + y))
    ```
    and uses this to show that the Taylor series of a function that is complex differentiable on an open ball in ‚ÑÇ converges there to the function; similarly for functions that are holomorphic on all of ‚ÑÇ:
    ```lean
    lemma Complex.hasSum_taylorSeries_on_ball {E : Type*} [NormedAddCommGroup E] [NormedSpace ‚ÑÇ E]
        [CompleteSpace E] ‚¶Éf : ‚ÑÇ ‚Üí E‚¶Ñ ‚¶Éc : ‚ÑÇ‚¶Ñ ‚¶Ér : NNReal‚¶Ñ (hf : DifferentiableOn ‚ÑÇ f (Metric.ball c ‚Üër)) ‚¶Éz : ‚ÑÇ‚¶Ñ
        (hz : z ‚àà Metric.ball c ‚Üër) :
        HasSum (fun n ‚Ü¶ (n ! : ‚ÑÇ)‚Åª¬π ‚Ä¢ (z - c) ^ n ‚Ä¢ iteratedDeriv n f c) (f z)
    
    lemma Complex.taylorSeries_eq_on_ball {E : Type*} [NormedAddCommGroup E] [NormedSpace ‚ÑÇ E]
        [CompleteSpace E] ‚¶Éf : ‚ÑÇ ‚Üí E‚¶Ñ ‚¶Éc : ‚ÑÇ‚¶Ñ ‚¶Ér : NNReal‚¶Ñ (hf : DifferentiableOn ‚ÑÇ f (Metric.ball c ‚Üër)) ‚¶Éz : ‚ÑÇ‚¶Ñ
        (hz : z ‚àà Metric.ball c ‚Üër) :
        ‚àë' (n : ‚Ñï), (n ! : ‚ÑÇ)‚Åª¬π ‚Ä¢ (z - c) ^ n ‚Ä¢ iteratedDeriv n f c = f z
    
    lemma Complex.taylorSeries_eq_on_ball' ‚¶Éc : ‚ÑÇ‚¶Ñ ‚¶Ér : NNReal‚¶Ñ ‚¶Éz : ‚ÑÇ‚¶Ñ (hz : z ‚àà Metric.ball c ‚Üër) {f : ‚ÑÇ ‚Üí ‚ÑÇ}
        (hf : DifferentiableOn ‚ÑÇ f (Metric.ball c ‚Üër)) :
        ‚àë' (n : ‚Ñï), (n ! : ‚ÑÇ)‚Åª¬π * iteratedDeriv n f c * (z - c) ^ n = f z
    ```
    and similar lemmas for `EMetric.ball`s and entire functions.

[33mcommit 43e83e9bf618bed1aba9c691a268f5134c7f1914[m
Author: David Loeffler <d.loeffler.01@cantab.net>
Date:   Thu Feb 1 08:56:48 2024 +0000

    feat(Analysis/Fourier): derivative of Fourier transform (#9773)
    
    This PR computes the Frechet derivative of the Fourier transform of a function on a real normed space, including special-case handling for functions on inner-product spaces and on the reals themselves.
    
    Co-authored-by: Alex Kontorovich <alex.kontorovich@rutgers.edu>
    Co-authored-by: Heather Macbeth <hmacbeth1@fordham.edu>

[33mcommit 09303adf35f36147b0270211bac1d8a1741a7516[m
Author: Wrenna Robson <wren.robson@gmail.com>
Date:   Thu Feb 1 07:10:45 2024 +0000

    feat(Data/Fin/Basic): Add missing `succAbove` and `predAbove` lemmas and refactor existing ones. (#10042)
    
    Adds lemma that shows that `succAbove` and `castSucc` commute and similar for `predAbove`.
    Perform necessary updates and refactors to get there.

[33mcommit 2e5fa833c10558469fb2b0f16318514f54ec9a9e[m
Author: Oliver Nash <github@olivernash.org>
Date:   Thu Feb 1 05:56:30 2024 +0000

    feat: a supremum of semisimple modules is semisimple (#10086)
    
    Another small step toward Jordan-Chevalley-Dunford.

[33mcommit feec58a7ee9185f92abddcf7631643b53181a7d3[m[33m ([m[1;33mtag: v4.5.0[m[33m)[m
Author: Scott Morrison <scott@tqft.net>
Date:   Thu Feb 1 04:47:03 2024 +0000

    chore: bump to v4.5.0 (#10150)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 9a542dded1a9bce68910665eb64bc011b93d6293[m
Author: Enrico Borba <enricozb@users.noreply.github.com>
Date:   Thu Feb 1 03:20:01 2024 +0000

    fix: typo in `integral_Icc_eq_integral_Ioo` (#10149)
    
    Fixes a typo: the RHS of `integral_Icc_eq_integral_Ioo` was an `Ico` not an `Ioo`.

[33mcommit edba675d06b0c78fe75d55332d6b8b856d857064[m
Author: Jeremy Tan Jie Rui <reddeloostw@gmail.com>
Date:   Thu Feb 1 01:58:14 2024 +0000

    feat: absolute convergence from conditional of power series (#9955)
    
    From https://leanprover.zulipchat.com/#narrow/stream/217875-Is-there-code-for-X.3F/topic/Bounds.20on.20alternating.20convergent.20series/near/417504820

[33mcommit 4e65ea9edaae658f920b5a9ae315a3593156bdf6[m
Author: Michael Stoll <Michael.Stoll@uni-bayreuth.de>
Date:   Wed Jan 31 21:36:29 2024 +0000

    chore(Analysis/SpecificLimits/* and others): rename _0 -> _zero, _1 -> _one (#10077)
    
    See [here](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/exact.3F.20failure/near/418443193) on Zulip.
    
    This PR changes a bunch of names containing `nhds_0` or/and `lt_1` to `nhds_zero` or/and `lt_one`.

[33mcommit a113026b5d3b429c5455ef3b374688b91f2a8434[m
Author: Junyan Xu <junyanxumath@gmail.com>
Date:   Wed Jan 31 20:39:19 2024 +0000

    feat: add `Submodule.image_span_subset(_span)` and golf (#10017)
    
    Since `Submodule.map` requires surjectivity of the RingHom, the new lemmas have to be stated this way. (The RingHom is `frobenius` in my intended application, which is not necessarily surjective.)
    
    
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>
    Co-authored-by: Oliver Nash <github@olivernash.org>

[33mcommit 3006ba7ee7c11894e70abf7198a1efc24e9c4aad[m
Author: Anatole Dedecker <anatolededecker@gmail.com>
Date:   Wed Jan 31 19:39:33 2024 +0000

    feat: a type with a non trivial filter has to be nonempty (#10145)
    
    Preliminaries for #6844

[33mcommit fb969e7b17c9e53e52d1f1884e4acd1357055dac[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Jan 31 18:47:26 2024 +0000

    chore(ProperSpace): rename constructors (#10138)
    
    Rename `properSpace_of_*` to `ProperSpace.of_*`,
    restore old names as deprecated aliases.
    This affects:
    
    - `properSpace_of_locallyCompactSpace` -> `ProperSpace.of_locallyCompactSpace`,
      also golf using new `ProperSpace.of_seq_closedBall`;
    - `properSpace_of_locallyCompact_module` -> `ProperSpace.of_locallyCompact_module`;
    - `properSpace_of_compact_closedBall_of_le` ->
      `ProperSpace.of_isCompact_closedBall_of_le`,
      also changed `compact` -> `isCompact` in the name.

[33mcommit 7e1799b746b23e1b011253dd7482914771b9a496[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Jan 31 15:43:54 2024 +0000

    feat(Parity): add lemmas about `x ^ n = ¬±y ^ n` (#9881)

[33mcommit 0c4b73141cdd0688a5ac9a28da1889a935d05a07[m
Author: Scott Morrison <scott@tqft.net>
Date:   Wed Jan 31 15:04:55 2024 +0000

    chore: golfing in categories of algebraic objects (#10114)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 040db1bbb93e6233699fe34cd2eb978d9476c2a9[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Wed Jan 31 15:04:54 2024 +0000

    refactor(Probability/Kernel/CondCdf): mv lintegral_iInf_directed_of_measurable (#10041)
    
    - [x] depends on: #10036
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit 1a65f05e8576f388c1821dd3f01fd1f69ac95e2f[m
Author: Anatole Dedecker <anatolededecker@gmail.com>
Date:   Wed Jan 31 14:30:15 2024 +0000

    feat: characterize ClusterPt, MapClusterPt, IsClosed using ultrafilters (#10143)
    
    Preliminaries for #6844

[33mcommit a05375f74e4afaf6bafa705c22101405b9a4a4e4[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Jan 31 13:54:08 2024 +0000

    feat(Trigonometric): add `Complex.tan_eq_zero_iff'` (#9877)
    
    This version assumes that the cosine is not zero.

[33mcommit 659d6a819578ef59b4c624ecebe888e7877cd487[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Wed Jan 31 12:47:01 2024 +0000

    feat: add SmoothPartitionOfUnity.cont{M}DiffAt_sum (#10019)
    
    A point-wise version of contMDiff_finsum_smul. From sphere-eversion.

[33mcommit 51ea69f8bac9fb581067fed98b39efcbe96ea6e1[m
Author: Michael Stoll <Michael.Stoll@uni-bayreuth.de>
Date:   Wed Jan 31 11:55:06 2024 +0000

    feat(Analysis/SpecialFunctions/Pow/Real): add bound on log (#10029)
    
    This is the third PR in a sequence that adds auxiliary lemmas from the [EulerProducts](https://github.com/MichaelStollBayreuth/EulerProducts) project to Mathlib.
    
    It adds a bound for real logarithms in terms of powers:
    ```lean
    lemma Real.log_le_rpow_div {x Œµ : ‚Ñù} (hx : 0 ‚â§ x) (hŒµ : 0 < Œµ) : log x ‚â§ x ^ Œµ / Œµ
    
    lemma Real.log_natCast_le_rpow_div (n : ‚Ñï) {Œµ : ‚Ñù} (hŒµ : 0 < Œµ) : log n ‚â§ n ^ Œµ / Œµ
    ```
    and some lemmas on (norms of) complex powers of natural numbers:
    ```lean
    lemma Complex.norm_natCast_cpow_of_re_ne_zero (n : ‚Ñï) {s : ‚ÑÇ} (hs : s.re ‚â† 0) :
        ‚Äñ(n : ‚ÑÇ) ^ s‚Äñ = (n : ‚Ñù) ^ (s.re)
    
    lemma Complex.norm_natCast_cpow_of_pos {n : ‚Ñï} (hn : 0 < n) (s : ‚ÑÇ) :
        ‚Äñ(n : ‚ÑÇ) ^ s‚Äñ = (n : ‚Ñù) ^ (s.re)
    
    lemma Complex.norm_natCast_cpow_pos_of_pos {n : ‚Ñï} (hn : 0 < n) (s : ‚ÑÇ) : 0 < ‚Äñ(n : ‚ÑÇ) ^ s‚Äñ
    
    lemma Complex.norm_prime_cpow_le_one_half (p : Nat.Primes) {s : ‚ÑÇ} (hs : 1 < s.re) :
        ‚Äñ(p : ‚ÑÇ) ^ (-s)‚Äñ ‚â§ 1 / 2
    
    lemma Complex.one_sub_prime_cpow_ne_zero {p : ‚Ñï} (hp : p.Prime) {s : ‚ÑÇ} (hs : 1 < s.re) :
        1 - (p : ‚ÑÇ) ^ (-s) ‚â† 0
    
    lemma Complex.norm_natCast_cpow_le_norm_natCast_cpow_of_pos {n : ‚Ñï} (hn : 0 < n) {w z : ‚ÑÇ} (h : w.re ‚â§ z.re) :
        ‚Äñ(n : ‚ÑÇ) ^ w‚Äñ ‚â§ ‚Äñ(n : ‚ÑÇ) ^ z‚Äñ
    
    lemma Complex.norm_natCast_cpow_le_norm_natCast_cpow_iff {n : ‚Ñï} (hn : 1 < n) {w z : ‚ÑÇ} :
        ‚Äñ(n : ‚ÑÇ) ^ w‚Äñ ‚â§ ‚Äñ(n : ‚ÑÇ) ^ z‚Äñ ‚Üî w.re ‚â§ z.
    ```
    
    
    
    Co-authored-by: Michael Stoll <99838730+MichaelStollBayreuth@users.noreply.github.com>

[33mcommit fdcd4ee3a122bf44fc58dc912fb5243ea4fe8916[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Wed Jan 31 11:09:57 2024 +0000

    feat: add Ideal.mem_normalizedFactors_iff (#9727)
    
    From flt-regular

[33mcommit 9d14a27f722c417f4acec28c9f6425b010e18789[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Jan 31 10:21:15 2024 +0000

    feat(Convex/Basic): add a `@[simp]` lemma `convex_vadd` (#10134)
    
    This is a simple corollary of the existing `Convex.vadd`.

[33mcommit 04a6ee9a50eb06361011cd1a2a0fe3ea34fa5136[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Wed Jan 31 10:21:14 2024 +0000

    doc(Mathlib/CategoryTheory): fix typo (#10127)
    
    Fix minor typo in `Mathlib/CategoryTheory/ComposableArrows.lean`.

[33mcommit bb85b99d2844823177a228409a402c2631e45bd8[m
Author: Anatole Dedecker <anatolededecker@gmail.com>
Date:   Wed Jan 31 10:21:13 2024 +0000

    feat: fix typo (eventually_nhds_subtype_if -> eventually_nhds_subtype_iff) (#10124)
    
    This was unnoticed during the review of #7568

[33mcommit 18b19cc8c9a39bc2ac2e3de5ba17bdb2317c0175[m
Author: Christian Merten <christian@merten.dev>
Date:   Wed Jan 31 10:21:12 2024 +0000

    chore(RingTheory/Flat): move `RingTheory.Flat` into its own folder (#10053)
    
    Renames `RingTheory.Flat` into `RingTheory.Flat.Basic`.

[33mcommit 9d1a7d26568b73f413811596acc0f5fdea58948f[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Wed Jan 31 10:21:11 2024 +0000

    feat: The support of `f ^ n` (#9617)
    
    This involves moving lemmas from `Algebra.GroupPower.Ring` to `Algebra.GroupWithZero.Basic` and changing some `0 < n` assumptions to `n ‚â† 0`.
    
    From LeanAPAP

[33mcommit 8eae1e3cc65e9565e40b737bcba2d8e7652c2545[m
Author: s1m7u <z5476255@ad.unsw.edu.au>
Date:   Wed Jan 31 09:33:28 2024 +0000

    chore(Analysis/Seminorm): make statement of `neg_mem_ball_zero` iff (#10119)
    
    
    
    Co-authored-by: s1m7u <68893305+s1m7u@users.noreply.github.com>
    Co-authored-by: Jeremy Tan Jie Rui <reddeloostw@gmail.com>

[33mcommit 41cd3a7e1c1b65c2237a9b148697d1be0ca319a5[m
Author: Michael Stoll <Michael.Stoll@uni-bayreuth.de>
Date:   Wed Jan 31 09:33:27 2024 +0000

    doc(docs/100.yaml): add Mathlib ref for sum over 1/p (#10111)
    
    I noticed that the statement that the sum over primes of `1/p` diverges is one of Wiedijk's "100 Theorems". There is a version in the `Archive/` folder, but it was also recently added to Mathlib. This PR attempts to update the `100.yaml` file accordingly.

[33mcommit 58df996c10991cb6b4f24fa57b17f4943468ffec[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Wed Jan 31 09:02:44 2024 +0000

    chore: make (x : M) implicit in `extChartAt_image_nhd_mem_nhds_of_boundaryless` (#10081)
    
    Fixes an oversight in #10001: x is already included in the hypothesis `hx`, so should be implicit.
    A follow-up PR will address this issue more systematically.

[33mcommit ec497096ba311298c5254c6cdcdad0281e48e04f[m
Author: Yuma Mizuno <mizuno.y.aj@gmail.com>
Date:   Wed Jan 31 07:01:14 2024 +0000

    feat(CategoryTheory/Monoidal): partially setting simp lemmas (#10061)
    
    Extracted from #6307. The main reason why #6307 is so large is that many tensoring of identity morphisms that appear in mathlib should be replaced with whiskerings. This PR will leave this issue and deal with other parts. That is, we do not set `id_tensorHom` and `tensorHom_id` as simple lemmas at this moment, We can set them as simp lemmas locally to enable simple normal forms.

[33mcommit 0a0bb6ecfe660436337da7631a532f61a804079f[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Jan 31 03:53:33 2024 +0000

    feat: formalize IMO 1960 Q2 (#9885)

[33mcommit 45b2ed15309572280a80b2e550db2880e4c15c0e[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Jan 31 03:30:31 2024 +0000

    feat: formalize IMO 1986 Q5 (#9891)

[33mcommit 6eb43dc3bbbbf52cf197a701696070bca3bd41b1[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Tue Jan 30 22:28:51 2024 +0000

    refactor: Delete `Algebra.GroupPower.Lemmas`  (#9411)
    
    `Algebra.GroupPower.Lemmas` used to be a big bag of lemmas that made it there on the criterion that they needed "more imports". This was completely untrue, as all lemmas could be moved to earlier files in PRs:
    - #9440
    - #9442
    - #9443
    - #9455
    - #9456
    - #9457
    - #9459
    - #9461
    - #9463
    - #9466
    - #9501
    - #9502
    - #9503
    - #9505
    - #9551
    - #9553
    - #9720
    - #9739
    - #9740
    - #9805
    - #9806
    - and this one
    
    There are several reasons for this:
    * Necessary lemmas have been moved to earlier files since lemmas were dumped in `Algebra.GroupPower.Lemmas`
    * In the Lean 3 ‚Üí Lean 4 transition, Std acquired basic `Int` and `Nat` lemmas which let us shortcircuit the part of the algebraic order hierarchy on which the corresponding general lemmas rest
    * Some proofs were overpowered
    * Some earlier files were tangled and I have untangled them
    
    This PR finishes the job by moving the last few lemmas out of `Algebra.GroupPower.Lemmas`, which is therefore deleted.

[33mcommit b97737518d59a1be646a479792b11351d52258ab[m
Author: Johan Commelin <johan@commelin.net>
Date:   Tue Jan 30 19:26:56 2024 +0000

    chore(RingTheory/Polynomial): golf NoZeroDivisors MvPolynomial (#10130)

[33mcommit 1c09c1999f7f36265fee8ef08f4790d310c7ebc8[m
Author: Martin Dvo≈ô√°k <martin.dvorak@matfyz.cz>
Date:   Tue Jan 30 19:26:55 2024 +0000

    feat: List.append_cons_inj_of_not_mem (#6856)
    
    
    
    Co-authored-by: Yury G. Kudryashov <urkud@urkud.name>

[33mcommit b089a750dad17f8fce32a9fddd5a9cc66a7657d5[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Tue Jan 30 18:04:17 2024 +0000

    feat: `positivity` extension for `algebraMap` (#9961)

[33mcommit 08f7e99df3446a25c210ad0dbf7b0fd0df6797e3[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Tue Jan 30 18:04:16 2024 +0000

    doc: `@[inherit_doc]` on notations (#9942)
    
    Make all the notations that unambiguously should inherit the docstring of their definition actually inherit it.
    
    Also write a few docstrings by hand. I only wrote the ones I was competent to write and which I was sure of. Some docstrings come from mathlib3 as they were lost during the early port.
    
    This PR is only intended as a first pass There are many more docstrings to add.

[33mcommit d5057d5c4fbe3f1d2de33dc1b0934587dd0444e4[m
Author: Scott Morrison <scott@tqft.net>
Date:   Tue Jan 30 16:52:53 2024 +0000

    chore: remove classical, it has been moved to Std (#10121)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 0b65bd536a5abb856a28bca409d834285db82964[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Tue Jan 30 16:07:47 2024 +0000

    feat: a compact Gdelta set is a level set of a compactly supported function (#10101)

[33mcommit b660fcb446b1cde39421fdf0f914d452635d0cb7[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Jan 30 16:07:46 2024 +0000

    feat(Topology/CompactOpen): add `Tendsto.compCM` etc (#9882)
    
    * Use explicit `(g : C(Y, Z))` argument instead of `variable`.
      This way only implicit arguments are not visible right there in the source.
    * Add dot-notation lemmas about composition of bundled continuous functions.

[33mcommit ae98c3f27ef82cb77bd345612caa9d51d8dfcb65[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Jan 30 14:58:48 2024 +0000

    feat: images of intervals under `(‚Üë) : ‚Ñï ‚Üí ‚Ñ§` (#9927)
    
    Also generalize `IsUpperSet.Ioi_subset` and `IsLowerSet.Iio_subset`
    from a `PartialOrder` to a `Preorder`.

[33mcommit 7f0ee211ff2e3b50be25a1c54bf7afcfcc65fdbd[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Jan 30 14:33:17 2024 +0000

    feat(Gauge): add `comap_gauge_nhds_zero` etc (#10090)
    
    Add `comap_gauge_nhds_zero`, `comap_gauge_nhds_zero_le`,
    `tendsto_gauge_nhds_zero`, `tendsto_gauge_nhds_zero'`,
    and `continuousAt_gauge_zero`.

[33mcommit 5876928aa973de8045e91fd2b70d184ca806f6b2[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Jan 30 13:13:49 2024 +0000

    feat: formalize IMO 1959 Q2 (#9884)

[33mcommit 4b4c1a3ecaffbbe31685a505143333530bdf2569[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Jan 30 12:44:05 2024 +0000

    chore(BallotProblem): golf (#9929)
    
    Motivated by @Ruben-VandeVelde's leanprover-community/mathlib#15206

[33mcommit 6948057fd688b13b18d7c719fc0a374bbb231417[m
Author: Michael Stoll <Michael.Stoll@uni-bayreuth.de>
Date:   Tue Jan 30 10:47:16 2024 +0000

    feat(Data/ZMod/{Basic|Units}): some lemmas on units in ZMod (#10028)
    
    This is the second PR in a sequence that adds auxiliary lemmas from the [EulerProducts](https://github.com/MichaelStollBayreuth/EulerProducts) project to Mathlib.
    
    It adds four lemmas on units in `ZMod n`:
    ```lean
    lemma ZMod.eq_one_of_isUnit_natCast {n : ‚Ñï} (h : IsUnit (n : ZMod 0)) : n = 1
    
    lemma ZMod.isUnit_iff_coprime (m n : ‚Ñï) : IsUnit (m : ZMod n) ‚Üî m.Coprime n
    
    lemma ZMod.isUnit_prime_of_not_dvd {n p : ‚Ñï} (hp : p.Prime) (h : ¬¨ p ‚à£ n) : IsUnit (p : ZMod n)
    
    lemma ZMod.not_isUnit_of_mem_primeFactors {n p : ‚Ñï} (h : p ‚àà n.primeFactors) : ¬¨ IsUnit (p : ZMod n)
    ```

[33mcommit 76b26e84dd3bf6f2bc5e991d1f24993d3fe746d4[m
Author: Michael Stoll <Michael.Stoll@uni-bayreuth.de>
Date:   Tue Jan 30 09:46:43 2024 +0000

    feat(Data/Nat/Prime): some lemmas on primes and powers (#10025)
    
    This is the first PR in a sequence that adds auxiliary lemmas from the [EulerProducts](https://github.com/MichaelStollBayreuth/EulerProducts) project to Mathlib.
    
    It adds two lemmas on prime numbers and powers:
    ```lean
    lemma Nat.Prime.one_le {p : ‚Ñï} (hp : p.Prime) : 1 ‚â§ p
    
    lemma Nat.Prime.pow_injective {p q m n : ‚Ñï} (hp : p.Prime) (hq : q.Prime)
        (h : p ^ (m + 1) = q ^ (n + 1)) : p = q ‚àß m = n
    ```
    (The first one is for discoverability by `exact?` in cases one needs `1 ‚â§ p`.)

[33mcommit 132d4e4cc8dca2e1995599f8e05aee1060e715eb[m
Author: Markus Himmel <markus@himmel-villmar.de>
Date:   Tue Jan 30 07:56:03 2024 +0000

    refactor: remove simp attribute from yonedaEquiv_apply (#10109)

[33mcommit 38cd727855717287ba1696b1bd84273d16cf644c[m
Author: Markus Himmel <markus@himmel-villmar.de>
Date:   Tue Jan 30 07:56:02 2024 +0000

    refactor: create folder CategoryTheory/Comma (#10108)

[33mcommit 0fa946f3113bf57a9978bc8c07afbb86af23a489[m
Author: Yuma Mizuno <mizuno.y.aj@gmail.com>
Date:   Tue Jan 30 07:22:15 2024 +0000

    feat(CategoryTheory/Limits/KanExtension): generalize assumptions (#10003)

[33mcommit 42e69f033cf4a9f8ea4de398cb901ea21e6bdb46[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Jan 30 06:20:16 2024 +0000

    feat(Group/Measure): reformulate `exists_nhds_measure_smul_diff_lt` (#10093)
    
    * Formulate the lemma as `‚àÄ·∂† g in ùìù 1, _`
      instead of `‚àÉ V ‚àà ùìù 1, ‚àÄ g ‚àà V, _`.
    * Add a version in terms of `Filter.Tendsto`.
    * Golf Steinhaus Theorem.

[33mcommit 4fcf5bdedea9d48604f89eb65b498c4b1e693971[m
Author: Scott Morrison <scott@tqft.net>
Date:   Tue Jan 30 04:00:55 2024 +0000

    chore: bump Std to leanprover/std4#566 (#10117)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 99afa8404236b2fc48c04f54bc806b3068393673[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Jan 30 02:26:17 2024 +0000

    feat(Logic/Embedding): add a lemma (#10096)
    
    * Make `Function.Embedding.setValue_eq` a `simp` lemma.
    * Add `Function.Embedding.setValue_eq_iff`.

[33mcommit 41e0da3379227cc98dfe4ba971b094a6dec1824f[m
Author: David Renshaw <dwrenshaw@gmail.com>
Date:   Tue Jan 30 02:26:16 2024 +0000

    fix: use getTransparency in librarySearch SolveByElim.Config (#10052)

[33mcommit 9cc09f63d59391bc635031c12884be24e2ff767f[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Jan 30 02:26:15 2024 +0000

    chore(WithTop): less abuse of defeq to `Option _` (#9986)
    
    Also reuse proofs here and there.

[33mcommit 15e555e734281e38f03822b790c7cb672c8710d4[m
Author: Heather Macbeth <25316162+hrmacbeth@users.noreply.github.com>
Date:   Tue Jan 30 02:26:14 2024 +0000

    feat: characterize "eventually" in a subtype (#7568)
    
    
    
    Co-authored-by: Anatole Dedecker <anatolededecker@gmail.com>
    Co-authored-by: ADedecker <anatolededecker@gmail.com>

[33mcommit d3a6c9f3bd17193b002fdc5e540789c883605cc3[m
Author: Scott Morrison <scott@tqft.net>
Date:   Tue Jan 30 01:07:06 2024 +0000

    chore: bump Std to leanprover/std4#242 (#10104)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 132e5112a4627495177b8b165a8cfcc8992a87df[m
Author: Winston Yin <winstonyin@gmail.com>
Date:   Tue Jan 30 00:03:21 2024 +0000

    feat: Integral curves are either injective or periodic (#9343)
    
    Integral curves are either injective, constant, or periodic and non-constant.
    
    When we have notions of submanifolds, this'll be useful for showing that the image of an integral curve is a submanifold.
    
    - [x] depends on: #8886
    
    
    Co-authored-by: Yury G. Kudryashov <urkud@urkud.name>
    Co-authored-by: Michael Rothgang <rothgami@math.hu-berlin.de>

[33mcommit b4d01dc2afec51cc2bac52b1c1636666672bbe4c[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Mon Jan 29 21:32:09 2024 +0000

    refactor(MeasureTheory/Function/L1Space): rm two porting notes (#10056)
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit 7458f0e73e0f7d6acb16aec54166314351250412[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Jan 29 18:36:04 2024 +0000

    feat(Topology/Separation): define R‚ÇÅ spaces, review API (#10085)
    
    ### Main API changes
    
    - Define `R1Space`, a.k.a. preregular space.
    - Drop `T2OrLocallyCompactRegularSpace`.
    - Generalize all existing theorems
      about `T2OrLocallyCompactRegularSpace` to `R1Space`.
    - Drop the `[T2OrLocallyCompactRegularSpace _]` assumption
      if the space is known to be regular for other reason
      (e.g., because it's a topological group).
    
    ### New theorems
    
    - `Specializes.not_disjoint`:
      if `x ‚§≥ y`, then `ùìù x` and `ùìù y` aren't disjoint;
    - `specializes_iff_not_disjoint`, `Specializes.inseparable`,
      `disjoint_nhds_nhds_iff_not_inseparable`,
      `r1Space_iff_inseparable_or_disjoint_nhds`: basic API about `R1Space`s;
    - `Inducing.r1Space`, `R1Space.induced`, `R1Space.sInf`, `R1Space.iInf`,
      `R1Space.inf`, instances for `Subtype _`, `X √ó Y`, and `‚àÄ i, X i`:
      basic instances for `R1Space`;
    - `IsCompact.mem_closure_iff_exists_inseparable`,
      `IsCompact.closure_eq_biUnion_inseparable`:
      characterizations of the closure of a compact set in a preregular space;
    - `Inseparable.mem_measurableSet_iff`: topologically inseparable points
      can't be separated by a Borel measurable set;
    - `IsCompact.closure_subset_measurableSet`, `IsCompact.measure_closure`:
      in a preregular space, a measurable superset of a compact set
      includes its closure as well;
      as a corollary, `closure K` has the same measure as `K`.
    - `exists_mem_nhds_isCompact_mapsTo_of_isCompact_mem_nhds`:
      an auxiliary lemma extracted from a `LocallyCompactPair` instance;
    - `IsCompact.isCompact_isClosed_basis_nhds`:
      if `x` admits a compact neighborhood,
      then it admits a basis of compact closed neighborhoods;
      in particular, a weakly locally compact preregular space
      is a locally compact regular space;
    - `isCompact_isClosed_basis_nhds`: a version of the previous theorem
      for weakly locally compact spaces;
    - `exists_mem_nhds_isCompact_isClosed`: in a locally compact regular space,
      each point admits a compact closed neighborhood.
    
    ### Deprecated theorems
    
    Some theorems about topological groups are true for any (pre)regular space,
    so we deprecate the special cases.
    
    - `exists_isCompact_isClosed_subset_isCompact_nhds_one`:
      use new `IsCompact.isCompact_isClosed_basis_nhds` instead;
    - `instLocallyCompactSpaceOfWeaklyOfGroup`,
      `instLocallyCompactSpaceOfWeaklyOfAddGroup`:
      are now implied by `WeaklyLocallyCompactSpace.locallyCompactSpace`;
    - `local_isCompact_isClosed_nhds_of_group`,
      `local_isCompact_isClosed_nhds_of_addGroup`:
      use `isCompact_isClosed_basis_nhds` instead;
    - `exists_isCompact_isClosed_nhds_one`, `exists_isCompact_isClosed_nhds_zero`:
      use `exists_mem_nhds_isCompact_isClosed` instead.
    
    ### Renamed/moved theorems
    
    For each renamed theorem, the old theorem is redefined as a deprecated alias.
    
    - `isOpen_setOf_disjoint_nhds_nhds`: moved to `Constructions`;
    - `isCompact_closure_of_subset_compact` -> `IsCompact.closure_of_subset`;
    - `IsCompact.measure_eq_infi_isOpen` -> `IsCompact.measure_eq_iInf_isOpen`;
    - `exists_compact_superset_iff` -> `exists_isCompact_superset_iff`;
    - `separatedNhds_of_isCompact_isCompact_isClosed` -> `SeparatedNhds.of_isCompact_isCompact_isClosed`;
    - `separatedNhds_of_isCompact_isCompact` -> `SeparatedNhds.of_isCompact_isCompact`;
    - `separatedNhds_of_finset_finset` -> `SeparatedNhds.of_finset_finset`;
    - `point_disjoint_finset_opens_of_t2` -> `SeparatedNhds.of_singleton_finset`;
    - `separatedNhds_of_isCompact_isClosed` -> `SeparatedNhds.of_isCompact_isClosed`;
    - `exists_open_superset_and_isCompact_closure` -> `exists_isOpen_superset_and_isCompact_closure`;
    - `exists_open_with_compact_closure` -> `exists_isOpen_mem_isCompact_closure`;

[33mcommit 7afbac6661fa431a4d2bdfc06aa36ff7df5e73bc[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Mon Jan 29 17:52:04 2024 +0000

    chore(Topology/PartialHomeomorph): rename type variables (#9632)
    
    Greek letters are dead, long live X, Y and Z. Same procedure as in previous renames.

[33mcommit d883f18709a4f286ec084905c6c2a82ad094b6aa[m
Author: s1m7u <z5476255@ad.unsw.edu.au>
Date:   Mon Jan 29 16:54:51 2024 +0000

    chore(Data/List/Rotate): add `@[simp]` to `rotate_replicate` (#10106)

[33mcommit 89f9777575aaa0e4190c64c8247b03f7864f67e8[m
Author: Scott Morrison <scott@tqft.net>
Date:   Mon Jan 29 15:34:18 2024 +0000

    chore: fix Punit->PUnit in CommMon_ (#10089)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 00b71ef0d839c33562fac640420086f01a428b29[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Mon Jan 29 14:47:04 2024 +0000

    refactor(Probability/Kernel/CondCdf): mv tendsto_of_antitone (#10046)
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit 68c771aeb110c2179cc84655222a49d5f6cf3b93[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Mon Jan 29 13:56:07 2024 +0000

    doc: fix typos (#10100)
    
    Fix minor typos in the following files:
    
    - [x] `Mathlib/GroupTheory/GroupAction/Opposite.lean`
    - [x] `Mathlib/Init/Control/Lawful.lean`
    - [x] `Mathlib/ModelTheory/ElementarySubstructures.lean`
    - [x] `Mathlib/Algebra/Group/Defs.lean`
    - [x] `Mathlib/Algebra/Group/WithOne/Basic.lean`
    - [x] `Mathlib/Data/Int/Cast/Defs.lean`
    - [x] `Mathlib/LinearAlgebra/Dimension/Basic.lean`
    - [x] `Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean`
    - [x] `Mathlib/Algebra/Star/StarAlgHom.lean`
    - [x] `Mathlib/AlgebraicTopology/SimplexCategory.lean`
    - [x] `Mathlib/CategoryTheory/Abelian/Homology.lean`
    - [x] `Mathlib/CategoryTheory/Sites/Grothendieck.lean`
    - [x] `Mathlib/RingTheory/IsTensorProduct.lean`
    - [x] `Mathlib/AlgebraicTopology/DoldKan/Homotopies.lean`
    - [x] `Mathlib/AlgebraicTopology/ExtraDegeneracy.lean`
    - [x] `Mathlib/AlgebraicTopology/Nerve.lean`
    - [x] `Mathlib/AlgebraicTopology/SplitSimplicialObject.lean`
    - [x] `Mathlib/Analysis/ConstantSpeed.lean`
    - [x] `Mathlib/Analysis/Convolution.lean`

[33mcommit e463fbf8154f73552b479ac936914648dbfa336f[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Mon Jan 29 13:15:22 2024 +0000

    chore(Analysis/SpecialFunctions/JapaneseBracket): restore measurability (#10054)
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit cea4f7aabfdbf6d0967d580d38017fb0469b84b9[m
Author: Scott Morrison <scott@tqft.net>
Date:   Mon Jan 29 10:59:18 2024 +0000

    chore: cleanup some Yoneda lemma proofs (#10092)
    
    While thinking about simp lemmas for opposite categories (for the sake of comonoid objects, for the sake of group objects, for the sake of reductive groups), noticed some of the Yoneda lemma proofs can be golfed.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 197378aebf308614fa2e208f781ecacb1f7de314[m
Author: Adam Topaz <github@adamtopaz.com>
Date:   Mon Jan 29 10:12:33 2024 +0000

    chore: Fix some porting notes and make some defs computable again. (#10062)
    
    These are some auxiliary definitions for the monoidal structure on a category induced by binary products and terminal objects.

[33mcommit 86ffe042ba78d8e2f72717176e5ed6cd0c3445df[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Jan 29 07:53:36 2024 +0000

    chore(Order/Filter/ListTraverse): move from `Basic` (#10048)

[33mcommit a4c1d9d9d674e0775c95a07f8ea762d6ab0c474c[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Mon Jan 29 07:53:35 2024 +0000

    chore: split file on series of functions into two files (#9906)
    
    Currently, the same file contains the facts that series of functions are continuous (resp. smooth) under suitable assumption. I will need the result on continuity in a file of more topological nature. To avoid importing all calculus in this file, this PR splits the file `Analysis.Calculus.Series` into `Analysis.Calculus.SmoothSeries` and `Analysis.NormedSpace.FunctionSeries`.
    
    It's purely a splitting PR, no result added or removed.

[33mcommit 1fa9ebf063d1a37df47062b808442eb84140afda[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Jan 29 06:37:18 2024 +0000

    feat(Algebra/InfiniteSum): drop `[T2Space _]` assumption (#10060)
    
    * Add `CanLift` instance for `Function.Embedding`.
    * Assume `Injective i` instead of an equivalent condition in `hasSum_iff_hasSum_of_ne_zero_bij`.
    * Add `tsum_eq_sum'`, a version of `tsum_eq_sum` that explicitly mentions `support f`.
    * Add `Function.Injective.tsum_eq`, use it to drop `[T2Space _]` assumption in
      - `Equiv.tsum_eq`;
      - `tsum_subtype_eq_of_support_subset`;
      - `tsum_subtype_support`;
      - `tsum_subtype`;
      - `tsum_univ`;
      - `tsum_image`;
      - `tsum_range`;
      - `tsum_setElem_eq_tsum_setElem_diff`;
      - `tsum_eq_tsum_diff_singleton`;
      - `tsum_eq_tsum_of_ne_zero_bij`;
      - `Equiv.tsum_eq_tsum_of_support`;
      - `tsum_extend_zero`;
    * Golf some proofs.
    * Drop `Equiv.Set.prod_singleton_left` and `Equiv.Set.prod_singleton_right` added in #10038.
      @MichaelStollBayreuth, if you need these `Equiv`s, then please
    
      - restore them in `Logic/Equiv/Set`, not in `Data/Set/Prod`;
      - call them `Equiv.Set.singletonProd` and `Equiv.Set.prodSingleton`, following the `lowerCamelCase` naming convention for `def`s;
      - reuse the existing `Equiv.Set.prod` and `Equiv.prodUnique`/`Equiv.uniqueProd` in the definitions.

[33mcommit 1da1e9e179a6c77fb3346ee94277a130707ac49f[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Mon Jan 29 06:37:17 2024 +0000

    feat: minor topological improvements (#9908)
    
    * Prove that a set is a Gdelta if and only if it is an intersection of open sets indexed by `‚Ñï`.
    * Cleanup porting todos in the Gdelta file
    * Rename `cluster_point_of_compact` to `exists_clusterPt_of_compactSpace `
    * Generalize the class `T2Space` to `T2OrLocallyCompactRegularSpace` in the file `Support.lean`

[33mcommit 4e0ccc0082402a74c5a337e4a8004943e952fede[m
Author: technosentience <28826901+technosentience@users.noreply.github.com>
Date:   Mon Jan 29 05:23:46 2024 +0000

    feat(Data/Fin/Tuple/Basic): `repeat_comp_rev` (#9845)
    
    Prove `repeat_comp_rev`.
    
    
    
    Co-authored-by: Yury G. Kudryashov <urkud@urkud.name>

[33mcommit f5a69eac9e6acaa0645ba7bbe9b5997fc0073dd8[m
Author: Kevin Buzzard <k.buzzard@imperial.ac.uk>
Date:   Mon Jan 29 01:14:44 2024 +0000

    docs(Algebra/Algebra/Basic): get the type right (#10055)

[33mcommit 995b1af9518be6d57fde95d0cb27b27d8f5f7077[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Mon Jan 29 00:09:08 2024 +0000

    doc(Mathlib/Algebra): fix typos  (#10080)
    
    Fix minor typos in the `Mathlib/Algebra/CovariantAndContravariant.lean` file.

[33mcommit c38c032e6b12a8cca86ea0be3d02762374670580[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sun Jan 28 23:24:42 2024 +0000

    feat(Convex/Gauge): add `continuousAt_gauge` (#9911)

[33mcommit 9f35a0830ef1d6ae123386a34cf45708e59e7f53[m
Author: Oliver Nash <github@olivernash.org>
Date:   Sun Jan 28 15:34:44 2024 +0000

    feat: add lemmas `nullMeasurableSet_lt'` and `nullMeasurableSet_le` (#10074)
    
    Prior to this commit the state of Mathlib was:
    ```lean
    import Mathlib
    
    #check measurableSet_lt  -- Exists
    #check measurableSet_lt' -- Exists
    #check measurableSet_le  -- Exists
    
    #check nullMeasurableSet_lt  -- Exists
    #check nullMeasurableSet_lt' -- Missing
    #check nullMeasurableSet_le  -- Missing
    ```
    
    Co-authored-by: teorth <tao@math.ucla.edu>

[33mcommit e975e7812b71aff6c4b902dc0be83ae8e9121cae[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sun Jan 28 14:42:17 2024 +0000

    chore(Topology): fix a typo (#10070)
    
    There is no `NeBot` in this lemma

[33mcommit 19b5ded3c60a6da7b357a126fb56b56671d231e3[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Sun Jan 28 09:50:58 2024 +0000

    refactor(Probability/Kernel/CondCdf): mv some theorems (#10036)
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit e8bfb678dad1331ef34cf9531144b5295b96ece9[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Sun Jan 28 09:07:45 2024 +0000

    refactor(Probability/Kernel/CondCdf): mv ofReal_cinfi (#10044)
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit d5277c9a3e68ca82db40387dd778b68d314c8cc0[m
Author: Matthew Robert Ballard <matt@mrb.email>
Date:   Sun Jan 28 02:42:13 2024 +0000

    perf(NormedSpace/OperatorNorm): fix `simp` call and clean up porting notes (#9658)
    
    We clean up some porting notes and speed up this file.

[33mcommit 09b44c176e0eaf2a3cbf11272dca8cbe8dfcda29[m
Author: Christopher Hoskin <christopher.hoskin@gmail.com>
Date:   Sat Jan 27 19:32:54 2024 +0000

    feat(GroupTheory/GroupAction/Group): invOf smul lemmas (#9972)
    
    Give `smul` versions of some existing `mul` lemmas:
    
    - `invOf_smul_smul`
    - smul_invOf_smul (c.f. mul_invOf_self_assoc)
    - `invOf_smul_eq_iff` (c.f. `invOf_mul_eq_iff_eq_mul_left`) (required for #7569)
    - `smul_eq_iff_eq_invOf_smul` (c.f `mul_left_eq_iff_eq_invOf_mul`)
    
    
    
    Co-authored-by: Christopher Hoskin <christopher.hoskin@overleaf.com>
    Co-authored-by: Christopher Hoskin <mans0954@users.noreply.github.com>

[33mcommit e4e10f95a2336b1ace9877f6db696307ce76332f[m
Author: Michael Stoll <Michael.Stoll@uni-bayreuth.de>
Date:   Sat Jan 27 17:46:59 2024 +0000

    feat(Topology/Algebra/InfiniteSum/Basic): add some lemmas on `tsum`s (#10038)
    
    This is the fifth PR in a sequence that adds auxiliary lemmas from the [EulerProducts](https://github.com/MichaelStollBayreuth/EulerProducts) project to Mathlib.
    
    It adds three lemmas on `tsum`s:
    ```lean
    lemma HasSum.tsum_fiberwise {Œ± Œ≤ Œ≥ : Type*} [AddCommGroup Œ±] [UniformSpace Œ±] [UniformAddGroup Œ±]
        [T2Space Œ±] [RegularSpace Œ±] [CompleteSpace Œ±] {f : Œ≤ ‚Üí Œ±}
        {a : Œ±} (hf : HasSum f a) (g : Œ≤ ‚Üí Œ≥) :
        HasSum (fun c : Œ≥ ‚Ü¶ ‚àë' b : g ‚Åª¬π' {c}, f b) a
    
    lemma tsum_setProd_singleton_left {Œ± Œ≤ Œ≥ : Type*} [AddCommMonoid Œ≥] [TopologicalSpace Œ≥] [T2Space Œ≥]
        (a : Œ±) (t : Set Œ≤) (f : Œ± √ó Œ≤ ‚Üí Œ≥) : (‚àë' x : {a} √óÀ¢ t, f x) = ‚àë' b : t, f (a, b)
    
    lemma tsum_setProd_singleton_right {Œ± Œ≤ Œ≥ : Type*} [AddCommMonoid Œ≥] [TopologicalSpace Œ≥] [T2Space Œ≥]
        (s : Set Œ±) (b : Œ≤) (f : Œ± √ó Œ≤ ‚Üí Œ≥) : (‚àë' x : s √óÀ¢ {b}, f x) = ‚àë' a : s, f (a, b)
    ```
    and the necessary equivalences
    ```lean
    def prod_singleton_left {Œ± Œ≤ : Type*} (a : Œ±) (t : Set Œ≤) : ‚Üë({a} √óÀ¢ t) ‚âÉ ‚Üët
    
    def prod_singleton_right {Œ± Œ≤ : Type*} (s : Set Œ±) (b : Œ≤) : ‚Üë(s √óÀ¢ {b}) ‚âÉ ‚Üës
    ```

[33mcommit 0bcd6be6b061f4b3465ad878329e8af982ebb987[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Sat Jan 27 17:21:40 2024 +0000

    feat: two lemmas about cut-off functions (#9873)
    
    From sphere-eversion; I'm just upstreaming this.
    
    The version in sphere-eversion uses an unbundled design; we provide a bundled version (for now) to match the remaining file.
    
    
    
    Co-authored-by: grunweg <grunweg@posteo.de>

[33mcommit f1919fd4e80a859f53111cf94437b0f85b5d345a[m
Author: Yuma Mizuno <mizuno.y.aj@gmail.com>
Date:   Sat Jan 27 14:51:46 2024 +0000

    feat(CategoryTheory/Monoidal): add lemmas for the whiskerings (#9995)
    
    Extracted from #6307.

[33mcommit c6cc35e1bd6e6e38ef07047d66fb0d09e17bef7c[m
Author: Christian Merten <christian@merten.dev>
Date:   Sat Jan 27 11:43:29 2024 +0000

    docs(TensorProduct/Tower): fix doc string of `AlgebraTensorModule.assoc` (#10051)
    
    Matches variable names in the doc string with the variables used in the type signature of `AlgebraTensorModule.assoc`.

[33mcommit ae8f621cc3fba00bbfaf44148986b28e94014865[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Sat Jan 27 11:43:28 2024 +0000

    feat: four small lemmas about extended charts (#10001)
    
    From sphere-eversion; I'm just submitting them.

[33mcommit c8818ba75da8e296a69e2b6a2d1aa79ca389b76b[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Sat Jan 27 11:43:27 2024 +0000

    feat(NormedSpace/Basic): add dist_smul_add_one_sub_smul_le (#9982)
    
    From sphere-eversion (slightly golfed); I'm just upstreaming it.

[33mcommit ca91ff1e242ba6926589d52009ca3dcd13642095[m
Author: Winston Yin <winstonyin@gmail.com>
Date:   Sat Jan 27 11:43:26 2024 +0000

    refactor(PartialHomeomorph): make `[Nonempty s]` explicit (#9894)
    
    Subsets aren't going to have `Nonempty` instances on them, typically, so one would have to manually construct a term of `[Nonempty s]` whenever `PartialHomeomorph.subtypeRestr` is used. Turning this instance argument explicit, `(hs : Nonempty s)` would help us avoid `@PartialHomeomorph.subtypeRestr _ _ _ _` constructions or `haveI : Nonempty ...`.
    
    Its only downstream effect currently is in `ChartedSpace.lean`.

[33mcommit a1bc0ac05116c765f01265d9dffa17696d42defe[m
Author: Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>
Date:   Sat Jan 27 10:41:58 2024 +0000

      doc(docs): fix typos (#10050)
    
    Fix minor typos in the `docs` folder.

[33mcommit 15c33b6a207dca8009656ec7903731e6d220f78f[m
Author: Fr√©d√©ric Dupuis <dupuisf@iro.umontreal.ca>
Date:   Sat Jan 27 10:41:57 2024 +0000

    fix: lemma given a wrong name by `to_additive` (#10049)

[33mcommit 7f19636c19fc931c780a340bd4b32e61d7c4ca78[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Sat Jan 27 10:41:57 2024 +0000

    chore: factor out a lemma from the proof of Steinhaus theorem (#9907)
    
    Given a measure in a locally compact group, and a compact set `k`, then for `g` close enough to the identity, the set `g ‚Ä¢ k \ k` has arbitrarily small measure. A slightly weaker version of this fact is used implicitly in our current proof of Steinhaus theorem that `E - E` is a neighborhood of the identity if `E` has positive measure. Since I will need this lemma later on, I extract it from the proof of Steinhaus theorem in this PR.

[33mcommit cb8ebafbf496d7273b27c5424ffbc4a195f4bda5[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Sat Jan 27 09:26:07 2024 +0000

    refactor(Probability/Kernel/CondCdf): mv prod_iInter (#10037)
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit 62acecee993214f545acf44c171ee0e2a2fe4051[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Fri Jan 26 22:26:07 2024 +0000

    feat: iteratedDeriv_const_{s,}mul, iteratedDeriv_{c,}exp_const_mul (#9767)
    
    Based on @CBirkbeck's work on modular forms.

[33mcommit 781af0124fbbcff04b5664d1fb8953f8ec182fcb[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Fri Jan 26 20:18:23 2024 +0000

    feat: drop unneeded assumptions in `IsUniform.integral_eq` (#10021)
    
    
    
    Co-authored-by: sgouezel <sebastien.gouezel@univ-rennes1.fr>

[33mcommit f1802b11e0bdeb5cf177000f7da53762ed467e5c[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Fri Jan 26 19:09:11 2024 +0000

    feat: Add lattice lemmas about `Sub{group,monoid}.{op,unop}` (#9860)
    
    In fact I only need the `closure` lemma, but the others are easy enough.
    
    This changes the `opEquiv`s to be order isomorphisms rather than just `Equiv`s.

[33mcommit edd8f405c39ea5cb286c52735be61d8487561871[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Fri Jan 26 18:21:29 2024 +0000

    feat: link `Dilation` to `Isometry` and `Homeomorph` (#9980)

[33mcommit ab48003cb45fc2a6f7ef20c3c9ce3c7d5e5fea9f[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Fri Jan 26 17:17:58 2024 +0000

    chore(Calculus/ParametricIntegralInterval): small clean-ups (#10005)
    
    - collect some very common variables
    - use refine and \mapsto instead of refine' and => (both are preferred now)

[33mcommit 1fec3c4a56a0a991f7324bb7b1f89ab6a6795d19[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Fri Jan 26 13:55:43 2024 +0000

    chore(Filter/Ker): move from Filter.Basic to a new file (#10023)
    
    Start moving parts of >3K lines long `Filter.Basic` to new files.

[33mcommit 00857680970cbf0a2b790fa089045b8fdc30911d[m
Author: Xavier Roblot <46200072+xroblot@users.noreply.github.com>
Date:   Fri Jan 26 11:59:21 2024 +0000

    feat: Add `measurable_abs` (#9912)
    
    See [Zulip](https://leanprover.zulipchat.com/#narrow/stream/217875-Is-there-code-for-X.3F/topic/measurable_abs/near/417230631)
    
    
    
    Co-authored-by: Ya√´l Dillies <yael.dillies@gmail.com>

[33mcommit 5821f8c535b980030e557cc5d1683c1644eba7a9[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Fri Jan 26 11:20:53 2024 +0000

    feat: add LocallyFinite.smul_{left,right} (#10020)
    
    From sphere-eversion. Will be used to show a point-wise version of `SmoothPartitionOfUnity.contMDiff_finsum_smul`.
    
    
    
    
    Co-authored-by: Oliver Nash <github@olivernash.org>

[33mcommit e16509855a175cffcfdc11c38dfde193c9b2323f[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Fri Jan 26 11:20:52 2024 +0000

    feat: add Int.le_add_one_iff (#9892)
    
    
    
    Co-authored-by: Yury G. Kudryashov <urkud@urkud.name>

[33mcommit 4529fc10a36959b43241f705dd9d36bc1c634914[m
Author: Matthew Robert Ballard <matt@mrb.email>
Date:   Fri Jan 26 08:58:29 2024 +0000

    chore(MetricSpace.PseudoMetric): make `PseudoEMetricSpace.toPseudoMetricSpaceOfDist` reducible  (#10012)
    
    `PseudoEMetricSpace.toPseudoMetricSpaceOfDist` is used in instances so needs to be reducible for unification.

[33mcommit f2b0b27f74e3383619a2b03a376e7e9c86c1b44b[m
Author: Thomas Browning <tb65536@uw.edu>
Date:   Fri Jan 26 08:58:28 2024 +0000

    feat(GroupTheory/GroupAction/Basic): Condition for `swap` to stabilize a set (#9945)

[33mcommit a268d11675c81f2e8e313836cab791d62be9c796[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Fri Jan 26 08:58:27 2024 +0000

    feat: one lemma about LocallyFinite (#9813)
    
    From sphere-eversion; I'm just submitting this upstream.

[33mcommit 19ab970d5f9f0204e7bb92cb15cf9862bf3ef449[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Fri Jan 26 08:27:37 2024 +0000

    feat: add PartialHomeomorph.extend_target' (#9977)
    
    Inspired by sphere-eversion; similar to `PartialEquiv.image_source_eq_target`.

[33mcommit 0500719e7067fc46c0de04ad034b875a43932504[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Fri Jan 26 07:29:47 2024 +0000

    feat: Int.{even_sub_one,even_mul_pred_self} (#9859)
    
    Also rename `Nat.even_mul_self_pred` for consistency with `Nat.even_mul_succ_self`.

[33mcommit 970a1ab2bfb8a7921fd05c872c630a0a83632bb8[m
Author: Oliver Nash <github@olivernash.org>
Date:   Fri Jan 26 04:28:56 2024 +0000

    feat: the minimal polynomial is a generator of the annihilator ideal (#10008)
    
    More precisely, the goal of these changes is to make the following work:
    ```lean
    import Mathlib.FieldTheory.Minpoly.Field
    
    open Module Polynomial
    
    example {K V : Type*} [Field K] [AddCommGroup V] [Module K V] (f : End K V) :
        (‚ä§ : Submodule K[X] <| AEval K V f).annihilator = K[X] ‚àô minpoly K f := by
      simp
    ```
    
    
    
    
    Co-authored-by: Johan Commelin <johan@commelin.net>

[33mcommit 20c7b4b802f5ad61a2c1621e707b906cfe79366c[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Fri Jan 26 03:44:15 2024 +0000

    chore(Topology/Basic): re-use variables; rename a : X to x : X (#9993)
    
    
    
    Co-authored-by: sgouezel <sebastien.gouezel@univ-rennes1.fr>
    Co-authored-by: Yury G. Kudryashov <urkud@urkud.name>

[33mcommit e3b6818691766c2d36c39b476c2a31cf72940dc4[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Fri Jan 26 03:03:09 2024 +0000

    fix: `Clm` -> `CLM`, `Cle` -> `CLE` (#10018)
    
    Rename
    
    - `Complex.equivRealProdClm` ‚Üí `Complex.equivRealProdCLM`;
      - [ ] TODO: should this one use `CLE`?
    - `Complex.reClm` ‚Üí `Complex.reCLM`;
    - `Complex.imClm` ‚Üí `Complex.imCLM`;
    - `Complex.conjLie` ‚Üí `Complex.conjLIE`;
    - `Complex.conjCle` ‚Üí `Complex.conjCLE`;
    - `Complex.ofRealLi` ‚Üí `Complex.ofRealLI`;
    - `Complex.ofRealClm` ‚Üí `Complex.ofRealCLM`;
    - `fderivInnerClm` ‚Üí `fderivInnerCLM`;
    - `LinearPMap.adjointDomainMkClm` ‚Üí `LinearPMap.adjointDomainMkCLM`;
    - `LinearPMap.adjointDomainMkClmExtend` ‚Üí `LinearPMap.adjointDomainMkCLMExtend`;
    - `IsROrC.reClm` ‚Üí `IsROrC.reCLM`;
    - `IsROrC.imClm` ‚Üí `IsROrC.imCLM`;
    - `IsROrC.conjLie` ‚Üí `IsROrC.conjLIE`;
    - `IsROrC.conjCle` ‚Üí `IsROrC.conjCLE`;
    - `IsROrC.ofRealLi` ‚Üí `IsROrC.ofRealLI`;
    - `IsROrC.ofRealClm` ‚Üí `IsROrC.ofRealCLM`;
    - `MeasureTheory.condexpL1Clm` ‚Üí `MeasureTheory.condexpL1CLM`;
    - `algebraMapClm` ‚Üí `algebraMapCLM`;
    - `WeakDual.CharacterSpace.toClm` ‚Üí `WeakDual.CharacterSpace.toCLM`;
    - `BoundedContinuousFunction.evalClm` ‚Üí `BoundedContinuousFunction.evalCLM`;
    - `ContinuousMap.evalClm` ‚Üí `ContinuousMap.evalCLM`;
    - `TrivSqZeroExt.fstClm` ‚Üí `TrivSqZeroExt.fstClm`;
    - `TrivSqZeroExt.sndClm` ‚Üí `TrivSqZeroExt.sndCLM`;
    - `TrivSqZeroExt.inlClm` ‚Üí `TrivSqZeroExt.inlCLM`;
    - `TrivSqZeroExt.inrClm` ‚Üí `TrivSqZeroExt.inrCLM`
    
    and related theorems.

[33mcommit 66439f5ad62664e7dda3c6b6a5fedbfee4112950[m
Author: Matthew Robert Ballard <matt@mrb.email>
Date:   Fri Jan 26 00:49:24 2024 +0000

    chore(UniformSpace.Basic): make `UniformSpace.comap` reducible  (#10010)
    
    `UniformSpace.comap` is used in instance construction so needs to be reducible for unification purposes.

[33mcommit 79a9e0eb61268e9ae47725a9335c94862f503c02[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Thu Jan 25 23:16:34 2024 +0000

    refactor(Topology/Clopen): order of open and closed (#9957)
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit f9daa98882a6cf0a815f6551e4da812fe414a66a[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Thu Jan 25 21:01:58 2024 +0000

    chore(Data/ENNReal/Basic): split file (#9869)
    
    
    
    Co-authored-by: Jireh Loreaux <loreaujy@gmail.com>

[33mcommit 0c4ffb61b30b5d8cc353e5f3d9a084a058d134f6[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Thu Jan 25 20:36:48 2024 +0000

    chore(test/toAdditive): remove commented test (#9971)
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit b3052eca12462821f2754d35f0e7702fc67370d9[m
Author: Scott Carnahan <128885296+ScottCarnahan@users.noreply.github.com>
Date:   Thu Jan 25 20:09:13 2024 +0000

    feat: polynomial evaluation via SMul (#9139)
    
    We introduce polynomial evaluation using SMul, so polynomials can be evaluated at elements of non-associative semirings.  This is most useful in the power-associative context, but power-associativity is not implemented yet.
    
    We obtain a generalization of `Polynomial.eval‚ÇÇ`, and in particular of the specializations `Polynomial.aeval` and `Polynomial.leval`.

[33mcommit 1f2e5863f40da1f7fa9ca41c8417a7ef30a3b4e7[m
Author: Alex Meiburg <alex.meiburg@gmail.com>
Date:   Thu Jan 25 16:42:45 2024 +0000

    fix doc for LinearMap.compRight (#9997)
    
    minor typo here. An (f : M2 -> M3) induces a linear map from (M->M2) to (M->M3). Not to (M2 -> M3).
    
    Co-authored-by: Alex Meiburg <timeroot.alex@gmail.com>

[33mcommit 47a9066b68ae892bc4548def477475d3f5e35d56[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Thu Jan 25 16:42:44 2024 +0000

    feat: add `Continuous.image_connectedComponentIn_subset` (#9983)
    
    and a version for homeomorphisms. From sphere-eversion; I'm just submitting things upstream.

[33mcommit e7170d39769f41a993b9e30c9eff0f80c3fac97d[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Thu Jan 25 16:42:43 2024 +0000

    feat(Topology/Basic): add TopologicalSpace.ext_isClosed (#9963)
    
    Use it to golf `PrimeSpectrum.localization_comap_inducing`.

[33mcommit bd6616c746de1403d5e2d4ae397f40446bcf81e2[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Thu Jan 25 16:42:42 2024 +0000

    chore(Integral/CircleTransform): golf (#9937)
    
    Motivated by @Ruben-VandeVelde's leanprover-community/mathlib#15206

[33mcommit 941d0692a944bf0bcd8c48ff1370e87ae0a362cf[m
Author: Oliver Nash <github@olivernash.org>
Date:   Thu Jan 25 15:54:36 2024 +0000

    feat: the torsion submodule of an irreducible element is semisimple (#9994)
    
    (provided the coefficients are a principal ideal ring)

[33mcommit c27bc4e194e730876cdd1f11cd1137bb11e411fb[m
Author: Johan Commelin <johan@commelin.net>
Date:   Thu Jan 25 15:54:35 2024 +0000

    refactor(ZMod): remove coe out of ZMod (#9839)
    
    
    
    Co-authored-by: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
    Co-authored-by: Vierkantor <vierkantor@vierkantor.com>

[33mcommit fe3b2b22ee717a23a4db0dd7e2671ddc6536102c[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Thu Jan 25 14:36:36 2024 +0000

    feat(Data/Sigma): add `Sigma.fst_surjective` etc (#9914)
    
    - Add `Sigma.fst_surjective`, `Sigma.fst_surjective_iff`,
      `Sigma.fst_injective`, and `Sigma.fst_injective_iff`.
    - Move `sigma_mk_injective` up.
    - Open `Function` namespace, drop `Function.`.
    - Fix indentation.

[33mcommit 8853442f7967f4c8886cd72a9c79b9a2d3713d14[m
Author: Oliver Nash <github@olivernash.org>
Date:   Thu Jan 25 14:36:35 2024 +0000

    feat: define semisimple linear endomorphisms (#9825)

[33mcommit 0b79434ba2da838d22c8a05c65fc846782a4065a[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Thu Jan 25 14:02:42 2024 +0000

    chore: golf `FiniteDimensional.isROrC_to_real` (#9921)

[33mcommit ce79848ac6ef86ab27049f8a729be2157b585a47[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Thu Jan 25 13:08:16 2024 +0000

    feat(Trigonometric): add lemmas about `cos x = -1 ‚Üî _` etc (#9878)

[33mcommit 2b7478a4c7f65be11f5fa8df9d21d5d68475d267[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Thu Jan 25 13:08:14 2024 +0000

    feat: superFactorial_two_mul, superFactorial_four_mul (#7924)
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>
    Co-authored-by: Yury G. Kudryashov <urkud@urkud.name>

[33mcommit c5ca57c101f2ad3e472f02585bb28a4ca1e95364[m
Author: Alex J Best <alex.j.best@gmail.com>
Date:   Thu Jan 25 12:45:33 2024 +0000

     feat: problem matchers for tests (#9552)
    
    Makes it a bit easier to see which test failed and where

[33mcommit d3da7bbcb2e69b857174921901af117e7b4838b5[m
Author: Yuma Mizuno <mizuno.y.aj@gmail.com>
Date:   Thu Jan 25 12:14:10 2024 +0000

    refactor(CategoryTheory/Monoidal): replace axioms with those more suitable for the whiskerings (#9991)
    
    Extracted from #6307. We replace some axioms by those more preferable when using the whiskerings instead of the tensor of morphisms.

[33mcommit 2725911956f72758e564aaca90f8398572ee14a6[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Thu Jan 25 11:09:48 2024 +0000

    chore(Algebra/Algebra/Basic): remove @s to address porting note (#9969)
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit 9a290c22c3c413265e96bf9c59faab21c56ea97a[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Thu Jan 25 09:21:34 2024 +0000

    chore(Topology/Constructions): rename most type variables (#9863)
    
    Now we use letters X and Y for topological spaces, not Greek letters.
    
    I didn't replace all letters; some lemmas need a large number of different letters. Volunteers for the last instances welcome.

[33mcommit 2e59248d25c8fabd07a4401e160e757b33f85dfe[m
Author: Yuma Mizuno <mizuno.y.aj@gmail.com>
Date:   Thu Jan 25 06:29:39 2024 +0000

    refactor(CategoryTheory/Monoidal): split the naturality condition of monoidal functors (#9988)
    
    Extracted from #6307. We replace `Œº_natural` with `Œº_natural_left` and `Œº_natural_right` since we prefer to use the whiskerings to the tensor of morphisms in the refactor #6307.

[33mcommit 8c661e5492d1852ac9a417cfc675b6545d77c4b7[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Thu Jan 25 02:46:49 2024 +0000

    feat: add `Homeomorph.subtype` for lifting homeomorphisms to subtypes (#9959)
    
    This extends `Equiv.subtypeEquiv`, which promotes `e : Œ± ‚âÉ Œ≤` to `e.subtypeEquiv _ : {a : Œ± // p a} ‚âÉ {b : Œ≤ // q b}`, to homeomorphisms.
    
    We also add a missing lemma linking `Equiv.subtypeEquiv` to `Subtype.map`, and update the definition to use `Subtype.map` also.

[33mcommit 0c3436844faf11009249e9c1f9b6aa27fbaa4893[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Thu Jan 25 01:23:40 2024 +0000

    feat: sigma-compact measure zero sets are meagre (#7640)
    
    
    
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>

[33mcommit ad22323241bc9d60798ca7004f189caf7a924890[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Thu Jan 25 00:17:40 2024 +0000

    feat: two lemmas about division (#9966)

[33mcommit e88d290437bcb4535048a38833646daf7056bf90[m
Author: Oliver Nash <github@olivernash.org>
Date:   Wed Jan 24 22:51:33 2024 +0000

    chore: remove porting note after `simp` fix (#9974)

[33mcommit a686ba8279292ac8c50a644ee7ee3c9ab178a649[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Wed Jan 24 20:52:37 2024 +0000

    feat: finite products/sums of differentiable maps into smooth commutative monoids are differentiable (#9775)
    
    From sphere-eversion; I'm just upstreaming this.
    
    
    
    Co-authored-by: Oliver Nash <github@olivernash.org>

[33mcommit 0aa016e0aae601818fee45ebe54e19ddb2ace4bb[m
Author: Matthew Robert Ballard <matt@mrb.email>
Date:   Wed Jan 24 18:17:19 2024 +0000

    chore(Algebra.Basic): override `toFun` and `smul` in `Algebra.id` (#9949)
    
    The current definition of `Algebra.id` is `(RingHom.id _).toAlgebra`. The problem with this is that `RingHom.id` is a `def` and is not reducible. Thus Lean will often refuse to unfold it causing unification to fail unecessarily in typeclass searches. This overrides the data fields from `RingHom.id`.

[33mcommit 725f123f1d69cd0bbb38dd86c9624389dafe1ecc[m
Author: Anne Baanen <vierkantor@vierkantor.com>
Date:   Wed Jan 24 15:59:29 2024 +0000

    perf: de-prioritize `Subalgebra.algebra'` and `IntermediateField.algebra'` (#9936)
    
    Like in #9655, these instances tend to be slow to fail, so we should assign them a low priority.
    
    Zulip discussions:
    https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Algebra.2Eid.20for.20IntermediateField https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Timeout.20in.20Submodule.20.28.F0.9D.93.9E.20K.29.20.28.F0.9D.93.9E.20K.29
    
    
    
    
    Co-authored-by: Anne Baanen <Vierkantor@users.noreply.github.com>

[33mcommit 4fe008656d65a6f79f6d46695ac13974f15fde81[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Jan 24 15:59:27 2024 +0000

    feat(UpperHalfPlane): add positivity extensions (#9545)

[33mcommit 9a8dc7a296f35e85692edf840e4ca187dcaf7556[m
Author: Christian Merten <christian@merten.dev>
Date:   Wed Jan 24 14:31:55 2024 +0000

    feat(CategoryTheory/Galois): finite `G`-sets are a `PreGaloisCategory` (#9879)
    
    We show that the category of finite `G`-sets is a `PreGaloisCategory` and the forgetful functor to finite sets is a `FibreFunctor`.

[33mcommit d1054e16d3bc2919ac02c495355fdb2a4f8db5f6[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Wed Jan 24 14:31:54 2024 +0000

    chore(Topology): remove autoImplicit from most remaining files (#9865)

[33mcommit 00202e4aa04bb71123000517de65b58490797fe0[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Wed Jan 24 14:31:52 2024 +0000

    feat(Topology/Support): add tsupport_smul_{left,right} (#9778)
    
    - rename `Function.support_smul_subset_right` to `Function.support_const_smul_subset`
    
    From sphere-eversion; I'm just upstreaming it.
    
    Co-authored-by: grunweg <grunweg@posteo.de>

[33mcommit fac72bc6a50e61e3e491022a5ea9f69ed6ec37bd[m
Author: Scott Morrison <scott@tqft.net>
Date:   Wed Jan 24 13:11:22 2024 +0000

    chore: bump dependencies (#9962)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 02240d5dedfcb3f2e70d06ce8f8ec0bb90dfaeea[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Wed Jan 24 13:11:21 2024 +0000

    refactor: move `Archimedean` instances to `Order/Archimedean` (#9950)
    
    We already have the instances for `‚Ñï`, `‚Ñ§`, and `‚Ñö` in this file, so adding `NNRat` doesn't feel that out of place, as it completes this {negation,division} lattice.
    
    Follows on from #9917. These changes knock off 132 dependencies from `NNRat`, though adds more to `Archimedean`.
    I think this is acceptable; we need `NNRat` to be super early if we want to be able to use it in norm_num, and the depth of `Archimedean` will reduce with `NNRat` as I work towards this.

[33mcommit e61934e2fb1397287e0439d06b86b2039e926bf9[m
Author: damiano <adomani@gmail.com>
Date:   Wed Jan 24 13:11:20 2024 +0000

    Add `Lattice ‚Ñ§` instance for computability (#9946)
    
    The file `Data.Int.ConditionallyCompleteOrder` defines a noncomputable instance of `ConditionallyCompleteLinearOrder` on `‚Ñ§`.
    
    This noncomputable instance is picked up by the typeclass search when looking for a `Lattice` instance on `‚Ñ§`, making, for instance, `abs` noncomputable on `‚Ñ§`.
    
    This PR restores the computability of `Lattice ‚Ñ§`.
    
    [Zulip discussion](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/No.20more.20.60Abs.60.3F/near/417546479)

[33mcommit 6694f75a22de2915d3a76cd7d0898c72726a1a7d[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Jan 24 10:41:24 2024 +0000

    chore(Topology/Basic): rename variables (#9956)
    
    Use `X`, `Y`, `Z` for topological spaces.

[33mcommit 46e6944ebe520dfa3737fd684c9b21d411d84932[m
Author: Winston Yin <winstonyin@gmail.com>
Date:   Wed Jan 24 10:06:42 2024 +0000

    chore: rename `StructureGroupoid.eq_on_source'` to `StructureGroupoid.mem_of_eqOnSource'` (#9802)
    
    Since it refers to `PartialEquiv.EqOnSource`, the correct naming scheme should not be snake case `eq_on_source`. I also added `mem_of_` because that's the target of the lemma, while `EqOnSource` is just a hypothesis.
    
    There are no added lemmas or docstrings in this PR. It's all just renaming.

[33mcommit cf5ad94f5788e2d611ece21fe3e5424944313a77[m
Author: Scott Morrison <scott@tqft.net>
Date:   Wed Jan 24 03:45:17 2024 +0000

    chore: bump Std and Aesop (#9948)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 0faddd8413787a897be448e1e1b89535d92016f3[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Wed Jan 24 02:51:10 2024 +0000

    feat: `n ‚Ä¢ v` and `v` are on the same ray (#9104)
    
    From LeanAPAP

[33mcommit 6219c2839777abd7d61db6cc06ccfbb6f270062d[m
Author: Jeremy Tan Jie Rui <reddeloostw@gmail.com>
Date:   Wed Jan 24 02:24:12 2024 +0000

    feat: transfer of graph properties over maps (#9708)
    
    Part of #9317.

[33mcommit bc9337e5704b1dfb8d4b95e2fad1cd80ead1200e[m
Author: Matthew Robert Ballard <matt@mrb.email>
Date:   Tue Jan 23 20:58:57 2024 +0000

    chore(Ring.Defs): Add docstrings for `Semiring` and `Ring` (#9941)
    
    These were lost in the port.

[33mcommit c60fa7e286008008b8ee4650e00f70c6b1bd955d[m
Author: damiano <adomani@gmail.com>
Date:   Tue Jan 23 20:32:56 2024 +0000

    docs({ Tactic + test }/MoveAdd): improve docs, add explanatory tests (#8606)
    
    The usage of `move_oper` was unclear ([Zulip](https://leanprover.zulipchat.com/#narrow/stream/113489-new-members/topic/move_oper.20.20HAnd.2EhAnd.3F/near/403812521)).  This PR corrects the docs and adds tests to show intended usage.
    
    Affected files:
    ```bash
    Tactic/MoveAdd
    test/MoveAdd
    ```

[33mcommit a5d2da9f639e81ea8dc6b8a10bcaa57868405f6e[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Tue Jan 23 19:39:25 2024 +0000

    refactor(Data/Rat/NNRat): move BigOperator lemmas to a new file (#9917)
    
    `NNRat` has far too many dependencies at the moment. This only removes 20 from its transitive closure (1609 -> 1589 according to `lake exe graph` and `| wc -l`), but it's a start.

[33mcommit 029e2394145abf5824bf049b7e44070d424e0ead[m
Author: Richard Copley <buster@buster.me.uk>
Date:   Tue Jan 23 16:44:49 2024 +0000

    doc(Algebra/Group/Defs): add note on names `SMul`, `VAdd`; typo fix (#9776)
    
    Edited module docstring:
    * Fixed recent accidental damage
    * Added a note about the motivation for the names `SMul` and `VAdd`
    [Zulip discussion](https://leanprover.zulipchat.com/#narrow/stream/113489-new-members/topic/.60SMul.60.20and.20.60VAdd.60)
    
    
    Co-authored-by: Richard Copley <rcopley@gmail.com>

[33mcommit e53e613abdea8d5b8863cbfb93014b9493e719d1[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Jan 23 14:45:11 2024 +0000

    feat: lemmas about images of intervals under order embeddings (#9926)

[33mcommit 26c5ad693e674853af1d1547f4515a8add6d592a[m
Author: Scott Morrison <scott@tqft.net>
Date:   Tue Jan 23 14:45:10 2024 +0000

    chore: remove spurious imports of positivity (#9924)
    
    Some of these are already transitively imported, others aren't used at all (but not handled by noshake in #9772).
    
    Mostly I wanted to avoid needing all of algebra imported (but unused!) in `FilteredColimitCommutesFiniteLimit`; there are now some `assert_not_exists` to preserve this.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 2a76c1de8358816936aac799066c261bda48ed99[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Jan 23 13:42:12 2024 +0000

    feat(Topology/Order): add `nhdsWithin_Ici_basis_Icc` (#9913)

[33mcommit 9d8e1c0bf00abbaab69ed8397d6b4fea3e7f5c84[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Jan 23 11:19:26 2024 +0000

    chore(Padics/Hensel): golf (#9932)
    
    Motivated by @Ruben-VandeVelde's leanprover-community/mathlib#15206

[33mcommit af696f3bdbe236859a1e8c3057dfa84a0c792f90[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Jan 23 11:19:25 2024 +0000

    chore(FieldTheory/Finite): golf (#9931)
    
    Motivated by @Ruben-VandeVelde's leanprover-community/mathlib#15206

[33mcommit 757022216efd12613198787e7dfe9ba40aa4822c[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Jan 23 11:19:24 2024 +0000

    feat: add lemmas about preimages of intervals under order embeddings (#9925)
    
    Also use them for `Rat.cast`.

[33mcommit 10cdffcb6244cd00f0489f078a90a97c7b21145e[m
Author: Scott Morrison <scott@tqft.net>
Date:   Tue Jan 23 11:19:22 2024 +0000

    chore: make nightly-testing-YYYY-MM-DD a tag, not a branch (#9842)
    
    Previously we continued to push updates through the day, if later commits on `nightly-testing` continued to pass CI.
    
    There seems to be little benefit from doing this, but there are some benefits from having a single tag:
    * all Lean PRs based off a particular Lean nightly will be tested against the same Mathlib commit
    * we can request that the speedcenter processes the nightly-testing-YYYY-MM-DD tags, so we can run `!bench` in all lean-pr-testing-NNNN PRs, and have a reliable base for the comparison
    
    This should not be merged until the Lean CI has been updated in https://github.com/leanprover/lean4/pull/3199, so it is agnostic about whether to expect a branch or tag here.
    
    - [x] depends on: https://github.com/leanprover/lean4/pull/3199
    
    When this is approved/merged I will follow up with:
    * an update to https://leanprover-community.github.io/contribute/tags_and_branches.html to describe the change
    * investigating a mechanism to ask the speedcenter to process these commits.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 6980d33f89559352f7bc8b33d485f8758c06808b[m
Author: Scott Morrison <scott@tqft.net>
Date:   Tue Jan 23 11:19:21 2024 +0000

    chore: Lean PR bot adds full-ci label on failure (#9801)
    
    If a `lean-pr-testing-NNNN` branch fails, add the label `full-ci` to leanprover/lean4#NNNN (we already add the `breaks-mathlib` label), so that when a human arrives to diagnose the problem toolchains for all OSs are available.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit f501849c2cac9cb7c5ee508df25c85e4057145f2[m
Author: Scott Morrison <scott@tqft.net>
Date:   Tue Jan 23 11:19:20 2024 +0000

    chore: better CI reporting to Lean repository for lean-pr-testing-NNNN branches (#9770)
    
    This is only relevant for lean-pr-testing-NNNN branches
    
    Previously some failure modes (the noisy checker, the archive, counterexamples) would result in a comment on the Lean PR, but the labels wouldn't be updated.
    
    This is more thorough, and slightly simplifies the logic.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit dab14df4bc9e4d2707afe23f01376811d2b96809[m
Author: Scott Morrison <scott@tqft.net>
Date:   Tue Jan 23 11:19:19 2024 +0000

    chore: don't upload cache in CI if build was skipped (#8987)
    
    As suggested on [zulip](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Some.20files.20not.20found.20in.20the.20cache/near/407183836).
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 4bde8367b0cf6caeb828c38e0fd68fb6f5c21ce0[m
Author: Winston Yin <winstonyin@gmail.com>
Date:   Tue Jan 23 11:19:17 2024 +0000

    feat: uniqueness of integral curves of a vector field on a manifold (#8886)
    
    We prove the uniqueness of integral curves of a vector field on a manifold using the uniqueness theorem for solutions to ODEs.
    
    
    
    Co-authored-by: Michael Rothgang <rothgami@math.hu-berlin.de>

[33mcommit 2475f305cecbfdf1fb57959e0634db06563c985a[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Jan 23 09:49:36 2024 +0000

    feat(Order/WithBot): add `WithBot.lt_coe_bot` (#9898)
    
    * Add `WithBot.lt_coe_bot` and `WithTop.coe_top_lt`.
    * Use them to golf `Nat.WithBot.lt_zero_iff`, make `n` argument implicit.
    * Add `section Preorder` for `WithBot` and `WithTop`.
    * Move some lemmas to appropriate sections.
    * Add `simp` to `WithBot.bot_lt_coe` and `WithTop.coe_lt_top`.
    * Use the `OrderDual` trick to golf some proofs.

[33mcommit 5158eea237dccd2665fc0f449db7cc21d9bef4c6[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Tue Jan 23 06:58:30 2024 +0000

    feat: case-specific equivalences for `IsROrC` (#9782)
    
    This adds ring isomorphisms and linear isometry equivalences between `ùïú` satisfying `IsROrC ùïú` and `‚Ñù` or `‚ÑÇ` depending on whether `I = 0` or `im I = 1`. Of course, the design of `IsROrC` is meant to eliminate the need for such things most of the time, but these are helpful in the rare case one actually does need to split into the two cases in the middle of a proof.

[33mcommit 999e59b2453250ade57b45bd1d8eba7ae5f9216c[m
Author: Mario Carneiro <mcarneir@andrew.cmu.edu>
Date:   Tue Jan 23 04:27:59 2024 +0000

    fix: `shake` bug, improve noshake.json generation (#9772)
    
    - [ ] depends on: #9830
    
    This is the `noshake.json` file corresponding to the edits in leanprover/std4#533. There was a small bug in `shake` making it much more conservative than it needed to be, so there is a big mathlib PR #9830, on which this PR depends because CI will not pass without it.
    
    
    
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit e808ef0e672ddbf4e3ea4c93fabf5da44c50043e[m
Author: Scott Morrison <scott@tqft.net>
Date:   Tue Jan 23 02:18:50 2024 +0000

    chore: bump Std and Aesop (#9922)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 805005924a01bdcc9b4fa4ad0e4f5cbd83f5fbdf[m
Author: David Renshaw <dwrenshaw@gmail.com>
Date:   Tue Jan 23 02:18:49 2024 +0000

    feat: implement rpow norm_num extension (#9893)
    
    * Implements a norm_num extension for `a ^ b` where `a` and `b` are reals. Unlike in the mathlib3 version, there is no restriction on the positivity of `a`.
    * Moves commented-out tests from test/norm_num_ext.lean into a new file test/norm_num_rpow.lean, to keep the dependencies of norm_num_ext.lean lightweight.
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit b4f6049be72d04f0f79832340b09b4e2923428d0[m
Author: Thomas Browning <tb65536@uw.edu>
Date:   Tue Jan 23 00:50:28 2024 +0000

    feat(GroupTheory/GroupAction/Defs): `isPretransitive_of_compHom` (#9122)
    
    This PR adds `isPretransitive_of_compHom` after the related `isPretransitive_compHom`.
    
    
    
    Co-authored-by: Thomas Browning <tb65536@users.noreply.github.com>

[33mcommit 99315bf71cec8eb94c2cc14e8198a032a7d9b12c[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Jan 23 00:09:58 2024 +0000

    feat(Algebra/AddConstMap): new file (#9725)

[33mcommit 5a0540a5b10114a7759f528618675c6ffd9701fa[m
Author: David Renshaw <dwrenshaw@gmail.com>
Date:   Mon Jan 22 21:46:06 2024 +0000

    feat: implement zpow norm_num extension (#9875)
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 2a7c4d65c4a125b15795880dba5e725af02c4f91[m
Author: David Kurniadi Angdinata <dka31@cantab.ac.uk>
Date:   Mon Jan 22 20:12:06 2024 +0000

    feat(NumberTheory/EllipticDivisibilitySequence): define elliptic divisibility sequences (#9375)
    
    As a generalisation of the division polynomials in #6703 but also possibly for other number theoretic purposes.
    
    The recurrence relation is defined as `isEllDivSequence`, and a concrete sequence is defined as `EllDivSequence`. The fact that the two definitions are related requires a very long inductive proof, and will not be touched on in this PR.

[33mcommit 8080f08c1e6efabcf3746f2d9c708a7eef11b03a[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Mon Jan 22 18:51:16 2024 +0000

    chore: tidy various files (#9903)

[33mcommit 69a8f62cf17b3e15ff086b6d7cfce72c52efe547[m
Author: David Renshaw <dwrenshaw@gmail.com>
Date:   Mon Jan 22 18:10:11 2024 +0000

    doc: remove stray 'a' in doc comment about PMOD (#9918)
    
    "congruent modulo a\`p\`" -> "congruent modulo \`p\`"

[33mcommit ad024fee525527319f931de626a1559303bc6d52[m
Author: Kevin Buzzard <k.buzzard@imperial.ac.uk>
Date:   Mon Jan 22 17:37:20 2024 +0000

    fix: typo in module docstring (#9916)

[33mcommit 012256bea333a07a858565f0f3e9e8b946ffd751[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Mon Jan 22 17:37:19 2024 +0000

    chore(Topology/Partial): rename type variables (#9862)
    
    We use letters X and Y for topological spaces now, not Greek letters.

[33mcommit 9a07518812fc1acc04d6ec70762f63c58081906a[m
Author: Jannis Limperg <jannis@limperg.de>
Date:   Mon Jan 22 16:16:32 2024 +0000

    chore: bump Aesop (#9905)

[33mcommit 6d0b012dee2bfced9c15d99ed05e1b7293f06baa[m
Author: Christian Merten <christian@merten.dev>
Date:   Mon Jan 22 15:15:19 2024 +0000

    chore(RepresentationTheory/Action): Factor out constructors for `Action V G` from `MulAction G X` (#9662)
    
    Further splits `Mathlib.RepresentationTheory.Action.Basic` and factors out the construction of objects
    of `Action V G` from a `MulAction G X` instance.

[33mcommit e6edc5abdc765db6a39abddc7d0912b84c84c710[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Jan 22 13:53:39 2024 +0000

    feat(Intervals/WithBotTop): generalize to `Preorder` (#9899)

[33mcommit 1612bb7f3ff8d814ce5126925308601f80fb093c[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Jan 22 13:53:37 2024 +0000

    chore(Order/WithBot): use `OrderDual` trick to golf some proofs (#9897)
    
    - Move `WithBot.instWellFoundedGT` up.
    - Use the `OrderDual` trick to golf some proofs.

[33mcommit e7d586f1360cf1691c670f4e2cfd9832f671dffe[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Jan 22 13:53:36 2024 +0000

    chore(Order/Ring/Pow): rename type variable (#9880)

[33mcommit b514c58060173a8cb8527bbd970083c4e7ad186a[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Jan 22 13:53:35 2024 +0000

    chore(Trigonometric/Basic): reorder, golf (#9867)

[33mcommit 585f7a481c96eb980ce3ebf8cda51fda958fc2c2[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Jan 22 13:53:34 2024 +0000

    refactor(MeasureTheory/Covering): redefine `filterAt` using `smallSets` (#9852)

[33mcommit 8ca0042cb21594c9a61d1e485d503f0431f10103[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Jan 22 12:55:15 2024 +0000

    fix(WithBot): fix 2 typos (#9900)

[33mcommit 8cab1b0ab93d822bd5138304fc5c7f76ae92fb0c[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Jan 22 09:31:48 2024 +0000

    feat(Nat/Prime): weaken assumptions in `Nat.not_prime_mul` (#9901)
    
    Assume `_ ‚â† 1` instead of `1 < _` in `Nat.not_prime_mul`,
    `Nat.not_prime_mul'`, `Int.not_prime_of_int_mul`.

[33mcommit 7466efcfbec769a3a676842fdc02e03ec2bd0966[m
Author: Martin Dvo≈ô√°k <martin.dvorak@matfyz.cz>
Date:   Sun Jan 21 02:48:48 2024 +0000

    chore(Algebra/AddTorsor): names with lower indices (#9616)
    
    Use variable names `p‚ÇÅ`, `p‚ÇÇ` etc instead of `p1`, `p2` etc.

[33mcommit 77d078e25cc501fae6907bfbcd80821920125266[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Sat Jan 20 23:57:45 2024 +0000

    chore(Geometry/Manifold/PartitionOfUnity): rename "of_closed" to "of_isClosed" in two lemmas (#9874)
    
    And fix a typo-ed lemma name in a doc comment.

[33mcommit 2a453c9bd79f04cc0a194e1db9f20701d19f97aa[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Sat Jan 20 23:31:35 2024 +0000

    fix(Filter/Extr): typo in docstring (#9876)
    
    if Is{Min,Max}On, and clarify Is{Min,Max}Filter slightly.

[33mcommit def91a5bcaae91121add88e578ea0a75365d85bc[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Sat Jan 20 21:21:31 2024 +0000

    chore(Geometry/Manifold/PartitionOfUnity): remove outdated comment (#9871)
    
    This comment was written by @urkud back then - but presumably forgotten to adjust then the proof of Whitney embedding moved into its own file.

[33mcommit e3c20cbbbbe7a771a4579587bc2326669e992ae1[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Sat Jan 20 16:06:42 2024 +0000

    feat: `BoundedSMul` for matrix norms (#9817)
    
    
    This provides the fact that the norm of scaling a matrix of quaternions by a quaternion is bounded by the product of the norms.

[33mcommit 052d8d57c394373282ac1b581e828d9f3625e94c[m
Author: Jeremy Tan Jie Rui <reddeloostw@gmail.com>
Date:   Sat Jan 20 14:41:50 2024 +0000

    chore: rename `Equiv.subset_image` (#9800)
    
    `Finset` versions of the renamed lemmas are also added.

[33mcommit 9d89f49884a4823287e980bf4445c80ecea4c942[m
Author: smorel394 <smorel@math.princeton.edu>
Date:   Sat Jan 20 11:07:19 2024 +0000

    feat(Analysis/NormedSpace/Multilinear.Basic): operator norm on `ContinuousMultilinearMap` for seminormed spaces (#9700)
    
    Slightly generalize the definition of the operator norm on `ContinuousMultilinearMap` so that it works when the spaces have seminorms (and not just norms).
    There are two new lemmas `MultilinearMap.zero_of_continuous_of_one_entry_norm_zero` and `MultilinearMap.bound_of_shell_of_continuous` that do the work of the old lemma `MultilinearMap.bound_of_shell`; I kept that last lemma (with the same hypotheses as before) in case it is useful somewhere else. Also, `ContinuousMultilinearMap` only gets a `SeminormedAddCommGroup` instance in general, which is upgraded to a `NormedAddCommGroup` instance if the target space is normed. Other lemmas and their proofs are unchanged, they are just rearranged to separate the ones that work for general seminormed spaces and the ones that only work for normed spaces.
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>
    Co-authored-by: Yury G. Kudryashov <urkud@urkud.name>
    Co-authored-by: smorel394 <67864981+smorel394@users.noreply.github.com>

[33mcommit df8fb034ee2019f2a36e6396bd6963b654bb19a4[m
Author: Xavier Roblot <46200072+xroblot@users.noreply.github.com>
Date:   Sat Jan 20 09:50:37 2024 +0000

    feat: Prove some results on bases of fractional ideals of number fields (#9836)
    
    - Add the instances that fractional ideals of number fields are finite and free $\mathbb{Z}$-modules
    - For `I : (FractionalIdeal (ùìû K)‚Å∞ K)À£` with `K` a number field, define a basis of `K` that spans `I` over $\mathbb{Z}$
    - Prove that the determinant of that basis over an integral basis of `K` is the absolute norm of `I`

[33mcommit 8b0b0e7fdf603126d968553629299be40aeef56f[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Sat Jan 20 09:50:36 2024 +0000

    chore: Move lemmas about `Int.natAbs` and `zpowersHom` (#9806)
    
    These can be defined earlier for free.
    
    Part of #9411

[33mcommit 5e6b32344e9159fdead9ece0b72505a5677991c7[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Sat Jan 20 09:10:24 2024 +0000

    doc(MetricSpace/Hausdorff): style fixes in doc comments (#9856)
    
    * End sentences with a full stop (per the style guide).
    * Fix grammar in a few trivial cases.
    * Use "triangle inequality", not "triangular inequality".

[33mcommit eb34a25d1bb216990c5985adbc40d4676a102d8a[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Fri Jan 19 23:40:13 2024 +0000

    chore(Topology/PartialHomeomorph): minor clean-up (#9633)
    
    - group related results into sections
    - move one section up, to a more logical place

[33mcommit 0a33acc5efd8a5a3f40043cb5d566146f3ac88a1[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Fri Jan 19 22:02:33 2024 +0000

    chore: tidy various files (#9851)

[33mcommit 369ad8f0fd7c1211e494ce874b9ffbc6461e5477[m
Author: Kyle Miller <kmill31415@gmail.com>
Date:   Fri Jan 19 22:02:32 2024 +0000

    docs: improve `Finite` docstring (#9667)

[33mcommit a3794dc03c93a635c695146e4a1a7fae7cc6b009[m
Author: Thomas Browning <tb65536@uw.edu>
Date:   Fri Jan 19 22:02:31 2024 +0000

    feat(Data/Set/Finite): Induction principle for `Set` (#9123)
    
    This PR adds another induction principle for `Set` where you prove that a property `C` holds of `Set.univ` by proving the inductive step `C S ‚Üí ‚àÉ a ‚àâ S, C (insert a S)` (the key being exists the use of exists rather than forall).
    
    
    
    Co-authored-by: Thomas Browning <tb65536@users.noreply.github.com>

[33mcommit 38082d8f8a9f19c37a97bf4b6cce903fb701973f[m
Author: negiizhao <egresf@gmail.com>
Date:   Fri Jan 19 21:22:13 2024 +0000

    feat: notation and delaborator for inner product (#9314)

[33mcommit 99f081226c688efcb6d8bbf736524c319e9587b1[m
Author: Patrick Massot <patrickmassot@free.fr>
Date:   Fri Jan 19 19:40:11 2024 +0000

    chore: scope symmDiff notations (#9844)
    
    Those notations are not scoped whereas the file is very low in the import hierarchy.

[33mcommit de9c7b5b7423d918eac64742cc5ea135f979ac3e[m
Author: Xavier Roblot <46200072+xroblot@users.noreply.github.com>
Date:   Fri Jan 19 16:41:34 2024 +0000

    chore: Split `RingTheory.FractionalIdeal.Basic` (#9854)
    
    The file `RingTheory.FractionalIdeal.Basic` is more than 1600 lines long. This PR splits it into two files: `Basic` and `Operations` following the model of `RingTheory.Ideal.Basic` and `RingTheory.Ideal.Operations`
    
    
    
    Co-authored-by: Mario Carneiro <mcarneir@andrew.cmu.edu>
    Co-authored-by: Jz Pan <acme_pjz@hotmail.com>

[33mcommit 50388bcc9c744fd7fb014fba3452a4807e048211[m
Author: Jz Pan <acme_pjz@hotmail.com>
Date:   Fri Jan 19 16:10:33 2024 +0000

    feat({Ring|Field}Theory/Adjoin): add various results on adjoin (#9790)
    
    Main changes:
    
    - for intermediate fields: add `extendScalars_adjoin`, `restrictScalars_adjoin_of_algEquiv`, `sup_toSubalgebra_of_isAlgebraic`, `adjoin_toSubalgebra_of_isAlgebraic`, `adjoin_rank_le_of_isAlgebraic`, and golf `sup_toSubalgebra`
    - for subalgebras: add `adjoin_eq_span_of_eq_span`, `adjoin_eq_span_basis`, `restrictScalars_adjoin`, `restrictScalars_adjoin_of_algEquiv`, `adjoin_rank_le`
    
    
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>

[33mcommit d0f6060f6e8c163cfda5413debbd6ccdfc56c209[m
Author: Jz Pan <acme_pjz@hotmail.com>
Date:   Fri Jan 19 15:41:37 2024 +0000

    feat(FieldTheory/IsAlgClosed/Basic): add `IsAlgClosed.perfectField` instance (#9710)
    
    
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>

[33mcommit 4bb560b586b2618d71fcb3c1217d8ad0087028c2[m
Author: Jz Pan <acme_pjz@hotmail.com>
Date:   Fri Jan 19 13:55:21 2024 +0000

    feat(LinearAlgebra/LinearIndependent): add `linearIndependent_iff_finset_linearIndependent` (#9797)
    
    A family is linearly independent if and only if all of its finite subfamily is linearly independent.

[33mcommit f4c4ca611c5e054450a7043de3cd65cc52b7e75e[m
Author: Mario Carneiro <mcarneir@andrew.cmu.edu>
Date:   Fri Jan 19 13:01:13 2024 +0000

    chore: reduce imports (#9830)
    
    This uses the improved `shake` script from #9772 to reduce imports across mathlib. The corresponding `noshake.json` file has been added to #9772.
    
    
    
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>

[33mcommit e29e9b5cad835e581541cfb918245c72b6850245[m
Author: Chris Birkbeck <c.birkbeck@ucl.ac.uk>
Date:   Fri Jan 19 11:22:01 2024 +0000

    feat: add definition of Eisenstein series (#9783)
    
    This defines Eisenstein series of level N and shows that they are a slash invariant form. Also adds some pre-requisites for proving they are modular forms, which will be in the next PRs
    
    
    
    Co-authored-by: David Loeffler <d.loeffler.01@cantab.net>
    Co-authored-by: Chris Birkbeck <c.birkbeck@uea.ac.uk>

[33mcommit 5160f99e1f946fcf054db595271bbd0db4320617[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Fri Jan 19 10:45:37 2024 +0000

    feat: lint for large files (#9822)
    
    This adds a style linter for files with more than 1500 lines. [zulip discussion](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Linter.20for.20large.20files.3F)
    
    Files which are longer are added as style exceptions. For these files, we also add a "high watermark": if such a file grows more than 100-200 lines compared to its current state, we still error.
    
    The style exceptions can be updated by running `./scripts/update-style-exceptions.py`;
    this regenerates the watermarks correctly.
    
    
    
    Co-authored-by: Jeremy Tan Jie Rui <reddeloostw@gmail.com>

[33mcommit 4a739b98ccfc479a294dc5735f9db2fb1bfc3665[m
Author: JADekker <114015169+JADekker@users.noreply.github.com>
Date:   Fri Jan 19 10:45:36 2024 +0000

    feat: add Lindel√∂f spaces and sets (#9107)
    
    Add definition Lindel√∂f set, Lindel√∂f space, non-Lindel√∂f space.
    Add copyright header
    
    Co-authored-by: Yury G. Kudryashov <urkud@urkud.name>

[33mcommit a86796b7fa07f45fcbc0c5df92a5d7e7464fff05[m
Author: Scott Carnahan <128885296+ScottCarnahan@users.noreply.github.com>
Date:   Fri Jan 19 09:25:55 2024 +0000

    feat: Weaken an order hypothesis (#9849)
    
    The theorem as stated assumes `LinearOrderedCancelAddCommMonoid Œì` but the results used in the proof only need `Zero Œì` `LinearOrder Œì`

[33mcommit 54792e9eb57ba3ffa360ce96c10715ff19bf29d0[m
Author: Anne Baanen <vierkantor@vierkantor.com>
Date:   Fri Jan 19 09:25:54 2024 +0000

    refactor(*): abbreviation for non-dependent `FunLike` (#9833)
    
    This follows up from #9785, which renamed `FunLike` to `DFunLike`, by introducing a new abbreviation `FunLike F Œ± Œ≤ := DFunLike F Œ± (fun _ => Œ≤)`, to make the non-dependent use of `FunLike` easier.
    
    I searched for the pattern `DFunLike.*fun` and `DFunLike.*Œª` in all files to replace expressions of the form `DFunLike F Œ± (fun _ => Œ≤)` with `FunLike F Œ± Œ≤`. I did this everywhere except for `extends` clauses for two reasons: it would conflict with #8386, and more importantly `extends` must directly refer to a structure with no unfolding of `def`s or `abbrev`s.

[33mcommit 58edd5051b32176df0c243836c5c6607475044a4[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Fri Jan 19 09:25:53 2024 +0000

    chore(CompactOpen): golf (#9829)
    
    - Add `ContinuousMap.compactOpen_eq_mapsTo`.
      I'm going to redefine `compactOpen` this way in a subsequent PR.
    - Golf/migrate some proofs.

[33mcommit 8b488abbd07f833e8e07f991f36f53b41622a543[m
Author: apurvanakade <apurvanakade@gmail.com>
Date:   Fri Jan 19 09:25:52 2024 +0000

    chore(Analysis/Convex./Cone): Rename `Dual.lean` to `InnerDual.lean` (#9818)
    
    The file `Dual.lean` is incorrectly named and does not define the dual cone. This has been causing some confusion with linear programming formalization.

[33mcommit 77a168749b1611c0f4a9971310b8afcae85d1eae[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Fri Jan 19 09:25:51 2024 +0000

    feat: add lemmas about iteratedDerivWithin (#9679)
    
    Mostly based on @CBirkbeck's work on modular forms.

[33mcommit 8fb1d5ae2c9a8e8a5fc835c66df11aef6e080d09[m
Author: Bulhwi Cha <chabulhwi@semmalgil.com>
Date:   Fri Jan 19 09:25:50 2024 +0000

    chore: remove duplicates about `List.append` (#9376)
    
    Replace duplicates in Mathlib with theorems in Lean core.
    
    * `List.append_left_cancel`  ‚Üí `List.append_cancel_left`
    * `List.append_right_cancel` ‚Üí `List.append_cancel_right`

[33mcommit 2b122b7cebe9ca753ab4120318ee6a1024bae055[m
Author: Kevin Buzzard <k.buzzard@imperial.ac.uk>
Date:   Fri Jan 19 08:34:47 2024 +0000

    fix: docstring for ZMod.castHom (#9840)
    
    The docstring for this declaration has diverged from reality.

[33mcommit ee6d8f500af3470e83cabb882da7ef847b8faf2f[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Fri Jan 19 01:51:13 2024 +0000

    feat(Analysis/NormedSpace/TrivSqZeroExt): The L1 norm  (#9492)
    
    The motivation here is to enable using `exp_add_of_commute` on dual numbers.
    
    
    [This Zulip thread](https://leanprover.zulipchat.com/#narrow/stream/116395-maths/topic/Exponentials.20in.20seminormed.20algebras/near/321981384) has some discussion about other possible norms.

[33mcommit b71c5f26d2d017eac8f6c3403db93603ce7dd95c[m
Author: Scott Morrison <scott@tqft.net>
Date:   Fri Jan 19 00:32:12 2024 +0000

    chore: bump Std to leanprover/std4#541 (#9828)
    
    Notable changes: lemmas were added in https://github.com/leanprover/std4/pull/538 about `gcd` and `lcm`, that now have implicit arguments. Mostly this is a positive change in Mathlib, we can just delete the arguments. The one to consider in review is in [`ModEq`](https://github.com/leanprover-community/mathlib4/pull/9828/files#diff-bf7908935cfca2e7d7959ec20d701fcda99586d0b7620b05b0a803988fdbd4fc).
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit d8b1dddbc5a6bbaef465befedc9ffdcc35e1a30f[m
Author: Christopher Hoskin <christopher.hoskin@gmail.com>
Date:   Thu Jan 18 18:38:07 2024 +0000

    feat(Algebra/Ring/CentroidHom): central iff mul op commute (#8663)
    
    Show that an element of a commutative semiring is central iff the corresponding multiplication operator commutes with all multiplication operators
    
    
    
    Co-authored-by: Jireh Loreaux <loreaujy@gmail.com>
    Co-authored-by: Christopher Hoskin <mans0954@users.noreply.github.com>
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 91ac6909550b0cebd46af240d333ade7662b0ba1[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Thu Jan 18 17:23:22 2024 +0000

    chore: Move order lemmas about `zpow` (#9805)
    
    These lemmas can be proved earlier.
    
    Part of #9411
    
    
    
    
    Co-authored-by: Parcly Taxel <reddeloostw@gmail.com>

[33mcommit 718042db9d6a9dfa5ba724b8b340000e798263f4[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Thu Jan 18 17:01:13 2024 +0000

    chore: update list of style exceptions (#9821)
    
    Created by manually running `./scripts/update-style-exceptions.sh`.

[33mcommit 6cdea122f7db0773434c5090c8f03fac7d7c0c69[m
Author: R√©my Degenne <Remydegenne@gmail.com>
Date:   Thu Jan 18 15:51:13 2024 +0000

    feat(MeasureTheory): define contents on semi-rings of sets (#9402)
    
    - Define additive contents and prove their basic properties on (semi)-rings of sets.
    - Define rings of sets.
    
    Co-authored-by: Peter Pfaffelhuber <p.p@stochastik.uni-freiburg.de>
    
    Part of the formalization of the Kolmogorov Extension Theorem.

[33mcommit 1bf390a02ffa86f0218d0f48459f76beaab5e96d[m
Author: R√©my Degenne <Remydegenne@gmail.com>
Date:   Thu Jan 18 15:15:28 2024 +0000

    feat(Probability): condKernel and condDistrib applied to singletons of non-zero measure (#9351)
    
    From the PFR project.

[33mcommit fbe3b9a30aca7d154f4cb9c1bbeb18ef7f616bc7[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Thu Jan 18 14:42:30 2024 +0000

    chore: update nolints.json (#9832)
    
    Created by running `lake exe runLinter --update Mathlib` locally.
    
    Most changes are due to leanprover/std4#269: proof fields in classes or structures do not require a docstring any more.

[33mcommit f6d7c0013dcd8e523e18cae64c7e1fd6f669a77d[m
Author: Riccardo Brasca <riccardo.brasca@gmail.com>
Date:   Thu Jan 18 14:42:29 2024 +0000

    Update install_debian.sh (#9784)
    
    See [zulip](https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/Installation.20on.20fresh.20Ubuntu) discussion.

[33mcommit a5e04cbac1854058754693e996c1ce90eef42d6f[m
Author: Marcus Rossel <marcusrossel@icloud.com>
Date:   Thu Jan 18 13:29:38 2024 +0000

    chore: remove redundant dsimp args (#9835)
    
    This is needed to work with leanprover/lean4#3087

[33mcommit 05dc88899b182f7f147e1435c71e26c5473f7525[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Thu Jan 18 13:29:37 2024 +0000

    feat(Cardinal): define conversion to/from `ENat` (#9792)

[33mcommit 6ca3ad69255ee819890e9afb284d87305bdfa1c1[m
Author: Anne Baanen <vierkantor@vierkantor.com>
Date:   Thu Jan 18 12:30:27 2024 +0000

    chore(Data/Polynomial): tiny proof cleanup (#9834)
    
    @kbuzzard spotted that this proof might be cleaned up with the improvements to `simp`. Sadly we can't quite go back to the pre-port simplicity. Is it still worth applying this bit of polish?

[33mcommit 07c91e915404ecff7be5e7c92a8fcf55dc5b411e[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Thu Jan 18 12:30:26 2024 +0000

    chore(Data/Real/ENNReal): move to Data/ENNReal/Basic (#9823)
    
    In preparation for splitting that file. Location suggested by @j-loreaux on [zulip](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Linter.20for.20large.20files.3F/near/416093669).

[33mcommit b105bcd505da3513ca5f32f6188e1cafd5224b81[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Thu Jan 18 12:30:25 2024 +0000

    feat(Topology/Support): add locallyFinite_mulSupport_iff (#9779)
    
    From sphere-eversion; I'm just upstreaming it.

[33mcommit c643a80279a88e81ee2767fa654bfc7829d0c033[m
Author: Kamila Szewczyk <27734421+kspalaiologos@users.noreply.github.com>
Date:   Thu Jan 18 12:30:24 2024 +0000

    Results regarding Fibonacci sequence and Golden Ratio (#9625)
    
    List of results so far:
    - `œÜ ^ (n + 2) - œÜ ^ (n + 1) = œÜ ^ n`
    - `2 > œÜ`
    - `fib (n + 1) - œÜ * fib n = œà ^ n`
    - `fib n + œÜ * fib (n + 1) = œÜ ^ n`
    
    [![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)
    
    
    Co-authored-by: Kamila Szewczyk <kspalaiologos@gmail.com>

[33mcommit 4c4c7294d4c53fd74c2afba198d4b576d067a8be[m
Author: Shad Amethyst <adrien.burgun@orange.fr>
Date:   Thu Jan 18 11:11:51 2024 +0000

    fix(Tactic/ToAdditive): move the documentation text of to_additive to the module docstring (#9826)
    
    Fixes the rendering of the documentation of the `@[to_additive]` annotation as rendered by `doc-gen4`, by copying the relevant documentation to the module description.
    This can easily be reverted once the issue in `doc-gen4` is fixed, or the original documentation by the attribute can be removed if this behavior is deemed intentional.
    
    As of writing this, the documentation for `to_additive` cannot be viewed on the online docs for mathlib4, and is only accessible through the `#help attr to_additive` command or by stumbling onto at the bottom of `to_additive`'s source file.

[33mcommit ff40d69222e800b3bbebb5cbe70d09e09d44667a[m
Author: Xavier Xarles <xavier.xarles@uab.cat>
Date:   Thu Jan 18 10:31:33 2024 +0000

    feat: Lemma on Monoid Localization and Consequences on Minimal Primes (#9640)
    
    
    
    Co-authored-by: Xavier Xarles <56635243+XavierXarles@users.noreply.github.com>
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>

[33mcommit 158d8524168c04e0c4d012ef449a6b58ee4a0096[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Thu Jan 18 09:44:04 2024 +0000

    feat: construct Haar measure in locally compact non-Hausdorff groups (#9746)
    
    The construction we have is given in T2 spaces, but it works in non-Hausdorff spaces modulo a few modifications.
    
    For this, we introduce an ad hoc class `T2OrLocallyCompactRegularSpace`, which is just enough to unify the arguments, as a replacement for the class `ClosableCompactSubsetOpenSpace` (which is not strong enough). In the file `Separation.lean`, we move some material that was only available on T2 spaces to this new class.
    
    The construction is needed for a forthcoming improvement of uniqueness results for Haar measures, based on https://mathoverflow.net/questions/456670/uniqueness-of-left-invariant-borel-probability-measure-on-compact-groups.

[33mcommit 1872765c710022558f777c459b612d06be9d6bc7[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Thu Jan 18 02:11:36 2024 +0000

    chore(MetricSpace/PseudoMetric): split out proper spaces (#9812)
    
    And move one lemma to a better place.
    
    Shaves off another 130 lines from a 2200 line file; #9815 continues with a more far-reaching split.
    
    
    
    Co-authored-by: grunweg <grunweg@posteo.de>

[33mcommit 9fb364254e578a1aa51559f51cba7854560f71c8[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Thu Jan 18 02:11:34 2024 +0000

    chore(Data/Set): move definitions to a new file (#9737)
    
    This and other similar PRs will help us reduce `import` dependencies
    and improve parallel compilation in the future.

[33mcommit 8c01465a9cc48f4095a8e2842216303c6546bb55[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Thu Jan 18 00:39:48 2024 +0000

    chore(*): reduce dependencies on `Mathlib.Tactic.*` (#9816)
    
    - Drop `import Mathlib.Tactic.Basic` in `Mathlib.Init.Logic` and `Mathlib.Logic.Basic`.
    - Fix compile, sometimes golf broken proofs instead of re-adding `import`s.

[33mcommit 1e74fcfff8d5ffe5a3a9881864cf10fa39f619e6[m
Author: Jz Pan <acme_pjz@hotmail.com>
Date:   Thu Jan 18 00:39:47 2024 +0000

    feat(Algebra/CharP/{Basic|ExpChar}): add `sum_pow_{char|expChar}_pow` (#9799)

[33mcommit 2a14ea01062f34008447611f6eab6e3f3fe72df1[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Thu Jan 18 00:39:46 2024 +0000

    chore(Order/Notation): move notation classes from other files (#9750)
    
    With this change (and future similar changes), we can avoid importing heavier files if we only need notation, not lemmas.

[33mcommit 8265674341932cff79f9aea2d8a91304addbf357[m
Author: Anne Baanen <vierkantor@vierkantor.com>
Date:   Wed Jan 17 23:23:55 2024 +0000

    chore(*): rename `FunLike` to `DFunLike` (#9785)
    
    This prepares for the introduction of a non-dependent synonym of FunLike, which helps a lot with keeping #8386 readable.
    
    This is entirely search-and-replace in [680197f](https://github.com/leanprover-community/mathlib4/pull/9785/commits/680197facd83904c603e7b8bc2eecbd9eeaf0787) combined with manual fixes in [4145626](https://github.com/leanprover-community/mathlib4/pull/9785/commits/414562627a8d287559068ff02cc811c262a1d6c8), [e900597](https://github.com/leanprover-community/mathlib4/pull/9785/commits/e900597f6895dd14d4a60dcf83b596965717c35d) and [b8428f8](https://github.com/leanprover-community/mathlib4/pull/9785/commits/b8428f88f3e07f9be6b673266af8b0795bb3427d). The commands that generated this change:
    ```bash
    sed -i 's/\bFunLike\b/DFunLike/g' {Archive,Counterexamples,Mathlib,test}/**/*.lean
    sed -i 's/\btoFunLike\b/toDFunLike/g' {Archive,Counterexamples,Mathlib,test}/**/*.lean
    sed -i 's/import Mathlib.Data.DFunLike/import Mathlib.Data.FunLike/g' {Archive,Counterexamples,Mathlib,test}/**/*.lean
    sed -i 's/\bHom_FunLike\b/Hom_DFunLike/g' {Archive,Counterexamples,Mathlib,test}/**/*.lean
    sed -i 's/\binstFunLike\b/instDFunLike/g' {Archive,Counterexamples,Mathlib,test}/**/*.lean
    sed -i 's/\bfunLike\b/instDFunLike/g' {Archive,Counterexamples,Mathlib,test}/**/*.lean
    sed -i 's/\btoo many metavariables to apply `fun_like.has_coe_to_fun`/too many metavariables to apply `DFunLike.hasCoeToFun`/g' {Archive,Counterexamples,Mathlib,test}/**/*.lean
    ```
    
    
    
    Co-authored-by: Anne Baanen <Vierkantor@users.noreply.github.com>

[33mcommit a94a9fd83bdcf75c7b5a5fa51285c997d58e9063[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Wed Jan 17 22:12:30 2024 +0000

    chore: tidy various files (#9728)

[33mcommit c8766486cfa4b3c890ff1388b7093672a02a6d53[m
Author: Winston Yin <winstonyin@gmail.com>
Date:   Wed Jan 17 20:26:14 2024 +0000

    feat: injective continuous linear map with closed range is a continuous linear equivalence (#9756)
    
    Added analogue of [LinearEquiv.ofInjective](https://leanprover-community.github.io/mathlib4_docs/Mathlib/LinearAlgebra/Basic.html#LinearEquiv.ofInjective) but for `ContinuousLinearEquiv` on Banach spaces.
    
    Added analogue of [LinearMap.rangeRestrict](https://leanprover-community.github.io/mathlib4_docs/Mathlib/LinearAlgebra/Basic.html#LinearMap.rangeRestrict) but for `ContinuousLinearMap`.
    
    Also I updated a docstring that had the old name of a theorem.
    
    
    
    Co-authored-by: Jireh Loreaux <loreaujy@gmail.com>

[33mcommit 1dfae4b262932b0e74ebd9f36214546e38543ba6[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Wed Jan 17 18:25:26 2024 +0000

    chore(Topology/Inseparable): re-use some variables (#9808)
    
    
    
    Co-authored-by: grunweg <grunweg@posteo.de>

[33mcommit 9c832bc4b73e31853dbfe8351424d2829b881b2c[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Wed Jan 17 17:22:39 2024 +0000

    feat(Analysis/NormedSpace/{ProdLp,PiLp}): add `BoundedSMul` instances (#9796)
    
    Also adds:
    * Lemmas linking the $L^\infty$ norm via `WithLp` to the standard one on products
    * A new `BoundedSMul.of_nnnorm_smul_le` which eliminates all the positivity juggling.
    
    In theory we could generalize even further to non-unital rings, but that would require more generalization of `WithLp`, and is trivial for someone to do later; the proofs here will still work.

[33mcommit 325678b1fd8a1f2fff684810411be9454ba1923d[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Wed Jan 17 17:22:38 2024 +0000

    feat(Algebra/InfiniteSum/Module): smul of two infinite sums (#9486)
    
    These proofs and statements are copied from the `mul` proofs.
    We can't prove the `mul` lemmas in terms of `smul` since `Module` doesn't work for non-associative rings.

[33mcommit ca796bf0db9636f8dc0903ec0657f4501b96eb7a[m
Author: Xavier Roblot <46200072+xroblot@users.noreply.github.com>
Date:   Wed Jan 17 16:24:46 2024 +0000

    feat: Add `Module.Free` and `Module.Finite` instances for ideals (#9804)
    
    Add also a `NoZeroSMulDivisors` instance.
    
    These instances, in particular, imply directly that integral ideals of number fields are free and finite $\mathbb{Z}$-modules.

[33mcommit 511519832ffde2efe73ab053a0ba598abbf12dcc[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Wed Jan 17 16:24:45 2024 +0000

    chore: last localEquiv -> partialEquiv renames in lemma names (#9620)

[33mcommit db84fa8e61f336b5055047617d6fc2697943c7d6[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Wed Jan 17 16:24:44 2024 +0000

    chore: correct hypothesis order in dot notation lemma (#9568)
    
    Following a [comment](https://github.com/leanprover-community/mathlib4/pull/8736#discussion_r1433085328) by @sgouezel, the hypothesis `IsOpen s` should be the first explicit argument.

[33mcommit 03a7bc56938c529ff6bc2f5ac85cb5832f3a8858[m
Author: Wrenna Robson <wren.robson@gmail.com>
Date:   Wed Jan 17 15:11:27 2024 +0000

    fix(Data/Fin/Basic): Change definition of `predAbove` to use `castPred` (#9791)
    
    `predAbove` and `castPred` are no longer directly related. This patch makes it so that they are, removing `castLT` from the definition of `predAbove` and thus making it more directly analogous to `succAbove`.

[33mcommit 2366dbdf447507f00ce89cbef0da0892f5b48def[m
Author: David Loeffler <d.loeffler.01@cantab.net>
Date:   Wed Jan 17 14:32:39 2024 +0000

    feat(NumberTheory/ModularForms): two-variable Jacobi theta (#9666)
    
    Add a more general version of the Jacobi theta function with a second variable, and prove the transformation law for this more general function rather than just for the one-variable version. Preparatory to functional equations for Dirichlet L-functions.

[33mcommit 9c865c10d6424c4da173b41e2340c417fbdb9fa6[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Wed Jan 17 13:26:49 2024 +0000

    chore(Order/ConditionallyCompleteLattice/Finset): merge duplicate lemmas (#9807)
    
    
    
    Co-authored-by: Ya√´l Dillies <yael.dillies@gmail.com>

[33mcommit 7f5d26d3b65104c7ec04cb46bfa6a266c3ed6ffd[m
Author: Xavier Roblot <46200072+xroblot@users.noreply.github.com>
Date:   Wed Jan 17 13:26:48 2024 +0000

    feat: Generalize absNorm to fractional ideals (#9613)
    
    This PR defines the absolute ideal norm of a fractional ideal `I : FractionalIdeal R‚Å∞ K` where
    `K` is a fraction field of `R` as a zero-preserving group homomorphism with values in `‚Ñö` and proves that it generalises the norm on (integral) ideals  (and some other classical result).
    
    Also in this PR:
    - Add the directory `Mathlib/RingTheory/FractionalIdeal` and move the file `Mathlib/RingTheory/FractionalIdeal.lean` to `Mathlib/RingTheory/FractionalIdeal/Basic.lean`. The new results are in `Mathlib/RingTheory/FractionalIdeal/Norm.lean`
    - Define the `numerator` and `denominator` of a fractional ideal. These are used to define the norm. Also define a linear equiv between a fractional ideal and its `numerator`.
    - Several technical lemmas.

[33mcommit 45df82382d012152851f8268af0107391a358f8c[m
Author: Scott Morrison <scott@tqft.net>
Date:   Wed Jan 17 12:06:26 2024 +0000

    chore: refactor of Algebra/Group/Defs to reduce imports (#9606)
    
    We are not that far from the point that `Algebra/Group/Defs` depends on nothing significant besides `simps` and `to_additive`.
    
    This removes from `Mathlib.Algebra.Group.Defs` the dependencies on
    * `Mathlib.Tactic.Basic` (which is a grab-bag of random stuff)
    * `Mathlib.Init.Algebra.Classes` (which is ancient and half-baked)
    * `Mathlib.Logic.Function.Basic` (not particularly important, but it is barely used in this file)
    
    The goal is to avoid all unnecessary imports to set up the *definitions* of basic algebraic structures.
    
    We also separate out `Mathlib.Tactic.TypeStar` and `Mathlib.Tactic.Lemma` as prerequisites to `Mathlib.Tactic.Basic`, but which can be imported separately when the rest of `Mathlib.Tactic.Basic` is not needed.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>
    Co-authored-by: Ya√´l Dillies <yael.dillies@gmail.com>

[33mcommit b075cdd0e6ad8b5a3295e7484b2ae59e9b2ec2a7[m
Author: Wrenna Robson <wren.robson@gmail.com>
Date:   Wed Jan 17 06:36:36 2024 +0000

    fix(Data/Fin/Basic): Redefine `succAbove` (#9793)
    
    Tweak to `succAbove` to make its definition consistent with that of `predAbove`

[33mcommit 5919dba24c09b979b9905b6e9aef9087221bbb65[m
Author: Scott Morrison <scott@tqft.net>
Date:   Wed Jan 17 01:03:38 2024 +0000

    chore: bump Std to leanprover/std4#421 (#9798)
    
    This brings the new implementation of `library_search` to Mathlib. It is temporarily called `std_exact?` and `std_apply?`, but if it tests okay in Mathlib we will remove the old implementation.
    
    There is some change in the ordering of results, so please report on your experiences!
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit a316e2b352f84e46f07f318d51397264a29a5018[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Jan 16 23:32:27 2024 +0000

    chore(ENat/Basic): review (#9787)
    
    - Add `ENat.mul_top` and `ENat.top_mul`.
    - Remove some newlines.
    - Rename assumptions in `ENat.recTopCoe`.

[33mcommit e38a8499bd86695bd60e056a7068aecbaac62229[m
Author: Anatole Dedecker <anatolededecker@gmail.com>
Date:   Tue Jan 16 23:32:26 2024 +0000

    feat: add `isStarNormal_neg` (#9748)
    
    Also rename `isStarNormal_star_self` to `isStarNormal_star`.

[33mcommit a2275298761e6d8aac46f80b90c84999b4a8ea72[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Jan 16 22:20:19 2024 +0000

    chore(Finset/Image): fix a `@[deprecated]` tag (#9789)
    
    Since `Finset.Nonempty.image_iff` and `Finset.nonempty_image`
    have different explicitness/implicitness of arguments,
    `@[deprecated]` doesn't suggest using `Finset.image_nonempty`
    without a hint.

[33mcommit edbea74c51a9fda4877096bdf37f5d499d8e4828[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Jan 16 22:20:18 2024 +0000

    chore(GaloisConnection): golf using `dual` (#9786)

[33mcommit d602bc2714c982034e57b10467a5fb28eaeb3abb[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Tue Jan 16 22:20:17 2024 +0000

    refactor(ContMDiff/Basic): multiplicativise, generalise and golf contMDiff_of_support and friends (#9764)
    
    - multiplicativise `contMDiff_of_support`, `contMDiffWithinAt_of_not_mem` and `contMDiffAt_of_not_mem` and use to_additive
    - golf `extend_one` with the multiplicative version
    - generalise these lemmas to manifolds with zero/one
    - slight clean-up: remove unused variables and `open`s
    - slight drive-by golfing of one proof
    - deprecate `eventuallyEq_zero_nhds` in favor of `not_mem_tsupport_iff_eventuallyEq`
    
    Addresses the post-merge review comments in #9669.
    
    
    
    
    Co-authored-by: ADedecker <anatolededecker@gmail.com>
    Co-authored-by: grunweg <grunweg@posteo.de>

[33mcommit 8bb0d697d2e07934b13f16c17c8ec92032d9e352[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Jan 16 22:20:16 2024 +0000

    refactor: redefine `Absorbs` (#9676)
    
    Redefine `Absorbs` and `Absorbent` in terms of the `cobounded` filter.

[33mcommit ef9852fc942cc8a5812ad62d4ff0006db96b1754[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Jan 16 21:01:34 2024 +0000

    feat(Function/Conjugate): add `Semiconj.inverse_left` (#9724)
    
    * Add `Function.semiconj_iff_comp_eq`
      and `Function.Semiconj.inverse_left`.
    * Swap arguments of `Function.Semiconj.comp_left`.
      The old version is available as `Function.Semiconj.trans`.
    * Add docstrings.

[33mcommit 0bd32e0c19f9f188aea80fd3035f2d5b09c5c21b[m
Author: Oliver Nash <github@olivernash.org>
Date:   Tue Jan 16 21:01:33 2024 +0000

    feat: basic theory connecting `R[X]`-submodules and invariant `R`-submodules (#9721)

[33mcommit 551d3697a62d528c062c4c74817cd0ba13dafe19[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Tue Jan 16 21:01:31 2024 +0000

    feat: subset of a charted space is open iff each image in charts is (#9672)
    
    From sphere-eversion; I just cleaned it up slightly and submitted it.
    
    
    
    Co-authored-by: Yury G. Kudryashov <urkud@urkud.name>

[33mcommit 8050708e24c24a4c0285ad2c5c416862b75d4b62[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Tue Jan 16 21:01:30 2024 +0000

    refactor(Geometry/Manifold/MFDeriv): split file (#9565)
    
    With about 2200 lines, this is the largest file in Geometry/Manifolds.

[33mcommit fc4c73bbfa846d2796cff15a4ada3e8aadd47cb0[m
Author: smorel394 <smorel@math.princeton.edu>
Date:   Tue Jan 16 21:01:29 2024 +0000

    feat(LinearAlgebra/Multilinear/Basic): derivative of a multilinear map (#9130)
    
    - Define the derivative `f.linearDeriv` of a multilinear map `f` at `x`, i.e. the first-order term of `f(x+h)-f(x+h')`.
    - Define `MultilinearMap.domDomRestrict`: given a multilinear map indexed by a type `Œπ`, a function `P: Œπ ‚Üí Prop` and a vector `z` define on `{a // ¬¨ P a}`, this is the multilinear map indexed by `{a // P a}`  sending `x` to the value of `f` at the vector that has coordinate at `a : Œπ` equal to `x a` if `P a` and `z a` if ` ¬¨ P a`.
    
    - [x] depends on: #9137
    
    
    
    Co-authored-by: smorel394 <67864981+smorel394@users.noreply.github.com>
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>

[33mcommit 34368d1e74fb5f8cc49f28900d93f1ecb7d6f55f[m
Author: Wrenna Robson <wren.robson@gmail.com>
Date:   Tue Jan 16 19:40:25 2024 +0000

    fix(Data/Fin/Basic): `castPred` consistency redefinition. (#9780)
    
    This PR redefines castPred to be more consistent with the definition of both `pred` and `castSucc`, so that the relationship between `castSucc` and `castPred` and `succ` and `pred` becomes exactly analogous.
    
    It also adds some supplementary and analogous lemmas designed to facilitate this.
    
    As `castPred` is no longer dependent on `predAbove`, its definition is moved to a more appropriate place.

[33mcommit e8248a264430e0587c211c7434df2d90df901589[m
Author: R√©my Degenne <Remydegenne@gmail.com>
Date:   Tue Jan 16 19:40:24 2024 +0000

    feat(Probability): simple kernel lemmas (#9350)
    
    - Lemmas about compositions and products of kernels.
    - New definition: `prodMkRight`, similar to `prodMkLeft`: takes `Œ∫ : kernel Œ± Œ≤` and turn it into a `kernel (Œ± √ó Œ≥) Œ≤`.
    
    From the PFR project.
    
    
    
    Co-authored-by: R√©my Degenne <remydegenne@gmail.com>

[33mcommit 18eeff5e177341cf18c792a07c8d85173ea06f12[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Tue Jan 16 16:52:17 2024 +0000

    refactor: Clean up `posPart` (#9740)
    
    This changes the typeclass notation approach with plain functions.
    
    Followup to #9553. Part of #9411

[33mcommit 1564a32718d559bfad2ed73472fb0506d84c92a6[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Tue Jan 16 16:52:16 2024 +0000

    chore: Move `zpow` lemmas (#9720)
    
    These lemmas can be proved much earlier with little to no change to their proofs.
    
    Part of #9411

[33mcommit df0c38b767454ad3b7802786d25b9ef2afb7e43b[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Tue Jan 16 16:52:15 2024 +0000

    feat: Intersection of convex hulls is convex hull of intersection (#9203)
    
    when everything is affine independent. Also a related affine span lemma.
    
    From LeanCamCombi

[33mcommit c705f360d6b9cbe08353d22db61d78cd4503cfc5[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Jan 16 15:36:16 2024 +0000

    feat(Filter/Basic): add `Filter.comap_injective` (#9774)

[33mcommit 4c74b90c69cd5b9c6a98e7c85eaa63e114bcffb8[m
Author: Oliver Nash <github@olivernash.org>
Date:   Tue Jan 16 15:36:15 2024 +0000

    feat: define complete sublattices (#9763)

[33mcommit fce2e43c863a9ca4f6b2cc7d63b25e58d2096190[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Tue Jan 16 15:36:14 2024 +0000

    feat: lemmas about partitions of unity (#9635)
    
    - add `finsupport`: the support (the set of indices which functions are non-vanishing) at a point, as a `Finset`
    - every point has a neighbourhood on which only finitely many functions are non-vanishing
    
    From sphere-eversion; I'm just upstreaming results.

[33mcommit b443a939e52cf8ebc3d5c0d3c72dc1aa47f473df[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Jan 16 15:36:13 2024 +0000

    chore(TFAE): migrate to `getLastD`, reduce imports (#9628)
    
    Since `getLastD_mem_cons` is in `Std`, we no longer have to import `Data.List.Basic`.

[33mcommit 7f8c3e3152c07687517240fcd031c6bd54a078e4[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Tue Jan 16 15:36:11 2024 +0000

    refactor: extract and name the pregroupoid underlying contDiffGroupoid (#9091)
    
    This will be used for proving the inverse function theorem on manifolds.
    
    
    
    Co-authored-by: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
    Co-authored-by: grunweg <grunweg@posteo.de>

[33mcommit e72937a78c85e2f4335925d63482279f748edd35[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Jan 16 15:36:10 2024 +0000

    refactor(MonoidAlgebra/Support): reformulate `support_mul` (#8953)
    
    Use pointwise multiplication/addition of `Finset`s in `MonoidAlgebra.support_mul` and `AddMonoidAlgebra.support_mul`.

[33mcommit 9ba983638014a3d0fb6a189b56cd88601583fc11[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Tue Jan 16 14:21:30 2024 +0000

    chore(Topology/Support): group related lemmas using a section (#9777)
    
    Only add a section; no lemmas are changed.
    Open the `HasCompactSupport` namespace more, while we're at it.

[33mcommit dbe300c78c7299f17a90b26bc4e4ef30aa7e3828[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Tue Jan 16 14:21:28 2024 +0000

    doc(Geometry/Manifold/LieGroup): extend and clean up docstrings (#9766)
    
    - tweak section names; add comments explaining what's in them
    - add two lemma docstrings
    - revamp the module docstring to mention all results
    - in the module docstring, separate main definitions and results

[33mcommit 9cf9e375ad53a0f8cf9b191fec81b02f99be6afb[m
Author: Jeremy Tan Jie Rui <reddeloostw@gmail.com>
Date:   Tue Jan 16 14:21:27 2024 +0000

    chore: delete `DecidableEq` instance in `Algebra.FreeMonoid.Basic` (#9741)

[33mcommit 31fc66d72e3da3491ca557d35e41735521e370e2[m
Author: Hunter Monroe <github.com@huntermonroe.com>
Date:   Tue Jan 16 14:21:26 2024 +0000

    doc: eval is a universal partial recursive function (#9703)

[33mcommit 51956bca177907708f72667edc81ba3937e6ab15[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Tue Jan 16 14:21:25 2024 +0000

    chore(Analysis,Geometry): remove almost all autoImplicit (#9691)
    
    After this PR, no file in `Geometry` uses autoImplicit, and in `Analysis` it's scoped to six declarations.

[33mcommit b52b6c43359f806b4d6b6b03614067b220030a44[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Tue Jan 16 14:21:24 2024 +0000

    feat: lemmas about NhdsSet (#9674)
    
    From sphere-eversion; I'm just submitting these.
    Thanks to @urkud for some review suggestions.

[33mcommit f63556321c5fd8fe5a1931a0da6724c13d0df9d9[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Tue Jan 16 13:08:51 2024 +0000

    chore: Move `Int.pow_right_injective` (#9739)
    
    This allows more files to not depend on `Algebra.GroupPower.Lemmas`, which will soon stop existing.
    
    Part of #9411

[33mcommit 92f863e4868952d6eed58730a009883b7c850fcf[m
Author: JADekker <114015169+JADekker@users.noreply.github.com>
Date:   Tue Jan 16 12:23:14 2024 +0000

    Feat : Add geometric distribution (#9561)
    
    Adds the geometric probability distribution

[33mcommit bc6f44c30d0afe84d51c48677c42d7d61e79da01[m
Author: JADekker <114015169+JADekker@users.noreply.github.com>
Date:   Tue Jan 16 10:45:05 2024 +0000

    chore : fix camelcase naming of PDF, CDF and PMF (#9681)
    
    Replaces occurences of Pdf, Cdf and Pmf within camelCase situations by PDF, CDF and PMF respectively.

[33mcommit be8dd3124f6a5f6d59bd45dae6afc5f35d9d7419[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Jan 16 09:52:10 2024 +0000

    feat(Topology/Basic): generalize to Sort*, add versions (#9753)
    
    - Generalize `interior_iInter_of_finite` and `closure_iUnion_of_finite`
      to functions from `Sort*`.
    - Add `Set.Finite.interior_biInter`, `Set.Finite.interior_sInter`,
      `Set.Finite.closure_biUnion`, and `Set.Finite.closure_sUnion`.
    - Move `closure_eq_compl_interior_compl` up to golf.

[33mcommit b4cd3132fe069277f225fde5e0a5ecba95b9a57f[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Tue Jan 16 07:51:19 2024 +0000

    feat(MeasureTheory/Function/StronglyMeasurable): pow lemmas (#9489)
    
    This also adds some missing `to_additive`s for `vadd`.

[33mcommit d5ec07c1be87d0002d0b77456443686f35a44fc7[m
Author: Christopher Hoskin <christopher.hoskin@gmail.com>
Date:   Tue Jan 16 07:51:18 2024 +0000

    refactor(LinearAlgebra/SesquilinearForm): Sesquilinear Maps (#9312)
    
    Some of the concepts in `LinearAlgebra/SesquilinearForm` can be generalised from Sesquilinear Forms to Sesquilinear Maps with little or no impact on the rest of Mathlib. This PR makes those generalisations.
    
    Further generalisations are likely possible, but the scope of this PR is to only consider changes which do not require non-trivial modifications to other parts of Mathlib, or other sections in `SesquilinearForm.lean`. Further changes can be considered in subsequent PRs if desired.
    
    
    
    Co-authored-by: Christopher Hoskin <mans0954@users.noreply.github.com>

[33mcommit 25e096f22cdeb3a31783a1a65fece51857b301dd[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Jan 16 07:13:58 2024 +0000

    feat(MeasureTheory): generalize some theorem to `Sort*` (#9769)
    
    Generalize some theorems from `{Œ≤ : Type*} [Countable Œ≤] (f : Œ≤ ‚Üí Œ±)`
    to `{Œπ : Sort*} [Countable Œπ] (f : Œπ ‚Üí Œ±)`.
    This way they automatically work for `f : (p : Prop) ‚Üí Œ±`.
    
    * Generalize `MeasureTheory.OuterMeasure.iUnion_null`,
      `MeasureTheory.OuterMeasure.iUnion_null_iff`,
      `MeasureTheory.measure_iUnion_null`, and
      `MeasureTheory.measure_iUnion_null_iff`.
    * Deprecate `MeasureTheory.OuterMeasure.iUnion_null_iff'`
      and `MeasureTheory.measure_iUnion_null_iff'`.
    * Generalize `MeasureTheory.exists_measurable_superset_forall_eq`
      and `MeasureTheory.exists_measure_pos_of_not_measure_iUnion_null`.
    * Reorder implicit arguments in some theorems (move `Œπ` around).

[33mcommit 3b8ce03833f347d5fea370a35c9af36c41b736b9[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Tue Jan 16 06:00:45 2024 +0000

    feat: instances of `NonUnital(Semi)NormedCommRing` (#8665)
    
    adds instances for the new `NonUnital(Semi)NormedCommRing` classes, and also adds some missing instances to `Analysis.Normed.Field.Basic`.
    
    This gives us our first example of an actually non-unital *commutative* C‚ãÜ-algebra: `C‚ÇÄ(X, ‚ÑÇ)` where `X` is a locally compact, noncompact Hausdorff space.
    
    - [x] depends on: #8664

[33mcommit 30030d812739262fa821bf91010ecfe37c95ae46[m
Author: Scott Morrison <scott@tqft.net>
Date:   Tue Jan 16 04:46:42 2024 +0000

    chore: use omega in decreasing_by proofs (#9688)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 0b93433843b5b3296236d682e4702f5f94a9a854[m
Author: Junyan Xu <junyanxumath@gmail.com>
Date:   Tue Jan 16 04:25:51 2024 +0000

    chore(Fintype/Order): generalize Fintype to Finite in Directed lemmas (#9754)
    
    
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>
    Co-authored-by: Jeremy Tan Jie Rui <reddeloostw@gmail.com>

[33mcommit 87c10369c9f8dce2e7f74980a2ecee1bcc32cc35[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Jan 16 02:11:36 2024 +0000

    chore(Function): rename some lemmas (#9738)
    
    - Merge `Function.left_id` and `Function.comp.left_id` into `Function.id_comp`.
    - Merge `Function.right_id` and `Function.comp.right_id` into `Function.comp_id`.
    - Merge `Function.comp_const_right` and `Function.comp_const` into `Function.comp_const`, use explicit arguments.
    - Move `Function.const_comp` to `Mathlib.Init.Function`, use explicit arguments.

[33mcommit d3bb4291c84748d75d0c5dc7a12a7894414b31e2[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Tue Jan 16 02:11:35 2024 +0000

    chore(CategoryTheory/Sites): universe polymorphic `EqualizerCondition` (#9729)
    
    Removes unnecessarily restrictive explicit universes

[33mcommit b47d330000a2219ec9e88c6c8fc2f879c50e42d9[m
Author: Anatole Dedecker <anatolededecker@gmail.com>
Date:   Tue Jan 16 00:56:23 2024 +0000

    chore: replace SubgroupClass.inv by InvMemClass.inv (#9761)

[33mcommit 4d0b7501a1018c63af022267f8545572cd00f182[m
Author: Joachim Breitner <mail@joachim-breitner.de>
Date:   Tue Jan 16 00:56:22 2024 +0000

    chore: add `importGraph` to cache‚Äôs getPackageDirs (#9760)
    
    fixes
    https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Imports.20are.20out.20of.20date.20even.20after.20getting.20cache.2E/near/412772807
    and https://github.com/nomeata/loogle/issues/12

[33mcommit 6f112760084d295123ac333b14b6c4fb2ca7ceb9[m
Author: Anatole Dedecker <anatolededecker@gmail.com>
Date:   Tue Jan 16 00:56:21 2024 +0000

    feat: minimize requirements for inv/neg on C(X, Y) (#9758)

[33mcommit 8be6a42ecdb050ee803922bc6a548651a204e2bb[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Jan 15 23:25:59 2024 +0000

    chore(Init/Function): deprecate 3 definitions (#9735)
    
    Deprecate `Function.compLeft`, `Function.compRight`,
    and `Function.combine`.
    
    None of them are used anywhere in Mathlib,
    and for the first two it's easier to use `(¬∑ ‚àò f)` or `(f ‚àò ¬∑)`.
    
    Also move notation ` on ` closer to the definition of `Function.onFun`.

[33mcommit 137ab0bb0587c10c672a3f4d5c163b3089e6be41[m
Author: Oliver Nash <github@olivernash.org>
Date:   Mon Jan 15 21:28:01 2024 +0000

    chore: gather results about `Submodule.restrictScalars` into new file (#9765)
    
    This is a straight copy-paste: there are no new lemmas and nothing has been removed or renamed. The only changes are a few lemmas where argument explicitness or ordering has changed (and where it did not seem to make sense to replicate the old argument explicitness or ordering).

[33mcommit 9007a3c47fec0e40dc297e0921976da0c5614824[m
Author: Anatole Dedecker <anatolededecker@gmail.com>
Date:   Mon Jan 15 20:25:32 2024 +0000

    feat: add StarMemClass.coe_star (#9762)

[33mcommit 6e66ddcd63a00f360242481ab027c750259f4d37[m
Author: Jz Pan <acme_pjz@hotmail.com>
Date:   Mon Jan 15 19:14:07 2024 +0000

    feat: add `equivMap[OfInjective]` for subalgebra and intermediate field (#9709)
    
    ... parallel to `Subring.equivMapOfInjective`, `Subsemiring.equivMapOfInjective`, etc. etc.

[33mcommit 42d8e66e0aa34ea0927e6b725472d46800b288b3[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Mon Jan 15 18:48:36 2024 +0000

    chore: move Geometry/Manifold/MFDeriv (#9588)
    
    To preserve most git history when splitting the file in #9565.

[33mcommit 8bb342a7b87648fbdbedf3b1db8185157eaf2256[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Mon Jan 15 17:35:39 2024 +0000

    chore(Data/Set/Lattice): use named arguments more. (#9759)
    
    It's nicer to read than writing `@foo _ _ _`.

[33mcommit b1ff86db2bb11697c61df2ec2f8a04a3f0bfffd6[m
Author: Patrick Massot <patrickmassot@free.fr>
Date:   Mon Jan 15 16:44:02 2024 +0000

    feat: three tiny homeomorph lemmas (#9166)

[33mcommit d8dff07dc1a5cff83e2292820d73e70e1d152907[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Mon Jan 15 16:06:25 2024 +0000

    feat(AlgebraicTopology): generalize universes for the standard simplex (#9631)
    
    The PR generalizes universes for `standardSimplex`, which is now a functor `SimplexCategory ‚•§ SSet.{u}` for any universe `u`.

[33mcommit 18cc8db14e14f848ed380fef7030bd3fcd752776[m
Author: Martin Dvo≈ô√°k <martin.dvorak@matfyz.cz>
Date:   Mon Jan 15 14:51:48 2024 +0000

    `Matrix.dotProduct` inequalities (#9652)

[33mcommit 5964134838f12fb0ea6fde72764f6d985c312842[m
Author: Kyle Miller <kmill31415@gmail.com>
Date:   Mon Jan 15 11:29:49 2024 +0000

    refactor: make `SimpleGraph.chromaticNumber` be `ENat`-valued (#8883)
    
    This removes an awkwardness of the API, where theorems had to include colorability hypotheses. This trades that awkwardness for a smaller one, which is that one writes `G.Colorable (ENat.toNat G.chromaticNumber)` rather than `G.Colorable G.chromaticNumber`.
    
    It would be good to have a followup refactoring PR to more carefully evaluate the API after this change.

[33mcommit 5bd823a80661304b8e52333e4ce119dbeb3c00f4[m
Author: Newell Jensen <newell.jensen@gmail.com>
Date:   Mon Jan 15 09:55:31 2024 +0000

    feat: Group presentations of isomorphic types are isomorphic. (#9403)
    
    
    
    Co-authored-by: Newell Jensen <newell@users.noreply.github.com>

[33mcommit 5623d9278742ae9b27a441d7586279480b280333[m
Author: Mario Carneiro <mcarneir@andrew.cmu.edu>
Date:   Mon Jan 15 08:55:13 2024 +0000

    fix: check stderr again in cache (#9752)
    
    This reverts #9434, which itself was a revert of #9419. We use `--no-progress-meter` to avoid the issue with progress bars causing a failure, but we still want to see error reports. The failure message is also made clearer to avoid the `uncaught exception:` issue showing up in [recent builds](https://github.com/leanprover-community/mathlib4/actions/runs/7524334618/job/20478989708#step:17:4161).
    
    
    
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>

[33mcommit 1d3b4790261b440e9fdcb04f52c39143d0992f45[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Jan 15 00:29:26 2024 +0000

    fix: shake the import tree (#9749)
    
    cherry-picked from #9347
    
    Co-Authored-By: @digama0

[33mcommit e3495242ce95696d2aa837e7cf75b4e7629c8645[m
Author: Mario Carneiro <mcarneir@andrew.cmu.edu>
Date:   Mon Jan 15 00:29:25 2024 +0000

    feat: add `lake exe shake` tree shaking tool (#9346)
    
    This adds the `lake exe shake` command, which will check that every import is used in some constant. This has some known false positives because dependencies on notations and tactics are not tracked, so the `noshake.json` file is used to indicate that a file should always be treated as used, or that specific imports in specific files are treated as used.
    
    
    
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>
    Co-authored-by: Yury G. Kudryashov <urkud@urkud.name>
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 3b81a542da60bafaae06756ff194ad50e9c83921[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Sun Jan 14 18:19:42 2024 +0000

    chore: cleanup spaces (#9745)

[33mcommit 6dd549bf6890a4193b64e98dd722ae06b27c974d[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sun Jan 14 18:19:41 2024 +0000

    feat: action on `UniformOnFun` is uniformly continuous (#9714)
    
    - add `UniformInducing.uniformContinuousConstSMul`
      and its additive version;
    - use it to prove that the pointwise actions
      on `Œ± ‚Üí·µ§ X` and `Œ± ‚Üí·µ§[ùîñ] X` are uniformly continuous;
    - use the latter facts to prove that the pointwise action
      on `E ‚ÜíSL[œÉ] F` is uniformly continuous;
    - make `M` explicit in `ContinuousLinearMap.strongTopology.continuousConstSMul`,
      drop unneeded arguments.

[33mcommit a2fd24f606bb20f394b1ff212237e5c4475c75ca[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sun Jan 14 17:10:35 2024 +0000

    feat(Finset/{NAry,Pointwise}): add lemmas about `Finset.sup` etc (#8950)

[33mcommit f03d0736c088367ddd9d06366b6a03a4d2662cdc[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Sun Jan 14 16:43:05 2024 +0000

    chore: Delete `noncomm_ring` syntax stub (#9743)
    
    This was accidentally left behind when `noncomm_ring` was implemented.

[33mcommit 716dfd4a2c7911ccc291afefc97a3567f1baefed[m
Author: Alex Meiburg <alex.meiburg@gmail.com>
Date:   Sun Jan 14 15:42:35 2024 +0000

    feat: Lemmas relating `Polynomial.eraseLead` and `nextCoeff`. (#9083)
    
    Some little theorems relating `eraseLead` and `nextCoeff` to each other. Also includes `monomial_sub` and `card_support_mul` which could be of independent interest.
    
    
    
    Co-authored-by: Alex Meiburg <timeroot.alex@gmail.com>
    Co-authored-by: Ya√´l Dillies <yael.dillies@gmail.com>

[33mcommit 241edd498be916e377e839d840ebee6ef3c706b0[m
Author: Scott Morrison <scott@tqft.net>
Date:   Sun Jan 14 13:30:51 2024 +0000

    chore: reduce heartbeats variation in FilteredColimitCommutesFiniteLimit (#9732)
    
    Per discussion at [zulip](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/noisy.20.60FilteredColimitCommutesFiniteLimit.60/near/412771369). This proof has been showing up spuriously in benchmark results.
    
    This change reduces the heartbeats variance from around 25% to around 5%.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 21a234302395ac447c56181d7580140e0c42f132[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Sun Jan 14 13:30:50 2024 +0000

    fix(Condensed): remove unnecessary `Precoherent` assumption (#9730)

[33mcommit 7bffe36b864e61561f2ac8b9be33057c06e6ccb0[m
Author: Christian Merten <christian@merten.dev>
Date:   Sun Jan 14 13:30:49 2024 +0000

    feat(CategoryTheory/SingleObj): construct equivalence of `SingleObj` categories from a monoid isomorphism (#9699)
    
    Construct `SingleObj M ‚âå SingleObj N` from `M ‚âÉ* N`.

[33mcommit 65ced9a7ddc5994f9e4d26e911aef14a9c465c3d[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Sun Jan 14 12:14:34 2024 +0000

    feat: isUnit_iff_eq_one (#9706)
    
    From flt-regular.
    
    Also move the related `units_eq_one` nearby.

[33mcommit 350879f78bdda0673c10fb75895e4492b226b3d2[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sun Jan 14 05:39:16 2024 +0000

    feat: add `Inducing.continuousSMul` (#9713)
    
    - add `Inducing.continuousSMul` and `Inducing.continuousVAdd`;
    - use it to golf `Units.continuousSMul` and `Inducing.continuousMul`;
    - generalize `Submonoid.continuousSMul` from a submonoid of a group
      to a submonoid of a monoid;
    - reuse `Submonoid.continuousSMul` in `Subgroup.continuousSMul`.

[33mcommit b12f3dad120dd703b358e20f29590072dd06fa52[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sun Jan 14 01:19:45 2024 +0000

    chore(LocallyConvex/Bounded): rename a lemma (#9712)
    
    Rename `Filter.HasBasis.isVonNBounded_basis_iff`
    to `Filter.HasBasis.isVonNBounded_iff`.
    It already has `basis` in the namespace.

[33mcommit b40e996ad3ae8dbca14c37e0cd2b11cadabb20ae[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sun Jan 14 01:19:44 2024 +0000

    chore(CompactOpen): move 2 sets to `variable`s (#9678)
    
    Also fix name in the module docs.

[33mcommit d73146f548bed3aa234a9e2d4c9df17b885a461b[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sun Jan 14 00:16:30 2024 +0000

    fix(Subsemigroup/Operations): fix types (#9716)
    
    Fix theorem statements of `AddSubsemigroup.toSubsemigroup'_closure`
    and `Subsemigroup.toAddSubsemigroup'_closure`.

[33mcommit ebe630dbd151c1c031b225fdc8c660bee66af462[m
Author: Fr√©d√©ric Dupuis <dupuisf@iro.umontreal.ca>
Date:   Sat Jan 13 22:34:11 2024 +0000

    feat: add basic API lemmas for `BddAbove (range f)` and `BddBelow (range f)` (#9472)
    
    This PR adds some basic API lemmas for `BddAbove (range f)` (resp `BddBelow`). This is a ubiquitous side condition when working with `iInf`/`iSup` in conditionally complete lattices, so I think it's worth having.
    
    
    
    Co-authored-by: Fr√©d√©ric Dupuis <31101893+dupuisf@users.noreply.github.com>

[33mcommit ba19db4d0648d7b18a930cb146fd152e2279108e[m
Author: Jeremy Tan Jie Rui <reddeloostw@gmail.com>
Date:   Sat Jan 13 20:57:15 2024 +0000

    feat: local graph operations (#9267)

[33mcommit 152f2d2e680dc5f7ea4e1170caf2b41fe2efd213[m
Author: Anatole Dedecker <anatolededecker@gmail.com>
Date:   Sat Jan 13 16:56:24 2024 +0000

    feat(Order.Bounds): add prod versions of some pi lemmas (#9690)

[33mcommit 671cf1ee41404f31576cdf71104a76d3707e76a3[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sat Jan 13 16:19:16 2024 +0000

    fix(VitaliFamily): fix field names (#9723)
    
    Rename `VitaliFamily.MeasurableSet'` ‚Üí `VitaliFamily.measurableSet`
    and `VitaliFamily.Nontrivial` ‚Üí `VitaliFamily.nontrivial`.
    
    Also add docstrings.

[33mcommit 82e1d3a92162590b022a31450354f6f33d9d6288[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Sat Jan 13 15:06:34 2024 +0000

    feat(CategoryTheory): sheafification over essentially small sites (#9523)
    
    This PR provides the necessary API to sheafify over large but essentially small categories.
    
    - Given an equivalence of categories and a Grothendieck topology on one of them, we transport the topology along the equivalence and prove that the sheaf categories are equivalent.
    - We prove that the property `HasSheafify`¬†transports over the equivalence of sheaf categories mentioned above, and same for the property `HasSheafCompose`¬†
    - We also add instances for the existence of small limits on sheaf categories on essentially small sites.
    
    
    - [x] depends on: #9012

[33mcommit cc7c881ae6e0d65a366d58016d7b253d43996c99[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Sat Jan 13 13:48:35 2024 +0000

    refactor: Multiplicativise `abs` (#9553)
    
    The current design for `abs` is flawed:
    * The `Abs` notation typeclass has exactly two instances: one for `[Neg Œ±] [Sup Œ±]`, one for `[Inv Œ±] [Sup Œ±]`. This means that:
      * We can't write a meaningful hover for `Abs.abs`
      * Fields have two `Abs` instances!
    * We have the multiplicative definition but:
      * All the lemmas in `Algebra.Order.Group.Abs` are about the additive version.
      * The only lemmas about the multiplicative version are in `Algebra.Order.Group.PosPart`, and they get additivised to duplicates of the lemmas in `Algebra.Order.Group.Abs`!
    
    This PR changes the notation typeclass with two new definitions (related through `to_additive`): `mabs` and `abs`. `abs` inherits the `|a|` notation and `mabs` gets `|a|‚Çò` instead.
    
    The first half of `Algebra.Order.Group.Abs` gets multiplicativised. A later PR will multiplicativise the second half,  and another one will deduplicate the lemmas in `Algebra.Order.Group.PosPart`.
    
    Part of #9411.
    
    
    
    
    Co-authored-by: Jeremy Tan Jie Rui <reddeloostw@gmail.com>

[33mcommit c0a2a52aeaa305f418c355fd53b73e8563ec7954[m
Author: Xavier Roblot <46200072+xroblot@users.noreply.github.com>
Date:   Sat Jan 13 11:05:32 2024 +0000

    chore: replace `Infinite` assumption by `Nontrivial` in Ideal.absNorm  (#9684)
    
    Also fix a typo and remove a now useless `maxHeartbeats` in `Mathlib.NumberTheory.NumberField.Units`.

[33mcommit bd7c54890ce13511772418da65cc9fd2d3b790cc[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sat Jan 13 09:55:25 2024 +0000

    chore(ValuedCSP): rename `ValuedCsp` to `ValuedCSP` (#9701)

[33mcommit 0dbc551089988bfa0120002aababde8d58a5200a[m
Author: Joachim Breitner <mail@joachim-breitner.de>
Date:   Sat Jan 13 08:26:08 2024 +0000

    chore: scripts/lean-pr-testing-comments.sh more reliably identify comment (#9698)
    
    without this, we‚Äôll see many separate comments by the bot

[33mcommit 2523a65bd2b94019a3afb291e9499abcaa0f7c0a[m[33m ([m[1;31morigin/hmonroe[m[33m)[m
Author: Martin Dvo≈ô√°k <martin.dvorak@matfyz.cz>
Date:   Fri Jan 12 20:16:33 2024 +0000

    feat: Language reversal (#8629)
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>
    Co-authored-by: Yury G. Kudryashov <urkud@urkud.name>

[33mcommit 56178f0adb13be494b79d13536f49afbd8ea3a91[m
Author: Junyan Xu <junyanxumath@gmail.com>
Date:   Fri Jan 12 18:56:17 2024 +0000

    feat(LinearAlgebra): generalize results about `Module.rank` of `LinearMap`. (#9677)
    
    **LinearAlgebra/LinearIndependent**: generalize `linearIndependent_algHom_toLinearMap(')` to allow different domain and codomain of the AlgHom.
    
    **LinearAlgebra/Basic**: add `LinearEquiv.congrLeft` that works for two rings with commuting actions on the codomain.
    
    **LinearAlgebra/FreeModule/Finite/Matrix**: generalize `Module.Free.linearMap`, `Module.Finite.linearMap`, and `FiniteDimensional.finrank_linearMap` to work with two different rings that may be noncommutative. Add `FiniteDimensional.rank_linearMap`, `FiniteDimensional.(fin)rank_linearMap_self`, and `card/cardinal_mk_algHom_le_rank`.
    
    **FieldTheory/Tower**: remove the instance `LinearMap.finite_dimensional''` which becomes redundant; mark `finrank_linear_map'` as deprecated (superseded by `finrank_linearMap_self`.
    
    
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>

[33mcommit 216d93e901137a11d9c1aec591f080d28520136c[m
Author: Christian Merten <christian@merten.dev>
Date:   Fri Jan 12 17:18:31 2024 +0000

    chore(CategoryTheory/SingleObj): unify notation (#9696)
    
    Use consistent notation for a monoid `M`, a group `G`, etc.

[33mcommit e659b1b3c9ad1535ef5f4ec13280a382fe457aee[m
Author: Christian Merten <christian@merten.dev>
Date:   Fri Jan 12 12:47:28 2024 +0000

    feat(RepresentationTheory/Action): add more limit properties of `Action V G` and `Action.forget V G` (#9603)
    
    Adds instances on limit properties of `Action V G` and `Action.forget V G`.
    
    
    
    Co-authored-by: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>

[33mcommit f34cd0787951c11d9399dda2c09bb75be860a43e[m
Author: Matthew Robert Ballard <matt@mrb.email>
Date:   Fri Jan 12 12:47:27 2024 +0000

    perf (CategoryTheory.ComposableArrows): swap out `linarith` for `omega`  (#9594)
    
    This file now has the lead in the number of CPU instructions amongst all of mathlib. The majority come from `linarith` being an `autoparam` for many definitions, often in multiple arguments. This uses `omega` in place of `linarith` to improve performance.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit e4eb07af0dc52ea72b30c963d06534849df6da38[m
Author: Wrenna Robson <wren.robson@gmail.com>
Date:   Fri Jan 12 12:47:26 2024 +0000

    feat(Order/Basic): Add `ltByCases` API (#9114)
    
    I noticed that `ltByCases` doesn't have any API, and it would be useful to have some when working trichotomously, especially if one wishes to define things trichotomously.
    
    A non-dependent version is also defined.

[33mcommit 9410c2d81d3cf4d626ce2afbce9a7fba42c871b7[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Fri Jan 12 11:58:46 2024 +0000

    chore(Topology): remove autoImplicit in some files (#9689)
    
    ... where this is easy to do.
    
    Co-authored-by: grunweg <grunweg@posteo.de>

[33mcommit a1387de369c2e59181c807f23e2ece644e1b58e0[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Fri Jan 12 11:06:19 2024 +0000

    chore(Topology/Basic): remove autoImplicit (#9682)
    
    It's just used for two declarations; it's clearer without.

[33mcommit 0e4396261e63b6ef314b70a7f3d68a5b77179ee5[m
Author: Joachim Breitner <mail@joachim-breitner.de>
Date:   Fri Jan 12 11:06:18 2024 +0000

    chore: typo in lean-pr-testing-comments.sh (#9608)
    
    sorry! Unfortunately these workflows are hard to test.

[33mcommit efed185d9a4e817f272163fd7bfb1f270c1b2987[m
Author: Scott Morrison <scott@tqft.net>
Date:   Fri Jan 12 10:02:38 2024 +0000

    chore: bump Std dependency up to leanprover/std4#522 (#9680)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 52bef3621cde8a4a3940874a12a184355cad42d6[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Fri Jan 12 09:21:21 2024 +0000

    chore(Topology/PartialHomeomorph): re-use one variable (#9630)
    
    General housekeeping; this also makes re-naming the types to Greek letters easier.

[33mcommit c1cd6459c24cdd591e94efe695e2256a28974ba5[m
Author: Antoine Chambert-Loir <antoine.chambert-loir@u-paris.fr>
Date:   Fri Jan 12 08:24:35 2024 +0000

    feat: add `Finset.piAntidiagonal` (#7904)
    
    This is defined in terms of `Finset.HasAntidiagonal`.
    
    A subsequent PR #9309 uses this to compute coefficients of products of power series.
    
    Co-author : Maria Ines de Frutos Fernandez
    
    Based on work of Bhavik Mehta in `Archive/Partition.lean`
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>
    Co-authored-by: Antoine Chambert-Loir <antoine.chambert-loir@math.univ-paris-diderot.fr>
    Co-authored-by: Johan Commelin <johan@commelin.net>

[33mcommit 2a4980954dd53c3a9b093309cb2535d48ab32fde[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Fri Jan 12 06:00:58 2024 +0000

    chore(Topology/NhdsSet): rename type variables (#9673)
    
    Now we use letters X and Y for topological spaces, not Greek letters.

[33mcommit d91d6797fc98e7d02963e2a67d9abe3e9331101f[m
Author: Junyan Xu <junyanxumath@gmail.com>
Date:   Fri Jan 12 06:00:57 2024 +0000

    feat(Cardinal): `#(Œ± ‚âÉ Œ≤)` and `#(Œ± ‚Ü™ Œ≤)` in the infinite case (#9646)
    
    Main results:
    
    + If two types have the same infinite cardinality, then there are as many Equivs between them as there are functions.
    
    + If B has infinite cardinality no less than #A, then there are as many embeddings from A into B as there are functions.
    
    + If A has infinite cardinality no less than #B, then there are as many surjective functions from A to B as there are functions.
    
    
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>

[33mcommit 0533bf2b33a502d71fdcd6599588f087b5c3a1d9[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Fri Jan 12 05:34:15 2024 +0000

    chore(Geometry/Manifold/ChartedSpace): remove autoImplicit true (#9671)
    
    It's just used once for one declaration.
    While at it, also remove two `open`s which are unused.

[33mcommit fa19a556c26a2f9b357c84146c100b379f4dfe38[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Fri Jan 12 03:12:25 2024 +0000

    feat: naturality of the `gelfandStarTransform` and `WeakDual.CharacterSpace.homeoEval` (#9638)

[33mcommit 709f51dac0424cf46fc7e7c8488b8f9c7a2f52b4[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Thu Jan 11 23:49:04 2024 +0000

    feat: function is differentiable outside of its tsupport (#9669)
    
    From sphere-eversion; I'm just submitting it.
    
    Also golf the proof of the preceding lemma slightly and add a docstring.

[33mcommit d3c8ccc270b81310604e8a38722dd305d0e06132[m
Author: Hunter Monroe <github.com@huntermonroe.com>
Date:   Thu Jan 11 23:22:50 2024 +0000

    doc: Fix typo First-Ordered -> First-Order (#9657)

[33mcommit 47aedf9ef4e8cd917c930a54a98c906589f2b3a2[m
Author: Kevin Buzzard <k.buzzard@imperial.ac.uk>
Date:   Thu Jan 11 22:22:04 2024 +0000

    fix: remove a porting note which is no longer true (#9659)
    
    Remove a `have` which is no longer needed.

[33mcommit 3e1faebb470192db6f9ede1438952eb3344665e0[m
Author: Junyan Xu <junyanxumath@gmail.com>
Date:   Thu Jan 11 20:30:08 2024 +0000

    chore: split IntermediateField.Lifts out of FieldTheory/Adjoin (#9647)
    
    
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>

[33mcommit 9992fd67ccb6409c1c9ea220f96d3afbfdeb6814[m
Author: Adam Topaz <github@adamtopaz.com>
Date:   Thu Jan 11 19:16:43 2024 +0000

    chore: fix bug in `apply ... at ...` (#9650)
    
    See [zulip discussion](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/noob.20issue.2Fbug.20when.20using.20congrArg/near/412272720)

[33mcommit bb3b00add7f16a928f91931e2f34a59c763f236f[m
Author: Matthew Robert Ballard <matt@mrb.email>
Date:   Thu Jan 11 17:55:22 2024 +0000

    perf (Subalgebra.Basic): de-prioritize `Subalgebra.module'` (#9655)
    
    This can send TC search off on a wild goose chase. Discussion on [Zulip](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Timeout.20in.20Submodule.20.28.F0.9D.93.9E.20K.29.20.28.F0.9D.93.9E.20K.29)

[33mcommit d191734a5aa591b43049309c45c895bec30c6a5f[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Thu Jan 11 16:24:56 2024 +0000

    chore(Analysis/NormedSpace/OperatorNorm): remove `local instance` in favor of `letI` (#9653)
    
    The former creates `def`s that are just noise, and have horrible names that the doc linter will complain about if the autogenerated name changes.

[33mcommit 40e48773d341ed66624df226063179edb527e234[m
Author: Matthew Robert Ballard <matt@mrb.email>
Date:   Thu Jan 11 15:58:32 2024 +0000

    perf (Abelian.Transfer): clean up a dsimp (#9641)
    
    Cleaning up a `dsimp` improves performance.
    
    
    
    Co-authored-by: Matthew Robert Ballard <100034030+mattrobball@users.noreply.github.com>

[33mcommit 2f63d25efb2f265e6ff5a6174767e9c5ae56d974[m
Author: Fran√ßois G. Dorais <fgdorais@gmail.com>
Date:   Thu Jan 11 14:47:42 2024 +0000

    fix: patch for std4#198 (more mul lemmas for `Nat`) (#6204)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit c532ace0524392d2ffbc77f83342f7e9cdbdbe14[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Thu Jan 11 11:03:27 2024 +0000

    feat: two topology lemmas (#9624)
    
    From sphere-eversion; I'm just upstreaming it.
    
    Co-authored-by: @fpvandoorn

[33mcommit 33a5585ba7c59a2ae44feeeb8ef7f0a5d9cd5511[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Thu Jan 11 10:24:40 2024 +0000

    feat: two lemmas about partial homeomorphisms (#9623)
    
    From sphere-eversion. While I'm in the area,
    
    - remove `image_isOpen_of_isOpen`, which is an exact duplicate of `isOpen_image_of_subset_source`
    - rename `image_isOpen_of_isOpen'` to `isOpen_image_source_inter_of_isOpen` (which matches the naming convention)
    - move `isOpen_inter_preimage_symm` next to its adjacent lemmas

[33mcommit 702f3fe16c773ae1e34fbf179342d0877f8cb4f1[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Thu Jan 11 10:00:43 2024 +0000

    chore(Geometry/Manifold/SmoothPartitionOfUnity): remove autoImplicit (#9634)
    
    It's just used once for one variable. That's not pulling its weight.

[33mcommit 1e0cd871b3e4d56ca2cf721e98dc67322f489be4[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Thu Jan 11 09:32:06 2024 +0000

    chore: reduce defeq abuse in LocalizedModule (#9649)
    
    In particular, LocalizedModule.induction_on uses LocalizedModule.mk rather than Quotient.mk.

[33mcommit 9f6978a6a277cc82dc3765be1a2375ec05b5a0de[m
Author: Scott Morrison <scott@tqft.net>
Date:   Thu Jan 11 04:35:19 2024 +0000

    chore: cleanup 'import Lean' (#9643)
    
    Removes superfluous `import Lean`, and replaces many `import Lean`s with finer imports.
    
    Not complete, as there is more than I expected, but happy to merge this first and get to the rest later.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 57394a6deaf2386ab0b89f7d27c9f3cb480972de[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Thu Jan 11 02:52:07 2024 +0000

    chore(Analysis/NormedSpace/QuaternionExponential): extract helper lemmas (#9494)
    
    Besides being split in three, this proof is largely untouched.

[33mcommit 15883f30cba87e5641ae888c07740effed7e7779[m
Author: Matthew Robert Ballard <matt@mrb.email>
Date:   Thu Jan 11 01:14:23 2024 +0000

    perf (Preadditive.FunctorCategory): use `dsimp` before `ext` (#9637)
    
    `dsimp` seems to significantly improve the performance of `ext` here and elsewhere.

[33mcommit 49008fde66d834c2ef67997c600f74bbc776ab34[m
Author: Matthew Robert Ballard <matt@mrb.email>
Date:   Thu Jan 11 00:49:31 2024 +0000

    perf (GradedObject.Trifunctor): rearrange proof (#9636)
    
    Calling `dsimp` before `ext` is more efficient.

[33mcommit 7cade347115f292cf70f7b02cd1aaad960afda40[m
Author: Johan Commelin <johan@commelin.net>
Date:   Wed Jan 10 21:36:31 2024 +0000

    feat(AlgebraicTopology/Quasicategory): alternative statement of hornfilling condition (#9360)

[33mcommit fd4eb93d636ce3be66270c6ccbdb863a52e4dc8a[m
Author: Jz Pan <acme_pjz@hotmail.com>
Date:   Wed Jan 10 20:21:11 2024 +0000

    feat(Algebra/CharP/ExpChar): add more results for `ExpChar` parallel to `CharP` (#9573)

[33mcommit f2e0c5baa5254e9c8c87d759086af0086206d67f[m
Author: Junyan Xu <junyanxumath@gmail.com>
Date:   Wed Jan 10 19:15:43 2024 +0000

    feat (FieldTheory/Adjoin): generalize `IntermediateField.exists_algHom_of_splits` (#9392)
    
    + Extract from `Lifts.exists_lift_of_splits` a version that assumes integrality and splitting of minimal polynomial over an intermediate field (either actual IntermediateField or middle of IsScalarTower) rather than the base field
    
    + Generalize `exists_algHom_adjoin_of_splits`, `exists_algHom_of_adjoin_splits`, `exists_algHom_of_splits` to the same setting
    
    + Prove the [extension lemma](https://math.stackexchange.com/a/687914/12932) `surjective_comp_algebraMap_of_isAlgebraic/isSeparable` to be used in the proof that an epimorphism in the category of fields is a purely inseparable extension.
    
    
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>

[33mcommit 7f983515625f5f14cca0c998221eacdf0b13aa39[m
Author: JADekker <114015169+JADekker@users.noreply.github.com>
Date:   Wed Jan 10 17:15:41 2024 +0000

    Feat : Define the Poisson distribution (#9554)
    
    Add the Poisson probability distribution for non-negative rate `r`
    - PMF
    - Measure
    - Basic API

[33mcommit 0c62352ff915f09a222560b3669dcee3cbcfe3ca[m
Author: Xavier Xarles <xavier.xarles@uab.cat>
Date:   Wed Jan 10 17:15:40 2024 +0000

    feat: Injectivity of monoid localization (#9531)
    
    Adds two results on the Localization for CommMonoids: one, describes exactly when the localization map is injective, the
    other essentially says that the localization of a cancellative Monoid is cancellative if the localization is injective.
    
    
    
    Co-authored-by: Xavier Xarles <56635243+XavierXarles@users.noreply.github.com>

[33mcommit 1c6c79f0b22b0428d5a0b86b394c51dcd2bec0e4[m
Author: David Kurniadi Angdinata <dka31@cantab.ac.uk>
Date:   Wed Jan 10 15:56:02 2024 +0000

    refactor(AlgebraicGeometry/EllipticCurve/*): refactor base change for ring homomorphisms (#9596)
    
    Refactor Weierstrass curves and nonsingular rational points to allow for base changes over an arbitrary ring homomorphism `œÜ : K ‚Üí+* L`. This generalises the natural map `algebraMap K L` and removes the necessity for `Algebra K L`, but also gives an easy way to define `DistribMulAction` for the action of `L ‚âÉ‚Çê[K] L` on the nonsingular rational points over `L`, since `L ‚âÉ‚Çê[K] L` restricts to `L ‚Üí‚Çê[K] L` that restricts to `L ‚Üí+* L`. The old notation `W‚üÆL‚üØ` is preserved for base change over `algebraMap K L`.
    
    Also remove some unnecessary coercions in the Weierstrass file.

[33mcommit 3846d4dee5cded4ab32dc54613657c2c16531e5f[m
Author: Jujian Zhang <jujian.zhang1998@outlook.com>
Date:   Wed Jan 10 15:56:01 2024 +0000

    feat(LinearAlgebra/PiTensorProduct): make `reindex` dependently typed (#9445)
    
    used to be `(‚®Ç[R] _ : Œπ, M) ‚âÉ‚Çó[R] ‚®Ç[R] _ : Œπ‚ÇÇ, M`, now `M` can vary according to the indexing set.
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit eee126916c924c75dc6b3b43e42c5fc354153fdb[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Wed Jan 10 14:23:59 2024 +0000

    feat: `a * a ^ (n - 1) = a ^ n` (#9610)
    
    From LeanAPAP

[33mcommit f8ed0192a9d293ffe87f4cc2f2abcd240c25ae5a[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Wed Jan 10 14:23:58 2024 +0000

    feat: Products over finite intervals (#9386)
    
    From LeanCamCombi

[33mcommit b271734f1b6639876037c9e375d8e58341313668[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Wed Jan 10 14:23:57 2024 +0000

    feat: `DirectSum.toAddMonoid` is injective (#9385)
    
    From LeanAPAP

[33mcommit d819f3c8bf9210b01cb7d627c5e772b9523853e2[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Wed Jan 10 14:23:56 2024 +0000

    feat: Maximum principle for convex functions on an interval (#9364)
    
    Corollaries of existing lemmas.
    
    From LeanAPAP

[33mcommit 5b559b2720fdd12a3893eb32174bc8631b754cda[m
Author: Sebastian Ullrich <sebasti@nullri.ch>
Date:   Wed Jan 10 14:23:54 2024 +0000

    chore: benchmark userspace instructions only per file (#8957)
    
    This should make the metric even more deterministic, which is its primary purpose

[33mcommit 68612e920cc8423456cf7b990cceaa8e16a08230[m
Author: Scott Morrison <scott@tqft.net>
Date:   Wed Jan 10 13:07:02 2024 +0000

    chore: bump Std dependency up to leanprover/std4#511 (#9609)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 1fb4b03be0d8879ef0688b21ac3d77af3d102de3[m
Author: Jon Eugster <eugster.jon@gmail.com>
Date:   Wed Jan 10 11:53:56 2024 +0000

    refactor: split `ImportGraph` into its own package. (#9169)
    
    Remove `ImportGraph` from the mathlib repo and add it as a dependency.

[33mcommit c2e1bcccc3d3e0f486a6ea7347a3923f3d8ef6be[m
Author: Christian Merten <christian@merten.dev>
Date:   Wed Jan 10 11:30:59 2024 +0000

    feat(CategoryTheory): definition of Galois categories (#9557)
    
    Adds the definition of Galois categories in the sense of SGA1 following notes by Lenstra.

[33mcommit 7c3197c21c1ba40c4ff0ff7d92d1cd77f24bfdc7[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Wed Jan 10 10:28:17 2024 +0000

    feat(Algebra/Homology/HomotopyCategory): various prerequisites for the triangulated structure (#9592)
    
    This PR adds various small prerequisites for the construction of the triangulated structure on the homotopy category of cochain complexes.

[33mcommit 0788787e4cbf8892c4d5415e2a91fb7666b8fc59[m
Author: David Loeffler <d.loeffler.01@cantab.net>
Date:   Wed Jan 10 10:28:16 2024 +0000

    feat(Analysis/Analytic): define meromorphic functions (#9590)
    
    This patch defines `MeromorphicAt`, for functions on nontrivially normed fields, and prove it is preserved by sums and products (routine) and inverses (much less trivial). Along the way, we define "order of vanishing" for a function analytic at a point (as an `ENat`).

[33mcommit b8dc3667ac81c19c9e6c50d8fd5e37aa9733f4d8[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Wed Jan 10 10:28:15 2024 +0000

    chore: Relocate big operator lemmas (#9383)
    
    A bunch of lemmas in `Algebra.BigOperators.Ring` were not about rings. This PR moves them along with some lemmas from `Data.Fintype.BigOperators` to their correct place.
    
    I create a new file with the content from #6605 to avoid importing `Fin` material in finset files as a result.
    
    From LeanAPAP

[33mcommit 2d16ed004e96728ea9cc5a7a4a9e84730586a22f[m
Author: smorel394 <junyanxu.math@gmail.com>
Date:   Wed Jan 10 10:28:14 2024 +0000

    feat(Mathlib/Analysis/Analytic): continuously polynomial functions (#9269)
    
    This defines "continuously polynomial" (shortened to "cpolynomial") functions as a special cases of analytic functions: they are the functions that admit a development as a *finite* formal multilinear series. Then we prove their basic properties. The point of doing is this is that finite series are always summable, so we can remove the completeness assumptions in some results about analytic functions (differentiability for example). Examples of continuously polynomial functions include continuous multilinear maps, and functions defined by polynomials.
    
    
    
    Co-authored-by: smorel394 <67864981+smorel394@users.noreply.github.com>
    Co-authored-by: morel <smorel@math.princeton.edu>

[33mcommit 16a2a52aabade81578e8764585fc28de667f8f4d[m
Author: Martin Dvo≈ô√°k <martin.dvorak@matfyz.cz>
Date:   Wed Jan 10 10:28:12 2024 +0000

    chore(Order/PFilter): cosmetic improvement (#9177)

[33mcommit 476bd970c86139cb1c33c3eb4643c0b1b7d9012e[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Wed Jan 10 09:09:14 2024 +0000

    feat: Strong induction on nonempty finsets (#9308)
    
    See https://leanprover.zulipchat.com/#narrow/stream/217875-Is-there-code-for-X.3F/topic/Proof.20by.20descent.20on.20finite.20sets

[33mcommit 33ffe521ebadc9224ad92af91dc5323ef211a252[m
Author: Xavier Roblot <46200072+xroblot@users.noreply.github.com>
Date:   Wed Jan 10 09:09:12 2024 +0000

    feat: Add Basis.of_isLocalizedModule (#9210)
    
    Let `M‚Çõ` be a `R`-module and let `M` be a submodule of `M‚Çõ` such that `M‚Çõ` is the localization at `S` of `M` where `S` is a submonoid of `R`. Assume that `M‚Çõ` is a `R‚Çõ`-module where `R‚Çõ` is a localization of `R` at `S`. Then, any `R`-basis of `M` is a `R‚Çõ`-basis of `M‚Çõ`.
    
    This result is used to prove the results about `Basis.localizationLocalization`. For that, it is necessary to move some results between files and modify some imports.
    
    Co-authored-by: Junyan Xu <junyanxumath@gmail.com>
    
    
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>

[33mcommit e5e233f5aedf508cccd653c7843cb4aabb0d55d5[m
Author: Christian Merten <christian@merten.dev>
Date:   Wed Jan 10 08:02:52 2024 +0000

    feat(CategoryTheory/SingleObj): add functor and NatTrans constructors for `SingleObj` (#9586)
    
    Adds constructors for functors of type `SingleObj Œ± ‚•§ C` and natural transformations of functors `SingleObj Œ± ‚•§ C`.

[33mcommit 497ed074cd8dff1c938e9f586a879997f48ad3e4[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Wed Jan 10 08:02:51 2024 +0000

    refactor: Split off basic `Nat` file (#9551)
    
    `Data.Nat.Basic` is currently made of two things:
    * Basic lemmas that continue the theory in Std (and could belong there, really)
    * Basic algebraic order instances
    
    I need the first ones earlier in the algebraic order hierarchy, hence the split.
    
    Part of #9411. Similar to #9443

[33mcommit bf66c9078807fd3b93aa3267ed0decf2ed568765[m
Author: Scott Carnahan <128885296+ScottCarnahan@users.noreply.github.com>
Date:   Wed Jan 10 08:02:50 2024 +0000

    feat: BinomialRing instance for integers (#9537)
    
    We add a binomial ring instance for integers.  To prove the necessary identity for negative integers, we add a lemma comparing evaluations of ascending and descending Pochhammer polynomials.

[33mcommit 95e61f31415518cec8562e836751550dd5e172dc[m
Author: Scott Carnahan <128885296+ScottCarnahan@users.noreply.github.com>
Date:   Wed Jan 10 08:02:49 2024 +0000

    feat: define power-associativity in unital setting (#9439)
    
    introduce Prop-valued mixin NatPowAssoc and show that power-associativity holds for monoids.

[33mcommit b520d4aba2bd66192a4d86069537654733010c8f[m
Author: Xavier Xarles <xavier.xarles@uab.cat>
Date:   Wed Jan 10 07:33:52 2024 +0000

    feat: Generalizing two lemmas from CommRing to CommSemiring (#9599)
    
    
    
    Co-authored-by: Jujian Zhang <jujian.zhang1998@outlook.com>

[33mcommit b071b57a84e9970e988d47cb1622531297757a79[m
Author: Jujian Zhang <jujian.zhang1998@outlook.com>
Date:   Wed Jan 10 06:51:29 2024 +0000

    feat(Algebra/DirectSum/Decomposition): degree of a non-zero homogeneous element is unique (#9597)
    
    if $x \in M = \bigoplus M_i$ is not $0$ such that $x \in M_i$ and $x \in M_j$, then $i = j$

[33mcommit 7d5dce5d3404e9beab4e24c1453ba91994ca2b3e[m
Author: Joachim Breitner <mail@joachim-breitner.de>
Date:   Wed Jan 10 02:32:21 2024 +0000

    chore: CI: improve comment created on lean PRs (#9585)
    
    this mirrors the change in
    https://github.com/leanprover/lean4/pull/3148

[33mcommit 518fe03b2083d61167cbec7bb649bfb90ba400fe[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Tue Jan 9 23:05:16 2024 +0000

    chore(Analysis.NormedSpace.Star.Matrix): add missing `nnnorm` lemmas (#9600)

[33mcommit 03a46de924f800c7abeecaef667b5c0bbacb271d[m
Author: Christian Merten <christian@merten.dev>
Date:   Tue Jan 9 22:39:03 2024 +0000

    feat(RepresentationTheory/Action): add preservation of (co)limits lemmas for functors into `Action V G` (#9558)
    
    Shows that a functor into `Action V G` preserves a given (co)limit if it does after postcomposing with the forgetful functor to `V`.

[33mcommit b8370f892a9253668787125ad0e72fac8b4e0cc6[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Tue Jan 9 21:58:40 2024 +0000

    feat: Basic `Complex` lemmas (#9527)
    
    and rename `ofReal_mul_re ‚Üí re_mul_ofReal`, `ofReal_mul_im ‚Üí im_mul_ofReal`.
    
    From LeanAPAP

[33mcommit 316407dbf37c3a7203810873b7e810b8ee348601[m
Author: Johan Commelin <johan@commelin.net>
Date:   Tue Jan 9 21:58:39 2024 +0000

    feat(AlgebraicTopology/SimplicialSet): constructors for subfaces (#9363)
    
    constructors for subfaces of the standard simplex and horn simplices

[33mcommit 4a55c95f4fb1a029acd13a7372fea3ad1e08f1f9[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Tue Jan 9 21:58:38 2024 +0000

    refactor(CategoryTheory/Sites): sheafification as an abstract left adjoint (#9012)
    
    We define a typeclass `HasSheafify`¬†which says that presheaves on a site with values in some category can be sheafified, i.e. that the inclusion functor from sheaves to presheaves has a left exact left adjoint. We redefine `presheafToSheaf`¬†as an arbitrary choice of such a left adjoint.

[33mcommit 0470fa9f8f2c6d0b66fb7612610f2cae9ea336b2[m
Author: Junyan Xu <junyanxumath@gmail.com>
Date:   Tue Jan 9 20:44:29 2024 +0000

    feat: MonoidHom is equivalent to MulAction + IsScalarTower (#9381)
    
    Natural strengthening/extension of `MonoidHom/RingHom.smulOneHom`. Follow-up of #9064.
    
    `monoidHomEquivMulActionIsScalarTower`: A homomorphism between two monoids M and N can be equivalently specified by a multiplicative action of M on N that is compatible with the multiplication on N.
    
    `ringHomEquivModuleIsScalarTower`: A homomorphism between semirings R and S can be equivalently specified by a R-module structure on S such that S/S/R is a scalar tower.
    
    Mathlib doesn't have a typeclass for RingHom between noncommutative rings, but `ringHomEquivModuleIsScalarTower` shows we can achieve the same effect with the combination of Module + IsScalarTower.
    
    
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 487e1983c24bac3b38dd046f60abdc236377c6e8[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Tue Jan 9 20:08:45 2024 +0000

    feat(Algebra/Homology): the mapping cone (#8951)
    
    This PR completes the basic API for the mapping cone which shall be used in order to show that the homotopy category of cochain complexes is a triangulated category.

[33mcommit de2a15be5b33b6929118f8d04bffe3d5b28bb2f0[m
Author: JADekker <114015169+JADekker@users.noreply.github.com>
Date:   Tue Jan 9 19:00:38 2024 +0000

    refactor(Probability/Distributions/Exponential): exponential distrubtion as special case of Gamma distribution (#9462)
    
    Refactor most proofs of `Probability/Distributions/Exponential.lean` in terms of the proofs in `Probability/Distributions/Gamma.lean`, as the exponential distribution is a special case of the Gamma distribution.
    
    Adds `stronglyMeasurable_gammaPdfReal` to `Probability/Distributions/Gamma` and [@measurability] tags to the necessary results in `Probability/Distributions/Gamma` and `Probability/Distributions/Exponential. `
    
    Style : improve consistency in notation.

[33mcommit 4fd6d057e5c222d091f0863bcc227818cc5b91e6[m
Author: Johan Commelin <johan@commelin.net>
Date:   Tue Jan 9 19:00:37 2024 +0000

    chore(AlgebraicTopology/TopologicalSimplex): clean up, golf (#9431)

[33mcommit a07246280d2b84a419530bff6e267fab10524465[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Jan 9 18:26:12 2024 +0000

    chore(SpecificLimits/FloorPow): use `gcongr` (#9595)

[33mcommit bdd7632ed5c4ca79a2c668ec7cf3a7842a787516[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Jan 9 18:26:11 2024 +0000

    chore(*): fix more names (#9593)
    
    Grep for `^[^#].*deriv_within` and fix all occurrences.

[33mcommit 40c4f8030aeded439422927d951e1030b1eac629[m
Author: Johan Commelin <johan@commelin.net>
Date:   Tue Jan 9 18:26:10 2024 +0000

    chore(AlgebraicTopology/SingularSet): factor topology out of `SimplicialSet` into new file (#9428)

[33mcommit 47a02614a4bf845b2e671ff253188a8e4654e454[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Tue Jan 9 17:40:24 2024 +0000

    chore: Move `x ‚äî y = (x + y + |y - x|) / 2` (#9466)
    
    Part of #9411

[33mcommit 25bcbbb6fc52506a973edce43699f7eec823010f[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Tue Jan 9 17:16:41 2024 +0000

    feat: Flooring/ceiling division (#9149)
    
    This PR defines flooring and ceiling division as the right and left adjoints to the map
    `b ‚Ü¶ a ‚Ä¢ b`.

[33mcommit 43466302f470407ff82f2af8000eb3f26799f13d[m
Author: apurvanakade <apurvanakade@gmail.com>
Date:   Tue Jan 9 16:50:56 2024 +0000

    refactor(ProperCone): redefine ProperCone using PointedCone (#8878)
    
    We change the definition of a `ProperCone` from being a nonempty, closed, `ConvexCone` to a closed, `PointedCone`.
    This is mathematically (not definitionally) equivalent to the earlier definition as a `PointedCone` is mathematically (not definitionally) the same as a nonempty, `ConvexCone`.
    
    The definition of `PointedCone` was added after `ProperCone`. Hence, needed to go back and update the definition.
    
    
    
    Co-authored-by: apurvanakade <53553755+apurvanakade@users.noreply.github.com>

[33mcommit 400ca8835d0070df9ad15515d40d188f1166fcb8[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Jan 9 15:48:26 2024 +0000

    chore(*): rename IsPwo to IsPWO (#9582)
    
    Rename `Set.IsPwo` ‚Üí `Set.IsPWO` and `Set.IsWf` ‚Üí `Set.IsWF`.

[33mcommit b97b7e452ffb3328f662d72d5cff0d93863f513f[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Tue Jan 9 14:39:29 2024 +0000

    chore: rename meagre to isMeagre in two lemma names (#9591)
    
    The corresponding Prop is called `IsMeagre`.

[33mcommit 8802cc5585f54b80097a016895ed9e54bf69d452[m
Author: Riccardo Brasca <riccardo.brasca@gmail.com>
Date:   Tue Jan 9 14:39:28 2024 +0000

    chore: improve proof of  discr_prime_pow (#9589)
    
    The new proof is more robust and does not rewrite a type equality.

[33mcommit 0df5fae75b8206a93269d4eef1c49ff407e60ba5[m
Author: Jeremy Tan Jie Rui <reddeloostw@gmail.com>
Date:   Tue Jan 9 14:39:27 2024 +0000

    Fix two typos in `Data.Fin.Basic` (#9587)

[33mcommit 9d2a0f8b79a72ce61ad007d41a80d7fe93a8974c[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Tue Jan 9 14:39:26 2024 +0000

    feat: provide the ‚Ñì¬≤ operator norm on matrices (#9474)
    
    This adds the (unique) C‚ãÜ-norm on matrices `Matrix n n ùïú` with `IsROrC ùïú` within the scope `Matrix.L2OpNorm`. This norm coincides with the operator norm induced by the ‚Ñì¬≤ norm (i.e., the norm on `Matrix m n ùïú` obtained by pulling back the norm from `EuclideanSpace ùïú n ‚ÜíL[ùïú] EuclideanSpace ùïú m`). Where possible, we state results for rectangular matrices.

[33mcommit bca393b0b17bf548b8457fb871ae14c86db48229[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Jan 9 14:03:56 2024 +0000

    chore(ContDiffAt): fix several names (#9584)
    
    Rename
    
    - `Filter.EventuallyEq.iterated_fderiv_within'` ‚Üí `Filter.EventuallyEq.iteratedFDerivWithin'`
    - `contDiffOn_succ_iff_has_fderiv_within` ‚Üí `contDiffOn_succ_iff_hasFDerivWithin`
    - `contDiff_succ_iff_has_fderiv` ‚Üí `contDiff_succ_iff_hasFDerivAt`

[33mcommit bb7a43e4a602b9c4e5cfce963ad6700c7d4c658d[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Tue Jan 9 10:40:57 2024 +0000

    chore: minimize some imports (#9559)
    
    Started from Algebra/Periodic.lean with some snowball sampling. Seems to be somewhat disjoint from the tree shaking in #9347.

[33mcommit 0c15e4238484dc82267246469e9c01f5f42f2ccb[m
Author: Scott Carnahan <128885296+ScottCarnahan@users.noreply.github.com>
Date:   Tue Jan 9 10:40:55 2024 +0000

    chore: shift Nat.ascFactorial down by one (#7965)
    
    change `ascending factorial` function `Nat.ascFactorial` to agree with mathematical literature.  This means `Nat.ascFactorial n k` becomes `n (n + 1) ‚ãØ (n + k - 1)` instead of `(n + 1) ‚ãØ (n + k)`
    
    
    
    Co-authored-by: Johan Commelin <johan@commelin.net>

[33mcommit f846056d4c68fd8175c1b782f72c71441fc712da[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Jan 9 09:25:10 2024 +0000

    feat(Topology/Order): add `le_of_tendsto_of_frequently` (#9583)
    
    Also add `ge_of_tendsto_of_frequently`

[33mcommit 043fa2f8f017fe9c7eaf8e8121365d928c3ab7c0[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Jan 9 09:25:09 2024 +0000

    chore(ZeroAtInfty): rename `toBcf` to `toBCF` (#9581)

[33mcommit fb274b38871d78cd4f87d7ba6fca04ea22636e8e[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Tue Jan 9 09:25:08 2024 +0000

    feat: More `WithBot` lemmas (#9580)
    
    This makes simp stronger on `WithBot`, for use in #9083.
    
    Also reorder the relevant lemmas so that the `WithTop` and `WithBot` sections are more identical.

[33mcommit 8b47b2fc9570c68ee13618220c41bf164c62061d[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Jan 9 09:25:07 2024 +0000

    chore(Covby): rename `Covby` to `CovBy` (#9578)
    
    Rename
    
    - `Covby` ‚Üí `CovBy`, `Wcovby` ‚Üí `WCovBy`
    - `*covby*` ‚Üí `*covBy*`
    - `wcovby.finset_val` ‚Üí `WCovBy.finset_val`, `wcovby.finset_coe` ‚Üí `WCovBy.finset_coe`
    - `Covby.is_coatom` ‚Üí `CovBy.isCoatom`

[33mcommit 4c48de09d4aaaad57ecf401aadf8166ce2f0cda7[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Tue Jan 9 09:25:06 2024 +0000

    chore(Topology/Maps): rename type variables (#9548)
    
    This file was mostly using Greek letters, but used letters X, Y, Z in comments and one theorem. Switch to using the latter consistently, per [Zulip discussion](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Naming.20convention.3A.20topological.20spaces/near/395769893).
    
    
    
    Co-authored-by: grunweg <grunweg@posteo.de>

[33mcommit 3a13ea5947738ef7bc408f05d6f2d9c162a1e9a6[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Tue Jan 9 09:25:04 2024 +0000

    feat: `‚Äña - c‚Äñ ‚â§ ‚Äña - b‚Äñ + ‚Äñb - c‚Äñ` (#9517)
    
    From LeanAPAP

[33mcommit 6520136b7fdc16d1ee89d8ab52f2c3c9a9639840[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Tue Jan 9 09:25:03 2024 +0000

    feat: Finite order elements have norm one (#9516)
    
    This lemma already existed, but with an impractical spelling.
    
    From LeanAPAP

[33mcommit c64c9a87775562a6870486317cf646f59ef4249e[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Tue Jan 9 09:25:02 2024 +0000

    feat(Algebra/Homology): morphisms from the mapping cone (#9509)
    
    This PR studies morphisms from the mapping cone.
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit e1b05c5141f5ef02a97072d8e110f2772d899408[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Tue Jan 9 09:25:01 2024 +0000

    chore: Move `Int` and `Nat` cast lemmas (#9503)
    
    Part of #9411

[33mcommit 7ab8c78157f3aec07108a7d46b0c8ede1a594b86[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Tue Jan 9 09:25:00 2024 +0000

    feat: `a / b = c / d ‚Üî a * d = c * b` when `b`, `d` commute (#9389)
    
    This involves moving a bunch of lemmas from `Algebra.Group.Units.Hom` to `Algebra.Group.Units` (without modification).
    
    From LeanAPAP

[33mcommit 2a950180fd7e49c4a374c7595d858eed58573afc[m
Author: Andrew Yang <the.erd.one@gmail.com>
Date:   Tue Jan 9 09:24:59 2024 +0000

    feat: Define `intNorm` and `intTrace`. (#9265)
    
    
    
    
    Co-authored-by: Andrew Yang <36414270+erdOne@users.noreply.github.com>

[33mcommit 420479f24e4b76b988bfcc2abdb12bc63de798a3[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Tue Jan 9 09:24:58 2024 +0000

    feat(CategoryTheory): define countable categories and countable limits (#8674)
    
    We define a class `CountableCategory`¬†analogous to `FinCategory`, and provide some API for countable limits. This will be necessary to develop the theory of light condensed sets.

[33mcommit c41fe7264d74ad73f5ef9fe18114b32199316d9e[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Tue Jan 9 08:14:38 2024 +0000

    chore(Geometry/Manifold): use dot notation for IsOpen lemmas more (#9567)
    
    While at it, switch from refine' to refine (easy cases only) in the lines I'm touching anyway.

[33mcommit 6eb51c6943ed99eb3c47e172ab9b8505028f2407[m
Author: Christian Merten <christian@merten.dev>
Date:   Tue Jan 9 08:14:37 2024 +0000

    feat: add multiplicative versions of `equivOfFullyFaithful` and `isoEquivOfFullyFaithful` (#9566)
    
    Adds multiplicative versions of `equivOfFullyFaithful` and `isoEquivOfFullyFaithful`.
    
    Co-authored-by: Yury G. Kudryashov <urkud@urkud.name>

[33mcommit 54b67abbf012d2f6f9ec978e9b3234fa182e9ec4[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Tue Jan 9 08:14:36 2024 +0000

    chore: Fix statement of `Finset.cast_card_sdiff` (#9563)
    
    The two types were accidentally the same.

[33mcommit 8924613643813004b8003d256d5a27dc30689410[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Tue Jan 9 08:14:34 2024 +0000

    chore: Rearrange arguments to `Nat.multinomial_insert` (#9562)
    
    and a few other `multinomial` lemmas

[33mcommit aa782a7b71b7e0db2829df961939b0cae3e8b758[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Tue Jan 9 08:14:33 2024 +0000

    chore: `pp_dot` on `Finset.card` (#9560)

[33mcommit 2b7553213ceef9ab990abaad26a07b210d09cc6a[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Tue Jan 9 08:14:32 2024 +0000

    chore: Move Bernoulli's inequality (#9456)
    
    The first versions for ordered semirings do not need to import so much but:
    * they have no obvious place to go
    * nobody needs them that early (in particular, it seems nobody needs them without also needing the ordered field version)
    
    Part of #9411

[33mcommit c147cdfcf1418472fa1c8c17eaa446096d58e7c2[m
Author: Jeremy Tan Jie Rui <reddeloostw@gmail.com>
Date:   Tue Jan 9 07:49:34 2024 +0000

    refactor: split graph maps into a new file (#9579)
    
    A continuation from https://github.com/leanprover-community/mathlib4/pull/9267#discussion_r1437052000.

[33mcommit b9f04deeee97fba5dd4b8f60eed25bd7c2d44073[m
Author: Scott Morrison <scott@tqft.net>
Date:   Tue Jan 9 07:49:33 2024 +0000

    chore: reduce imports (#9575)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit a9d1aeacd18e13810e4ac55524bd0f1468726e46[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Jan 9 07:26:35 2024 +0000

    chore(*): minor golfs, mostly using `gcongr` (#9577)

[33mcommit bb297ad1106dfed827c9ad226ac2b8e2f782430f[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Tue Jan 9 07:03:17 2024 +0000

    feat: The Ahlswede-Zhang identity (#8171)
    
    The Ahlswede-Zhang identity is a sharpening of the [Lubell-Yamamoto-Meshalkin inequality](https://leanprover-community.github.io/mathlib_docs/combinatorics/set_family/lym.html#finset.sum_card_slice_div_choose_le_one), by expliciting the correction term.
    
    This PR defines `Finset.truncatedSup`/`Finset.truncatedInf`, whose cardinalities show up in the correction term, and subsequently proves the Ahlswede-Zhang identity itself.
    
    Co-authored-by: Vladimir Ivanov <volodimir1024@gmail.com>

[33mcommit ef72bdbf383871fb9e7bb1aebb4d57724ac6561c[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Tue Jan 9 02:35:29 2024 +0000

    feat(Analysis/InnerProductSpace/Adjoint): add `norm_adjoint_comp_self` (#9569)
    
    This is a non-square version of `norm_star_mul_self`

[33mcommit 7649e8021900abdc59e1e389ea9d2d3a816ec7de[m
Author: Winston Yin <winstonyin@gmail.com>
Date:   Tue Jan 9 02:13:04 2024 +0000

    feat: local existence of integral curves of vector field (#8483)
    
    Port of [mathlib#17140](https://github.com/leanprover-community/mathlib/pull/17140) plus much more. Comments therein addressed.
    
    For any continuously differentiable vector field (section of tangent bundle) on a manifold `M` and any chosen interior point `x‚ÇÄ : M`, there exists an integral curve `Œ≥ : ‚Ñù ‚Üí M` such that `Œ≥ t‚ÇÄ = x‚ÇÄ` for any real number `t‚ÇÄ` and the tangent vector of `Œ≥` at `t` coincides with the vector field at `Œ≥ t` for all `t` within an open interval around `t‚ÇÄ`.
    
    As a corollary, such an integral curve exists for any starting point `x‚ÇÄ` if `M` is a manifold without boundary.
    
    We define three `Prop`s:
    1. `IsIntegralCurveOn Œ≥ v s` means `Œ≥ t` is tangent to `v (Œ≥ t)` for all `t` within `s : Set ‚Ñù`.
    2. `IsIntegralCurveAt Œ≥ v t‚ÇÄ` means `Œ≥` is a local integral curve to `v`. That is, `Œ≥ t` is tangent to `v (Œ≥ t)` for all `t` within some open interval of `t‚ÇÄ`.
    3. `IsIntegralCurve Œ≥ v` means `Œ≥` is a global integral curve to `v`. That is, `Œ≥ t` is tangent to `v (Œ≥ t)` for all `t : ‚Ñù`.
    
    Lemmas about rescaling and translation of integral curves are proven:
    * If `Œ≥` solves `v` at `t‚ÇÄ`, then `Œ≥ (t + dt)` is tangent to `v` at `t‚ÇÄ - dt`.
    * If `Œ≥` solves `v` at `t‚ÇÄ`, then `Œ≥ (a * t)` is tangent to `a ‚Ä¢ v` at `t‚ÇÄ / a` for any non-zero `a`.
    * The constant function at `x‚ÇÄ` solves any `v` with `v x‚ÇÄ = 0`.
    
    We also shuffle the position of `‚àÉ Œµ > (0 : ‚Ñù)` in `PicardLindelof` to one that makes more sense, since `f t‚ÇÄ = x‚ÇÄ` does not depend on `Œµ` yet.
    
    
    
    Co-authored-by: Michael Rothgang <rothgami@math.hu-berlin.de>

[33mcommit b2daba4a3cb8c63681fd2ed000dbe9c9f749ebe7[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Jan 9 00:24:54 2024 +0000

    chore(*): golf, mostly using `gcongr`/`positivity` (#9546)

[33mcommit a131be443cc815136957bdd0954c63adeacdf6bf[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Tue Jan 9 00:24:53 2024 +0000

    feat: `z‚Åª¬π = conj z` when `z` has norm one  (#9535)
    
    and other simple lemmas
    
    From LeanAPAP

[33mcommit 49dcbe7d84c235b0846b790312199c2fdda04d34[m
Author: Matthew Robert Ballard <matt@mrb.email>
Date:   Mon Jan 8 23:13:22 2024 +0000

    perf (Homology.ProjectiveResolution): remove `MkStruct`, re-jigger proof, and suppress compilation  (#9555)
    
    Currently `CategoryTheory.Abelian.ProjectiveResolution` requires more than double the next largest file in terms of CPU instructions. This reduces the load by replacing ad-hoc `MkStruct` with `ShortComplex` and pushing around the existing proof. Follow-up clean-up should be done.

[33mcommit fe5b74890caf1b3cfe48e2d28c37cfb07deedf0e[m
Author: Alex J Best <alex.j.best@gmail.com>
Date:   Mon Jan 8 23:13:21 2024 +0000

    chore: mark neg_div_neg_eq as simp (#9332)

[33mcommit 30667e28440e0bf0e6029a34732c7e4dd01a9080[m
Author: Martin Dvo≈ô√°k <martin.dvorak@matfyz.cz>
Date:   Mon Jan 8 23:13:20 2024 +0000

    chore(Data/List/Sort): names of assumptions not like names of data (#9324)
    
    
    
    Co-authored-by: madvorak <dvorakmartinbridge@seznam.cz>

[33mcommit a6cf8f57f81f8f3bd96736335bc05d624e610f0e[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Mon Jan 8 21:36:46 2024 +0000

    feat(Algebra/GroupPower): Miscellaneous lemmas (#9388)
    
    Generalise `pow_ite`/`ite_pow` and give a version of `pow_add_pow_le` that doesn't require the exponent to be nonzero.
    
    From LeanAPAP

[33mcommit 484839a68d102d413d7bf80e8e2f4ca8b3b2798e[m
Author: Antoine Chambert-Loir <antoine.chambert-loir@u-paris.fr>
Date:   Mon Jan 8 19:30:31 2024 +0000

    feat(RingTheory/Ideal/QuotientOperations): remove commutativity instances (#9556)
    
    Remove one commutativity instances for the universal property of a quotient algebra :
    the target algebra only needs to have `Semiring`.
    
    
    
    Co-authored-by: Antoine Chambert-Loir <antoine.chambert-loir@math.univ-paris-diderot.fr>

[33mcommit 1f780d69ee16090d7f8a3d0e1c63755fb6f24d51[m
Author: Junyan Xu <junyanxumath@gmail.com>
Date:   Mon Jan 8 19:30:30 2024 +0000

    feat: generalize `FiniteDimensional.finrank_mul_finrank` (#9046)
    
    Generalize the conditions of the tower law [FiniteDimensional.finrank_mul_finrank'](https://leanprover-community.github.io/mathlib4_docs/Mathlib/FieldTheory/Tower.html#FiniteDimensional.finrank_mul_finrank') in FieldTheory/Tower from `[CommRing F] [Algebra F K]` to `[Ring F] [Module F K]`, and remove the `[Module.Finite F K]` and `[Module.Finite K A]` conditions.
    
    The generalized version applies to situations when we have a tower C/B/A where the A-module structure on C is induced from the B-module structure via a RingHom from A to B, and the A-module structure on B is induced by the same RingHom. In particular, it applies when the A-module structure on B and the B-module structure on C come from two RingHoms, and the A-module structure on C comes from the composition of them, regardless of whether A and B are commutative or not.
    
    As prerequisites, I also generalized lemmas originally introduced by @kckennylau in [mathlib3#3355](https://github.com/leanprover-community/mathlib/pull/3355/files) to prove the tower law. They were split into three PRs:
    
    + LinearAlgebra/Span #9380: add `span_eq_closure` and `closure_induction` which say that `Submodule.span R s` is generated by `R ‚Ä¢ s` as an AddSubmonoid. I feel that the existing `span_induction` should be replaced by `closure_induction` as the latter is stronger, and allow us to remove the commutativity condition in `span_smul_of_span_eq_top` in Algebra/Tower.
    
    + Algebra/Tower #9382: switching from CommSemiring/Algebra to Semiring/Module here requires proving the curious lemma `IsScalarTower.isLinearMap` which states that for a tower of modules A/S/R, any S-linear map from S to A is also R-linear. If the map is injective, we can deduce that S/S/R also form a tower. (By `ringHomEquivModuleIsScalarTower` in #9381, there is therefore a canonical RingHom from R to S.)
    
    + Lemmas for free modules over rings including `finrank_mul_finrank'` are moved from FieldTheory/Tower to LinearAlgebra/Dimension/Free
    
    [Zulip](https://leanprover.zulipchat.com/#narrow/stream/116395-maths/topic/Puzzle.3A.20noncommutative.20RingHom.20as.20typeclasses/near/407347711)
    
    
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 77e5628ca26d49b9fe5b9e70b3ed6aefd9ad166a[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Mon Jan 8 19:08:32 2024 +0000

    feat(Analysis/NormedSpace/TrivSqZeroExt): generalize to topological spaces (#9491)
    
    These results are still true even if the exponential does not converge, because in those cases all the terms are zero.
    
    The `hasSum_fst_expSeries` lemma has been dropped because it's a trivial consequence of the new `fst_expSeries`; the fact that the series are elementwise equal.

[33mcommit cabd20e08a0f38867bc88d3b25bd55c60f71052f[m
Author: Andrew Yang <the.erd.one@gmail.com>
Date:   Mon Jan 8 18:09:08 2024 +0000

    feat: Rank-nullity theorem for commutative domains (#9412)
    
    
    
    
    Co-authored-by: Andrew Yang <36414270+erdOne@users.noreply.github.com>

[33mcommit ac9e42eab60c16744462e071f2686649373cd9bd[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Mon Jan 8 16:53:22 2024 +0000

    feat(Algebra/Homology): definition of the mapping cone (#9508)
    
    This PR defines the mapping cone of a morphism between cochain complexes.
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit dfdfce56f8b6a205d2a887e73a5d6867ed411e4b[m
Author: Christopher Hoskin <christopher.hoskin@gmail.com>
Date:   Mon Jan 8 16:53:20 2024 +0000

    refactor(LinearAlgebra/Matrix/BilinearForm): Derive BilinearForm results from SesquilinearForm (#9485)
    
    Give definitions in `LinearAlgebra/Matrix/BilinearForm` in terms of the equivalent definitions in `LinearAlgebra/Matrix/SesquilinearForm` and derive the `BilinearForm` results as effectively special cases of the equivalent results in `SesquilinearForm`. This reduces the length of  `LinearAlgebra/Matrix/BilinearForm` by over 100 lines.
    
    The aim is to:
    
    * Clarify how results in `BilinearForm` relate to results in `SesquilinearForm`
    * Reduce duplication of argument between the two files
    * Validate that the results in `SesquilinearForm` are sufficiently general to provide the results in `BilinearForm` in their existing form - in fact, some loosening of the hypothesis in `SesquilinearForm` is required. Further loosening was already applied in #9475
    
    
    
    Co-authored-by: Christopher Hoskin <mans0954@users.noreply.github.com>
    Co-authored-by: Christopher Hoskin <christopher.hoskin@overleaf.com>

[33mcommit 87fc4077dd59ce94e33a1f7b42b28c3cad6cd67b[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Jan 8 16:08:58 2024 +0000

    chore(LocallyCompact): rename the "of basis" constructor (#9327)
    
    Rename `locallyCompactSpace_of_hasBasis` to `LocallyCompactSpace.of_hasBasis`
    to allow the new-style dot notation.

[33mcommit f880f9c4d36144973951f8255fdea629c02feeac[m
Author: Geoffrey Irving <irving@naml.us>
Date:   Mon Jan 8 14:36:29 2024 +0000

    feat(Monotonicity): Register `subset_refl` as `mono` (#9547)
    
    `mono` already knows about various subset lemmas, but doesn't know that `s ‚äÜ s` which is useful for closing leaf goals.
    
    [Zulip
    discussion](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Understanding.20the.20gcongr.20relation.20restriction/near/411707075)

[33mcommit aab088c23d721e9492fe3188fec5266b8ee6e3e8[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Mon Jan 8 14:36:28 2024 +0000

    feat: `n‚Åª¬π ‚â§ 1` (#9533)
    
    From LeanAPAP

[33mcommit ca1a92f0ceb506e89f7a783a3fd7229193cd86b6[m
Author: Jz Pan <acme_pjz@hotmail.com>
Date:   Mon Jan 8 14:36:27 2024 +0000

    feat(FieldTheory/Adjoin): add `exists_finset_of_mem_adjoin` (#9524)

[33mcommit 417f344b6d5b5e820792c4a6ae79d6b8abae5053[m
Author: Jz Pan <acme_pjz@hotmail.com>
Date:   Mon Jan 8 14:36:25 2024 +0000

    feat(FieldTheory/IsSepClosed): add some results on separable closure and perfect field (#9522)
    
    - `IsSepClosure.isAlgClosure_of_perfectField`, `IsSepClosure.of_isAlgClosure_of_perfectField`: if `k` is a perfect field, then its separable closure coincides with its algebraic closure.
    - `IsSepClosed.isAlgClosed_of_perfectField`: a separably closed perfect field is also algebraically closed.
    - `Algebra.IsAlgebraic.[isSeparable_of_]perfectField`: if `L / K` is an algebraic extension, `K` is a perfect field, then `L / K` is separable and `L` is perfect.

[33mcommit 70edc53a39288814fcbe16e128d69068dc2432a1[m
Author: Jz Pan <acme_pjz@hotmail.com>
Date:   Mon Jan 8 14:36:24 2024 +0000

    doc(FieldTheory/IsAlgClosed/Basic): add a TODO (#9519)
    
    ... which is: prove that if `K / k` is algebraic, and any monic irreducible polynomial over `k` has a root in `K`, then `K` is algebraically closed (in fact an algebraic closure of `k`).
    
    Reference: <https://kconrad.math.uconn.edu/blurbs/galoistheory/algclosure.pdf>, Theorem 2. From the reference it looks like that the proof of this result needs purely inseparable argument, so probably it can't be done in this file.

[33mcommit 3b8d080f26cb4fe109978332949880414807a19d[m
Author: Xavier Xarles <xavier.xarles@uab.cat>
Date:   Mon Jan 8 14:36:23 2024 +0000

    feat: Generalizing some results from CommRing to CommSemiring  (#9512)
    
    Most of the changes are minor.
    
    
    
    Co-authored-by: Xavier Xarles <56635243+XavierXarles@users.noreply.github.com>
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit a6640ab745ac08984668bdf9e0c5b490a39b5836[m
Author: David Loeffler <d.loeffler.01@cantab.net>
Date:   Mon Jan 8 14:36:21 2024 +0000

    feat(Analysis.Normed.Group): Tannery's theorem (#9415)
    
    This adds Tannery's theorem, a useful result about interchanging sums and pointwise limits. See Zulip thread here: https://leanprover.zulipchat.com/#narrow/stream/217875-Is-there-code-for-X.3F/topic/Tannery's.20theorem
    
    Co-authored-by: Oskar Goldhahn <oskar@goldhahn.info>

[33mcommit 869c023356073049517fdc28f35c935f9ec2e0e8[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Jan 8 13:15:33 2024 +0000

    feat(Set/Function): define `Set.graphOn` (#9497)
    
    Also prove that `s : Set (Œ± √ó Œ≤)` is a graph of a function on a set
    if and only if `Prod.fst` is injective on `s`.

[33mcommit 23576877611b8d5256b824b88547376e15d24765[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Jan 8 13:15:32 2024 +0000

    fix(OuterMeasure): drop an unused `DecidablePred` assumption (#9496)
    
    Also add 2 `@[gcongr]` attributes

[33mcommit 4fc93c28241ef1316b227424e8512532974e07b5[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Mon Jan 8 13:15:31 2024 +0000

    chore: Move `WithTop` lemmas earlier (#9463)
    
    Part of #9411

[33mcommit 33c5d03b8a6057d3525dd1dbe6ba326abadc97af[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Mon Jan 8 13:15:30 2024 +0000

    chore: New file for lattice ordered groups (#9457)
    
    Split `Algebra.Order.LatticeGroup` into two files:
    * `Algebra.Order.Group.Lattice` for general properties of lattice ordered groups
    * `Algebra.Order.Group.PosPart` for properties of the positive and negative parts
    
    Note that the latter also contains properties of the absolute value. These will be moved to `Algebra.Order.Group.Abs` in a later PR.
    
    Part of #9411
    
    
    
    
    Co-authored-by: Parcly Taxel <reddeloostw@gmail.com>

[33mcommit 081b41aec6bbd9c5d6e18bf8207c0c898dcf53a7[m
Author: Scott Morrison <scott@tqft.net>
Date:   Mon Jan 8 13:15:29 2024 +0000

    feat: allow naming the hypothesis generated by have? (#9454)
    
    Previously, there was no way to specify the name for a hypothesis generated by `have?` (and if it suggested a let, it used an inaccessible `this`).
    
    (Also, fixes a problem with `observe?`, that the suggestion was not respecting the requested name.)
    
    
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 3d1cf78f4a4d3898ff5c5236f2af4e4bcf6dcdb4[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Jan 8 13:15:27 2024 +0000

    chore(*): use `‚àÉ x ‚àà s, p x` instead of `‚àÉ x (_ : x ‚àà s), p x` (#9326)
    
    This is a follow-up to #9215. It changes the following theorems and definitions:
    
    - `IsOpen.exists_subset_affineIndependent_span_eq_top`
    - `IsConformalMap`
    - `SimpleGraph.induce_connected_of_patches`
    - `Submonoid.exists_list_of_mem_closure`
    - `AddSubmonoid.exists_list_of_mem_closure`
    - `AffineSubspace.mem_affineSpan_insert_iff`
    - `AffineBasis.exists_affine_subbasis`
    - `exists_affineIndependent`
    - `LinearMap.mem_submoduleImage`
    - `Basis.basis_singleton_iff`
    - `atom_iff_nonzero_span`
    - `finrank_eq_one_iff'`
    - `Submodule.basis_of_pid_aux`
    - `exists_linearIndependent_extension`
    - `exists_linearIndependent`
    - `countable_cover_nhdsWithin_of_sigma_compact`
    - `mem_residual`
    
    Also deprecate `ENNReal.exists_ne_top'`.

[33mcommit 1583a7094b448719eacf478c2dc91f53a7c08280[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Mon Jan 8 13:15:26 2024 +0000

    feat: Extract a computable `Finsupp.extendDomain` from `restrictSupportEquiv` (#9325)
    
    This PR adds two constructions of finitely supported functions:
    * `Finsupp.piecewise`: define a finitely supported function from two functions, according to a decidable predicate
    * `Finsupp.extendDomain`: extends by 0 a finitely supported function on a subtype by 0.
    This is a computable version of `embDomain (.subtype _)`, which also has a simpler defeq.
    * adjust accordingly the definition of `Finsupp.restrictSupportEquiv`.
    
    This may be used to simplify some parts of #7904.

[33mcommit 303bf519cbf4803e1f9d5f721634c82b12b0fbcb[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Mon Jan 8 13:15:25 2024 +0000

    chore(Topology/Maps): small clean-ups (#9268)
    
    - Make sure each new definition is in a separate section.
    - Add corresponding namespaces where missing.
    - Collect `TopologicalSpace` assumptions.
    - Collect variables $\{f : \alpha \to \beta\}$ and $\{g : \beta \to \gamma\}$ in theorems; we leave definitions alone.
    - In a later PR, we will rename the type variables in this file: this reduces the diff in doing so.
    
    
    
    Co-authored-by: grunweg <grunweg@posteo.de>

[33mcommit 9df25a9447eac1e1f633803e9e1a4cf89198271b[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Mon Jan 8 13:15:24 2024 +0000

    chore: last LocalHomeomorph -> PartialHomeomorph renames (#9238)
    
    Follow-up to #8982; a few lemma names were still wrong.
    
    
    
    Co-authored-by: Winston Yin <winstonyin@gmail.com>

[33mcommit 3b800125fcf860c7a9c474ee6d3967e3d9d341f3[m
Author: Xavier Xarles <Xavier.Xarles@uab.cat>
Date:   Mon Jan 8 13:15:23 2024 +0000

    feat : generalize PrimeSpectrum from Ring to Semiring (#8763)
    
    Some results of PrimeSpectrum generalized from CommRing to CommSemiring.
    
    
    
    Co-authored-by: Xavier Xarles <56635243+XavierXarles@users.noreply.github.com>

[33mcommit 006e9a360babea5afbf54f1f91f54510e79064d8[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Mon Jan 8 12:05:53 2024 +0000

    chore: Move `a ^ m = b ^ n ‚Üî ‚àÉ c, a = c ^ n ‚àß b = c ^ m` (#9505)
    
    Those lemmas were very recently added in #9397. Also make them iffs and golf.
    
    Part of #9411

[33mcommit 4f9521601e74c84eb376c21958a12b707aa0fb83[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Mon Jan 8 12:05:52 2024 +0000

    chore: Move `(r ‚Ä¢ x) ^ n = r ^ n ‚Ä¢ x ^ n` earlier (#9502)
    
    Part of #9411

[33mcommit 2098be66fac3bea1e0368fe0b91a94b58602a74c[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Mon Jan 8 12:05:51 2024 +0000

    refactor: Generalise absolute value of continuous map to topological lattices (#9501)
    
    Delete `ContinuousMap.abs` in favor of the general construction in lattice ordered groups.
    
    Part of #9411

[33mcommit 8b2dcf6e138918fb9ca59fcfbe76f5705f9c8b4e[m
Author: Antoine Chambert-Loir <antoine.chambert-loir@u-paris.fr>
Date:   Mon Jan 8 12:05:50 2024 +0000

    feat (RingTheory/Ideal/QuotientOperations) : remove commutativity assumption (#9495)
    
    This PR removes commutativity instances on the target of lift lemmas as well as some equivalences.
    
    It adds two short lemmas:
    * `RingHom.quotientKerEquivRangeS`, a version of the first isomorphism theorem
    when the target is only a `Semiring`
    * `RingHom.ker_rangeSRestrict `, a version of `RingHom.ker_rangeRestrict` when the target is only a `Semiring`.
    
    
    
    Co-authored-by: Antoine Chambert-Loir <antoine.chambert-loir@math.univ-paris-diderot.fr>

[33mcommit afe6b29fd5ae8baf11db1d2c2921b9730d9f7ad0[m
Author: Scott Morrison <scott@tqft.net>
Date:   Mon Jan 8 11:01:33 2024 +0000

    chore: improvements to Presheaf simp lemmas (#9542)
    
    Various things break in the simpset for `Presheaf` when the simp algorithm changes in leanprover/lean4#3124. These backwards compatible fixes are, I think, improvements anyway.
    
    One could further add a `Presheaf.id_app` lemma, and do further cleanup in the proofs which now use `dsimp [-Presheaf.comp_app]`, but I'd prefer if these are done in a followup PR in order to not hold up #9500.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 320fe23c37cb6a064a724c26a7d16f4d30535692[m
Author: Scott Morrison <scott@tqft.net>
Date:   Mon Jan 8 11:01:32 2024 +0000

    chore: cleanup simp calls (#9539)
    
    Remove some unnecessary arguments in `simp` calls, which will become problematic when the `simp` algorithm changes in leanprover/lean4#3124.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 967b09faeadde5ad8672a8b39104ccdb25038e4e[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Jan 8 11:01:31 2024 +0000

    feat(Order/Filter): add `Frequently.uncurry` (#9536)

[33mcommit 028b969369cc3ac40886439ef55af1fb1a61ef84[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Mon Jan 8 11:01:30 2024 +0000

    chore(Data/Nat/Choose/Multinomial): Golf (#9534)
    
    and `n ! ‚â§ n ^ n`
    
    From LeanAPAP

[33mcommit 7445e7243c61f312d035670a064943386c259e5b[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Mon Jan 8 11:01:29 2024 +0000

    feat: Basic finset lemmas (#9530)
    
    From LeanAPAP

[33mcommit f5eb4a83774ea1d7cfa247b84aedacc7e37c9879[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Jan 8 11:01:27 2024 +0000

    chore(Filter/AtTopBot): golf (#9521)
    
    Golf lemmas about sequential convergence and related concepts.
    Also add `Filter.frequently_iff_seq_forall`.

[33mcommit 494478bf8809a6197efc24a4ee1fc7b02edca0e8[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Mon Jan 8 11:01:26 2024 +0000

    chore: Rename `rpow_nonneg_of_nonneg` to `rpow_nonneg` (#9518)
    
    This better matches other lemma names.
    
    From LeanAPAP

[33mcommit 46aac50e292296192e3b4030a2a1c2919fabbc5f[m
Author: Scott Morrison <scott@tqft.net>
Date:   Mon Jan 8 09:51:32 2024 +0000

    chore: replace a proof in Combinatorics/Composition (#9540)
    
    This proof has been causing timeouts for both leanprover/lean4#3124 and leanprover/lean4#3139 (and its in-progress fixes), so I'm just fixing it pre-emptively here.
    
    (Fix due to @joehendrix.)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit f8a022db62df8a5907195e9546ebd1593ab75e6a[m
Author: Scott Morrison <scott@tqft.net>
Date:   Mon Jan 8 09:51:31 2024 +0000

    chore: remove a bad @[simp] in Control/Traversable (#9538)
    
    This @[simp] attribute was bad all along, and with a change to the simp algorithm in leanprover/lean4#3124, finally starting breaking things.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 5618e4318bfd1fcd653dba5baf6373bb64237264[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Jan 8 09:51:30 2024 +0000

    chore(*): use Œ± ‚Üí Œ≤ instead of ‚àÄ _ : Œ±, Œ≤ (#9529)

[33mcommit 1de7e6632c661b383aecc389f7e89d7033d3ab46[m
Author: Jz Pan <acme_pjz@hotmail.com>
Date:   Mon Jan 8 09:51:29 2024 +0000

    chore(FieldTheory/SeparableDegree): add `Separable.natSepDegree_eq_natDegree` and golf (#9525)
    
    ... which is the same as `Polynomial.natSepDegree_eq_natDegree_of_separable`, but enables the use of dot notation.

[33mcommit 6688f914e9671b60e88db3c19411b04c84749f2d[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Jan 8 08:42:14 2024 +0000

    chore(UnitInterval): golf (#9544)

[33mcommit 78002f2f2810dcced56181b7e4bb026f6ba23f2d[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Jan 8 08:42:13 2024 +0000

    feat(Set/Pairwise): add 2 lemmas (#9499)
    
    Add `Set.injOn_iff_pairwise_ne` and `Set.Pairwise.image`.

[33mcommit 03bf774359b9e2b8ea4f21537284b015731dee35[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Jan 8 08:22:23 2024 +0000

    chore(*): use `‚àû` for `‚ä§ : ENNReal` (#9541)

[33mcommit 9f6d33884de569540c527b667d1573e1b97e1347[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sun Jan 7 19:34:35 2024 +0000

    chore(*): replace `$` with `<|` (#9319)
    
    See [Zulip thread](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Coding.20style.3A.20.3C.7C.20vs.20.24) for the discussion.

[33mcommit d274b397a4549b1c948999dc1a2076df32c5e10b[m
Author: Michael Stoll <Michael.Stoll@uni-bayreuth.de>
Date:   Sun Jan 7 18:13:16 2024 +0000

    feat: estimates for the complex logarithm (#9270)
    
    This PR adds estimates for the difference of the complex logarithm `log (1+z)` and its `n`th Taylor polynomial in terms of `‚Äñz‚Äñ` when `‚Äñz‚Äñ < 1`.
    
    See [this thread](https://leanprover.zulipchat.com/#narrow/stream/217875-Is-there-code-for-X.3F/topic/Power.20series.20.2F.20bound.20for.20complex.20logarithm/near/401637775) on Zulip.

[33mcommit a7c1abf55b6ba5e31f1ff40d07ada10b980d6e4b[m
Author: Winston Yin <winstonyin@gmail.com>
Date:   Sun Jan 7 11:52:57 2024 +0000

    feat: `ContMDiffOn.congr_mono` (#9507)
    
    Mirror `ContDiffOn.congr_mono`.

[33mcommit de9d093dd38362a27b79826d42f512bf330ba6d0[m
Author: Winston Yin <winstonyin@gmail.com>
Date:   Sun Jan 7 11:52:57 2024 +0000

    feat: add trans assoc type lemmas for `(Partial)Equiv` and `(Partial)Homeomorph` (#9506)
    
    Let `e`s denote `Equiv`s and `f`s denote `PartialEquiv`s. Let `>` denote `Equiv.trans`, `PartialEquiv.trans`, `Equiv.transPartialEquiv`, or `PartialEquiv.transEquiv`. We want to simplify expressions like `e1 > e2 > f3 > f4 > e5 > e6` to `(e1 > e2) > (f3 > f4) > (e5 > e6)`, so that simp lemmas about `Equiv.trans` and `PartialEquiv.trans` may apply. This means adding four lemmas:
    1. `e1 > e2 > f3 = (e1 > e2) > f3`
    2. `(e1 > f2) > f3 = e1 > (f2 > f3)`
    3. (1) with `e` and `f` flipped
    4. (2) with `e` and `f` flipped
    
    The definitions `Equiv.transPartialEquiv` and `PartialEquiv.transEquiv` are moved to later in the document, so that they stay together with these lemmas. The argument order of these two definitions has also been reversed so as to match `Equiv.trans` and `PartialEquiv.trans`.
    
    The same is done for `Homeomorph`/`PartialHomeomorph`.

[33mcommit 83b4d8dbdcb67f494dae13499b44457b84634eca[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Sun Jan 7 10:52:05 2024 +0000

    feat: Every star ring is a `Nat`-star module (#9470)
    
    and other basic star lemmas
    
    From LeanAPAP

[33mcommit b6d00f332a44cf49d557187760435e61c94d7e06[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sun Jan 7 09:42:46 2024 +0000

    chore(Covering/Besicovitch): golf, reflow lines (#9498)

[33mcommit 526457f3dc192dd9195993e0a48c9374b81af9c7[m
Author: Antoine Chambert-Loir <antoine.chambert-loir@u-paris.fr>
Date:   Sat Jan 6 21:08:42 2024 +0000

    feat(RingTheory/Ideal/Quotient): assume Semiring instance instead of CommRing (#9493)
    
    Ideal.Quotient.lift only needs `Semiring S` on the target to work.
    
    This PR only changes one line : `variable [CommRing S]` to `variable [Semiring S]`
    
    
    
    Co-authored-by: Antoine Chambert-Loir <antoine.chambert-loir@math.univ-paris-diderot.fr>

[33mcommit 1b3fb343cf614b07bdaf8ab1f38429941b0006c3[m
Author: Andrew Yang <the.erd.one@gmail.com>
Date:   Sat Jan 6 20:00:22 2024 +0000

    feat: Criteria for `X ^ n - C a` to be irreducible for odd `n`. (#9397)
    
    
    
    
    Co-authored-by: Andrew Yang <36414270+erdOne@users.noreply.github.com>

[33mcommit c99fdac20b8f2f7a46eff28374e6d6f5fa4ea582[m
Author: Antoine Chambert-Loir <antoine.chambert-loir@u-paris.fr>
Date:   Sat Jan 6 18:06:50 2024 +0000

    feat(GroupTheory/Perm/DomMulAct) : Subgroup of `Equiv.Perm Œ±` preserving a function `p : Œ± ‚Üí Œπ` (#9342)
    
    Subgroup of `Equiv.Perm Œ±` preserving a function
    
    Let `Œ±` and `Œπ` by types and let `p : Œ± ‚Üí Œπ`
    
    * `DomMulAct.mem_stabilizer_iff` proves that the stabilizer of `p : Œ± ‚Üí Œπ`
      in `(Equiv.Perm Œ±)·µà·µê·µÉ` is the set of `g : (Equiv.Perm Œ±)·µà·µê·µÉ` such that `p ‚àò (mk.symm g) = p`.
    
      The natural equivalence from `stabilizer (Perm Œ±)·µà·µê·µÉ p` to `{ g : Perm Œ± // p ‚àò g = p }`
      can be obtained as `subtypeEquiv mk.symm (fun _ => mem_stabilizer_iff)`
    
    * `DomMulAct.stabilizerMulEquiv` is the `MulEquiv` from
      the MulOpposite of this stabilizer to the product,
      for `i : Œπ`, of `Equiv.Perm {a // p a = i}`.
    
    * Under `Fintype Œ±` and `Fintype Œπ`, `DomMulAct.stabilizer_card p` computes
      the cardinality of the type of permutations preserving `p` :
      `Fintype.card {f : Perm Œ± // p ‚àò f = p} =
          ‚àè i , (Fintype.card ({a // p a = i})).factorial`
    
    Co-Authored by : Junyan Xu <junyanxu.math@gmail.com>
    
    
    
    Co-authored-by: Antoine Chambert-Loir <antoine.chambert-loir@math.univ-paris-diderot.fr>
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>

[33mcommit 8532fe9fad7f259ea7b9a3844c324a0f26067aac[m
Author: Scott Carnahan <128885296+ScottCarnahan@users.noreply.github.com>
Date:   Sat Jan 6 18:06:48 2024 +0000

    feat: define BinomialRing mixin (#6934)
    
    This file introduces the `BinomialRing` mixin (for semirings) and the `Ring.multichoose` function, which generalizes `Nat.multichoose`.  These are preliminaries to introducing generalized binomial coefficients.
    
    
    
    Co-authored-by: Jujian Zhang <jujian.zhang1998@outlook.com>
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>
    Co-authored-by: ScottCarnahan <scottcarnahan@gmail.com>

[33mcommit 9cbd1e212fd6672734f7707e7a2620c137557e75[m
Author: Junyan Xu <junyanxumath@gmail.com>
Date:   Sat Jan 6 17:34:35 2024 +0000

    feat: uliftFunctor preserves arbitrary colimits (#8545)
    
    Rescuing and porting my [old proof](https://leanprover.zulipchat.com/#narrow/stream/217875-Is-there-code-for-X.3F/topic/tensor.20products.20commute.20with.20direct.20limits/near/275178330) now that @dagurtomas created a file for it. Also includes some universe generalizations in the file Limits/Types which overlap with @joelriou's #7020.
    
    
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>

[33mcommit 5dcfd14464c9f42d946da0e852704399fd23c782[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Sat Jan 6 15:29:41 2024 +0000

    feat(Algebra/Homology): the cylinder of a homological complex (#9483)
    
    In this PR, the cylinder object of a homological complex is constructed. It is used to show that a functor which inverts homotopy equivalences sends homotopic maps to the same map. In the future, it shall be used in order to show that homotopic maps become equal in the derived category.

[33mcommit f292905b09034ac8203bf89674589d86f032f15b[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Sat Jan 6 14:22:44 2024 +0000

    feat: Any derivative is equal to `deriv` (#9481)
    
    stated using `Set.EqOn`
    
    From LeanAPAP

[33mcommit 47ca2853c20619c9dfbefac1a25114a4d4c31dc9[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Sat Jan 6 14:22:43 2024 +0000

    feat: `c ‚Ä¢ x = 0 ‚Üî c = 0` and similar lemmas (#9390)
    
    and rename and generalise `smul_eq_zero_iff_eq'`/`smul_ne_zero_iff_ne'`
    
    From LeanAPAP

[33mcommit 66b9ecc95725f39879b0a04e500249702af13415[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Sat Jan 6 14:22:42 2024 +0000

    feat: Finite sum under an injective map (#9226)
    
    From PFR

[33mcommit fa82996c033928a69e22764c8b4d19ef95ed22f5[m
Author: Michael Stoll <Michael.Stoll@uni-bayreuth.de>
Date:   Sat Jan 6 13:21:53 2024 +0000

    feat(Data/Real/EReal): add lemmas about intervals (#9404)
    
    This adds statements like `lemma Ici_of_Real {x : ‚Ñù} : Real.toEReal '' Set.Ici x = Set.Ico ‚Üëx ‚ä§` for the eight kinds of intervals (plus versions of `exists_between` when one endpoint is a real number).
    
    See [here](https://leanprover.zulipchat.com/#narrow/stream/217875-Is-there-code-for-X.3F/topic/sInf.20.28Real.2EtoEReal.20'.20'.20.2E.2E.2E.29/near/410765558) on Zulip.

[33mcommit 63e722e8278ed555d8169b25b8fd18353660a1c3[m
Author: Junyan Xu <junyanxumath@gmail.com>
Date:   Sat Jan 6 13:21:52 2024 +0000

    feat(Algebra): generalize `Basis.smul` (#9382)
    
    Add various `LinearMap.CompatibleSMul` instances that ultimately lead to generalization of `Basis.smul` to allow a noncommutative base ring. The key observations that allows the generalization are `IsScalarTower.smulHomClass` and `isScalarTower_of_injective`.
    
    
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>

[33mcommit 39e9756207780e5de895eca1e3709929cf031ed1[m
Author: Andrew Yang <the.erd.one@gmail.com>
Date:   Sat Jan 6 13:21:52 2024 +0000

    feat: Cyclic extensions are kummer. (#9368)
    
    
    
    
    Co-authored-by: Andrew Yang <36414270+erdOne@users.noreply.github.com>

[33mcommit 6c1c802675318307f781a3432071d0d8ac9adfb2[m
Author: Andrew Yang <the.erd.one@gmail.com>
Date:   Sat Jan 6 13:21:51 2024 +0000

    feat: Define `IsUnramifiedAtInfinitePlaces`. (#9293)
    
    
    
    
    Co-authored-by: Andrew Yang <36414270+erdOne@users.noreply.github.com>

[33mcommit a2b7daf4f022ec3fbc393df0757c0ec7afb9db48[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sat Jan 6 12:14:33 2024 +0000

    chore(Finset/Lattice): add `simp` to `sup_image`/`inf_image` (#9340)

[33mcommit 87ffb3616494b1b1323a4361c57b58b7b28d5d23[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Sat Jan 6 11:11:02 2024 +0000

    chore: move a few results from `Archive.Hairer` into mathlib (#9315)
    
    
    
    Co-authored-by: Ya√´l Dillies <yael.dillies@gmail.com>

[33mcommit 2ec321026e0214c8c06531e872f8ccac8f498f77[m
Author: Junyan Xu <junyanxumath@gmail.com>
Date:   Sat Jan 6 09:51:17 2024 +0000

    feat(minpoly): equivalent conditions for degree = 1 or ‚â• 2 (#9479)
    
    
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>

[33mcommit cd6e906efd6d2a653004f0d9c468b368b95e9873[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sat Jan 6 09:51:15 2024 +0000

    chore(Set/Function): don't use `Sort _` (#9478)
    
    Use `Sort*` or `Type*` instead. Also slightly golf 1 proof.

[33mcommit 95f4d79378a2e13fee205a04950ddafce9537734[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Sat Jan 6 09:51:14 2024 +0000

    feat(Analysis/Matrix): `linfty_op_nnnorm` agrees with the operator norm (#9476)
    
    The witness used in the proof is inspired by https://math.stackexchange.com/a/1119933/1896.
    Trying to weaken the field assumption used in the proof is largely meaningless, since we can't even state the theorem without it.

[33mcommit f20d8884704250813f3626e6a412bec66edce073[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Sat Jan 6 09:51:13 2024 +0000

    feat: relate `Matrix.conjTranspose` to `LinearMap.adjoint` (#9471)

[33mcommit 465865c046c6c93d64a95a9fc98d126eb1185b7e[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Sat Jan 6 09:51:12 2024 +0000

    feat: show matrices form a `UniformAddGroup` (#9468)

[33mcommit 7522333a174f8732fb5dc74bd22577480b44d681[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Sat Jan 6 09:51:11 2024 +0000

    Chore: Move `Units` lemmas earlier (#9461)
    
    Part of #9411
    
    
    
    
    Co-authored-by: Jeremy Tan Jie Rui <reddeloostw@gmail.com>

[33mcommit 49f7d612f993fc35748e98f9deed9c18f51a90d0[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Sat Jan 6 09:51:10 2024 +0000

    refactor: Split off basic `Int` file (#9443)
    
    `Data.Int.Basic` is currently made of two things:
    * Basic lemmas that continue the theory in Std (and could belong there, really)
    * Basic algebraic order instances
    
    I need the first ones earlier in the algebraic order hierarchy, hence the split.
    
    Part of #9411
    
    
    
    
    Co-authored-by: Parcly Taxel <reddeloostw@gmail.com>

[33mcommit 6dafc7f7fddc2e7a11a703c86c26e2dd968a4989[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Sat Jan 6 09:51:09 2024 +0000

    refactor: change argument order in `with` clause of `peel` tactic (#9413)
    
    Per this [Zulip thread](https://leanprover.zulipchat.com/#narrow/stream/217875-Is-there-code-for-X.3F/topic/pulling.20continuity.20past.20integrals/near/411065361), this changes the argument order of `peel h with h_peel x y z ...` to `peel h with x y z ... h_peel`, as the former behavior was deemed confusing.

[33mcommit 90bee82aba21b9c3b7b5980efa807de24fbe70e9[m
Author: Junyan Xu <junyanxumath@gmail.com>
Date:   Sat Jan 6 09:51:08 2024 +0000

    feat: generalize `Module.Finite.trans` (#9380)
    
    Add `span_eq_closure` and `closure_induction` which say that `Submodule.span R s` is generated by `R ‚Ä¢ s` as an AddSubmonoid. I feel that the existing `span_induction` should be replaced by `closure_induction` as the latter is stronger, and allow us to remove the commutativity condition in `span_smul_of_span_eq_top` in Algebra/Tower and generalize `Module.Finite.trans` to allow a non-commutative base ring.
    
    
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>

[33mcommit 4bd6aa25b85c3d8548582d98e1409e1d35d1cc49[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sat Jan 6 09:51:07 2024 +0000

    chore(Data/Finset): drop some `Nonempty` arguments (#9377)
    
    * rename `Finset.Nonempty.image_iff` to `Finset.image_nonempty`, deprecate the old version;
    * rename `Set.nonempty_image_iff` to `Set.image_nonempty`, deprecate the old version;
    * drop unneeded `Finset.Nonempty` arguments here and there;
    * add versions of some lemmas that assume `Nonempty s` instead of `Nonempty (s.image f)` or `Nonempty (s.map f)`.

[33mcommit 82354164f0649657098e6c54cefbfa600b0b9dfe[m
Author: Andrew Yang <the.erd.one@gmail.com>
Date:   Sat Jan 6 09:51:06 2024 +0000

    feat: Provide glue between `AddCommGroup` and `Module ‚Ñ§` (#9345)
    
    
    
    Co-authored-by: Andrew Yang <36414270+erdOne@users.noreply.github.com>

[33mcommit 357e37bbf050a1bf9d5db36bb4ee850e12e3e855[m
Author: Christopher Hoskin <christopher.hoskin@gmail.com>
Date:   Sat Jan 6 09:04:43 2024 +0000

    refactor(LinearAlgebra) : Remove unused commutativity hypothesis (#9475)
    
    Remove unused commutativity hypothesis:
    
    * Removes the requirement for the Semirings to be commutative in `LinearMap.ext_basis` and `LinearMap.sum_repr_mul_repr_mul‚Çõ‚Çó` in `LinearAlgebra/Basis/Bilinear`
    * Remove the requirement for some Semirings to be commutative in `AuxToLinearMap`, `CommSemiring` and `CommRing` in `LinearAlgebra/Matrix/SesquilinearForm`
    * In addition, the rings in `CommRing` can just be `Semiring`
    
    No changes to the proofs are required.
    
    It would also be possible to weaken commutativity from `R‚Çó` in `LinearMap.sum_repr_mul_repr_mul` to `[SMulCommClass R‚Çó R‚Çó P‚Çó]` in order to make `sum_repr_mul_repr_mul‚Çõ‚Çó` and `sum_repr_mul_repr_mul` consistent, but I have not done that in this PR because there might be a performance impact (see https://github.com/leanprover-community/mathlib4/pull/7538#pullrequestreview-1663000126).
    
    
    
    Co-authored-by: Christopher Hoskin <mans0954@users.noreply.github.com>
    Co-authored-by: Christopher Hoskin <christopher.hoskin@overleaf.com>

[33mcommit c6529053211bed9dd64a3ad40836b30ff1e3eac9[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Sat Jan 6 05:23:43 2024 +0000

    fix(Analysis/NormedSpace/OperatorNorm): muddled norm and nnnorm (#9473)
    
    This is a lemma about `nnnorm`, but it seems one of the arguments was forgotten.

[33mcommit 26ccd1e9cdd53bee750bb6fba6f40db23a7d88f5[m
Author: Xavier Xarles <xavier.xarles@uab.cat>
Date:   Fri Jan 5 18:57:29 2024 +0000

    feat (Mathlib/Algebra/Regular/Basic.lean): Add lemmas on RightRegular (#9464)
    
    A couple of lemmas on RightRegular that could be useful for future work on Localization

[33mcommit 401d91423d3f391ed8af1b0212c02bb0d2de3a85[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Fri Jan 5 17:56:11 2024 +0000

    chore: Downgrade `Algebra.Associated` (#9459)
    
    Part of #9411

[33mcommit b180173c90858e2031655e09a7165dbf1048324a[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Fri Jan 5 14:50:14 2024 +0000

    feat(Algebra/Homology): morphisms from the homotopy cofiber (#9447)
    
    In this PR, we obtain `HomologicalComplex.homotopyCofiber.descEquiv` which expresses that if `œÜ : F ‚ü∂ G` is a morphism of homological complexes, then a morphism `homotopyCofiber œÜ ‚ü∂ K` is uniquely determined by a morphism `Œ± : G ‚ü∂ K` and a homotopy from `œÜ ‚â´ Œ±` to `0`.

[33mcommit 710ecf07b6341bb7c2eaaa859d11eb203908074e[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Fri Jan 5 14:50:13 2024 +0000

    feat(Algebra/Homology): left shifting cochains (#9054)
    
    In this PR, we study the behaviour of cochains (of the complex of homomorphisms) with respect to shifts on the source. In particular, we obtain an additive equivalence `leftShiftAddEquiv K L n a n' h : Cochain K L n ‚âÉ+ Cochain K‚ü¶a‚üß L n'` when `h : n + a = n'`.
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit e3d1c7ac9287a32cf97e7344cf6a2fa3643a55c7[m
Author: Xavier Xarles <xavier.xarles@uab.cat>
Date:   Fri Jan 5 13:39:42 2024 +0000

    feat(Mathlib/Algebra/Ring/Basic): Subsingleton, NoZeroDivisors and IsDomain  (#9407)
    
    Added some results relating NoZeroDivisors and IsDomain for Ring.
    
    
    
    Co-authored-by: Xavier Xarles <56635243+XavierXarles@users.noreply.github.com>
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit cace5e5a41e710524f0925ac3495cca0592718f8[m
Author: JADekker <114015169+JADekker@users.noreply.github.com>
Date:   Fri Jan 5 13:07:01 2024 +0000

    feat : Add Gamma distribution (#9408)
    
    Add pdf, CDF and measure of Gamma distribution.
    Add proof that this is indeed a probability distribution. Add proofs that relate the various definitions.
    
    TODO: Refactor Probability/Distributions/Exponential.lean using calls to
      the results in this file.
    
    
    
    
    Co-authored-by: David Loeffler <d.loeffler.01@cantab.net>

[33mcommit cf880ce2037c087a1b55cf77afd149174ac8484c[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Fri Jan 5 11:32:33 2024 +0000

    chore: Move scalar compatibility instance for `‚Ñ§` and `‚Ñï` on rings to their own files (#9455)
    
    Part of #9411.
    
    Also corrects some instance names in the docstrings.
    
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 0c2c47a251778888dfdce286658188278efe6c95[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Fri Jan 5 11:32:32 2024 +0000

    feat(Algebra/QuaternionBasis): extensionality for algebra morphisms from quaternions (#9441)
    
    This result was basically already here, this just registers it with `ext`.

[33mcommit c8d50df101dfbcab82880b4850ce4ece7922d83a[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Fri Jan 5 11:32:31 2024 +0000

    chore: Move `Commute` results earlier (#9440)
    
    These lemmas aren't really proved any faster using units, and I will soon need them not to be proved using units.
    
    Part of #9411

[33mcommit 57ca123151b29b04281afbcb84d51d845b62ae22[m
Author: Oliver Nash <github@olivernash.org>
Date:   Fri Jan 5 11:32:30 2024 +0000

    feat: refactor lemma `LieModule.dualAnnihilator_ker_traceForm_le_span_weight` (#9047)
    
    Also add some API for related results such as `LinearMap.dualCoannihilator_range_eq_ker_flip`, which is not needed here but worth having.
    
    
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>

[33mcommit e1da93fc327a8f558ac37dfdba87c42c5fa0215f[m
Author: Winston Yin <winstonyin@gmail.com>
Date:   Fri Jan 5 11:32:28 2024 +0000

    feat(Geometry/Manifold/VectorBundle/Tangent): tangentCoordChange (#8672)
    
    We define `tangentCoordChange` as a convenient abbreviation for coordinate changes on the tangent bundle. We also restate the axioms of `VectorBundleCore` as lemmas involving `extChartAt`.
    
    Currently, we need to write `(tangentBundleCore I M).coordChange (achart H x) (achart H y)`, referring explicitly to the atlas of `M`. Since `tangentBundleCore` uses the same base sets as the preferred charts of the base manifold, we wish to work directly with points `x y : M` and the preferred extended charts at those points (`extChartAt`).
    
    We find this definition and related lemmas useful in #8483 in shortening proofs.

[33mcommit a5346b6b0de2a269b02d7046418916a1ba5e3a86[m
Author: Winston Yin <winstonyin@gmail.com>
Date:   Fri Jan 5 10:45:53 2024 +0000

    chore: rename in `PartialEquiv`, `Homeomorph`, `PartialHomeomorph` (#9430)
    
    Items 4-5 in [reference Zulip](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Assorted.20renames/near/411096017)
    
    Also added `symm` and `trans` definitions for `PartialEquiv`, `Homeomorph`, and `PartialHomeomorph`.

[33mcommit 4d385393cd569f08ac30425ef886a57bb10daaa5[m
Author: L <hi@llllvvuu.dev>
Date:   Fri Jan 5 10:17:16 2024 +0000

    feat: `IndepFun.symm` of different domains (#9425)
    
    
    
    Co-authored-by: L Lllvvuu <git@llllvvuu.dev>

[33mcommit a310a89b3b6adc75dcde4df238382a90c1888d6c[m
Author: Winston Yin <winstonyin@gmail.com>
Date:   Fri Jan 5 09:42:52 2024 +0000

    feat: Boundaryless manifold (#9323)
    
    This is a more general notion of boundaryless manifold than `ModelWithCorners.Boundaryless`, which requires the `ModelWithCorners` to map to the whole model vector space.
    
    To justify this new type class, consider the interior of a manifold with non-empty boundary. It inherits a manifold structure via its embedding, and it would be convenient to use the same `ModelWithCorners` for the interior as for the whole space. Even though the interior is boundaryless, its inherited `ModelWithCorners` doesn't satisfy `ModelWithCorners.Boundaryless`.

[33mcommit 901b783268f6721b515cbf39eddfb07db4fba5ed[m
Author: Jeremy Tan Jie Rui <reddeloostw@gmail.com>
Date:   Fri Jan 5 06:57:28 2024 +0000

    feat: Zhu Shijie's identity (#9427)
    
    Cf. https://leanprover.zulipchat.com/#narrow/stream/270676-lean4/topic/Proof.20of.20Combinatorial.20Identities/near/411120131

[33mcommit b50557ce70bf397971b2ba89d7c532c36a163e5f[m
Author: JADekker <114015169+JADekker@users.noreply.github.com>
Date:   Fri Jan 5 05:55:40 2024 +0000

    feat: Add Uncountable (#9254)
    
    Adds the Uncountable class to `Countable/Defs` and some basic API.
    
    
    
    Co-authored-by: Yury G. Kudryashov <urkud@urkud.name>

[33mcommit 03433adfeb0da75f13881091b7855256a83624e9[m
Author: Scott Morrison <scott@tqft.net>
Date:   Fri Jan 5 04:56:48 2024 +0000

    chore: prune proofwidgets oleans (#9450)
    
    The `.olean` files delivered via Lake from ProofWidgets have often been built using a different toolchain than Mathlib wants. These have been a perennial source of problems, and it seems easiest to just discard them and rely on the local build to generate them correctly.
    
    (This change was made by Joachim on `nightly-testing`, this PR is porting it back to `master`.)
    
    @tydeu @nomeata @digama0
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 26348e8e469e162d62a79517f657900ea9f2c1a6[m
Author: Scott Morrison <scott@tqft.net>
Date:   Fri Jan 5 02:29:29 2024 +0000

    chore: remove unused `cases'` names (#9451)
    
    These unused names will soon acquire a linter warning. Easiest to clean them up pre-emptively.
    
    (Thanks to @nomeata for fixing these on `nightly-testing`.)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit cf7dace5515a411aa3f1b427d523040ce06b15d2[m
Author: Scott Morrison <scott@tqft.net>
Date:   Fri Jan 5 02:29:28 2024 +0000

    chore: bump ProofWidgets to v0.0.25 (#9448)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 2297cb1e9dac65b4f83b5ba470bc069e2d53d2bc[m
Author: David Renshaw <dwrenshaw@gmail.com>
Date:   Fri Jan 5 01:23:51 2024 +0000

    fix: add beta reduction in BigOperator norm_num extensions (#9446)
    
    Inserts a call to `Expr.betaRev` in the `cons` case of `evalFinsetBigop`. This prevents `norm_num` from getting stuck on a beta redex applied to a nat literal, as currently happens in the third example below:
    
    ```lean
    import Mathlib.Tactic.NormNum
    import Mathlib.Tactic.NormNum.BigOperators
    
    open BigOperators
    
    -- works
    example : (‚àë i in Finset.range 10, (i^2 : ‚Ñï)) = 285 := by norm_num1
    
    -- also works (via the evalOfNat extension)
    example : (‚àë i in Finset.range 10, (OfNat.ofNat i)) = 45 := by norm_num1
    
    -- does not work
    example : (‚àë i in Finset.range 10, i) = 45 := by norm_num1
    ```
    
    Also, adds a test and removes some unnecessary parens from neighboring tests.

[33mcommit 19557c783a5ea8214203e763f27787acbb048bf3[m
Author: Scott Morrison <scott@tqft.net>
Date:   Fri Jan 5 01:23:50 2024 +0000

    chore: bump std4 dependency (#9426)
    
    This is quite a substantial bump as `Nondet` / `backtrack` / `solve_by_elim` have all moved to Std.
    
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 86decee4d83d85770dda012b1bc1c2329a02f773[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Fri Jan 5 00:28:18 2024 +0000

    chore(Tactic/CancelDenoms/Core): slightly Qq-ify and golf (#9421)
    
    Using a stronger type for `synthesizeUsingNormNum` removes the need for a handful of `let`s.

[33mcommit 8e19af95a024bb65b32488e4d2f67c7ab142977f[m
Author: Winston Yin <winstonyin@gmail.com>
Date:   Thu Jan 4 23:32:25 2024 +0000

    chore: Rename over-general names (#9429)
    
    Items 1-3 in [reference Zulip](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Assorted.20renames/near/411096017)
    
    Rename `chartedSpace`, `smoothMfldWithCorners`, and `funLike`.

[33mcommit 02d418dd90a607cd0960d41ce0f59e44dc9cd3a0[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Thu Jan 4 22:32:41 2024 +0000

    chore: Move `MulOpposite.op_pow` (#9442)
    
    These lemmas can actually be proved much earlier than they were.
    
    Part of #9411

[33mcommit 561e9afe588e73cfb54b17c88ada0180f15719f0[m
Author: JADekker <114015169+JADekker@users.noreply.github.com>
Date:   Thu Jan 4 18:16:26 2024 +0000

    feat(Order/Filter) : add 2 constructors (#9200)
    
    Add two constructors to create filters from a property on sets:
    - `Filter.comk` if the property is stable under finite unions and set shrinking.
    - `Filter.ofCountableUnion` if the property is stable under countable unions and set shrinking
    
    `Filter.comk` is the key ingredient in `IsCompact.induction_on` but may be convenient to have as individual building block.
    A `Filter` generated by `Filter.ofCountableUnion` is a `CountableInterFilter`, which is given by the instance `Filter.countableInter_ofCountableUnion`.
    
    ### Other changes
    
    - Use `Filter.comk` for `Filter.cofinite`, `Bornology.ofBounded` and `MeasureTheory.Measure.cofinite`.
    - Use `Filter.ofCountableUnion` for `MeasureTheory.Measure.ae`.
    - Use `{_ : Bornology _}` instead of `[Bornology _]` in some lemmas so that `rw/simp` work with non-instance bornologies.
    
    
    
    Co-authored-by: Yury G. Kudryashov <urkud@urkud.name>

[33mcommit 95f91f8e66f14c0eecde8da6dbfeff39d44cbd81[m
Author: Chris Wong <lambda.fairy@gmail.com>
Date:   Thu Jan 4 10:15:58 2024 +0000

    fix(Cache): don't check stderr for shell commands (#9434)
    
    #9419 caused `lean exe cache unpack` to fail with this error:
    
    ```
    installing leantar 0.1.10
    uncaught exception:   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                     Dload  Upload   Total   Spent    Left  Speed
      0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
    100  954k  100  954k    0     0  1608k      0 --:--:-- --:--:-- --:--:-- 1608k
    ```
    
    This is because `Cache.IO.runCmd` was changed to check `!stderr.isEmpty`, but by default `curl` prints a progress bar which fails this check.

[33mcommit b6aa685200bdd74ba470a4e517a4996203bc8218[m
Author: Jeremy Tan Jie Rui <reddeloostw@gmail.com>
Date:   Thu Jan 4 09:05:47 2024 +0000

    feat: deprecate `div_le_div_of_le_of_nonneg` (#9399)
    
    This was noticed in the discussion around #9393.

[33mcommit f61a485edf966de0b09bd70c1edc7f254cd1b0ae[m
Author: Jeremy Tan Jie Rui <reddeloostw@gmail.com>
Date:   Thu Jan 4 07:13:13 2024 +0000

    feat: move `replaceVertex` to its own file (#9400)

[33mcommit 7c0310106360d5bede3c6ce86ef6d369e5efb6f0[m
Author: Mario Carneiro <mcarneir@andrew.cmu.edu>
Date:   Thu Jan 4 04:39:26 2024 +0000

    fix: partial revert of #9409 (re-enable Azure cache) (#9419)
    
    As [reported on Zulip](https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/The.20cache.20doesn't.20work/near/411058849), we're still working out some issues in the new cache provider. Since Azure is back online, let's move back to them while we work out the issues with cloudflare. The code is now set up to be able to toggle between both.
    
    
    
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>

[33mcommit 6117aba61f2e9e01bb5a94867e0602a118ba3d56[m
Author: Scott Morrison <scott@tqft.net>
Date:   Thu Jan 4 03:16:59 2024 +0000

    chore: bump dependencies (#9424)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 570a85ce6f479ac461960288102a793f941bd8b8[m
Author: Johan Commelin <johan@commelin.net>
Date:   Thu Jan 4 01:46:08 2024 +0000

    chore: rename Finset.card_doubleton to Finset.card_pair (#9379)

[33mcommit 26c28adfd0e2ebe738b1e9e210e7e6f3ad53b9e9[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Wed Jan 3 20:40:42 2024 +0000

    chore: Tag `abs_le_abs_of_nonneg` as `gcongr` (#9391)
    
    From LeanAPAP

[33mcommit e23b08714daf24b36bff71d3387f034cd19c1a38[m
Author: Junyan Xu <junyanxumath@gmail.com>
Date:   Wed Jan 3 17:22:35 2024 +0000

    doc(AlgebraicIndependent): remove outdated TODO and add new (#9396)
    
    The TODO item was already completed as [IsTranscendenceBasis.isAlgebraic](https://leanprover-community.github.io/mathlib4_docs/Mathlib/RingTheory/AlgebraicIndependent.html#IsTranscendenceBasis.isAlgebraic). However, transcendence degree is nowhere to be found even though it appears in the tags.
    
    
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>
    Co-authored-by: Chris Hughes <chrishughes24@gmail.com>

[33mcommit 7d58fa3955c424de04895b4379b4c21d2eb97501[m
Author: Sebastian Ullrich <sebasti@nullri.ch>
Date:   Wed Jan 3 15:13:20 2024 +0000

    chore: switch cache to Lean FRO R2 bucket (#9409)
    
    This will use a new, fresh cache from this commit onward. We are still working on reviving the old cache for old commits.
    
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>

[33mcommit 089e95fb3b3ae586e821f77cd172c1bc01f70acd[m
Author: Junyan Xu <junyanxumath@gmail.com>
Date:   Tue Jan 2 08:29:00 2024 +0000

    doc(FormalMultilinearSeries): clarify relationship between `shift`, `sum`, derivative and Taylor series (#9373)
    
    
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>

[33mcommit a4e04c21f4c3cfeac08776068109d107da5d63f5[m
Author: Newell Jensen <newell.jensen@gmail.com>
Date:   Tue Jan 2 07:02:46 2024 +0000

    feat:  Prove isomorphism implies equality of normal closure subgroups (#9185)
    
    feat: Prove isomorphism implies equality of normal closure subgroups
    
    Co-authored-by: Riccardo Brasca riccardo.brasca@gmail.com
    
    
    
    Co-authored-by: Newell Jensen <newell@users.noreply.github.com>
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 4f83eae3dab88d0420554013e954bdf1d1808ddf[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Jan 2 05:36:50 2024 +0000

    chore(MeasureTheory): golf (#9374)
    
    Reorder/golf lemmas, add `ae_restrict_iff‚ÇÄ`.
    
    Also remove 3 lemmas that are no longer needed and can be proved in 1 line each.

[33mcommit 2a17457d3236d97eec6687377c01a74fe2961ab7[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Mon Jan 1 22:36:28 2024 +0000

    feat: missing lemmas about `Finsupp.update` (#9316)

[33mcommit 16877b9c3231330d2432ed9cd8d748e50f1f4759[m
Author: Kyle Miller <kmill31415@gmail.com>
Date:   Mon Jan 1 22:36:27 2024 +0000

    chore: use string gaps (#9193)
    
    For error messages that span multiple lines, now we can use the new "string gap" escape sequence (a `\` at the end of the line, which causes all the whitespace at the beginning of the next line ignored), rather than using append operations or hacks involving `{` and `}` for `s!` and `m!` strings.
    
    Style-wise, we suggest for long messages that the body of the message start on the next line if possible, by starting the message with a string gap sequence. This eliminates needing to decide whether to indent continuing lines at the `"` or at the next column. For example:
    ```lean
        logError m!"\
          Tactic 'more_magic' cannot \
          apply expression{indentD e}\n\
          due to some reason or another."
    ```
    Note that to get whitespace to appear between one line and the next, you include it before the `\`.

[33mcommit bc21de103cd868ca3d64e04e9e46d340d976e503[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Mon Jan 1 21:12:39 2024 +0000

    refactor(Algebra/Homology): the category of bicomplexes (#9333)
    
    This PR introduces the abbreviation `abbrev HomologicalComplex‚ÇÇ := HomologicalComplex (HomologicalComplex C c‚ÇÇ) c‚ÇÅ` for bicomplexes. The content of the file `Algebra.Homology.Flip` is also moved to the new file `Algebra.Homology.HomologicalBicomplex`.

[33mcommit 3a5d9146a6079f13950c0dc02d07c365d7785843[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Mon Jan 1 21:12:38 2024 +0000

    feat(Algebra/Homology): right shifting cochains (#8937)
    
    In this PR, we study the behaviour of cochains (of the complex of homomorphisms) with respect to shifts (on the target). In particular, we obtain an additive equivalence `rightShiftAddEquiv K L n a n' h : Cochain K L n ‚âÉ+ Cochain K L‚ü¶a‚üß n'` when `n' + a = n`.
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit 5192777c94aec06289e492ce206d68fbbe72572c[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Jan 1 19:29:52 2024 +0000

    refactor: decapitalize names in `@[mk_iff]` (#9378)
    
    * `@[mk_iff] class MyPred` now generates `myPred_iff`, not `MyPred_iff`
    * add `Lean.Name.decapitalize`
    * fix indentation and a few typos in the docs/comments.
    
    Partially addresses issue #9129

[33mcommit 4ae461307cc26a0ea89fda5bb97db497e18811d6[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Mon Jan 1 17:53:37 2024 +0000

    chore(Algebra/GroupPower/Order): Fix "See also" comment (#9384)
    
    Reported by Alex [here](https://github.com/leanprover-community/mathlib4/commit/d61c95e1653dffe3f92c8927a905826929f50bce)

[33mcommit 5683185bee6799867b53e866c930b341ea627a75[m
Author: Amelia Livingston <101damnations@github.com>
Date:   Mon Jan 1 15:59:48 2024 +0000

    feat(RepresentationTheory/GroupCohomology/LowDegree): Identify `groupCohomology A n`with `Hn A` for `n = 0, 1, 2` (#8802)
    
    
    
    Co-authored-by: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>

[33mcommit 0b41ea95f7808c33d88e7139df523da41408192d[m
Author: Andrew Yang <the.erd.one@gmail.com>
Date:   Mon Jan 1 14:48:15 2024 +0000

    chore: Reorganize results about `rank` and `finrank`. (#9349)
    
    The files `Mathlib.LinearAlgebra.FreeModule.Rank`, `Mathlib.LinearAlgebra.FreeModule.Finite.Rank`, `Mathlib.LinearAlgebra.Dimension` and `Mathlib.LinearAlgebra.Finrank` were reorganized into a
    folder `Mathlib.LinearAlgebra.Dimension`, containing the following files
    - `Basic.lean`: Contains the definition of `Module.rank`.
    - `Finrank.lean`: Contains the definition of `FiniteDimensional.finrank`.
    - `StrongRankCondition.lean`: Contains results about `rank` and `finrank`
          over rings satisfying strong rank condition
    - `Free.lean`: Contains results about `rank` and `finrank` of free modules
    - `Finite.lean`: Contains conditions or consequences for `rank` to be finite or zero
    - `Constructions.lean`: Contains the calculation of the `rank` of various constructions.
    - `DivisionRing.lean`: Contains results about `rank` and `finrank` of spaces over division rings.
    - `LinearMap.lean`: Contains results about `LinearMap.rank`
    
    API changes:
    `IsNoetherian.rank_lt_aleph0` and `FiniteDimensional.rank_lt_aleph0` are replaced with
    `rank_lt_aleph0`.
    `Module.Free.finite_basis` was renamed to `Module.Finite.finite_basis`.
    `FiniteDimensional.finrank_eq_rank` was renamed to `finrank_eq_rank`.
    `rank_eq_cardinal_basis` and `rank_eq_cardinal_basis'` were removed
    in favour of `Basis.mk_eq_mk` and `Basis.mk_eq_mk''`.
    
    
    
    Co-authored-by: Andrew Yang <36414270+erdOne@users.noreply.github.com>

[33mcommit 0d6117a47dd8f9fe074025146a29b195bf0230f1[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Mon Jan 1 12:02:33 2024 +0000

    feat: Cauchy-Schwarz in semirings (#9371)
    
    This is a version of the Cauchy-Schwarz inequality that works in semirings.
    
    From LeanAPAP and PFR

[33mcommit 0c9d4118caa615ee8c9592a1da2e3fd79d682cf8[m[33m ([m[1;33mtag: v2024[m[33m)[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Mon Jan 1 07:00:57 2024 +0000

    chore: Generalise monotonicity of multiplication lemmas to semirings (#9369)
    
    Many lemmas about `BlahOrderedRing Œ±` did not mention negation. I could generalise almost all those lemmas to `BlahOrderedSemiring Œ±` + `ExistsAddOfLE Œ±` except for a series of five lemmas (left a TODO about them).
    
    Now those lemmas apply to things like the naturals. This is not very useful on its own, because those lemmas are trivially true on canonically ordered semirings (they are about multiplication by negative elements, of which there are none, or nonnegativity of squares, but we already know everything is nonnegative), except that I will soon add more complicated inequalities that are based on those, and it would be a shame having to write two versions of each: one for ordered rings, one for canonically ordered semirings.
    
    A similar refactor could be made for scalar multiplication, but this PR is big enough already.
    
    From LeanAPAP

[33mcommit bded32ac283fda910f93483406717d28164e69dd[m
Author: Jz Pan <acme_pjz@hotmail.com>
Date:   Mon Jan 1 07:00:56 2024 +0000

    feat(FieldTheory/SeparableClosure): (relative) separable closure (#9338)
    
    Main definitions:
    
    - `separableClosure`: the (relative) separable closure of `E / F`, or called maximal separable subextension of `E / F`, is defined to be the intermediate field of `E / F` consisting of all separable elements.
    - `Field.sepDegree F E`: the (infinite) separable degree `[E:F]_s` of an algebraic extension `E / F` of fields, defined to be the degree of `separableClosure F E / F`.
    - `Field.insepDegree F E`: the (infinite) inseparable degree `[E:F]_i` of an algebraic extension `E / F` of fields, defined to be the degree of `E / separableClosure F E`.
    - `Field.finInsepDegree F E`: the (finite) inseparable degree `[E:F]_i` of an algebraic extension `E / F` of fields, defined to be the degree of `E / separableClosure F E` as a natural number. It is zero if such field extension is not finite.
    
    Main results:
    
    - `le_separableClosure_iff`: an intermediate field of `E / F` is contained in the (relative) separable closure of `E / F` if and only if it is separable over `F`.
    - `separableClosure.normalClosure_eq_self`: the normal closure of the (relative) separable closure of `E / F` is equal to itself.
    - `separableClosure.normal`: the (relative) separable closure of a normal extension is normal.
    - `separableClosure.isSepClosure`: the (relative) separable closure of a separably closed extension is a separable closure of the base field.
    - `IntermediateField.isSeparable_adjoin_iff_separable`: `F(S) / F` is a separable extension if and only if all elements of `S` are separable elements.
    - `separableClosure.eq_top_iff`: the (relative) separable closure of `E / F` is equal to `E` if and only if `E / F` is separable.

[33mcommit f3a26801e0fab592ddb8ed611d001804e7a2633e[m
Author: Jujian Zhang <jujian.zhang1998@outlook.com>
Date:   Mon Jan 1 07:00:55 2024 +0000

    feat(AlgebraicGeometry/PrimeSpectrum/*) : the collection of minimal prime ideals of a Noetherian ring is finite (#9088)
    
    Co-PR :  #9087 (maximal ideals of Artinian ring are finite)
    
    Co-authored-by: Andrew Yang <the.erd.one@gmail.com>
    Co-authored-by: Junyan Xu <junyanxumath@gmail.com>
    
    
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>

[33mcommit 37c36be5e9639ab9ee330ad12f150b804bddaf21[m
Author: Johan Commelin <johan@commelin.net>
Date:   Mon Jan 1 05:58:55 2024 +0000

    feat(Data/Finset/Card): bounds on cardinalities of explicit finsets (#9362)

[33mcommit 7d31d03376f02197961d8bd00d110d74b59a1d07[m
Author: Yakov Pechersky <ypechersky@treeline.bio>
Date:   Sun Dec 31 21:44:50 2023 +0000

    feat: Fin CharP and lemmas for Fin rollover (#9033)
    
    
    
    
    Co-authored-by: Yakov Pechersky <pechersky@users.noreply.github.com>
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>

[33mcommit a59d0136f417dcbf1d9fceaa2d42ed87d592a164[m
Author: Xavier Roblot <46200072+xroblot@users.noreply.github.com>
Date:   Sun Dec 31 14:56:38 2023 +0000

    chore(Algebra.Module.LocalizedModule): use `IsLocalization` instead of `Localization` (#9167)
    
    The construction of `LocalizedModule` is done using `IsLocalization` rather than `Localization`. The corresponding instances for `Localization` are deduced automatically by Lean. One drawback is that many instances are now marked `noncomputable`.

[33mcommit aa6b836dfece145e2b3bf7b26928915208b8579a[m
Author: R√©my Degenne <Remydegenne@gmail.com>
Date:   Sun Dec 31 11:54:35 2023 +0000

    feat(MeasureTheory): log-likelihood ratio of two measures (#9355)
    
    Define the log-likelihood ratio between measures `Œº` and `ŒΩ`: this is the function `x ‚Ü¶ log (Œº.rnDeriv ŒΩ x).toReal`.
    
    
    
    Co-authored-by: R√©my Degenne <remydegenne@gmail.com>

[33mcommit b9715de9281350268a9022378fb824857865c6db[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Sun Dec 31 10:00:31 2023 +0000

    chore: remove duplicate prodPrimeFactors_apply_of_ne_zero (#9366)

[33mcommit 3694e27d9d9a84a7fc36ef5838cc33183af00403[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sat Dec 30 21:45:05 2023 +0000

    chore(*): drop `$`/`<|` before `fun` (#9361)
    
    Subset of #9319

[33mcommit ba4be74a354131e437e393120d61bbc0f2c2456e[m
Author: Andrew Yang <the.erd.one@gmail.com>
Date:   Sat Dec 30 19:16:20 2023 +0000

    feat: Kummer extensions are cyclic. (#9119)
    
    
    
    
    Co-authored-by: Andrew Yang <36414270+erdOne@users.noreply.github.com>

[33mcommit b13975ce1c723a0076f2ae99be60f7134efc06cd[m
Author: Johan Commelin <johan@commelin.net>
Date:   Sat Dec 30 16:32:38 2023 +0000

    chore(AlgebraicTopology/SimplicialSet): add delaborator (#9358)
    
    add delaborator for standard simplex and horn notation

[33mcommit d641c6806feda500505482917c46ed17d38a5d9f[m
Author: Johan Commelin <johan@commelin.net>
Date:   Sat Dec 30 16:05:21 2023 +0000

    feat(AlgebraicTopology): definition of Kan complex and quasicategory (#9357)

[33mcommit 3286beabe5f3da3a4d214f0f63b554fec8c40750[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sat Dec 30 06:21:32 2023 +0000

    chore(Topology/CompactOpen): rename type variables (#9328)
    
    Use `X`, `Y`, `Z` instead of `Œ±`, `Œ≤`, `Œ≥` for topological spaces.

[33mcommit d54b614b541ee33bc803c912a9f1a4098c3291c6[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sat Dec 30 05:21:35 2023 +0000

    feat(*/Pointwise): generalize some lemmas to `SMulZeroClass` (#9243)

[33mcommit f656e606157a8c250da966907d97ba550d5cec8c[m
Author: Andrew Yang <the.erd.one@gmail.com>
Date:   Sat Dec 30 03:42:52 2023 +0000

    chore: Move misplaced lemmas in `Mathlib/LinearAlgebra/FreeModule/Finite/Rank.lean`. (#9301)
    
    
    
    
    Co-authored-by: Andrew Yang <36414270+erdOne@users.noreply.github.com>

[33mcommit 7392ea7cefb714816ac6592ade9910a3fd7b3c9b[m
Author: Andrew Yang <the.erd.one@gmail.com>
Date:   Sat Dec 30 03:42:51 2023 +0000

    chore: deduplicate `LinearIndependent.set_finite_of_isNoetherian` (#9300)
    
    Also moved several lemmas into `Mathlib/LinearAlgebra/Basis.lean`.
    
    
    
    Co-authored-by: Andrew Yang <36414270+erdOne@users.noreply.github.com>

[33mcommit d8b7c07348d5c5fe16c07c2274eb944ecce69daf[m
Author: Junyan Xu <junyanxumath@gmail.com>
Date:   Sat Dec 30 02:51:00 2023 +0000

    chore: rename `IsScalarTower.of_ring_hom` (#9330)
    
    It's about `AlgHom` not `RingHom`.
    
    
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>

[33mcommit 42060a27a3a7be4eda7a115d7b990cb31aefb120[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Sat Dec 30 02:50:59 2023 +0000

    chore: reduce imports in Mathlib.RingTheory.Noetherian (#9322)

[33mcommit b060d4a1a3b92d46405ba092def333a37af6c397[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sat Dec 30 02:31:11 2023 +0000

    chore(Data/Fintype/Fin): golf a proof (#9336)
    
    We already have it for `Set.range`.

[33mcommit e04a464df1da4a130b5fa9aaff1dcf79d92d3888[m
Author: Mario Carneiro <mcarneir@andrew.cmu.edu>
Date:   Fri Dec 29 07:09:09 2023 +0000

    style: use `cases x with | ...` instead of `cases x; case => ...` (#9321)
    
    This converts usages of the pattern
    ```lean
    cases h
    case inl h' => ...
    case inr h' => ...
    ```
    which derive from mathported code, to the "structured `cases`" syntax:
    ```lean
    cases h with
    | inl h' => ...
    | inr h' => ...
    ```
    The case where the subgoals are handled with `¬∑` instead of `case` is more contentious (and much more numerous) so I left those alone. This pattern also appears with `cases'`, `induction`, `induction'`, and `rcases`. Furthermore, there is a similar transformation for `by_cases`:
    ```lean
    by_cases h : cond
    case pos => ...
    case neg => ...
    ```
    is replaced by:
    ```lean
    if h : cond then
      ...
    else
      ...
    ```
    
    
    
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>

[33mcommit b8c97409df1dff19485c7da48e32f77aa198965f[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Fri Dec 29 07:09:08 2023 +0000

    feat(Topology): clopen subsets of products of compact spaces are unions of clopen boxes (#8678)
    
    
    
    
    
    
    Co-authored-by: Yury G. Kudryashov <urkud@urkud.name>

[33mcommit 8f17470fada539b70956f0ae655a9bb9e5cd67fb[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Fri Dec 29 06:46:33 2023 +0000

    refactor(*): change definition of `Set.image2` etc (#9275)
    
    - Redefine `Set.image2` to use `‚àÉ a ‚àà s, ‚àÉ b ‚àà t, f a b = c` instead of `‚àÉ a b, a ‚àà s ‚àß b ‚àà t ‚àß f a b = c`.
    - Redefine `Set.seq` as `Set.image2`. The new definition is equal to the old one but `rw [Set.seq]` gives a different result.
    - Redefine `Filter.map‚ÇÇ` to use `‚àÉ u ‚àà f, ‚àÉ v ‚àà g, image2 m u v ‚äÜ s` instead of `‚àÉ u v, u ‚àà f ‚àß v ‚àà g ‚àß ...`
    - Update lemmas like `Set.mem_image2`, `Finset.mem_image‚ÇÇ`, `Set.mem_mul`, `Finset.mem_div` etc
    
    The two reasons to make the change are:
    
    - `‚àÉ a ‚àà s, ‚àÉ b ‚àà t, _` is a `simp`-normal form, and
    - it looks a bit nicer.

[33mcommit 288b6c5536e3a1c520aff20a999fe55a627c9637[m
Author: Jz Pan <acme_pjz@hotmail.com>
Date:   Thu Dec 28 21:07:40 2023 +0000

    doc(FieldTheory/SeparableDegree): fix the formula in docstring (#9318)

[33mcommit a58c4fe3559315020174ea26a99b59544c190361[m
Author: Michael Stoll <Michael.Stoll@uni-bayreuth.de>
Date:   Thu Dec 28 19:05:58 2023 +0000

    feat(NumberTheory/SumPrimeReciprocals): the sum of 1/p over primes p diverges (#9313)
    
    This adds the fact that `‚àë p prime, 1/p` diverges. We follow the elementary proof due to Erd≈ës given in "THE BOOK".
    
    See [here](https://leanprover.zulipchat.com/#narrow/stream/217875-Is-there-code-for-X.3F/topic/Sum.20over.201.2Fp.20diverges/near/409835682) on Zulip.
    
    
    
    Co-authored-by: Michael Stoll <99838730+MichaelStollBayreuth@users.noreply.github.com>

[33mcommit bf19b01fbf29417b81c0cc4d8357d5d37d9fff3c[m
Author: Jon Eugster <eugster.jon@gmail.com>
Date:   Thu Dec 28 17:56:41 2023 +0000

    chore: remove `Name.isInternal'` in favour of `Name.isInternalDetail` (#9196)
    
    We can remove `Name.isInternal'` as it exists in `std` as `Name.isInternalDetail`.

[33mcommit fb3fd7cd7a0004f3d9bc0daf99c3d767cf6e7600[m
Author: Jujian Zhang <jujian.zhang1998@outlook.com>
Date:   Thu Dec 28 07:15:20 2023 +0000

    feat: add some constructions about `RelSeries` (`append`, `insert_nth`, `map`, `comap`) (#3858)
    
    - appending a relation series to another one
    - insert an element into a relation series to make a longer relation series
    - map a relation series across a relation preserving function
    - pullback a lt series across a surjective strictly co-monotonic function. (`f` is strictly co-monotonic if `f x < f y` implies `x < y`)

[33mcommit 8788d9a43952b75c0e9a0640f273629f73b3b2b4[m
Author: Jz Pan <acme_pjz@hotmail.com>
Date:   Thu Dec 28 06:17:56 2023 +0000

    feat(FieldTheory/SeparableDegree): further properties of separable degree of fields and polynomials (#9041)
    
    Breaking changes:
    
    - remove `Field.sepDegree` since it is not quite correct for infinite case; will be added in later PR (see #8696)
    
    New definitions (non-exhaustive):
    
    - `Polynomial.natSepDegree`: the separable degree of a polynomial is a natural number, defined to be the number of distinct roots of it over its splitting field.
    
    New results (non-exhaustive):
    
    - `Polynomial.natSepDegree_le_natDegree`: the separable degree of a polynomial is smaller than its degree.
    - `Polynomial.natSepDegree_eq_natDegree_iff`: the separable degree of a non-zero polynomial is equal to its degree if and only if it is separable.
    - `Polynomial.natSepDegree_dvd_natDegree_of_irreducible`: the separable degree of an irreducible polynomial divides its degree.
    - `Field.finSepDegree_adjoin_simple_eq_natSepDegree`: the (finite) separable degree of `F‚üÆŒ±‚üØ / F` is equal to the separable degree of the minimal polynomial of `Œ±` over `F`.
    - `Field.finSepDegree_dvd_finrank`: the separable degree of any field extension `E / F` divides the degree of `E / F`.
    - `Field.finSepDegree_le_finrank`: the separable degree of a finite extension `E / F` is smaller than the degree of `E / F`.
    - `Field.finSepDegree_eq_finrank_iff`: if `E / F` is a finite extension, then its separable degree is equal to its degree if and only if it is a separable extension.
    
    
    
    Co-authored-by: Johan Commelin <johan@commelin.net>

[33mcommit 6cab3d646c38b08ac405dd08d69f9cd87938b5c1[m
Author: Michael Stoll <Michael.Stoll@uni-bayreuth.de>
Date:   Thu Dec 28 01:33:58 2023 +0000

    feat(NumberTheory.SmoothNumbers): add `{smooth|rough}NumbersUpTo` and some API (#9240)
    
    This adds definitions of the `k`-smooth numbers up to and including `N` as a `Finset` and of its complement in `{1, ..., N}` plus some API, in particular cardinality bounds. There are also a few additional API lemmas for `Nat.primesBelow` and `Nat.smoothNumbers` (including a decidability instance for membership in the latter).
    
    This is a PR in preparation of the divergence of the sum of the reciprocals of the primes. See [here](https://leanprover.zulipchat.com/#narrow/stream/217875-Is-there-code-for-X.3F/topic/Sum.20over.201.2Fp.20diverges/near/409835682) on Zulip.
    
    
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>

[33mcommit 5dee9c0a2087a1b797ceb5a72cf5ac43669a03ff[m
Author: damiano <adomani@gmail.com>
Date:   Wed Dec 27 22:11:11 2023 +0000

    fix(Tactic/MoveAdd): add missing `withContext` (#9306)
    
    Adds a missing `withContext`, as mentioned in this [Zulip message](https://leanprover.zulipchat.com/#narrow/stream/144837-PR-reviews/topic/.2313483.20.60move_add.60/near/409960750).
    
    I also added the relevant test.

[33mcommit 521f71ff969b69b7c1ff2ad1337d994c650bce16[m
Author: Anatole Dedecker <anatolededecker@gmail.com>
Date:   Wed Dec 27 20:59:09 2023 +0000

    feat: misc lemmas on uniform spaces (#9305)

[33mcommit 82c60323a6de628434daaa26b09fddeae810c0cc[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Wed Dec 27 20:59:08 2023 +0000

    feat: Better lemmas for transferring finite sums along equivalences (#9237)
    
    Lemmas around this were a mess, throth in terms of names, statement and location. This PR standardises everything to be in `Algebra.BigOperators.Basic` and changes the lemmas to take in `InjOn` and `SurjOn` assumptions where possible (and where impossible make sure the hypotheses are taken in the correct order) and moves the equality of functions hypothesis last.
    
    Also add a few lemmas that help fix downstream uses by golfing.
    
    From LeanAPAP and LeanCamCombi

[33mcommit 7b59a5fa0da20633c93e76b2da3a1b4d32dc704a[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Wed Dec 27 20:59:07 2023 +0000

    feat: `(a ‚Ä¢ s)‚Åª¬π = s‚Åª¬π ‚Ä¢ a‚Åª¬π` (#9199)
    
    and other simple pointwise lemmas for `Set` and `Finset`. Also add supporting `Fintype.piFinset` lemmas and fix the names of two lemmas.
    
    From LeanAPAP and LeanCamCombi

[33mcommit d2d0dcdfe131b20dbd6a80e7ac6c8da622614b63[m
Author: Thomas Zhu <thomas.zhu.sh@hotmail.com>
Date:   Wed Dec 27 19:56:00 2023 +0000

    chore(NumberTheory/Zsqrtd): use `@[ext]` (#9299)
    
    Added `@[ext]` to definition `structure Zsqrtd (d : ‚Ñ§)`. (also added lemma `sub_re`, `sub_im`)

[33mcommit 04a04880ab1565be6b6dcf3e1f9600e2a0b1f02e[m
Author: Junyan Xu <junyanxumath@gmail.com>
Date:   Wed Dec 27 19:55:59 2023 +0000

    feat(LinearAlgebra): the Erd≈ës-Kaplansky theorem (#9159)
    
    The dimension of an infinite dimensional dual space is equal to its cardinality. As a consequence (`linearEquiv_dual_iff_finiteDimensional`), a vector space is isomorphic to its dual iff it's finite dimensional.
    
    The [main argument](https://github.com/leanprover-community/mathlib4/pull/9159/files#diff-cb173017e1157ddc4b9f868be06c18ec2a38f8cf82e856e18d59ed49f97395d8R146) is from https://mathoverflow.net/a/168624. There is a [slicker proof](https://mathoverflow.net/a/420455/3332) in the field case but Vandermonde determinants don't work in a non-commutative ring.
    
    Resolves [TODO item](https://leanprover-community.github.io/mathlib4_docs/Mathlib/LinearAlgebra/Dual.html#TODO) posed by Julian K√ºlshammer
    
    - [x] depends on: #8941
    - [x] depends on: #8942
    
    
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>

[33mcommit 71bf28895f20cab67354b414eadd645163983763[m
Author: Alex Keizer <alex@keizer.dev>
Date:   Wed Dec 27 19:55:58 2023 +0000

    feat: add lemmas about `Fin.rev` (#8814)
    
    
    
    Co-authored-by: Yury G. Kudryashov <urkud@urkud.name>
    Co-authored-by: Siddharth Bhat <siddu.druid@gmail.com>
    Co-authored-by: Tobias Grosser <tobias@grosser.es>

[33mcommit 98e2ce28c9b86b09f280b6a6d1513b0d138cf45a[m
Author: sgouezel <junyanxumath@gmail.com>
Date:   Wed Dec 27 18:34:46 2023 +0000

    archive: smooth functions whose integral calculates the values of polynomials (#9138)
    
    Test case of the library suggested by Martin Hairer, see https://leanprover.zulipchat.com/#narrow/stream/116395-maths/topic/Hairer.20challenge/near/404836147.
    
    
    
    Co-authored-by: sgouezel <sebastien.gouezel@univ-rennes1.fr>
    Co-authored-by: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>
    Co-authored-by: Floris van Doorn <fpvdoorn@gmail.com>
    Co-authored-by: Johan Commelin <johan@commelin.net>

[33mcommit a63bd3b0873f65314b5ab1e82321fe8f7ee42fc9[m
Author: damiano <adomani@gmail.com>
Date:   Wed Dec 27 18:34:45 2023 +0000

    feat(Tactic/ExtendDoc): add `extend_doc` command (#7446)
    
    This PR is related to [Issue leanprover/lean4#2622](https://github.com/leanprover/lean4/issues/2622).
    
    In the file where declaration `decl` is defined, writing
    ```lean
    extend_doc decl
      before "I will be added as a prefix to the docs of `decl`"
      after "I will be added as a suffix to the docs of `decl`"
    ```
    
    does what is probably clear: it extends the doc-string of `decl` by adding the string immediately following `before` at the beginning and the string immediately following`after` at the end.
    
    This is useful, for instance, when the docs of `decl` are obtained via `inherit_doc`.
    
    [Zulip discussion](https://leanprover.zulipchat.com/#narrow/stream/270676-lean4/topic/tactic.20docstrings)
    
    By way of example, I redefine the docs over `rw`.  The new doc-string is
    
    ```lean
    `rw` is like `rewrite` (see below), but also tries to close the goal by "cheap" (reducible) `rfl` afterwards.
    
    `rewrite [e]` applies identity `e` as a rewrite rule to the target of the main goal.
    If `e` is preceded by left arrow (`‚Üê` or `<-`), the rewrite is applied in the reverse direction.
    If `e` is a defined constant, then the equational theorems associated with `e` are used.
    This provides a convenient way to unfold `e`.
    - `rewrite [e‚ÇÅ, ..., e‚Çô]` applies the given rules sequentially.
    - `rewrite [e] at l` rewrites `e` at location(s) `l`, where `l` is either `*` or a
      list of hypotheses in the local context. In the latter case, a turnstile `‚ä¢` or `|-`
      can also be used, to signify the target of the goal.
    
    Using `rw (config := {occs := .pos L}) [e]`,
    where `L : List Nat`, you can control which "occurrences" are rewritten.
    (This option applies to each rule, so usually this will only be used with a single rule.)
    Occurrences count from `1`.
    At the first occurrence, whether allowed or not,
    arguments of the rewrite rule `e` may be instantiated,
    restricting which later rewrites can be found.
    `{occs := .neg L}` allows skipping specified occurrences.
    ```

[33mcommit 49d59e74aba9f702d880a09545b9db9b3a850ef4[m
Author: Arend Mellendijk <arend.mellendijk@gmail.com>
Date:   Wed Dec 27 17:24:01 2023 +0000

    feat: define `prodPrimeFactors` as an `ArithmeticFunction` (#6662)
    
    Define the arithmetic function $n \mapsto \prod_{p \mid n} f(p)$. This PR further proves that it's multiplicative and relates it to Dirichlet convolution. Finally it proves two identities that can be applied in a context where you're not working exclusively with `ArithmeticFunction`s
    
    This construction was mentioned on [zulip](https://leanprover.zulipchat.com/#narrow/stream/217875-Is-there-code-for-X.3F/topic/finite.20product.20of.20infinite.20sums/near/379577022)
    
    
    
    Co-authored-by: Arend Mellendijk <FLDutchmann@users.noreply.github.com>

[33mcommit 3d732b1000511237fa845d6cdcf0aaf333245e49[m
Author: David Renshaw <dwrenshaw@gmail.com>
Date:   Wed Dec 27 15:22:06 2023 +0000

    chore: remove now-unneeded dsimp and its associated porting note (#9304)
    
    The `dsimp only` is no longer needed after #3222 adjusted the definition of `Units.ext`.

[33mcommit 33e9813d07511f14a8fa3c694682402f51f4f5c1[m
Author: Xavier Xarles <xavier.xarles@uab.cat>
Date:   Wed Dec 27 14:16:48 2023 +0000

    feat(RingTheory/TensorProduct): Tensor product for CommSemiring (#9125)
    
    Added the instance of TensorProduct.instCommRing.
    
    Previously we only had the `CommRing` and `Semiring` instance; this moves an existing proof to populate the intermediate instance.
    
    
    
    Co-authored-by: Xavier Xarles <56635243+XavierXarles@users.noreply.github.com>
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 6ecca6c449485237681bdd3de5bed0bb8ab9c47d[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Wed Dec 27 13:14:19 2023 +0000

    feat(GroupTheory/GroupAction/Opposite): add notation for right and left actions (#8909)
    
    The new notations (with `open scoped RightActions`) are:
    
    * `r ‚Ä¢> m` as an alias for `r ‚Ä¢ m`
    * `m <‚Ä¢ r` as an alias for `MulOpposite.op r ‚Ä¢ m`
    * `r +·µ•> m` as an alias for `r +·µ• m`
    * `m <+·µ• r` as an alias for `AddOpposite.op r +·µ• m`
    
    An alternative proposal was to use variants of `‚Ä¢` with arrows inside:
    * `r ‚Æä m` as an alias for `r ‚Ä¢ m`
    * `m ‚Æà r` as an alias for `MulOpposite.op r ‚Ä¢ m`
    
    but this doesn't have an obvious additive counterpart, and apparently has font issues.
    
    Zulip messages:
    
    * ["And `m <‚Ä¢ r` would be notation for `(to_opposite r) ‚Ä¢ m`, or something like that?"](https://leanprover.zulipchat.com/#narrow/stream/116395-maths/topic/left.20vs.20right.20modules.20in.20tensor.20products/near/262063344)
    * ["I rather like the idea of having a new piece of notation for right actions"](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Noncommutative.20ring.20things/near/390011490)
    * [I like your proposed notation `<‚Ä¢` for the right scalar action. Maybe we should even introduce `‚Ä¢>` as an alias for `‚Ä¢`](https://leanprover.zulipchat.com/#narrow/stream/116395-maths/topic/ideals.20in.20non-comm.20rings/near/252156362)
    
    
    
    Co-authored-by: Ya√´l Dillies <yael.dillies@gmail.com>

[33mcommit d5dea345b6194585d78709fa1f8bb362e2e5e38b[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Wed Dec 27 13:14:18 2023 +0000

    feat(CategoryTheory): another constructor for ComposableArrows (#8541)
    
    In this PR, given objects `obj : Fin (n + 1) ‚Üí C` and `mapSucc i : obj i.castSucc ‚ü∂ obj i.succ` (i.e. a sequence of morphisms), we construct `mkOfObjOfMapSucc obj mapSucc : ComposableArrows C n`. On objects, this constructor has good definitional properties.

[33mcommit 120ddecb5be159db3457a465faa6698d0e6169de[m
Author: Junyan Xu <junyanxumath@gmail.com>
Date:   Wed Dec 27 12:26:55 2023 +0000

    feat: OrderIso between finite-codimensional subspaces and finite-dimensional subspaces in the dual (#9124)
    
    + Introduce the nondegenerate pairing (`(flip_)quotDualCoannihilatorToDual_injective`) between `M ‚ß∏ W.dualCoannihilator` and `W` . If `M` is a vector space and `W` is a finite-dimensional subspace of its dual, this is a perfect pairing (`quotDualCoannihilatorToDual_bijective`), and `W` is equal to the annihilator of its coannihilator.
    
    + Use this pairing to show that `dualAnnihilator` and `dualCoannihilator` give an antitone order isomorphism `orderIsoFiniteCodimDim` between finite-codimensional subspaces in a vector space and finite-dimensional subspaces in its dual. This result can be e.g. found in Bourbaki's Algebra. For a finite-dimensional vector space, this gives an OrderIso between all subspaces and all subspaces of the dual.
    
    + Add some lemmas about the image and preimage of annihilators and coannihilators under `Dual.eval`.
    
    + Expand the docstring of `basis_finite_of_finite_spans` with comments on generalizations.
    
    - [x] depends on: #8820
    
    
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>

[33mcommit 134652679f560cbe6796265bda77ba8c641e9956[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Wed Dec 27 10:11:18 2023 +0000

    feat: When `a \ b = b \ a` (#9109)
    
    and other simple order lemmas
    
    From LeanAPAP and LeanCamCombi

[33mcommit d412c821c9dd98524268d9023f528f98aff7980a[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Wed Dec 27 10:11:17 2023 +0000

    feat(Algebra/Homology): computation of the connecting homomorphism of the homology sequence (#8771)
    
    This PR adds a variant of a lemma introduced in #8512: `ShortComplex.SnakeInput.Œ¥_apply'` computes the connecting homomorphism of the snake lemma in a concrete categoriy `C` with a phrasing based on the functor `forget‚ÇÇ C Ab` rather than `forget C`. From this, the lemma `ShortComplex.ShortExact.Œ¥_apply` is obtained in a new file `Algebra.Homology.ConcreteCategory`: it gives a computation in terms of (co)cycles of the connecting homomorphism in homology attached to a short exact sequence of homological complexes in `C`.
    
    This PR also adds a lemma which computes "up to refinements" the connecting homomorphism of the homology sequence in general abelian categories.

[33mcommit e0ae51d25eacfec17c4fe4bfd5d5de3f359ee8d6[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Wed Dec 27 09:02:06 2023 +0000

    chore: Rename monotonicity of `‚Ä¢` lemmas in modules (#9302)
    
    Fix the names of the lemmas moved in #9241 to match the naming convention.

[33mcommit 2380f2ad9bb517bced1d42b864ef378728bf42c5[m
Author: Scott Carnahan <128885296+ScottCarnahan@users.noreply.github.com>
Date:   Wed Dec 27 09:02:05 2023 +0000

    fix: change HahnSeries linearMap to use modules (#9297)
    
    This PR corrects what appears to be a minor oversight.
    We replace the scalar ring `R` with the module `V` in two spots.
    The proofs are unchanged.

[33mcommit 565cdcb266f80313b139c7939db0f289fb59ccea[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Dec 27 09:02:04 2023 +0000

    chore(ArithmeticFunction): add `cardFactors_zero` (#9287)
    
    * Add a `dsimp` lemma `cardFactors_zero`
    * Make `cardFactors_one` a `dsimp` lemma
    * make `cardFactors_eq_one_iff_prime` a `simp` lemma

[33mcommit bbf5f350c50ded89af97f73406104e296e4ebb66[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Dec 27 09:02:03 2023 +0000

    chore(Topology/FilterBasis): rename `GroupFilterBasis.prod_subset_self` (#9233)
    
    ... to `subset_mul_self`

[33mcommit dccbc022b76751d7b3770cdaeb767e5b78054142[m
Author: Fr√©d√©ric Dupuis <dupuisf@iro.umontreal.ca>
Date:   Wed Dec 27 09:02:01 2023 +0000

    feat: Completeness criterion for normed additive groups (#9117)
    
    This PR adds a proof that a normed additive group is complete iff every absolutely convergent series converges in the space.
    
    This is Lemma 2.2.1 from the book "Interpolation Spaces" by Bergh and L√∂fstr√∂m.
    
    I wasn't too sure where to put `Metric.exists_subseq_summable_dist_of_cauchySeq` -- I would be happy to move it somewhere else.
    
    
    
    Co-authored-by: Fr√©d√©ric Dupuis <31101893+dupuisf@users.noreply.github.com>

[33mcommit b58270e02160441b5701c9e942c5e56805c3d349[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Wed Dec 27 09:02:00 2023 +0000

    feat(CategoryTheory/Shift): sequences of functors from a category with a shift (#9001)
    
    Let `F : C ‚•§ A` be a functor from a category `C` that is equipped with a shift by an additive monoid `M`. In this PR, we define a typeclass `F.ShiftSequence M` which includes the data of a sequence of functors `F.shift a : C ‚•§ A` for all `a : A`. For each `a : A`, we have an isomorphism `F.isoShift a : shiftFunctor C a ‚ãô F ‚âÖ F.shift a` which satisfies some coherence relations. This will allow a better formulation of the long exact sequence attached to homological functors from a triangulated category to an abelian category.

[33mcommit e0f4e43142a05eba5f40d216f967d3cf160be8e8[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Wed Dec 27 09:01:59 2023 +0000

    feat(Algebra/Homology): construction of the homotopy cofiber (#8969)

[33mcommit 7d3d6e43b685327db5942f774dfd160e0a94f15f[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Wed Dec 27 09:01:58 2023 +0000

    chore: Improve `Finset` lemma names (#8894)
    
    Change a few lemma names that have historically bothered me.
    
    * `Finset.card_le_of_subset` ‚Üí `Finset.card_le_card`
    * `Multiset.card_le_of_le` ‚Üí `Multiset.card_le_card`
    * `Multiset.card_lt_of_lt` ‚Üí `Multiset.card_lt_card`
    * `Set.ncard_le_of_subset` ‚Üí `Set.ncard_le_ncard`
    * `Finset.image_filter` ‚Üí `Finset.filter_image`
    * `CompleteLattice.finset_sup_compact_of_compact` ‚Üí `CompleteLattice.isCompactElement_finset_sup`

[33mcommit df4f6559badf5938d551ef4f0f282031be6034ad[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Wed Dec 27 08:00:29 2023 +0000

    feat: Finite supremum over a product (#9223)
    
    From LeanCamCombi

[33mcommit 7a0da1d7291b44cf9df4ab5b07480c56b4913701[m
Author: Kyle Miller <kmill31415@gmail.com>
Date:   Wed Dec 27 08:00:28 2023 +0000

    test: `induction'` error conditions when `generalizing` (#9194)

[33mcommit 4d78a650388371bb7fa9b6b7bfafa6324ce0952c[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Dec 27 08:00:26 2023 +0000

    chore(Perm/Basic): generalize `swap_smul_involutive` (#9180)
    
    Generalize `Equiv.Perm.ModSumCongr.swap_smul_involutive` to any action of `Equiv.Perm _`, move it to `Perm/Basic`.

[33mcommit 2e77db724ec3c18e95393fa911ca65e3ab56c94d[m
Author: Junyan Xu <junyanxumath@gmail.com>
Date:   Wed Dec 27 08:00:25 2023 +0000

    feat: cardinality of `Subfield.closure` (#8942)
    
    Also generalize results about the cardinality of WType to be universe polymorphic.
    
    [Zulip discussion](https://leanprover.zulipchat.com/#narrow/stream/217875-Is-there-code-for-X.3F/topic/Cardinality.20of.20division.20ring.20generated.20by.20.2E.2E.2E/near/406991528) about the approach
    
    - [x] depends on: #8941
    
    
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>

[33mcommit 54cf2f5b857651534c8bf366c6ff46e7ee9b219a[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Wed Dec 27 08:00:24 2023 +0000

    feat(CategoryTheory/GradedObject): action of a composition of bifunctors (#8242)
    
    The action on graded objects of a trifunctor obtained by composition of two bifunctors can be computed as a composition of the actions of these two bifunctors. In this PR, we consider the case when we apply a bifunctor to the first two variables and then a bifunctor to this result and the remaining third variable.
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit 7a302eb97c8a48fef146f33f55eb00fc7a5541e3[m
Author: Anatole Dedecker <anatolededecker@gmail.com>
Date:   Wed Dec 27 07:29:51 2023 +0000

    feat(Analysis/Calculus/Series): specialize to `deriv` (#9295)
    
    Asked by @MichaelStollBayreuth on [Zulip](https://leanprover.zulipchat.com/#narrow/stream/217875-Is-there-code-for-X.3F/topic/Derivative.20of.20series/near/410063277)

[33mcommit 4fab13d22e21e9ef916a9cd04f7270dec5838379[m
Author: Junyan Xu <junyanxumath@gmail.com>
Date:   Wed Dec 27 07:29:50 2023 +0000

    chore: shortcut instances for IntermediateField over an IntermediateField (#9291)
    
    Removes [manual letI/haveI](https://github.com/leanprover-community/mathlib4/blob/fe76ea7c2bb0c725ad161755ac158171aa9c545a/Mathlib/FieldTheory/SeparableDegree.lean#L568-L571) that appear in four proofs of #9041
    
    
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>

[33mcommit 7c5331ddc1f2ca3a7d86b6f9eb9dbf239230afea[m
Author: Hunter Monroe <github.com@huntermonroe.com>
Date:   Wed Dec 27 05:26:46 2023 +0000

    doc:Move misplaced docstring (#9296)

[33mcommit aede33055710fe967fd079409ce85a4f992ec863[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Dec 27 05:26:45 2023 +0000

    chore(*): golf, mostly dropping unused `have`s (#9292)

[33mcommit b6d69218bff053bf67334a87d58033b6fb6be086[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Wed Dec 27 05:26:44 2023 +0000

    feat(Algebra/Homology): the category of complexes up to quasi-isomorphisms (#8970)
    
    In this PR, we define the category of homological complexes up to quasi-isomorphisms. The derived category of an abelian category shall be a particular case on this construction, but the additional structures on the derived category will require more work.
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit e981962405eef42de281623dc636b8f2feacc2fd[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Wed Dec 27 05:26:43 2023 +0000

    feat(CategoryTheory): the localized category when there is a left calculus of fractions (#8921)

[33mcommit e270b052a397f480011b1daa79db0422a01765f8[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Wed Dec 27 05:26:42 2023 +0000

    feat(CategoryTheory): localization of product categories (#8864)
    
    The product of finitely many localized categories is the localized category of the product category, provided the classes of morphisms contain identities.

[33mcommit 9623806f920b77d44e91162f0a6fb2d661476181[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Wed Dec 27 05:26:41 2023 +0000

    feat(Algebra/Homology): API for the computation of the homology of homological complexes (#8845)
    
    This PR introduces more homology API in order to ease the computation of group cohomology in low degrees #8802. The main definition `HomologicalComplex.homologyIsoSc' : K.homology j ‚âÖ (K.sc' i j k).homology` relates the homology of a complex `K` in degree `j` to the homology of a short complex `K.X i ‚ü∂ K.X j ‚ü∂ K.X k` when `i` and `k` are degrees which appear respectively before `j` and after `j`.

[33mcommit 9ed6b90fffda5c72b70d53370fe210a9e45b71cc[m
Author: Kyle Miller <kmill31415@gmail.com>
Date:   Wed Dec 27 05:26:40 2023 +0000

    refactor: remove `Sym2`'s global `Prod` setoid instance, use `s(x, y)` notation for unordered pairs (#8729)
    
    The `Sym2` type used a global setoid instance on `Œ± √ó Œ±` so that `‚ü¶(x, y)‚üß` could stand for an unordered pair using standard `Quotient` syntax. This commit refactors `Sym2` to not use `Quotient` and instead use its own `s(x, y)` notation. One benefit to this is that this notation produces a term with type `Sym2` rather than `Quotient`.
    
    The `Fintype` instance for `Sym2` is in `Mathlib.Data.Finset.Sym`. We switch from using the one for `Quotient` because it does not require `DecidableEq`.

[33mcommit c9e4122d0673e89cb8c676b5ba23224e7ac279f2[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Wed Dec 27 05:26:39 2023 +0000

    feat(CategoryTheory/Sites): objects which cover the terminal object (#8632)
    
    In this PR, given a site `(C, J)`, we introduce the notion of a family of objects `Y : I ‚Üí C` which "cover the final object". This notion is used in order to formulate results about global sections of sheaves. It shall also be useful in future PRs in order to formulate descent properties of sheaves.

[33mcommit f9e2c2ca39707c94f2893124ca247b78ebb001ca[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Wed Dec 27 05:26:38 2023 +0000

    refactor(AlgebraicTopology): using the cofan API for SplitSimplicialObject (#8531)
    
    This PR changes the definition of a splitting of simplicial objects. The new definition makes a better use of the cofan API. As a result, it is no longer necessary to assume that the category has finite coproducts.

[33mcommit c7483a355afd192a212dbcf68f1f18fbc21e7469[m
Author: Jujian Zhang <jujian.zhang1998@outlook.com>
Date:   Wed Dec 27 05:26:37 2023 +0000

    feat: In a ring, sets act on submodules (#7140)
    
    If $M$ is an $R$-module, $N$ a submodule and $S$ a subset of $R$. Then we can define $S \cdot N$ to be the smallest submodule containing all $s \cdot n$ where $s \in S$ and $n \in N$
    
    
    
    Co-authored-by: Johan Commelin <johan@commelin.net>
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>

[33mcommit fb6ba072b0a93cf43e39a87367072a958d7be9cf[m
Author: Junyan Xu <junyanxumath@gmail.com>
Date:   Wed Dec 27 04:42:56 2023 +0000

    chore(LinearAlgebra): rename to enable `LinearIndependent` dot notation (#9144)
    
    + Rename `cardinal_lift_le_rank_of_linearIndependent`, `cardinal_le_rank_of_linearIndependent(')`, `cardinal_mk/fintype_card/finset_card_le_finrank_of_linearIndependent`, `fintype_card_le_finrank_of_linearIndependent`, `finset_card_le_finrank_of_linearIndependent` by removing trailing `_of_linearIndependent` in favor of namespace `LinearIndependent.`
    
    + Remove `cardinal_lift_le_rank_of_linearIndependent'`, exact duplicate of the version without the prime
    
    + Rename `FiniteDimensional/Module.Finite.lt_aleph0_of_linearIndependent` to `LinearIndependent.lt_aleph0_of_finiteDimensional/finite`
    
    + Add one lemma `LinearIndependent.aleph0_le_rank` in LinearAlgebra/Dimension and two lemmas `LinearIndependent.finrank_eq_zero_of_infinite` and `finrank_eq_nat_card_basis` in LinearAlgebra/Finrank
    
    + Remove `StrongRankCondition` from `finrank_eq_zero_of_basis_imp_not_finite` and four subsequent lemmas
    
    
    
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>
    Co-authored-by: Andrew Yang <36414270+erdOne@users.noreply.github.com>

[33mcommit b4b3958576f5dd3234621675b1c3953ce5936945[m
Author: Alex J Best <alex.j.best@gmail.com>
Date:   Wed Dec 27 00:57:40 2023 +0000

    chore: delete omega syntax stub (#9294)
    
    as omega is now  in std

[33mcommit c8b9760e5831e2a867e07c6fd4819a042369ba52[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Dec 26 23:40:24 2023 +0000

    chore: deprecate `prod_zero_iff_exists_zero` (#9281)
    
    - Make `Multiset.prod_eq_zero_iff` a `simp` lemma.
    - Golf and deprecate `prod_zero_iff_exists_zero`; it was a bad API version of `Multiset.prod_eq_zero_iff`.
    - Make `Ideal.mul_eq_bot` a `simp` lemma`.
    - Add `Ideal.multiset_prod_eq_bot` (a `simp` lemma), deprecate `Ideal.prod_eq_bot`.
    
    The deprecated lemmas `prod_zero_iff_exists_zero` and `Ideal.prod_eq_bot` use `‚àÉ x ‚àà s, x = 0` instead of a simpler `0 ‚àà s` in the RHS.

[33mcommit 9757df4e07dcd5870b7118b17e70c6d3945251c7[m
Author: David Renshaw <dwrenshaw@gmail.com>
Date:   Tue Dec 26 22:33:55 2023 +0000

    chore: remove workarounds for lean4#1891 (#9290)
    
    We no longer need to explicitly specify the `Monotone` and `StrictMono` arguments, after https://github.com/leanprover/lean4/commit/069873d8e5e0e7bed18f71edb63d18da50748ec9 fixed https://github.com/leanprover/lean4/issues/1891.
    
    Compare to the mathlib3 declarations:
    https://github.com/leanprover-community/mathlib/blob/65a1391a0106c9204fe45bc73a039f056558cb83/src/data/prod/lex.lean#L93-L107

[33mcommit 04c6d77cb8c94fbdac2ac19ac5dec94434becf41[m
Author: David Renshaw <dwrenshaw@gmail.com>
Date:   Tue Dec 26 22:33:54 2023 +0000

    chore: use elab_as_elim directly, now that lean4#1900 is fixed (#9288)
    
    Adds the attribute `elab_as_elim` directly to the declarations of `strongSubRecursion`
    and `pincerRecursion`, rather than in separate commands.
    
    This change was made possible by https://github.com/leanprover/lean4/commit/8a573b5d87a42bd19307522ee747aaed44d9d71c, which fixed https://github.com/leanprover/lean4/issues/1900.

[33mcommit c228bcf4828ba56ebc951d2465053bbd8443abfe[m
Author: Arend Mellendijk <arend.mellendijk@gmail.com>
Date:   Tue Dec 26 22:33:53 2023 +0000

    chore: Remove superfluous lemma that uses `n.factors.toFinset` (#9248)
    
    I added `prod_factors_toFinset_of_squarefree` before `primeFactors` existed. I suspect it was missed during the refactor.

[33mcommit a76fbc3dff12eec9f09e3d9cf5088ccbbfaadd49[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Tue Dec 26 22:33:52 2023 +0000

    chore: audit remaining uses of "local homeomorphism" in comments (#9245)
    
    Almost all of them should speak about partial homeomorphisms instead.
    In two cases, I decided removing the "local" was clearer than adding "partial".
    
    Follow-up to #8982; complements #9238.

[33mcommit 299792d941f0a59647d1864dd577af60b4b0228f[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Tue Dec 26 22:33:51 2023 +0000

    chore: Generalise monotonicity of `‚Ä¢` lemmas in modules (#9241)
    
    Sort the lemmas in `Algebra.Order.Module` into `Algebra.Order.Module.Defs` and `Algebra.Order.Module.Pointwise`. Generalise them.
    
    A later PR will rename the lemmas to better match the naming convention.

[33mcommit 401acd59cb96b8310342f2858f8c2367169bb1a0[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Tue Dec 26 22:33:50 2023 +0000

    feat: Basic finset lemmas (#9225)
    
    From LeanAPAP and LeanCamCombi

[33mcommit 2bb32b69f94b8ec667c96265116075319dff0369[m
Author: Kevin Buzzard <k.buzzard@imperial.ac.uk>
Date:   Tue Dec 26 22:33:49 2023 +0000

    feat(Data/ZMod/Basic): add `inv_eq_of_mul_eq_one` (#9140)
    
    
    
    Co-authored-by: Johan Commelin <johan@commelin.net>

[33mcommit 230b6ac46eb0856e837dd9cf5984224f0af8b756[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Tue Dec 26 22:33:48 2023 +0000

    feat(Algebra/Homology): binary biproducts of homological complexes (#8966)

[33mcommit 4ad935a46c5d32b21cb074328e47bafbda245688[m
Author: Junyan Xu <junyanxumath@gmail.com>
Date:   Tue Dec 26 21:38:01 2023 +0000

    feat(LinearAlgebra, Cardinal): new cardinal lemmas to generalize some results about `Module.rank` in #9151 (#9253)
    
    + Proves that `Sup` (ciSup) commutes with cardinal addition (`ciSup_add_ciSup`) and multiplication. Generalize results in Cardinal/Basic introduced in #8842 to achieve this.
    
    + Use `ciSup_add_ciSup` to prove that the rank of a module is always at least the rank of a submodule plus the rank of the quotient by the submodule. Deduce that the rank of a product module is at least the sum of the ranks of the two factors.
    
    + Show that quotienting by a torsion submodule preserves the rank.
    
    + Golf `rank_zero_iff_forall_zero` using a recently added lemma.
    
    Co-authored-by: Andrew Yang <the.erd.one@gmail.com>
    
    
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>

[33mcommit 44b647d2739e3440177a880276e7a1103f7953b8[m
Author: Thomas Browning <tb65536@uw.edu>
Date:   Tue Dec 26 21:14:30 2023 +0000

    feat(FieldTheory/PolynomialGaloisGroup): The Galois group of an irreducible polynomial acts transitively on the roots (#9121)
    
    This PR adds a lemma stating that the Galois group of an irreducible polynomial acts transitively on the roots.

[33mcommit a8d482d3b7314f4cc1f9444109cc61e515dcc98d[m
Author: Kyle Miller <kmill31415@gmail.com>
Date:   Tue Dec 26 20:50:31 2023 +0000

    docs: kmill update areas (#9289)

[33mcommit fae2023047641e473313c6a2939ff2ed38489862[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Tue Dec 26 20:26:20 2023 +0000

    chore: Make Szem√©redi regularity calculation more readable (#9284)
    
    by using `calc`, `gcongr` and `positivity`. This should be much more maintainable now.
    
    Nicely enough, this reduces the total number of lines.

[33mcommit e62554d20db4062cf7dd9ad01990cabf59167e0e[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Tue Dec 26 19:32:16 2023 +0000

    feat: Basic probability lemmas assuming null-measurability (#9222)
    
    and transferring probabiity measures across `ULift`
    
    From LeanCamCombi and PFR

[33mcommit be0b59d276020004e21109a79cab71f259755349[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Dec 26 16:00:04 2023 +0000

    chore(*): use `‚àÄ s ‚äÜ t, _` etc (#9276)
    
    Changes in this PR shouldn't change the public API.
    The only changes about `‚àÉ x ‚àà s, _` is inside a proof.
    
    
    
    Co-authored-by: Jeremy Tan Jie Rui <reddeloostw@gmail.com>

[33mcommit 5a809b6adb326ce351012b12a484544844277798[m
Author: Andrew Yang <the.erd.one@gmail.com>
Date:   Tue Dec 26 13:40:32 2023 +0000

    feat: Define `IsUnramified` for infinite places (#9285)

[33mcommit 2d7e88a5774dc231a27040b50ca5107264e90747[m
Author: Andrew Yang <the.erd.one@gmail.com>
Date:   Tue Dec 26 13:40:31 2023 +0000

    feat: A dedekind domain that is local is a PID. (#9282)
    
    
    
    
    Co-authored-by: Andrew Yang <36414270+erdOne@users.noreply.github.com>

[33mcommit 08636fb93a0723e4c04ee9e06a62c41bc7ea1189[m
Author: Andrew Yang <the.erd.one@gmail.com>
Date:   Tue Dec 26 13:18:05 2023 +0000

    feat: derivative of minpoly is in the different ideal. (#9283)

[33mcommit cd497dfda2969bec9c1af7cceab419b87d9f95a6[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Tue Dec 26 12:09:06 2023 +0000

    feat: Taylor series for `cosh` and `sinh` (#9100)
    
    and derive `cosh x ‚â§ exp (x ^ 2 / 2)` as a corollary

[33mcommit 351b5cc4de50773693e2bd7b5bec183e6400f774[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Tue Dec 26 12:09:05 2023 +0000

    feat: Positivity extensions for `Real.sinh`, `Real.cosh` (#9098)
    
    Also fix the name of `Real.Mathlib.Meta.Positivity.evalExp` to `Mathlib.Meta.Positivity.evalRealPi`.

[33mcommit 9a4fb8ec99a5a7479ce6f3a5c76fa77bdf800951[m
Author: Alex Meiburg <alex.meiburg@gmail.com>
Date:   Tue Dec 26 12:09:04 2023 +0000

    Adding Descartes' Rule of Signs to the 100 problems (#9086)
    
    Adding Descartes' Rule of Signs to the 100 problems
    
    
    
    Co-authored-by: Alex Meiburg <timeroot.alex@gmail.com>

[33mcommit 9d8e41e6d887501a289ae7a84ce954b642f7dffb[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Tue Dec 26 12:09:03 2023 +0000

    feat(CategoryTheory/Triangulated): Functor.mapTriangle commutes with the shift (#9073)
    
    If `F : C ‚•§ D` is an additive functor which commutes with a shift by `‚Ñ§`, then `F.mapTriangle : Triangle C ‚•§ Triangle D` also commutes with the shift.

[33mcommit 40d7ce18c4ab0f4427db2ca13c8c175781a09a5b[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Dec 26 11:03:27 2023 +0000

    feat(Set/NAry): add `Set.image2_range` (#9220)
    
    Generalize `Set.range_smul_range` to any `Set.image2`.

[33mcommit 10597c9e3b0fd523e9e276a2f693d1fb0bd19619[m
Author: Thomas Zhu <thomas.zhu.sh@hotmail.com>
Date:   Tue Dec 26 11:03:26 2023 +0000

    feat: Lemmas about `ZMod` (#9143)
    
    Added some lemmas about `ZMod` and its units:
    * Generalized `lt` to `le` in two lemmas
    * `((a : ZMod n) : ZMod m) = a` if `m ‚â§ n`
    * `unitsMap` is surjective
    * `Units.map f (-a) = -Units.map f a` (which can be applied to `unitsMap`)
    * `Units.map (-1) = -1` (which can be applied to `unitsMap`)

[33mcommit 37eaeb06daeb349f898dfebd4add36ebfaf8e2be[m
Author: Christopher Hoskin <christopher.hoskin@gmail.com>
Date:   Tue Dec 26 11:03:25 2023 +0000

    feat(Algebra/Ring/CentroidHom): CentroidHom and algebras (#8699)
    
    Explore the relationship between the Centroid of a ring and algebra:
    
    - A a non-unital, non-associative semiring Œ± is an algebra over the Semiring CentroidHom Œ±
    - When the non-unital, non-associative semiring Œ±  is an algebra over the commutative semiring R, then CentroidHom Œ± is a ring over R, provided the range of the natural ring homomorphism from R into CentroidHom Œ± lies in the center of CentroidHom Œ±.
    
    
    
    Co-authored-by: Christopher Hoskin <mans0954@users.noreply.github.com>
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 499d53818b170da7d91a3c0a7ec2073e66dc409f[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Tue Dec 26 10:38:23 2023 +0000

    feat: define `QuadraticForm.IsOrtho` as `Q (x + y) = Q x + Q y` (#9141)
    
    This includes some basic API, and the connection with `BilinForm.IsOrtho`.
    
    The motivation for this definition are the results about vectors commuting in a clifford algebra.

[33mcommit 9672388ba07a802f39f605cdf13057c2795d5951[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Dec 26 07:50:43 2023 +0000

    chore(SpecialFunctions/Gamma): golf a proof (#9277)
    
    Use `induction .. generalizing` instead of `suffices`.

[33mcommit cb221686c8d8b56a19cef310d1c1038cc7e046a7[m
Author: Alex Kassil <contactalexkassil@gmail.com>
Date:   Tue Dec 26 07:50:42 2023 +0000

    doc(Algebra/Order/Group/Defs): fix typo `monoid` -> `group` for `LinearOrderedAddCommGroupWithTop` (#9266)

[33mcommit 6f7d92d3ab5051217bfcd12e5681aa63c21d0823[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Dec 26 07:50:41 2023 +0000

    feat(CompactOpen): unify 2 `continuous_eval` lemmas (#9264)
    
    Introduce a typeclass `LocallyCompactPair` that allows us to unify different versions of `ContinuousMap.continuous_eval` and similar lemmas.

[33mcommit 1b3fc93741a27b64a6fecabba44aab0bcfaabab6[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Tue Dec 26 07:50:40 2023 +0000

    chore: Protect `Nat.Prime.factorization` (#9242)
    
    Else this conflicts with `Nat.factorization`.

[33mcommit 23429eb29eb7dcfeb8194b9a1a35e2e74c10ff13[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Tue Dec 26 07:50:39 2023 +0000

    feat: `0 ‚â§ a * b ‚Üî (0 < a ‚Üí 0 ‚â§ b) ‚àß (0 < b ‚Üí 0 ‚â§ a)` (#9219)
    
    I had a slightly logic-heavy argument that was nicely simplified by stating this lemma. Also fix a few lemma names.
    
    From LeanAPAP and LeanCamCombi

[33mcommit 760ba709eb6f8adb505af117d846c2265e21e8a4[m
Author: David Renshaw <dwrenshaw@gmail.com>
Date:   Tue Dec 26 07:50:38 2023 +0000

    chore: address wlog porting note in OrdConnectedComponent (#9183)
    
    `Data.Set.Intervals.OrdConnectedComponent` was ported in #1303 and `wlog` was added later in #2144.
    
    Before this change, `trace.profiler` reports that elaborating this proof takes 0.13 seconds.
    After this change, it reports 0.10 seconds.

[33mcommit e49f0e6079363bb6e9ed5f801e9b8493b2101325[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Tue Dec 26 07:50:37 2023 +0000

    chore: remove deprecated MulEquiv.map_prod, AddEquiv.map_sum (#9078)

[33mcommit 0fd6ae715b50d878633dae38d6365ffc7283b99f[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Dec 26 07:27:10 2023 +0000

    chore(ExteriorAlgebra.Grading): drop `ExteriorAlgebra.instZero` (#9274)
    
    Locally change the priority of `MulZeroClass.toZero` instead.
    
    See also [Zulip chat](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Exterior.20algebras.20everywhere.2E.2E.2E)

[33mcommit 4fda6f75a24576d1bee6410cfcd8c2d587eaab96[m
Author: Andrew Yang <the.erd.one@gmail.com>
Date:   Tue Dec 26 07:02:18 2023 +0000

    feat: The galois group acts on infinite places. (#9280)

[33mcommit 925559df7538f58188bf3ba42208c10426adbafd[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Dec 26 07:02:17 2023 +0000

    chore(TopCat/Limits/Cofiltered): golf (#9279)

[33mcommit 9d6b50d77c4326994ca7b7553175db97fbf05b40[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Dec 26 07:02:16 2023 +0000

    chore(DedekindDomain): use `wlog` (#9278)
    
    * Use `wlog` tactic instead of an explicit `suffices`.
    * Restate a lemma in terms of an inequality between fractional ideals.
    * Drop an unneeded assumption, thanks to @erdOne
    
    Co-authored-by: @erdOne
    
    
    
    Co-authored-by: erd1 <the.erd.one@gmail.com>

[33mcommit 2041984887d0295090a7197265ca664d99404033[m
Author: Jz Pan <acme_pjz@hotmail.com>
Date:   Tue Dec 26 06:34:16 2023 +0000

    feat(FieldTheory/Perfect): add `rootsExpand[Pow]EquivRoots[_apply]` (#9271)
    
    ... which state that over a perfect integral domain `R` of characteristic `p`, `x ‚Ü¶ x ^ p ^ n` is a bijection from the set of roots of `Polynomial.expand R (p ^ n) f` to the set of roots of `f`.

[33mcommit caeafefd6df12ef3b8bb11f454f91acf5ecc3aa9[m
Author: Jz Pan <acme_pjz@hotmail.com>
Date:   Tue Dec 26 06:12:03 2023 +0000

    chore(RingTheory/Polynomial/SeparableDegree): add `HasSeparableContraction.isSeparableContraction` and ... (#9272)
    
    ‚Ä¶ move `Irreducible.hasSeparableContraction` to global namespace

[33mcommit 081c6724808d3086e3bf50d53f7e2213192d2438[m
Author: LW <hi@llllvvuu.dev>
Date:   Tue Dec 26 04:50:59 2023 +0000

    feat: `AddCommGroup` is `ZMod n` module if `n ‚Ä¢ x = 0` for all `x` (#9017)
    
    Generalization of content from PFR for doing linear algebra over $C_2^n$.
    
    
    
    
    Co-authored-by: L Lllvvuu <git@llllvvuu.dev>

[33mcommit 61efe6de0869cfb384372c69dd1f40a0219f687f[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Tue Dec 26 03:42:24 2023 +0000

    feat: The double factorial is positive (#9102)
    
    and other basic results. Also include a positivity extension to encode that new result.
    
    From LeanAPAP

[33mcommit 93e820f3619d1e6ec775246653c587c04439de0c[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Mon Dec 25 18:43:45 2023 +0000

    feat: bijective local homeomorphisms are homeomorphisms (#9247)
    
    Basis for generalising the result for local diffeomorphism to local structomorphisms.
    
    Co-authored-by: grunweg <grunweg@posteo.de>

[33mcommit 76d03d77d104449a51a5e8c24cb65d4968034992[m
Author: Junyan Xu <junyanxumath@gmail.com>
Date:   Mon Dec 25 18:43:44 2023 +0000

    refactor: Subfield of DivisionRing, not just Field (#8941)
    
    The definition of `Subfield.closure` is changed to use `sInf` like many substructures. In the commutative case (at the end of the file), it's shown to be equal to the original version, renamed to `commClosure`, in the new lemma `commClosure_eq_closure`. No lemma is removed, and all lemma statements remain the same.
    
    I do not change the name `Subfield` to `SubdivisionRing` as this kind of name abuse is accepted practice in mathlib, and since a division ring is also called a skew field.
    
    Also generalizes `RingHom.eqLocus(Field)` slightly.
    
    
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>

[33mcommit b1556bbbbd8d64d5c27db7c0440ee7239f8ecf46[m
Author: Jz Pan <acme_pjz@hotmail.com>
Date:   Mon Dec 25 18:05:55 2023 +0000

    feat(Data/Polynomial/Expand): add `leadingCoeff_expand` and `monic_expand_iff` (#9261)
    
    The first states that `expand` preserves leading coefficient; the second states that `expand` preserves monicity, hence gives a converse to `Monic.expand`.

[33mcommit 5ca2c4b10cd771000d2102070f389ad62d538f9c[m
Author: Jz Pan <acme_pjz@hotmail.com>
Date:   Mon Dec 25 18:05:54 2023 +0000

    feat(Algebra/CharP/ExpChar): add `expChar[_pow]_pos` (#9260)
    
    ... which states that (the power of) exponential characteristic is positive.

[33mcommit c26c85d1328a8c7f0134ac387dc97ea8a8660afb[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Dec 25 18:05:53 2023 +0000

    feat(Stirling): add a version in terms of `IsEquivalent` (#9231)

[33mcommit f1addf8d8855ededf73b4ce8cfae76f04102dd50[m
Author: Jz Pan <acme_pjz@hotmail.com>
Date:   Mon Dec 25 17:37:26 2023 +0000

    feat(FieldTheory/Adjoin): add `exists_lt_finrank_of_infinite_dimensional` (#9262)
    
    ... which state that an infinite algebraic extension has finite subextension with arbitrary large degree.

[33mcommit 0a89f4620adb6c399d759d717fb2770e10cddd23[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Mon Dec 25 16:17:43 2023 +0000

    chore: Deprecate pow monotonicity lemmas (#9235)
    
    Add deprecated aliases for all the lemmas removed in #9095 and fix a few renames that were botched.

[33mcommit 42ab70e7053780bb3ec0780a68443214ec958f3b[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Mon Dec 25 15:55:16 2023 +0000

    feat: (partial) homeomorphisms are local homeomorphisms (#9246)
    
    
    
    Co-authored-by: grunweg <grunweg@posteo.de>

[33mcommit 1edf6ce47ed7f185b313658f5ba148b929aad69b[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Dec 25 14:38:04 2023 +0000

    feat(Normed/Group): add `Filter.HasBasis.cobounded_of_norm` (#9244)

[33mcommit 490c92f8dbbd6ee71a847bcb0b6af9ec6cd73827[m
Author: Jz Pan <acme_pjz@hotmail.com>
Date:   Mon Dec 25 13:26:05 2023 +0000

    feat(FieldTheory/Separable): add some results regarding separable and no repeated roots (#9263)
    
    - `nodup_[a]roots_iff_of_splits`: a polynomial has no repeated roots if and only if it is separable.
    - `card_rootSet_eq_natDegree_iff_of_splits`: a polynomial has number of roots equal to its degree if and only if it is separable. A converse to `card_rootSet_eq_natDegree`.
    
    Also add some convenience lemmas:
    
    - `Separable.ne_zero`: a separable polynomial is not zero.
    - `Separable.map_minpoly`: if an element is separable over a small field, then it's also separable over a large field.

[33mcommit ef974f8646c0e311a0099369431445e66aff22d5[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Dec 25 13:26:04 2023 +0000

    chore(*): use `‚àÉ x ‚àà s, _` instead of `‚àÉ (x) (_ : x ‚àà s), _` (#9215)
    
    Follow-up #9184

[33mcommit 60af8c9a5a62728c41542c4fb5b472807bbb45c6[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Mon Dec 25 12:41:35 2023 +0000

    feat: add some missing API lemmas about `Nat.properDivisors` and `Nat.primeFactors` (#8858)
    
    
    
    Co-authored-by: Yury G. Kudryashov <urkud@urkud.name>

[33mcommit de998ec5efecfd02da10d832018622a6488a6565[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Dec 25 02:03:07 2023 +0000

    chore(Algebra/Operations): golf a proof (#9201)
    
    Golf the proof of `Submodule.smul_singleton` and rename it to `Submodule.singleton_smul`.

[33mcommit db487f117f40af7eaa922c3cb9e1e97b44f37e05[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Dec 25 01:16:24 2023 +0000

    feat(Topology/Order): upgrade `continuous_generateFrom` to an `iff` (#9259)
    
    Similarly, upgrade `tendsto_nhds_generateFrom`, `IsTopologicalBasis.continuous`, `Topology.IsLower.continuous_of_Ici`, and `Topology.IsUpper.continuous_iff_Iic`.
    
    The old lemmas are now deprecated, and the new ones have `_iff` in their names.
    Once we remove the old lemmas, we can drop the `_iff` suffixes.

[33mcommit 8919646c667738d920bf43c8e8d5df0063a9d22e[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Dec 25 00:48:40 2023 +0000

    chore(Data/Set/Function): rename some lemmas (#9257)
    
    - `Set.maps_image_to` ‚Üí `Set.mapsTo_image_iff`;
    - `Set.maps_univ_to` ‚Üí `Set.mapsTo_univ_iff`;
    - `Set.maps_range_to` ‚Üí `Set.mapsTo_range_iff`.
    
    In all cases, use implicit arguments instead of explicit arguments.
    In the last case, also generalize from `Type*` to `Sort*`
    and replace the RHS with its `simp`-normal form.
    
    Old lemmas stay there but are now deprecated.

[33mcommit dd0886f429862c93eec21ba4740b222a96f4f23d[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sun Dec 24 16:01:18 2023 +0000

    chore(Measure/Hausdorff): use `¬∑ ^ ¬∑` instead of `NNReal.rpow` (#9255)
    
    Also reflow some newlines

[33mcommit 640097f125a0e966c4624a50b0b853af7a529d68[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Sun Dec 24 16:01:17 2023 +0000

    feat: the volume in a MeasureSpace over an empty index is the Dirac mass (#8799)

[33mcommit 86393c89527027210ac6eb681537b87b1c5840dc[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Sun Dec 24 15:08:39 2023 +0000

    refactor: Use `Pairwise` wherever possible (#9236)
    
    Performed with a regex search for `‚àÄ (.) (.), \1 ‚â† \2 ‚Üí`, and a few variants to catch implicit binders and explicit types.
    
    I have deliberately avoided trying to make the analogous `Set.Pairwise` transformation  (or any `Pairwise (foo on bar)` transformations) in this PR, to keep the diff small.
    
    
    
    Co-authored-by: Ya√´l Dillies <yael.dillies@gmail.com>

[33mcommit e9fb5b31bb918376a758dec1ff49931062deb8f4[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sat Dec 23 21:23:09 2023 +0000

    chore(Subfield): use `rintro` (#9230)
    
    Also explain why it can't be used in another field

[33mcommit 4d1c265d88e183e9678897a5d575a7563553c3ad[m
Author: sven-manthe <sven.manthe@gmerek-manthe.de>
Date:   Sat Dec 23 21:23:08 2023 +0000

    fix: wrong links to (un)bundledHom (#9198)

[33mcommit 9dd8f15a754d7da57db37b93200b9b25a3c664ad[m
Author: Michael Stoll <Michael.Stoll@uni-bayreuth.de>
Date:   Sat Dec 23 20:27:39 2023 +0000

    doc: Example use case of `Finset.filter` (#9239)
    
    Mention the spelling `s.filter (¬∑ ‚àà t)` for the intersection of `s : Finset Œ±` and `t : Set Œ±` as a `Finset Œ±` in the docstring of `Finset.filter`.
    
    See [here](https://leanprover.zulipchat.com/#narrow/stream/217875-Is-there-code-for-X.3F/topic/Intersection.20of.20a.20Finset.20and.20a.20Set.20as.20a.20Finset.3F/near/409632763) on Zulip.
    
    
    
    Co-authored-by: Michael Stoll <99838730+MichaelStollBayreuth@users.noreply.github.com>

[33mcommit 4a335977d31a2993f09064e9267fa169cdbf20ca[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sat Dec 23 18:42:55 2023 +0000

    chore(Data/Set/Pointwise): golf (#9205)

[33mcommit ea70e843f6449df0777fbfebe222d09a083bd844[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Sat Dec 23 10:52:46 2023 +0000

    refactor: Deduplicate monotonicity of `‚Ä¢` lemmas (#9179)
    
    Remove the duplicates introduced in #8869 by sorting the lemmas in `Algebra.Order.SMul` into three files:
    * `Algebra.Order.Module.Defs` for the order isomorphism induced by scalar multiplication by a positivity element
    * `Algebra.Order.Module.Pointwise` for the order properties of scalar multiplication of sets. This file is new. I credit myself for https://github.com/leanprover-community/mathlib/pull/9078
    * `Algebra.Order.Module.OrderedSMul`: The material about `OrderedSMul` per se. Inherits the copyright header from `Algebra.Order.SMul`. This file should eventually be deleted.
    
    I move each `#align` to the correct file. On top of that, I delete unused redundant `OrderedSMul` instances (they were useful in Lean 3, but not anymore) and `eq_of_smul_eq_smul_of_pos_of_le`/`eq_of_smul_eq_smul_of_neg_of_le` since those lemmas are weird and unused.

[33mcommit bb307ab2566ba3c58e63ee327d1139781a6b94ea[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sat Dec 23 07:20:05 2023 +0000

    refactor(Order/Extension): use `OrderHom` (#9232)
    
    Redefine `toLinearExtension` as an `OrderHom`.

[33mcommit 539b49a5a004e87f927ba5b98d1e8d2efcbd5472[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sat Dec 23 07:20:04 2023 +0000

    chore(Filter/NAry): use `Filter.copy` to define `map‚ÇÇ` (#9217)

[33mcommit 66c1128b276e9627e793b992beedb20eb6d7f437[m
Author: Xavier Roblot <46200072+xroblot@users.noreply.github.com>
Date:   Sat Dec 23 07:20:03 2023 +0000

    feat: If the monoid S contains 0 then the localization at S is trivial (#9207)

[33mcommit 08e759d85fd728a516ad5fe2fbd19740d141a317[m
Author: Junyan Xu <junyanxumath@gmail.com>
Date:   Sat Dec 23 07:20:02 2023 +0000

    feat: `OrderIso` between `minimals` and `maximals` (#9190)
    
    Also extracts some lemmas from `minimals_image_of_rel_iff_rel` and remove `_on` from `maximals_image_of_rel_iff_rel_on` to match the former.
    
    for [#9088](https://github.com/leanprover-community/mathlib4/pull/9088#discussion_r1434641111)
    
    
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>

[33mcommit a9c72c7018c30a7edf1517d93753996c0f2a0da2[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Sat Dec 23 07:20:01 2023 +0000

    feat(SetTheory/Cardinal/Basic): add missing `lift` versions of `iUnion` lemmas (#9187)
    
    Also move some lift lemmas to be next to their non-lift counterparts.
    
    For now this does not generalize to `Œπ : Sort v` as this would make a mess with `PLift`.

[33mcommit a7fbc9ec101d941ce1e02955a6e130a25d5ab907[m
Author: Michael Stoll <Michael.Stoll@uni-bayreuth.de>
Date:   Sat Dec 23 06:38:50 2023 +0000

    feat(Analysis/SpecialFunctions/Complex/Arg): add definition for slit plane and API, and use it (#9116)
    
    In preparation of future PRs dealing with estimates of the complex logarithm and its Taylor series, this introduces `Complex.slitPlane` for the set of complex numbers not on the closed negative real axis (in `Analysis.SpecialFunctions.Complex.Arg`), adds a bunch of API lemmas, and replaces hypotheses of the form `0 < x.re  ‚à® x.im ‚â† 0` by `x ‚àà slitPlane` in several other files.
    
    (We do not introduce a new file for that to avoid circular imports with `Analysis.SpecialFunctions.Complex.Arg`.)
    
    
    
    Co-authored-by: Yury G. Kudryashov <urkud@urkud.name>

[33mcommit c56af57a40806059eac6542227502b4bd959fc38[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Sat Dec 23 00:28:56 2023 +0000

    feat(Algebra/GradedMonoid): missing lemmas about `fst` and `snd` (#9227)

[33mcommit 161290d8e2ea232b3326ffd10fbe76e2d5b795f9[m
Author: Chris Birkbeck <c.birkbeck@ucl.ac.uk>
Date:   Sat Dec 23 00:28:55 2023 +0000

    feat(ModularForm): Graded Ring instance on spaces of modular forms (#9164)
    
    This adds the graded ring instance to spaces of modular forms.
    
    
    Co-authored-by: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>
    Co-authored-by: Chris Birkbeck <c.birkbeck@uea.ac.uk>

[33mcommit e9294e6f5daa84082cd381e7f6e9035b9aca7ef3[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Fri Dec 22 23:36:01 2023 +0000

    chore(Subgroup/Pointwise): golf, use `‚à©` (#9208)

[33mcommit 983cf2223ba675764dd6602c425ff6d20a683993[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Fri Dec 22 23:36:00 2023 +0000

    chore(*): use `rintro` to golf some proofs (#9204)

[33mcommit 038fe40c101de4ef704c77f8f75ee38f12f89ea7[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Fri Dec 22 23:13:09 2023 +0000

    chore(Topology/../Nonarchimedean): minor golf (#9209)

[33mcommit 503aade4d0e7ff8a311f99e9a1f57f43ec5d3cf7[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Fri Dec 22 22:10:09 2023 +0000

    feat: Antidiagonal lemmas (#9224)
    
    From LeanAPAP

[33mcommit 3b841d12b5b046bbe24b055b4331f6ca501c6bd0[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Fri Dec 22 22:10:08 2023 +0000

    doc(Filter/Pointwise): fix comments (#9202)

[33mcommit 21e45c8b00b52c102e804b9df4bca053a6e80bcd[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Fri Dec 22 20:59:56 2023 +0000

    chore(Set/NAry): drop `Set.image3` (#9221)
    
    `Set.image3` was only used to prove associativity of `Set.image2`. It had basically no API and had exactly one (easily replaced) use outside `Data.Set.NAry`). There is no specific function as a replacement, but it can be obtained by combining `Set.image2` twice.

[33mcommit 090f9f77052de2983217e53b284a14f1cb0b13b6[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Fri Dec 22 20:59:55 2023 +0000

    chore(Computability/RegularExpressions): golf (#9218)
    
    Golf a proof. Also add `Language.mem_kstar_iff_exists_nonempty`.

[33mcommit 03289344716225f680d691309eb28e215f52f731[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Fri Dec 22 20:59:54 2023 +0000

    chore(Algebra/FilterBasis): use `mul_mem_mul` to improve readability (#9216)

[33mcommit eb17faa563b436797bb84be190443cbb06ff5ef2[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Fri Dec 22 20:59:53 2023 +0000

    chore(Set/Pointwise/Finite): golf (#9214)

[33mcommit 1462ef73241f5758f11cdac7763f2ceb9ab82a7f[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Fri Dec 22 20:59:52 2023 +0000

    chore(Normed/../AddTorsor): improve readability (#9213)
    
    Pass more arguments to `choose!`
    to avoid using projections later in the proof.

[33mcommit 83012aa2231c7cea213101cf2ca2a99ab1e7ddcd[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Fri Dec 22 20:59:51 2023 +0000

    chore(Topology/../MulAction): golf (#9212)

[33mcommit 763e4db0d9b64b9462d1e1ff24a84952442b9eef[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Fri Dec 22 20:59:50 2023 +0000

    chore(*): use `Set.image2_subset_iff` (#9206)
    
    Use `Set.image2_subset_iff`, `Set.mul_subset_iff`, and
    `Set.add_subset_iff` instead of `rintro`s.
    
    Also protect some `*.image2` lemmas.

[33mcommit 07756d1c93a4359598a8cb64e0dad5437852db3b[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Fri Dec 22 20:03:33 2023 +0000

    feat: Stabilizers of sets/finsets (#8924)
    
    Prove a bunch of results about `stabilizer G s` where `Group G`, `MulAction G Œ±`, `s : Set Œ±`.

[33mcommit e8851014c9641763b821bd101af090668517fd25[m
Author: Filippo A. E. Nuccio <filippo.nuccio@univ-st-etienne.fr>
Date:   Fri Dec 22 16:32:20 2023 +0000

    doc(Analysis.Complex.CauchyIntegral): add missing word (#9211)
    
    Replace "continuous the closed annulus" with " continuous on the closed annulus"

[33mcommit 623cc31f4dd18f45cd1a9901104271f1ba6328c1[m
Author: Martin Dvo≈ô√°k <martin.dvorak@matfyz.cz>
Date:   Fri Dec 22 14:46:31 2023 +0000

    feat(Computability/ContextFreeGrammar): derivations with prefix or postfix (#8630)

[33mcommit 9d20fb4abbdd53d7d7bb274c7ed11cd2aa906f85[m
Author: Mario Carneiro <mcarneir@andrew.cmu.edu>
Date:   Fri Dec 22 13:50:36 2023 +0000

    fix: use `--install` flag in `lake update` hook (#9197)
    
    Fixes an issue [reported on Zulip](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/post-update.20hook.20failure/near/409543553). Without the `--install` flag elan will not download the new toolchain if it doesn't already have it. Since this is in an update call which is already expected to download things I think this should be okay.
    
    
    
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>

[33mcommit c54f3fb499e895cdb560e8a779efaec9b4b3c159[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Fri Dec 22 13:04:11 2023 +0000

    feat: `1` is the only positive element of finite order (#9110)
    
    and other simple lemmas about the order of elements in a group
    
    From LeanAPAP

[33mcommit 98067b25fcb5c00c13b4ac74ab781e2ef6689812[m
Author: Jz Pan <acme_pjz@hotmail.com>
Date:   Fri Dec 22 10:33:26 2023 +0000

    feat(LinearAlgebra/Dimension): add various `surjective_injective` results (#9156)
    
    Add various results concerning modules `M / R` and `M' / R'` with maps `i : R -> R'` and `j : M -> M'` which are compatible with scalar multiplications on `M` and `M'`.
    
    - if `i : R' -> R` is injective and `j` is injective, then:
      - `LinearIndependent.map_of_injective_injective`: `j` preserves linear independent subsets.
      - `[lift_]rank_le_of_injective_injective`: rank of `M / R` is smaller than or equal to the rank of `M' / R'`.
    - if `i` is surjective and `j` is injective, then:
      - `LinearIndependent.map_of_surjective_injective`: `j` preserves linear independent subsets.
      - `[lift_]rank_le_of_surjective_injective`: rank of `M / R` is smaller than or equal to the rank of `M' / R'`.
    - if `i` and `j` are both bijective, then `[lift_]rank_eq_of_equiv_equiv`: rank of `M / R` is equal to the rank of `M' / R'`.
    
    Also add the `Algebra` versions of these results.

[33mcommit d0256633f15cd902aaf6fef5c11af0678988d2c4[m
Author: Junyan Xu <junyanxumath@gmail.com>
Date:   Fri Dec 22 09:50:03 2023 +0000

    chore(LinearAlgebra): golf two proofs (#9192)
    
    Golf two old proofs from [mathlib3#3056](https://github.com/leanprover-community/mathlib/commit/cc16d35b642fc1bb838f6a2555b37a32a5465c32)
    
    
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>

[33mcommit ccbb556636ec6181efbf0c9ebc8940ec8f06d138[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Fri Dec 22 09:27:59 2023 +0000

    feat: local diffeomorphisms (#8736)
    
    Define local diffeomorphisms between smooth manifolds. As an auxiliary definition, we add `PartialDiffeomorph`, the analogue of `PartialHomeomorph` for diffeomorphisms.
    
    In future PRs, we will
    - show that local diffeomorphisms have invertible differential
    - show the converse, using the inverse function theorem: if the differential of $f$ at $x$ is invertible, $f$ is a local diffeomorphism at $x$

[33mcommit a2edc39f07fd1fbbe284a8fd73628d8bfa35de07[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Fri Dec 22 08:43:20 2023 +0000

    chore(Order/Filter/NAry): drop `Filter.map‚ÇÉ` (#9182)
    
    It was used only once to prove associativity of `Filter.map‚ÇÇ`.

[33mcommit 8f013c457aea2ea1b0156c0c98043c9ed018529f[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Fri Dec 22 06:58:39 2023 +0000

    chore(ContinuousMonoidHom): golf (#9189)

[33mcommit d7fc2c57d205f65fda14073ee3c0cdebd87163c9[m
Author: Siddharth <siddu.druid@gmail.com>
Date:   Fri Dec 22 05:11:55 2023 +0000

    fix: remove `++` in `throwError` in favor of {""} (#8132)
    
    This correctly interpolates the error messages
    in the `cases'` tactic.
    
    Reported at:
    https://leanprover.zulipchat.com/#narrow/stream/270676-lean4/topic/uninterpolated.20error.20message.3A.20unecessary.20generalizing/near/400018518

[33mcommit 1be5db8befe8e11141567caec4864747adecb14e[m
Author: Scott Morrison <scott@tqft.net>
Date:   Fri Dec 22 02:15:40 2023 +0000

    chore: bump ProofWidgets to v0.0.24 (#9191)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 58eef79b1520d17ff085f58b599690c112a47e6b[m[33m ([m[1;33mtag: v4.5.0-rc1[m[33m)[m
Author: Scott Morrison <scott@tqft.net>
Date:   Fri Dec 22 00:30:57 2023 +0000

    chore: move to v4.5.0-rc1, and merge changes from `bump/v4.5.0` branch. (#9188)
    
    This PR:
    * bumps to lean-toolchain to `v4.5.0-rc1`
    * bumps the Std and Aesop dependencies to their versions using `v4.5.0-rc1`
    * merge the already reviewed changes from the `bump/v4.5.0` branch
      * adaptations for leanprover/lean4#2923 in #9011
      * adaptations for leanprover/lean4#2973 in #9161
      * adaptations for leanprover/lean4#2964 in #9176
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit cf8e23a62939ed7cc530fbb68e83539730f32f86[m[33m ([m[1;33mtag: v4.4.0[m[33m)[m
Author: Scott Morrison <scott@tqft.net>
Date:   Thu Dec 21 23:05:32 2023 +0000

    chore: move toolchain to v4.4.0 (#9186)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 14c729603a56a1a02f31a1b28b852fe56d29c058[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Thu Dec 21 20:35:54 2023 +0000

    chore(*): use `‚àÉ x ‚àà s, _` instead of `‚àÉ (x) (_ : x ‚àà s), _` (#9184)
    
    Search for `[‚àÄ‚àÉ].*(_` and manually replace some occurrences with more readable versions.
    In case of `‚àÄ`, the new expressions are defeq to the old ones.
    In case of `‚àÉ`, they differ by `exists_prop`.
    
    In some rare cases, golf proofs that needed fixing.

[33mcommit da34c254e89b2cde09d066068c17cf30ebe603f8[m
Author: Wrenna Robson <wren.robson@gmail.com>
Date:   Thu Dec 21 16:16:28 2023 +0000

    fix(Data/Option/Defs): Remove `Option.rel` and `Option.maybe`, superceded by std4 (#9178)
    
    Remove `Option.rel` and `Option.maybe`, which have identical definitions to `Option.Rel` and `Option.sequence`, and aren't used anywhere.

[33mcommit 3fca282c58b247f313d18951a2f93d8341cd48a7[m
Author: Eric Rodriguez <ericrboidi@gmail.com>
Date:   Thu Dec 21 16:16:27 2023 +0000

    chore: remove uses of `cases'` (#9171)
    
    I literally went through and regex'd some uses of `cases'`, replacing them with `rcases`; this is meant to be a low effort PR as I hope that tools can do this in the future.
    
    `rcases` is an easier replacement than `cases`, though with better tools we could in future do a second pass converting simple `rcases` added here (and existing ones) to `cases`.

[33mcommit 850c6404726dcb10ca053c6080be7e8368093523[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Thu Dec 21 16:16:26 2023 +0000

    refactor: use the new homology API for the four and the five lemmas (#9022)
    
    This PR refactors the four and the five lemmas so as to use the new homology API. The files `Algebra.Homology.ShortExact.Abelian` and `Algebra.Homology.ShortExact.Preadditive` are also removed because the content of these files has become redundant with the new homology API.
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit 7ab29418357366001b8ecc5679c730d32698fc1b[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Thu Dec 21 15:05:02 2023 +0000

    feat(Order/RelIso): define missing instances (#9170)
    
    Define `EmbeddingLike (r ‚Ü™r s) Œ± Œ≤` and `EquivLike (r ‚âÉr s) Œ± Œ≤`.

[33mcommit e7c657f3b4b6f175895c3c1143a5275d24ba418c[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Thu Dec 21 09:38:26 2023 +0000

    chore(Perm/Basic): golf (#9174)
    
    Golf 3 proofs

[33mcommit 4cf009544549e218641180e9d1ea8d220a71476e[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Thu Dec 21 08:37:10 2023 +0000

    feat(Topology/Compact): an infinite set has an accumulation point (#9173)
    
    Add more versions of this statement. Also remove `simp` from `Filter.disjoint_cofinite_{left,right}` as RHS is not much simpler than LHS.

[33mcommit e352bb79f198b8bf40d2e471d40fd81198ded2bc[m
Author: Scott Morrison <scott@tqft.net>
Date:   Thu Dec 21 07:24:09 2023 +0000

    chore: bump Std to leanprover/std4#463 (#9175)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 979574679a2cd5e540a7bdb2dd5c8d0752ffc87a[m
Author: Scott Morrison <scott@tqft.net>
Date:   Thu Dec 21 04:20:55 2023 +0000

    chore: bump Std to leanprover/std4#277 (#9172)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 56ce93a6be8d523581e416d982f29abf429226d8[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Dec 20 23:32:43 2023 +0000

    chore(UniformConvergenceTopology): use `variable`, fix types (#9132)
    
    * Use `variable`.
    * Add `toFun`/`ofFun` to abuse the definitional equality less often.
    * Review instances in `Topology.Algebra.UniformConvergence`.
    * Replace `*_apply` lemmas with `toFun_*`/`ofFun_*` lemmas.

[33mcommit e4dff73fddfbed90924bfc66a42e490372b572a3[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Wed Dec 20 20:21:09 2023 +0000

    doc: Explain relative Sylow theorems (#9158)
    
    Requested by @urkud

[33mcommit d9b8c716a7ca6135a9b0007f7a516c4008e79390[m
Author: David Loeffler <d.loeffler.01@cantab.net>
Date:   Wed Dec 20 19:25:45 2023 +0000

    feat(NumberTheory/ZetaFunction): residue of Riemann zeta at s = 1 (#9165)
    
    We add the computation of the residue of the completed and non-completed Riemann zeta functions at `s = 1`.

[33mcommit 96436702fcc78aecdf2d5d53a9dae698ee0ccb70[m
Author: Jujian Zhang <jujian.zhang1998@outlook.com>
Date:   Wed Dec 20 19:25:44 2023 +0000

    feat(RingTheory/Artinian): the collection of maximal ideals in an artinian ring is finite (#9087)
    
    Co-PR: #9088 (minimal prime ideals in Noetherian ring are finite)

[33mcommit 58d258cfa010b770993287cf7a8c694044935172[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Dec 20 19:25:43 2023 +0000

    feat(Filter/{NAry,Pointwise}): add missing `NeBot` instances (#9055)
    
    - Add missing `Filter.NeBot` instances for `Filter.map‚ÇÇ` and pointwise operations, rename `Filter.prod_neBot'` to `Filter.prod.instNeBot`.
    - Make `Filter.prod_eq_bot` a `simp` lemma.
    - Protect some lemmas.
    - Golf some proofs.
    - Make `Filter.map‚ÇÇ_left` and `Filter.map‚ÇÇ_right` take `NeBot` argument as an instance.

[33mcommit 051aa73462329fa6f7421c7112a573d135b828c1[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Wed Dec 20 19:25:42 2023 +0000

    feat: non-integrability results of derivatives on `[a, +oo)` (#8712)
    
    We have in the library the lemma `not_intervalIntegrable_of_tendsto_norm_atTop_of_deriv_isBigO_filter`, saying that if a function tends to infinity at a point in an interval `[a, b]`, then its derivative is not interval-integrable on `[a, b]`. We generalize this result to allow for any set instead of `[a, b]`, and apply it to half-infinite intervals.
    
    In particular, we characterize integrability of `x^s` on `[a, +oo)`, and deduce that `x^s` is never integrable on `[0, +oo)`. This makes it possible to remove one assumption in Lemma `mellin_comp_rpow` on the Mellin transform.

[33mcommit 65a96a1872ba7cd79cefa12971c2172695541e2e[m
Author: Scott Carnahan <128885296+ScottCarnahan@users.noreply.github.com>
Date:   Wed Dec 20 19:00:34 2023 +0000

    feat: define nonunital power-associativity (#8618)
    
     introduce `Prop`-valued mixin `PNatPowAssoc` and show that power-associativity holds for semigroups.

[33mcommit fb0bfc6b695eb2daf3e97642d235ce657dd9efde[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Dec 20 15:54:22 2023 +0000

    feat(Order/Filter): add lemmas about `Eventually*` and `iInter`/`iUnion` (#9090)
    
    As requested by Terence Tao on [Zulip](https://leanprover.zulipchat.com/#narrow/stream/217875-Is-there-code-for-X.3F/topic/Where.20is.20EventuallyEq.2Efinite_iInter.3F)

[33mcommit 56c6c0952afa7911701c775dea510efbe9626ccb[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Wed Dec 20 15:54:21 2023 +0000

    feat: `f i * f j`, `f k * f l` are independent if `f` is (#8971)
    
    Also prove that a subsingleton family is always independent and that an independent family implies the measure is a probability measure.
    
    This latter result means we can drop `IsProbabilityMeasure Œº` assumptions from many theorems.
    
    From PFR
    
    
    
    
    Co-authored-by: sgouezel <sebastien.gouezel@univ-rennes1.fr>

[33mcommit a4a7700f822368a3979ea19aaad20f5d3c2beefa[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Wed Dec 20 15:10:33 2023 +0000

    refactor: Closure predicate for `ClosureOperator` (#9153)
    
    This PR is the result of two years and a half of pondering.
    
    The only way we ever define closure operators is by having a pre-existing "closedness" predicate and defining the closure of an element `x` as the infimum of all closed `y ‚â• x` (assuming we're in a complete lattice). In particular, the emphasis is not on the **preorder of closed elements**, but on the **closedness predicate**. Morally, this is because a closure operator is the same as a Galois connection to the preorder of closed elements, but without mentioning the preorder of closed elements. That means that if we cared about the preorder of closed elements, we would not have wanted a closure operator in the first place, but a Galois connection.
    
    All this said, here's what this PR does
    * Add an `IsClosed` predicate to `ClosureOperator`. This redundant field is here to fix definitional equalities.
    * Remove the set `closeds`. This is mostly replaced by the predicate, except in the map `toCloseds`, so we...
    * ... Introduce an `abbrev Closeds` for the order of closed elements
    * Rename `toClosed` to `toCloseds` to match.
    * Rename the constructor `mk‚ÇÉ` to the more sexy `ofPred`. This is virtually the only useful constructor. Maybe it should even be taken as the definition, but I haven't gone that far.
    * Rename the old `ofPred` to `ofCompletePred`. `ofCompletePred` is a specialisation of `ofPred` to the case where we are in a complete lattice.
    * Remove a bunch of lemmas that are junk now that the definitional equality for `IsClosed` can be controlled.
    * Golf existing uses of `ClosureOperator`. The diff here, I think, truly demonstrates that this PR is a step forward.
    
    I am not extending the refactor to `LowerAdjoint` because:
    * I am still not sure we want `LowerAdjoint` to even exist
    * The rationale of preferring the closedness predicate over the preorder of closed elements is less strong here.
    * I am lazy.
    
    It is however easy to do the same refactor if wanted.

[33mcommit 49ee3b274b8d6dca510739494eb2ff0d0e484e8f[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Dec 20 14:02:36 2023 +0000

    refactor(FDeriv): use `structure` (#8907)
    
    This way we can easily change the definition so that it works for topological vector spaces without generalizing any of the theorems right away.

[33mcommit fdfe843b911ded6e258e75e7cd3ca2e4eb4c8b80[m
Author: R√©my Degenne <remydegenne@gmail.com>
Date:   Wed Dec 20 13:39:57 2023 +0000

    feat(MeasureTheory): define semi-rings of sets (#8867)
    
    A semi-ring of sets `C` (in the sense of measure theory) is a family of sets containing `‚àÖ`, stable by intersection and such that for all `s, t ‚àà C`, `s \ t` is equal to a disjoint union of finitely many sets in `C`.
    
    Co-authored-by: Peter Pfaffelhuber <p.p@stochastik.uni-freiburg.de>
    
    Part of the formalization of the Kolmogorov Extension theorem.
    
    
    
    Co-authored-by: RemyDegenne <Remydegenne@gmail.com>
    Co-authored-by: sgouezel <sebastien.gouezel@univ-rennes1.fr>

[33mcommit 905338fc510184d673712c1062b5a0c69d223e13[m
Author: R√©my Degenne <Remydegenne@gmail.com>
Date:   Wed Dec 20 13:11:49 2023 +0000

    feat: projective families of measures and projective limits (#8933)
    
    Co-authored-by: Peter Pfaffelhuber <p.p@stochastik.uni-freiburg.de>
    
    Part of the formalization of the Kolmogorov Extension theorem.
    
    
    
    Co-authored-by: R√©my Degenne <remydegenne@gmail.com>

[33mcommit f1c7086be3b9310ddbfc133e5d26b9d3cd7ebc67[m
Author: Junyan Xu <junyanxumath@gmail.com>
Date:   Wed Dec 20 12:26:06 2023 +0000

    chore(LinearAlgebra): remove some StrongRankCondition (#9152)
    
    
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>

[33mcommit 95ddd8942a0d4a5522b7d70738cb3e31df717be5[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Wed Dec 20 10:04:48 2023 +0000

    chore: tidy various files (#9016)

[33mcommit 3f93618efe0e23ebaa39b88e28a5297940088690[m
Author: Scott Morrison <scott@tqft.net>
Date:   Wed Dec 20 09:20:41 2023 +0000

    chore: bump Std to match leanprover/std4#438 (#9157)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>

[33mcommit b8e33bbb048dce1b1d5742c0eee4ba8bcfc032b8[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Wed Dec 20 00:53:37 2023 +0000

    feat: add `ContinuousMap.compStarAlgHom`, postcomposition by a `StarAlgHom` (#8992)

[33mcommit 363e9f6e2664389844b297373e084213553574b1[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Tue Dec 19 21:09:56 2023 +0000

    feat: Relative Sylow's first theorems (#8944)
    
    Prove variants of Sylow' first theorem relative to a subgroup.
    
    From PFR
    
    Co-authored-by: S√©bastien Gou√´zel <sebastien.gouezel@univ-rennes1.fr>

[33mcommit e851153f5f010e15a4af4913d9503e622a51273b[m
Author: Jujian Zhang <jujian.zhang1998@outlook.com>
Date:   Tue Dec 19 17:29:48 2023 +0000

    feat(Data/Finset/Card): the number of element satisfying `P` is no greater than `n` iff every subset with more than `n` elements contains an element not satisfying `P` (#9048)

[33mcommit 9bf055e57c1bfa7c2daf0be2ae10352deb79c80b[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Tue Dec 19 16:45:06 2023 +0000

    refactor(Topology/IsLocalHomeomorph): various small clean-ups (#9150)
    
    - revamp and extend the module docstring
    - add some lemma docstrings
    - use EqOn where possible
    - use \mapsto instead of =>
    - replace one terminal rfl by the explicit lemma invoked

[33mcommit ef00edadfeb7fc4653f8a8b3e5c218fc5cd1a228[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Tue Dec 19 16:45:05 2023 +0000

    feat(LinearAlgebra/CliffordAlgebra): invertibility of quadratic form elements (#9076)
    
    This also includes a lemma about transferring invertibility of the base ring between algebras.

[33mcommit ea02b9e2f48c3b5d2d9bd8208f25276ad4af7915[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Tue Dec 19 15:21:13 2023 +0000

    feat: More `rpow` lemmas (#9108)
    
    A bunch of easy lemmas about `Real.pow` and the golf of existing lemmas with them.
    
    Also rename `log_le_log` to `log_le_log_iff` and `log_le_log'` to `log_le_log`. Those misnames caused several proofs to bother with side conditions they didn't need.
    
    From LeanAPAP

[33mcommit 45a5e1b4a6326b3ee087442e8165020cbbea9ec3[m
Author: Andrew Yang <the.erd.one@gmail.com>
Date:   Tue Dec 19 15:21:11 2023 +0000

    feat: Define the different ideal. (#9063)

[33mcommit deb0c4a512473796b27755d7668a58c5dd4e69ca[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Tue Dec 19 13:41:23 2023 +0000

    feat: Monotonicity of `‚Ä¢` on `Finsupp` (#9148)

[33mcommit a369b3d6c9ebfa634af75b22cd75d55653909b92[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Tue Dec 19 13:41:21 2023 +0000

    feat(Data/Set/Function): add MapsTo.map_nonempty (#9093)
    
    Extracted from #8160.
    
    
    
    Co-authored-by: grunweg <grunweg@posteo.de>

[33mcommit 98fe17fdecd8106f4167ee04d05297c975b86a3a[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Tue Dec 19 12:55:32 2023 +0000

    feat: `MeasurableSpace` instance for `ULift` (#8967)
    
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>
    Co-authored-by: sgouezel <sebastien.gouezel@univ-rennes1.fr>

[33mcommit 5e71f8d00fa818ab9d68e8ddbc24862a8f0be7fc[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Tue Dec 19 12:55:31 2023 +0000

    feat: Ruzsa covering for sets (#8916)
    
    Add a version covering for `Set Œ±` and `Nat.card`.
    
    From PFR
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 1150c07e0f052641602800a07122d7c6cb6f964d[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Tue Dec 19 12:55:30 2023 +0000

    feat: interior and boundary of a manifold (#8624)
    
    We use the standard definition, with respect to the preferred charts at each point.
    
    Open-ness of the interior is non-trivial, hence left to a future PR:
    - for instance, in finite dimensions this requires e.g. knowing the homology of spheres, which mathlib doesn't yet have.
    
    
    
    Co-authored-by: Winston Yin <winstonyin@gmail.com>

[33mcommit 7d208e649ff0dceb1b6e2764e4b931947652e956[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Tue Dec 19 12:00:10 2023 +0000

    feat: Preimage of pointwise multiplication (#8956)
    
    From PFR
    
    Co-authored-by: Patrick Massot <patrickmassot@free.fr>

[33mcommit fdcf8b6684792c86c4384ee818a0eb168962f9a4[m
Author: Andrew Yang <the.erd.one@gmail.com>
Date:   Tue Dec 19 09:58:07 2023 +0000

    feat: Relation between `IsSuccLimit` and `iSup`. (#8842)
    
    
    
    
    Co-authored-by: Andrew Yang <36414270+erdOne@users.noreply.github.com>

[33mcommit 7c98318ddb1418d129b1457cb2eeb7fa18423d79[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Tue Dec 19 09:33:21 2023 +0000

    feat(LinearAlgebra/Matrix/PosDef): integer powers preserve `PosSemidef` (#9147)

[33mcommit 21ad2c6e9b30d63ade52c7b3aef40e7cc38b82c6[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Tue Dec 19 08:26:03 2023 +0000

    feat: Mixins for monotonicity of scalar multiplication (#8869)
    
    This PR introduces eight typeclasses for monotonicity of left/right scalar multiplication by nonnegative elements:
    * `PosSMulMono`: If `a ‚â• 0`, then `b‚ÇÅ ‚â§ b‚ÇÇ` implies `a ‚Ä¢ b‚ÇÅ ‚â§ a ‚Ä¢ b‚ÇÇ`.
    * `PosSMulStrictMono`: If `a > 0`, then `b‚ÇÅ < b‚ÇÇ` implies `a ‚Ä¢ b‚ÇÅ < a ‚Ä¢ b‚ÇÇ`.
    * `PosSMulReflectLT`: If `a ‚â• 0`, then `a ‚Ä¢ b‚ÇÅ < a ‚Ä¢ b‚ÇÇ` implies `b‚ÇÅ < b‚ÇÇ`.
    * `PosSMulReflectLE`: If `a > 0`, then `a ‚Ä¢ b‚ÇÅ ‚â§ a ‚Ä¢ b‚ÇÇ` implies `b‚ÇÅ ‚â§ b‚ÇÇ`.
    * `SMulPosMono`: If `b ‚â• 0`, then `a‚ÇÅ ‚â§ a‚ÇÇ` implies `a‚ÇÅ ‚Ä¢ b ‚â§ a‚ÇÇ ‚Ä¢ b`.
    * `SMulPosStrictMono`: If `b > 0`, then `a‚ÇÅ < a‚ÇÇ` implies `a‚ÇÅ ‚Ä¢ b < a‚ÇÇ ‚Ä¢ b`.
    * `SMulPosReflectLT`: If `b ‚â• 0`, then `a‚ÇÅ ‚Ä¢ b < a‚ÇÇ ‚Ä¢ b` implies `a‚ÇÅ < a‚ÇÇ`.
    * `SMulPosReflectLE`: If `b > 0`, then `a‚ÇÅ ‚Ä¢ b ‚â§ a‚ÇÇ ‚Ä¢ b` implies `a‚ÇÅ ‚â§ a‚ÇÇ`.
    
    The design is heavily inspired to the corresponding one for multiplication (see `Algebra.Order.Ring.Lemmas`). Note however the following differences:
    * The new typeclasses are custom typeclasses instead of abbreviations for the correct `CovariantClass`/`ContravariantClass` invokations. This has the following benefits:
      * They get displayed as classes in the docs. In particular, one can see their list of instances, instead of their instances being invariably dumped to the `CovariantClass`/`ContravariantClass` list.
      * They don't pollute other typeclass searches. Having many abbreviations of the same typeclass for different purposes always felt like a performance issue to me (more instances with the same key, for no added benefit), and indeed a previous version of this PR hit timeouts due to the higher number of `CovariantClass`/`ContravariantClass` instances.
      * `SMulPosReflectLT`/`SMulPosReflectLE` did not fit in the framework since they relate `‚â§` on two different types. So I would have had to generalise `CovariantClass`/`ContravariantClass` to three types and two relations.
      * Very minor, but the constructors let you work with `a : Œ±`, `h : 0 ‚â§ a` instead of `a : {a : Œ± // 0 ‚â§ a}`. This actually makes some instances surprisingly cleaner to prove.
      * The `CovariantClass`/`ContravariantClass` framework was only used to automate very simple logic anyway. It was easily copied over.
    * We replace undocumented lemmas stating the equivalence of the four typeclasses mentioning nonnegativity with their positivity version by motivated constructors.
    * We abandon series of lemmas of dubious utility. Those were already marked as such in `Algebra.Order.Ring.Lemmas` (by myself).
    * Some lemmas about commutativity of multiplication don't make sense for scalar multiplication.
    
    This PR links the new typeclasses to `OrderedSMul` and makes all old lemmas in `Algebra.Order.SMul` one-liners in terms of the new lemmas (except when they have the same name, in which case the lemma is simply moved) but doesn't delete the old ones to reduce churn. What remains to be done afterwards is thus:
    * finish the transition by deleting the duplicate lemmas from `Algebra.Order.SMul`
    * rearrange the non-duplicate lemmas into new files
    * generalise (most of) the lemmas from `Algebra.Order.Module` to `Algebra.Order.Module.Defs`
    * rethink `OrderedSMul`

[33mcommit 8d91b8e7b8e0d6af7baee3d318e6a158969423f4[m
Author: Junyan Xu <junyanxumath@gmail.com>
Date:   Tue Dec 19 00:17:00 2023 +0000

    feat: `Finset/Multiset.powersetCard 1` (#9137)
    
    for [#9130](https://github.com/leanprover-community/mathlib4/pull/9130/files#r1429368677)
    
    
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>

[33mcommit 448da11d38dcaf0667a55aa464af1553ecd6718b[m
Author: David Loeffler <d.loeffler.01@cantab.net>
Date:   Mon Dec 18 20:33:43 2023 +0000

    feat(LinearAlgebra/Matrix/PosDef): unique positive semidef square root (#8809)
    
    This PR adds two main results about positive semidefinite matrices:
    - a positive semidefinite matrix has a unique positive semidefinite square root;
    - if `A` is positive semidefinite then `x* A x = 0` implies `A x = 0` (proof extracted from #8594).
    
    Co-authored-by: Adrian W√ºthrich (@awueth)
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 564283d73b2fd220603e983d5c6057a27239798c[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Mon Dec 18 19:32:57 2023 +0000

    feat: Comap of a probability measure under an ae surjective embedding (#8954)
    
    From PFR

[33mcommit a3e8d01e04f285df56c4b2a60eaf393b3fceb2ac[m
Author: Junyan Xu <junyanxumath@gmail.com>
Date:   Mon Dec 18 16:03:42 2023 +0000

    feat: injective bilinear pairing V‚ÜíW* with V f.d. induces surjective W‚ÜíV* (#8820)
    
    From the Hairer challenge
    
    + add `flip_in/sur/bijective_iff‚ÇÅ‚ÇÇ`: if either of the spaces V and W is finite-dimensional, a linear map `V ‚Üí W*` is injective/surjective/bijective iff the flipped map `W ‚Üí V*` is surjective/injective/bijective.
    
    + also add consequence for SeparatingDual from the [projective space thread](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Projective.20space/near/392642695) (cc @smorel394)
    
    + remove the `FiniteDimensional` condition from `dual_finrank_eq`, `finrank_range_dualMap_eq_finrank_range`, and `dualMap_injective/bijective_iff`, completing two TODO items by @kmill
    
    + add two lemmas `toDual_injective` and `finite_dual_iff`
    
    + golf several proofs in LinearAlgebra/Dual
    
    Co-authored-by: Kyle Miller <kmill31415@gmail.com>
    
    
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>

[33mcommit 9e1e18da15a810d7f193da8afc09b6fcc89bd5dd[m
Author: Andrew Yang <the.erd.one@gmail.com>
Date:   Mon Dec 18 13:47:30 2023 +0000

    feat: Restriction of galois group onto integrally closed subrings. (#9113)
    
    
    
    
    Co-authored-by: Andrew Yang <36414270+erdOne@users.noreply.github.com>

[33mcommit 6c05c410db4e12a6f2780f07d6dac01115a5f55f[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Mon Dec 18 13:47:29 2023 +0000

    feat(Algebra/Star/Order): more lemmas (#9096)

[33mcommit 302fdbb80c235204e331292512b168f3cc423fe8[m
Author: Andrew Yang <36414270+erdOne@users.noreply.github.com>
Date:   Mon Dec 18 12:58:57 2023 +0000

    chore: Generalize results on `finrank` to rings. (#8912)
    
    A portion of results in `Mathlib/LinearAlgebra/FiniteDimensional.lean` were generalized to rings and moved to `Mathlib/LinearAlgebra/FreeModule/Finite/Rank.lean`. Most API lemmas for `FiniteDimensional` are kept but replaced with one lemma proofs. Definitions and niche lemmas are replaced by the generalized version completely.
    
    
    
    Co-authored-by: erd1 <the.erd.one@gmail.com>
    Co-authored-by: Andrew Yang <the.erd.one@gmail.com>

[33mcommit 8eef7faf3a1c7c2ca7e2bf7369692e53ac542954[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Mon Dec 18 10:05:21 2023 +0000

    feat: demote the instance Fintype.ofIsEmpty to a def (#8816)
    
    Rationale: this instance creates (empty) data out of nothing, which may conflict with other data. If you have in the context `[Fintype i]` and case on whether `i` is empty or not, then this gave two non-defeq instances of `[Fintype i]` around.

[33mcommit 6fab96dd7d4c76e9cace76ad16f3f1e3e43f2557[m
Author: Martin Dvo≈ô√°k <martin.dvorak@matfyz.cz>
Date:   Mon Dec 18 09:44:02 2023 +0000

    feat: OrderedCancelAddCommMonoidWithBounds is bad (#9072)

[33mcommit b6e8469ddf5bcb441aa06b0ac8e5b67bf54e0080[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Mon Dec 18 08:56:03 2023 +0000

    feat: add mulTSupport_mul/tsupport_add (#9060)
    
    From the hairer branch.

[33mcommit d61c95e1653dffe3f92c8927a905826929f50bce[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Mon Dec 18 07:15:58 2023 +0000

    chore: Rename pow monotonicity lemmas (#9095)
    
    The names for lemmas about monotonicity of `(a ^ ¬∑)` and `(¬∑ ^ n)` were a mess. This PR tidies up everything related by following the naming convention for `(a * ¬∑)` and `(¬∑ * b)`. Namely, `(a ^ ¬∑)` is `pow_right` and `(¬∑ ^ n)` is `pow_left` in lemma names. All lemma renames follow the corresponding multiplication lemma names closely.
    
    ## Renames
    
    ### `Algebra.GroupPower.Order`
    
    * `pow_mono` ‚Üí `pow_right_mono`
    * `pow_le_pow` ‚Üí `pow_le_pow_right`
    * `pow_le_pow_of_le_left` ‚Üí `pow_le_pow_left`
    * `pow_lt_pow_of_lt_left` ‚Üí `pow_lt_pow_left`
    * `strictMonoOn_pow` ‚Üí `pow_left_strictMonoOn`
    * `pow_strictMono_right` ‚Üí `pow_right_strictMono`
    * `pow_lt_pow` ‚Üí `pow_lt_pow_right`
    * `pow_lt_pow_iff` ‚Üí `pow_lt_pow_iff_right`
    * `pow_le_pow_iff` ‚Üí `pow_le_pow_iff_right`
    * `self_lt_pow` ‚Üí `lt_self_pow`
    * `strictAnti_pow` ‚Üí `pow_right_strictAnti`
    * `pow_lt_pow_iff_of_lt_one` ‚Üí `pow_lt_pow_iff_right_of_lt_one`
    * `pow_lt_pow_of_lt_one` ‚Üí `pow_lt_pow_right_of_lt_one`
    * `lt_of_pow_lt_pow` ‚Üí `lt_of_pow_lt_pow_left`
    * `le_of_pow_le_pow` ‚Üí `le_of_pow_le_pow_left`
    * `pow_lt_pow‚ÇÄ` ‚Üí `pow_lt_pow_right‚ÇÄ`
    
    ### `Algebra.GroupPower.CovariantClass`
    
    * `pow_le_pow_of_le_left'` ‚Üí `pow_le_pow_left'`
    * `nsmul_le_nsmul_of_le_right` ‚Üí `nsmul_le_nsmul_right`
    * `pow_lt_pow'` ‚Üí `pow_lt_pow_right'`
    * `nsmul_lt_nsmul` ‚Üí `nsmul_lt_nsmul_left`
    * `pow_strictMono_left` ‚Üí `pow_right_strictMono'`
    * `nsmul_strictMono_right` ‚Üí `nsmul_left_strictMono`
    * `StrictMono.pow_right'` ‚Üí `StrictMono.pow_const`
    * `StrictMono.nsmul_left` ‚Üí `StrictMono.const_nsmul`
    * `pow_strictMono_right'` ‚Üí `pow_left_strictMono`
    * `nsmul_strictMono_left` ‚Üí `nsmul_right_strictMono`
    * `Monotone.pow_right` ‚Üí `Monotone.pow_const`
    * `Monotone.nsmul_left` ‚Üí `Monotone.const_nsmul`
    * `lt_of_pow_lt_pow'` ‚Üí `lt_of_pow_lt_pow_left'`
    * `lt_of_nsmul_lt_nsmul` ‚Üí `lt_of_nsmul_lt_nsmul_right`
    * `pow_le_pow'` ‚Üí `pow_le_pow_right'`
    * `nsmul_le_nsmul` ‚Üí `nsmul_le_nsmul_left`
    * `pow_le_pow_of_le_one'` ‚Üí `pow_le_pow_right_of_le_one'`
    * `nsmul_le_nsmul_of_nonpos` ‚Üí `nsmul_le_nsmul_left_of_nonpos`
    * `le_of_pow_le_pow'` ‚Üí `le_of_pow_le_pow_left'`
    * `le_of_nsmul_le_nsmul'` ‚Üí `le_of_nsmul_le_nsmul_right'`
    * `pow_le_pow_iff'` ‚Üí `pow_le_pow_iff_right'`
    * `nsmul_le_nsmul_iff` ‚Üí `nsmul_le_nsmul_iff_left`
    * `pow_lt_pow_iff'` ‚Üí `pow_lt_pow_iff_right'`
    * `nsmul_lt_nsmul_iff` ‚Üí `nsmul_lt_nsmul_iff_left`
    
    ### `Data.Nat.Pow`
    
    * `Nat.pow_lt_pow_of_lt_left` ‚Üí `Nat.pow_lt_pow_left`
    * `Nat.pow_le_iff_le_left` ‚Üí `Nat.pow_le_pow_iff_left`
    * `Nat.pow_lt_iff_lt_left` ‚Üí `Nat.pow_lt_pow_iff_left`
    
    ## Lemmas added
    
    * `pow_le_pow_iff_left`
    * `pow_lt_pow_iff_left`
    * `pow_right_injective`
    * `pow_right_inj`
    * `Nat.pow_le_pow_left` to have the correct name since `Nat.pow_le_pow_of_le_left` is in Std.
    * `Nat.pow_le_pow_right` to have the correct name since `Nat.pow_le_pow_of_le_right` is in Std.
    
    ## Lemmas removed
    
    * `self_le_pow` was a duplicate of `le_self_pow`.
    * `Nat.pow_lt_pow_of_lt_right` is defeq to `pow_lt_pow_right`.
    * `Nat.pow_right_strictMono` is defeq to `pow_right_strictMono`.
    * `Nat.pow_le_iff_le_right` is defeq to `pow_le_pow_iff_right`.
    * `Nat.pow_lt_iff_lt_right` is defeq to `pow_lt_pow_iff_right`.
    
    ## Other changes
    
    * A bunch of proofs have been golfed.
    * Some lemma assumptions have been turned from `0 < n` or `1 ‚â§ n` to `n ‚â† 0`.
    * A few `Nat` lemmas have been `protected`.
    * One docstring has been fixed.

[33mcommit 608404e39ba9f6e75fba144fe973a46f4c91351b[m
Author: negiizhao <egresf@gmail.com>
Date:   Mon Dec 18 06:06:32 2023 +0000

    chore(Algebra/Order/Group): change simp lemmas (#7867)

[33mcommit f94379b4892c24c6ee67e02adebdd1ad62ec3867[m
Author: Jz Pan <acme_pjz@hotmail.com>
Date:   Mon Dec 18 04:53:03 2023 +0000

    feat(Mathlib/FieldTheory/Separable): add `Polynomial.Separable.isIntegral` and golf (#9134)

[33mcommit 7b7e8442189bd7fb23078d65db1bfb5876cdcba7[m
Author: Scott Morrison <scott@tqft.net>
Date:   Mon Dec 18 04:53:02 2023 +0000

    chore: better error message for assert_not_exists (#9070)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>
    Co-authored-by: Yury G. Kudryashov <urkud@urkud.name>
    Co-authored-by: Kyle Miller <kmill31415@gmail.com>

[33mcommit 4abd905eb7556ffe89fe0ac16bbdc66108d85b06[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Mon Dec 18 04:53:00 2023 +0000

    feat(RingTheory/NonUnitalSubsemiring): point-free statement of centrality (#9053)
    
    Also adds `isMulCentral_iff` using `mk_iff`.

[33mcommit 3f7c7ee0f7842bd559b25a389fafd0f4f481fc6b[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Mon Dec 18 04:13:57 2023 +0000

    feat: the graded tensor product (#7394)
    
    This adds the graded tensor product $A \hat\otimes_R B$, imbued with a multiplication defined on homogeneous
    tensors by:
    $$(a \hat\otimes b) \cdot (a' \hat\otimes b') = (-1)^{\deg a' \deg b} (a \cdot a') \hat\otimes (b \cdot b')$$
    where $A$ and $B$ are algebras graded by `‚Ñï`, `‚Ñ§`, or `ZMod 2` (or more generally, any index that satisfies `Module Œπ (Additive ‚Ñ§À£)`).
    
    We do this in two phases:
    
    * Define bundled morphisms that perform the multiplication and braiding maps on regular tensor products of `DirectSum`s
    * Define a new `GradedTensorProduct` type synonym that attaches the multiplication operator to `*` notation, and restricts itself to internally-graded algebras.

[33mcommit 6a04469e1985e23b35ede9b6e228bdb8b61b293e[m
Author: R√©my Degenne <Remydegenne@gmail.com>
Date:   Mon Dec 18 01:51:44 2023 +0000

    feat: properties of `x ‚Ü¶ - x * log x` (#8922)
    
    Continuity, concavity, first two derivatives of `x ‚Ü¶ - x * log x`.
    
    From the PFR project.
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>
    Co-authored-by: R√©my Degenne <remydegenne@gmail.com>

[33mcommit bca1c69de4d55d65bdb4ed4cde23b5d68b2f2fd2[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Mon Dec 18 01:08:32 2023 +0000

    feat: define `NonUnital(Semi)NormedCommRing` (#8664)
    
    This adds commutative versions of the existing `NonUnital(Semi)NormedRing` classes. This is essential for talking about, for example, non-unital commutative C‚ãÜ-algebras.

[33mcommit eda0f8d332cf9d189519ad097a6fe7f1a6b01d19[m
Author: Mario Carneiro <mcarneir@andrew.cmu.edu>
Date:   Sun Dec 17 23:56:58 2023 +0000

    fix: use colGt in `#help` parser (#9128)
    
    Fixes #9126. The parsers had to be split into a separate `syntax` declaration to allow for the `withPosition` combinator to set the position so that `colGt` works as intended.
    
    
    
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>

[33mcommit 91ef688973668efe254feafcee68735cd956acb9[m
Author: Thomas Browning <tb65536@uw.edu>
Date:   Sun Dec 17 23:08:30 2023 +0000

    feat(Data/Polynomial/RingDivision): Negation lemmas for `roots`, `aroots`, and `rootSet` (#9133)
    
    This PR adds negation lemmas for `roots`, `aroots`, and `rootSet`.

[33mcommit fad7cd8739e81f40f02832afafbcebffa8c9c0ba[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Sun Dec 17 21:55:08 2023 +0000

    feat: `exp (t * x) ‚â§ cosh x + t * sinh x` (#9097)
    
    From LeanAPAP

[33mcommit 079c7b46c4841995e4060325cf4fb335d3f63c2b[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sun Dec 17 21:55:07 2023 +0000

    chore(Set/NAry): fix docstring, golf (#9059)
    
    - Fix the module docstring of `Data.Set.NAry`.
      It looks like it was copied from `Data.Finset.NAry`
      while synchronizing the files.
    
    - Golf some proofs.

[33mcommit 27b7e3e706fdb739a59f4b18652bfbbf4110320f[m
Author: Markus Himmel <markus@himmel-villmar.de>
Date:   Sun Dec 17 21:55:06 2023 +0000

    feat: add `CharP.natCast_eq_natCast_mod` and relax typeclass assumptions (#9050)

[33mcommit 4bb736fa10db3a87645dee2d41670e474c0624fd[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Sun Dec 17 21:55:04 2023 +0000

    refactor(Testing/SlimCheck/Sampleable): Qq-ify (#8857)
    
    This makes things a little less fragile to refactors, as the types are checked up front.
    It also means we get better error messages.

[33mcommit c9df7640930f132aa92ed6bc5dbe0a3eb11b0516[m
Author: David Renshaw <dwrenshaw@gmail.com>
Date:   Sun Dec 17 21:55:04 2023 +0000

    chore: various style improvements in positivity extensions (#8098)
    
    - match with ~q()
    - put type ascriptions inline

[33mcommit 7b1f933b5de3846a1559b3061b166fe19b9163cf[m
Author: Fr√©d√©ric Dupuis <dupuisf@iro.umontreal.ca>
Date:   Sun Dec 17 21:55:03 2023 +0000

    feat: positivity extension for zpow (#8003)
    
    This PR adds a positivity extension for integer powers, i.e. `a ^ (r : ‚Ñ§)`. It's basically copy-pasted from the natural power extension. Note that this makes the imports of `Mathlib.Tactic.Positivity.Basic` slightly heavier since the required lemmas were not there (and the relevant file doesn't import positivity so I couldn't put it there either). It's probably not too bad, but I can put it in a new file if people think this would be better.
    
    
    
    Co-authored-by: David Renshaw <dwrenshaw@gmail.com>

[33mcommit 2362ccdf99c7488f470f9eff7e6533ef747348fc[m
Author: David Renshaw <dwrenshaw@gmail.com>
Date:   Sun Dec 17 21:55:01 2023 +0000

    feat: make `mod_cases` work on Nat, in addition to Int (#3922)
    
    The current `mod_cases`, as implemented in #593, only works on integers. This pull request extends it
    to also work on natural numbers.

[33mcommit 4310b5835ccd3419abce829560f9e5b096a36935[m
Author: Alex J Best <alex.j.best@gmail.com>
Date:   Sun Dec 17 20:55:43 2023 +0000

    chore: fix linarith docs and test (#9127)

[33mcommit b067a6ffc212de78a0aa10f72a82e63788ee2f1b[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Sun Dec 17 20:55:42 2023 +0000

    feat: add Homeomorph.empty (#9092)
    
    This came up in #8160 and (independently) sphere-eversion.
    
    
    
    Co-authored-by: grunweg <grunweg@posteo.de>

[33mcommit d0dee32e9002017677346ad05fc6bd16e5d1c494[m
Author: damiano <adomani@gmail.com>
Date:   Sun Dec 17 20:55:41 2023 +0000

    feat({ Tactic + test }/ComputeDegree): Add `monicity(!)?` (#8668)
    
    This PR adds a macro `monicity` for showing that a polynomial is `Monic` and the analogous `monicity!` macro that tries harder.
    
    [Zulip discussion](https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/compute_total_degree/near/404491025)

[33mcommit 1fb36f85fc99ac7291e8b2dd18c5291be53f1727[m
Author: damiano <adomani@gmail.com>
Date:   Sun Dec 17 20:55:40 2023 +0000

    feat({ Tactic + test }/ComputeDegree): Add support for `hsmul` (#8666)
    
    This PR adds support for `smul` in `compute_degree`.
    
    [Zulip discussion](https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/compute_total_degree/near/404468840)

[33mcommit f1ba2113dea86fd9220acd5d181c5e04325eaacb[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Sun Dec 17 20:09:12 2023 +0000

    chore(LinearAlgebra/CliffordAlgebra): move results about inversion to a new file (#9075)
    
    I plan to contribute a few more of these, and this provides a better place for them to live.
    No lemma statements or proofs have changed.
    
    These were originally contributed in leanprover-community/mathlib#16077.

[33mcommit 07b02ce380d5b5a8d3c3fc7c229dbfd56dc4bd8a[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Sun Dec 17 20:09:10 2023 +0000

    feat(Algebra/MonoidAlgebra): when `single` and `of` commute (#8975)
    
    Also removes an `autoImplicit` that tripped me up when working on this file.

[33mcommit 1515c7e8d1dbe9d0fca8d83af9e57ae48511a34f[m
Author: Andrew Yang <the.erd.one@gmail.com>
Date:   Sun Dec 17 19:25:17 2023 +0000

    feat: Dual basis of power basis wrt trace form (#8835)
    
    
    
    
    Co-authored-by: Andrew Yang <36414270+erdOne@users.noreply.github.com>

[33mcommit b3a1d74f6f1bdd94c7e0f45d23c77abd2c5ec719[m
Author: Scott Morrison <scott@tqft.net>
Date:   Sun Dec 17 17:55:02 2023 +0000

    chore: bump Std dependency to leanprover/std4#432 (#9094)
    
    This covers these changes in Std: https://github.com/leanprover/std4/compare/6b4cf96c89e53cfcd73350bbcd90333a051ff4f0...9dd24a3493cceefa2bede383f21e4ef548990b68
    
    * `Int.ofNat_natAbs_eq_of_nonneg` has become `Int.natAbs_of_nonneg` (and one argument has become implicit)
    * `List.map_id''` and `List.map_id'` have exchanged names. (Yay naming things using primes!)
    * Some meta functions have moved to Std and can be deleted here.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 9764993a84fe7bddfb4d7076ee6f2aaf07c121e9[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Sun Dec 17 17:55:01 2023 +0000

    feat: Checking `ae` on a countable type (#8945)
    
    and other simple measure lemmas
    
    From PFR and LeanCamCombi
    
    
    
    Co-authored-by: Yury G. Kudryashov <urkud@urkud.name>

[33mcommit bced26357ab23de86a957a79fd3d6760494d550f[m
Author: Lukas Miaskiwskyi <lukas.mias@gmail.com>
Date:   Sun Dec 17 16:54:46 2023 +0000

    feat(RingTheory/Polynomial/Basic): add thms on degree of span and non-finiteness of polynomial ring as module (#9029)
    
    This shows with minimal requirements on `R`, that the `R`-module `R[X]` is not finite, or if `R` is a field, that equivalently `R[X]` is infinite-dimensional. On the way, some theorems are proven on how the `R`-span of a set of polynomials in `R[X]` interacts with the degree of the elements, and that the span of finitely many polynomials is always contained in some `Polynomial.degreeLE n` and some `Polynomial.degreeLT n`.

[33mcommit 4f94e7d034f6630a612dd888ea3ef79978617f2c[m
Author: Wrenna Robson <wren.robson@gmail.com>
Date:   Sun Dec 17 16:54:45 2023 +0000

    feat(Data/Sum/Basic): Add `LiftRel` lemmas. (#6729)
    
    Add lemmas that allow `IsLeft`/`IsRight` conclusions from `LiftRel` and allow for apply functions.
    
    This is necessary because `cases` cannot run on statements like `LiftRel r s (f t) y`.
    
    
    
    Co-authored-by: lines <34025592+linesthatinterlace@users.noreply.github.com>
    Co-authored-by: Wrenna Robson <34025592+linesthatinterlace@users.noreply.github.com>

[33mcommit f4794c25457269bc5b44ab0c8a8412525b466f91[m
Author: Junyan Xu <junyanxumath@gmail.com>
Date:   Sun Dec 17 15:16:30 2023 +0000

    chore(Ideal/Operations): remove extraneous nonempty conditions (#9115)
    
    Also generalizes `Ideal.subset_union` to `Subgroup`.
    
    
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>

[33mcommit d84bf68500589fbbfb16dced55b78a5c297b6c79[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Sun Dec 17 15:16:29 2023 +0000

    feat: `x ^ n / n ! ‚â§ exp x` (#9099)
    
    Also make private/delete the intermediate lemmas of the form `x + 1 ‚â§ Real.exp x` so that people use the more general final results instead.

[33mcommit 92d4b01aea279509d867744b54e70a37ff243af9[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Sun Dec 17 15:16:28 2023 +0000

    feat: add topological lemmas for `ULift` (#8958)
    
    This also adds a handful of easy instances
    
    Arguably the topological space instance should be defined via `coinduced` to make these true by `Iff.rfl`, but that creates a headache with constructors for normed spaces, so is not in this PR.

[33mcommit af42783d740efe339ffaf4a83e4050edaf8f45d0[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Sun Dec 17 14:38:33 2023 +0000

    feat: A lin. indep. family of vectors in a fin. dim. space is finite (#9103)
    
    This is just a repackaging of existing lemmas, except that the correct name is already taken by the `Set` version, so we fix that too.
    
    From LeanAPAP

[33mcommit 5541d213521e95c5b7d73066de4ad78a600e6263[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Sun Dec 17 09:33:31 2023 +0000

    feat: add `Algebra ‚Ñù A` instance given `Algebra ‚ÑÇ A` (#8991)

[33mcommit b835302c1e5dd815b48d197e94c27db62f7969e0[m
Author: Winston Yin <winstonyin@gmail.com>
Date:   Sun Dec 17 07:58:06 2023 +0000

    feat: Add `congr_mfderiv` lemmas mirroring `congr_fderiv` (#9066)
    
    Add convenience lemmas
    * `HasMFDerivAt.congr_mfderiv`
    * `HasMFDerivWithinAt.congr_mfderiv`
    
    These mirror the already existing
    * `HasFDerivAt.congr_fderiv`
    * `HasFDerivWithinAt.congr_fderiv`

[33mcommit c0148961fa8403e13328bf161931479a48cecfb3[m
Author: Xavier Xarles <xavier.xarles@uab.cat>
Date:   Sat Dec 16 18:08:21 2023 +0000

    feat (RingTheory/Localization/LocalizationLocalization): Generalize from CommRing to CommSemiring (#9112)
    
    Change hypothesis CommRing to CommSemiring in the first section of the file

[33mcommit 4160b2aa344c39b1238e7c5da7227f763ac72b58[m
Author: Bolton Bailey <bolton.bailey@gmail.com>
Date:   Sat Dec 16 08:47:18 2023 +0000

    chore: Remove nonterminal `simp at` (#7795)
    
    Removes nonterminal uses of `simp at`. Replaces most of these with instances of `simp? ... says`.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>

[33mcommit 9b2f0dca7d0980a28f936e74190c7b6da8cc8d27[m[33m ([m[1;31morigin/JADekker_lindelof[m[33m)[m
Author: Winston Yin <winstonyin@gmail.com>
Date:   Sat Dec 16 07:33:49 2023 +0000

    chore: `Nsmul` -> `NSMul`, `Zpow` -> `ZPow`, etc (#9067)
    
    Normalising to naming convention rule number 6.

[33mcommit 5e43fdc9b3895b36708d45174707abefefcbea6f[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Sat Dec 16 07:33:48 2023 +0000

    feat(Algebra/Module/Basic): add RingHom.smulOneHom (#9064)
    
    This also renames the existing `smulOneHom` to `MonoidHom.smulOneHom`.
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>

[33mcommit 1be2f3f2dd100dcbfe13d45fda630b1920b65cd1[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Sat Dec 16 07:33:47 2023 +0000

    feat: Convenience lemmas for affine independence (#8929)

[33mcommit 4ded391b69c3497e63aaf1f0a69ee4da52573c43[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Sat Dec 16 06:46:24 2023 +0000

    feat: A finite topological space is second countable (#8955)
    
    From PFR

[33mcommit fdf57b01c488964a0caaaa794acda675ce205e95[m
Author: Scott Morrison <scott@tqft.net>
Date:   Sat Dec 16 04:19:45 2023 +0000

    chore: bump Std to match leanprover/std4#448 (#9044)
    
    
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>

[33mcommit a5732e8fe6e2c7b67bd4e9f49e505e991ca68df4[m
Author: Aaron Anderson <awainverse@gmail.com>
Date:   Sat Dec 16 02:09:06 2023 +0000

    chore(ModelTheory/ElementarySubstructures): Split elementary substructures into their own file (#9026)
    
    This PR splits the file `ModelTheory/ElementaryMaps` into two files, moving elementary substructure code into `ModelTheory/ElementarySubstructures`, to make room for new API on those.
    
    Two basic lemmas, `FirstOrder.Language.Substructure.realize_boundedFormula_top` and `FirstOrder.Language.Substructure.realize_formula_top`, are instead moved to the file `ModelTheory/Substructures`.
    
    
    
    Co-authored-by: Ya√´l Dillies <yael.dillies@gmail.com>
    Co-authored-by: Aaron Anderson <65780815+awainverse@users.noreply.github.com>

[33mcommit a45fd777dd5d1cde416a336004731b0ff3ac6bb2[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sat Dec 16 00:58:55 2023 +0000

    feat(Data/Fin): add lemmas (#8974)
    
    - move `Nat.dvd_one` to `Data.Nat.Basic`; it should go to Std4;
    - rename `Fin.ofNat_eq_val` to `Fin.ofNat''_eq_cast`;
    - add `@[simp]` lemmas `Fin.val_nat_cast`, `Fin.nat_cast_self`, and `Fin.nat_cast_eq_zero`;
    - add `@[simp]` to `Fin.cast_nat_eq_last` and `ZMod.val_nat_cast`;
    - add `binomial_apply_last`, as the LHS of `binomial_apply_self` is no longer in simp normal form.

[33mcommit eb4573aad9fcc70ebe3ad90357bd9725180f0617[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Sat Dec 16 00:58:54 2023 +0000

    feat(RingTheory/Congruence): add the `CompleteLattice` instance (#8313)
    
    
    The code is copied from `GroupTheory/Congruence.lean`, and then modified to fix the errors.
    
    I haven't copied the full contents of `GroupTheory/Congruencee`, only the results about the lattice structure.
    
    This replaces leanprover-community/mathlib#18588

[33mcommit 1f95ef755ce02ec8e300bdf31f716b40148d1312[m
Author: Winston Yin <winstonyin@gmail.com>
Date:   Sat Dec 16 00:27:09 2023 +0000

    feat: Add `congr_deriv` lemmas mirroring `congr_fderiv` (#9065)
    
    Add convenience lemmas
    * `HasStrictDerivAt.congr_deriv`
    * `HasDerivAt.congr_deriv`
    * `HasDerivWithinAt.congr_deriv`
    
    These mirror the already existing
    * `HasStrictFDerivAt.congr_fderiv`
    * `HasFDerivAt.congr_fderiv`
    * `HasFDerivWithinAt.congr_fderiv`

[33mcommit 120efa769ff2fa8c778be19fd00932ecfa7c1e85[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Fri Dec 15 23:57:43 2023 +0000

    feat(LinearAlgebra/Matrix): powers preserve `IsSymm` and `IsHermitian` (#9036)

[33mcommit f48b1026e7f91f09cd8ee68331e224edc38177ab[m
Author: LW <hi@llllvvuu.dev>
Date:   Fri Dec 15 21:44:18 2023 +0000

    feat: subgroups of Z/nZ-modules are submodules (#9045)
    
    Together with #9017 and #8965 we can convert group theory problems to linear algebra problems as in the
    [homomorphism form of PFR](https://teorth.github.io/pfr/blueprint/sect0008.html).
    
    
    
    
    Co-authored-by: L Lllvvuu <git@llllvvuu.dev>
    Co-authored-by: LW <git@llllvvuu.dev>

[33mcommit e609a7ece84b7e0b732f658abfcf00ef55f9ec2a[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Fri Dec 15 20:19:44 2023 +0000

    refactor: Generalise archimedean lemmas to semirings (#8943)
    
    A bunch of lemmas are true in `‚Ñï` but previously did not apply there.
    
    Co-authored-by: S√©bastien Gou√´zel <sebastien.gouezel@univ-rennes1.fr>

[33mcommit d58b5726484c89ee2addfa732f2a5ebc0f8dd1dd[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Fri Dec 15 19:04:53 2023 +0000

    feat: port test/instance_diamonds.lean (#9037)
    
    This reveals that `Smul.ext_iff` is hard to work with unless we also have a lemma to convert `SMul.smul` to `HSMul.hsMul`

[33mcommit fab6ab776be14e2ae85102fb34d260f2d584d255[m
Author: Peter Nelson <71660771+apnelson1@users.noreply.github.com>
Date:   Fri Dec 15 17:44:25 2023 +0000

    fix: rename `tsum_congr_subtype` (#9080)
    
    The lemma `tsum_congr_subtype` is currently stated in terms of set coercions rather than subtypes. This PR renames `tsum_congr_subtype` to `tsum_congr_set_coe`, and adds a new lemma `tsum_congr_subtype` whose statement is explicitly about subtypes.

[33mcommit 1250aa83953a2c7d5819cebea08ad7fdef997d49[m
Author: Alex Keizer <alex@keizer.dev>
Date:   Fri Dec 15 16:32:49 2023 +0000

    feat: show that `BitVec` is a commutative ring (#8711)
    
    
    
    Co-authored-by: Tobias Grosser <tobias@grosser.es>
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 8aa9689f0e48c6fcf9b3ad6846b722c13b7fcd53[m
Author: Michael Stoll <Michael.Stoll@uni-bayreuth.de>
Date:   Fri Dec 15 14:16:46 2023 +0000

    feat(Data/Sign): add missing API lemmas (#9074)
    
    This adds three `simp` and `norm_cast` lemmas for `SignType`.

[33mcommit 03c8eec59ea135c6ce39b696b7b4fcf8d534ed49[m
Author: Junyan Xu <junyanxumath@gmail.com>
Date:   Fri Dec 15 13:12:58 2023 +0000

    feat: coefficients of division by X-x (#9071)
    
    
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>

[33mcommit d08e3e0dfe8dda5d7bb849449b16f6f417565313[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Fri Dec 15 13:12:57 2023 +0000

    feat(Set/Lattice): add `Set.seq_eq_image2`, use it to golf some proofs (#9062)

[33mcommit c8c1c7a6a4dc2d9472f2574551ea48acb8cad35a[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Fri Dec 15 13:12:56 2023 +0000

    feat(Filter/Basic): define `Filter.copy` (#9056)

[33mcommit 4f9bbba85c23be622ccec3ef41271af9b26c7f50[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Fri Dec 15 12:17:19 2023 +0000

    chore(Data/Finset): golf (#9058)
    
    Golf the proof of `Finset.subset_image‚ÇÇ` by reusing `Finset.subset_image_iff`.

[33mcommit c371f598f5453bd8db8c889e23ecd14f455ec396[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Fri Dec 15 12:17:18 2023 +0000

    chore(Submodule/Bilinear): golf a proof (#9057)

[33mcommit ea8ece158d6574723b17a255775b7dfaecc15c2c[m
Author: Scott Morrison <scott@tqft.net>
Date:   Fri Dec 15 11:08:55 2023 +0000

    chore: improve error message from says in CI (#9061)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 5ab702165bf2cf46d4f4aca462c197c3c201be5d[m
Author: Junyan Xu <junyanxumath@gmail.com>
Date:   Fri Dec 15 10:22:44 2023 +0000

    chore: golf and generalize `discr_eq_discr_of_algEquiv` (#9068)
    
    
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>

[33mcommit e216be2a13e11ac46b6b6a0ecd89cf30631feacd[m
Author: Antoine Chambert-Loir <antoine.chambert-loir@u-paris.fr>
Date:   Fri Dec 15 09:19:52 2023 +0000

    feat: noncommutative coproduct for MonoidHom (#7335)
    
    Add `MonoidHom.noncommCoprod` which allows to define a morphism from a product `M x N`
    to a monoid `P` given two monoid morphisms `M -> P` and `N -> P`,
    provided a commutativity assumption on the ranges.
    
    
    
    Co-authored-by: Antoine Chambert-Loir <antoine.chambert-loir@math.univ-paris-diderot.fr>
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit ce9ef8bea420e374f6daf1089ae6a2c8a7dcedd4[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Thu Dec 14 22:43:10 2023 +0000

    fix: renable some slim check tests and make them pass (#9021)
    
    Previously `addDecorations` was creating ill-typed expressions that in the presence of function types placed a `Type` where a `Prop` was expected.
    
    A few of the tests needed some minor fixes to make them pass.

[33mcommit b92d7422a986bc766f301868d5bb34600fd28e3d[m
Author: Matthew Robert Ballard <matt@mrb.email>
Date:   Thu Dec 14 21:31:13 2023 +0000

    chore (Order.Defs): reorder parents to simplify instances and avoid non-reducible defeq checks (#9034)
    
    Currently, `OrderDual.orderedCommMonoid` unifies with `LinearOrderedAddCommMonoid.toOrderedAddCommMonoid` at instance transparency because of an extra eta expansion in its definition. The provided instances can be synthesized by Lean and deleted. This removes the extraneous eta expansion but causes defeq to fail at instance transparency. To fix this, we reorder the parents of `LinearOrderedAddCommMonoid`. We also do this for the non-`Add` version.

[33mcommit 0b290c7bac56048289d6ca78a43c94c7a2d42a5d[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Thu Dec 14 17:26:21 2023 +0000

    feat(CategoryTheory/Triangulated): triangulated functors (#9049)
    
    This PR defines the notion of triangulated functors between pretriangulated categories.

[33mcommit 3465d1aaae242475fad59e688648a2285031d19e[m
Author: Andrew Yang <the.erd.one@gmail.com>
Date:   Thu Dec 14 13:12:38 2023 +0000

    feat: Define the dual of a fractional ideal. (#8833)
    
    Also moved `Algebra.discr_eq_discr_of_toMatrix_coeff_isIntegral` to `Mathlib/NumberTheory/NumberField/Discriminant.lean`.
    
    
    
    Co-authored-by: Andrew Yang <36414270+erdOne@users.noreply.github.com>

[33mcommit c6e2a243431f95fa2ba7b6ef15d25c5eb04d175a[m
Author: Palalansouk√Æ <palalansouki@gmail.com>
Date:   Thu Dec 14 12:44:06 2023 +0000

    feat(Data/Nat/GCD/BigOperators): add lemmas about coprimality with `List.prod`, `Multiset.prod`, `Finset.prod` (#9005)
    
    Add `coprime_xxx_prod_left_iff`, `coprime_xxx_prod_right_iff` lemma for `List`, `Multiset`, `Finset` and `Fintype`. This is a PR separated from #8887.
    
    
    
    Co-authored-by: jeh <hodellurt@gmail.com>
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 95427d94cf211c418b967e1e25b5efca04800640[m
Author: Matthew Robert Ballard <matt@mrb.email>
Date:   Thu Dec 14 11:42:15 2023 +0000

    perf (AlgebraicGeometry.Properties): Speed up one declaration  (#9035)
    
    This speeds up on declaration by breaking up a defeq check into a single task.
    
    
    
    Co-authored-by: Johan Commelin <johan@commelin.net>

[33mcommit 62d40c87b76151deabbc3f56089e590fbb8605cc[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Thu Dec 14 10:29:29 2023 +0000

    fix: do not abuse `Set.Ioo` as a predicate (#9027)

[33mcommit bb973d5fefbc6c431a517795b387062fd29579b7[m
Author: David Renshaw <dwrenshaw@gmail.com>
Date:   Thu Dec 14 10:29:28 2023 +0000

    chore: discharge porting note about 'change ... at' (#9018)
    
    `RingTheory.Adjoin.Basic` was ported in #2817.
    `change ... at` was added in #2836.

[33mcommit 8511c2c1dbbc023891e22d44ebaaa23c971637e8[m
Author: Jujian Zhang <jujian.zhang1998@outlook.com>
Date:   Thu Dec 14 10:29:27 2023 +0000

    feat(Logic/Equiv/TransferInstance): shrinking types preserves algebraic structures (#8998)

[33mcommit 778aba64fb9026c28755abf6ddf48821634e1b1b[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Thu Dec 14 10:29:26 2023 +0000

    feat: More clique lemmas (#8007)
    
    Forward port https://github.com/leanprover-community/mathlib/pull/19203

[33mcommit 1efef4c7f43766fff2e8b4ad9f58ace295008289[m
Author: Yakov Pechersky <ypechersky@treeline.bio>
Date:   Thu Dec 14 09:19:37 2023 +0000

    chore: `Nat.mod_succ` (#9031)
    
    A simp lemma specialized to `n % n.succ`
    
    
    
    
    Co-authored-by: Yakov Pechersky <pechersky@users.noreply.github.com>

[33mcommit d2fe55798142ef1557bc737efba112a8615cf380[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Thu Dec 14 06:19:23 2023 +0000

    refactor(CategoryTheory/Sites): rename Sheafification file (#9042)
    
    In preparation for #9012, to make the diff nicer.

[33mcommit 1d5e93af60d8baafd15fb94952a2ebd5ad3f6f89[m
Author: Jz Pan <acme_pjz@hotmail.com>
Date:   Thu Dec 14 06:19:22 2023 +0000

    feat(Algebra/CharP/ExpChar): add some results parallel to `CharP` (#8860)
    
    - change the condition of `CharP.neg_one_pow_char` and `CharP.neg_one_pow_char_pow` from `CommRing` to `Ring`
    - add `ExpChar.exists`, `expChar_of_injective_algebraMap`
    - add `add_pow_expChar` and 9 similar functions parallel to that of `CharP`
    - add `{charP|charZero|expChar}_of_injective_ringHom`

[33mcommit a169d1d76d91fb55ad0ec8eafa3fbd0793b7bc33[m
Author: Scott Morrison <scott@tqft.net>
Date:   Thu Dec 14 05:07:58 2023 +0000

    chore: update Std dependency to match leanprover/std4#397 (#9039)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>

[33mcommit 08b0740db881ae591e722dc188203a46e43ee627[m
Author: Scott Morrison <scott@tqft.net>
Date:   Thu Dec 14 04:11:51 2023 +0000

    chore: bump Std dependency up to leanprover/std4#445 (#9043)
    
    I think this one should merge cleanly, after which we have some work to do for #9039
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 5973b7110e5745124d413dd9b88c6118668adf4e[m
Author: Bolton Bailey <bolton.bailey@gmail.com>
Date:   Wed Dec 13 23:06:07 2023 +0000

    chore: replace `piFinSuccAboveEquiv` with `piFinSuccAbove` (#9030)
    
    Replaces `Equiv.piFinSuccAboveEquiv` with `.piFinSuccAbove`, and same for `MeasurableEquiv.piFinSuccAboveEquiv`

[33mcommit 91ebbbe330b3940ca76dd8e6521864fcd92e652b[m
Author: Fernando Chu <fernando.churiv@gmail.com>
Date:   Wed Dec 13 20:14:46 2023 +0000

    doc: Make the docs more uniform for the Category and Quiver modules (#8928)
    
    Fix the description of the definition of `Quiver` and change the example of the use of `‚äö` to be consistent with the above use of `‚â´`.

[33mcommit 39229b7dae4897961bafc9b11c33c45d6f772a31[m
Author: Jz Pan <acme_pjz@hotmail.com>
Date:   Wed Dec 13 19:05:43 2023 +0000

    feat(FieldTheory/IntermediateField): generalize `eq_of_le_of_finrank_{le|eq}` (#8873)
    
    - generalize `IntermediateField.eq_of_le_of_finrank_{le|eq}`: the condition `FiniteDimensional K L` is generalized to `FiniteDimensional K E` (credits: @riccardobrasca)
    - generalize `IntermediateField.eq_of_le_of_finrank_{le|eq}'`: the condition `FiniteDimensional K L` is generalized to `FiniteDimensional F L` (original proof credits: @riccardobrasca)
    - add `Subalgebra.eq_of_le_of_finrank_{le|eq}`
    - add `IntermediateField.extendScalars` and its basic properties

[33mcommit 8a221878ed40ceeb74ee239c68f990265d2d1a2a[m
Author: Jz Pan <acme_pjz@hotmail.com>
Date:   Wed Dec 13 19:05:42 2023 +0000

    feat(Data/Polynomial/RingDivision): improvements to `Polynomial.rootMultiplicity` (#8563)
    
    Main changes:
    
    - add `Monic.mem_nonZeroDivisors` and `mem_nonZeroDivisors_of_leadingCoeff` which states that a monic polynomial (resp. a polynomial whose leading coefficient is not zero divisor) is not a zero divisor.
    - add `rootMultiplicity_mul_X_sub_C_pow` which states that `* (X - a) ^ n` adds the root multiplicity at `a` by `n`.
    - change the conditions in `rootMultiplicity_X_sub_C_self`, `rootMultiplicity_X_sub_C` and `rootMultiplicity_X_sub_C_pow` from `IsDomain` to `Nontrivial`.
    - add `rootMultiplicity_eq_natTrailingDegree` which relates `rootMultiplicity` and `natTrailingDegree`, and `eval_divByMonic_eq_trailingCoeff_comp`.
    - add `le_rootMultiplicity_mul` which is similar to `le_trailingDegree_mul`.
    - add `rootMultiplicity_mul'` which slightly generalizes `rootMultiplicity_mul`
    
    In `Data/Polynomial/FieldDivision`:
    
    - add `rootMultiplicity_sub_one_le_derivative_rootMultiplicity_of_ne_zero` which slightly generalizes `rootMultiplicity_sub_one_le_derivative_rootMultiplicity`.
    - add `derivative_rootMultiplicity_of_root_of_mem_nonZeroDivisors` which slightly generalizes `derivative_rootMultiplicity_of_root`.
    - add several theorems relating roots of iterate derivative to `rootMultiplicity`
    
    In addition:
    
    - move `eq_of_monic_of_associated` from RingDivision to Monic and generalize.
    - add `dvd_cancel` lemmas to NonZeroDivisors.
    - add `algEquivOfCompEqX`: two polynomials that compose to X both ways induces an isomorphism of the polynomial algebra.
    - add divisibility lemmas to Polynomial/Derivative.
    
    
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>

[33mcommit c4988d10a696972769fd676cb9977e896bf0a01b[m
Author: Riccardo Brasca <riccardo.brasca@gmail.com>
Date:   Wed Dec 13 18:20:22 2023 +0000

    feat: make isNoetherian_of_isNoetherianRing_of_finite an instance (#8999)
    
    Make `isNoetherian_of_isNoetherianRing_of_finite an instance`: this was impossible in Lean 3 because of a loop.

[33mcommit a210341e2b6bb8ee94101177b1b7ce1103c5c9d9[m
Author: Julian Berman <Julian@GrayVines.com>
Date:   Wed Dec 13 17:31:57 2023 +0000

    chore: also install neovim in gitpod to enable lean.nvim use (#9024)
    
    This doesn't actually *install* [`lean.nvim`](https://github.com/Julian/lean.nvim), it leaves that to each user's dotfiles, but it does install neovim, meaning if one does do so (have dotfiles which tell neovim to use lean.nvim), that it works the same as VSCode in Gitpod.
    
    Zulip: https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/lean.2Envim/near/404290395

[33mcommit 3e7a07fa4f0a6248c6547025b372ca45b917a463[m
Author: Oliver Nash <github@olivernash.org>
Date:   Wed Dec 13 17:01:32 2023 +0000

    feat: define root data / systems (#8882)

[33mcommit 4275e9e199bf5e8eaaf44800b8eb123c96292485[m
Author: Eric Rodriguez <ericrboidi@gmail.com>
Date:   Wed Dec 13 16:04:15 2023 +0000

    feat: Wedderburn's Little Theorem (#6800)
    
    
    
    
    Co-authored-by: Eric Rodriguez <37984851+ericrbg@users.noreply.github.com>

[33mcommit d85330ef0bdda6650271c95df08b6bd72a5a6459[m
Author: Andrew Yang <the.erd.one@gmail.com>
Date:   Wed Dec 13 12:12:03 2023 +0000

    feat: Norm and trace under isomorphisms. (#8682)
    
    
    
    
    Co-authored-by: Andrew Yang <36414270+erdOne@users.noreply.github.com>

[33mcommit 6bb383b09ebd407aabadf1dde2aef5017ac69b0f[m
Author: David Renshaw <dwrenshaw@gmail.com>
Date:   Wed Dec 13 09:43:18 2023 +0000

    chore: address `rsuffices` porting notes (#9014)
    
    Updates proofs that had been doing `rsuffices` manually.

[33mcommit f7006a73d443b58eaf61494edacfeaae71d812f2[m
Author: grunweg <junyanxu.math@gmail.com>
Date:   Wed Dec 13 09:43:17 2023 +0000

    chore: rename LocalEquiv to PartialEquiv (#8984)
    
    The current name is misleading: there's no open set involved; it's just an equivalence between subsets of domain and target.
    [zulip discussion](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Naming.20around.20local.20homeomorphisms/near/407090631)
    
    `PEquiv` is similarly named: this is fine, as they're different designs for the same concept.
    
    
    
    Co-authored-by: Michael Rothgang <rothgami@math.hu-berlin.de>

[33mcommit 82ddb54f6cb64f727e412a60ecaa99a9dafaec2a[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Wed Dec 13 09:43:16 2023 +0000

    chore: Sink `Algebra.Support` down the import tree (#8919)
    
    `Function.support` is a very basic definition. Nevertheless, it is a pretty heavy import because it imports most objects a `support` lemma can be written about.
    
    This PR reverses the dependencies between those objects and `Function.support`, so that the latter can become a much more lightweight import.
    
    Only two import could not easily be reversed, namely the ones to `Data.Set.Finite` and `Order.ConditionallyCompleteLattice.Basic`, so I created two new files instead.
    
    I credit:
    * Yury for https://github.com/leanprover-community/mathlib/pull/6791
    * Oliver for https://github.com/leanprover-community/mathlib/pull/7439

[33mcommit 395e853081dfd33ab45aae0c06dcbde3947595fc[m
Author: Winston Yin <winstonyin@gmail.com>
Date:   Wed Dec 13 09:43:14 2023 +0000

    feat(Geometry/Manifold/Instances/UnitsOfNormedAlgebra): Lie group structure (#8397)
    
    Port of [mathlib#15763](https://github.com/leanprover-community/mathlib/pull/15763)
    
    We complete the construction of the Lie group of units of a complete normed ring.
    
    To show that multiplication and inversion are smooth, we add some more lemmas:
    1. For a manifold `M` whose chart structure is induced by an open embedding from `M` to `H`, the open embedding itself is a smooth manifold map.
    2. The inverse of this open embedding is smooth on its range.
    3. For a manifold map `f : M ‚Üí M'` whose target space `M'` has a chart structure induced by an open embedding `e' : M' ‚Üí H'`, if `e' ‚àò f` is smooth, then `f` is smooth.
    
    Lemmas previously not ported are now ported:
    1. `open_embedding.to_local_homeomorph_left_inv`
    2. `open_embedding.to_local_homeomorph_right_inv`
    
    
    
    Co-authored-by: Michael Rothgang <rothgami@math.hu-berlin.de>

[33mcommit 86e78bc0f6058c9e4c46696511d9f2d184a957dc[m
Author: Xavier Xarles <Xavier.Xarles@uab.cat>
Date:   Wed Dec 13 09:14:07 2023 +0000

    feat: Modify incorrect definition from Semiring to CommSemiring (#9003)
    
    The definition of RingEquiv.toCommSemiRingCatIso was incorrectly stated as equal to the RingEquiv.toSemiRingCatIso
    
    
    
    Co-authored-by: Xavier Xarles <56635243+XavierXarles@users.noreply.github.com>

[33mcommit 441b6cef620844aa6bcf947d63af335383e5dfdf[m
Author: Bhavik Mehta <bhavikmehta8@gmail.com>
Date:   Wed Dec 13 08:05:58 2023 +0000

    feat(Combinatorics): definition and basic properties of Schnirelmann density (#7342)
    
    Provide the definition of the Schnirelmann density, basic properties of it, and some simple useful calculations.
    
    Co-authored-by: Ya√´l Dillies <yael.dillies@gmail.com>
    Co-authored-by: Doga Can Sertbas <dogacan.sertbas@gmail.com>
    
    
    
    Co-authored-by: Bhavik Mehta <bm489@cam.ac.uk>
    Co-authored-by: Ya√´l Dillies <yael.dillies@gmail.com>

[33mcommit f7c6fc158c0e23f2d8ae5731b7f2f5507901297a[m
Author: Xavier Roblot <46200072+xroblot@users.noreply.github.com>
Date:   Wed Dec 13 06:01:08 2023 +0000

    feat: Hermite-Minkowski theorem (#8478)
    
    We prove  lower bounds for the abs. value of the discriminant of a number field in terms of its degree and deduce from it Hermite-Minkowski theorem: a nontrivial number field has nontrivial absolute discriminant.
    
    ```lean
    theorem abs_discr_ge (h : 1 < finrank ‚Ñö K) :
        (4 / 9 : ‚Ñù) * (3 * œÄ / 4) ^ finrank ‚Ñö K ‚â§ |discr K|
    
    theorem discr_gt_one (h : 1 < finrank ‚Ñö K) : 2 < |discr K|
    ```

[33mcommit 681a4da8019acfb5f48e24a264223800a61bcbd6[m
Author: LW <hi@llllvvuu.dev>
Date:   Wed Dec 13 00:39:19 2023 +0000

    feat: homomorphisms are linear over Z/nZ scalars (#8965)
    
    Port from PFR for using linear algebra on C_2^n, following the convention of `AddMonoidHom.to{Int,Nat,Rat}LinearMap` but in a different file to avoid circular import.
    
    For a separate PR:
    ```lean
    @[reducible]
    def module (h : ‚àÄ (x : M), n ‚Ä¢ x = 0) : Module (ZMod n) M
    ```
    
    Co-authored-by: adamtopaz <github@adamtopaz.com>
    
    
    
    
    Co-authored-by: L Lllvvuu <git@llllvvuu.dev>
    Co-authored-by: LW <git@llllvvuu.dev>

[33mcommit d14945bb4f42a9634c96839d0175fb77e9114eed[m
Author: David Renshaw <dwrenshaw@gmail.com>
Date:   Wed Dec 13 00:15:27 2023 +0000

    chore: remove now-unneeded line that worked around linarith preprocessing bug (#9009)
    
    After #8310, the workaround in `eq_zero_of_d_neg` is no longer needed.
    I observed (via trace.profiler) no performance difference with this change.

[33mcommit 3889cd23d9cd1ad1ae791a1ed5965dcf9f70a6f5[m
Author: Sebastian Ullrich <sebasti@nullri.ch>
Date:   Wed Dec 13 00:15:26 2023 +0000

    chore: fix number of runs of "open Mathlib" benchmark (#8891)

[33mcommit ef12d9dfec850aea81490a1af9c48407522e7d5d[m
Author: Peter Nelson <71660771+apnelson1@users.noreply.github.com>
Date:   Wed Dec 13 00:15:25 2023 +0000

    feat: matroid duality (#8732)
    
    This PR adds the definition of the dual of a matroid and co-independent sets, as well as some notation and API.

[33mcommit 416fba960cf649d029ccd5dcad8b4a3814954083[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Tue Dec 12 23:03:49 2023 +0000

    fix: remove references to Nat.pow outside of tactic code (#9008)

[33mcommit a6c8a980b4a506428d0472568a265da1ff340ad1[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Tue Dec 12 23:03:48 2023 +0000

    feat: primality criteria for `Monoid.exponent` (#8723)
    
    This PR shows a few facts related to `Monoid.exponent`, especially when it is prime:
    
    1. A nontrivial finite cancellative monoid has exponent greater than 1.
    2. A nontrivial monoid has prime exponent `p` if and only if every non-identity element has order `p`.
    3. A group of order `p ^ 2` with `p` prime is not cyclic if and only if it has exponent `p`.

[33mcommit 3cfc8effeeb8d1b99d377e28e73e528af40c81e9[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Tue Dec 12 22:29:23 2023 +0000

    chore: make `Complex.ext` only a local `ext` lemma (#9010)
    
    In accordance with this [Zulip thread](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Complex.2Eext/near/393560116), this remove `Complex.ext` from the global `ext` attribute list and only enables it locally in certain files.

[33mcommit 27afdd8374731372086d2ba66bd8e9867c850f1f[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Tue Dec 12 21:55:05 2023 +0000

    feat: add aliases and a simple lemma for spectrum (#8986)

[33mcommit cc5a7230aa37dba826c9f86298401754bc2bd2cf[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Tue Dec 12 19:59:15 2023 +0000

    feat: add `StarAlgHom.ofId` (#8993)

[33mcommit 15f6474599e97155c795e10b15c6c497595fedff[m
Author: damiano <adomani@gmail.com>
Date:   Tue Dec 12 19:59:14 2023 +0000

    feat({ Tactic + test }/MoveAdd): make `And/Or` left-associative (#8607)
    
    In this [Zulip discussion](https://leanprover.zulipchat.com/#narrow/stream/113489-new-members/topic/move_oper.20.20HAnd.2EhAnd.3F/near/403820462) it was pointed out that `move_oper` always assumes right-associativity also for `And/Or`.
    
    This PR makes `move_oper` left-associative on `And/Or`.
    
    Affected files:
    ```bash
    Tactic/MoveAdd
    test/MoveAdd
    ```

[33mcommit aa38bca16d05b459d06a9deb1ab043555b19ac96[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Tue Dec 12 19:36:44 2023 +0000

    test: port some continuity tests from mathlib3 (#8985)

[33mcommit a9f7e64691ed69a88dc291736b94812d290675c5[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Tue Dec 12 16:52:56 2023 +0000

    feat: add `star` instances for `‚Ñù‚â•0` (#8988)

[33mcommit 114d3b752ee37c52feebf1ce9a35a78da8eae11f[m
Author: David Renshaw <dwrenshaw@gmail.com>
Date:   Tue Dec 12 16:52:55 2023 +0000

    chore: remove workaround natEmbeddingAux_injective_aux in Data.Fintype.Card (#8501)
    
    
    Data.Fintype.Card was ported in #1668. After that, `wlog` was added in  #2144.
    This means that we can now avoid needing the private workaround theorem
    `natEmbeddingAux_injective_aux`.
    
    
    
    Co-authored-by: Ya√´l Dillies <yael.dillies@gmail.com>

[33mcommit 31536e66e4f0f0a7acd8d5015a1993bada7d7394[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Dec 12 15:39:16 2023 +0000

    fix(Logic/Equiv/Set): fix `simpNF` (#9002)
    
    This was not a false positive becahse `h` appears in the RHS,
    so `simp` had no way to apply the lemma
    if it has some other proof of `f x ‚àà f '' s`.

[33mcommit 55d44371f53554a0cbaf675e9ac0186319289ed9[m
Author: Andrew Yang <the.erd.one@gmail.com>
Date:   Tue Dec 12 15:39:15 2023 +0000

    feat: Define dual submodule wrt bilinear form (#8997)
    
    
    
    
    Co-authored-by: Andrew Yang <36414270+erdOne@users.noreply.github.com>

[33mcommit 5497c1ce7de219a15bb8b7a3b73be988409b1d3c[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Tue Dec 12 14:35:51 2023 +0000

    feat: Strict Jensen inequality (#8972)
    
    and equality case
    
    From PFR
    
    Co-authored-by: Heather Macbeth <hrmacbeth@gmail.com>

[33mcommit 8e572f2640fb47dc1c0906a1df4af69ea504daa8[m
Author: Martin Dvo≈ô√°k <martin.dvorak@matfyz.cz>
Date:   Tue Dec 12 12:47:15 2023 +0000

    docs(Algebra/Order/Ring/Defs): tiny `IsDomain` corrections (#8489)
    
    
    
    Co-authored-by: Ya√´l Dillies <yael.dillies@gmail.com>

[33mcommit 669cc3a01fcbdb94ecdc47e504b36ef369648f7c[m
Author: Oliver Nash <github@olivernash.org>
Date:   Tue Dec 12 11:45:53 2023 +0000

    feat: definition of reflections and root system uniqueness lemma (#8981)
    
    
    
    
    Co-authored-by: Johan Commelin <johan@commelin.net>

[33mcommit 9153d27ba463f6da31e456cb4d2200a3f7139ff3[m
Author: LW <hi@llllvvuu.dev>
Date:   Tue Dec 12 11:45:52 2023 +0000

    feat: `LinearMap.submoduleMap` (#8963)
    
    Re-opening #8923 since that was from a fork.
    
    
    
    Co-authored-by: L Lllvvuu <git@llllvvuu.dev>

[33mcommit 3a722fdae3ff6029fce87e80670dd0cb82a689e2[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Tue Dec 12 11:00:46 2023 +0000

    feat(Data/Set/Pointwise/Interval): inclusions of pointwise +/* (#8368)
    
    As remarked in the docstring, to avoid an explosion of lemmas, the subset operations only cover the cases with the largest possible intervals on the LHS: to conclude that `Ioo a b * Ioo c d ‚äÜ Ioo (a * c) (c * d)`, you can use monotonicity of `*` and `Finset.Ico_mul_Ioc_subset`.

[33mcommit 8a3329c4d71e651b00fcc9bde54a19afbf16a7df[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Tue Dec 12 09:55:05 2023 +0000

    feat: The descending factorial in `ZMod` (#8465)
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>
    Co-authored-by: Ya√´l Dillies <yael.dillies@gmail.com>

[33mcommit 2dd59ba859096747daf89cebff16981833b72fd7[m
Author: David Renshaw <dwrenshaw@gmail.com>
Date:   Tue Dec 12 09:17:49 2023 +0000

    chore: address porting notes in Archive.Wiedijk100Theorems.Partition (#8499)
    
    
    `convert` no longer hits a timeout here.

[33mcommit 0688c2d7b1d870c9f4565ad30b330f28686445f4[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Tue Dec 12 08:19:34 2023 +0000

    chore: rename `StarSemigroup.to_starModule` (#8994)

[33mcommit b4f0e656b1b3a6e4d722a7a427e90df74289ceb5[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Tue Dec 12 07:55:33 2023 +0000

    feat(Mathlib/Control/Random): enhance to a monad transformer (#8876)
    
    This follows the pattern that is already present in the haskell version

[33mcommit 1c9929f3360c26cc93d43c44771f062fec6528fc[m
Author: Jujian Zhang <jujian.zhang1998@outlook.com>
Date:   Tue Dec 12 07:30:31 2023 +0000

    feat : direct limit and tensor product commutes (#8473)
    
    Given a family of $R$-module $G_i$'s and compatible $f : G_i \to G_j$ whenever $i \le j$ and $M$ another $R$-module, we have $\lim G_i \otimes M \cong \lim (G_i \otimes M)$
    
    
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>
    Co-authored-by: Junyan Xu <junyanxumath@gmail.com>

[33mcommit 00056bcbe30c02bf7f225b8308af3a0e203d4c34[m
Author: Scott Morrison <scott@tqft.net>
Date:   Tue Dec 12 02:48:22 2023 +0000

    chore: bump std to leanprover/lean4#429 (#8990)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 8ec98e47fcb91344d9bdb2c1f5c400f0aa091166[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Tue Dec 12 01:09:25 2023 +0000

    refactor(Control/ULiftable): use `outParam` and adjust universe orders (#8849)
    
    The most useful universe argument to `up` and `down` (the one in the `ULift` type) is now first.
    
    Combined with the `outParam`, this makes using `ULiftable.up` more ergonomic downstream, removing a handful of type annotations.

[33mcommit e8acc5ce2eae55793195ef3a2db2fbbe35cc03aa[m
Author: Oliver Nash <github@olivernash.org>
Date:   Mon Dec 11 22:56:50 2023 +0000

    feat: supporting lemmas for defining root systems (#8980)
    
    A collection of loosely-related lemmas, split out from other work in the hopes of simplifying review.

[33mcommit f2f86bd50e6388bf02ae368540a0dd2cd0c7742c[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Mon Dec 11 21:49:33 2023 +0000

    feat(Algebra/Module): use `notation3` for composition notation (#8847)
    
    This means that `comp` is printed with this notation in the goal view.

[33mcommit bbc6e56d76341e236fa4e15748bebff612b5cb4f[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Mon Dec 11 20:54:43 2023 +0000

    chore: rename LocalHomeomorph to PartialHomeomorph (#8982)
    
    `LocalHomeomorph` evokes a "local homeomorphism": this is *not* what this means.
    Instead, this is a homeomorphism on an open set of the domain (extended to the whole space, by the junk value pattern). Hence, partial homeomorphism is more appropriate, and avoids confusion with `IsLocallyHomeomorph`.
    
    A future PR will rename `LocalEquiv` to `PartialEquiv`.
    
    [Zulip discussion](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Naming.20around.20local.20homeomorphisms/near/407090631)

[33mcommit 556f6483d1643b9e193f0d48c6db4c4c192bc34e[m
Author: Junyan Xu <junyanxumath@gmail.com>
Date:   Mon Dec 11 20:22:59 2023 +0000

    chore: cleanups following #8609 and #8714 (#8962)
    
    + generalize `image_rootSet`, `adjoin_rootSet_eq_range` and `splits_comp_of_splits` in Data/Polynomial/Splits and use the last one to golf `splits_of_algHom`, `splits_of_isScalarTower` (introduced in # 8609).
    
    + add three new lemmas `mem_range_x_of_minpoly_splits` to simplify the construction of `IntermediateField.algHomEquivAlgHomOfIsAlgClosed` and `Algebra.IsAlgebraic.algHomEquivAlgHomOfIsAlgClosed`, remove the `IsAlgClosed` condition and rename. ~~They could be moved to an earlier file but I refrain from doing that. (#find_home says it's already in the right place)~~
    
    + golf `primitive_element_iff_algHom_eq_of_eval` from # 8609, using a new lemma `IsIntegral.minpoly_splits_tower_top` for the last step.
    
    + make `integralClosure_algEquiv_restrict` (from # 8714) computable and rename to `AlgEquiv.mapIntegralClosure` to follow camelCase naming convention and enable dot notation.
    
    
    
    Co-authored-by: Xavier-Fran√ßois Roblot <46200072+xroblot@users.noreply.github.com>
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>

[33mcommit fe44d905c4bc8108185bff2597f2201835f26223[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Mon Dec 11 18:22:24 2023 +0000

    chore: rename IsLocallyHomeomorph{On} to IsLocalHomeomorph{On} (#8983)
    
    This matches informal math terminology: `IsLocallyHomeomorph f` means "f is a local homeomorphism".
    
    [zulip discussion](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Naming.20around.20local.20homeomorphisms/near/407090631)

[33mcommit de48aea2fc6bcb8f59a69982fea4bdf9da1d4bce[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Mon Dec 11 16:31:56 2023 +0000

    feat: `s √ó t = univ ‚Üî s = univ ‚àß t = univ` (#8976)
    
    for sets and finsets
    
    From LeanCamCombi

[33mcommit 33095fed04b9a5cbf505ff5fa877cf0c6dd21876[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Mon Dec 11 14:48:59 2023 +0000

    feat(RingTheory/Coalgebra): generalize the `Finsupp` instance (#8868)
    
    The original `Coalgebra R (Œπ ‚Üí‚ÇÄ R)` is now recovered from `[Coalgebra R A] : Coalgebra R (Œπ ‚Üí‚ÇÄ A)` as a special case.
    
    Salvaged from https://github.com/leanprover-community/mathlib4/pull/8621#discussion_r1408532458

[33mcommit ad02f2a2f0533c613e018422cdb5a489411e288b[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Mon Dec 11 13:18:40 2023 +0000

    feat: Measurability of logic operators (#8952)
    
    From PFR

[33mcommit 886b5aa70087cadd1fb501570be217a2c61a78d8[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Mon Dec 11 12:15:00 2023 +0000

    feat(Algebra/FreeMonoid): the units are unique (#8904)

[33mcommit 9f2bb70be94b0c9abb3ebd434503b95d40a51dad[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Mon Dec 11 11:08:08 2023 +0000

    fix: correct bad handling of rat literals in `ring_nf` (#8836)
    
    Reported [on Zulip](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/ring_nf.20returns.20ugly.20literals/near/400988184):
    
    > ```lean
    > import Mathlib.Data.Real.Basic
    >
    > local macro_rules | `($x ^ $y) => `(HPow.hPow $x $y) -- Porting note: See issue lean4#2220
    >
    > example {n : ‚Ñù} : (n + 1 / 2) ^ 2 * (n + 1 + 1 / 3) ‚â§ (n + 1 / 3) * (n + 1) ^ 2 := by
    >   ring_nf
    > ```
    > After the `ring_nf` call, the goal looks like:
    > ```lean
    >  ‚Üë(Int.ofNat 1) / ‚Üë3 + n * (‚Üë(Int.ofNat 19) / ‚Üë12) + n ^ 2 * (‚Üë(Int.ofNat 7) / ‚Üë3) + n ^ 3 ‚â§
    >   ‚Üë(Int.ofNat 1) / ‚Üë3 + n * (‚Üë(Int.ofNat 5) / ‚Üë3) + n ^ 2 * (‚Üë(Int.ofNat 7) / ‚Üë3) + n ^ 3
    > ```
    
    This removes the unwanted `Int.ofNat` and coercions.
    
    The docstring was apparently incorrect on `Rat.rawCast` (according to @digama0).
    With that in mind, it's just a case of fixing the local lemmas used to clean up, to reflect the actual invariant instead of the previously-documented one.
    
    This also fixes a hang when using `mode = .raw`, by using only a single pass to prevent `1` recursively expanding to `Nat.rawCast 1 + 0`.
    
    
    
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>

[33mcommit 7be3f9939fab1b0a8c8cfe8c4b1cdfcdaafc6c4b[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Dec 11 09:59:07 2023 +0000

    feat(MonoidAlgebra): add `AddMonoidAlgebra.lift_of'` (#8938)
    
    Add `AddMonoidAlgebra.lift_of'`. `simp` can prove it but it's useful for rewriting right to left.
    
    Other changes:
    
    - Move `MonoidAlgebra.lift_of` and prove it `by simp` to make it clear that `simp` can prove it.
    - Stop abusing `Multiplicative G = G` in the statement of `AddMonoidAlgebra.of'_eq_of`.
    - Reuse lemmas about `MonoidAlgebra` in some proofs about `AddMonoidAlgebra`.

[33mcommit 1ec84029c0ae659fd6e0cb972c81b327411ffd58[m
Author: Mario Carneiro <mcarneir@andrew.cmu.edu>
Date:   Mon Dec 11 07:34:23 2023 +0000

    feat: lake exe cache lookup (#8838)
    
    This allows you to query information regarding the cache:
    ```
    $ lake exe cache lookup Mathlib/MeasureTheory/Measure/FiniteMeasureProd.lean
    Mathlib/MeasureTheory/Measure/FiniteMeasureProd.lean: /home/mario/.cache/mathlib/0875116721fafda8.ltar
      comment: git=mathlib4@a4d9e50aa274cb8057bf09c845de139ccd4b0164
    ```
    This says, for a given lean file, where to find the ltar file that it is unpacked from/to, as well as the metadata contained in the file, which currently means the commit which built the file. (This is not necessarily the same as the current commit, because not every commit builds all files, many files are grandfathered from earlier commits, sometimes even builds that failed, like in this example.) This is useful for debugging [certain issues](https://github.com/leanprover-community/mathlib4/pull/8834/files#r1416613607).
    
    The leantar version was bumped [from `0.1.9` to `0.1.10`](https://github.com/digama0/leangz/compare/v0.1.9..v0.1.10), mainly because this includes a bugfix for the `-k` option of leantar that was exposed while testing this command.
    
    
    
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>

[33mcommit 193e15685ceeba760fe95d1bea85c4c80887d77d[m
Author: Scott Morrison <scott@tqft.net>
Date:   Mon Dec 11 03:29:20 2023 +0000

    chore: bump std to 604b407, catching up to leanprover/std4#361 (#8959)
    
    
    
    Co-authored-by: Tobias Grosser <tobias@grosser.es>
    Co-authored-by: James <jamesgallicchio@gmail.com>
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>
    Co-authored-by: Siddharth Bhat <siddu.druid@gmail.com>

[33mcommit bacd2ecfa603556ca27d64d52583d221a87503ce[m
Author: Tobias Grosser <tobias@grosser.es>
Date:   Mon Dec 11 00:41:01 2023 +0000

    chore: update std4 to b197bd2, catching up to leanprover/std4#427 (#8888)
    
    
    
    Co-authored-by: James <jamesgallicchio@gmail.com>
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>
    Co-authored-by: Siddharth Bhat <siddu.druid@gmail.com>

[33mcommit 7df4ff9160385a3cffa89fcd855340152db4208c[m
Author: Scott Morrison <scott@tqft.net>
Date:   Sun Dec 10 22:40:36 2023 +0000

    chore: reduce imports of Data.List.Defs (#8635)
    
    Currently `Data.List.Defs` depends on `Algebra.Group.Defs`, rather unnecessarily.
    
    (This then prevents importing `Data.List.Defs` into `Tactic.Common`, without breaking various `assert_not_exists` statements.)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>
    Co-authored-by: thorimur <68410468+thorimur@users.noreply.github.com>

[33mcommit ee5a1c52a71e10c8cd0149577361c12fe37f93ee[m
Author: James Gallicchio <jamesgallicchio@gmail.com>
Date:   Sun Dec 10 21:34:25 2023 +0000

    chore: patch std4#89 (#8566)
    
    
    
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>
    Co-authored-by: Tobias Grosser <tobias@grosser.es>
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>
    Co-authored-by: Scott Morrison <scott@tqft.net>

[33mcommit 38c82baa73b0570f380fbe8bcea9674fef0e6854[m
Author: Xavier Roblot <46200072+xroblot@users.noreply.github.com>
Date:   Sun Dec 10 15:17:46 2023 +0000

    feat: Add some equivalent characterisations of primitive elements in finite extensions of fields (#8609)
    
    See the [Zulip thread](https://leanprover.zulipchat.com/#narrow/stream/217875-Is-there-code-for-X.3F/topic/Characterization.20of.20primitive.20elements.20in.20field.20extensions/near/403369086)

[33mcommit 390d5fb5d505dfe3c33374803f0a7c3fb59dc5e4[m
Author: David Loeffler <d.loeffler.01@cantab.net>
Date:   Sun Dec 10 14:38:33 2023 +0000

    feat(MeasureTheory/Integral/Pi): dependent types, values in R or C (#8948)
    
    This is a generalisation of the lemmas in `MeasureTheory.Integral.Pi` to consider functions on products `(i : Œπ) ‚Üí E i`, rather than just products of multiple copies of the same type. I also allowed complex-valued functions, and renamed some lemmas slightly (since the lemmas had `finset` in their names but were about fintypes, not finsets).
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit d50e8db281c7f14bf78d62035ef4ad971dc6f861[m
Author: David Loeffler <d.loeffler.01@cantab.net>
Date:   Sun Dec 10 14:38:32 2023 +0000

    chore(MeasureTheory/Function): fix duplicated assumption in L2Space (#8947)
    
    This fixes a tiny glitch in the instance arguments in the L2Space file: if you invoke some of these lemmas with `@` then you find you need to give a measure twice over, once for the `[MeasureSpace Œ±]` instance and once for the explicit argument.

[33mcommit 3c2df660b00b1b156e7c9ca73d0a87bbf09fcda4[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Sun Dec 10 13:47:32 2023 +0000

    feat: `MeasurableSpace (Set Œ±)` instance (#8946)
    
    As a demonstration, prove that the complement operation is measurable.
    
    From LeanCamCombi

[33mcommit f13f19723f82fb68d3ee4a110390aa910b6ea2b4[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Sun Dec 10 10:44:20 2023 +0000

    chore: Rename `Set.Sigma` to `Set.sigma` (#8927)
    
    This was a misport.
    
    Also adds missing whitespace after some `Œ£`s while we're here, and some other arbitrary lime re-wrappings.

[33mcommit 759a69c87f8458b05688d4f2e4f468eb95b38178[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Sun Dec 10 09:51:05 2023 +0000

    feat: Existence of tranversals of a subgroup (#8932)
    
    Specialises the existence of tranversals to the case where one subgroup is contained in another.
    
    Also replace `‚ä§ : Set G` by `Set.univ` and modify the lemma names accordingly.
    
    From PFR

[33mcommit 06295115e02029d99354c51425dc11539f40347b[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sat Dec 9 23:54:17 2023 +0000

    chore(Order/Filter): protect `Filter.map_smul` (#8935)
    
    We use `SMulHomClass.map_smul` much more often, even when the `Filter` namespace is opened.

[33mcommit a4d7dadfde7e02c0b0f434d3b2ff960316e15b18[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Sat Dec 9 23:54:16 2023 +0000

    feat: `¬¨ Subsingleton Œ± ‚Üî Nontrivial Œ±` (#8926)

[33mcommit c2b1517015ed7a592790cfb78799dac3487f7769[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Sat Dec 9 23:33:24 2023 +0000

    fix: `scoped notation3` should create scoped delaborators (#8934)
    
    This is tested in #8909

[33mcommit 4de90b301b07e648c3ae1056dec0879bf7242eaf[m
Author: Mario Carneiro <mcarneir@andrew.cmu.edu>
Date:   Sat Dec 9 21:16:40 2023 +0000

    fix: accidental `getFileHash` state reset (#7876)
    
    As [reported on Zulip](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/infinite.20loop.20in.20CI.3A.20get.20cache/near/398158750). The use of `set` instead of `modify` was accidentally retaining old values of the state, which would clobber insertions and cause files to be revisited.
    
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>

[33mcommit 603ba0edfa54651831a9bdebe4cdc81aa3172049[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Sat Dec 9 15:59:44 2023 +0000

    feat: Marica-Sch√∂nheim special case of Graham's conjecture (#8579)
    
    Prove the special case of Graham's conjecture when the numbers are squarefree.

[33mcommit 818337c6bd6587795f69dffefeeae7988f4bdba8[m[33m ([m[1;31morigin/RD_compact_system[m[33m)[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Sat Dec 9 13:26:09 2023 +0000

    feat: Finsets and multisets are graded (#8892)
    
    Characterise `IsAtom`, `IsCoatom`, `Covby` in `Set Œ±`, `Multiset Œ±`, `Finset Œ±` and deduce that `Multiset Œ±`, `Finset Œ±` are graded orders.
    
    Note I am moving some existing characterisations to here because it makes sense thematically, but I could be convinced otherwise.

[33mcommit 5ef74df5e417f4c5830ecf7f3e69a800274c3b4e[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sat Dec 9 12:32:15 2023 +0000

    chore(*Deriv*): golf (#8899)
    
    Assorted golf I did while working on a refactor. Submitting as a separate PR.
    
    - Move `not_differentiableAt_abs_zero` to `Calculus.Deriv.Add`, golf.
    - Rename `HasFDerivWithinAt_of_nhdsWithin_eq_bot` to `HasFDerivWithinAt.of_nhdsWithin_eq_bot`, golf.
    - Protect `Filter.EventuallyEq.rfl`.
    - Golf here and there.

[33mcommit 8fe6d2da03600766a6037b326e18901334ccc4d4[m
Author: Winston Yin <winstonyin@gmail.com>
Date:   Sat Dec 9 12:05:53 2023 +0000

    refactor(Gronwall): Restate in terms of `LipschitzOnWith`, `EqOn` (#8920)
    
    Restate the uniqueness theorems for solutions to ODEs using `LipschitzOnWith` and `EqOn` rather than the equivalent raw propositions, so that relevant APIs may be used for arguments of these theorems.

[33mcommit 9e53f211f7f10005e64309b648a753c0d6e61fc0[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Sat Dec 9 11:15:41 2023 +0000

    feat: `CompactSpace (stdSimplex ‚Ñù Œπ)` (#8917)
    
    This is just packaging an existing lemma as an instance.
    
    From PFR

[33mcommit 3d06b09147f4cf554a7ecf5eb5bf35b9083fdce2[m
Author: Kevin Buzzard <k.buzzard@imperial.ac.uk>
Date:   Sat Dec 9 11:15:40 2023 +0000

    doc: add/edit some FLT docstrings (#8910)
    
    Fix two arguably incorrect docstrings, clarify one, add one more.

[33mcommit b20b0dd83d9e8f5647634e1abad2d28a39abce91[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Sat Dec 9 10:21:57 2023 +0000

    feat: Continuity of an indicator function (#8918)
    
    From PFR

[33mcommit aa99c9f67a66ea36a880eeca5c9be535ea738804[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Sat Dec 9 09:17:31 2023 +0000

    refactor: Remove `leftCoset`/`rightCoset` (#8877)
    
    Those two definitions are completely obsolete now that we have the pointwise API. This PR removes them but not the corresponding API. A much more tedious subsequent PR will be needed to merge the two API.
    
    Note that I need to tweak simp lemmas to keep confluence since I'm merging two pairs of head keys together.

[33mcommit 5d4fa55028ca22525074d4c2141f8f2a04dc0e32[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sat Dec 9 02:01:12 2023 +0000

    chore(Calculus/Inverse): split (#8603)

[33mcommit b46b244c2ce02e542e365221e03f0bf2e408f39e[m
Author: Fran√ßois G. Dorais <fgdorais@gmail.com>
Date:   Sat Dec 9 00:12:34 2023 +0000

    fix: bad lakefile from #6202 (#8914)

[33mcommit cf68d150c4c0aefabd7884b0781e9da764a84ff6[m
Author: Jon Eugster <eugster.jon@gmail.com>
Date:   Fri Dec 8 22:49:43 2023 +0000

    fix: `apply ... at` with field notation (#8911)
    
    add a test to make sure `apply h.mp at` can be parsed and fix it.

[33mcommit d76f1524f0635b9212835a8b0cf59f9e2a052ad1[m
Author: Fran√ßois G. Dorais <fgdorais@gmail.com>
Date:   Fri Dec 8 22:28:28 2023 +0000

    fix: patch for std4#197 (More add lemmas for `Nat`) (#6202)

[33mcommit 3cffd04dd2ae2dbfc069f45b7e7e8b3b42c9b6f3[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Fri Dec 8 18:34:27 2023 +0000

    chore: bump std (#8897)
    
    Since this bump does not include https://github.com/leanprover/std4/pull/427 (in order to avoid having to handle the intermediate commits all at once), we temporarily remove the single use of a `‚àÄ i ‚àâ s,` binder, and the two tests of it.
    
    We can revert these changes in a later Std bump, once we've address the other awkward bumps inbetween.
    
    This unblocks #8711.

[33mcommit b383ae3471c02c9c6249948d26394b577203edf5[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Fri Dec 8 15:24:44 2023 +0000

    chore: Fix dead links (#8902)
    
    https://en.wikipedia.org/wiki/Ordered_module doesn't exist but https://en.wikipedia.org/wiki/Ordered_vector_space does. Also delete `instModuleOrderDual`, which was accidentally duplicated (with a more general statement) as `OrderDual.instModule'` in #8840.

[33mcommit 75d413be2ff5a21f77a63ca465194c5159bb22d2[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Fri Dec 8 15:24:42 2023 +0000

    feat: The Cauchy-Davenport theorem (#8429)
    
    This PR proves a very general version of the Cauchy-Davenport theorem, namely a lower bound on the size of the product `s * t` of two finsets in terms of the size of `s` and `t`.
    We also provide a different proof for linearly ordered cancellative semigroups.

[33mcommit c04ed1c4478d2d91c058b1bd9e41f92c7b0f788b[m
Author: Floris van Doorn <fpvdoorn@gmail.com>
Date:   Fri Dec 8 14:37:22 2023 +0000

    feat: 3 small filter lemmas (#8898)
    
    * Written by @PatrickMassot in #7851
    * Needed for #7851

[33mcommit d510164f29adff4dd8837783fd9da092eb805412[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Fri Dec 8 13:37:49 2023 +0000

    chore: tidy various files (#8880)

[33mcommit 31037d92e548ddbde5c3bdb336234bb558977bcd[m
Author: Peter Nelson <71660771+apnelson1@users.noreply.github.com>
Date:   Fri Dec 8 12:43:12 2023 +0000

    feat: Invertible matrices (#8219)
    
    We add some results on invertible matrices, showing that for a finite square matrix `A`, `IsUnit A` is equivalent to the surjectivity/injectivity of left/right multiplication, and to the linear independence of the set of rows/columns.
    
    We also add a couple of lemmas about the existence of left/right inverses for nonsquare matrices, and a bit of API for `mulVecLin` and `vecMulLinear`.
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 62d6feffc19793121b8a8cf373cd86be552e941e[m
Author: Aaron Anderson <awainverse@gmail.com>
Date:   Fri Dec 8 12:07:23 2023 +0000

    feat: Discrete measurable spaces (#8859)
    
    Adds a typeclass for measurable spaces where all sets are measurable
    Proves several instances relating these to other classes
    
    
    
    Co-authored-by: Ya√´l Dillies <yael.dillies@gmail.com>

[33mcommit 4fe66bbfc2aba44cb3eb9c716854efde656c5532[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Fri Dec 8 10:23:06 2023 +0000

    chore: Rename `...MonoRev` to `...ReflectLE` in classes (#8890)
    
    Either `ReflectLT` should be called `StrictMonoRev` or `ReflectLE` should be called `MonoRev`, but we can't have both and hope people understand the relation between them.

[33mcommit d14658b4fab8f69219eacfab3f0e2ad2951d7e1c[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Fri Dec 8 10:23:05 2023 +0000

    chore: Replace `(¬∑ op ¬∑) a` by `(a op ¬∑)` (#8843)
    
    I used the regex `\(\(¬∑ (.) ¬∑\) (.)\)`, replacing with `($2 $1 ¬∑)`.

[33mcommit cf7d718e59ca52949426b9dbfeffd103938b65cf[m
Author: Michael Stoll <Michael.Stoll@uni-bayreuth.de>
Date:   Fri Dec 8 10:23:04 2023 +0000

    feat: invariance of the derivative under translation (#8614)
    
    This adds a new file `Mathlib.Analysis.Calculus.Deriv.Shift` that contains two lemmas
    ```lean
    lemma HasDerivAt.comp_const_add {ùïú : Type*} [NontriviallyNormedField ùïú] (a x : ùïú) {ùïú' : Type*}
        [NormedAddCommGroup ùïú'] [NormedSpace ùïú ùïú'] {h : ùïú ‚Üí ùïú'} {h' : ùïú'}
        (hh : HasDerivAt h h' (a + x)) :
        HasDerivAt (fun x ‚Ü¶ h (a + x)) h' x := ...
    
    lemma HasDerivAt.comp_add_const {ùïú : Type*} [NontriviallyNormedField ùïú] (x a : ùïú) {ùïú' : Type*}
        [NormedAddCommGroup ùïú'] [NormedSpace ùïú ùïú'] {h : ùïú ‚Üí ùïú'} {h' : ùïú'}
        (hh : HasDerivAt h h' (x + a)) :
        HasDerivAt (fun x ‚Ü¶ h (x + a)) h' x  := ...
    ```

[33mcommit 64c626ab8d5f59b54942168339b00a3f606ec640[m
Author: Junyan Xu <junyanxumath@gmail.com>
Date:   Fri Dec 8 09:33:38 2023 +0000

    chore: generalize Polynomial.Div to noncommutative rings (#8889)
    
    
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>

[33mcommit 41bbd1940ba690969a0a0d291410f8e28731384c[m
Author: Andrew Yang <the.erd.one@gmail.com>
Date:   Fri Dec 8 09:00:25 2023 +0000

    chore: Split `LinearAlgebra.BilinearForm`. (#8879)
    
    Also renamed `BilinearForm.restrictSymm` to `BilinearForm.IsSymm.restrict`.

[33mcommit 027651aa4041c2071247603605d4e5300de6efde[m
Author: Scott Morrison <scott@tqft.net>
Date:   Fri Dec 8 07:58:05 2023 +0000

    feat: minor refactors for speedups/easier unification (#8884)
    
    I think these are all positive or neutral in isolation, and they avoid breakages from a more interesting PR (providing a `@[csimp]` lemma for `npowRec`).
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 77132816ef15cfb0042eb2da018e492668195961[m
Author: Christian Merten <christian@merten.dev>
Date:   Fri Dec 8 05:51:36 2023 +0000

    feat: instances on colimits in category of actions (#8881)
    
    Adds the dual instances `HasFiniteCoproducts` and `HasFiniteColimits` for `Action V G`.

[33mcommit 7ba954b1d27279e744d6f44aa85feb5e50647eef[m
Author: Kyle Miller <kmill31415@gmail.com>
Date:   Fri Dec 8 01:40:25 2023 +0000

    feat: have `extract_goal` give full context when it detects a contradiction proof (#8250)
    
    If the goal is `False`, `extract_goal` would delete all hypotheses and leave an impossible goal. Now in this case `extract_goal` has the behavior of `extract_goal*`. (Suggested by Bhavik Mehta.)
    
    Also changes the `extract_goal` syntax to
    ```
    "extract_goal" ("*" <|> ident*) ("using" ident)?
    ```
    The "using" clause replaces the autogenerated name for the extracted theorem/def. The `extract_goal` tactic has the same behavior as before, `extract_goal *` extracts the entire local context like before, and `extract_goal a b c ...` removes everything from the local context except for fvars `a`, `b`, `c`, ... and their (and the goal's) dependencies. This last form does not automatically include prop variables that depend on preserved fvars, unlike `extract_goal`, which does. The thought is that including prop variables is useful in the default case, but if you are configuring which variables to take you can always take them manually.

[33mcommit 049f6f9c146026f6debfbf18ad947c4aa57150cb[m
Author: Christopher Hoskin <christopher.hoskin@gmail.com>
Date:   Thu Dec 7 22:44:32 2023 +0000

    feat: Scott topology on a preorder (#2508)
    
    Introduce the Scott topology on a preorder, defined in terms of directed sets.
    
    There is already a related notion of Scott topology defined in `topology.omega_complete_partial_order`, where it is defined on œâ-complete partial orders in terms of œâ-chains. In some circumstances the definition given here coincides with that given in `topology.omega_complete_partial_order` but in general they are different. Abramsky and Jung ([Domain Theory, 2.2.4][abramsky_gabbay_maibaum_1994]) argue that the œâ-chain approach has pedagogical advantages, but the directed sets approach is more appropriate as a theoretical foundation.
    
    
    
    Co-authored-by: Ya√´l Dillies <yael.dillies@gmail.com>
    Co-authored-by: Christopher Hoskin <mans0954@users.noreply.github.com>
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>

[33mcommit e09fd6ddb21f767dce0fd9026f5bcceee3e71681[m
Author: Jz Pan <acme_pjz@hotmail.com>
Date:   Thu Dec 7 22:15:02 2023 +0000

    feat(FieldTheory/Separable): add `AlgEquiv.isSeparable`, `AlgEquiv.isSeparable_iff` and `IsSeparable.isAlgebraic` (#8861)
    
    - add `AlgEquiv.isSeparable`, `AlgEquiv.isSeparable_iff` which states that `IsSeparable` is invariant under `AlgEquiv`
    - also add `IsSeparable.isAlgebraic` which states that separable extension is algebraic

[33mcommit 5522fc375dfd18ea7496d18f560309e857582ca8[m
Author: R√©my Degenne <Remydegenne@gmail.com>
Date:   Thu Dec 7 21:29:53 2023 +0000

    feat: exponentially tilted measures (#7676)
    
    Define exponentially tilted measures. The exponential tilting of a measure `Œº` on `Œ±` by a function `f : Œ± ‚Üí ‚Ñù` is the measure with density `x ‚Ü¶ exp (f x) / ‚à´ y, exp (f y) ‚àÇŒº` with respect to `Œº`.
    
    
    
    Co-authored-by: R√©my Degenne <remydegenne@gmail.com>
    Co-authored-by: RemyDegenne <remydegenne@gmail.com>

[33mcommit b5120c086378da1c8fba2209c7a2003a1f992c6f[m
Author: Michael Stoll <Michael.Stoll@uni-bayreuth.de>
Date:   Thu Dec 7 20:36:05 2023 +0000

    feat: add a version of FTC-2 with an integral over the unit interval (#8615)
    
    This adds the following version of the Fundamental Theorem of Calculus:
    ```lean
    lemma integral_unitInterval_eq_sub {C E : Type*} [IsROrC C]
        [NormedAddCommGroup E] [NormedSpace ‚Ñù E] [NormedSpace C E]
        [CompleteSpace E] [IsScalarTower ‚Ñù C E] {f f' : C ‚Üí E} {z‚ÇÄ z‚ÇÅ : C}
        (hcont : ContinuousOn (fun t : ‚Ñù ‚Ü¶ f' (z‚ÇÄ + t ‚Ä¢ z‚ÇÅ)) (Set.Icc 0 1))
        (hderiv : ‚àÄ t ‚àà Set.Icc (0 : ‚Ñù) 1, HasDerivAt f (f' (z‚ÇÄ + t ‚Ä¢ z‚ÇÅ)) (z‚ÇÄ + t ‚Ä¢ z‚ÇÅ)) :
        z‚ÇÅ ‚Ä¢ ‚à´ t in (0 : ‚Ñù)..1, f' (z‚ÇÄ + t ‚Ä¢ z‚ÇÅ) = f (z‚ÇÄ + z‚ÇÅ) - f z‚ÇÄ := ...
    ```
    This is helpful for, e.g., estimating the complex logarithm.
    
    
    
    Co-authored-by: Michael Stoll <99838730+MichaelStollBayreuth@users.noreply.github.com>

[33mcommit 9a694d3f79f81f812c7ff3d1e39934df8a64bda6[m
Author: Kyle Miller <kmill31415@gmail.com>
Date:   Thu Dec 7 17:41:57 2023 +0000

    doc: fix typo in Coalgebra docstring (#8874)

[33mcommit cd73b84102cfabf84a13eb6f5118db493726319a[m
Author: R√©my Degenne <Remydegenne@gmail.com>
Date:   Thu Dec 7 17:41:56 2023 +0000

    feat: define the composition-product of a measure and a kernel (#8852)
    
    The composition-product of a measure and a kernel, denoted by `‚äó‚Çò`, takes `Œº : Measure Œ±` and `Œ∫ : kernel Œ± Œ≤` and creates `Œº ‚äó‚Çò Œ∫ : Measure (Œ± √ó Œ≤)`. The integral of a function against `Œº ‚äó‚Çò Œ∫` is `‚à´‚Åª x, f x ‚àÇ(Œº ‚äó‚Çò Œ∫) = ‚à´‚Åª a, ‚à´‚Åª b, f (a, b) ‚àÇ(Œ∫ a) ‚àÇŒº`.
    
    This PR also modifies the Disintegration file to use the new definition.
    
    From the PFR project.
    
    
    
    Co-authored-by: R√©my Degenne <remydegenne@gmail.com>

[33mcommit c83d3d5d8562274b74679de0ffc11d6755d06cec[m
Author: Xavier Roblot <46200072+xroblot@users.noreply.github.com>
Date:   Thu Dec 7 17:41:55 2023 +0000

    feat: add a discrete topology instance for zlattice (#8480)
    
    
    Add the following
    ```lean
    variable [NormedAddCommGroup E] [NormedSpace ‚Ñù E] (b : Basis Œπ ‚Ñù E)
    
    instance [Fintype Œπ] : DiscreteTopology (span ‚Ñ§ (Set.range b))
    ```

[33mcommit f24e05a294b33d6593922a0ee6cde0d23f301998[m
Author: Xavier Roblot <46200072+xroblot@users.noreply.github.com>
Date:   Thu Dec 7 17:41:54 2023 +0000

    feat: Compute volume of balls of higher dimension for Lp norms (#8030)
    
    We give a formula `measure_unitBall_eq_integral_div_gamma` for computing the volume of the unit ball
    in a normed finite dimensional `‚Ñù`-vector space `E` with an Haar measure:
    ```lean
    theorem measure_unitBall_eq_integral_div_gamma {E : Type*} {p : ‚Ñù}
        [NormedAddCommGroup E] [NormedSpace ‚Ñù E] [FiniteDimensional ‚Ñù E] [MeasurableSpace E]
        [BorelSpace E] (Œº : Measure E) [IsAddHaarMeasure Œº] (hp : 0 < p) :
        Œº (Metric.ball 0 1) =
          ENNReal.ofReal ((‚à´ (x : E), Real.exp (- ‚Äñx‚Äñ ^ p) ‚àÇŒº) / Real.Gamma (finrank ‚Ñù E / p + 1))
    ```
    We also provide a theorem `measure_lt_one_eq_integral_div_gamma` to compute the volume of the ball `{x : E | g x < 1}` for a function `g : E ‚Üí ‚Ñù` defining a norm.
    ```lean
    theorem measure_lt_one_eq_integral_div_gamma {E : Type*}
        [AddCommGroup E] [Module ‚Ñù E] [FiniteDimensional ‚Ñù E] [mE : MeasurableSpace E]
        [tE : TopologicalSpace E] [TopologicalAddGroup E] [BorelSpace E] [T2Space E]
        [ContinuousSMul ‚Ñù E] (Œº : Measure E) [IsAddHaarMeasure Œº]
        {g : E ‚Üí ‚Ñù} (hg0 : g 0 = 0) (hgn : ‚àÄ x, g (- x) = g x) (hgt : ‚àÄ x y, g (x + y) ‚â§ g x + g y)
        (hgs : ‚àÄ {x}, g x = 0 ‚Üí x = 0) (hns :  ‚àÄ r x, g (r ‚Ä¢ x) ‚â§ |r| * (g x)) {p : ‚Ñù} (hp : 0 < p) :
        Œº {x : E | g x < 1} =
          ENNReal.ofReal ((‚à´ (x : E), Real.exp (- (g x) ^ p) ‚àÇŒº) / Real.Gamma (finrank ‚Ñù E / p + 1))
    ```
    This provides a way to compute the volume of the unit ball for the norms `L_p` for `1 ‚â§ p` in any dimension over the reals `MeasureTheory.volume_sum_rpow_lt_one` and the complex `Complex.volume_sum_rpow_lt_one`.
    ```lean
    variable (Œπ : Type*) [Fintype Œπ] {p : ‚Ñù} (hp : 1 ‚â§ p)
    
    theorem volume_sum_rpow_lt_one :
        volume {x : Œπ ‚Üí ‚Ñù | ‚àë i, |x i| ^ p < 1} =
          ENNReal.ofReal ((2 * Real.Gamma (1 / p + 1)) ^ card Œπ / Real.Gamma (card Œπ / p + 1))
    
    theorem Complex.volume_sum_rpow_lt_one {p : ‚Ñù} (hp : 1 ‚â§ p) :
        volume {x : Œπ ‚Üí ‚ÑÇ | ‚àë i, ‚Äñx i‚Äñ ^ p < 1} =
          ENNReal.ofReal ((œÄ * Real.Gamma (2 / p + 1)) ^ card Œπ / Real.Gamma (2 * card Œπ / p + 1))
    ```
    From these, we deduce the volume of balls in several situations.
    
    --
    
    Other significant changes include:
    -  Adding `MeasurePreserving.integral_comp'`: when the theorem `MeasurePreserving.integral_comp` is used with `f` a measurable equiv, it is necessary to specify that it is a measurable embedding although it is trivial in this case. This version bypasses this hypothesis
    -  Proof of volume computations of the unit ball in `‚ÑÇ` and in `EuclideanSpace ‚Ñù (Fin 2)` which are now done with the methods of the file `VolumeOfBalls` have been moved to this file.
    
    
    
    Co-authored-by: Yury G. Kudryashov <urkud@urkud.name>

[33mcommit 9c4be1c21dd4fbf60bca6191dc3ce14c61416565[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Thu Dec 7 16:10:06 2023 +0000

    chore: Change arguments to `smul_le_smul` (#8870)
    
    This matches `mul_le_mul`. The old version will be made a lemma again in #8869.

[33mcommit 243f402746a6d0319a0a80a0054f0426175f2d65[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Thu Dec 7 16:10:05 2023 +0000

    feat(CategoryTheory): more API for product categories (#8865)
    
    This PR develops notions about product categories (natural isomorphisms, equivalences) in order to fill the prerequisites of PR #8864 about the localization of product categories.

[33mcommit 0ce4f99e0d83368bf5894a4202aac0071bf89484[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Thu Dec 7 16:10:04 2023 +0000

    feat: PiLp over an empty base is trivial (#8863)

[33mcommit 8289b55e0187fd4ef5a24f157d93db4c36f18376[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Thu Dec 7 16:10:02 2023 +0000

    chore(Order/RelIso): drop a duplicate lemma (#2390)
    
    Duplicate of `coe_fn_toEquiv` several lines below.

[33mcommit 49c57216287776814acf009c93c1ea307afce064[m
Author: Martin C. Martin <martin@martincmartin.com>
Date:   Thu Dec 7 14:58:06 2023 +0000

    refactor(Algebra/Module): Move `Module.ofCore` to a MinimalAxioms file, and rename it `ofMinimalAxioms` (#8853)
    
    This makes it consistent with Ring, Field and Group.
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit a27d7b3b83d1a8047e560f2f16cd6962d059aa95[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Thu Dec 7 14:58:05 2023 +0000

    doc: Better documentation for `PosMulMono` and friends (#8841)
    
    And also improve the docstrings of the eight typeclasses. I always wished they told me what they state, rather than what nonsense they're the abbreviation of!
    
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit b61b03c4b8e826424bc2f2a2421479c17bd51ff1[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Thu Dec 7 14:18:40 2023 +0000

    feat: the affine span is contained in the linear span (#8866)
    
    Also lint the corresponding file.

[33mcommit 2016a40c6a4d8e4849fffcbd5112fe1a07238d8b[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Thu Dec 7 11:12:45 2023 +0000

    feat: When `Finsupp.prod` is nonzero (#8844)
    
    Also replace `Finsupp.nonzero_iff_exists` by a more general lemma.

[33mcommit 1003870566c48161d89cbf6333f65d3cc094995d[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Thu Dec 7 11:12:44 2023 +0000

    feat(RingTheory/Coalgebra): product of coalgebras (#8822)
    
    This also splits out a `CoalgebraStruct` typeclass, to allow defining the operators and their definitional properties before committing to proving coassociativity.
    
    These proofs are extremely painful, as you're fighting associativity all the time (and `LinearMap.comp` is very verbose in the goal view)

[33mcommit f516ea2c0961f8b3b800a2f70d4981af830b703c[m
Author: Junyan Xu <junyanxumath@gmail.com>
Date:   Thu Dec 7 10:41:56 2023 +0000

    chore: remove redundant integrality condition in IsSeparable (#8862)
    
    
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>

[33mcommit 8a9d4f034673409da1c1f45e4737c26168e99164[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Thu Dec 7 09:40:49 2023 +0000

    feat(Set/Pointwise/SMul): add 2 missing instances (#8856)

[33mcommit 85fd91514fb8934d31ccb741c740260a80ac3a12[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Thu Dec 7 09:17:04 2023 +0000

    refactor(Topology): simplify proofs that `CompHaus`¬†and friends are `Precoherent` (#8644)
    
    We prove that `CompHaus` and friends are `Precoherent` by proving that they are `Preregular`¬†and `FinitaryExtensive`, removing the previous hacky proofs of characterisations of effective epimorphic families. We also give new, cleaner proofs of those characterisations.
    
    - [x] depends on: #8643

[33mcommit b06c98e69f01ef8ab665c237468aa64e98a5bcd4[m
Author: Junyan Xu <junyanxumath@gmail.com>
Date:   Thu Dec 7 08:20:02 2023 +0000

    feat: a function with vanishing integral against smooth functions supported in U is ae zero in U (#8805)
    
    A stronger version of #8800, the differences are:
    
    + assume either `IsSigmaCompact U` or `SigmaCompactSpace M`;
    
    + only need test functions satisfying `tsupport g ‚äÜ U` rather than `support g ‚äÜ U`;
    
    + requires `LocallyIntegrableOn` U rather than `LocallyIntegrable` on the whole space.
    
    Also fills in some missing APIs around the manifold and measure theory libraries.
    
    
    
    Co-authored-by: sgouezel <sebastien.gouezel@univ-rennes1.fr>
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>

[33mcommit 0b3cbe3982aac22302f854b10cae8bb9c7fba4b5[m
Author: Andrew Yang <the.erd.one@gmail.com>
Date:   Thu Dec 7 06:32:46 2023 +0000

    feat: Lemmas for pointwise smul on submodules. (#8654)

[33mcommit 23e13ca3e23458d3ebce33929db7109479fcca80[m
Author: Christopher Hoskin <christopher.hoskin@gmail.com>
Date:   Thu Dec 7 05:20:33 2023 +0000

    feat(Algebra/Ring/CentroidHom): The centroid is the centralizer of multiplication operators (#8581)
    
    The centroid of a non-associative, non-unital algebra coincides with the centralizer of the left and right multiplication operators.
    
    
    
    Co-authored-by: Christopher Hoskin <mans0954@users.noreply.github.com>
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit d10d71d7a8e25c397b8fef48185434da8913f849[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Thu Dec 7 00:37:46 2023 +0000

    chore: rename {LocalHomeomorph,ChartedSpace}.continuous_{to,inv}Fun fields to continuousOn_{to,inv}Fun (#8848)
    
    They have type ContinuousOn ..., hence should be named accordingly. Suggested by @fpvandoorn in #8736.

[33mcommit 5e7983249e558e2b25b030b62cfd16937642f82f[m
Author: Dan Velleman <110697570+djvelleman@users.noreply.github.com>
Date:   Wed Dec 6 23:43:05 2023 +0000

    feat: allow pattern matching in set-builder notation (#8850)
    
    Allow the use of pattern matching in set-builder notation.  For example, `{ (m, n) : ‚Ñï √ó ‚Ñï | m * n = 12 }` denotes the set of all ordered pairs of natural numbers whose product is 12.

[33mcommit fccca5a33a392a4552364366d359863a93e5b633[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Wed Dec 6 22:58:28 2023 +0000

    chore(Topology/ContinuousFunction/Bounded): add a `BoundedSMul` instance (#8854)
    
    This typeclass probably didn't exist yet when this was written.
    
    Also cleans up some nearby style and comments.

[33mcommit 796fc3fcc37bab117a8a54537a43311289765e67[m
Author: Xavier Xarles <xavier.xarles@uab.cat>
Date:   Wed Dec 6 21:57:04 2023 +0000

    feat : add lemma on nilpotent and powers (#8831)
    
    Changed `IsNilpotent.pow to IsNilpotent.pow_succ`. Added `IsNilpotent.of_pow` and `IsNilpotent.pow_iff_pos`.
    
    
    
    Co-authored-by: Xavier Xarles <56635243+XavierXarles@users.noreply.github.com>
    Co-authored-by: Riccardo Brasca <riccardo.brasca@gmail.com>

[33mcommit 11980d269f74bd9b611f7439e709ad4cbac0d19f[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Wed Dec 6 19:19:17 2023 +0000

    chore: Move `OrderDual` action instances to their own file (#8840)
    
    Also add a few missing ones:
    * `OrderDual.instSMulWithZero`
    * `OrderDual.instMulAction`
    * `OrderDual.instMulActionWithZero`
    * `OrderDual.instDistribMulAction`
    
    In every case, we prime the originally unprimed/unnamed version.

[33mcommit 561ab0981d6df710afb3d34423378152195e3440[m
Author: Michael Stoll <Michael.Stoll@uni-bayreuth.de>
Date:   Wed Dec 6 14:30:22 2023 +0000

    feat(NumberTheory/EulerProduct): add Euler Products for zeta function and Dirichlet L series (#8751)
    
    This adds proofs of the Euler product formula for the Riemann zeta function and Dirichlet L-series.
    
    
    
    Co-authored-by: Michael Stoll <99838730+MichaelStollBayreuth@users.noreply.github.com>

[33mcommit dc62cf3f9e4e105dcb4ff190121abbfbb0b66c2b[m
Author: Andrew Yang <the.erd.one@gmail.com>
Date:   Wed Dec 6 13:34:29 2023 +0000

    feat: Add `norm_one_add_smul`. (#8681)
    
    
    
    
    Co-authored-by: Andrew Yang <36414270+erdOne@users.noreply.github.com>

[33mcommit d464fed43b8a5c72cf26238fee2d83d132c97fad[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Wed Dec 6 12:31:23 2023 +0000

    feat(Init/Control/Lawful): The IO monad is lawful (#8772)
    
    The motivation is to provide a no-op `ULiftable IO IO` instance; otherwise APIs developed in terms of universe polymorphic monads can't be used with `IO`, even if specialized to a single universe.

[33mcommit 9d4c1284693b7e9359e88130df14662d3d50c8e9[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Wed Dec 6 12:08:45 2023 +0000

    feat: mul for DirichletCharacter (#8770)
    
    Multiply Dirichlet characters at a common level and obtain their associated primitive character. It also includes a lemma confirming the primitiveness of the resulting character.
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 07e59b70f853398e487bd484b2046fc4fc188d80[m
Author: Andrew Yang <the.erd.one@gmail.com>
Date:   Wed Dec 6 11:04:34 2023 +0000

    chore: Move `RingTheory/NonZeroDivisors` under `Algebra` instead. (#8685)
    
    
    
    
    Co-authored-by: Andrew Yang <36414270+erdOne@users.noreply.github.com>

[33mcommit 5b80db73092c70989595894363bea9eb0b1a4343[m
Author: Andrew Yang <the.erd.one@gmail.com>
Date:   Wed Dec 6 10:33:18 2023 +0000

    feat: Add `Submodule.le_of_le_smul_of_le_jacobson_bot`. (#8679)

[33mcommit ae28400c8acaa304f5bcb51624dc406d7d0a3731[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Dec 6 07:02:47 2023 +0000

    chore(Measure/AEMeasurable): golf a proof (#8837)
    
    Use recently added `map_apply‚ÇÄ` to golf `map_map_of_aemeasurable`.

[33mcommit a357dd5fe0fbe1284c69397f7b36b0cfc7e70380[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Wed Dec 6 04:15:38 2023 +0000

    chore: bump Std (#8834)

[33mcommit c6ea155e725345888c36b7c1629e8c922d88e7e8[m
Author: kkytola <kalle.kytola@aalto.fi>
Date:   Tue Dec 5 22:38:02 2023 +0000

    feat: Binary products of finite measures and probability measures. (#8721)
    
    [Upstreaming from PFR project](https://teorth.github.io/pfr/docs/PFR/ForMathlib/FiniteMeasureProd.html)
    
    This PR defines binary products of finite measures and probability measures.
    
    
    
    Co-authored-by: kkytola <‚Äúkalle.kytola@aalto.fi‚Äù>
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>
    Co-authored-by: kkytola <39528102+kkytola@users.noreply.github.com>

[33mcommit bcd9607bce748203e813b06df9f14de82f906e98[m
Author: Andrew Yang <the.erd.one@gmail.com>
Date:   Tue Dec 5 18:54:46 2023 +0000

    feat: Add API for `AlgEquiv`. (#8639)
    
    
    
    
    Co-authored-by: Andrew Yang <36414270+erdOne@users.noreply.github.com>

[33mcommit 55a024a3ed287d1da6b8991ccfb4eda89cbe4f01[m
Author: R√©my Degenne <Remydegenne@gmail.com>
Date:   Tue Dec 5 16:55:45 2023 +0000

    feat: pi-systems generating the product sigma algebra (#7566)
    
    We define pi-systems of cylinders and prove that they generate `MeasurableSpace.pi`.
    
    Co-authored-by: Peter Pfaffelhuber
    From the Kolmogorov extension theorem project.
    
    
    
    Co-authored-by: Ya√´l Dillies <yael.dillies@gmail.com>

[33mcommit 0ea58036aece17eb6effa0a1f67ac0ec2c6352b9[m
Author: Oliver Nash <github@olivernash.org>
Date:   Tue Dec 5 15:20:57 2023 +0000

    feat: lemmas about perfect pairings and dual (co)annihilators (#8824)

[33mcommit c2164f0f15072e2f52dafbadfca1c40f88760433[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Tue Dec 5 14:12:56 2023 +0000

    chore: tidy various files (#8823)

[33mcommit b06172d4564b9175743e7c2bc9a24868a9516c7f[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Tue Dec 5 11:51:27 2023 +0000

    chore: add no space after "‚Üê" to lint-style.py (#8789)
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit ac94cca1865a06e5401a58746ed299936dacb312[m
Author: Christian Merten <christian@merten.dev>
Date:   Tue Dec 5 09:47:53 2023 +0000

    chore: split RepresentationTheory.Action in multiple files (#8660)
    
    Splits `Mathlib.RepresentationTheory.Action` in multiple files.

[33mcommit 0b07d87768121e0146a5b78d814c1c70f217623a[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Tue Dec 5 09:14:34 2023 +0000

    feat: the homology sequence of a short exact sequence of complexes (#8468)
    
    If `0 ‚ü∂ X‚ÇÅ ‚ü∂ X‚ÇÇ ‚ü∂ X‚ÇÉ ‚ü∂ 0` is a short exact sequence in a category of complexes `HomologicalComplex C c` in an abelian category, then whenever `i` and `j` are consecutive degrees, there is a long exact sequence :
    `... ‚ü∂ X‚ÇÅ.homology i ‚ü∂ X‚ÇÇ.homology i ‚ü∂ X‚ÇÉ.homology i ‚ü∂ X‚ÇÅ.homology j ‚ü∂ ...`.

[33mcommit c5eb45f03369200077925ac4af370fea51b38551[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Tue Dec 5 08:35:36 2023 +0000

    feat(Condensed): Explicit descriptions of condensed sets (#6731)
    
    We prove the characterisation of condensed sets as finite-product preserving presheaves satisfying the equalizer condition on `CompHaus`/`Profinite`, and just finite-product preserving presheaves on `Stonean`.
    
    Co-authored-by: Riccardo Brasca @riccardobrasca [riccardo.brasca@gmail.com](mailto:riccardo.brasca@gmail.com)
    Co-authored-by: Filippo A E Nuccio @faenuccio [filippo.nuccio@univ-st-etienne.fr](mailto:filippo.nuccio@univ-st-etienne.fr)

[33mcommit 1751be618c052e8f9401c1c83aca34e5a8f61291[m
Author: Sebastian Ullrich <sebasti@nullri.ch>
Date:   Tue Dec 5 08:06:32 2023 +0000

    chore: fix "open Mathlib" benchmark (#8808)

[33mcommit 34bb97b7e04cdf4847b9ae20a23d56f7fc4d43e7[m
Author: Jujian Zhang <jujian.zhang1998@outlook.com>
Date:   Tue Dec 5 07:12:36 2023 +0000

    feat(Algebra/Category/GroupCat/Injective) : commutative multiplicative groups have enough injectives (#8819)
    
    since commutative additive groups have enough injectives, multiplicative ones have enough injectives as well.

[33mcommit bb71af2a37385d1de100bc678a7c447cdffab6ce[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Dec 5 06:29:54 2023 +0000

    chore(UniformConvergenceTopology): golf, reflow (#8812)
    
    - Move a proof up, golf.
    - Replace `(¬∑ ‚àò ¬∑) f` with `(f ‚àò ¬∑)`.
    - Reflow structure constructors.

[33mcommit 9ea21ba0a7234b61753651ccfc62a671536788b6[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Dec 5 05:47:06 2023 +0000

    feat(UniformGroup): add `UniformInducing.uniformGroup` (#8813)

[33mcommit befd8b23cf82f81f52a2a6df464c3ef92821468c[m
Author: Ali Ramsey <s2158261@ed.ac.uk>
Date:   Tue Dec 5 00:40:34 2023 +0000

    feat(RingTheory): coalgebra definition (#8621)
    
    Add definition and example of a coalgebra.
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>
    Co-authored-by: Ali Ramsey <98279454+al-ramsey@users.noreply.github.com>

[33mcommit c3269f99670344cce23ada28090af87a2c938745[m
Author: Mario Carneiro <mcarneir@andrew.cmu.edu>
Date:   Mon Dec 4 23:32:33 2023 +0000

    refactor: code cleanup in gcongr (#8796)
    
    * Extract the default side-goal and main-goal gcongr dischargers into functions
    * Change the default main-goal discharger to `gcongr_forward` (instead of `assumption` which is never used)
    * add `subset_of_ssubset` as a `gcongr_forward` lemma
    
    Co-authored-by: @hrmacbeth
    
    
    
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>

[33mcommit b8e4d75160b92a9cc9ae3c64278595879e74e594[m
Author: Hunter Monroe <github.com@huntermonroe.com>
Date:   Mon Dec 4 23:32:32 2023 +0000

    doc: Mark named theorems including Compactness Theorem, Halting Problem, Tarski Vaught, ≈Åo≈õ (#8743)

[33mcommit 397ec08ba044ea258e3316ca4aa474486236cb51[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Mon Dec 4 22:16:18 2023 +0000

    chore: tidy various files (#8818)

[33mcommit 32c3acdcd6d6eab5c3b6cc090b6bbf2d7c96170a[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Mon Dec 4 22:16:17 2023 +0000

    feat(Algebra/Order/Sub/Canonical): add `tsub_tsub_eq_add_tsub_of_le` (#8804)

[33mcommit df634f2a3b3d3eef3936f220d4bcc9b21e88770c[m
Author: Winston Yin <winstonyin@gmail.com>
Date:   Mon Dec 4 21:08:39 2023 +0000

    refactor: replace some `@foo _ _ _ _ _ ...` by named arguments (#8702)
    
    Using Lean4's named arguments, we manage to remove a few hard-to-read explicit function calls `@foo _ _ _ _ _ ...` which used to be necessary in Lean3.
    
    Occasionally, this results in slightly longer code. The benefit of named arguments is readability, as well as to reduce the brittleness of the code when the argument order is changed.
    
    
    
    Co-authored-by: Michael Rothgang <rothgami@math.hu-berlin.de>

[33mcommit 0fee6f3729aa42e0a364c3b3407b80fb54ac8e32[m
Author: Ruben Van de Velde <sebastien.gouezel@univ-rennes1.fr>
Date:   Mon Dec 4 20:27:47 2023 +0000

    feat: add a few lemmas about MvPolynomial.totalDegree (#8815)
    
    From hairer.
    
    
    
    Co-authored-by: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>

[33mcommit 3399e7d92a1792fd30f4f6e0f21c3f0b5ee901f6[m
Author: David Kurniadi Angdinata <dka31@cantab.ac.uk>
Date:   Mon Dec 4 20:27:46 2023 +0000

    refactor(AlgebraicGeometry/EllipticCurve/*): split EllipticCurve.Point into two files (#8540)
    
    Refactor the files in `AlgebraicGeometry/EllipticCurve/*` as follows:
    - `Weierstrass.lean` contains general definitions common to all Weierstrass and elliptic curves, namely quantities associated to their coefficients, variable and base changes, and models with prescribed j-invariants.
    - `Affine.lean` contains definitions specific to Weierstrass curves written in affine coordinates, including `equation` and `nonsingular` from the old `Weierstrass.lean`, but also the `Point` inductive and group operations from the old `Point.lean`.
    - `Group.lean` contains a standalone proof of the group law for `Point`, including instances for `CoordinateRing` in the old `Weierstrass.lean`, and ideal computations in its `ClassGroup` in the old `Point.lean`.
    
    This refactor is done in preparation for the new `Projective.lean` in #8485 (and the upcoming `Jacobian.lean`), which shares all the general definitions in `Weierstrass.lean`, but none of those in `Affine.lean` and `Group.lean` except their proofs (analogous lemmas are proven by "reducing to the affine case"). Most of the definitions and lemmas for `equation`, `nonsingular`, `CoordinateRing`, and `ClassGroup` are specific to the affine representation of Weierstrass curves, so they are now in the `WeierstrassCurve.Affine` namespace, which is just an abbreviation for `WeierstrassCurve`. Further documentation is added to `Group.lean` to explain the argument for the group law, but otherwise few things are changed from the original files.

[33mcommit 21b637539cf9ea352dbb4de38b86e619c4abe813[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Mon Dec 4 20:02:48 2023 +0000

    refactor(LinearAlgebra/Matrix/PosDef): separate `PosDef` lemmas from `PosSemidef` lemmas (#8810)
    
    There are no new or deleted lemmas here, only a reordering; but to enable dot notation I have renamed:
    
    * `posDef_toQuadraticForm'` to `PosDef.toQuadraticForm'`
    * `posDef_of_toQuadraticForm'` to `PosDef.of_toQuadraticForm'`
    
    Split from #8809

[33mcommit 43d6e4f145678ebb5dc6109484b31cefab8a8fcd[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Mon Dec 4 20:02:47 2023 +0000

    feat(CategoryTheory/Sites): the sheaf of morphisms between two sheaves (#8737)

[33mcommit 2c200e2b4eed444fc941d63d55c55093a033062f[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Dec 4 18:10:59 2023 +0000

    feat(Order/Filter): add `Filter.tendsto_image_smallSets` (#8811)
    
    - Add `Filter.tendsto_image_smallSets` and
      `Filter.Tendsto.image_smallSets`.
    - Generalize `Filter.eventually_all` from `Type*` to `Sort*`.
    - Protect `Filter.HasBasis.smallSets`.
    - Fix a porting note about `Filter.eventually_smallSets`:
      the Lean 3 proof works in Lean 4 now.

[33mcommit f26f1d91fa34bde677a8531ec89b8b64d2cbb24a[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Mon Dec 4 18:10:58 2023 +0000

    feat(Algebra/Group): lemmas about `Commute` (#8756)

[33mcommit a3708498bec5c2641fd86b158487e675e90d687a[m
Author: Hunter Monroe <github.com@huntermonroe.com>
Date:   Mon Dec 4 18:10:57 2023 +0000

    doc: Mark named theorems (#8749)

[33mcommit 6b65939122cca7355fcfd6ca6ecf8f9379e78475[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Mon Dec 4 18:10:55 2023 +0000

    feat(Algebra/Ring/CentroidHom): missing scalar instances (#8742)
    
    This generalizes the ‚Ñï and ‚Ñ§ actions to arbitrary monoids, and provides various compatibility instances.
    
    The `simpNF` annotations are no longer needed, as the the `smul` lemmas are now about general actions, not just `nsmul` and `zsmul` which have different simp-normal forms.
    
    
    
    Co-authored-by: Christopher Hoskin <christopher.hoskin@overleaf.com>
    Co-authored-by: Christopher Hoskin <christopher.hoskin@gmail.com>

[33mcommit 5dfe05bd16daf959673b6d08bbbe160509d41f07[m
Author: Junyan Xu <junyanxumath@gmail.com>
Date:   Mon Dec 4 17:29:44 2023 +0000

    feat: UnivLE version of EnoughInjectives in ModuleCat (#8734)
    
    
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>

[33mcommit fba9b451368dbc45c5fb2a834b6175fc639c4c9d[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Mon Dec 4 15:55:57 2023 +0000

    feat: `(if P then 1 else 0) ‚Ä¢ a` (#8347)
    
    Two simple lemmas, `smul_ite_zero`, and `ite_smul_zero`.
    Also delete `Finset.sum_univ_ite` since it is now provable by `simp` thanks to these.
    
    Rename and turn around the following to match the direction that `simp` goes in:
    * `ite_mul_zero_left` ‚Üí `ite_zero_mul`
    * `ite_mul_zero_right` ‚Üí `mul_ite_zero`
    * `ite_and_mul_zero` ‚Üí `ite_zero_mul_ite_zero`

[33mcommit 31d8db6fbe7fe7efb0d4093704c96357a79eb27d[m
Author: Patrick Massot <patrickmassot@free.fr>
Date:   Mon Dec 4 15:55:56 2023 +0000

    feat: rify tactic (#7990)

[33mcommit 772b60655ed12c12ce44339250dfbd8f84925d3c[m
Author: Christopher Hoskin <wieser.eric@gmail.com>
Date:   Mon Dec 4 15:55:54 2023 +0000

    feat(Algebra/Hom/Centroid) : Homomorphism from centre into centroid (#7843)
    
    Defines the natural homomorphism from the centre of a non-unital, non-associative semiring into the centroid of the semiring. When the semiring is unital, the centre and the centroid are isomorphic.
    
    
    
    Co-authored-by: Christopher Hoskin <christopher.hoskin@gmail.com>
    Co-authored-by: Christopher Hoskin <mans0954@users.noreply.github.com>
    Co-authored-by: Christopher Hoskin <christopher.hoskin@overleaf.com>

[33mcommit 65c51ee33388af047df9048bd7240b5976b47b7e[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Mon Dec 4 14:42:09 2023 +0000

    chore: space after ‚Üê in tactics (#8791)
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit 19096ec3fc6f290dc088f7f3ffd6318d4a0bd93d[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Dec 4 13:54:53 2023 +0000

    chore(NormedSpace/Complemented): review API (#8596)
    
    - use `And` instead of `Exists`;
    - move lemmas from `Subspace` to `Submodule` namespace;
    - rename some lemmas to enable dot notation;
    - add `ClosedComplemented.exists_submodule_equiv_prod`.

[33mcommit 7d9d044ec080852a98c9517812c51d51ca014269[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Mon Dec 4 12:41:47 2023 +0000

    fix(NumberTheory/LegendreSymbol/AddCharacter): Disentangle coercion mess for `AddChar` (#8803)
    
    There are two things going on here:
    * `AddChar G R` has two syntactically different coercions to function `G ‚Üí R`:
      * `FunLike.coe` via `AddChar.monoidHomClass`
      * `AddChar.toFun` via `AddChar.hasCoeToFun`
    * `AddChar.hasCoeToFun` and `AddChar.monoidHomClass` together create a diamond for the typeclass problem `FunLike (AddChar G R) _ _`
    
    This PR fixes both problems by
    * removing the `HasCoeToFun` instance and the corresponding `AddChar.toFun`
    * changing `MonoidHomClass (AddChar G R) (Multiplicative G) R` to `FunLike (AddChar G R) G fun _ ‚Ü¶ R` (isn't the whole point of `AddChar` to go from an additive group to a multiplicative one anyway?)
    
    This PR isn't meant to be perfect. It is a stopgag to an issue that has completely startled progress on LeanAPAP. Once it is fixed, a much more thorough refactor will follow.
    
    This breaks a rewrite downstream that now unifies to some defeq but not syntactically equal type.
    This is more an indication of fragility in the original proof.

[33mcommit 0ce369d9cb426a47ccf2c7f337bc52e7cda75069[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Mon Dec 4 12:41:46 2023 +0000

    feat: restore simp attribute to coeff_zero_C (#8792)
    
    It (no longer?) seems to be the case that simp can prove this.

[33mcommit 3ce1e1f98d46f3ee62e1441a9a087470b3e4e25d[m
Author: Jujian Zhang <jujian.zhang1998@outlook.com>
Date:   Mon Dec 4 12:41:45 2023 +0000

    feat(Algebra/DirectLimit): add `map, congr, lift_injective` for direct limits of modules, abelian groups and rings (#8692)
    
    Consider direct limits `lim G` and `lim G'` with direct system `f` and `f'` respectively, any
    family of linear maps `g·µ¢ : G·µ¢ ‚ü∂ G'·µ¢` such that `g ‚àò f = f' ‚àò g` induces a linear map
    `lim G ‚ü∂ lim G'`. When `g·µ¢`'s are equivalence, so is the induced. Similarly for direct limits of groups and rings
    
    This PR is splitted from #8473
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit c987c7d921cc1ed82003cfbc1eeb3edce72cf1c1[m
Author: Scott Morrison <scott@tqft.net>
Date:   Mon Dec 4 12:41:44 2023 +0000

    chore: update jq filter in lean-pr-testing-comments.sh (#8520)
    
    Minor change, to make sure we only try to edit-in-place comments that were created by the right bot. (There are some older PRs still open where the tokens were wrong, and so the initial comment was created by the wrong bot.)
    
    
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 070be7199b8192257f739b7ee0be029180d60066[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Mon Dec 4 12:41:43 2023 +0000

    fix: add missing `no_index` around `OfNat.ofNat ` (#8317)
    
    Co-authored-by: timotree3 <timorcb@gmail.com>
    
    
    
    Co-authored-by: timotree3 <timorcb@gmail.com>

[33mcommit aca3f23719a873eeb0226c97874b73d911ec3751[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Mon Dec 4 11:39:45 2023 +0000

    chore: remove deprecated MonoidHom.map_prod, AddMonoidHom.map_sum (#8787)

[33mcommit 5128251504f48e1521c35e373e4522c10747581c[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Mon Dec 4 11:39:44 2023 +0000

    even/odd for DirichletCharacter (#8784)
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit afa2032535df325853b174911ed75408b570d84f[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Mon Dec 4 11:39:43 2023 +0000

    chore: move Associates.quot_out earlier (#8484)
    
    And don't require commutativity while we're here.

[33mcommit b9a6d49b2cd24c8b0f8fba1f856f5654a341fe90[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Mon Dec 4 10:29:37 2023 +0000

    fix(Tactic/ToAdditive): handle `AddCommute` and `AddSemiconjBy` correctly (#8757)
    
    This removes the need for many manual overrides, and corrects some bad names.
    
    We have to make sure to leave `function_commute` and `function_semiconjBy` untouched.

[33mcommit f6f78d3ac84a61f99c15557e5577b1474358b59d[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Mon Dec 4 10:29:36 2023 +0000

    chore: golf `TensorProduct.liftAux` (#8659)
    
    This incurs a very slight performance hit globally.

[33mcommit 464b5661a0356eb905ffcbbb627071d5b3235fe7[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Mon Dec 4 08:33:37 2023 +0000

    feat(Algebra/Homology): computation of the connecting morphism of the snake lemma (#8766)
    
    This PR introduces a lemma which allows to compute the connecting homomorphism of the snake lemma by diagram chase.

[33mcommit d6b8ac1b410fbf247ed41e7abbb7c4fc187e2615[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Mon Dec 4 08:33:36 2023 +0000

    feat(Algebra/Homology): preliminary definitions for the homology sequence (#8765)
    
    As a preliminary step towards the homology sequence, given a homological complex `K` and two degrees `i` and `j` such that `c.Rel i j`, we construct an exact sequence `0 ‚ü∂ K.homology i ‚ü∂ K.opcycles i ‚ü∂ K.cycles j ‚ü∂ K.homology j ‚ü∂ 0`.

[33mcommit 8c4338d2f64ef8da7809ea24b10b780568e6b917[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Mon Dec 4 08:33:35 2023 +0000

    chore: tidy various files (#8560)

[33mcommit 0012c94d950a6097db4b9a9b6b7f4ec9ac56fd74[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Mon Dec 4 08:33:34 2023 +0000

    feat(CategoryTheory): the action of a trifunctor on graded objects (#8239)

[33mcommit 90d520aa5851f5ca9b68c8ba93e07818e3c0a965[m
Author: Scott Morrison <scott@tqft.net>
Date:   Mon Dec 4 07:49:30 2023 +0000

    chore: split Algebra.CharP.Basic, reduce imports in RingTheory.Multiplicity (#8637)
    
    This was adding unnecessary imports to `Data.ZMod.Basic`.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 2cf3f039ff436c5e9b1dcee656bcce6a2d156a0a[m
Author: kkytola <kalle.kytola@aalto.fi>
Date:   Mon Dec 4 06:38:40 2023 +0000

    feat: uniqueness of weak limits of finite measures (#8498)
    
    This PR adds a type class `HasOuterApproxClosed` for topological spaces in which indicator functions of closed sets can be approximated from above by sequences of bounded continuous functions. All pseudo-(e)metrizable spaces satisfy this.
    
    In spaces with this property, finite Borel measures are characterized by the integrals of bounded continuous functions. Also weak limits of finite Borel measures are unique. More precisely, the topologies of weak convergence of finite Borel measures and of Borel probability measures are Hausdorff.
    
    Co-authored-by: Peter Pfaffelhuber <p.p@stochastik.uni-freiburg.de>
    
    
    
    Co-authored-by: kkytola <39528102+kkytola@users.noreply.github.com>
    Co-authored-by: kkytola <‚Äúkalle.kytola@aalto.fi‚Äù>

[33mcommit ee87d34d605d52b7ea8073b70a858769c5f3db3d[m
Author: Christopher Hoskin <christopher.hoskin@gmail.com>
Date:   Sun Dec 3 23:47:41 2023 +0000

    refactor(Algebra/Group/Defs): Separate commutative and associative multiplication (addition) (#7060)
    
    Currently in Mathlib there is no class for magma that are commutative but not associative - `Field` extends `CommRing` and `DivisionRing`, `CommRing` extends `Ring` and `CommMonoid`, `CommGroup` extends `Group` and `CommMonoid` and `CommMonoid` extends `CommSemigroup` and `Monoid`. `CommSemigroup` currently extends only `Semigroup` and has `mul_comm` as a property.
    
    This PR moves `mul_comm` into a new `CommMagma` (`AddCommMagma`) class which extends `Mul` (`Add`). `CommSemigroup` now extends `Semigroup` and `CommMagma`.
    
    The rest of Mathlib4 compiles as before, except with the need to increase `synthInstance.maxHeartbeats` for `lift_of_splits`.
    
    (Update: The linter is objecting to an unused argument in what seems to be a completely unrelated bit of code (`AddEquiv.lpPiLp`). Trying a `nolint` for now.)
    
    Also referenced in https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/.60add_comm.60.20without.20.60add_assoc.60
    
    
    
    Co-authored-by: Jireh Loreaux <loreaujy@gmail.com>
    Co-authored-by: Christopher Hoskin <mans0954@users.noreply.github.com>
    Co-authored-by: Christopher Hoskin <christopher.hoskin@overleaf.com>
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>

[33mcommit 5b49f9f4881dec9226976281759f117bd448d48e[m
Author: Wen Yang <yang-wen@139.com>
Date:   Sun Dec 3 22:58:17 2023 +0000

    feat(Data/Matrix): scalar if commutes with every stdBasisMatrix (#7810)
    
    `M` is a scalar matrix if it commutes with every non-diagonal `stdBasisMatrix`.
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>
    
    
    
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 5295012750d4b077af6e44d5946d0052d3a7370c[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Sun Dec 3 21:46:12 2023 +0000

    feat: More simple simple graph lemmas (#7712)
    
    A bunch of simple lemmas for simple graphs.
    
    
    
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>

[33mcommit d1931fcf2d681b5761614b3f94bd77c3f09eb8d0[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sun Dec 3 19:31:20 2023 +0000

    feat(ContDiff): define `LocalHomeomorph.restrContDiff` (#8605)
    
    Restrict the source and the target of a local homeomorphism
    to the sets where both `f` and `f.symm` are `C^n`.

[33mcommit db61ac24294a5e37c17d73df71770a59856a38b5[m
Author: Scott Morrison <scott@tqft.net>
Date:   Sun Dec 3 18:24:30 2023 +0000

    feat: import new widgets in Tactic.Common (#8794)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 3e423640a94544d54f9ce1682864ce92b16ca75c[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Sun Dec 3 14:46:01 2023 +0000

    feat: add some lemmas about nthRootsFinset (#7464)
    
    From flt-regular.
    
    Co-authored-by: Andrew Yang <the.erd.one@gmail.com>

[33mcommit 738b1a97e85d528d395f215b4057bad4704e2ceb[m
Author: Scott Morrison <scott@tqft.net>
Date:   Sun Dec 3 13:01:06 2023 +0000

    chore: rename `by_contra'` to `by_contra!` (#8797)
    
    To fit with the "please try harder" convention of `!` tactics.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 6e7be968921cb9bdcea44cc4c6136c629bd63bee[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sun Dec 3 09:54:12 2023 +0000

    feat(Analysis/HahnBanach): extension of a CLM with finite dimensional range (#8604)
    
    Also add 2 missing `simp` lemmas
    and prove that a finite dimensional subspace is `ClosedComplemented`.

[33mcommit 106c09989e82c39e2fb35023aa034ab0675df27f[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sun Dec 3 09:54:11 2023 +0000

    feat(Topology/Order): continuity of `Finset.sup`, `partialSups` etc (#8141)
    
    Also rename `Filter.Tendsto.sup_right_nhds` to `Filter.Tendsto.sup_nhds` etc.

[33mcommit 373c9fe4f3de086924aca34042affa7d3bb95475[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sun Dec 3 09:21:24 2023 +0000

    chore(Dynamics/../Conservative): small fixes (#8597)
    
    - rename `exists_mem_image_mem*` to `exists_mem_iterate_mem*` because there is no `Set.image` in the statement.
    - Add type annotations to a proof. I made these changes to improve readability for a conference talk, so why not make them in the library?

[33mcommit b1cd52acffa53bca04a33ddc14a40b2a62ed4308[m
Author: Scott Morrison <scott@tqft.net>
Date:   Sun Dec 3 07:50:49 2023 +0000

    chore: use by_contra' instead of by_contra + push_neg (#8798)
    
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit fa76ed8f6a26843d933d62611b4791adbe5bac4f[m
Author: Scott Morrison <scott@tqft.net>
Date:   Sun Dec 3 05:24:11 2023 +0000

    doc: Tactic.Common notes about missing tactics (#8795)
    
    We might consider rearranging these tactics so they can be imported in `Tactic.Common`, and their extensions are then created at the first relevant point.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 006b23a50533766ff9714eda094f2b6da8a9f513[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sat Dec 2 18:50:50 2023 +0000

    chore(*/Multilinear): move some files (#8786)
    
    I'm going to add more files, so I need to move some of the existing
    files to subfolders.

[33mcommit c0f7586a3e77660ff51b9156783aaf8eab9506de[m
Author: Patrick Massot <patrickmassot@free.fr>
Date:   Sat Dec 2 16:31:18 2023 +0000

    chore: Add limit spelling variation (#8477)
    
    Adding `Tendsto (fun n : ‚Ñï ‚Ü¶ 1/(n : ‚Ñù)) atTop (ùìù 0)`. We already have an equivalent statement but it is very hard to find and I've seen several students struggling to find it.
    
    I also took the opportunity to fix mapsto arrows in this file, but `tendsto_one_div_atTop_nhds_0_nat` is the only new content.

[33mcommit 5fb9beab28702fb284701d494bc9b7c5f52fef53[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Sat Dec 2 15:52:14 2023 +0000

    chore: space after `‚Üê` (#8178)
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit 5f9aeff5f53c59311f2acbcec78ea0a3e3380c28[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sat Dec 2 14:02:22 2023 +0000

    feat(Analysis/Seminorm): add more `*ball_smul_*ball` (#8783)
    
    We had `ball_smul_ball` and `closedBall_smul_closedBall`.
    Add versions with mixed `ball` and `closedBall`.
    Also move this lemmas below and golf the proofs.
    
    This was already merged in #8724
    but accidentally got reverted in #8725
    
    See [Zulip](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/bump.2Fv4.2E4.2E0/near/405505687)

[33mcommit 9df2cbf62c359b33807151422ca975894413d876[m
Author: Scott Morrison <scott@tqft.net>
Date:   Sat Dec 2 12:22:52 2023 +0000

    feat: add slim_check generators for Rat (#8759)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit d148891c7a477981efd52428cc471c3041f70a44[m
Author: Scott Morrison <scott@tqft.net>
Date:   Sat Dec 2 09:32:42 2023 +0000

    chore: bump dependencies (#8782)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 75641abe702d35c946b6e59b8dc672c7e6d80b13[m[33m ([m[1;33mtag: v4.4.0-rc1[m[33m)[m
Author: Scott Morrison <scott@tqft.net>
Date:   Sat Dec 2 07:05:28 2023 +0000

    chore: bump Mathlib to Lean v4.4.0-rc1 (#8781)
    
    The commits below are all approved PRs, as planned, except:
    * the second last one which resolves conflicts in `lake-manifest.json` and `lean-toolchain`.
    * the last one the reverts a mysterious change in `Mathlib.Analysis.Seminorm`, discussed in the comment below.
    
    
    
    Co-authored-by: Marc Huisinga <leanprover-community-mathlib4-bot@users.noreply.github.com>
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit c72f4d06b1f28f07f7d049118aa2dd1402406346[m
Author: Scott Morrison <scott@tqft.net>
Date:   Sat Dec 2 00:33:08 2023 +0000

    fix: nonspecific lemmas are poisoning apply? (#8764)
    
    I would like to include the "nonspecific" lemmas in the results, but it will need more work (making sure they come after more specific results, and that they don't slow down output).
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit f04afed5ac9fea0e1355bc6f6bee2bd01f4a888d[m[33m ([m[1;33mtag: v4.3.0[m[33m)[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Fri Dec 1 21:17:51 2023 +0000

    chore: Remove `le_antisymm'` (#8760)
    
    This was a duplicate of `le_antisymm` for use in e-match, but e-matching never was ported.
    
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit d7ae0ec54b22b49d8e77de946c34a0be4c18e7e3[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Fri Dec 1 20:35:26 2023 +0000

    refactor: review normed group structure on `ContinuousLinearMap` (#8725)
    
    Move parts of the proof of "two uniformities are equal" up while generalizing it.
    Also add a `ContinuousConstSMul` instance that needs less assumptions than `ContinuousSMul`.

[33mcommit 7c99b77a467ba7112e8903ab1dad9946ddf2f285[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Fri Dec 1 19:15:32 2023 +0000

    chore(NumberTheory/Divisors): golf (#8698)
    
    - use `‚àÉ j ‚â§ k, _` instead of `‚àÉ j (_ : j ‚â§ k)` in `Nat.mem_divisors_prime_pow`;
    - golf `Nat.divisors_prime_pow`.

[33mcommit 8b8aaa2152c443889ed56d4e07921ec213230d57[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Fri Dec 1 16:02:13 2023 +0000

    chore: rename lemmas containing "of_open" to match the naming convention (#8229)
    
    Mostly, this means replacing "of_open" by "of_isOpen".
    A few lemmas names were misleading and are corrected differently. [Zulip discussion](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Naming.20convention/near/402702125).

[33mcommit 42649c4da2724d1aa86b8dab06079db71daf1a84[m[33m ([m[1;31morigin/bitvec-cons-rec[m[33m)[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Fri Dec 1 14:20:25 2023 +0000

    chore: use StandardBorelSpace instead of PolishSpace in the Probability folder (#8762)
    
    Also replace some `Type _` with `Type*`.

[33mcommit e368f2a55ed7296e8b0f072b5c5a07d981daecbe[m
Author: lines <wren.robson@gmail.com>
Date:   Fri Dec 1 11:18:55 2023 +0000

    feat(*/Equiv/*): Add `symm_bijective` lemmas next to `symm_symm`s (#8444)
    
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>
    Co-authored-by: lines <34025592+linesthatinterlace@users.noreply.github.com>

[33mcommit 98e6de4bb9f26e6f253f6579ef10758f96f95035[m
Author: Scott Morrison <scott@tqft.net>
Date:   Fri Dec 1 10:42:14 2023 +0000

    chore: bump Std (#8761)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 7f904e5f18b2a0a8ab94a9760687246ad3da3cd4[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Fri Dec 1 08:27:37 2023 +0000

    feat: extend results on product measures from sigma-finite to s-finite measures (#8713)
    
    
    
    Co-authored-by: Yury G. Kudryashov <urkud@urkud.name>

[33mcommit 41c3a6ce802a81ec3fc82ccea22b975d1def62e2[m
Author: Mario Carneiro <mcarneir@andrew.cmu.edu>
Date:   Fri Dec 1 03:39:39 2023 +0000

    fix: use `githash` instead of `versionString` in cache (#8755)
    
    Fixes (or at least mitigates) an issue [reported on Zulip](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/lake.20exe.20cache.20get.20errors/near/405231700), see there for the explanation.
    
    It is unclear whether we should be using the toolchain name or just the lean githash for cache invalidation purposes, but we should be consistent with lake's own recompilation strategy or we can get wrong results.
    
    
    
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>

[33mcommit 561c00592b3006a9753a85010ff92110de6e206b[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Fri Dec 1 02:12:13 2023 +0000

    fix: make List.choose 'more' reducible (#8753)
    
    The pattern match (on the `And`) was blocking (some kinds of) reduction.
    This is presumably because eta reduction doesn't apply in `Prop`, as described in [this Zulip thread](https://leanprover.zulipchat.com/#narrow/stream/236446-Type-theory/topic/And.2Erec/near/398483665).
    
    [Zulip thread that reported this](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Finset.2Echoose/near/405217150).

[33mcommit 1c6d0cef33c2b0416e8bc2ba589119f6e5594928[m
Author: Scott Morrison <scott@tqft.net>
Date:   Thu Nov 30 23:41:28 2023 +0000

    chore: bump Std, changes for leanprover/std4#366 (#8700)
    
    Notably leanprover/std4#366 changed the definition of `testBit` (to something equivalent) when upstreaming it, which broke a handful of proofs.
    
    Other conflicting changes in Std, resolved for now by priming the mathlib name:
    
    * `Std.BitVec.adc`: the type was changed from `BitVec (n + 1)` to `Bool √ó BitVec w`
    * `Nat.mul_add_mod`: the type was changed from `(a * b + c) % b = c % b` to `(b * a + c) % b = c % b`
    
    [Zulip thread](https://leanprover.zulipchat.com/#narrow/stream/348111-std4/topic/Mathlib.20bump.20for.20.22Operations.20for.20bit.20representation.20of.20.2E.2E.2E.22/near/404801443)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>
    Co-authored-by: Alex Keizer <alex@keizer.dev>
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit d3855b80bbf8a0276cae9236c22f6b1668cf56c2[m
Author: Heather Macbeth <25316162+hrmacbeth@users.noreply.github.com>
Date:   Thu Nov 30 22:26:40 2023 +0000

    feat: golf using gcongr throughout the library (#8752)
    
    Following on from previous `gcongr` golfing PRs #4702 and #4784.
    
    This is a replacement for #7901: this round of golfs, first introduced there, there exposed some performance issues in `gcongr`, hopefully fixed by #8731, and I am opening a new PR so that the performance can be checked against current master rather than master at the time of #7901.

[33mcommit 89670c5973fdc9fa0820b4a5782d2bc07b644dcc[m
Author: Floris van Doorn <fpvdoorn@gmail.com>
Date:   Thu Nov 30 22:26:39 2023 +0000

    feat: add a few simp lemmas (#8750)
    
    * Remove simp-lemma `bitwise_of_ne_zero`, since it wasn't used, and could cause loops in an inconsistent context.

[33mcommit d9ec14507ea52853d7cb123d2e3a28b1c9ec06aa[m
Author: Floris van Doorn <fpvdoorn@gmail.com>
Date:   Thu Nov 30 22:26:38 2023 +0000

    feat: make `imp_false` a simp-lemma (#8744)
    
    * This shortens various proofs
    * There is already a unification hint in core from `¬¨ p` to `p ‚Üí False`, which is probably why we didn't miss this simp-lemma too badly.
    * There was an inconsistency that `simp` pull out most connectives into `Filter.eventually`/`Filter.frequently`, but pushed negations inside. This loops together with this new simp-lemma, and the fact that there is a unification hint . So I removed some simp attributes in `Filter.Basic`.

[33mcommit 6ddf26aed72384478445d0adc8bab21522050da8[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Thu Nov 30 21:45:07 2023 +0000

    doc: modernize induction syntax in Ordinal.induction documentation (#8747)

[33mcommit 85239de6fb1d76ab6c9ce73683d6c701c7835718[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Thu Nov 30 20:57:49 2023 +0000

    chore(Topology/{Compactness/Compact}, Irreducible}): rename type variables (#7591)
    
    X, Y, Z are standard mathematical names for topological spaces.
    As [discussed](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Naming.20convention.3A.20topological.20spaces/near/395769893) on zulip, let us rename them.
    
    As a drive-by commit, re-use the declared variables $\iota$, $s$ and $t$ (more) when stating theorems.
    
    
    
    Co-authored-by: grunweg <grunweg@posteo.de>

[33mcommit c799ea087689f02ec7fba5f920456087ad2f249f[m
Author: Xavier Roblot <46200072+xroblot@users.noreply.github.com>
Date:   Thu Nov 30 20:26:35 2023 +0000

    feat: two isomorphic number fields have the same discriminant (#8714)

[33mcommit 41529d1ea0127608da2bd713e76874e17ed566d5[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Thu Nov 30 20:26:34 2023 +0000

    refactor(Algebra/Homology): use the new homology API (#8706)
    
    This PR refactors the construction of left derived functors using the new homology API: this also affects the dependencies (Ext functors, group cohomology, local cohomology). As a result, the old homology API is no longer used in any significant way in mathlib. Then, with this PR, the homology refactor is essentially complete.
    
    The organization of the files was made more coherent: the definition of a projective resolution is in `Preadditive.ProjectiveResolution`, the existence of resolutions when there are enough projectives is shown in `Abelian.ProjectiveResolution`, and the left derived functor is constructed in `Abelian.LeftDerived`; the dual results are in `Preadditive.InjectiveResolution`, `Abelian.InjectiveResolution` and `Abelian.RightDerived`.
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit 569aea6a071b5b261cf98d7f81fe915cd8943113[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Thu Nov 30 19:19:08 2023 +0000

    feat(Algebra/Group/Hom/Instances): missing instances on `AddMonoid.End` (#8741)
    
    We already had these instance for `AddMonoidHom`, but did not copy them across.
    
    This also corrects some instances names, both for cosmetic reasons, and to avoid name clashes.

[33mcommit 4ff17db0bf9f0c23fa615a501dad730ca2fb3a69[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Thu Nov 30 19:19:07 2023 +0000

    chore: split Geometry/Manifold/ContMDiff (#8726)
    
    At about 2200 lines, this is currently the longest file in the Geometry/Manifolds.
    
    (It also moves the slowly compiling proof of `ContMDiffWithinAt.cle_arrowCongr` out of a common recompilation path.)

[33mcommit 92958d4be9a40419fd2625a27136e16f5b21b6a2[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Thu Nov 30 19:19:06 2023 +0000

    chore: rename most lemmas involving clopen to isClopen (#8720)
    
    This PR renames the field Clopens.clopen' -> Clopens.isClopen', and the lemmas
    * preimage_closed_of_closed -> ContinuousOn.preimage_isClosed_of_isClosed
    
    as well as:
    ClopenUpperSet.clopen -> ClopenUpperSet.isClopen
    connectedComponent_eq_iInter_clopen -> connectedComponent_eq_iInter_isClopen
    connectedComponent_subset_iInter_clopen -> connectedComponent_subset_iInter_isClopen
    continuous_boolIndicator_iff_clopen -> continuous_boolIndicator_iff_isClopen
    continuousOn_boolIndicator_iff_clopen -> continuousOn_boolIndicator_iff_isClopen
    DiscreteQuotient.ofClopen -> DiscreteQuotient.ofIsClopen
    disjoint_or_subset_of_clopen -> disjoint_or_subset_of_isClopen
    exists_clopen_{lower,upper}_of_not_le -> exists_isClopen_{lower,upper}_of_not_le
    exists_clopen_of_cofiltered -> exists_isClopen_of_cofiltered
    exists_clopen_of_totally_separated -> exists_isClopen_of_totally_separated
    exists_clopen_upper_or_lower_of_ne -> exists_isClopen_upper_or_lower_of_ne
    IsPreconnected.subset_clopen -> IsPreconnected.subset_isClopen
    isTotallyDisconnected_of_clopen_set -> isTotallyDisconnected_of_isClopen_set
    LocallyConstant.ofClopen_fiber_one -> LocallyConstant.ofIsClopen_fiber_one
    LocallyConstant.ofClopen_fiber_zero -> LocallyConstant.ofIsClopen_fiber_zero
    LocallyConstant.ofClopen -> LocallyConstant.ofIsClopen
    preimage_clopen_of_clopen -> preimage_isClopen_of_isClopen
    TopologicalSpace.Clopens.clopen -> TopologicalSpace.Clopens.isClopen

[33mcommit e9d333b6f08a4e0adc60c735e887ca735554fd81[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Thu Nov 30 19:19:04 2023 +0000

    feat(Data/List/Basic): bijectivity of `List.map` (#8642)
    
    This adds `Function.{LeftInverse,RightInverse,Involutive,Surjective,Bijective}.list_map`, and corresponding `iff` lemmas.
    
    `List.map_injective_iff` already existed, but has been golfed. The rest are new.

[33mcommit 1b08a55009d3fce4b5260f8b457eb5f63ed4bdfe[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Thu Nov 30 19:19:03 2023 +0000

    feat: abstract `KleinFour` into a class `IsKleinFour`. (#8565)
    
    This removes `KleinFour` in favor of a class `IsKleinFour` and proves that any two `IsKleinFour` groups are isomorphic via any identity-preserving equivalence. In addition, we prove that a group of order 4 is not cyclic if and only if it has exponent two.
    
    There are several advantages:
    
    1. this provides a general API accessible by other groups
    2. we prove some generic facts about groups of exponent two
    3. it is easy to `@[to_additive]` everything
    
    If we want, we can always redefine an explicit `KleinFour` group, and give it an `IsKleinFour` instance. In that case we probably want to make a bespoke type for it, so that it can be `to_additive`-ized.

[33mcommit af2acbf0efb92679e4f771089e71cbe56d369ea8[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Thu Nov 30 18:08:28 2023 +0000

    feat: add missing `IsCancelMul` instances (#8748)
    
    This is not exhaustive

[33mcommit 6aa2928155201fabf8b110820da4053f9ca69568[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Thu Nov 30 18:08:27 2023 +0000

    chore: use StandardBorelSpace everywhere in the probability folder instead of PolishSpace (#8746)

[33mcommit 7a22f15ed6ac84411adc43687caeb740333d53a4[m
Author: Floris van Doorn <fpvdoorn@gmail.com>
Date:   Thu Nov 30 18:08:25 2023 +0000

    feat: define the marginal of a function (#8379)
    
    * This is a convenient way to work with iterated integrals and apply Fubini's theorem, without requiring the hassle of working with measurable equivalences.
    
    Co-authored-by: Heather Macbeth 25316162+hrmacbeth@users.noreply.github.com

[33mcommit 125ea26730508ddcb22efe78d34c5de84abf88e6[m
Author: Oliver Nash <github@olivernash.org>
Date:   Thu Nov 30 16:55:46 2023 +0000

    feat: existence of simultaneous eigenvectors given simultaneous generalized eigenvectors for Lie modules (#8745)

[33mcommit 6f6ec7387f807ba0f3e7be3339f417aae13dd375[m
Author: Junyan Xu <junyanxumath@gmail.com>
Date:   Thu Nov 30 16:55:45 2023 +0000

    feat: MulAction by product monoid (#8634)
    
    Commuting (Distrib)MulActions by two monoids on the same type give rise to a (Distrib)MulAction by the product monoid, and vice versa.
    
    
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>

[33mcommit ab3f6972b113607bb4b8957c8f3696ad20c14c86[m
Author: R√©my Degenne <Remydegenne@gmail.com>
Date:   Thu Nov 30 16:55:43 2023 +0000

    feat(Probability/Independence): add conditional independence (#6098)
    
    Define conditional independence of sigma-algebras, sets and functions. This is a special case of independence with respect to a kernel and a measure. Conditional independence is obtained by using the conditional expectation kernel `condexpKernel`.
    
    
    
    Co-authored-by: R√©my Degenne <remydegenne@gmail.com>
    Co-authored-by: RemyDegenne <remydegenne@gmail.com>

[33mcommit 01678d0f717984eeb98d1fbbf971ff9f64001578[m
Author: damiano <adomani@gmail.com>
Date:   Thu Nov 30 16:16:08 2023 +0000

    feat(Data/Finset/NatDivisors): Nat.divisors of a product (#8695)
    
    The function `Nat.divisors` as a multiplicative homomorphism `‚Ñï ‚Üí* Finset ‚Ñï`.
    
    This result is in a new file `Data/Finset/NatDivisors`, to avoid adding imports and/or lengthening existing files.
    
    
    
    Co-authored-by: Yury G. Kudryashov <urkud@urkud.name>

[33mcommit 392482f224c6fc806146cd1c4a7bebb237b331fe[m
Author: Junyan Xu <junyanxumath@gmail.com>
Date:   Thu Nov 30 15:26:16 2023 +0000

    feat: partition into subintervals/squares adapted to an open cover (#7915)
    
    Also adds some useful instances and lemmas about the unit interval.
    
    The subsquares version will be useful for Van Kampen.
    
    
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>

[33mcommit 97065271c0e9912747251428d48389cc216202ff[m
Author: Oliver Nash <github@olivernash.org>
Date:   Thu Nov 30 11:39:31 2023 +0000

    feat: the annihilator of the kernel of the trace form of a Lie module is contained in the span of its weights (#8739)

[33mcommit 9e9a528e775932c262539fa441cadf8fc7504c29[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Thu Nov 30 10:58:35 2023 +0000

    feat(Analysis/Seminorm): add more `*ball_smul_*ball` (#8724)
    
    We had `ball_smul_ball` and `closedBall_smul_closedBall`.
    Add versions with mixed `ball` and `closedBall`.
    Also move this lemmas below and golf the proofs.

[33mcommit a12664fb44cd4a636282a39c58bc218683568165[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Thu Nov 30 10:58:34 2023 +0000

    feat(CategoryTheory): `Preregular` and `FinitaryPreExtensive` implies `Precoherent` (#8643)
    
    We prove some results about effective epimorphisms which allow us to deduce that a category which is `FinitaryPreExtensive` and `Preregular`¬†is also `Precoherent`.

[33mcommit ee1b50f22a15c325154089232309c36ed1721967[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Thu Nov 30 10:58:33 2023 +0000

    chore(Profinite): allow more universe flexibility in Profinite/CofilteredLimit (#8613)
    
    We allow the indexing category for the cofiltered limit in the result `Profinite.exists_locallyConstant` to live in a smaller universe than our profinite sets.

[33mcommit b9b9fdbc56e230863c17bccd14b6330ec4a16ae9[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Thu Nov 30 09:46:30 2023 +0000

    feat: Mapping extreme points under continuous maps (#8574)
    
    Prove that extreme points are preserved under affine equivalences, and the less trivial statement that a continuous affine map sends extreme points of a compact set to a superset of the extreme
    points of the image of that set.
    
    Also fix a few name and tweak the API a bit.
    
    
    
    
    Co-authored-by: Yury G. Kudryashov <urkud@urkud.name>

[33mcommit 153b6b05d3c8191a7ea093279d19ee4d601b0962[m
Author: damiano <adomani@gmail.com>
Date:   Thu Nov 30 08:39:20 2023 +0000

    feat(to_additive + Cyclic): auto `Cyclic --> addCyclic` (#8722)
    
    Teach the conversion `Cyclic ‚Ü¶ addCyclic` to `to_additive`.
    
    Affected files:
    ```bash
    GroupTheory/SpecificGroups/Cyclic
    Tactic/ToAdditive
    ```

[33mcommit 78167958e0ceb0cb58947937873ff3a038f77937[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Thu Nov 30 08:39:19 2023 +0000

    chore: rename `Data.Bitvec` to `Data.BitVec` (#8710)
    
    This matches the name of `Std.BitVec`.
    Performing the rename was deliberately left out of #5920, to avoid creating a break in the git history.

[33mcommit 3b761ec489f3f4d04246f8e2d19b7f26952af155[m
Author: Jujian Zhang <jujian.zhang1998@outlook.com>
Date:   Thu Nov 30 08:39:18 2023 +0000

    feat(Algebra/Module/Injective): injective modules are Baer (#8587)
    
    We already know that Baer modules are injective, the other direction is easier

[33mcommit 68ef0067e3bbdeb9165a1e278366ec8990ea7586[m
Author: Xavier Roblot <46200072+xroblot@users.noreply.github.com>
Date:   Thu Nov 30 08:14:04 2023 +0000

    feat: Add OrthonormalBasis.measurePreserving_measurableEquiv (#8427)
    
    Let `F` be a finite-dimensional inner product space. Then any orthonormal basis of `F` defines a measurable equivalence between `F` and the euclidean space of the same dimension that is volume preserving.

[33mcommit 4c9ea25329d4af5b9cbd88e944b43970c42c7b27[m
Author: Heather Macbeth <25316162+hrmacbeth@users.noreply.github.com>
Date:   Thu Nov 30 05:35:04 2023 +0000

    perf: adjust reducibility setting in gcongr (#8731)

[33mcommit a9a186c1be45e4f306d0d7649facfb59b17bd996[m
Author: Scott Morrison <scott@tqft.net>
Date:   Thu Nov 30 05:11:58 2023 +0000

    chore: move toolchain to v4.3.0 (#8733)
    
    This is essentially a noop, beyond changing version numbers. `v4.3.0` is identical to `v4.3.0-rc2`, which we were previously on.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 1937b42b1575e8526cb541880be7b1a09be486b5[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Thu Nov 30 03:34:09 2023 +0000

    fix: do not discard error messages if tests fail (#8716)

[33mcommit d9c853b93556f41e86f0e2f5883b74ba1532b239[m
Author: Jeremy Tan Jie Rui <reddeloostw@gmail.com>
Date:   Thu Nov 30 02:18:08 2023 +0000

    feat: number of edges in a complete graph (#8631)

[33mcommit fb9a01eed3661bb3e7fa8ed7b109af972e8f488e[m
Author: Peter Nelson <71660771+apnelson1@users.noreply.github.com>
Date:   Wed Nov 29 22:38:36 2023 +0000

    Matroid independence axioms (#8071)
    
    This PR provides several ways to construct a matroid with alternative versions of the axiom sets, in particular in terms of an independence predicate. It will be used to define duals and minors of matroids in future PRs.

[33mcommit f3e560f239034a25c1e284f12de08f5140ad202d[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Nov 29 21:38:13 2023 +0000

    refactor: get rid of `comap norm atTop` (#8262)
    
    
    
    Co-authored-by: Jireh Loreaux <loreaujy@gmail.com>

[33mcommit ae010c182d61a5a73d1abc6254057e49a1b8f390[m[33m ([m[1;31morigin/homology-op[m[33m)[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Nov 29 19:54:44 2023 +0000

    chore: introduce notation for `AlternatingMap` (#8697)
    
    Use `M [Œõ^Œπ]‚Üí‚Çó[R] N` for `AlternatingMap R M N Œπ`,
    similarly to the existing notation `M [Œõ^Œπ]‚ÜíL[R] N`
    for `ContinuousAlternatingMap R M N Œπ`.

[33mcommit 381a16deda95793fe95e0526d424dc8ed74bd0ba[m
Author: Oliver Nash <github@olivernash.org>
Date:   Wed Nov 29 19:15:58 2023 +0000

    feat: generalise results about Lie module weight spans from Abelian to nilpotent Lie algebras (#8718)

[33mcommit 7ba6897621e921fc19e8db8147311dbcfce9adde[m
Author: Jujian Zhang <jujian.zhang1998@outlook.com>
Date:   Wed Nov 29 19:15:56 2023 +0000

    feat: category of $R$-modules has enough injectives (#7392)
    
    
    
    
    Co-authored-by: Junyan Xu <junyanxumath@gmail.com>

[33mcommit 0622d7e42dda9f194029ea9f3f7c04967c78e90a[m
Author: Xavier Xarles <xavier.xarles@uab.cat>
Date:   Wed Nov 29 18:21:02 2023 +0000

    chore: generalised some results from ring to semiring (#8715)
    
    Changed the hypothesis of some results from ring to semiring, without changing the proofs.
    
    
    
    Co-authored-by: Xavier Xarles <56635243+XavierXarles@users.noreply.github.com>

[33mcommit addb4691d7428f15da950de0410fc3b4475fba3a[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Wed Nov 29 17:02:16 2023 +0000

    feat(Topology, CategoryTheory): define light profinite sets (#8676)
    
    We define light profinite sets as structures containing the data of a sequential limit in `Profinite`.

[33mcommit d8ade144c0180795e47a2a92964cc5f589864f83[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Wed Nov 29 15:49:19 2023 +0000

    chore: rename some lemmas involving "of_closed" (#8492)
    
    Three particular examples which caught my eye; not exhaustive.

[33mcommit 6490dc26c9b9ae6687a37af39260ee60ba009035[m
Author: Richard Copley <buster@buster.me.uk>
Date:   Wed Nov 29 14:38:58 2023 +0000

    doc(LinearAlgebra/TensorProduct): mention R-balanced maps in liftAddHom docstring (#8709)
    
    Mention R-balanced maps in liftAddHom docstring.
    
    The terminology "`R`-balanced" and "middle linear with respect to `R`" is used in Dummit and Foote (top of p.365 in section 10.4)

[33mcommit c503521325944d9b756ad5ca5d595942e9669323[m
Author: Amelia Livingston <101damnations@github.com>
Date:   Wed Nov 29 14:38:56 2023 +0000

    feat(RepresentationTheory/GroupCohomology): Noether's generalization of Hilbert's Theorem 90 (#8599)

[33mcommit 722e62ad48e8dd6818b2db86aea660e2b9a4db37[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Wed Nov 29 14:38:55 2023 +0000

    feat: uniqueness of Haar measure in general locally compact groups (#8198)
    
    We prove that two regular Haar measures in a locally compact group coincide up to scalar multiplication, and the same thing for inner regular Haar measures. This is implemented in a new file `MeasureTheory.Measure.Haar.Unique`. A few results that used to be in the `MeasureTheory.Measure.Haar.Basic` are moved to this file (and extended) so several imports have to be changed.

[33mcommit f961562098ab14238f24679dabe17ee22d2005d0[m
Author: Martin Dvo≈ô√°k <martin.dvorak@matfyz.cz>
Date:   Wed Nov 29 13:20:39 2023 +0000

    feat: `Multiset.sum_lt_sum` et al (#8707)
    
    Lean discussion:
    https://leanprover.zulipchat.com/#narrow/stream/217875-Is-there-code-for-X.3F/topic/Multiset.2Esum_lt_sum

[33mcommit e761b4ee87fc9a4c78a125ec3cbfc2233b5ef8e5[m
Author: mhk119 <tobias@grosser.es>
Date:   Wed Nov 29 12:22:36 2023 +0000

    refactor: replace Bitvec with Std.BitVec (#5920)
    
    
    re-adding definitions and theorems about bitvectors that mathlib has for `Bitvec` to the new `Std.BitVec` type, and getting rid of the former.
    
    In std, the choice was made to define ult (unsigned less than) and related comparisons as `Bool`-valued, where the corresponding defs for `Bitvec` in mathlib are `Prop`-valued. Std does not have definitions for the respective greater-equal or greater-than comparisons, so we add those here, but we choose to be consistent with std and make them `Bool`-valued as well, breaking with the old API.
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>
    Co-authored-by: Alex Keizer <alex@keizer.dev>
    Co-authored-by: Harun Khan <harun19@stanford.edu>

[33mcommit 49383962e26c556ccbf748535b8ed2743b6191bd[m
Author: Xavier Xarles <Xavier.Xarles@uab.cat>
Date:   Wed Nov 29 11:22:19 2023 +0000

    feat (Mathlib.RingTheory.Ideal.Operations) : Change hypotheses from ring to semiring (#8469)
    
    Moved some results from ring to semiring.
    
    
    
    
    Co-authored-by: Floris van Doorn <fpvdoorn@gmail.com>
    Co-authored-by: Xavier Xarles <56635243+XavierXarles@users.noreply.github.com>

[33mcommit d8260299f1153b898800ab5d36849b91f19ed620[m
Author: Scott Morrison <scott@tqft.net>
Date:   Wed Nov 29 10:49:06 2023 +0000

    chore: bump Std (#8704)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit d8177a059c87aaa066ef62c2eb87f491893aa633[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Wed Nov 29 10:49:05 2023 +0000

    feat(CategoryTheory): more on the naturality of the connecting homomorphism of the snake lemma (#8491)
    
    In this PR, more constructors are defined for `ComposableArrows` in order to formulate the naturality of the snake lemma by the construction of a functor `composableArrowsFunctor : SnakeInput C ‚•§ ComposableArrows C 5`.

[33mcommit 345c6ba74357b286990b23571717ed36d11410bf[m
Author: Oliver Nash <github@olivernash.org>
Date:   Wed Nov 29 10:17:55 2023 +0000

    feat: the roots of a Lie algebra with non-singular Killing form span the dual of the Cartan subalgebra (#8688)
    
    In combination with existing work the changes here mean that the following now works (and furthermore, makes no assumptions about characteristic):
    ```lean
    example {K L : Type*} [Field K] [IsAlgClosed K] [LieRing L] [LieAlgebra K L]
        [FiniteDimensional K L] [LieAlgebra.IsKilling K L]
        (H : LieSubalgebra K L) [H.IsCartanSubalgebra] :
        Submodule.span K (range (LieModule.weight.toLinear K H L)) = ‚ä§ := by
      simp
    ```

[33mcommit a67e41ed49085162cdd3d1983405029e4c23697f[m
Author: Mario Carneiro <mcarneir@andrew.cmu.edu>
Date:   Wed Nov 29 07:55:14 2023 +0000

    chore: bump leantar 0.1.9 (#8670)
    
    leanprover/lean4#2766 changed the format of .olean files, so `leantar` also needs to be updated to support it. `leantar 0.1.9` supports both the new format and the old one, and is fully backward compatible, so it is safe to land this in advance of the next RC bump. (This change has already been tested on [`lean-pr-testing-2766`](https://github.com/leanprover-community/mathlib4/commit/0c9d1236ee4ebdbfdee75eb0c196a9e610b2ee3e).)
    
    In fact, leantar is also forward-compatible in this release: old leantar can pack and unpack oleans made by new lean, but it does not recognize the files as oleans, so it falls back to plain old gzip (with a significant loss in compression quality). But it's probably best to land this first so we don't waste space and download time.
    
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>

[33mcommit 63c5a7ec4215b20d0626b1b237a88d302583e1ed[m
Author: damiano <adomani@gmail.com>
Date:   Wed Nov 29 07:29:04 2023 +0000

    feat(GroupTheory/SpecificGroups/Cyclic): Add non-cyclic -> nontrivial (#8693)
    
    A non-cyclic group is also non-trivial, whether it is multiplicative or additive.

[33mcommit 79254c9790cbd7c5f682271eb9f951c6fc60ecd5[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Wed Nov 29 06:54:02 2023 +0000

    fix: lean4-ify names of inductive constructors (#8652)
    
    These inductive types carry data, so these should be `functionCase` not `theorem_case`.
    
    It seems that mathport didn't do this.

[33mcommit bc2966309352d746251f4efb1af9e5f73438cecf[m
Author: Patrick Massot <patrickmassot@free.fr>
Date:   Wed Nov 29 06:08:23 2023 +0000

    fix: Use notation3 for neighborhood notations (#8690)
    
    The point is to get delaborators for free. This was previously blocked on `notation3` not supporting `scoped`.

[33mcommit b9d519bbe1be6f81551f4f6a0a238c5423faa347[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Nov 29 00:23:33 2023 +0000

    refactor(*/Multilinear): change `*.ofSubsingleton` (#8694)
    
    Change `MultilinearMap.ofSubsingleton` and other similar definitions
    so that they are now equivalences between linear maps
    and `1`-multilinear maps.

[33mcommit 0cac4cb324c7a9d5fb76cb2984bf52dc40cc30b7[m
Author: Andrew Yang <the.erd.one@gmail.com>
Date:   Tue Nov 28 21:58:51 2023 +0000

    feat: Add `Polynomial.separable_map'`. (#8680)
    
    
    
    
    Co-authored-by: Andrew Yang <36414270+erdOne@users.noreply.github.com>

[33mcommit df0fd9f312a34acb7c899ad37f5aeb4554482cb9[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Nov 28 20:47:10 2023 +0000

    feat: composition of a multilinear map and linear maps is multilinear (#8687)
    
    Co-authored-by: @hrmacbeth
    
    
    
    Co-authored-by: Patrick Massot <patrickmassot@free.fr>

[33mcommit ad70e022277f808479fb69e79b429e5fed16023b[m
Author: Heather Macbeth <25316162+hrmacbeth@users.noreply.github.com>
Date:   Tue Nov 28 20:10:42 2023 +0000

    feat: multilinearity of the `MultilinearMap.compLinearMap` operation (#8684)

[33mcommit ce7d2c1bca1c28a59234520e4e8026b2c3437f57[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Tue Nov 28 18:48:49 2023 +0000

    feat(Topology/GDelta): rename "nowhereDense" to "isNowhereDense" (#8567)
    
    The corresponding definition is called `IsNowhereDense`; this matches rules 1 and 5 of the naming convention.
    
    While at it, fix a doc comment (missing word), use a focusing dot (small oversight) and fix line length.

[33mcommit d6652f771117f44b59a1f08b356c5fcbf73e4d27[m
Author: Rob Lewis <Rob.y.lewis@gmail.com>
Date:   Tue Nov 28 18:28:41 2023 +0000

    fix: CI badge appears twice in readme (#8689)

[33mcommit c28500a03a9662365b1bcac08f4c662246f63452[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Tue Nov 28 18:08:16 2023 +0000

    feat(CategoryTheory/Sites): internal hom of (pre)sheaves (#8622)
    
    In this PR, we define a presheaf `presheafHom F G` when `F` and `G` are presheaves `C·µí·µñ ‚•§ A` and show that it is a sheaf when `G` is a sheaf (for a certain Grothendieck topology on `C`).
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit 60b5e23731ea672fd38f73364e1d3115213fcd04[m
Author: Jz Pan <acme_pjz@hotmail.com>
Date:   Tue Nov 28 15:55:18 2023 +0000

    feat(FieldTheory/SeparableDegree): basic definition of separable degree of field extension (#8117)
    
    Main changes:
    
    - rename current `Mathlib/FieldTheory/SeparableDegree` to `Mathlib/RingTheory/Polynomial/SeparableDegree`
      and create new `Mathlib/FieldTheory/SeparableDegree`
    
    Main definitions
    
    - `Emb F E`: the type of `F`-algebra homomorphisms from `E` to the algebraic closure of `E`.
    
    - `sepDegree F E`: the separable degree of an algebraic extension `E / F` of fields, defined to be the cardinal of `F`-algebra homomorphisms from `E` to the algebraic closure of `E`.
    (Mathematically, it should be the algebraic closure of `F`, but in order to make the type compatible with `Module.rank F E`, we use the algebraic closure of `E`.)
      Note that if `E / F` is not algebraic, then this definition makes no mathematical sense.
    
    - `finSepDegree F E`: the separable degree of `E / F` as a natural number, which is zero if `sepDegree F E` is not finite.
    
    Main results
    
    - `embEquivOfEquiv`, `sepDegree_eq_of_equiv`, `finSepDegree_eq_of_equiv`: a random isomorphism
      between `Emb F E` and `Emb F E'` when `E` and `E'` are isomorphic as `F`-algebras.
      In particular, they have the same cardinality (so `sepDegree` and `finSepDegree` are equal).
    
    - `embEquivOfAdjoinSplits'`, `sepDegree_eq_of_adjoin_splits'`, `finSepDegree_eq_of_adjoin_splits'`:
      a random isomorphism between `Emb F E` and `E ‚Üí‚Çê[F] K` if `E = F(S)` such that every element
      `s` of `S` is integral (= algebraic) over `F` and whose minimal polynomial splits in `K`.
      In particular, they have the same cardinality.
    
    - `embEquivOfIsAlgClosed`, `sepDegree_eq_of_isAlgClosed`, `finSepDegree_eq_of_isAlgClosed`:
      a random isomorphism between `Emb F E` and `E ‚Üí‚Çê[F] K` when `E / F`
      is algebraic and `K / F` is algebraically closed.
      In particular, they have the same cardinality.
    
    - `embProdEmbOfIsAlgebraic`, `lift_sepDegree_mul_lift_sepDegree_of_isAlgebraic`,
      `sepDegree_mul_sepDegree_of_isAlgebraic`, `finSepDegree_mul_finSepDegree_of_isAlgebraic`:
      if `K / E / F` is a field extension tower, such that `K / E` is algebraic,
      then there is a non-canonical isomorphism `(Emb F E) √ó (Emb E K) ‚âÉ (Emb F K)`.
      In particular, the separable degree satisfies the tower law: `[E:F]_s [K:E]_s = [K:F]_s`.

[33mcommit 547a84156c11897fd0b7c9e2dc93c3edbe702351[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Tue Nov 28 14:52:06 2023 +0000

    refactor: use the new homology API for right derived functors (#8593)
    
    Injective resolutions and right derived functors are redefined using the new homology API.
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit 2bfea869e90fc6f357adce123094cc2c380c4dfd[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Tue Nov 28 14:52:05 2023 +0000

    feat(CategoryTheory): the localized category of a product category (#8516)
    
    This PR develops the API for cartesian products of categories (natural isomorphisms, equivalences, morphism properties) in order to show that under simple assumptions, the localized category of a product of two categories identifies to a product of the localized categories.

[33mcommit b4ed581028e8202900d43daffb7bd3a1e7145601[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Tue Nov 28 14:52:03 2023 +0000

    feat(CategoryTheory): naturality of the connecting homomorphism of the snake lemma (#8490)
    
    In this PR, it is shown that the connecting homomorphism of the snake lemma is natural.

[33mcommit 4bfed3e4bda8c06baaa742f3a6f9be7470df5822[m
Author: Oliver Nash <github@olivernash.org>
Date:   Tue Nov 28 14:12:21 2023 +0000

    feat: weights of Lie modules are linear functions (#8677)
    
    Since we have already proved Cartan subalgebras of Lie algebras with non-singular Killing forms are Abelian, the changes here mean that the following now works without any assumptions on characteristic:
    ```lean
    example {K L : Type*} [Field K] [LieRing L] [LieAlgebra K L]
        [FiniteDimensional K L] [LieAlgebra.IsKilling K L]
        (H : LieSubalgebra K L) [H.IsCartanSubalgebra] :
        LieModule.LinearWeights K H L := inferInstance
    ```

[33mcommit 88b4f4c733fb6e23279cf9521b4f0afe60fac5c7[m
Author: Andrew Yang <the.erd.one@gmail.com>
Date:   Tue Nov 28 12:41:26 2023 +0000

    feat: Relax arguments of going-up theorems. (#8645)
    
    
    
    
    Co-authored-by: Andrew Yang <36414270+erdOne@users.noreply.github.com>

[33mcommit baf37635814f5208419b3ee0027b9d0dd4301928[m
Author: Andrew Yang <the.erd.one@gmail.com>
Date:   Tue Nov 28 11:57:53 2023 +0000

    feat: `IsFractionRing R R` if `R` is a field. (#8641)

[33mcommit 65fce9bb0bafe503fb5937d7b81098156024cde8[m
Author: Andrew Yang <the.erd.one@gmail.com>
Date:   Tue Nov 28 11:15:44 2023 +0000

    feat: Add lemmas about `Polynomial.scaleRoots`. (#8653)
    
    
    
    
    Co-authored-by: Andrew Yang <36414270+erdOne@users.noreply.github.com>
    Co-authored-by: Eric Rodriguez <ericrboidi@gmail.com>

[33mcommit 39b23fffb2d49b2edd736759ec2aae1e147cc34b[m
Author: Andrew Yang <the.erd.one@gmail.com>
Date:   Tue Nov 28 09:41:02 2023 +0000

    feat: Add `IsAlgebraic.inv_iff`. (#8651)

[33mcommit 666326cef556fa6a3daa1ee2105b267945e2038e[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Tue Nov 28 08:56:19 2023 +0000

    feat: add some results about IsCyclic (#8625)
    
    From flt-regular.
    
    Co-authored-by: Andrew Yang <36414270+erdOne@users.noreply.github.com>
    
    
    
    Co-authored-by: erdOne <the.erd.one@gmail.com>
    Co-authored-by: Andrew Yang <36414270+erdOne@users.noreply.github.com>

[33mcommit 3f88a47222d1fe8c36b5fd29675474546a8fbd6e[m
Author: Thomas Zhu <thomas.zhu.sh@hotmail.com>
Date:   Tue Nov 28 08:01:11 2023 +0000

    refactor(Probability/Density): define pdf using rnDeriv (#8544)
    
    Defines `pdf` in terms of `rnDeriv`.
    
    Main definition change:
    ```lean
    /-- A random variable `X : Œ© ‚Üí E` is said to `HasPDF` with respect to the measure `‚Ñô` on `Œ©` and
    `Œº` on `E` if the push-forward measure of `‚Ñô` along `X` is absolutely continuous with respect to
    `Œº` and they `HaveLebesgueDecomposition`. -/
    class HasPDF {m : MeasurableSpace Œ©} (X : Œ© ‚Üí E) (‚Ñô : Measure Œ©)
        (Œº : Measure E := by volume_tac) : Prop where
      pdf' : Measurable X ‚àß HaveLebesgueDecomposition (map X ‚Ñô) Œº ‚àß map X ‚Ñô ‚â™ Œº
    
    /-- If `X` is a random variable that `HasPDF X ‚Ñô Œº`, then `pdf X` is the Radon‚ÄìNikodym
    derivative of the push-forward measure of `‚Ñô` along `X` with respect to `Œº`. -/
    def pdf {_ : MeasurableSpace Œ©} (X : Œ© ‚Üí E) (‚Ñô : Measure Œ©) (Œº : Measure E := by volume_tac) :
        E ‚Üí ‚Ñù‚â•0‚àû :=
      if HasPDF X ‚Ñô Œº then (map X ‚Ñô).rnDeriv Œº else 0
    ```
    
    The law of the unconscious statistician is first generalized to `rnDeriv` on a general Banach space (`‚à´ x, (Œº.rnDeriv ŒΩ x).toReal ‚Ä¢ f x ‚àÇŒΩ = ‚à´ x, f x ‚àÇŒº`), and then proven for PDFs.
    
    [Zulip thread](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Definition.20of.20pdf.20as.20rnDeriv)

[33mcommit d835056c81e79c94ba424e6bd9cf86f138665020[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Tue Nov 28 07:37:32 2023 +0000

    feat: computation of the connecting homomorphism of the snake lemma in concrete categories (#8512)
    
    This PR provides a lemma `ShortComplex.SnakeInput.Œ¥_apply` which allows the computation of the connecting homomorphism in concrete categories. Incidentally, we also deduce from previous results that functors which preserve homology preserve finite limits and finite colimits.
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit dc2eb24d0bb3451a4cc5652a9505c6ee2af5d493[m
Author: Scott Morrison <scott@tqft.net>
Date:   Tue Nov 28 06:13:32 2023 +0000

    chore: bump dependencies (#8671)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 16f64a1daa2da81b56dcff88eab90ee1559da06f[m
Author: Scott Morrison <scott@tqft.net>
Date:   Tue Nov 28 04:40:08 2023 +0000

    chore: build lean4checker with current toolchain (#8669)
    
    After leanprover/lean4#2766 lands, the git hash of will be embedded in every olean. `lean4checker` will thus reject oleans unless it was compiled on the same toolchain as they were!
    
    We may want to relax this later, but for now, since we are building `lean4checker` in CI anyway, let's just make sure it is on the same toolchain as mathlib.
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 2577ef780d8e69c9a473b48ac6c6bdf672ee0ad2[m
Author: Scott Morrison <scott@tqft.net>
Date:   Tue Nov 28 03:17:59 2023 +0000

    chore: bump for std4#241 (#6975)
    
    - [x] depends on: https://github.com/leanprover/std4/pull/241
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit aa204e9add72e0c4d327d2a4262044b0e24c1a05[m
Author: adomasbaliuka <52975890+adomasbaliuka@users.noreply.github.com>
Date:   Tue Nov 28 01:23:25 2023 +0000

    Update docstring of `squeeze_one_norm'` (#8667)
    
    `squeeze_one_norm'` and `squeeze_zero_norm'` had the same docstring. The docstring of `squeeze_zero_norm'` was strictly speaking incorrect (writing `1` instead of `0`).
    
    The docstring of `squeeze_one_norm'` was correct but perhaps this change makes it easier for people to notice the difference and what `E` is.

[33mcommit 7cc262f36953b78637c096c4bc6634c2af0b2a0a[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Tue Nov 28 00:02:51 2023 +0000

    fix(Cache): correctly handle local copies of `Mathlib` (#8662)
    
    This parses the `lake-manifest` to work out where mathlib is.
    
    Previously this assumed it was in `.lake/packages`, but this is only true of `git` packages. As a result, it would fail with:
    ```
    uncaught exception: no such file or directory (error code: 2)
      file: .lake/packages/mathlib/lakefile.lean
    ```
    
    Tested on a blank project created with `lake new test math`, with `require mathlib from "../mathlib4"` in the lakefile.

[33mcommit 3c30dbb2de200f6972d4e25534656a58ac2acfc1[m
Author: Oliver Nash <github@olivernash.org>
Date:   Mon Nov 27 21:37:15 2023 +0000

    feat: a family of generalized eigenvalues for a commuting linear family of endomorphims must be linear (#8656)

[33mcommit c77ae20fc88463db4dc9513e793b347237df33d8[m
Author: Michael Stoll <Michael.Stoll@uni-bayreuth.de>
Date:   Mon Nov 27 20:16:25 2023 +0000

    feat: bounds for Dirichlet characters (#8449)
    
    This adds `NumberTheory.DirichletCharacter.Bounds` containing proofs of `‚Äñœá a‚Äñ = 1` if `a` is a unit and `‚Äñœá a‚Äñ ‚â§ 1` in general, where `œá` is a Dirichlet character with values in a normed field.
    
    There are also two API lemmas added elsewhere that are used in the proofs.

[33mcommit 313ebb4380e5fca7f4cf6a610956a4b5a934235a[m
Author: Andrew Yang <the.erd.one@gmail.com>
Date:   Mon Nov 27 18:31:13 2023 +0000

    feat: Add `AlgHom.map_adjoin_singleton`. (#8655)
    
    
    
    
    Co-authored-by: Andrew Yang <36414270+erdOne@users.noreply.github.com>

[33mcommit fa1d892afb4927b5605d60c368351fd026d36f36[m
Author: Andrew Yang <the.erd.one@gmail.com>
Date:   Mon Nov 27 17:05:45 2023 +0000

    feat: Add `Submodule.restrictScalars_mul`. (#8649)
    
    
    
    
    Co-authored-by: Andrew Yang <36414270+erdOne@users.noreply.github.com>

[33mcommit 27d3a24e378c011d78ae63f55d0dfe89fa09c835[m
Author: Andrew Yang <the.erd.one@gmail.com>
Date:   Mon Nov 27 17:05:43 2023 +0000

    feat: Add `not_isNilpotent_one`. (#8648)

[33mcommit 098e254c6087d6781549be96154833d946647a31[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Nov 27 17:05:42 2023 +0000

    feat(Data/Set/Lattice): generalize `Set.iUnion_univ_pi` (#8647)
    
    Allow `Œπ : Type*` to depend on `a : Œ±`.

[33mcommit 04c2181e1dd58c176e7864c4233f43536bc98f09[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Nov 27 17:05:41 2023 +0000

    feat(Topology/Bornology): add convenience lemmas (#8640)
    
    Add `Bornology.IsBounded.image_fst`, `Bornology.IsBounded.image_snd`,
    and `Bornology.IsBounded.image_eval`.

[33mcommit 187f84fbee857ed794fbd1993fb01a285c607684[m
Author: Riccardo Brasca <riccardo.brasca@gmail.com>
Date:   Mon Nov 27 16:21:01 2023 +0000

    feat: remove an assumption (#8646)
    
    The assumption `hn` in [finEquivZpowers_symm_apply](https://leanprover-community.github.io/mathlib4_docs/Mathlib/GroupTheory/OrderOfElement.html#finEquivZpowers_symm_apply) always holds.

[33mcommit b70e89f1d6f77395ddcca092868695f8c2e66041[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Nov 27 15:05:53 2023 +0000

    feat(SpecialFunctions/Log): add `tendsto_log_nhdsWithin_zero_right` (#8554)
    
    I use this lemma several times in an external project.
    Also, this lemma doesn't rely on our non-canonical extension of `Real.log` to negative numbers.

[33mcommit 1412ef2fc3f97513d1e49d83ef705879111b468e[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Mon Nov 27 14:14:00 2023 +0000

    feat(LinearAlgebra/TensorProduct): add `liftAddHom` (#8584)
    
    This new `TensorProduct.liftAddHom` doesn't require bilinearity, only that scalar multiplication can be moved between the arguments.
    
    In theory this could be used to golf some later definitions, but in practice this resulted in performance regressions (#8519).
    For now we just leave a TODO, so that the performance/deduplication tradeoff doesn't hold up further mathematics.

[33mcommit c1f4e1134bff8a5324af0b5bddb2a1ebbded527b[m
Author: Scott Morrison <scott@tqft.net>
Date:   Mon Nov 27 11:28:51 2023 +0000

    chore: update the nightly-with-mathlib branch at leanprover/lean4 (#8628)
    
    This should result in the `nightly-with-mathlib` branch at leanprover/lean4 always being:
    * the latest commit which was released as a nightly `nightly-YYYY-MM-DD`
    * on which Mathlib CI has completed, using the `nightly-testing` branch
    * and hence Mathlib has a `nightly-testing-YYYY-MM-DD` branch using that nightly.
    
    If this works as planned, `nightly-with-mathlib` will become the new recommended base branch for Lean PRs that require Mathlib testing.
    
    (It will still work if you base off `nightly`, you might just get a message about Mathlib not being ready. And if you base off `master` you might get a message about needing to rebase to get Mathlib testing.)
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit efd296126719d6f2804d2ac8d1be8da191c3d211[m
Author: Scott Morrison <scott@tqft.net>
Date:   Mon Nov 27 11:06:42 2023 +0000

    chore: merge master into nightly-testing via cron, not on every commit (#8627)
    
    In the current setup, every commit to master is being merged into `nightly-testing`. This results in the cancellation of the previous CI job running on `nightly-testing`. If commits to master land often enough, this means that successful results never occur, and so the `nightly-testing-YYYY-MM-DD` branch is never created, even if `nightly-testing` would actually get green CI.
    
    This changes to only merging master on a regular basis, long enough for CI to complete.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 319c50be1fd629e473f0910f3ff9608250c12fd3[m
Author: Martin Dvo≈ô√°k <martin.dvorak@matfyz.cz>
Date:   Mon Nov 27 11:06:40 2023 +0000

    chore: `ValuedCsp` and `ValuedCsp.Instance` changed from `def` to `abbrev` (#8623)

[33mcommit 3f5910bf9033eb1aa56f1d63b1e2db39615f9ce3[m
Author: Jz Pan <acme_pjz@hotmail.com>
Date:   Mon Nov 27 10:05:04 2023 +0000

    feat(Data/Finset/Card): add converse to some existing theorems (#8515)
    
    - Add `Multiset.toFinset_card_eq_card_iff_nodup` which is converse to `Multiset.toFinset_card_of_nodup` (credits: @Ruben-VandeVelde)
    - Add `Finset.card_eq_of_equiv_fin` and `Finset.card_eq_of_equiv` which are converse to `Finset.equivFinOfCardEq` and `Finset.equivOfCardEq`, respectively. I'm not sure for the necessarily of these two, since they are also easy corollaries of `Fintype.card_eq` and `Fintype.card_coe`.

[33mcommit 4b30f25be552bff309b7dba1cdc1cbfa36e063f0[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Mon Nov 27 10:05:03 2023 +0000

    refactor(Data/Matrix/Basic): use a defeq for scalar that matches its docstring (#8115)
    
    This changes the defeq from `scalar a = a ‚Ä¢ 1` to `scalar a = diagonal fun _ => a`, which has the nice bonus of making `algebraMap_eq_diagonal` true by `rfl`.
    
    As a result, we need a new `smul_one_eq_diagonal` lemma to rewrite `diagonal fun _ => a` back into `a ‚Ä¢ 1`, along with some variants for convenience.
    
    In the long term we could generalize this to non-unital rings, now that it needs no `1`.

[33mcommit 55eb81242f484e2dcd21da1fece398065f8de1db[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Mon Nov 27 09:11:38 2023 +0000

    chore(GroupTheory/Congruence): small cleanups (#8314)
    
    Switches to `where` notation in a couple of places and removes a default `lt` field.
    
    Also replaces uses of `.r` with `coeFn`, since the latter is declared simp-normal by this file.

[33mcommit 83d4f222771f491b351d70b070406481f5d2b2ba[m[33m ([m[1;33mtag: v4.3.0-rc2[m[33m)[m
Author: Eric Rodriguez <ericrboidi@gmail.com>
Date:   Sun Nov 26 22:11:30 2023 +0000

    chore: add docs + alias for `prod_bijective` (#8439)

[33mcommit 4e2498ef970fe8e711211c4ee870841abb360d57[m
Author: Alex J Best <alex.j.best@gmail.com>
Date:   Sun Nov 26 21:03:04 2023 +0000

    chore: implement simp_rw config matching better (#8592)

[33mcommit 12d7898d4dc8b2ca0938013f2d076cfd1bb13508[m
Author: Scott Morrison <scott@tqft.net>
Date:   Sun Nov 26 13:22:21 2023 +0000

    chore: bump dependencies (#8626)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit c159834a42f778ba1ac079dbe0af940dc4dc0e6b[m
Author: Fran√ßois G. Dorais <fgdorais@gmail.com>
Date:   Sun Nov 26 04:56:08 2023 +0000

    fix: patch for std4#203 (more sub lemmas for `Nat`) (#6216)

[33mcommit 632ea7781942607e95dabee9f4d1335392d0f01a[m
Author: Oliver Nash <github@olivernash.org>
Date:   Sat Nov 25 18:19:04 2023 +0000

    chore: delete `LinearMap.extendScalars` which duplicates `LinearMap.baseChange` (#8617)
    
    For consistency, we also rename `Submodule.extendScalars` to `Submodule.baseChange` and likewise for `LieSubmodule`.

[33mcommit 4b97b73603cd0349963c7babb372f4f0bbc77db9[m
Author: Hunter Monroe <github.com@huntermonroe.com>
Date:   Sat Nov 25 17:55:53 2023 +0000

    doc(Computability/Halting): Mark named theorems (#8577)
    
    Mark these named theorems: Rice, Downward and Upward Skolem

[33mcommit a538c320ea2b78c866c11654586a7ce876910bf2[m
Author: Alex Keizer <alex@keizer.dev>
Date:   Sat Nov 25 17:07:36 2023 +0000

    feat: prove an upper bound on bitwise operations (#8598)
    
    A simple result which shows that if `x` and `y` fit within `n` bits, then the result of any bitwise operation on `x` and `y` also
    fits within `n` bits.
    
    Co-authored-by: mhk119 [58151072+mhk119@users.noreply.github.com](mailto:58151072+mhk119@users.noreply.github.com)
    Co-authored-by: Eric Wieser [wieser.eric@gmail.com](mailto:wieser.eric@gmail.com)

[33mcommit 706be65847b89895072c528de582b0b887f3c0ee[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Sat Nov 25 15:38:44 2023 +0000

    doc: add a better docstring for `fun‚ÇÄ` (#8601)
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit 1c6e8b593596f05169b1694ef095df0da392eaf0[m
Author: kkytola <kalle.kytola@aalto.fi>
Date:   Sat Nov 25 15:15:58 2023 +0000

    chore: Fix universe (misprint in Portmanteau.lean). (#8620)
    
    In my earlier PR #8097 there there was a typo `variable {Œ© : Type}` which should have been a universe polymorphic `variable {Œ© : Type*}`. This PR fixes 1 character. Apologies!

[33mcommit 5ddf761ee912c16db6a40c4d8d3161c4937cba9a[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Sat Nov 25 10:19:50 2023 +0000

    feat(AlgebraicGeometry): the big Zariski site (#8549)
    
    This PR defines the Zariski topology on the category of schemes. It may have some applications, but it should also be considered as a test case for the Grothendieck topologies API in order to check that is general enough, in particular in terms of universes: a priori, the category which shall form the small √©tale site of a scheme will have the same universe parameters.
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit 0ac02f4dacdee757591d884646ebd501c21f0eb9[m
Author: kkytola <kalle.kytola@aalto.fi>
Date:   Sat Nov 25 10:19:49 2023 +0000

    chore: better phrasing of pointwise convergence of indicators (#8331)
    
    In some recently added results, pointwise convergence of constant indicators of sets was phrased in terms of `Tendsto` in the product topology. The relevant notion is more elementary, however: it is (usually) equivalent to eventually constantness of the set membership of any point; in particular the topology of the underlying set plays almost no role (apart from mild separation axioms). This PR adds equivalences between the conditions and refactors some results.
    
    Co-authored-by: Floris van Doorn  <@fpvandoorn>.

[33mcommit cfedb3010322d41f081dc4786fc57d207903d469[m
Author: Sebastian Ullrich <sebasti@nullri.ch>
Date:   Sat Nov 25 10:19:48 2023 +0000

    perf: process imported `#align`s lazily (#8199)
    
    
    
    Co-authored-by: Scott Morrison <scott@tqft.net>
    Co-authored-by: Floris van Doorn <fpvdoorn@gmail.com>

[33mcommit e9d46c6c06caf84856fda1c0f89019a48a61b74e[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Sat Nov 25 09:44:15 2023 +0000

    feat(CategoryTheory): description of products and pullbacks in concrete categories (#8507)
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit a785b32da038aa1563f8f1bf8eeff3ac26202167[m
Author: Fr√©d√©ric Dupuis <dupuisf@iro.umontreal.ca>
Date:   Fri Nov 24 23:28:47 2023 +0000

    feat: Asymptotic order of divide-and-conquer recurrences (Akra-Bazzi theorem) (#6583)
    
    This PR proves the [Akra-Bazzi theorem](https://en.wikipedia.org/wiki/Akra%E2%80%93Bazzi_method), which gives the asymptotic order of divide-and-conquer recurrences of the form
    ```
    T n = (‚àë i in Fin k, a i * T (r i n)) + g n
    ```
    where `T : ‚Ñï ‚Üí ‚Ñù`, and where `r i n` is close to `b i * n` for a set of coefficients `b : Fin k ‚Üí ‚Ñù`. These recurrences arise mainly in the analysis of divide-and-conquer algorithms such as mergesort or Strassen's algorithm for matrix multiplication.
    
    Note that the traditional proof first proves a continuous version (i.e. for `T : ‚Ñù ‚Üí ‚Ñù`) and then discretizes it to get a version that is relevant for algorithms. Here we prove the discrete version directly, which shortens the proof considerably.

[33mcommit 83613d27d365ca7fe1059369f35a831fc59c4333[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Fri Nov 24 22:08:35 2023 +0000

    refactor(CategoryTheory/Sites): continuous functors (#8408)
    
    This PR introduces the typeclass `Functor.IsContinuous` which says that the precomposition with a functor preserves the sheaf condition for Grothendieck topologies. It slightly refactors the previous main theorem about `CoverPreserving` and `CompatiblePreserving` functors: it now states that such functors are continuous. The *pushforward* functor for a continuous functor is defined under the `Functor.IsContinuous` assumption rather than the combination of both `CoverPreserving` and `CompatiblePreserving`. The property `CoverLifting` is renamed `IsCocontinuous` and it is made a class. The property `IsCoverDense` is also made a class.
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit 9eed8c4694203454bc8777c3ad595099de4e7608[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Fri Nov 24 20:37:30 2023 +0000

    refactor: New `Colex` API (#7715)
    
    This fully rewrites `Combinatorics.Colex` to use a type synonym approach instead of abusing defeq.
    
    We also provide some API about initial segments of colex.
    
    
    
    
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>

[33mcommit 54f7158db90360ed2142693f55c501ce19411627[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Fri Nov 24 19:52:23 2023 +0000

    feat: Multiplication of convex function (#7650)
    
    We prove that the product of nonnegative monovarying convex functions is convex. We take the opportunity to golf the various proofs of the convexity of `x ‚Ü¶ x ^ n`.

[33mcommit bae5525c1ec8a49558336fee73fcfeb006eaa55e[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Fri Nov 24 18:46:42 2023 +0000

    style(Algebra): write `coe_pow` lemmas more clearly (#8292)

[33mcommit 99875260c713c0fcfe382adc18d058f4aeb1e8c9[m
Author: Oliver Nash <github@olivernash.org>
Date:   Fri Nov 24 18:13:10 2023 +0000

    feat: remove triangularizability assumption from proof that Cartan subalgebras are Abelian (#8583)

[33mcommit afb00b052d03e99a1c4abf4810dc4e6314f969f6[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Fri Nov 24 14:23:26 2023 +0000

    refactor(CategoryTheory/Idempotents): replacing equalities of functors by isomorphisms (#8562)
    
    In the context of idempotent completion of categories and the Dold-Kan equivalence, constructing some isomorphisms was very slow in Lean 3 but has been much faster in Lean 4, while using equalities of functors in Lean 3 was fast, but in Lean 4 it became very slow. In this PR, we switch to using mostly isomorphisms of functors: this also became necessary in order to make the refactor #8531 possible.

[33mcommit 244c4fda94ef8e27711f604be5b3a20ae5786731[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Fri Nov 24 13:15:16 2023 +0000

    feat(CategoryTheory): more constructors for ComposableArrows (#8475)

[33mcommit 9988ed68a735c971f687284560bc055b60f479b9[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Fri Nov 24 13:15:15 2023 +0000

    feat: limits and colimits in the category of homological complexes (#8472)

[33mcommit afce5534b92e9aa3ecc8eabff48814b949ea8d27[m
Author: Oliver Nash <github@olivernash.org>
Date:   Fri Nov 24 12:19:18 2023 +0000

    feat: on a countable type, if singletons are measurable the discrete topology is Borel (#8591)
    
    Extracted from the PFR Project: https://github.com/teorth/pfr/pull/67

[33mcommit 7efcade4aa4431c5d688f3cbb6cf4e9fc565490a[m
Author: Oliver Nash <github@olivernash.org>
Date:   Fri Nov 24 12:19:17 2023 +0000

    feat: various linear algebra results (#8572)

[33mcommit b112cb6b370817ade8f7b59ea2a6106f2db03ab2[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Fri Nov 24 11:47:47 2023 +0000

    feat: the homology functor on the homotopy category for the new API (#8595)
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit e4e24a51453e9278559e9d355dff9f24b9ae5790[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Fri Nov 24 10:23:13 2023 +0000

    feat: `m/gcd m n` and `n` coprime if `m` squarefree (#8578)

[33mcommit 988870b7bb3605e9e8aba8f9097778a2fd4190a7[m
Author: Junyan Xu <junyanxumath@gmail.com>
Date:   Fri Nov 24 09:10:51 2023 +0000

    feat: switch to weaker UnivLE (#8556)
    
    Switch from the strong version of UnivLE `‚àÄ Œ± : Type max u v, Small.{v} Œ±` to the weaker version `‚àÄ Œ± : Type u, Small.{v} Œ±`.
    
    Transfer Has/Preserves/Reflects(Co)limitsOfSize from a larger size (higher universe) to a smaller size.
    
    In a few places it's now necessary to make the type explicit (for Lean to infer the `Small` instance, I think).
    
    Also prove a characterization of UnivLE and the totality of the UnivLE relation.
    
    A pared down version of #7695.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>

[33mcommit c26fbb123f5a4e5450ade6106621ace5f5029236[m
Author: Kyle Miller <kmill31415@gmail.com>
Date:   Fri Nov 24 03:30:59 2023 +0000

    feat: analysis delaborator for `LinearIndependent` (#8602)
    
    This is an experimental delaborator that works by analyzing the expression and tagging it with `pp.analysis`-style hints.
    
    This causes pretty printing `LinearIndependent` like `LinearIndependent K fun (b : ‚Üës) ‚Ü¶ ‚Üëb` rather than `LinearIndependent K fun b ‚Ü¶ ‚Üëb` and `LinearIndependent (Œπ := { x // x ‚àà s }) K Subtype.val` rather than `LinearIndependent K Subtype.val`.
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 84c26b211afbd8ae411c6f7cb9458f5a6e44ca0a[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Thu Nov 23 19:13:50 2023 +0000

    feat(Calculus/ContDiff): add `ContDiffAt.contDiffOn` (#8600)

[33mcommit e9bcfc6e583d0784ece32475ca6f450126ef286f[m
Author: Jujian Zhang <jujian.zhang1998@outlook.com>
Date:   Thu Nov 23 14:01:58 2023 +0000

    style(Algebra/Module/Injective): fix weird bracket position (#8589)
    
    The bracket position seems off

[33mcommit 40cf2060b82dc69b5af0267a12b136c7de59bf17[m
Author: Alex J Best <alex.j.best@gmail.com>
Date:   Thu Nov 23 14:01:57 2023 +0000

    doc: update bors link (#8588)

[33mcommit c9fe09849ded34ff118a00d1fc2cebfe2e93eb0b[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Thu Nov 23 12:56:43 2023 +0000

    chore: Move `Data.Nat.Fib` ‚Üí `Data.Nat.Fib.Basic` (#8576)
    
    This was postponed to after the Zeckendorf PR.

[33mcommit 29bc69ac223e8afbffc76d5ce17f9ad200c6a08f[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Thu Nov 23 12:56:42 2023 +0000

    feat(Algebra/GroupRingAction/Basic): `RingHom` application forms a `MulDistribMulAction` (#8396)
    
    This replaces a previous weaker result that it formed a `DistribMulAction`.
    
    The docstring seemed to assume this already existed, but forgot to mention the `RingAut` version in another file.

[33mcommit a07f307327054fa90c5fe0b544f587906c0d6b5e[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Thu Nov 23 12:56:41 2023 +0000

    feat(Algebra/Module/Hom): `AddMonoid.End` application forms a `Module` (#8395)
    
    Mathlib already knew it formed a `DistribMulAction`.
    
    This also cleans up some duplicate definitions from @urkud's #2968.

[33mcommit d34a7de3715f5570753a2ca17559c893c7f727f3[m
Author: Junyan Xu <junyanxumath@gmail.com>
Date:   Thu Nov 23 12:56:40 2023 +0000

    chore: golf tsum_setElem_eq_tsum_setElem_diff (#8393)
    
    
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>

[33mcommit aa7a2917f57c0ae9b41d1d849d9872d4ca8daa2f[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Thu Nov 23 11:18:59 2023 +0000

    chore(Algebra/Regular/Basic): generalize to `IsCancelMul` (#8428)
    
    This lets lemmas about cancellative monoids work for cancellative semigroups
    
    Some docstrings have been rewritten, as adjusting the wording was too awkward.
    
    The new `.all` names are intended to match `Commute.all`.

[33mcommit 0cacf073edcc85fd82975c59ea3dbb4bb15a45db[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Thu Nov 23 10:43:15 2023 +0000

    feat: reduction of DirichletCharacter (#8440)
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit 80876c8e256d1991fb1387ce66cb94cc6ba03b3f[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Thu Nov 23 09:45:05 2023 +0000

    chore(LinearAlgebra/TensorProduct): make the bad instance private (#8571)
    
    This instance is needed to set things up, but then should never be used again. To ensure this, it is made private and given a scary name.

[33mcommit 6834a65f2ea80e6eac71e7b899d86c0ea7de35f3[m
Author: David Renshaw <dwrenshaw@gmail.com>
Date:   Thu Nov 23 03:28:14 2023 +0000

    feat: add List.enum_eq_nil and List.mapIdx_eq_nil (#8493)
    
    Adds `List.enum_eq_nil` and `List.mapIdx_eq_nil`.
    These are analogous to [`List.map_eq_nil`](https://github.com/leanprover/std4/blob/c14f6a65b2c08caa38e1ab5db83451460d6cde3e//Std/Data/List/Lemmas.lean#L166-L167).

[33mcommit e34836b1c33d8df2ed3911cec38a30f1ed8e9158[m
Author: Alex J Best <alex.j.best@gmail.com>
Date:   Thu Nov 23 00:23:48 2023 +0000

    chore: fix lakefile for docs (#8553)
    
    Looks like #8456 broke doc-gen https://github.com/leanprover-community/mathlib4_docs/actions/runs/6927181810, this looks like the likely culprit (but I haven't tested the full workflow).

[33mcommit 244a0204bd78cee75da92489bdc92af5ace8ce6a[m
Author: Kyle Miller <kmill31415@gmail.com>
Date:   Thu Nov 23 00:03:06 2023 +0000

    fix: makefile missing semicolon, silence tests (#8580)
    
    **Note:** *if you have a branch failing CI with "Error: Test output is not empty" then merge the `master` branch.*
    
    Silences remaining tests. (The change that required silent tests seems to have passed its own test through bors, but in CI these tests remain noisy.)
    
    Co-authored-by: Ruben Van de Velde <ruben.vandevelde+github@gmail.com>

[33mcommit e2426ff5dc46051d5747537177e0e66c5dc771e7[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Wed Nov 22 22:57:52 2023 +0000

    fix: decapitalize names of proof-valued fields (#8509)
    
    Only `Prop`-values fields should be capitalized, not `P`-valued fields where `P` is `Prop`-valued.
    
    Rather than fixing `Nonempty := ` in constructors, I just deleted the line as the instance can almost always be found automatically.

[33mcommit bf215ce928b317a2080de9125a858a3d910ea2e5[m
Author: Kyle Miller <kmill31415@gmail.com>
Date:   Wed Nov 22 20:53:39 2023 +0000

    fix: missing `withContext` in `linarith` preprocessing (#8573)
    
    1. Adds missing `withContext`s (test had unknown fvar errors)
    2. Fixes `removeNe_aux` so that it instantiate metavariables
    3. Makes `removeNe` preprocessor come after conjunction splitting, since that opens up strictly more opportunities.

[33mcommit 2df406bf8cbff1403958834e0a61d389739d05b6[m
Author: Tobias Grosser <tobias@grosser.es>
Date:   Wed Nov 22 20:00:31 2023 +0000

    feat: add two power-of-two theorems to bitwise (#8558)
    
    These are generally useful and split out of #5920.
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 029b3d788a88f84d203596f94f1487724ce45854[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Wed Nov 22 15:18:26 2023 +0000

    feat: `Squarefree` lemmas for `Nat` (#8323)

[33mcommit 555fddebd3b21542478319c662bc1be696f9178c[m
Author: Alex J Best <alex.j.best@gmail.com>
Date:   Wed Nov 22 12:41:29 2023 +0000

    feat: improve simp_rw config handling (#8569)

[33mcommit 5be6ac521cc1dbd9c3f2b9424e1d09d8726764bb[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Wed Nov 22 09:06:38 2023 +0000

    chore(Algebra/Module/Submodule): add some missing `simps`s (#8550)

[33mcommit af56a1adf7db065446a9f5e12d371ce06c9364e2[m
Author: Kyle Miller <kmill31415@gmail.com>
Date:   Wed Nov 22 06:12:46 2023 +0000

    fix: elaborate `linarith` arguments without errToSorry (#8561)
    
    This means that `linarith` will fail before executing its algorithm if there is an elaboration error in one of its supplied terms, rather than going ahead and silently failing.
    
    Also, checks for new metavariables in the elaborated terms, which can't be used since `linarith` is a finishing tactic.
    
    Lastly, copies these (and pre-existing) fixes to `nlinarith`.
    
    
    
    Co-authored-by: thorimur <68410468+thorimur@users.noreply.github.com>

[33mcommit f70d883aeab49b1270d6ad1aab2afbbe712de876[m
Author: Mario Carneiro <mcarneir@andrew.cmu.edu>
Date:   Wed Nov 22 05:01:01 2023 +0000

    feat: add div/mod/dvd on Nat/Int to `norm_num` (#8534)
    
    
    
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 9bb53f8c2aea91721fcca1e0d920983e316f1bbc[m
Author: Scott Morrison <scott@tqft.net>
Date:   Wed Nov 22 05:01:00 2023 +0000

    feat: simp_rw (config := ...) (#8192)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 4e64f9b9d49f82400877b8c0b4e869e8ceae6177[m
Author: Patrick Massot <patrickmassot@free.fr>
Date:   Wed Nov 22 03:54:04 2023 +0000

    fix: local context handling in `fail_if_no_progress` (#8482)
    
    
    
    Co-authored-by: Kyle Miller <kmill31415@gmail.com>

[33mcommit 6212c863997187025b8b6df4a1c8bc8e09d95548[m
Author: Adam Topaz <github@adamtopaz.com>
Date:   Wed Nov 22 00:12:26 2023 +0000

    feat: term elaborator for associativity equivalences between iterated products. (#8551)
    
    For example,
    ```lean
    (prod_assoc% : (Œ± √ó Œ≤) √ó (Œ≥ √ó Œ¥) ‚âÉ Œ± √ó (Œ≤ √ó Œ≥) √ó Œ¥)
    ```
    gives the "obvious" equivalence between `(Œ± √ó Œ≤) √ó (Œ≥ √ó Œ¥)` and `Œ± √ó (Œ≤ √ó Œ≥) √ó Œ¥`.
    
    Special thanks to @kmill for help getting the expected type to work in the elaborator!
    
    
    
    Co-authored-by: Adam Topaz <adamtopaz@users.noreply.github.com>

[33mcommit d0c0a7f4f2aff89c2eb5bec7a922fd9417036bbb[m
Author: Kyle Miller <kmill31415@gmail.com>
Date:   Tue Nov 21 14:35:04 2023 -0800

    Revert "fix: elaborate linarith arguments without errToSorry"
    
    This reverts commit 383ec12856a51cae18f9790f4e66595289b574a6.

[33mcommit 383ec12856a51cae18f9790f4e66595289b574a6[m
Author: Kyle Miller <kmill31415@gmail.com>
Date:   Tue Nov 21 14:32:06 2023 -0800

    fix: elaborate linarith arguments without errToSorry
    
    Also, checks for new metavariables in the elaborated terms, which are almost surely not usable in a reliable way.

[33mcommit 3f12ad8e09a615d33e0d37cf2d59812515303475[m
Author: ClausenCl <ge96wir@mytum.de>
Date:   Tue Nov 21 21:57:01 2023 +0000

    feat: Real Exponential Distribution (#8253)
    
    Introduction of the real-valued exponential PDF and CDF
    
    Co-authored-by: Patrick Massot <patrickmassot@free.fr>
    
    
    
    Co-authored-by: Patrick Massot <patrickmassot@free.fr>
    Co-authored-by: ClausenCl <134412389+ClausenCl@users.noreply.github.com>

[33mcommit 78865785cc687978993565408db099705b299af2[m
Author: Alex Keizer <alex@keizer.dev>
Date:   Tue Nov 21 17:38:19 2023 +0000

    chore: fix `Set` docstring (#8552)
    
    Indented docstring get parsed as a Markdown code block, so we remove the indentation
    
    Co-authored-by: Anne Baanen <Vierkantor@users.noreply.github.com>

[33mcommit 29764c6a4d41cf6f86b7b2ff3181789232927b70[m
Author: Alex Keizer <alex@keizer.dev>
Date:   Tue Nov 21 17:38:18 2023 +0000

    refactor: generalize `Bool.beq_eq_decide_eq` (#8532)
    
    
    This PR generalizes `Bool.beq_eq_decide_eq` to also be applicable for types whose `BEq Œ±` is different from the default instance implied by `DecidableEq Œ±`. An example of such a type is `Nat`.

[33mcommit a098d2715b026791bf300280eac8ff8259e69e2b[m
Author: Tobias Grosser <tobias@grosser.es>
Date:   Tue Nov 21 16:32:56 2023 +0000

    feat: theorems about power of twos (#8547)
    
    These were factored out of #5920 as they seem generally useful.

[33mcommit 3c1483635c3b859e2f910a75705434d116668955[m
Author: Oliver Nash <github@olivernash.org>
Date:   Tue Nov 21 14:17:00 2023 +0000

    feat: base change for Lie modules (#8546)

[33mcommit 366aa49a421213f1ab22157d84299da19895f452[m
Author: Fran√ßois G. Dorais <fgdorais@gmail.com>
Date:   Tue Nov 21 12:27:19 2023 +0000

    chore: bump std4 (#8548)

[33mcommit 81e04e3518080a288dfa9a490c048e08ab890cb0[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Tue Nov 21 08:44:54 2023 +0000

    feat(CategoryTheory): the regular topology is subcanonical (#8529)
    
    We prove that the regular topology on any `Preregular`¬†category is subcanonical.

[33mcommit 7d85f2f487f64bd676ed8a335043c04d7465b298[m
Author: R√©my Degenne <Remydegenne@gmail.com>
Date:   Tue Nov 21 07:51:48 2023 +0000

    feat(Probability): add simp lemmas for kernels (#8497)

[33mcommit 0f2ac91429ceee3ec28a852684dd2c80a8daf277[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Tue Nov 21 07:27:47 2023 +0000

    chore(CategoryTheory): relax assumptions on category for regular sheaf condition (#8514)
    
    The sheaf condition on the regular topology should only assume that effective epis have kernel pairs instead of all pullbacks existing.

[33mcommit 100f5c20062409dd62610535b2b8a1e53c88367e[m
Author: Bhavik Mehta <bhavikmehta8@gmail.com>
Date:   Tue Nov 21 01:12:33 2023 +0000

    chore(Combinatorics): golf and cleanup partitions (#8517)
    
    
    
    Co-authored-by: Bhavik Mehta <bm489@cam.ac.uk>

[33mcommit c1f0c2658d554795737f3994e93161fcf3d52ee5[m
Author: Thomas Zhu <thomas.zhu.sh@hotmail.com>
Date:   Tue Nov 21 00:03:11 2023 +0000

    chore(MeasureTheory/Decomposition): simplify proof of eq_rnDeriv‚ÇÄ (#8537)
    
    Simplify proof of eq_rnDeriv‚ÇÄ using withDensity_eq_iff

[33mcommit f659b7bb3db7c273871cbb8a7ac55c210ab4e69f[m
Author: Fran√ßois G. Dorais <fgdorais@gmail.com>
Date:   Mon Nov 20 23:28:33 2023 +0000

    chore: fix imports (#8538)

[33mcommit 43b4712c74901b669d8c212f8523d4863290c5b0[m
Author: Oliver Nash <github@olivernash.org>
Date:   Mon Nov 20 21:32:33 2023 +0000

    feat: if a Lie algebra has non-degenerate Killing form then its Cartan subalgebras are Abelian (#8430)
    
    Note: the proof (due to Zassenhaus) makes no assumption about the characteristic of the coefficients.

[33mcommit d8fa72809c32fee74f7fef185f7ac0aff8b20eed[m
Author: Alex Keizer <alex@keizer.dev>
Date:   Mon Nov 20 21:32:32 2023 +0000

    docs: improve `Set` documentation (#8320)
    
    Document the fact that the defeq between `Set Œ±` and `Œ± ‚Üí Prop` is an internal implementation detail

[33mcommit d1be80ce5432d585df177976d193ce6dd377ee6f[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Mon Nov 20 20:24:15 2023 +0000

    fix: stop exposing an implicit accessible name in by_cases (#8542)
    
    This makes us use the core implementation of `by_cases`, which is more consistent with other lean 4 tactics.

[33mcommit 9a4ae4a9c08ba44f8b3a9deff5161b2cb47f7631[m
Author: Junyan Xu <junyanxumath@gmail.com>
Date:   Mon Nov 20 19:06:29 2023 +0000

    chore: add some Unique instances (#8500)
    
    The aim is to remove some extraneous Nonempty assumptions in Algebra/DirectLimit.
    
    
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>
    Co-authored-by: Jujian Zhang <jujian.zhang1998@outlook.com>

[33mcommit 2009db69c1211eafea457d1c3902f31370dac23f[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Mon Nov 20 18:03:08 2023 +0000

    chore: add missing hypothesis names to by_cases (#8533)
    
    I've also got a change to make this required, but I'd like to land this first.

[33mcommit d574737a587f577e2f6da5aeaa553b3dd58204c1[m
Author: Mario Carneiro <mcarneir@andrew.cmu.edu>
Date:   Mon Nov 20 17:20:53 2023 +0000

    chore: bump leantar 0.1.8 (#8506)
    
    The latest version of leantar [includes](https://github.com/digama0/leangz/compare/v0.1.7...v0.1.8) the following features and bug fixes:
    
    * Compression for `.hash` files
    * Support for non-GMP bignum (de)compression
    
    This is a backward compatible release, meaning that v0.1.8 can understand .ltar files produced by v0.1.7 and previous versions. So there should not be any hiccups during the transition period.
    
    The important fix is the non-GMP bignum bug: previously, leantar would always compress and decompress olean files as if they contained GMP bignums, but GMP is only enabled on some architectures. The CI machines enable GMP, so compression is not a problem, but decompression happens on user machines of all architectures and this can cause crashes or invalid .olean files on MacOS Arm64, Linux Arm64 and Windows.
    
    Surprisingly, no one has noticed this, and I believe the reason is because mathlib has never contained a numeric literal of size 2^64 or larger. Lean [has one](https://github.com/leanprover/lean4/blob/65d08fdcdd9fb825b588660cce4e082a758954fa/src/Init/Prelude.lean#L1972), but we don't ship oleans from the Init package as these come with the toolchain.
    
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>

[33mcommit 1fe92bf767370445006e0ba45c455a8e9e07dc04[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Mon Nov 20 16:56:57 2023 +0000

    feat(CategoryTheory): finite-product preserving presheaves are sheaves for extensive presieves (#7949)
    
    We prove that finite-product preserving presheaves on extensive categories are sheaves for `extensive` presieves.
    
    -  [x] depends on: #7804
    
    Co-authored-by: Riccardo Brasca @riccardobrasca [riccardo.brasca@gmail.com](mailto:riccardo.brasca@gmail.com)
    Co-authored-by: Filippo A E Nuccio @faenuccio [filippo.nuccio@univ-st-etienne.fr](mailto:filippo.nuccio@univ-st-etienne.fr)

[33mcommit 51d2ec9a6f2d053820498244c1c1255712d317f7[m
Author: David Loeffler <d.loeffler.01@cantab.net>
Date:   Mon Nov 20 16:11:19 2023 +0000

    feat(Probability/BorelCantelli): clarify documentation (#8527)
    
    Some of the students from my Lean seminar got quite confused trying to find the Borel-Cantelli lemmas in Mathlib, because there is a file `Probability.Martingale.BorelCantelli` but neither of the Borel-Cantelli lemmas are in it! This PR adds cross-links between the documentation strings for the various files concerned. (There are no changes to actual code.)

[33mcommit 56336bf0c68d9932fcf2c01c48e00382b1357dc4[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Mon Nov 20 15:07:04 2023 +0000

    feat(Condensed): definition of solid abelian groups (#8238)
    
    We define solid abelian groups.

[33mcommit 1a0131642c3b466586c8a9045d5e2c3c24672b19[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Mon Nov 20 12:33:30 2023 +0000

    fix(CategoryTheory): remove unnecessary noncomputable modifier (#8528)
    
    The `EffectiveEpiStruct`¬†for a `RegularEpi` turned out to become computable after applying suggestions from code review.

[33mcommit a9ef2c361514a045832816e40c1d8e854d550b00[m
Author: Jujian Zhang <jujian.zhang1998@outlook.com>
Date:   Mon Nov 20 11:31:55 2023 +0000

    feat(RingTheory/Ideal/Basic): an ideal is prime if it is maximally disjoint from a submonoid (#7460)

[33mcommit 727562596474ad7ecb60549f8b6f77b4510dd917[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Mon Nov 20 10:21:53 2023 +0000

    feat: add Algebra.coe_trace_int (#8513)
    
    From flt-regular.

[33mcommit c21c11f1d548f793e899c437ba114860432f590f[m
Author: Scott Morrison <scott@tqft.net>
Date:   Mon Nov 20 10:21:52 2023 +0000

    chore: exact? runs nonspecific lemmas too (#8459)
    
    Previously, `exact?` has only indexed lemmas with a "specific" `DiscrTree` key (this meant: anything except `#[star]` or `#[Eq, star, star, star]`).
    
    This means that it wouldn't apply some very general lemmas, e.g. `le_antisymm`.
    
    The performance improvement here is pretty minor: the `DiscrTree` returns the more specific matches first, so we only attempt to apply the nonspecific keys last (i.e. if we would otherwise have already failed).
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 01a486f7f7d50fe8951ba4fedf85c9607ea65a1f[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Mon Nov 20 10:21:51 2023 +0000

    chore(LinearAlgebra/AffineSpace/AffineSubspace): trivial affine morphisms (#8434)
    
    We already have the `LinearEquiv` versions of these.
    This also copies the lemmas around the definition

[33mcommit cf21ac04014fcbc2d8c5954e4c869f0b014e0793[m
Author: Scott Morrison <scott@tqft.net>
Date:   Mon Nov 20 09:57:50 2023 +0000

    chore: bump Std (#8526)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>
    Co-authored-by: Mauricio Collares <mauricio@collares.org>

[33mcommit 0f76a69bf023c58dfd2201fcd61d48a4e6d32452[m
Author: Scott Morrison <scott@tqft.net>
Date:   Mon Nov 20 08:02:25 2023 +0000

    chore: keep fewer toolchains on the CI runners (#8525)
    
    The CI runner machines are continually running out of disk space. Really, we just need more space: I don't see any sign it is growing out of control.
    
    This PR slims down the toolchain directory a bit more, to give us some more slack.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 9d8dfde66a50fc6990c619f6adfbb2bb01b35277[m
Author: Scott Morrison <scott@tqft.net>
Date:   Mon Nov 20 08:02:24 2023 +0000

    chore: weaken norm_num test to cope with slow multiplication on non-GMP systems (#8523)
    
    Per zulip [discussion](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/.6010.5E40000000.20.3D.2010.5E40000000.20.3A.3D.20by.20norm_num.60/near/402795350).
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 12dd16acbd6e148e8bcc4d44b8e13bda7e32581d[m
Author: David Loeffler <d.loeffler.01@cantab.net>
Date:   Mon Nov 20 07:39:35 2023 +0000

    feat(Order/LiminfLimsup): lemmas on set liminf/sup (#8524)
    
    Add two simple lemmas identifying "liminf" of a family of sets along a filter as "things which are eventually members", and "limsup" as "things which are frequently members".

[33mcommit 28f19fefba987995ce6af943bd6c40448201c9f7[m
Author: Scott Morrison <scott@tqft.net>
Date:   Mon Nov 20 04:04:38 2023 +0000

    chore: bump Std (#8505)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit fd32573432d8563936bc5f2aa462c28cd10abb63[m
Author: Scott Morrison <scott@tqft.net>
Date:   Mon Nov 20 03:02:35 2023 +0000

    chore: silence tests, and enforce this (#8438)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 8b144faa8c4b644702f36698d69c6d76b21c8d1f[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Mon Nov 20 01:56:27 2023 +0000

    refactor(Logic/Unique): remove dependency on `Fin` (#8510)
    
    `Unique` should be available earlier than results about `Fin n`, by virtue of being a very basic logic typeclass with no dependencies on Nat or algebra.
    
    This also generalizes some of the moved instances and lemmas.
    There are no new declarations in this PR, only renames of existing ones.

[33mcommit d98fa2bf9cf1916939d91b3771f7d43dfacaa51f[m
Author: Scott Morrison <scott@tqft.net>
Date:   Mon Nov 20 00:38:19 2023 +0000

    chore: rewrite lakefile.lean (#8456)
    
    Reorganize lakefile.lean, and remove unnecessary stuff.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit c6979569edc545f999b82d8a833b190c918aec2e[m
Author: Richard Copley <buster@buster.me.uk>
Date:   Sun Nov 19 22:31:37 2023 +0000

    Extend RingTheory.Flat.iff_rTensor_injective to all ideals (#8494)
    
    Extend `RingTheory.Flat.iff_rTensor_injective` to all ideals
    
    Using an elementary argument after Dummit and Foote (2004, Ex. 10.25)

[33mcommit b5586ed7797c0efb81427ebf7d2412e65959dbf6[m
Author: Scott Morrison <scott@tqft.net>
Date:   Sun Nov 19 21:13:39 2023 +0000

    chore: faster help text from 'lake exe cache' (#8454)
    
    Don't traverse the project when the user just wants help text.
    
    Reduces runtime of `lake exe cache` (with pre-built binary) from 600ms to 200ms.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 34ab8d46e2122dd9a5600e735c01237adb448b6a[m
Author: Scott Morrison <scott@tqft.net>
Date:   Sun Nov 19 20:53:09 2023 +0000

    chore: build ProofWidgets before tests (#8416)
    
    After leanprover/lean4#2766 this becomes critical.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 693fd79515903b10b1d31f10dccfc49e633cf7ee[m
Author: Scott Morrison <scott@tqft.net>
Date:   Sun Nov 19 20:53:08 2023 +0000

    chore: replace `exact_mod_cast` tactic with `mod_cast` elaborator where possible (#8404)
    
    We still have the `exact_mod_cast` tactic, used in a few places, which somehow (?) works a little bit harder to prevent the expected type influencing the elaboration of the term. I would like to get to the bottom of this, and it will be easier once the only usages of `exact_mod_cast` are the ones that don't work using the term elaborator by itself.
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 7b0cbe23464242c001ac2a2c8c8744eb6d661c6f[m
Author: Scott Morrison <scott@tqft.net>
Date:   Sun Nov 19 18:46:11 2023 +0000

    chore: use Std's runLinter (#8461)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 778f663aa67aea9581760d0a15bf9522ad0d32aa[m
Author: David Renshaw <dwrenshaw@gmail.com>
Date:   Sun Nov 19 15:17:30 2023 +0000

    chore: restore simpler code in foldrRecOn and foldlRecOn (#8508)
    
    
    #1720 made `List.rec` computable and therefore made it possible to restore the simpler versions of
    `foldrRecOn` and `foldlRecOn`.

[33mcommit 35f9ee30d7d638e26f3206412afa26ed2a2474e2[m
Author: Thomas Zhu <thomas.zhu.sh@hotmail.com>
Date:   Sun Nov 19 10:31:56 2023 +0000

    chore: typo in `MeasurableSet[m]` docstring (#8502)

[33mcommit 55ad9df6ccad403a0bc9dcc99885f4d2c2654742[m
Author: David Renshaw <dwrenshaw@gmail.com>
Date:   Sun Nov 19 10:31:55 2023 +0000

    chore: address porting note in Archive/Imo/Imo1994Q1 -- linarith works now (#8496)
    
    According to `git bisect`, #7905 is what made the single `linarith` call work here.

[33mcommit 6f853a60d7229aa1ea7c46baae02af3c910e0c16[m
Author: Xavier Roblot <46200072+xroblot@users.noreply.github.com>
Date:   Sun Nov 19 10:31:54 2023 +0000

    feat: move the lemma Algebra.coe_norm_int (#8481)
    
    The following lemma:
    ```lean
    theorem Algebra.coe_norm_int {K : Type*} [Field K] [NumberField K] (x : ùìû K) :
        Algebra.norm ‚Ñ§ x = Algebra.norm ‚Ñö (x : K)
    ```
    is currently in `NumberField.Units` but it belongs to  `NumberField.Norm`

[33mcommit e49b5d07827a23a56df1e08287952e8e11572efa[m
Author: Michael Stoll <Michael.Stoll@uni-bayreuth.de>
Date:   Sun Nov 19 10:08:45 2023 +0000

    feat(NumberTheory/EulerProduct): general statements about Euler products (#8410)
    
    This adds a folder `NumberTheory.EulerProduct` and within it the file `Basic.lean`, which contains some general results on Euler products (for functions from the naturals into a complete normed field, with suitable properties).

[33mcommit de1f917bc6bd19d68130129bf5aa6edd17a215cb[m
Author: Scott Morrison <scott@tqft.net>
Date:   Sun Nov 19 05:23:04 2023 +0000

    chore: fix branches for dependencies (#8504)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit c8d9ed0f3c662ae9a4b4d0eaf80656983857b00b[m
Author: Bhavik Mehta <bhavikmehta8@gmail.com>
Date:   Sun Nov 19 01:23:35 2023 +0000

    feat(Data/Nat): add Nat.div_pow (#8327)
    
    Adds the missing lemma Nat.div_pow, which seemed to be missing (at least, `exact?%` couldn't find it with all of Mathlib imported). Also moves `div_mul_div_comm` higher in the hierarchy (and golf) because it doesn't need the ordered semiring instance, cf the docstring of `Data/Nat/Order/Basic`.
    
    
    
    Co-authored-by: Bhavik Mehta <bm489@cam.ac.uk>

[33mcommit 5d29e6c39cf879fff46b1896890ea6dce91f1377[m
Author: David Renshaw <dwrenshaw@gmail.com>
Date:   Sat Nov 18 22:29:22 2023 +0000

    refactor: fold isStrictIntComparison into mkNonstrictIntProof in Linarith.Preprocessing (#8488)
    
    Implements the refactor proposed in https://github.com/leanprover-community/mathlib4/pull/8310#issuecomment-1817330246.

[33mcommit 1d2d1d0e81871ec74a8df87cca0c18aafeeb1c40[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sat Nov 18 21:30:09 2023 +0000

    feat(NormedSpace/FiniteDimension): add `IsBigO.comp_summable` (#8359)
    
    Add `Asymptotics.IsBigO.comp_summable`.

[33mcommit cfed43f7cf4cd2ea4bd3ebdd5b931ffde0e0b4e4[m
Author: Scott Morrison <scott@tqft.net>
Date:   Sat Nov 18 16:07:41 2023 +0000

    feat: abel_nf fails if it makes no progress (#8487)
    
    As requested on [zulip](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/abel.20and.20progress/near/402762053).
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit d78d69daa5808d98cfe7711c7834aee6a67c25e7[m
Author: Scott Morrison <scott@tqft.net>
Date:   Sat Nov 18 13:18:23 2023 +0000

    chore: check exact? is fixed by leanprover/std4#368 (#8458)
    
    Adds a test for an `exact?` failure reported on [zulip](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/apply.3F.20failure/near/402534407)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 8759327f54e91545b342494a9338dd9a5c196b5b[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Sat Nov 18 10:10:57 2023 +0000

    feat: some lemmas about UniqueFactorizationMonoids (#8486)
    
    From flt-regular.

[33mcommit af527f21a4f6719bd803d859c899d9f5fae38431[m
Author: Junyan Xu <junyanxumath@gmail.com>
Date:   Sat Nov 18 09:34:25 2023 +0000

    chore: make fullyFaithfulReflects(Co)Limits instances (#8462)
    
    
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>

[33mcommit b9e2e6567d11cc8a870b2e187d01aa583ecad9b9[m
Author: Kyle Miller <kmill31415@gmail.com>
Date:   Sat Nov 18 03:56:53 2023 +0000

    feat: remove `DecidableEq` argument from `Finset.sym2` (#8211)

[33mcommit 5e4a27b17e3cd08ee44ab467956809ad85adac31[m
Author: David Renshaw <dwrenshaw@gmail.com>
Date:   Sat Nov 18 03:04:42 2023 +0000

    fix: add some missing whnfR in Linarith/Preprocess (#8310)
    
    Fixes this example reported on zulip:
    ```
    import Mathlib.Tactic.Linarith
    --set_option pp.raw true
    --set_option trace.linarith true
    example (k : ‚Ñ§) (h : k < 1) (h‚ÇÅ : -1 < k)
        : k = 0 := by
      -- linarith -- works
      change -1 < _ at h‚ÇÅ
      -- linarith -- fails!
      have hk : k = 0 := by
        linarith
      exact hk
    ```
    
    See https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/linarith.20fails.20in.20a.20simple.20example/near/401267407.
    
    In the failure case, when the strengthenStrictInt preprocessor does inferType on the h‚ÇÅ : -1 < k hypothesis, it sees it as an mvar, and therefore the match on `getAppFnArgs` fails.

[33mcommit b0e957dde04ef7c6990a222e5a6fa5c2179a8fc8[m
Author: Kyle Miller <kmill31415@gmail.com>
Date:   Sat Nov 18 01:09:04 2023 +0000

    fix: remove remaining `^` fixes (#8463)

[33mcommit b6646ed18d484fd9cfc0bc2c2b195a4fcfbddb05[m
Author: Junyan Xu <junyanxumath@gmail.com>
Date:   Sat Nov 18 00:38:30 2023 +0000

    feat: IsNormalClosure predicate (#8418)
    
    Main changes are to the file NormalClosure:
    
    + Introduce predicate `IsNormalClosure` to characterize normal closures L/F of a field extension K/F by the conditions that every minimal polynomial of an element of K over F splits in L, and that L is generated by roots of such polynomials. (When K/F is not necessarily algebraic, the conditions actually says L/F is a normal closure of the algebraic closure of F in K over F.
    
    + `IsNormalClosure.normal`: a normal closure is always normal.
    
    + `isNormalClosure_iff `: if K/F is algebraic, the "generated by roots" condition in IsNormalClosure can be replaced by "generated by images of embeddings". To prove it, we split out the two inclusions in `restrictScalars_eq_iSup_adjoin` and golf its proof. `restrictScalars_eq_iSup_adjoin` is renamed to `normalClosure_eq_iSup_adjoin` as it has nothing to do with `restrictScalars`.
    
    + `IsNormalClosure.lift`: a normal closure of K/F embeds into any L/F such that the minpolys of K/F splits in L/F.
    
    + `IsNormalClosure.equiv`: normal closures are unique up to F-algebra isomorphisms.
    
    + `isNormalClosure_normalClosure`: `normalClosure F K L` is a valid normal closure if K/F is algebraic and all minpolys of K/F splits in L/F; in particular, if there is at least one F-embedding of K into L, and L/F is normal.
    
    + `Algebra.IsAlgebraic.cardinal_mk_algHom_le_of_splits`: if every minpoly of `K/F` splits in `L/F`, then `L` is maximal w.r.t. `F`-embeddings of `K`, in the sense that `K ‚Üí‚Çê[F] L` achieves maximal cardinality.
    
    In the file Normal:
    
    + `splits_of_mem_adjoin`: If a set of algebraic elements in a field extension `K/F` have minimal polynomials that split in another extension `L/F`, then all minimal polynomials in the intermediate field generated by the set also split in `L/F`. This is in preparation for connecting `IsNormalClosure` and `IsSplittingField`.
    
    In the file IntermediateField:
    
    + Add `comap` and show it forms a Galois connection with `map`.
    
    In the file FieldTheory/Adjoin:
    
    + Add `map_sup/iSup` lemmas that follow from the Galois connection, plus an additional convenience lemma.
    
    In the file RingTheory/Algebraic: add a lemma `AlgHom.isAlgebraic_of_injective`.
    
    Co-authored-by: Jz Pan <acme_pjz@hotmail.com>
    
    
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>

[33mcommit 0847db5433fdbb1d19479b86ec43038191b2745b[m
Author: Pol'tta / Miyahara K≈ç <pol_tta@outlook.jp>
Date:   Fri Nov 17 21:01:04 2023 +0000

    feat: convenient meta declarations (#7519)
    
    These declarations are picked from #5938.
    
    
    
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>
    Co-authored-by: Pol'tta / Miyahara K≈ç <52843868+Komyyy@users.noreply.github.com>
    Co-authored-by: Kyle Miller <kmill31415@gmail.com>

[33mcommit b1febe509882bc82b2a57889876c87b23243547d[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Fri Nov 17 19:26:15 2023 +0000

    refactor: rename `Submodule.ofLe` to `Submodule.inclusion` (#8470)
    
    This matches `Set.inclusion`, `Subring.inclusion`, `Subalgebra.inclusion`, etc.
    
    Also renames the `homOfLe` spellings in `Algebra/Lie` to match.
    
    Note that we leave `LieSubalgebra.ofLe`, as this is a completely different statement!
    
    As requested by @alreadydone.

[33mcommit 05ad6c6d5e122ac4f6b3929b49039a0c1a646bab[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Fri Nov 17 18:20:48 2023 +0000

    feat: add some Multiset.Nodup lemmas (#8464)
    
    Based on results from flt-regular.
    
    
    
    
    Co-authored-by: Andrew Yang <36414270+erdOne@users.noreply.github.com>

[33mcommit 92bfd3b2326aa002705452daf19026ecf3a30ead[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Fri Nov 17 16:12:02 2023 +0000

    fix(LinearAlgebra/AffineSpace/Independent): fix case of `Simplex.Independent` (#8419)
    
    
    This holds a proof not a `Prop`, so should be lowercase.

[33mcommit f8794a02c68f154bbda8c213dcf859e52636e957[m
Author: Scott Morrison <scott@tqft.net>
Date:   Fri Nov 17 15:04:20 2023 +0000

    chore: bump Std (#8474)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit e4e3f2f5db7690e88e6590e6038dca8111470c8d[m
Author: Scott Morrison <scott@tqft.net>
Date:   Fri Nov 17 14:37:26 2023 +0000

    chore: exp -> NormedSpace.exp (#8436)
    
    Per discussion at [zulip](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Real.2Eexp/near/401485920)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 19210bcc58535416f6009c53089eeab4ef608b4d[m
Author: Mauricio Collares <mauricio@collares.org>
Date:   Fri Nov 17 14:04:08 2023 +0000

    fix: new build directory location in benchmark script (#8467)

[33mcommit 03c06bef981fa28afd5e14eee55e36b0f5a5f1b2[m
Author: Martin Dvo≈ô√°k <martin.dvorak@matfyz.cz>
Date:   Fri Nov 17 13:15:53 2023 +0000

    docs (Order/GaloisConnection): typo (#8447)

[33mcommit ac1ea4897396911787a5473729ad476d3bde6360[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Fri Nov 17 13:15:51 2023 +0000

    chore(Order): replace `Top` and `Bot` ancestors with `OrderTop` and `OrderBot` (#8446)
    
    Co-authored-by: negiizhao <egresf@gmail.com>

[33mcommit c02d0cecf38bfdfb39aded392dd1d70959487c10[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Fri Nov 17 13:15:50 2023 +0000

    fix(Condensed): remove a name that doesn't exist anymore from a docstring (#8442)

[33mcommit 8dba065d4a693e23ed06348923cd5effc765cb75[m
Author: Junyan Xu <junyanxumath@gmail.com>
Date:   Fri Nov 17 13:15:49 2023 +0000

    chore(IntegralClosure): noncommutative generalizations and golfs (#8406)
    
    [Zulip](https://leanprover.zulipchat.com/#narrow/stream/144837-PR-reviews/topic/.238406.20IsIntegral.20dot.20notation.2C.20noncomm.20generalization.20.26.20golf/near/402028285)
    
    Initially I just wanted to add more dot notations for IsIntegral and IsAlgebraic (done in #8437); then I noticed near-duplicates
    [Algebra.isIntegral_of_finite](https://leanprover-community.github.io/mathlib4_docs/Mathlib/RingTheory/IntegralClosure.html#Algebra.isIntegral_of_finite) `[Field R] [Ring A]` and
    [RingHom.IsIntegral.of_finite](https://leanprover-community.github.io/mathlib4_docs/Mathlib/RingTheory/IntegralClosure.html#RingHom.IsIntegral.of_finite) `[CommRing R] [CommRing A]`
    so I went on to generalize the latter to cover the former, and generalized everything in the IntegralClosure file to the noncommutative case whenever possible.
    
    In the process I noticed more golfs, which result in this PR. Most notably, [isIntegral_of_mem_of_FG](https://leanprover-community.github.io/mathlib4_docs/Mathlib/RingTheory/IntegralClosure.html#isIntegral_of_mem_of_FG) is now proven using [Cayley-Hamilton](https://math.stackexchange.com/a/2494433/12932) and doesn't depend on the Noetherian case [isIntegral_of_noetherian](https://leanprover-community.github.io/mathlib4_docs/Mathlib/RingTheory/IntegralClosure.html#isIntegral_of_noetherian); the latter is now proven using the former. In total the golfs makes mathlib 227 lines leaner (+487 -714).
    
    
    The main changes are in the single file [RingTheory/IntegralClosure](https://github.com/leanprover-community/mathlib4/pull/8406/files#diff-426d60d7e9edc9e20379127612410ad633864c2d5a9cd001729d128f0993b00e):
    
    + Change the definition of `Algebra.IsIntegral` which makes it unfold to `IsIntegral` rather than `RingHom.IsIntegralElem` because the former has much more APIs.
    
    + Fix lemma names involving `is_integral` which are actually about `IsIntegralElem`:
    `RingHom.is_integral_map` ‚Üí `RingHom.isIntegralElem_map`
    `RingHom.is_integral_of_mem_closure` ‚Üí `RingHom.IsIntegralElem.of_mem_closure`
    `RingHom.is_integral_zero/one` ‚Üí `RingHom.isIntegralElem_zero/one`
    `RingHom.is_integral_add/neg/sub/mul/of_mul_unit` ‚Üí `RingHom.IsIntegralElem.add/neg/sub/mul/of_mul_unit`
    
    + Add a lemma `Algebra.IsIntegral.of_injective`.
    
    + Move `isIntegral_of_(submodule_)noetherian` down and golf them.
    
    + Remove `(Algebra.)isIntegral_of_finite` that work only over fields, in favor of the more general `(Algebra.)isIntegral.of_finite`.
    
    + Merge duplicate lemmas `isIntegral_of_isScalarTower` and `isIntegral_tower_top_of_isIntegral` into `IsIntegral.tower_top`.
    
    + Golf `IsIntegral.of_mem_of_fg` by first proving `IsIntegral.of_finite` using Cayley-Hamilton.
    
    + Add a docstring mentioning the Kurosh problem at `Algebra.IsIntegral.finite`. The negative solution to the problem means the theorem doesn't generalize to noncommutative algebras.
    
    + Golf `IsIntegral.tmul` and `isField_of_isIntegral_of_isField(')`.
    
    + Combine `isIntegral_trans_aux` into `isIntegral_trans` and golf.
    
    + Add `Algebra` namespace to `isIntegral_sup`.
    
    + rename lemmas for dot notation:
    `RingHom.isIntegral_trans` ‚Üí `RingHom.IsIntegral.trans`
    `RingHom.isIntegral_quotient/tower_bot/top_of_isIntegral` ‚Üí `RingHom.IsIntegral.quotient/tower_bot/top`
    `isIntegral_of_mem_closure'` ‚Üí `IsIntegral.of_mem_closure'` (and the '' version)
    `isIntegral_of_surjective` ‚Üí `Algebra.isIntegral_of_surjective`
    
    The next changed file is RingTheory/Algebraic:
    
    + Rename:
    `of_larger_base` ‚Üí `tower_top` (for consistency with `IsIntegral`)
    `Algebra.isAlgebraic_of_finite` ‚Üí `Algebra.IsAlgebraic.of_finite`
    `Algebra.isAlgebraic_trans` ‚Üí `Algebra.IsAlgebraic.trans`
    
    + Add new lemmas`Algebra.IsIntegral.isAlgebraic`, `isAlgebraic_algHom_iff`, and `Algebra.IsAlgebraic.of_injective` to streamline some proofs.
    
    
    The generalization from CommRing to Ring requires an additional lemma `scaleRoots_eval‚ÇÇ_mul_of_commute` in Polynomial/ScaleRoots.
    
    A lemma `Algebra.lmul_injective` is added to Algebra/Bilinear (in order to golf the proof of `IsIntegral.of_mem_of_fg`).
    
    In all other files, I merely fix the changed names, or use newly available dot notations.
    
    
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>

[33mcommit f9b4adb75a76f58c9e021e15bf9956af91f5410f[m
Author: Johan Commelin <johan@commelin.net>
Date:   Fri Nov 17 13:15:48 2023 +0000

    chore(Data/Nat/Choose/Multinomial): Fix typo in module docstring (#8390)

[33mcommit 3cc786ff8f6773f55a46d2b7587e70ebf0dcb5b9[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Fri Nov 17 13:15:47 2023 +0000

    refactor(Algebra/DualNumber): generalize the universal property to non-commutative rings (#7934)
    
    The current universal properties of `TrivSqZeroExt` and `DualNumber` work only when the underlying ring is commutative.
    This is not the case for things like the dual quaternions.
    
    This generalizes both sets of results to the non-commutative case.
    Unfortunately the new `TrivSqZeroExt` version is rather involved, so this keeps the old statement as a special case.
    
    The new `DualNumber` version is less bad, so I just discarded the commutative special case.
    
    For dual numbers, the generalization is from `R[Œµ] ‚Üí‚Çê[R] B` to `A[Œµ] ‚Üí‚Çê[R] B`, where `R` is commutative but `A` may not be.
    Some variable names had to be shuffled to make the new statement look nice.

[33mcommit b70c910eff3357c061decce77187ad9e39770a86[m
Author: Scott Morrison <scott@tqft.net>
Date:   Fri Nov 17 12:55:02 2023 +0000

    chore: use lean4checker matching the toolchain (#8471)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 7c1536fcca24eb69e3d3fe2ed8909f9339c21fb0[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Fri Nov 17 11:02:18 2023 +0000

    feat: add and use not_irreducible_pow (#8452)
    
    Also rename `pow_not_prime` theorems to match.
    
    `not_irreducible_pow` is extracted from flt-regular.

[33mcommit 414c0c824ccd42e361a311db612215f074d831db[m
Author: Xavier Roblot <46200072+xroblot@users.noreply.github.com>
Date:   Fri Nov 17 11:02:17 2023 +0000

    feat: Add Set.Nonempty.eq_zero and variations (#8423)
    
    See [the Zulip thread](https://leanprover.zulipchat.com/#narrow/stream/217875-Is-there-code-for-X.3F/topic/Subset.20equal.20.7B0.7D.20of.20Subsingleton/near/402193512)
    
    Co-authored-by: Ruben Van de Velde <ruben.vandevelde+github@gmail.com>
    
    Co-authored-by: Junyan Xu <junyanxumath@gmail.com>

[33mcommit e7f5d81450d6990ba9e98dcc0b6bcd3c059159bf[m
Author: Floris van Doorn <fpvdoorn@gmail.com>
Date:   Fri Nov 17 11:02:16 2023 +0000

    fix: some cleanup in `Nat.Factorial.Basic` (#8422)
    
    * Also remove some unimportant porting notes in `Order.Concept`.

[33mcommit 909a2b4acca95430dc47b721044bfb6d091c4af7[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Fri Nov 17 10:38:43 2023 +0000

    chore: fix double section (#8466)
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit f8feee933fa5ead88b80fe7658305714788eddca[m
Author: Scott Morrison <scott@tqft.net>
Date:   Fri Nov 17 08:38:36 2023 +0000

    chore: bump Std (#8460)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>
    Co-authored-by: Komyyy <pol_tta@outlook.jp>

[33mcommit 40b64f797572a7615ba4553a28d3d6ee5049aa3b[m
Author: Scott Morrison <scott@tqft.net>
Date:   Fri Nov 17 05:53:46 2023 +0000

    chore: bump to v4.3.0-rc2 (#8366)
    
    # PR contents
    
    This is the supremum of
    
    - #8284
    - #8056
    - #8023
    - #8332
    - #8226 (already approved)
    - #7834 (already approved)
    
    along with some minor fixes from failures on nightly-testing as Mathlib `master` is merged into it.
    
    Note that some PRs for changes that are already compatible with the current toolchain and will be necessary have already been split out: #8380.
    
    I am hopeful that in future we will be able to progressively merge adaptation PRs into a `bump/v4.X.0` branch, so we never end up with a "big merge" like this. However one of these adaptation PRs (#8056) predates my new scheme for combined CI, and it wasn't possible to keep that PR viable in the meantime.
    
    # Lean PRs involved in this bump
    
    In particular this includes adjustments for the Lean PRs
    
    * leanprover/lean4#2778
    * leanprover/lean4#2790
    * leanprover/lean4#2783
    * leanprover/lean4#2825
    * leanprover/lean4#2722
    
    ## leanprover/lean4#2778
    
    We can get rid of all the
    ```
    local macro_rules | `($x ^ $y) => `(HPow.hPow $x $y) -- Porting note: See issue lean4#2220
    ```
    macros across Mathlib (and in any projects that want to write natural number powers of reals).
    
    ## leanprover/lean4#2722
    
    Changes the default behaviour of `simp` to `(config := {decide := false})`. This makes `simp` (and consequentially `norm_num`) less powerful, but also more consistent, and less likely to blow up in long failures. This requires a variety of changes: changing some previously by `simp` or `norm_num` to `decide` or `rfl`, or adding `(config := {decide := true})`.
    
    ## leanprover/lean4#2783
    
    This changed the behaviour of `simp` so that `simp [f]` will only unfold "fully applied" occurrences of `f`. The old behaviour can be recovered with `simp (config := { unfoldPartialApp := true })`. We may in future add a syntax for this, e.g. `simp [!f]`; please provide feedback! In the meantime, we have made the following changes:
    * switching to using explicit lemmas that have the intended level of application
    * `(config := { unfoldPartialApp := true })` in some places, to recover the old behaviour
    * Using `@[eqns]` to manually adjust the equation lemmas for a particular definition, recovering the old behaviour just for that definition. See #8371, where we do this for `Function.comp` and `Function.flip`.
    
    This change in Lean may require further changes down the line (e.g. adding the `!f` syntax, and/or upstreaming the special treatment for `Function.comp` and `Function.flip`, and/or removing this special treatment). Please keep an open and skeptical mind about these changes!
    
    
    
    Co-authored-by: leanprover-community-mathlib4-bot <leanprover-community-mathlib4-bot@users.noreply.github.com>
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>
    Co-authored-by: Mauricio Collares <mauricio@collares.org>

[33mcommit a2ca43e594f2f3d1ccbb2cf178fd5800abc61321[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Fri Nov 17 00:15:30 2023 +0000

    refactor(CategoryTheory): simplify the proof of the characterisation of regular sheaves using the new arrows API (#8443)

[33mcommit c81061b3f8b4a9abec557ca44b5428eaa2a7098b[m
Author: Michael Stoll <Michael.Stoll@uni-bayreuth.de>
Date:   Thu Nov 16 23:07:20 2023 +0000

    feat: add lemmas on Complex.arg (x * y) and Complex.log (x * y) (#8346)
    
    This adds lemmas as in the title (plus one for `arg (x * r)` with real `r`):
    ```lean
    lemma arg_mul_eq_add_arg_iff {x y : ‚ÑÇ} (hx‚ÇÄ : x ‚â† 0) (hy‚ÇÄ : y ‚â† 0) :
        (x * y).arg = x.arg + y.arg ‚Üî arg x + arg y ‚àà Set.Ioc (-œÄ) œÄ
    
    lemma arg_mul {x y : ‚ÑÇ} (hx‚ÇÄ : x ‚â† 0) (hx‚ÇÅ : -œÄ / 2 < x.arg) (hx‚ÇÇ : x.arg ‚â§ œÄ / 2)
        (hy‚ÇÄ : y ‚â† 0) (hy‚ÇÅ : -œÄ / 2 < y.arg) (hy‚ÇÇ : y.arg ‚â§ œÄ / 2) :
        (x * y).arg = x.arg + y.arg
    
    lemma log_mul_eq_add_log_iff {x y : ‚ÑÇ} (hx‚ÇÄ : x ‚â† 0) (hy‚ÇÄ : y ‚â† 0) :
        log (x * y) = log x + log y ‚Üî arg x + arg y ‚àà Set.Ioc (-œÄ) œÄ
    
    lemma log_mul {x y : ‚ÑÇ} (hx‚ÇÄ : x ‚â† 0) (hx‚ÇÅ : -œÄ / 2 < x.arg) (hx‚ÇÇ : x.arg ‚â§ œÄ / 2)
        (hy‚ÇÄ : y ‚â† 0) (hy‚ÇÅ : -œÄ / 2 < y.arg) (hy‚ÇÇ : y.arg ‚â§ œÄ / 2) :
        (x * y).log = x.log + y.log
    ```
    See [here](https://leanprover.zulipchat.com/#narrow/stream/217875-Is-there-code-for-X.3F/topic/log.20.28x*y.29.20.3D.20log.20x.20.2B.20log.20y.20for.20complex.20numbers/near/401233495) on Zulip.

[33mcommit 79da87bb1a1704f74fe27a47ba592e97c8f28daa[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Thu Nov 16 23:07:19 2023 +0000

    fix: remove references to non-heterogenous operators in theorem statements (#8086)
    
    Some of these are likely porting errors.
    Statements should always be about the heterogenous versions because these are the ones with notation.
    
    For places where we are abusing defeq, this debuts the trick of using `(by exact a : B) = (by exact a1) + (by exact b2)` to ensure the `=` and `+` are typed as `B` instead of `A`.

[33mcommit 59a1489e7d5529e1575a847af7280cc61e21430f[m
Author: Mario Carneiro <mcarneir@andrew.cmu.edu>
Date:   Thu Nov 16 21:53:44 2023 +0000

    fix: make `lake exe cache get` in post-update hook conditional (#8448)
    
    This is required for projects that want to run `lake update` without `lake exe cache get`, until `lake` gets the ability to turn off post-update hooks.
    
    
    
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>

[33mcommit 86d828e0305c94463d23ee258ee83b3bc13877ee[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Thu Nov 16 20:59:43 2023 +0000

    feat(Condensed): adjunctions between categories of condensed objects (#8210)
    
    
    Creates the file `Condensed/Adjunctions`. For now there is only the free-forgetful adjunction for condensed sets/abelian groups, but there are others on the to-do list.

[33mcommit 276f2a37c69f125e33f41b714195146d4cfe75cc[m
Author: Mario Carneiro <mcarneir@andrew.cmu.edu>
Date:   Thu Nov 16 19:44:40 2023 +0000

    fix: `have` should check that the type is a type (#8445)
    
    As [reported on Zulip](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/bug.20in.20mathlib's.20have.20extension/near/402472594).
    
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>

[33mcommit 5e9b46eda53a04cdc934ee46d5f72267d3a5bd0d[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Thu Nov 16 19:44:39 2023 +0000

    style: cleanup by putting `by` on the same line as `:=` (#8407)
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 9b25884bb958df310c7581774a2e586ac0d8cb0a[m
Author: Patrick Massot <patrickmassot@free.fr>
Date:   Thu Nov 16 18:34:57 2023 +0000

    feat: local context selection in conv? widget (#8217)

[33mcommit 0c72655acc79b6e50b2007d88f3e8ddc6eddebcb[m
Author: Michael Stoll <Michael.Stoll@uni-bayreuth.de>
Date:   Thu Nov 16 18:34:56 2023 +0000

    feat: add `Trans` instance for List.Perm and a lemma on `List`s (#8189)
    
    This PR adds
    
    - a lemma `List.count_filter_add_count_filter` in `Data.List.Count`
    - an instance `Trans (@List.Perm Œ±) (@List.Perm Œ±) (@List.Perm Œ±)` to allow using permutation equivalence of `Lists` in a `calc` block in `Data.List.Perm`
    
    See [here on Zulip](https://leanprover.zulipchat.com/#narrow/stream/217875-Is-there-code-for-X.3F/topic/Struggling.20with.20List.2Efilter/near/400293835).
    
    
    
    Co-authored-by: Michael Stoll <99838730+MichaelStollBayreuth@users.noreply.github.com>

[33mcommit 26fbe28dbd3c6c1ee862b9c78eb1078378e1a1c5[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Thu Nov 16 17:27:07 2023 +0000

    chore(Algebra/Invertible/Defs): extract a variable command (#8441)
    
    As requested by @YaelDillies

[33mcommit 48237d43209009b253cafc0920ca4e0772c2aeac[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Thu Nov 16 14:12:31 2023 +0000

    style: cleanup some autoImplicits (#8288)
    
    In some cases adding the arguments manually results in a more obvious argument order anyway

[33mcommit a76dc22f3a90e5ab96e9284d30276a87a4324a5d[m
Author: damiano <adomani@gmail.com>
Date:   Thu Nov 16 13:41:58 2023 +0000

    chore(RingTheory/{Algebraic, Localization/Integral}): rename decls to use dot notation (#8437)
    
    This PR tests a string-based tool for renaming declarations.
    
    
    Inspired by [this Zulip thread](https://leanprover.zulipchat.com/#narrow/stream/270676-lean4/topic/Renaming.20decls.20using.20LSP/near/402399853), I am trying to reduce the diff of #8406.
    
    This PR makes the following renames:
    
    | From                                        | To
    |

[33mcommit 7c434b4650611ec11966249fe66e797266ef1e59[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Thu Nov 16 11:33:41 2023 +0000

    chore(CategoryTheory): universe polymorphic `CategoryTheory.Limits.Types.coproductIso` (#8421)
    
    Fixes a typo requiring matching universe levels in `CategoryTheory.Limits.Types.coproductIso`.

[33mcommit 6d09b20cd50a0758449a9949b7ce0278a11c472a[m
Author: cyl <2158864003@qq.com>
Date:   Thu Nov 16 11:33:40 2023 +0000

    feat: define gradient of scalar-valued function on a Hilbert space (#7074)
    
    This file describes the transformation of the fderiv to gradient for functions from H to ‚Ñù, where H is a Hilbert (complete inner product) space. This is a substitution for the previous pull request #7011.
    
    
    
    Co-authored-by: cyl <108876608+chenyili0818@users.noreply.github.com>
    Co-authored-by: negiizhao <egresf@gmail.com>

[33mcommit 0e1fb8d54955c6fdc7263b0eb58946a3a50c37a4[m
Author: Oliver Nash <github@olivernash.org>
Date:   Thu Nov 16 10:23:30 2023 +0000

    feat: the trace of a direct sum is the sum of the traces (#8369)

[33mcommit 886de8643b4da567e3ff57d13487fb936f20d2f8[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Thu Nov 16 09:53:02 2023 +0000

    feat(CategoryTheory): relate mathlib's notion of `EffectiveEpi` to more standard definitions and `RegularEpi` (#8426)
    
    We prove that `RegularEpi` implies `EffectiveEpi` in full generality, and its converse under additional hypotheses.¬†

[33mcommit da342c74100057b3c86c10783321e54618374333[m
Author: Michael Stoll <Michael.Stoll@uni-bayreuth.de>
Date:   Thu Nov 16 08:44:20 2023 +0000

    fix: add 'squash' to 'norm_cast' attribute for 'Int.cast_negSucc' (#8365)
    
    This is an attempt at fixing the following behavior of `norm_cast`.
    ```lean
    
    example (n : ‚Ñ§) : (-37 : ‚Ñ§) = n := by
      norm_cast -- goal is `Int.negSucc 36 = n`
      sorry
    ```
    See [this discussion](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/linarith.20fails.20in.20a.20simple.20example/near/401592369).

[33mcommit 52199f53d887e390b8433f0866c1bad71d571357[m
Author: Junyan Xu <junyanxumath@gmail.com>
Date:   Thu Nov 16 07:03:28 2023 +0000

    chore: replace IsLocalization.eq_iff_exists' by exists_of_eq (#8335)
    
    The other direction is a consequence of `IsLocalization.map_units`.
    
    Also do the same for `LocalizationMap` and `IsLocalizedModule`.
    
    This means we have one less fact to prove when constructing an `IsLocalization` (etc.) instance (thus many proofs are golfed), but once we construct it we still have access to the `eq_iff_exists` lemmas (without the prime) so the API doesn't get less powerful.
    
    
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>

[33mcommit 57db954cfeae55f53a2a0f1c306d203eb706290f[m
Author: Scott Morrison <scott@tqft.net>
Date:   Thu Nov 16 06:00:20 2023 +0000

    chore: remove upstreamed lemmas (#8432)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit e3e88aa5492c4685fbfca164108b5b6574497206[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Thu Nov 16 06:00:19 2023 +0000

    feat: pow_card_mul_prod (#8412)
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit 8a954749fd6d4196e0577a9ff03e17dbb8466023[m
Author: Scott Morrison <scott@tqft.net>
Date:   Thu Nov 16 06:00:18 2023 +0000

    chore: split Analysis.Convex.Cone.Basic (#8357)
    
    Splits `Mathlib.Analysis.Convex.Cone.Basic`, to move Riesz extension and Hahn-Banach out of the basic file about definitions.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 7a22facdb4aba89399f58300c234c5dfac370349[m
Author: Christian Merten <christian@merten.dev>
Date:   Thu Nov 16 06:00:17 2023 +0000

    feat(Data/Setoid/Partition): equivalence classes and quotient (#7444)
    
    Adds the equivalence between the type of equivalence classes of an equivalence relation and its quotient.
    
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 576416f318f9396661d3b9645ca0b734f4371466[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Thu Nov 16 04:47:35 2023 +0000

    doc: explain extended set notation (#8425)

[33mcommit 5c5981529b191ca31e9014b8866271990d94cf0c[m
Author: Scott Morrison <scott@tqft.net>
Date:   Thu Nov 16 01:34:04 2023 +0000

    feat: the 'hint' tactic (#8363)
    
    ```
    example (h : 1 < 0) : False := by hint
    example {P Q : Prop} (p : P) (f : P ‚Üí Q) : Q := by hint
    example {P Q R: Prop} (x : P ‚àß Q ‚àß R ‚àß R) : Q ‚àß P ‚àß R := by hint
    example {a b : ‚Ñö} (h : a < b) : ¬¨ b < a := by hint
    example : 37^2 - 35^2 = 72 * 2 := by hint
    example : Nat.Prime 37 := by hint
    ```
    
    Tries out any tactics registered using `register_hint tac`, and reports which ones succeed using the new "Try these: " multiple suggestion widgets. Tactics that close the goal are highlighted in green. Tactics that succeed but don't close the goal display the new subgoals in the widget. If `tac` produces a "Try this: " message, use that instead of `tac`.
    
    I haven't hooked up `aesop` yet, because of https://github.com/leanprover-community/aesop/issues/85. Similarly for `norm_num`.
    
    I would like to parallelize this, but I don't think that needs to happen right away.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>
    Co-authored-by: Komyyy <pol_tta@outlook.jp>

[33mcommit 4231b8948b57060a7ad5071183d958f1e683727e[m
Author: Scott Morrison <scott@tqft.net>
Date:   Thu Nov 16 01:14:24 2023 +0000

    chore: better .gitignore (#8431)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit e194c75699f5107c3020dd83bb1dc00cf62f62aa[m
Author: negiizhao <egresf@gmail.com>
Date:   Wed Nov 15 21:24:58 2023 +0000

    perf(FunLike.Basic): beta reduce `CoeFun.coe` (#7905)
    
    This eliminates `(fun a ‚Ü¶ Œ≤) Œ±` in the type when applying a `FunLike`.
    
    
    
    
    Co-authored-by: Matthew Ballard <matt@mrb.email>
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit f5f44c598718f820c1ef4a18227ccd07887d9961[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Wed Nov 15 20:16:30 2023 +0000

    chore: tidy various files (#8409)

[33mcommit 0b128365295bc885cae8a0571405eafee1368247[m
Author: Jujian Zhang <jujian.zhang1998@outlook.com>
Date:   Wed Nov 15 19:17:08 2023 +0000

    feat: non-zero smul-divisors (#7138)
    
    If $R$ is a monoid with $0$ and $M$ an additive monoid with an $R$-action, then the set of non-zero smul-divisors of $R$ is a submonoid. for any $r \in R$, $r$ is a non-zero smul-divisors if and only if for any $m\in M$, $r \cdot m = 0$ implies $m = 0$. These elements are also called $M$-regular. They are useful in regular sequences.
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>

[33mcommit e0e141f763b0e038b38db9b0719d5fbbe34c2850[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Wed Nov 15 18:03:32 2023 +0000

    feat(Condensed): functors from test objects to condensed sets (#8236)
    
    We define the natural functor `CompHaus ‚•§ CondensedSet` and its friends for profinite and Stonean spaces.

[33mcommit eb29282179d6f674cd7f81c0a9f4a29a549516c7[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Wed Nov 15 16:58:48 2023 +0000

    chore: redistribute some of the results in LinearAlgebra.Basic (#7801)
    
    This reduces the file from ~2600 lines to ~1600 lines.
    
    
    
    Co-authored-by: Vierkantor <vierkantor@vierkantor.com>
    Co-authored-by: Floris van Doorn <fpvdoorn@gmail.com>

[33mcommit 3fbcf0e064d06994e24f42a8b5c0245ddc9115d0[m
Author: Scott Morrison <scott@tqft.net>
Date:   Wed Nov 15 15:04:31 2023 +0000

    chore: bump Std (#8424)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 7ad0a36bc70d4b282c0c5b8dc73888b3bcca04dd[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Wed Nov 15 15:04:30 2023 +0000

    feat: Minimum torsion of a group (#8411)
    
    This PR define `Monoid.minOrder Œ±`, the minimum order of an element of the monoid `Œ±`. This is also the minimum size of a nontrivial subgroup.

[33mcommit 8e99d228d3d7b5fe5942eacea9cf5f6b76ca7d1f[m
Author: Filippo A. E. Nuccio <filippo.nuccio@univ-st-etienne.fr>
Date:   Wed Nov 15 15:04:28 2023 +0000

    refactor(LinearAlgebra.ProjectiveSpace): localize notation and rename folder (#8394)
    
    Following https://leanprover.zulipchat.com/#narrow/stream/116395-maths/topic/Projectivization I localize the notation $\mathbb{P}$ to the namespace `LinearAlgebra.Projectivization`. Following the discussion there, the namespace `Projectivization` is not optimal, as the notion can refer to different constructions, hence the choice of adding `LinearAlgebra.` in front of it.
    
    Also, in accordance with the philosophy in the implementation, I replace "Projective Space" by "Projectivization" in the name of the folder, because the idea is that there is no "canonical" choice of the vector space one should start with to construct the projectivization.

[33mcommit 9772ef6b5ece72c3d9f611dca1b34d5c06184204[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Wed Nov 15 13:53:51 2023 +0000

    feat: Monovariance under algebraic operations (#7648)
    
    Prove a bunch of results relating `monovary` to algebraic operations in ordered groups.

[33mcommit 91e2d0262ffc96bd9321ce396fc50932e95fa6e9[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Wed Nov 15 09:39:22 2023 +0000

    feat(CategoryTheory): `ULift` creates small (co)limits (#8209)

[33mcommit 2608d1e8fe34ec259b42869e19382cf8ccd2846e[m
Author: Scott Morrison <scott@tqft.net>
Date:   Wed Nov 15 04:56:01 2023 +0000

    chore: report lean4checker results back to Lean PRs (#8417)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit cecaa2d269e01802c330380fb8151c06949217a3[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Wed Nov 15 02:48:10 2023 +0000

    chore: bump Quote4 (#8414)
    
    This pulls in leanprover-community/quote4#26

[33mcommit 65ff221423bef7d05add8bacc18ce5375a6c78b2[m
Author: Kyle Miller <kmill31415@gmail.com>
Date:   Wed Nov 15 00:39:48 2023 +0000

    feat: make `Set.monad` not an instance and add `(Subtype.val '' ¬∑)` coercion (#8413)
    
    The monad instance on `Set` isn't computationally relevant, and it causes Lean's monad lifting coercion logic to activate. We introduce a coercion instance for the case that's actually used in practice: when `s : Set X` and `t : Set s` then `(t : Set X)` ought to be `Subtype.val '' t`. This way we do not see `Lean.Internal.coeM` terms.
    
    If the monad is still wanted, it can be activated using a local attribute or by using the `SetM.run` function.

[33mcommit a73e36d73e87f662ceb2b13983310bb6d00f0c0c[m
Author: Scott Morrison <scott@tqft.net>
Date:   Tue Nov 14 23:20:47 2023 +0000

    chore: fix post_update hook (#8401)
    
    See zulip discussion at
    * https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Disable.20lake.20post-hook.20when.20importing.20mathlib.3F/near/401811422
    * https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/lake.20update.3A.20invalid.20toolchain.20name/near/401860157
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit e004ac1c1671d5707be47269eadabd0acf99e461[m
Author: Iv√°n Renison <85908989+IvanRenison@users.noreply.github.com>
Date:   Tue Nov 14 18:47:47 2023 +0000

    feat: add 2-coloring of `pathGraph` and prove its chromatic number is 2 (#8166)
    
    Define a bicoloring for `pathGraph` and prove that when `2 ‚â§ n` its chromatic number is 2. Creates a ConcreteColorings module to hold such colorings of concrete graphs.

[33mcommit ee3bd06d13312ae542594529a7568a6b0940def4[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Tue Nov 14 18:13:02 2023 +0000

    feat: Order of elements of a subgroup (#8385)
    
    The cardinality of a subgroup is greater than the order of any of its elements.
    
    Rename
    * `order_eq_card_zpowers` ‚Üí `Fintype.card_zpowers`
    * `order_eq_card_zpowers'` ‚Üí `Nat.card_zpowers` (and turn it around to match `Nat.card_subgroupPowers`)
    * `Submonoid.powers_subset` ‚Üí `Submonoid.powers_le`
    * `orderOf_dvd_card_univ` ‚Üí `orderOf_dvd_card`
    * `orderOf_subgroup` ‚Üí `Subgroup.orderOf`
    * `Subgroup.nonempty` ‚Üí `Subgroup.coe_nonempty`

[33mcommit e29251b7e7eed60a02c90507a936d226c879c230[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Tue Nov 14 16:55:07 2023 +0000

    chore: split Analysis.NormedSpace.Multilinear (#8392)
    
    This moves the isomorphisms corresponding to currying or uncurrying variables into a separate file, as they're mostly independent of the rest of the file.

[33mcommit 87c833e0565c99a13dbd96bad51d5c0070a8dbc5[m
Author: Oliver Nash <github@olivernash.org>
Date:   Tue Nov 14 15:34:26 2023 +0000

    feat: weight space decomposition of Lie modules (#7963)

[33mcommit a107e34db7f0335ea4997e3ef7c0db36cdfb9069[m
Author: Chris Hughes <33847686+ChrisHughes24@users.noreply.github.com>
Date:   Tue Nov 14 15:34:25 2023 +0000

    feat: amalgamated products of groups (#6803)
    
    
    
    Co-authored-by: Chris Hughes <chrishughes24@gmail.com>

[33mcommit e6e9cec4efcc566761eee7d5970a5e0357669485[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Nov 14 14:30:20 2023 +0000

    chore(Topology/UniformSpace): change defeq (#8334)
    
    Make `toTopologicalSpace_top` a `rfl`.
    Also move some lemmas to the `UniformSpace` namespace.

[33mcommit fc881b75496ce040f858ae441839e838a63f339b[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Tue Nov 14 14:30:19 2023 +0000

    refactor: Int.negOnePow as a map to ‚Ñ§À£ rather than ‚Ñ§ (#8307)
    
    Following #7866, `Int.negOnePow` is redefined as a map `‚Ñ§ ‚Üí ‚Ñ§À£` rather than `‚Ñ§ ‚Üí ‚Ñ§`.
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 1e1b274e4996afcb2b099847e99a558ba40d3235[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Tue Nov 14 13:27:38 2023 +0000

    feat: Finset of arbitrary size in an infinite type (#8348)
    
    and a few other easy lemmas

[33mcommit 21b59396b0bc5f6e4bc4ba0438eb57a292105701[m
Author: R√©my Degenne <remydegenne@gmail.com>
Date:   Tue Nov 14 12:32:12 2023 +0000

    feat: generalize some lemmas using `withDensity_apply'` (#8383)
    
    @sgouezel added a version of `withDensity_apply` that does not require measurability of the set if the measure is s-finite. This PR uses that result in other files of the library.
    
    For results about `rnDeriv`, I put a prime on the version that assumes measurability of the set and no prime on the version for s-finite measures, as the second one should be the main use case.
    
    
    
    Co-authored-by: sgouezel <sebastien.gouezel@univ-rennes1.fr>
    Co-authored-by: RemyDegenne <Remydegenne@gmail.com>

[33mcommit 3f810735e0ec9a13c0f8fcef14dc2ee3d0b23a7f[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Tue Nov 14 10:54:25 2023 +0000

    feat: s-finite measures (#8405)
    
    We define s-finite measures, i.e., measures which can be written as a countable sum of finite measures. We show that sigma-finite measures are s-finite, and extend a few results in the library from the sigma-finite case to the s-finite case.

[33mcommit 43c320610a31b65bde1fd41f91f086f922b09c09[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Tue Nov 14 09:51:28 2023 +0000

    chore: tidy various files (#8398)

[33mcommit a977ca1464e87ab52bd91c3f86a7cc7cb0e2bbaf[m
Author: Scott Morrison <scott@tqft.net>
Date:   Tue Nov 14 09:14:58 2023 +0000

    chore: bump Std (#8403)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 4b14c4cac164225a58515d8b87f8af582052f728[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Tue Nov 14 07:28:43 2023 +0000

    feat(CategoryTheory): a presheaf preserves certain products iff it `IsSheafFor` certain presieves  (#7804)
    
    A presheaf preserving a particular product `IsSheafFor`¬†the corresponding `Presieve.ofArrows`. Conversely, if a presheaf `IsSheafFor`¬†a `Presieve.ofArrows` and the empty presive on an initial object, then it preserves the corresponding product.

[33mcommit b6a9eb9c91b5126e59c157f254704af8f3b5cf1c[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Tue Nov 14 05:03:22 2023 +0000

    feat: conceptualize the proof of the fundamental theorem of algebra (#8245)
    
    Uses the corollary `Differentiable.apply_eq_of_tendsto_cocompact` of Liouville's theorem to refactor the proof of the Fundamental theorem of Algebra in order to make it slightly more conceptual.
    
    - [x] depends on: #8234
    - [x] depends on: #8244

[33mcommit 6f8dabb5ba7f679a1e57ceab3c5c255e3ea7830e[m
Author: Scott Morrison <scott@tqft.net>
Date:   Tue Nov 14 03:24:13 2023 +0000

    chore: split Data.Complex.Basic (#8355)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>

[33mcommit 86eae0cbc23e14f813265823fd116fe2885c46a8[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Tue Nov 14 03:24:12 2023 +0000

    feat: Simple `Subgroup` lemmas (#8341)

[33mcommit 0a0580baf2cb9a7059d72fa23a2bd575260eeee5[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Tue Nov 14 03:24:10 2023 +0000

    feat: Shattering (#7524)
    
    Define when a finset family shatters a finset, the shatterer of a finset, define the Vapnik-Chervonenkis dimension of a finset family and prove the Sauer-Shelah lemma
    
    
    
    
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>

[33mcommit 3eee0331161247105b89792d13e2f87bbe7eb0ce[m
Author: Scott Morrison <scott@tqft.net>
Date:   Tue Nov 14 03:03:18 2023 +0000

    chore: bump ProofWidgets to 0.0.22 (#8400)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 931dd8141994079c428dca18d9e1fd4649e94106[m
Author: Fr√©d√©ric Dupuis <dupuisf@iro.umontreal.ca>
Date:   Tue Nov 14 01:03:47 2023 +0000

    feat: add induction principle for intervals (#8350)
    
    This PR adds an induction principle that says that if a proposition `P` is true on `[x‚ÇÄ, r * x‚ÇÄ)` and if `P` for `[x‚ÇÄ, r^n * x‚ÇÄ)` implies `P` for `[r^n * x‚ÇÄ, r^(n+1) * x‚ÇÄ)`, then `P` is true for all `x ‚â• x‚ÇÄ`.
    
    It also adds a few missing lemmas about `logb`.
    
    
    
    Co-authored-by: Fr√©d√©ric Dupuis <31101893+dupuisf@users.noreply.github.com>

[33mcommit 2fed2bb879abf057539d31d68bfbcc704aec39f7[m
Author: Christopher Hoskin <christopher.hoskin@gmail.com>
Date:   Mon Nov 13 21:35:10 2023 +0000

    refactor(Algebra): Define the center appropriately for non-associative algebras (#6996)
    
    For a sensible theory, we require that the centre of an algebra is closed under multiplication. The definition currently in Mathlib works for associative algebras, but not non-associative algebras. This PR uses the definition from Cabrera Garc√≠a and Rodr√≠guez Palacios, which works for any multiplication (addition) and which coincides with the current definition in the associative case.
    
    I did consider whether the centralizer should also be re-defined in terms of operator commutation, but this still results in a centralizer which is not closed under multiplication in the non-associative case. I have therefore retained the current definition, but changed `centralizer_eq_top_iff_subset` and `centralizer_univ` to only work in the associative case.
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>
    Co-authored-by: Christopher Hoskin <mans0954@users.noreply.github.com>
    Co-authored-by: Christopher Hoskin <christopher.hoskin@overleaf.com>

[33mcommit b460f53532394aaaffdba6cba6a2da4d938166b1[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Mon Nov 13 18:56:18 2023 +0000

    chore: typo `ascPochhammer` (#8391)
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit f5eb981bfbb60ba7fd78829a5e5221d73820b9fe[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Mon Nov 13 17:59:15 2023 +0000

    fix(Mathlib/Algebra/Lie/DirectSum): remove unused `R` argument from lemmas (#8388)
    
    This made them not actually work as a `simp` lemma.
    
    Also extracts a common result that can be used to prove `single_add` for `DFinsupp` and `Finsupp`, and a new `Finsupp.single_mul` lemma.

[33mcommit 69a0d133cab0a964984b3a8ee34237baddc53b8f[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Nov 13 17:14:15 2023 +0000

    feat: polar coords integral in a normed space (#7693)

[33mcommit 5c9c13df4643f68468a0f50fc217a3216ae6f8cc[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Mon Nov 13 16:29:25 2023 +0000

    chore: split `MeasureSpace.lean` into 3 files (#8389)
    
    The original file `MeasureSpace.lean` is a mess of 4580 lines, with a lot of changes of namespaces, active variables, and so on. We split it into three files:
    * `MeasureSpace`, with 2095 lines left (some stuff could still be moved to other files, but it already makes much more sense)
    * `Restrict`, with everything on restriction of measures (1100 lines)
    * `Typeclasses`, defining finite measures, sigma-finite measures, and so on (1443 lines)
    
    The new files are still large, but less so. This is 99% moving around and ensuring that variables and namespaces remain the same (#align statements have been very useful for this), and 1% adding `classical` in proofs and `[Decidable ...]` assumptions in statements, as I haven't opened `Classical` in the new files.

[33mcommit aa0957f16b2a2bec97363b0f0243b3853d846f70[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Mon Nov 13 16:05:10 2023 +0000

    fix(Mathlib/Analysis/NormedSpace/AddTorsor): remove bad simp lemma (#8387)
    
    This didn't actually work with `simp`, as the RHS needs a `ùïú` that can't be guessed.

[33mcommit d030880f14fc5219d77c688b9c42e367c588c805[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Mon Nov 13 13:49:23 2023 +0000

    chore: suppress compilation in `NormedSpace.Multilinear` (#8382)

[33mcommit 022c6839295ef3d7b4bae0f496abba2c3ca5fa6b[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Mon Nov 13 13:49:22 2023 +0000

    chore: disable global instance `Subtype.measureSpace` (#8381)
    
    Currently, a subtype of a `MeasureSpace` has a `MeasureSpace` instance, obtained by restricting the initial measure. There are however other reasonable constructions, like the normalized restriction for a probability measure, or the subspace measure when restricting to a vector subspace. We disable the global instance `Subtype.measureSpace` to make these other choices possible, as discussed [on Zulip](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/MeasureSpace.20instance.20on.20Subtype/near/395920337).
    
    It turns out that this instance was duplicated in `SetCoe.measureSpace`, so we delete the other one.

[33mcommit 5c23e7f8437c732af2e9b1c3882c6c4e6a364776[m
Author: Eric Wieser <scott.morrison@gmail.com>
Date:   Mon Nov 13 12:59:34 2023 +0000

    fix: remove unused arguments (#8380)
    
    These are split from #8226 (and subsequent changes in #8366), and arise from the fact the latest Lean is better at detecting these due to better abstraction.
    
    I can't comment on whether any of these should be concerning, but putting them in a small commit makes it easier for someone to find and review them later.
    
    
    
    Co-authored-by: Kyle Miller <kmill31415@gmail.com>
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 1ec654bb08d3a29684db83e30f09c5a02fcfd139[m
Author: Michael Stoll <Michael.Stoll@uni-bayreuth.de>
Date:   Mon Nov 13 12:15:53 2023 +0000

    feat: add four lemmas on topological sums (#8325)
    
    This adds four API lemmas that are useful for establishing Euler products:
    ```lean
    @[simp] lemma hasSum_unique [Unique Œ≤] (f : Œ≤ ‚Üí Œ±) : HasSum f (f default)
    
    @[simp] lemma hasSum_singleton (m : Œ≤) (f : Œ≤ ‚Üí Œ±) : HasSum (({m} : Set Œ≤).restrict f) (f m)
    
    lemma tsum_setElem_eq_tsum_setElem_diff [T2Space Œ±] {f : Œ≤ ‚Üí Œ±} (s t : Set Œ≤) (hf‚ÇÄ : ‚àÄ b ‚àà t, f b = 0) :
        ‚àë' a : s, f a = ‚àë' a : (s \ t : Set Œ≤), f a
    
    lemma tsum_eq_tsum_diff_singleton {Œ±  Œ≤ : Type*} [AddCommMonoid Œ±] [TopologicalSpace Œ±] [T2Space Œ±]
        {f : Œ≤ ‚Üí Œ±} (s : Set Œ≤) (b : Œ≤) (hf‚ÇÄ : f b = 0) :
        ‚àë' a : s, f a = ‚àë' a : (s \ {b} : Set Œ≤), f a
    ```

[33mcommit 15ce6b63385ff165118b075a86a21a9bfabb4664[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Mon Nov 13 11:26:23 2023 +0000

    feat(Algebra/DirectSum/Decomposition): some convenience API (#8374)

[33mcommit c2896788c78da480083ffcaa24d978334a9a244c[m
Author: Oliver Nash <github@olivernash.org>
Date:   Mon Nov 13 11:26:22 2023 +0000

    feat: in finite dimensions, if a linear endomorphism is triangularizable, so is its restriction to any invariant submodule (#8212)

[33mcommit a5f84091a6a0373cb67de54999b83ed03183b3d0[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Mon Nov 13 10:29:06 2023 +0000

    feat(CategoryTheory/Sites): the topology on Over categories (#8329)
    
    Given a Grothendieck topology on a category `C`, this PR constructs the induced Grothendieck topology on the category `Over X` for any `X : C`.

[33mcommit b0be9aafcf8c63447f47b1fbc6b5cb20c212efdc[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Mon Nov 13 10:29:04 2023 +0000

    feat(CategoryTheory): more properties of exact sequences (#8159)
    
    The basic API of exact sequences in developed in this PR. As a result, the snake lemma can be formulated as a 6-term exact sequence.

[33mcommit 87b37fc43026e674c6dc7f44af1a7d1ea10fd63a[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Mon Nov 13 10:03:11 2023 +0000

    feat: simplify proof of `spectrum.nonempty` using the cobounded filter (#8246)
    
    This uses the API developed in these recent PRs (for the cobounded filter and some corollaries to Liouville's theorem) to greatly simplify the proof of `spectrum.nonempty`. Previously, this depended on the technical lemma `spectrum.norm_resolvent_le_forall`, and now we instead prove the greatly simplified `spectrum.resolvent_isBigO_inv` and `spectrum.resolvent_tendsto_cobounded`.
    
    - [ ] depends on: #8234
    - [ ] depends on: #8244

[33mcommit 295f071bd348ef2af16352031b6f283255a18c78[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Mon Nov 13 09:12:38 2023 +0000

    feat: in a sigma-finite space, `withDensity f s` is the integral of `f` over `s` even if `s` is not measurable (#8377)

[33mcommit b67998aead62d7cbf0beda45d458e9aa087a74e5[m
Author: Scott Morrison <scott@tqft.net>
Date:   Mon Nov 13 08:38:42 2023 +0000

    chore: remove redundant coercion in SlashInvariantForms (#8376)
    
    This coercion is redundant with one already available via a FunLike instance. It's not actually particularly significant by itself, but it is shows up in many typeclass search traces, and because it comes first, obscures more serious problems!
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 43e32656ac67d431f86f2238594b7e9b7148e2c6[m
Author: Scott Morrison <scott@tqft.net>
Date:   Mon Nov 13 07:42:20 2023 +0000

    chore: split Data.Real.Basic (#8356)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 771e087dbef4d5663374403a8c8ef1e520f1f3e0[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Mon Nov 13 07:42:19 2023 +0000

    chore: Generalise lemmas from finite groups to torsion elements  (#8342)
    
    Many lemmas in `GroupTheory.OrderOfElement` were stated for elements of finite groups even though they work more generally for torsion elements of possibly infinite groups. This PR generalises those lemmas (and leaves convenience lemmas stated for finite groups), and fixes a bunch of names to use dot notation.
    
    ## Renames
    
    * `Function.eq_of_lt_minimalPeriod_of_iterate_eq` ‚Üí `Function.iterate_injOn_Iio_minimalPeriod`
    * `Function.eq_iff_lt_minimalPeriod_of_iterate_eq` ‚Üí `Function.iterate_eq_iterate_iff_of_lt_minimalPeriod`
    * `isOfFinOrder_iff_coe` ‚Üí `Submonoid.isOfFinOrder_coe`
    * `orderOf_pos'` ‚Üí `IsOfFinOrder.orderOf_pos`
    * `pow_eq_mod_orderOf` ‚Üí `pow_mod_orderOf` (and turned around)
    * `pow_injective_of_lt_orderOf` ‚Üí `pow_injOn_Iio_orderOf`
    * `mem_powers_iff_mem_range_order_of'` ‚Üí `IsOfFinOrder.mem_powers_iff_mem_range_orderOf`
    * `orderOf_pow''` ‚Üí `IsOfFinOrder.orderOf_pow`
    * `orderOf_pow_coprime` ‚Üí `Nat.Coprime.orderOf_pow`
    * `zpow_eq_mod_orderOf` ‚Üí `zpow_mod_orderOf` (and turned around)
    * `exists_pow_eq_one` ‚Üí `isOfFinOrder_of_finite`
    * `pow_apply_eq_pow_mod_orderOf_cycleOf_apply` ‚Üí `pow_mod_orderOf_cycleOf_apply`
    
    ## New lemmas
    
    * `IsOfFinOrder.powers_eq_image_range_orderOf`
    * `IsOfFinOrder.natCard_powers_le_orderOf`
    * `IsOfFinOrder.finite_powers`
    * `finite_powers`
    * `infinite_powers`
    * `Nat.card_submonoidPowers`
    * `IsOfFinOrder.mem_powers_iff_mem_zpowers`
    * `IsOfFinOrder.powers_eq_zpowers`
    * `IsOfFinOrder.mem_zpowers_iff_mem_range_orderOf`
    * `IsOfFinOrder.exists_pow_eq_one`
    
    ## Other changes
    
    * Move `decidableMemPowers`/`fintypePowers` to `GroupTheory.Submonoid.Membership` and `decidableMemZpowers`/`fintypeZpowers` to `GroupTheory.Subgroup.ZPowers`.
    * `finEquivPowers`, `finEquivZpowers`, `powersEquivPowers` and `zpowersEquivZpowers` now assume `IsOfFinTorsion x` instead of `Finite G`.
    * `isOfFinOrder_iff_pow_eq_one` now takes one less explicit argument.
    * Delete `Equiv.Perm.IsCycle.exists_pow_eq_one` since it was saying that a permutation over a finite type is torsion, but this is trivial since the group of permutation is itself finite, so we can use `isOfFinOrder_of_finite` instead.

[33mcommit 6924ba8e99b879f65f0a51ea59423bf9aa63c372[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Mon Nov 13 07:42:17 2023 +0000

    chore: Fix name of `Nat.card_mono` (#8340)
    
    This was accidentally put in the `PartENat` namespace in #8202. Also add `Set.Infinite.card_eq_zero` and fix capitalisation errors.

[33mcommit 6eb9f7b3857e15a807352d127e949865f5f9ba97[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Nov 13 06:59:23 2023 +0000

    chore(InfiniteSum): use dot notation (#8358)
    
    ## Rename
    
    - `summable_of_norm_bounded` -> `Summable.of_norm_bounded`;
    - `summable_of_norm_bounded_eventually` -> `Summable.of_norm_bounded_eventually`;
    - `summable_of_nnnorm_bounded` -> `Summable.of_nnnorm_bounded`;
    - `summable_of_summable_norm` -> `Summable.of_norm`;
    - `summable_of_summable_nnnorm` -> `Summable.of_nnnorm`;
    
    ## New lemmas
    
    - `Summable.of_norm_bounded_eventually_nat`
    - `Summable.norm`
    
    ## Misc changes
    
    - Golf a few proofs.

[33mcommit 30d39f9a058b13ec1786a90af4c051d650762951[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Sun Nov 12 23:30:52 2023 +0000

    fix(LinearAlgebra/{Free,Tensor,Clifford}Algebra): remove an unused `SMulCommClass` argument (#8373)
    
    `SMulCommClass R S A` is always true when `Algebra R A` and `Algebra S A` and `A` is commutative, since the two actions factor via multiplication in `A`. I don't think mathlib actually knows this fact yet, but in this particular case it's also true by definition.

[33mcommit 4cb02b43c5f66e3ae53346ffbc8ef2621ed06564[m
Author: Scott Morrison <scott@tqft.net>
Date:   Sun Nov 12 23:30:51 2023 +0000

    feat: add aesop attribute to Nat.not_prime_one (#8332)
    
    @**Ya√´l Dillies**'s recent proof at #8164 uses `aesop` in a way that relies on `simp` using `decide := true` by default, which we have now disabled, and hence this breaks on `nightly-testing`.
    
    I propose we add `@[aesop safe destruct]` to `Nat.not_prime_one` (and `Nat.not_prime_zero` while we're there).
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 9c97b764b9ddae64ad15fc0ada681f1c67462d2d[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Sun Nov 12 22:21:22 2023 +0000

    refactor: add explicit equation lemmas for `comp` and `flip` (#8371)
    
    This will mostly be a no-op in the current version of Lean, but will override the new behavior from leanprover/lean4#2783.
    
    Once consequence of this is that `rw [comp]` no longer uses "smart unfolding"; it introduces a non-beta reduced term if the composition was applied. As a result, these places need to use `rw [comp_apply]` instead.
    My claim is that this is no big deal.
    
    This is split from the lean bump PR #8023, targeting master, to make clear what the fallout is.

[33mcommit ace6e09154439335a48190750134bb5bb5656007[m
Author: Andrew Yang <the.erd.one@gmail.com>
Date:   Sun Nov 12 21:46:02 2023 +0000

    perf(AlgebraicGeometry): Fix slow and bad proofs (#7747)
    
    Fixed `AlgebraicGeometry/AffineSchemes.lean`, `AlgebraicGeometry/Morphisms/QuasiSeparated.lean` and  `AlgebraicGeometry/Morphisms/RingHomProperties.lean`.
    
    
    
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>
    Co-authored-by: Andrew Yang <36414270+erdOne@users.noreply.github.com>
    Co-authored-by: Johan Commelin <johan@commelin.net>
    Co-authored-by: Mauricio Collares <mauricio@collares.org>

[33mcommit daf40d2c6329d7aebe1552da03c5034bcdeb5505[m
Author: R√©my Degenne <Remydegenne@gmail.com>
Date:   Sun Nov 12 18:17:28 2023 +0000

    feat(MeasureTheory): remove an `AbsolutelyContinuous` hypothesis from `inv_rnDeriv` (#8351)
    
    In order to remove that hypothesis, we also:
    - add some basic lemmas about absolute continuity and mutually singular measures.
    - add HaveLebesgueDecomposition instances
    - rewrite the proof of `withDensity_rnDeriv_eq` to use the new API instead of unfolding the definitions
    - generalize `rnDeriv_restrict` and `rnDeriv_withDensity` to possibly different measures

[33mcommit 708c4de30719b66fdd9b7215c115c6b6dd045bb8[m
Author: R√©my Degenne <Remydegenne@gmail.com>
Date:   Sun Nov 12 17:09:35 2023 +0000

    feat(MeasureTheory): integrals of rnDeriv without absolute continuity (#8343)
    
    Add Lemmas about Lebesgue and Bochner integrals of rnDeriv without absolute continuity assumptions.
    
    Also remove a duplicate lemma I introduced in a previous PR: `set_integral_toReal_rnDeriv` was already there under the name `withDensity_rnDeriv_toReal_eq`. I kept the name `set_integral_toReal_rnDeriv `.

[33mcommit bac379fd97ecbdf617608099aeafe1c382e077f0[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Sun Nov 12 15:48:33 2023 +0000

    feat(CategoryTheory): a version of `sheafCompose` for functors preserving smaller limits (#8235)
    
    
    Introduces a new typeclass `GrothendieckTopology.HasSheafCompose F` which says that a sheaf postcomposed with the functor `F` is still a sheaf. The previous API proved that a functor preserving certain limits has this property, this PR also adds a proof that a functor preserving limits of a smaller size has this property.

[33mcommit a1a099548aabd4e2f98a6a6e168d93bb6302a0a9[m
Author: Scott Morrison <scott@tqft.net>
Date:   Sun Nov 12 13:54:28 2023 +0000

    chore: cleanup imports of Analysis.Calculus.ContDiff (#8354)
    
    Not moving anything around this time, just postponing imports.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 63c34b1698b4580363ce8b531de15bcd6a4feba7[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Sun Nov 12 13:54:27 2023 +0000

    refactor(CategoryTheory): change the API for opposite (co)products to accept general (co)fans (#8302)

[33mcommit 5c09e95b07180a33a969af0a2aa28e65943da881[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sun Nov 12 13:14:02 2023 +0000

    feat: infinite normed field is noncompact (#8349)
    
    Generalize from nontrivially normed fields to normed fields.
    Also prove that a nontrivially normed field is infinite.

[33mcommit 1fe877185360058a7e1ea01587273cca55ba199a[m
Author: Mauricio Collares <mauricio@collares.org>
Date:   Sun Nov 12 11:28:08 2023 +0000

    fix: `attribute [simp] ... in` -> `attribute [local simp] ... in` (#7678)
    
    Mathlib.Logic.Unique contains the line `attribute [simp] eq_iff_true_of_subsingleton in ...`:
    
    https://github.com/leanprover-community/mathlib4/blob/96a11c7aac574c00370c2b3dab483cb676405c5d/Mathlib/Logic/Unique.lean#L255-L256
    
     Despite what the `in` part may imply, this adds the lemma to the simp set "globally", including for downstream files; it is likely that `attribute [local simp] eq_iff_true_of_subsingleton in ...` was meant instead (or maybe `scoped simp`, but I think "scoped" refers to the current namespace). Indeed, the relevant lemma is not marked with `@[simp]` for possible slowness: https://github.com/leanprover/std4/blob/846e9e1d6bb534774d1acd2dc430e70987da3c18/Std/Logic.lean#L749. Adding it to the simp set causes the example at https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Regression.20in.20simp to slow down.
    
    This PR changes this and fixes the relevant downstream `simp`s. There was also one ocurrence of `attribute [simp] FullSubcategory.comp_def FullSubcategory.id_def in` in Mathlib.CategoryTheory.Monoidal.Subcategory but that was much easier to fix.
    
    https://github.com/leanprover-community/mathlib4/blob/bc49eb9ba756a233370b4b68bcdedd60402f71ed/Mathlib/CategoryTheory/Monoidal/Subcategory.lean#L118-L119

[33mcommit d680257bcac88c529358b2bf675011075e148c1a[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sun Nov 12 09:37:50 2023 +0000

    chore(Topology/Compact): golf `Filter.coprod_cocompact` (#8338)

[33mcommit 42a985578758e3848cc336799a3a42ca774fd79f[m
Author: Mauricio Collares <mauricio@collares.org>
Date:   Sun Nov 12 09:37:49 2023 +0000

    chore(AlgebraicGeometry.Morphisms.RingHomProperties): speedups (#8299)
    
    I don't really understand this file, but I was bothered by the sole declaration requiring more than a million heartbeats. I noticed strategically adding a few `conv`s can make `sourceAffineLocally_of_source_open_cover_aux` not require a bump.

[33mcommit b9566b3ddfb2ab0a39296f0e0b93a6f6857e20e1[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sun Nov 12 09:05:07 2023 +0000

    feat(Calculus/FDeriv): add `DifferentiableAt.isBigO_sub` (#8352)
    
    * rename `HasFDerivWithinAt.isBigO` to `HasFDerivWithinAt.isBigO_sub`;
    * rename `HasFDerivAt.isBigO` to `HasFDerivAt.isBigO_sub`;
    * add `DifferentiableWithinAt.isBigO_sub`;
    * add `DifferentiableAt.isBigO_sub`.

[33mcommit adefdc2a051225c3e96946f16d99bf93cd74ba12[m
Author: kkytola <‚Äúkalle.kytola@aalto.fi‚Äù>
Date:   Sun Nov 12 00:13:56 2023 +0000

    feat: add last implication of portmanteau characterizations of weak convergence (#8097)
    
    This PR adds the last missing implication of the general case of portmanteau equivalent characterizations of convergence in distribution: a sufficient condition for convergence in distribution of a sequence of probability measures is that for all open sets the candidate limit measure is at most the liminf of the measures.
    
    
    
    Co-authored-by: Kalle <kalle.kytola@aalto.fi>
    Co-authored-by: kkytola <39528102+kkytola@users.noreply.github.com>

[33mcommit 2def5da53028838240e47d0e5a8541d97ceca426[m
Author: Junyan Xu <junyanxumath@gmail.com>
Date:   Sat Nov 11 20:09:44 2023 +0000

    chore: remove SubfieldWithHom (#8333)
    
    It has become our consensus that `SubfieldWithHom` should be deprecated in favor of `IntermediateField.Lifts` after discussing with @acmepjz in #6670. @acmepjz [got rid of](https://github.com/leanprover-community/mathlib4/pull/6670#issuecomment-1793789736) the use of `SubfieldWithHom` in `IsAlgClosed.lift`, so nothing depends on it now. In #8221 I extracted some proofs from `SubfieldWithHom` that are simpler than their `Lifts` counterparts, so I think now is the time to delete `SubfieldWithHom` completely, and get rid of this [slow proof](https://github.com/leanprover-community/mathlib4/compare/remove_SubfieldWithHom?expand=1#diff-abe22930a9c8ef025fcfdec88b7a436960fd44bb8738c6ea3418d19de32f67f3L310) as a bonus.
    
    
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>

[33mcommit 5ac3430b427e70f2e706ce82ce6bfb8b850f6fab[m
Author: Scott Morrison <scott@tqft.net>
Date:   Sat Nov 11 17:12:08 2023 +0000

    chore: split Mathlib.Analysis.Calculus.ContDiff.Basic (#8344)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 1cb42bfdb4db358bb85f36d953a7d3e058da7b73[m
Author: Michael Stoll <Michael.Stoll@uni-bayreuth.de>
Date:   Sat Nov 11 15:52:40 2023 +0000

    feat: add definition of and statements about the set of smooth numbers (#8252)
    
    We define the set `Nat.smoothNumbers n` consisting of the positive natural numbers all of
    whose prime factors are strictly less than `n`.
    
    We also define the finite set `Nat.primesBelow n` to be the set of prime numbers less than `n`.
    
    The main definition `Nat.equivProdNatSmoothNumbers` establishes the bijection between
    `‚Ñï √ó (smoothNumbers p)` and `smoothNumbers (p+1)` given by sending `(e, n)` to `p^e * n`.
    Here `p` is a prime number.
    
    This is in preparation of Euler Products; see [this Zulip thread](https://leanprover.zulipchat.com/#narrow/stream/217875-Is-there-code-for-X.3F/topic/Euler.20products/near/400111270).

[33mcommit d8a661e5774c5f19bfcd4c896ca839ced394e1ee[m
Author: Alex Keizer <alex@keizer.dev>
Date:   Sat Nov 11 11:20:43 2023 +0000

    feat: Add to `List.finRange` and `Fin.castLE` APIs (#8306)
    
    Add a lemma that unfolds `finRange n.succ` in terms of `List.concat`, and add a few simp-lemmas for `Fin.castLE`

[33mcommit 546faa6eca56c2910f4e629a0b93f171ea4bacfc[m
Author: Alex Keizer <alex@keizer.dev>
Date:   Sat Nov 11 09:59:50 2023 +0000

    feat: lemmas about `Bool.toNat` (#8328)

[33mcommit 7766bcc46ae69e55b32297edb59448f2e1fe1dde[m
Author: Scott Morrison <scott@tqft.net>
Date:   Sat Nov 11 09:24:56 2023 +0000

    chore: move Analysis/ContDiff to Analysis/ContDiff/Basic to make room for splitting (#8337)
    
    No changes to content, or splitting, just a rename so there is room for more files.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 5f066e77432aee5c14c229c3aaa178ff639be1a2[m
Author: Junyan Xu <junyanxumath@gmail.com>
Date:   Sat Nov 11 08:27:29 2023 +0000

    chore: generalize CauchySeq to Preorder (#8339)

[33mcommit ea682fb6ed6061053de009a2a33c3b1eac18eb09[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Sat Nov 11 07:17:55 2023 +0000

    feat: `‚®Ö i : Œπ, 0 = 0` in `‚Ñï` (#8324)

[33mcommit e052b5ef09fb7e0abc025478446f94d694e6cd51[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Sat Nov 11 06:37:20 2023 +0000

    feat: more facts on measures in topological groups (#8286)
    
    Prerequisites for #8198

[33mcommit f6ba16a0f6fb85fa5a7fde4ea796bcbb997607a5[m
Author: Scott Morrison <scott@tqft.net>
Date:   Sat Nov 11 06:00:42 2023 +0000

    chore: add comments in CI about || true (#8336)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 76efc30c6ac851df9dfbf6440f6371ee57bf2961[m
Author: Floris van Doorn <fpvdoorn@gmail.com>
Date:   Sat Nov 11 01:53:59 2023 +0000

    feat: measurability of uniqueElim and piFinsetUnion (#8249)
    
    * The extra import doesn't add any additional imports transitively
    * Also use implicit arguments for some `MeasurableSpace` arguments for consistency with other lemmas.
    * Redefine `Equiv.piSubsingleton` and `MulEquiv.piSubsingleton` to `Equiv.piUnique` and `MulEquiv.piUnique`.

[33mcommit 1cdc72c18529d112eb2ad0b16d822ef6b808fe2c[m
Author: Bolton Bailey <bolton.bailey@gmail.com>
Date:   Sat Nov 11 00:04:56 2023 +0000

    refactor: Split out ...DistribClass instances for WithZero (#8108)
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 001301aec7d71e91ddd08f801d9877d6088a7e0d[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Fri Nov 10 21:41:59 2023 +0000

    chore: fix typo in docstring (#8326)
    
    `Metric.bounded` doesn't exist any more.

[33mcommit 52c6af84006c6062db54ac23da65e3bc4e9c8471[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Fri Nov 10 21:41:58 2023 +0000

    feat: When `Nat.card` is zero (#8202)
    
    and lemmas about injectivity/surjectivity of `PLift.map`/`ULift.map`.

[33mcommit d3470ca4499e44e48ecf4684d4d48fe6eea42805[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Fri Nov 10 20:41:39 2023 +0000

    feat(CategoryTheory): the action of a bifunctor on graded objects (#8237)
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit 9cc270f8a05e0c59cb0d362699f7177e74396435[m
Author: Junyan Xu <junyanxumath@gmail.com>
Date:   Fri Nov 10 20:41:38 2023 +0000

    refactor: golf IntermediateField.Lifts (#8221)
    
    Inspired by the [IsAlgClosed.lift.SubfieldWithHom](https://leanprover-community.github.io/mathlib4_docs/Mathlib/FieldTheory/IsAlgClosed/Basic.html#IsAlgClosed.lift.SubfieldWithHom) counterpart:
    
    + Change `Lifts` from a Sigma type to a structure with fields `carrier` and `emb`.
    
    + Change the definition of the partial order on `Lifts` to use `IntermediateField.inclusion`.
    
    + Use [Subalgebra.iSupLift](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Algebra/Algebra/Subalgebra/Basic.html#Subalgebra.iSupLift) in the proof of `Lifts.exists_upper_bound`.
    
    Also:
    
    + Inline multiple auxiliary definitions for `Lifts.exists_upper_bound` and `Lifts.exists_lift_of_splits` into the proofs proper.
    
    + Move the `Supremum` section much further up, in order to use the new lemma `toSubalgebra_iSup_of_directed` to prove stuff about `Lifts` (and golf a proof about `CompactElement`). `isAlgebraic_iSup` however can't be moved up, so I put it near `adjoin.finiteDimensional`, the last lemma it depends on.
    
    
    
    Co-authored-by: acmepjz <acme_pjz@hotmail.com>

[33mcommit ecdd87a32faafd1762b706324fbef9260022a7b2[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Fri Nov 10 20:41:37 2023 +0000

    refactor(Algebra/Homology): remove single‚ÇÄ (#8208)
    
    This PR removes the special definitions of `single‚ÇÄ` for chain and cochain complexes, so as to avoid duplication of code with `HomologicalComplex.single` which is the functor constructing the complex that is supported by a single arbitrary degree. `single‚ÇÄ` was supposed to have better definitional properties, but it turns out that in Lean4, it is no longer true (at least for the action of this functor on objects). The computation of the homology of these single complexes is generalized for `HomologicalComplex.single` using the new homology API: this result is moved to a separate file `Algebra.Homology.SingleHomology`.

[33mcommit 3901cb55c9bf81f92953c9298af31f83e820a9df[m
Author: Junyan Xu <junyanxumath@gmail.com>
Date:   Fri Nov 10 20:41:36 2023 +0000

    feat: characterize summability by vanishing of `tsum`s (#8194)
    
    
    
    Co-authored-by: sgouezel <sebastien.gouezel@univ-rennes1.fr>
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>

[33mcommit ad65c15d60f6a89e359a9c4b1d884c04dc0af081[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Fri Nov 10 19:51:27 2023 +0000

    chore: Golf `AffineSubspace.convex` (#8322)

[33mcommit 5da767a5afe48855bab9eff39a425eed085684d0[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Fri Nov 10 19:19:01 2023 +0000

    feat: Simple `Finpartition` lemmas (#8321)

[33mcommit 8c926b7a4a6a82e773cea05a91bac300eed7ace1[m
Author: Newell Jensen <newell.jensen@gmail.com>
Date:   Fri Nov 10 19:19:00 2023 +0000

    Feat (GroupTheory.SpecificGroups.KleinFour): Add the Klein four-group to specific groups. (#7937)
    
    Feat: Add the Klein four-group to specific groups.
    
    
    
    Co-authored-by: Newell Jensen <newell@users.noreply.github.com>

[33mcommit b0bb59ce4425c342881eb6200bab03bb0443c25c[m
Author: Xavier Roblot <46200072+xroblot@users.noreply.github.com>
Date:   Fri Nov 10 18:21:17 2023 +0000

    feat: Minkowski Convex Body Theorem for compact convex body (#8274)

[33mcommit 1fb1275a5e19de06ab37db802c088ece01118c7c[m
Author: Jannis Limperg <jannis@limperg.de>
Date:   Fri Nov 10 17:28:19 2023 +0000

    fix: continuity: remove npowRec rule (#8312)
    
    This rule used to unfold the recursive function `npowRec` unconditionally, so Aesop would loop during normalisation unless another normalisation rule (usually simp) happened to close the goal. To prevent this issue, Aesop master now disallows recursive unfold rules, so we have to remove the `npowRec` rule.

[33mcommit f3ca3380642145163632c84e7c02b907996adab2[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Fri Nov 10 17:28:18 2023 +0000

    feat(LiminfLimsup, LpSeminorm): add lemmas/golf (#8300)
    
    - Add `blimsup_eq_limsup` and `bliminf_eq_liminf`
    - Generalize `limsup_nat_add` and `liminf_nat_add`
      to a `ConditionallyCompleteLattice`.
    - Add `Filter.HasBasis.blimsup_eq_iInf_iSup`.
    - Add `limsup_sup_filter`, `liminf_sup_filter`, `blimsup_sup_not`,
      `bliminf_inf_not`, `blimsup_not_sup`, `bliminf_not_inf`,
      `limsup_piecewise`, and `liminf_piecewise`.
    - Add `essSup_piecewise`.
    - Assume that the codomain is `‚Ñù‚â•0‚àû`
      in `essSup_indicator_eq_essSup_restrict`.
      This allows us to drop assumptions `0 ‚â§·µê[_] f` and `Œº s ‚â† 0`.
    - Upgrade inequality to an equality in `snormEssSup_piecewise_le` (now
      `snormEssSup_piecewise`) and `snorm_top_piecewise_le` (now
      `snorm_top_piecewise`).
    - Use new lemmas to golf some proofs.

[33mcommit 929bdfce13949dc0318c70c4733f37b2599574df[m
Author: Scott Morrison <scott@tqft.net>
Date:   Fri Nov 10 16:50:24 2023 +0000

    chore: re-enable norm_cast tests (#8193)
    
    Many of these tests were commented out because this file was ported before the rest of Mathlib.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit b5b9c977f50e6371fc5cdc3758870d72902a09aa[m
Author: Oliver Nash <github@olivernash.org>
Date:   Fri Nov 10 15:36:46 2023 +0000

    chore: rename `LinearAlgebra.Eigenspace.IsAlgClosed` to `LinearAlgebra.Eigenspace.Triangularizable` (#8318)
    
    The motivation is that I wish to add further results about triangularizability of linear endomorphisms and I claim this file is a natural home.
    
    This rename-only PR exists to prevent breaking 'nightly-testing'.

[33mcommit c4bf273bb60140743e8ddfb692d814b3bb345b9f[m
Author: Riccardo Brasca <riccardo.brasca@gmail.com>
Date:   Fri Nov 10 15:36:45 2023 +0000

    feat: add zeta_sub_one_prime (#8228)
    
    We add `zeta_sub_one_prime`: in a `p^(k+1)`-th cyclotomic extension `Œ∂-1` is prime.

[33mcommit 68b9af61cddd38916b471a8050ba69bdd279f140[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Fri Nov 10 14:22:54 2023 +0000

    chore: add missing "no_index around OfNat.ofNat" library notes (#8316)
    
    Co-authored-by: timotree3 <timorcb@gmail.com>

[33mcommit 508efdc903ed80016aad5cc30e481f83936fcd9f[m
Author: Patrick Massot <patrickmassot@free.fr>
Date:   Fri Nov 10 14:22:53 2023 +0000

    feat: two missing injOn lemmas (#8303)

[33mcommit 28a049b631555ef7bdd7648ebb1f067b4528628e[m
Author: Scott Morrison <scott@tqft.net>
Date:   Fri Nov 10 14:22:52 2023 +0000

    chore: updating nightly-testing should not fail (#8277)
    
    As this CI step runs on commits to `master`, it is important that it does not fail, even if something goes wrong.
    
    I would prefer that we commit garbage to `nightly-testing` where something goes wrong: a separate CI job already notifies us of CI failures on the `nightly-testing` branch, so they will be picked up there.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit b000223a9086792b805cd4d8f2791a4d54d9dfda[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Fri Nov 10 14:22:51 2023 +0000

    feat: corollaries of Liouville's theorem with limits at infinity (#8244)
    
    If `f : E ‚Üí F` is differentiable (over `‚ÑÇ`) and `Tendsto f (cocompact E) (ùìù c)` then `f = Function.const E c`. This is useful to make the proof of the fundamental theorem of algebra slightly more conceptual, as well as to simplify the proof that the spectrum of an element in  a Banach algebra over `‚ÑÇ` is nonempty.
    
    - [ ] depends on: #8234

[33mcommit a189a12851d16ece88a9f974eb4c9aaea8087321[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Fri Nov 10 14:22:50 2023 +0000

    feat: quasi-isomorphisms of homological complexes (#8206)
    
    This PR defines the typeclass `QuasiIso` which corresponds to quasi-isomorphisms of homological complexes for the new homology API.

[33mcommit 9e03d9ced7ba4d2bf95f9ed7da0e3a3ffbc81d9e[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Fri Nov 10 13:54:15 2023 +0000

    fix: make primeFactors_one about one (#8315)

[33mcommit 89e204a7f699cb35506cb034db368236d808f6a4[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Fri Nov 10 13:54:14 2023 +0000

    feat(CategoryTheory): Trifunctors obtained by composition of bifunctors (#8240)

[33mcommit f3baa4cf82426b2733c9249626506032301e7097[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Fri Nov 10 13:09:51 2023 +0000

    feat(CategoryTheory): more API for limit kernel forks (#8200)
    
    In this PR, we introduce `KernelFork.mapIsoOfIsLimit` which is the isomorphism between the "points" of two limit kernel forks of maps which are isomorphic in the category of arrows. This generalizes `kernel.mapIso` which is the case where the limit kernel forks are given by `limit.isLimit`.

[33mcommit 27e5b0c1a681e9b66204fae8a49eabd5b8bd9938[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Fri Nov 10 13:09:50 2023 +0000

    feat: homology of short complexes of modules (#8174)

[33mcommit 101dcc0ceaea6541bc8769bfc0d8f2022736a899[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Fri Nov 10 12:46:12 2023 +0000

    feat(CategoryTheory): exact sequences (#8152)
    
    This PR defines the predicate `ComposableArrows.Exact`.

[33mcommit c9afd27d616b2dce129c9121c3738d36ad03caa5[m
Author: Moritz Doll <moritz.doll@googlemail.com>
Date:   Fri Nov 10 12:09:33 2023 +0000

    chore(Analysis/InnerProductSpace): LinearMap.isAdjointPair_inner generalization to isROrC (#8309)
    
    I forgot in the previous PR (#8295) that there are two versions of the adjoint.

[33mcommit 7a1bf932d49ac6f72417c8faa8ae60e006f6db5d[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Fri Nov 10 10:42:45 2023 +0000

    chore: rename `star_mul_self_nonneg'` (#8305)

[33mcommit 1d775649ea8e0e1abd5584cd2fe1890edc775880[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Fri Nov 10 10:42:44 2023 +0000

    feat: Simple results about `ZMod` (#8205)

[33mcommit e72b70127fe364296292c0bdb683c0b5456ebc53[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Fri Nov 10 10:07:45 2023 +0000

    feat(Condensed): discrete-underlying adjunction (#8270)
    
    
    We define a functor, associating to an object of a concrete category with nice properties, a "discrete" condensed object, and prove that this functor is left adjoint to the forgetful functor from `Condensed C`¬†to `C`.

[33mcommit 92f0def2868b2f31af9631600a482518c1a82dbe[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Fri Nov 10 10:07:44 2023 +0000

    feat: Diagonality of `Sym2.map` (#8183)

[33mcommit 5ced22e4e054723d959a427a52683b94051ee784[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Fri Nov 10 09:14:01 2023 +0000

    refactor: Unify spelling of "prime factors" (#8164)
    
    mathlib can't make up its mind on whether to spell "the prime factors of `n`" as `n.factors.toFinset` or `n.factorization.support`, even though those two are defeq. This PR proposes to unify everything to a new definition `Nat.primeFactors`, and streamline the existing scattered API about `n.factors.toFinset` and `n.factorization.support` to `Nat.primeFactors`. We also get to write a bit more API that didn't make sense before, eg `primeFactors_mono`.

[33mcommit 48b0f038af182942f671cf9741b5c6498c4ab2cf[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Fri Nov 10 09:14:00 2023 +0000

    feat(Data/Polynomial/AlgebraMap): more results for non-commutative polynomials (#8116)
    
    This adds an `AlgHom` version of `eval‚ÇÇRingHom'`, and a stronger ext lemma for noncommutative algebras.
    This is a follow-up to leanprover-community/mathlib#9250
    
    This better ext lemma golfs away most of a nasty proof.

[33mcommit 0ffba7e41658682d6216432d6ee5ab73b0d4b1f2[m
Author: Jz Pan <acme_pjz@hotmail.com>
Date:   Fri Nov 10 09:13:59 2023 +0000

    feat(FieldTheory/PrimitiveElement): Steinitz Theorem (#7788)
    
    Added `Field.exists_primitive_element_iff_finite_intermediateField`: a finite extension `E / F` has a primitive element if and only if the intermediate fields between `E / F` are finitely many.
    Also known as Steinitz Theorem <https://en.wikipedia.org/wiki/Primitive_element_theorem#The_theorems>.
    
    
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>
    Co-authored-by: Junyan Xu <junyanxumath@gmail.com>
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>

[33mcommit d83e9b6e36194ba57dacb3e67c683dd273e1fd0a[m
Author: Jz Pan <acme_pjz@hotmail.com>
Date:   Fri Nov 10 09:13:57 2023 +0000

    feat(FieldTheory/IsSepClosed): add `IsSepClosed.lift` and `IsSepClosure.equiv` (#6670)
    
    - `IsSepClosed.lift` is a map from a separable extension `L` of `K`, into any separably closed extension `M` of `K`.
    
    - `IsSepClosure.equiv` is a proof that any two separable closures of the
      same field are isomorphic.
    
    
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>

[33mcommit a2441385be92963265144706bc8db8ffed6e4f2e[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Fri Nov 10 08:35:41 2023 +0000

    chore(Data/Complex/Basic): add missing cast lemmas for `Rat` (#8225)
    
    One `Nat` lemma was duplicated

[33mcommit 0a4a67eb6f5e752fd646cf18ddc94b7eaa251ad7[m
Author: Scott Morrison <scott@tqft.net>
Date:   Fri Nov 10 02:14:06 2023 +0000

    chore: bump dependencies (#8308)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 332340d8760e750d04114ee5920c382b8fe75d8e[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Thu Nov 9 19:09:39 2023 +0000

    fix: correct precedence for coercion arrows (#8297)
    
    The new precedences match `coeNotation` in core:
    ```lean
    syntax:1024 (name := coeNotation) "‚Üë" term:1024 : term
    ```
    
    They also match the precedence in Lean 3.

[33mcommit 91dfb1ac507c055356ed72fc1e2bf159743c894f[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Thu Nov 9 17:46:13 2023 +0000

    feat(RingTheory/PolynomialAlgebra): lemmas about `X` and `C` (#8294)

[33mcommit b9c3765b62458372adb29e0028d38dd163525a38[m
Author: Xavier Roblot <46200072+xroblot@users.noreply.github.com>
Date:   Thu Nov 9 17:46:12 2023 +0000

    feat: Prove that a fundamental domain has nonzero volume (#8287)

[33mcommit e0637173b63fe0a77e1b26b4e3f3830ad01b9292[m
Author: Floris van Doorn <fpvdoorn@gmail.com>
Date:   Thu Nov 9 16:27:14 2023 +0000

    style: shorten simps configurations (#8296)
    
    Use `.asFn` and `.lemmasOnly` as `simps` configuration options.
    
    For reference, these are defined here:
    
    https://github.com/leanprover-community/mathlib4/blob/4055c8b471380825f07416b12cb0cf266da44d84/Mathlib/Tactic/Simps/Basic.lean#L843-L851

[33mcommit ac00de12d4cdf0e1ef8927c6fe6fd14020a390c0[m
Author: David Renshaw <dwrenshaw@gmail.com>
Date:   Thu Nov 9 15:38:57 2023 +0000

    feat: port smul positivity extension (#8067)
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 4bca330d2c6b1c80643af7d53b139968e892bc65[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Thu Nov 9 15:05:19 2023 +0000

    feat(SpecialFunctions/Pow): add 2 more `rpow_ofNat` (#8281)
    
    - Add `NNReal.rpow_ofNat` and `ENNReal.rpow_ofNat`.
    - Add `ENNReal.rpow_lt_top_iff_of_pos`.

[33mcommit 928e39ccb1c8f045ac40d350f150952770044d04[m
Author: Anne Baanen <vierkantor@vierkantor.com>
Date:   Thu Nov 9 13:54:39 2023 +0000

    feat: `reduce_mod_char` tactic for reducing numeric expressions in positive characteristic (#5376)
    
    This PR defines the `reduce_mod_char` tactic, which traverses expressions looking for numerals `n`, such that the type of `n` is a ring of (positive) characteristic `p`, and reduces these numerals modulo `p`, to lie between `0` and `p`.
    
    This is one of my first Lean 4 metaprogramming projects, so I eagerly await you pointing out all my mistakes. Especially I would like to learn where I should insert those magical `withContext` and `instantiateMVars` incantations.
    
    Zulip thread: https://leanprover.zulipchat.com/#narrow/stream/217875-Is-there-code-for-X.3F/topic/tactic.20for.20easy.20calculations.20in.20ZMod.20p.3F
    
    
    
    Co-authored-by: Anne Baanen <Vierkantor@users.noreply.github.com>

[33mcommit 645905bd865a82cc0a95f6114d6dc2edcbb4de02[m
Author: Moritz Doll <moritz.doll@googlemail.com>
Date:   Thu Nov 9 12:45:53 2023 +0000

    chore(InnerProductSpace/Adjoint): isAdjointPair_inner for IsROrC (#8295)

[33mcommit c488ddff9b03789975c805cd7a2583e663112641[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Thu Nov 9 12:45:52 2023 +0000

    style: add missing spaces around colons (#8293)
    
    This is not exhaustive

[33mcommit 934bdf35156a39ae71d248093e8436c1c5e20434[m
Author: Alex Keizer <alex@keizer.dev>
Date:   Thu Nov 9 12:45:50 2023 +0000

    chore: add missing API around `Fin.snoc` (#8231)
    
    Adds a recursion principle for `Fin n` in terms of `Fin.snoc` and `Fin.elim0`, and a few related theorems

[33mcommit db05266e32010ce5174d2da586f3db26d50e0880[m
Author: Yuma Mizuno <mizuno.y.aj@gmail.com>
Date:   Thu Nov 9 12:45:49 2023 +0000

    featl(CategoryTheory/Bicategory/Adjunction): define composition (#6407)
    
    - [x] depends on: #6406

[33mcommit 4055c8b471380825f07416b12cb0cf266da44d84[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Thu Nov 9 12:07:17 2023 +0000

    feat: change definition for `p = 0` in `piLp` (#8290)
    
    The current definition of the distance in `piLp` uses the distance for `p > 0`, but avoids it for `p = 0`. We change the definition for `p = 0` to also have it in terms of the distance, to make sure it is reasonable even when one uses non-Hausdorff spaces.This matches what has been done for `prodLp` in #6136.

[33mcommit 7901bf47616cad05882e24d2e7a88122fe790fef[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Thu Nov 9 12:07:16 2023 +0000

    feat(MeasureSpace): add  `Measure.map_apply‚ÇÄ` (#8283)
    
    Add a version of `map_apply` for `NullMeasurableSet`s. Also remove some empty lines and golf the proof of `ae_le_of_ae_lt`.

[33mcommit 4dd5ba0b07cd0ddfdc5d7cc7850db86c2e1ec5db[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Thu Nov 9 10:14:31 2023 +0000

    chore(Data/Real/ENNReal): rename `some` to `ofNNReal` (#8276)
    
    The `some` name feels like an implementation detail.

[33mcommit f19e98eb5a357695e334523d784902bb42910b5c[m
Author: Xavier Roblot <46200072+xroblot@users.noreply.github.com>
Date:   Thu Nov 9 10:14:30 2023 +0000

    feat: Generalize results around the Gaussian integrals to powers other than two (#8033)
    
    These are straight generalisations of results related to Gauss integrals to real positive powers other than 2. They will be useful for #8030

[33mcommit 376952a59fdcabcebb2db7d9f7fca9dd699243e7[m
Author: Xavier Roblot <46200072+xroblot@users.noreply.github.com>
Date:   Thu Nov 9 09:05:05 2023 +0000

    feat: Add polar change of coordinates for complex variable (#8034)

[33mcommit e8a32f1f8c0b1ae8635c7aec3f22181d0e910fa4[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Thu Nov 9 08:02:33 2023 +0000

    feat(StronglyMeasurable): add `AEStronglyMeasurable.nullMeasurableSet_support` (#8282)

[33mcommit 66e5402e652db5dbe842be209ab0a2adf24b343d[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Thu Nov 9 04:02:45 2023 +0000

    chore(NormedSpace/PiLp): drop unneeded `dite` (#8280)
    
    Use non-dependent `if` instead.

[33mcommit a084bd518bdc76e34834d5fd57bc6a5024530d9d[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Thu Nov 9 04:02:44 2023 +0000

    style(SetTheory): remove useless parentheses (#8279)
    
    These were caused by a bad notation precedence in mathlib3, where the local version of `^` was given precedence 0. We're not using the local notation at all in Mathlib4 (partly because it was broken, which this PR fixes).

[33mcommit 6032e3a8dec186f9e90930adbb0b8021ece3a867[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Thu Nov 9 03:06:13 2023 +0000

    feat: inv interchanges cobounded and ùìù[‚â†] 0 in normed division rings (#8234)
    
    
    
    Co-authored-by: Yury G. Kudryashov <urkud@urkud.name>

[33mcommit 76c21f6e54b0b6a545884f76b92f01b5c19a93cc[m
Author: Mac Malone <mac@lean-fro.org>
Date:   Thu Nov 9 01:53:06 2023 +0000

    feat: update toolchain & fetch cache on Mathlib update (#8243)
    
    Make use of the new `post_update` hooks in Lake to match Mathlib's toolchain and fetch cache when a downstream package runs `lake update`.
    
    Co-authored-by: tydeu <tydeu@hatpress.net>

[33mcommit 1dfce854b64e3e4bdfca2ebe9d51c5be86fa07da[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Thu Nov 9 00:36:38 2023 +0000

    chore: Merge back ordered cancellative stuff (#8170)
    
    There really is no reason (mathematically nor import graphically) to have `OrderedCancelCommMonoid` be defined in a separate file from `OrderedCommMonoid`.
    
    Also take the opportunity to:
    * make `OrderedCancelCommMonoid` extend `OrderedCommMonoid`
    * fix capitalisation in instance names
    * standardise to defining the additive of each structure version first, so that `to_additive` can be called directly on the multiplicative version
    * inline at no cost a few auxiliary lemmas

[33mcommit 049141bc4e392809ec982618a8e5f7efb3256a62[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Wed Nov 8 23:58:05 2023 +0000

    feat: new class `InnerRegular` of measures (#8251)
    
    Towards general uniqueness results for the Haar measure, we introduce a new class of regular measures called `InnerRegular`, for measures which are inner regular with respect to compact sets. We also introduce `InnerRegularWRT` for more general classes of inner regular measures with properties to be prescribed, and `InnerRegularCompactLTTop` for measures which are regular for finite measure sets with respect to compact sets -- the latter property is the common denominator to the two main classes of Haar measures, the regular ones and the inner regular ones.

[33mcommit fe7e9d03e799478819b51a14a3b98b485a72d056[m
Author: R√©my Degenne <Remydegenne@gmail.com>
Date:   Wed Nov 8 22:44:32 2023 +0000

    chore: split MeasureTheory.Decomposition.Lebesgue (#8272)
    
    Put all results about decomposition of signed measures into a new file.
    This does not significantly change the imports of the original file, because signed measures are used in the proof of the Lebesgue decomposition theorem for `Measure`.

[33mcommit cd9849d2744c68bda6d10d0abec0d362bc484913[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Wed Nov 8 22:44:31 2023 +0000

    feat(Algebra/Algebra/Hom): add a trivial ext lemma (#8168)
    
    This caused a few downstream proofs to fail with "no goals", forcing them to be golfed!

[33mcommit 92d78f806d65b42afc02a10ac50ff5c8b3acf60a[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Wed Nov 8 22:44:30 2023 +0000

    feat: `attach` and `filter` lemmas (#1470)
    
    Match https://github.com/leanprover-community/mathlib/pull/18087

[33mcommit 0821e8fd48db977c000b43586a2dcb41e17b1a99[m
Author: R√©my Degenne <Remydegenne@gmail.com>
Date:   Wed Nov 8 21:29:32 2023 +0000

    feat: SigmaFinite instances for Measure.withDensity (#8271)
    
    If a measure `Œº` is sigma-finite, then `Œº.withDensity f` is sigma-finite for any a.e.-measurable and a.e. finite function `f`.

[33mcommit 21e2d926b1286a93517b8af10adb8209758c28a8[m
Author: Bhavik Mehta <bhavikmehta8@gmail.com>
Date:   Wed Nov 8 21:29:31 2023 +0000

    chore(Order): restore missing simp attribute (#8162)
    
    This lemma was marked `simp` in mathlib3, and the attribute seems to have gone missing during the port.

[33mcommit 3dc73bd8ff5c9492b41da7f1e0d1825fb9187157[m
Author: Scott Morrison <scott@tqft.net>
Date:   Wed Nov 8 20:09:25 2023 +0000

    chore: make sure all #align's are on a single line (#8215)
    
    We'll need to do this step anyway when it is time to remove them all.
    
    (See #8214 where I'm benchmarking the removal.)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 9718370df3e05843256acea046048b4e51990d73[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Nov 8 20:09:24 2023 +0000

    feat: a relation is "function-like" iff it is given by `(f ¬∑ = ¬∑)` (#8190)
    
    Partially inspired by [this thread](https://leanprover.zulipchat.com/#narrow/stream/270676-lean4/topic/Is.20False.20.E2.86.92.20p.20an.20axiom.20in.20Lean.204.20.3F) on Zulip.

[33mcommit b43844563366140e91587a7a516bc309c7b8d8f1[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Nov 8 20:09:23 2023 +0000

    feat(Algebra/BigOperators): add `mul_le_prod`/`add_le_sum` (#8188)

[33mcommit 4b6c5c9cc8fa519b0e03514d2889362cf74f4a97[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Wed Nov 8 20:09:22 2023 +0000

    feat: Sum of lattices (#8181)
    
    The lexicographic sum of lattices is a lattice.

[33mcommit ab19b3c79e519bc8b60c342a94b2f953ef9fb438[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Wed Nov 8 20:09:21 2023 +0000

    feat: Product of generalized boolean algebras (#8180)

[33mcommit 2f574a624eb54ae37348d77e51d8d16d6ba98992[m
Author: Martin Dvo≈ô√°k <martin.dvorak@matfyz.cz>
Date:   Wed Nov 8 18:36:43 2023 +0000

    chore(Algebra/Order/Monoid/Prod): unify type names (#8273)
    
    
    
    Co-authored-by: madvorak <dvorakmartinbridge@seznam.cz>

[33mcommit 83bf88a11cc22e1805f3e8a2788a705892cc82df[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Wed Nov 8 18:36:42 2023 +0000

    feat: add HasDerivAt.norm_sq (#8268)
    
    This is just a special case of the `HasFDerivAt` version

[33mcommit 6b362d1e171083744aa1ccf9c39313251d777dac[m
Author: Adam Topaz <github@adamtopaz.com>
Date:   Wed Nov 8 18:36:41 2023 +0000

    fix: Fix `FundamentalGroupoid` being reducible. (#8257)
    
    Instead it is now the opposite -- a structure with a single field.
    
    [zulip discussion](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Groupoid.2EtoCategory/near/400820106)
    
    
    
    Co-authored-by: Adam Topaz <adamtopaz@users.noreply.github.com>

[33mcommit 7fbfeaf5c9ab23e0183c586567e5d0352031980c[m
Author: Oliver Nash <github@olivernash.org>
Date:   Wed Nov 8 18:36:40 2023 +0000

    feat: generalized eigenspaces are independent (#8177)
    
    The main change is to upgrade the existing `Module.End.eigenspaces_independent`, which applied only to eigenspaces (and required a `[Field K]` assumption) to `Module.End.independent_generalizedEigenspace`, which applies to generalized eigenspaces (and requires only `[NoZeroSMulDivisors R M]`)
    
    
    
    Co-authored-by: Jireh Loreaux <loreaujy@gmail.com>

[33mcommit d34f0e9aa1b909f0d4a50e2ce65f8db5d2df8cbc[m
Author: Timo <timorcb@gmail.com>
Date:   Wed Nov 8 18:36:39 2023 +0000

    chore: add basic @[simp]s for `Gamma` (#7977)
    
    I don't personally have any need for these. It just seemed like these would make the API more complete.

[33mcommit 761f2973ebb53717c9421e86413f33c42f821e4b[m
Author: Scott Morrison <scott@tqft.net>
Date:   Wed Nov 8 17:18:18 2023 +0000

    chore: bump dependencies (#8266)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 11572f182a36a4441f9a62246985ed9d2e1f3e32[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Wed Nov 8 15:51:56 2023 +0000

    chore: tidy various files (#8175)

[33mcommit 8e84de5e3496ae2e6d004dc89c7665c48141b38d[m
Author: Timo <timorcb@gmail.com>
Date:   Wed Nov 8 15:51:55 2023 +0000

    chore(PartENat): golf and improve `ofNat` support (#8002)
    
    This PR adds simp lemmas for `OfNat.ofNat n : PartENat`, `0 : PartENat`, and `1 : PartENat` in every place where there was a simp lemma for `((n : ‚Ñï) : PartENat)`. This is necessary for simp confluence in the presence of lemmas such as `Nat.cast_ofNat`. In addition, instances for `CharZero` and `ZeroLEOneClass` are provided so that the lemmas from `Data/Nat/Cast/Order.lean` will apply, golfing some proofs.
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 5c17a3a9dad7e0fbff5006d1ff7a29f392d40027[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Wed Nov 8 15:00:38 2023 +0000

    chore(Topology/Algebra/Module/Basic): missing cast lemmas and better defeq (#8267)

[33mcommit d4e028db543ad658af14d7f34d5561c29b80a7d5[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Nov 8 13:26:55 2023 +0000

    feat: add lemmas about `Inv.inv` for `Filter`s (#8261)

[33mcommit 9efe273d66c567eb3fba1c28bd677fb6bb6027b0[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Wed Nov 8 11:24:51 2023 +0000

    feat: superFactorial_dvd_vandermonde_det (#6893)
    
    - [x] depends on: #6806
    - [x] depends on: #6812
    - [x] depends on: #6918
    - [x] depends on: #6927
    - [x] depends on: #6929
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit b8b86fa3a859e19e2c1de27c40a93acb1bb13ffa[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Nov 8 09:33:31 2023 +0000

    feat(Bornology): add 2 lemmas (#8263)
    
    Add `Bornology.eventually_ne_cobounded`
    and `Filter.Tendsto.eventually_ne_cobounded`.

[33mcommit b4636030a818c82e32e81678c694f56f78db2e37[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Nov 8 08:49:13 2023 +0000

    chore(Lipschitz): split (#8264)
    
    Move parts that don't need `MetricSpace`s to a new file.

[33mcommit aff5c83de20e0278c07a766eb372e9920a407de2[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Wed Nov 8 07:48:12 2023 +0000

    feat: continuity of parametric integrals with weaker assumptions (#8247)
    
    The current version of continuity of parametric integrals assume a first countable topology, to apply the dominated convergence theorem. When one deals with continuous compactly supported functions, this is not necessary, and a direct elementary approach makes it possible to remove the first countable assumption.

[33mcommit 4a70d87f99917b0da1c5083b52b52653e78122d8[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Wed Nov 8 06:59:37 2023 +0000

    chore: move TopologicalSpace.SecondCountableTopology into the root namespace (#8186)
    
    All the other properties of topological spaces like T0Space or RegularSpace are in the root namespace. Many files were opening `TopologicalSpace` just for the sake of shortening `TopologicalSpace.SecondCountableTopology`...

[33mcommit 2852d235df5e0099bc18e26c010f596e5341a1fb[m
Author: Amelia Livingston <101damnations@github.com>
Date:   Wed Nov 8 04:41:32 2023 +0000

    feat(RepresentationTheory/GroupCohomology/LowDegree): `H¬π(G, A) ‚âÉ Hom(G, A)` for a trivial representation (#7988)

[33mcommit ba16f9f0ff4106d9c7a38a6deb7c802ff4d1e796[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Wed Nov 8 03:57:14 2023 +0000

    feat: Strictly convex functions have unique minima (#8182)

[33mcommit 69917350fde3cf997b2c2782d45ba375756c6ef3[m
Author: Newell Jensen <newell.jensen@gmail.com>
Date:   Wed Nov 8 03:09:50 2023 +0000

    feat: Add extensionality theorem to `PresentedGroup`. (#8260)
    
    Add `ext` theorem to `PresentedGroup`.
    
    
    
    Co-authored-by: Newell Jensen <newell@users.noreply.github.com>

[33mcommit 7e2818fe0c974a8b797d2ab119888f68799de234[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Wed Nov 8 02:26:39 2023 +0000

    chore: fix typo in Nobeling.lean docstring (#8254)

[33mcommit 5ed5d1637e087aeab2ce77082f4288f1c8e0d72e[m
Author: Andrea Laretto <iwilare@gmail.com>
Date:   Wed Nov 8 02:26:38 2023 +0000

    feat(CategoryTheory/Products): opposite of product of categories (#8150)
    
    Equivalence between the opposite of a product of categories and the product of the opposites.

[33mcommit 2956f07e9b0e82da5ffa12fe3d1b0e0d4a654507[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Nov 8 01:47:28 2023 +0000

    feat(Topology/MetricSpace): weaker TC assumptions (#8259)
    
    Assume `[WeaklyLocallyCompactSpace Œ±]`
    instead of `[LocallyCompactSpace Œ±]`
    in 2 lemmas.

[33mcommit 05b4a2306b03cc5a94faf06a8788e5be927228db[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Wed Nov 8 01:47:26 2023 +0000

    feat: When a function is not equitable (#8204)

[33mcommit ba62dc5942fe65272b5744d1ad6b0aa10bae95ab[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Nov 8 01:25:44 2023 +0000

    feat(Asymptotics/Theta): add 3 trivial lemmas (#8258)
    
    Add `Filter.EventuallyEq.isTheta`,
    `Asymptotics.IsTheta.isTheta_congr_left`,
    and `Asymptotics.IsTheta.isTheta_congr_right`.

[33mcommit c97b9b00802c2ed343d9ac73e59be287428dbcf0[m
Author: Floris van Doorn <fpvdoorn@gmail.com>
Date:   Tue Nov 7 20:49:48 2023 +0000

    fix: fixes of 3 PRs (#8248)
    
    Fixes mistake introduced in #7976 (ping to @alreadydone that you should use `@[to_additive (attr := simp)]` and not `@[to_additive, simp]`) and some namespacing mistakes from my own PRs #7337 and #7755

[33mcommit b78259668282daa64d6e1f2119377d4fafb52157[m
Author: Junyan Xu <junyanxumath@gmail.com>
Date:   Tue Nov 7 19:35:02 2023 +0000

    chore: golf all coe_iSup_of_directed (#8232)

[33mcommit c8f6b015c3290b0c02a3c757926e41d933bb33fc[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Tue Nov 7 19:35:01 2023 +0000

    chore: remove porting notes about `simp [(lemma)]` (#8227)
    
    Most (but not all) of these are now fixed, presumably due to the latest lean release.
    
    There is still one porting note that remains, about a `(Submonoid.smul_def)` that cannot be un-parenthesized.

[33mcommit 5a90dad00095a9680290a8707747cd6283862e1c[m
Author: Alex Keizer <alex@keizer.dev>
Date:   Tue Nov 7 18:26:52 2023 +0000

    docs: clarify endianness of `Nat.bits` (#8241)

[33mcommit 251baaf81400b9f054ed45d1e0efb6c10dcc5567[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Tue Nov 7 18:03:42 2023 +0000

    chore: Fix capitalisation of e-transforms (#8203)
    
    Everything was wrong here.

[33mcommit a051ac5f786c8f66232009a23a0e41c9f5af1656[m
Author: Rob Lewis <Rob.y.lewis@gmail.com>
Date:   Tue Nov 7 17:41:55 2023 +0000

    feat: improve `polyrith` by testing for membership in the radical (#7790)
    
    In @hrmacbeth 's tutorial on `polyrith`, there were examples of problems that it could almost solve, but failed. The goal was not expressible as a linear combination of the hypotheses but a power of the goal was.
    
    ```lean
    example (x y z : ‚Ñö) (h : x = y) (h2 : x * y = 0) : x + y*z = 0 :=
    sorry
    ```
    
    Mathematically, `x+y*z` is in the radical of the ideal generated by `x-y, x*y`. There's a "standard trick" for testing membership in the radical without a search for the proper exponent: see e.g. section 2.2 of [arxiv.org/pdf/1007.3615.pdf](https://arxiv.org/pdf/1007.3615.pdf) or 4.2 Prop 8 of Cox, Little, O'Shea.
    
    This PR implements the trick in the Sage call made by `polyrith`. When the power returned is `n > 1`, we use `linear_combination (exp := n)` to check the certificate (#7789 ).
    
    The `polyrith` test infrastructure still needs to be ported from mathlib3. All tests in the test file succeed when they are uncommented. A future PR will restore the old test suite.
    
    
    Co-authored-by: Rob Lewis <rob.y.lewis@gmail.com>
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>

[33mcommit 9183ab23a86211336e011948504c3b1f780adff3[m
Author: qawbecrdtey <qawbecrdtey@kaist.ac.kr>
Date:   Tue Nov 7 17:20:00 2023 +0000

    feat: lemmas about Finset.card (#7605)
    
    
    
    Co-authored-by: qawbecrdtey <40463813+qawbecrdtey@users.noreply.github.com>
    Co-authored-by: qawbecrdtey <qawbecrdtey@naver.com>

[33mcommit bd3e369b6f82c874de0f318c71d7e0595f8a3aa4[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Nov 7 08:42:36 2023 -0600

    feat(Data/../ENNReal): add lemmas about `ENNReal.ofReal` (#8163)
    
    Compare `ENNReal.ofReal r` to `Nat.cast n` and literals.
    
    ---
    <!-- The text above the `---` will become the commit message when your
    PR is merged. Please leave a blank newline before the `---`, otherwise
    GitHub will format the text above it as a title.
    
    To indicate co-authors, include lines at the bottom of the commit
    message
    (that is, before the `---`) using the following format:
    
    Co-authored-by: Author Name <author@email.com>
    
    Any other comments you want to keep out of the PR commit should go
    below the `---`, and placed outside this HTML comment, or else they
    will be invisible to reviewers.
    
    If this PR depends on other PRs, please list them below this comment,
    using the following format:
    - [ ] depends on: #abc [optional extra text]
    - [ ] depends on: #xyz [optional extra text]
    -->
    
    [![Open in
    Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)

[33mcommit 64b26c954a757aa34b893683f1b316046d8c3652[m
Author: Yuma Mizuno <mizuno.y.aj@gmail.com>
Date:   Tue Nov 7 23:42:01 2023 +0900

    feat(CategoryTheory/Monoidal): add lemmas for whiskering operators (#8191)
    
    Extracted from #6307 as suggested in
    https://github.com/leanprover-community/mathlib4/pull/6307#discussion_r1371849810
    .
    
    ---
    <!-- The text above the `---` will become the commit message when your
    PR is merged. Please leave a blank newline before the `---`, otherwise
    GitHub will format the text above it as a title.
    
    To indicate co-authors, include lines at the bottom of the commit
    message
    (that is, before the `---`) using the following format:
    
    Co-authored-by: Author Name <author@email.com>
    
    Any other comments you want to keep out of the PR commit should go
    below the `---`, and placed outside this HTML comment, or else they
    will be invisible to reviewers.
    
    If this PR depends on other PRs, please list them below this comment,
    using the following format:
    - [ ] depends on: #abc [optional extra text]
    - [ ] depends on: #xyz [optional extra text]
    -->
    
    [![Open in
    Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)

[33mcommit 430ef65699e5864602ebdf9e09fea8bb3431c9c3[m
Author: grunweg <grunweg@posteo.de>
Date:   Tue Nov 7 15:27:34 2023 +0100

    feat: lemmas analogous to fderiv_within_of_isOpen (#8057)
    
    - from the project towards Sard's theorem
    
    ---------
    
    Co-authored-by: Michael Rothgang <rothgami@math.hu-berlin.de>

[33mcommit 0eb6b931f56b67cba3183cbb02a4cd394f64884e[m
Author: Floris van Doorn <fpvdoorn@gmail.com>
Date:   Tue Nov 7 14:59:13 2023 +0100

    feat: define `updateFinset` which updates a finite number components of a vector (#7341)
    
    * from the Sobolev project (formerly: marginal project)
    
    ---------
    
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>

[33mcommit a1f33eb2d0aea053127e784c802942e36a0f204f[m
Author: grunweg <grunweg@posteo.de>
Date:   Tue Nov 7 14:32:30 2023 +0100

    feat: miscellaneous lemmas about local homeomorphisms (#8062)
    
    - variant of extend_left_inv', stated in terms of images (instead of
    point-wise)
    - variant of map_source', stated for images of subsets (instead of
    point-wise)
    - a local homeomorphism and its inverse are open on its source
    
    ---------
    
    Co-authored-by: Michael Rothgang <rothgami@math.hu-berlin.de>

[33mcommit 61adfa9fea5e46726be75439ae882847016b736d[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Tue Nov 7 14:31:26 2023 +0100

    feat: bound the measure of a set by the integral of a function, from above and from below (#8123)
    
    Also weaken some T2 space assumptions in some integration lemmas.
    
    ---------
    
    Co-authored-by: Heather Macbeth <25316162+hrmacbeth@users.noreply.github.com>

[33mcommit 18d2099ccc62312e454915e5eb53ea7f882b5140[m
Author: R√©my Degenne <remydegenne@gmail.com>
Date:   Tue Nov 7 12:01:17 2023 +0100

    feat: add `Integrable.piecewise` (#8080)

[33mcommit 1c4e5aec91325c3fe17aefb0307ea209b00e7cdc[m
Author: uniwuni <95649083+uniwuni@users.noreply.github.com>
Date:   Tue Nov 7 12:00:57 2023 +0100

    chore(MeasureTheory/MeasurableSpace/Basic): change reference to file in docs (#8230)
    
    An nonexistent file is mentioned in the intro docs, it is changed to
    refer to the correct file.

[33mcommit b0a6f35ec2b25749c47c37bfb43f9412f99fe12b[m
Author: Xavier Roblot <46200072+xroblot@users.noreply.github.com>
Date:   Tue Nov 7 12:00:13 2023 +0100

    feat: Add NoAtoms instances for product measures (#8207)
    
    The instance exists for `Measure.pi`, see
    [MeasureTheory.Measure.pi_noAtoms'](https://leanprover-community.github.io/mathlib4_docs/Mathlib/MeasureTheory/Constructions/Pi.html#MeasureTheory.Measure.pi_noAtoms'),
    but not for `Measure.prod`.

[33mcommit b792832d2dbe67e2d22765f71297079aa0794933[m
Author: Yakov Pechersky <pechersky@users.noreply.github.com>
Date:   Tue Nov 7 05:14:47 2023 -0500

    chore: rename List.rdrop to dropRight (#8233)
    
    ---
    <!-- The text above the `---` will become the commit message when your
    PR is merged. Please leave a blank newline before the `---`, otherwise
    GitHub will format the text above it as a title.
    
    To indicate co-authors, include lines at the bottom of the commit
    message
    (that is, before the `---`) using the following format:
    
    Co-authored-by: Author Name <author@email.com>
    
    Any other comments you want to keep out of the PR commit should go
    below the `---`, and placed outside this HTML comment, or else they
    will be invisible to reviewers.
    
    If this PR depends on other PRs, please list them below this comment,
    using the following format:
    - [ ] depends on: #abc [optional extra text]
    - [ ] depends on: #xyz [optional extra text]
    -->
    
    [![Open in
    Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)

[33mcommit 048fe93af13417a7050bfb46d3540a78a24f34a2[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Tue Nov 7 11:06:24 2023 +0100

    feat: Urysohn lemma in regular locally compact spaces (#8124)
    
    Also change a few theorems to instances, as instance loops are not a
    problem any more.
    
    ---
    <!-- The text above the `---` will become the commit message when your
    PR is merged. Please leave a blank newline before the `---`, otherwise
    GitHub will format the text above it as a title.
    
    To indicate co-authors, include lines at the bottom of the commit
    message
    (that is, before the `---`) using the following format:
    
    Co-authored-by: Author Name <author@email.com>
    
    Any other comments you want to keep out of the PR commit should go
    below the `---`, and placed outside this HTML comment, or else they
    will be invisible to reviewers.
    
    If this PR depends on other PRs, please list them below this comment,
    using the following format:
    - [ ] depends on: #abc [optional extra text]
    - [ ] depends on: #xyz [optional extra text]
    -->
    
    [![Open in
    Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)

[33mcommit b6ec7450650a5945bf4244751be4a5cf1fee962f[m
Author: Scott Morrison <scott.morrison@gmail.com>
Date:   Mon Nov 6 21:15:25 2023 +1100

    chore: update CI; lean4checker tests are now deterministic

[33mcommit 81dd376a02781030ead59ee35ca5334a7fccc527[m
Author: Scott Morrison <scott@tqft.net>
Date:   Mon Nov 6 19:35:23 2023 +1100

    chore: bump dependencies (#8220)
    
    ---
    <!-- The text above the `---` will become the commit message when your
    PR is merged. Please leave a blank newline before the `---`, otherwise
    GitHub will format the text above it as a title.
    
    To indicate co-authors, include lines at the bottom of the commit
    message
    (that is, before the `---`) using the following format:
    
    Co-authored-by: Author Name <author@email.com>
    
    Any other comments you want to keep out of the PR commit should go
    below the `---`, and placed outside this HTML comment, or else they
    will be invisible to reviewers.
    
    If this PR depends on other PRs, please list them below this comment,
    using the following format:
    - [ ] depends on: #abc [optional extra text]
    - [ ] depends on: #xyz [optional extra text]
    -->
    
    [![Open in
    Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)

[33mcommit 9257586cca3c453ea33261e155792fa0d22d39dd[m
Author: Floris van Doorn <fpvdoorn@gmail.com>
Date:   Sun Nov 5 23:16:02 2023 +0100

    feat: H√∂lder's inequality for more than 2 functions (#7756)
    
    * From the Sobolev project
    
    Co-authored-by: Heather Macbeth
    25316162+hrmacbeth@users.noreply.github.com
    
    ---
    <!-- The text above the `---` will become the commit message when your
    PR is merged. Please leave a blank newline before the `---`, otherwise
    GitHub will format the text above it as a title.
    
    To indicate co-authors, include lines at the bottom of the commit
    message
    (that is, before the `---`) using the following format:
    
    Co-authored-by: Author Name <author@email.com>
    
    Any other comments you want to keep out of the PR commit should go
    below the `---`, and placed outside this HTML comment, or else they
    will be invisible to reviewers.
    
    If this PR depends on other PRs, please list them below this comment,
    using the following format:
    - [ ] depends on: #abc [optional extra text]
    - [ ] depends on: #xyz [optional extra text]
    -->
    
    [![Open in
    Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)
    
    ---------
    
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>

[33mcommit ce4b7e4cb5af8e73e3d0377d0ec81588f9d995ef[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Sun Nov 5 21:55:45 2023 +0000

    feat(Data/Matrix/Basic): add missing lemmas about `natCast` and `intCast` (#8088)
    
    * feat(Data/Matrix/Basic): add missing lemmas about `natCast` and `intCast`
    
    This also gives the `intCast` instance a nicer defeq.
    This remains unopinionated about which side of `diagonal 37 = 37` is the simp-normal form.
    
    * lintfix

[33mcommit ef9e306019ad160abd900db7bfbe1df52584edf5[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Sun Nov 5 15:52:40 2023 -0600

    fix: allow `peel` to hand `‚àÉ Œµ > 0 ... ‚Üî` goals (#8184)

[33mcommit 37eb0688a920b206d7210c6752c7df91c1286739[m
Author: Scott Morrison <scott@tqft.net>
Date:   Mon Nov 6 08:52:06 2023 +1100

    feat: a solution to if-normalization (#8035)
    
    * feat: a solution to if-normalization
    
    * lint
    
    * import all
    
    * duplicated names
    
    * Update Archive/Examples/IfNormalization/Statement.lean
    
    Co-authored-by: Chris Hughes <33847686+ChrisHughes24@users.noreply.github.com>
    
    * resist the temptation to let aesop specify the data
    
    * typo in doc-string
    
    * workaround
    
    * fix
    
    * fix
    
    * fix
    
    ---------
    
    Co-authored-by: Chris Hughes <33847686+ChrisHughes24@users.noreply.github.com>

[33mcommit cdd069a94a1f34202ebe63660d7f73a241c75f9c[m
Author: Rob Lewis <Rob.y.lewis@gmail.com>
Date:   Sun Nov 5 16:49:33 2023 -0500

    chore: run ci on merge queue event (#8213)

[33mcommit df32aa2ebe0f1ef9bce7831b1bcc0723f07a4724[m
Author: Sebastian Ullrich <sebasti@nullri.ch>
Date:   Sun Nov 5 11:37:13 2023 +0100

    chore: add `open Mathlib` benchmark (#8196)

[33mcommit cf8bb09125341ef5c6957a920f23c7a263ce0e26[m
Author: Scott Morrison <scott@tqft.net>
Date:   Sun Nov 5 20:38:22 2023 +1100

    chore: cleanup zify imports in preparation of upstreaming (#8176)

[33mcommit 5f84b04fbc1600f1ca5b6e466cc318ba177810a5[m
Author: Fran√ßois G. Dorais <fgdorais@gmail.com>
Date:   Sat Nov 4 23:19:30 2023 -0400

    fix: patch for std4#194 (more order lemmas for `Nat`) (#8077)

[33mcommit cdcad962279e44173fcee274283ffacc333cf4f9[m
Author: Fran√ßois G. Dorais <fgdorais@gmail.com>
Date:   Sat Nov 4 22:30:43 2023 -0400

    fix: patch for std4#195 (more succ/pred lemmas for `Nat`) (#6203)

[33mcommit e11f1695b416e14dd20e915d167e2bc74060e58a[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Sat Nov 4 17:09:44 2023 +0000

    feat: descend a continuous map along a quotient map (#8090)
    
    This was done for profinite sets in LTE.
    
    We give a homeomorphism from the quotient of a quotient map to its codomain, and prove that a continuous map which is constant on the fibres of a quotient map can be descended along the quotient map.

[33mcommit 2fd9651cda8da1b345fd126773784577819b0b45[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Sat Nov 4 15:05:11 2023 +0000

    chore: Fix name of `SimpleGraph.Adj` projection (#8179)
    
    `simps` was generating lemmas named `_Adj`.  This PR makes it generate `_adj` instead, to follow the naming convention.

[33mcommit 0a1d2bb8811a403f33d48be82c140fea7e8c88b6[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Sat Nov 4 14:26:25 2023 +0000

    refactor(Data/ZMod/IntUnitsPower): generalize ZMod 2 to work for `Nat` and `Int` too (#7866)
    
    Instead of providing `instance : Pow ‚Ñ§À£ (ZMod 2)`, this now provides `instance [Module R (Additive ‚Ñ§À£)] : Pow ‚Ñ§À£ R`.
    It turns out that this instance already exists for `‚Ñï` and `‚Ñ§`, so all we need to do is create `instance : Module (ZMod 2) (Additive ‚Ñ§À£)` and we obtain new definitions that generalize over all three types.
    
    As a result of the generalization, `z‚ÇÇpow` has been renamed in lemmas to `uzpow` (`u`nits of `‚Ñ§`).
    
    The motivation here is that I need $(-1) ^ i$ to make sense (and be lawful) for `ZMod 2` (on clifford algebras) and `‚Ñï` (on exterior algebras).
    
    [Zulip thread](https://leanprover.zulipchat.com/#narrow/stream/116395-maths/topic/Powers.20of.20.60.E2.84.A4.CB.A3.60.20by.20.60ZMod.202.60/near/397569279)

[33mcommit 99332a0db3ee142c34f65b123618ff5fce69e18e[m
Author: Christian Merten <christian@merten.dev>
Date:   Sat Nov 4 10:29:27 2023 +0000

    feat: (co)limits in FintypeCat (#8137)
    
    Shows that (co)limits exist in `FintypeCat` and that they are created and preserved by `FintypeCat.incl`.

[33mcommit 3fdde99705ee850ade1634dee186b42e97b8b560[m
Author: Xavier Roblot <46200072+xroblot@users.noreply.github.com>
Date:   Sat Nov 4 10:04:10 2023 +0000

    feat: explicit volume computations in NumberTheory.NumberField.CanonicalEmbedding (#6886)
    
    We compute the values of the volumes used in `CanonicalEmbedding`. In particular, we prove that
    ```lean
    volume (fundamentalDomain (latticeBasis K)) =
           (2 : ‚Ñù‚â•0‚àû)‚Åª¬π ^ (NrComplexPlaces K) * NNReal.sqrt ‚Äñdiscr K‚Äñ‚Çä
    ```
    
    This will be useful later on to prove Hermite and Hermite-Minkowski theorems.

[33mcommit 7e0b41d4269984cf8c6e7884bbdbe0417aaaea85[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Sat Nov 4 08:45:44 2023 +0000

    feat: homology of chain complexes in degree 0 (#8169)

[33mcommit dd572a65b31c0e76795771440eeb2bf1d138bb6a[m
Author: Scott Morrison <scott@tqft.net>
Date:   Sat Nov 4 06:42:33 2023 +0000

    chore: minimize imports for simps (#8140)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit e853cefc93e6f1f11de861ed05b95973d3b4f397[m
Author: Rob Lewis <Rob.y.lewis@gmail.com>
Date:   Sat Nov 4 06:17:19 2023 +0000

    feat: add actions script to label new contributors (#8172)
    
    This action will add the `new-contributor' label to any PR from a GitHub user with fewer than 5 closed PRs.
    
    
    
    Co-authored-by: Rob Lewis <rob.y.lewis@gmail.com>

[33mcommit 4e5518cafc0efd7c7b7d287fa960fce5201908db[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Sat Nov 4 02:30:05 2023 +0000

    feat: rewrite lemma for `Monoid.exponent (Multiplicative G)` (#8093)
    
    
    This also fixes a `to_additive` naming error

[33mcommit e849590d294330b860e52fd7793f29d2e8b9a52c[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Sat Nov 4 01:23:39 2023 +0000

    feat: compute the exponent of `ZMod` (#8094)

[33mcommit 035f4246c27e174159c2cb943b0181213b2a1189[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Sat Nov 4 00:57:10 2023 +0000

    chore(Algebra/Algebra/NonUnitalSubalgebra): generalize lemmas to non-associative cases (#8147)
    
    Notably this generalizes `instNonUnitalSubringClass` and makes `toNonUnitalSubring` work in the non-associative case.
    
    The types themselves were already sufficiently general.

[33mcommit 874ff0574c19582d3d275d1c803846549cd53dce[m
Author: Scott Morrison <scott@tqft.net>
Date:   Fri Nov 3 21:31:48 2023 +0000

    chore: add condition to lean-pr-testing-comments.sh (#8082)
    
    This looks for one additional emoji, which now may be added from the Lean 4 side if it decides it is not ready to attempt Mathlib CI.
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 00b8dedb5adc4f64b40ebf8256b2337749bf5c90[m
Author: Mario Carneiro <mcarneir@andrew.cmu.edu>
Date:   Fri Nov 3 20:42:48 2023 +0000

    fix: discharger syntax for field_simp (#8165)
    
    The original code was passing the wrong term to `tacticToDischarge`, which made the discharger argument unusable.
    
    
    
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>

[33mcommit 85b362ef6d16a31c22e5f9d93ff46dcd012e00fb[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Fri Nov 3 20:42:47 2023 +0000

    chore(LinearAlgebra/QuadraticForm/Basic): update SHA (#8161)
    
    The change from `@[reducible] def` to `abbreviation` is meaningless in Lean 4 (in lean3 it was to force the generation of equation lemmas).
    
    At any rate we already use `abbrev`:
    
    https://github.com/leanprover-community/mathlib4/blob/ad7876f1efce582b6da61e520d1a73f6f840b4e9/Mathlib/LinearAlgebra/QuadraticForm/Basic.lean#L908-L909

[33mcommit dfb128319b5c773b76137de485633055390aaf5a[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Fri Nov 3 20:42:46 2023 +0000

    feat(CategoryTheory): inductive construction of composable arrows (#8146)

[33mcommit f4243b977e3ca797701379dd19d2809ac2440c86[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Fri Nov 3 20:42:45 2023 +0000

    feat: Lemmas about the iterated shadow (#7863)
    
    Move the lemmas characterising `Covby` on `Finset Œ±` from `Data.Finset.Interval` to `Data.Finset.Basic`. Golf the other proofs in `Data.Finset.Interval` and make sure the lemma names reflect whether each lemma is about `insert` or `cons`.

[33mcommit 2c48e921fa0b8d8fab43c7b2896d69a0025468f6[m
Author: Richard M. Hill <r.m.hill@ucl.ac.uk>
Date:   Fri Nov 3 20:42:44 2023 +0000

    feat(Data/Polynomial/Derivation): add version of chain rule (#7419)
    
    If `A` is an `R`-algebra and `d : A ‚Üí M` is a derivation, then for any polynomial `f : R[X]` and any `a : A`,
    `d(f(a)) = f'(a) d a`.
    
    
    
    Co-authored-by: Richard M. Hill <86743862+rmhi@users.noreply.github.com>
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit b49464e1f6aea2790c1cbd254b3e53abd9231856[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Fri Nov 3 20:42:43 2023 +0000

    feat(Counterexamples/CliffordAlgebra_not_injective): algebraMap is not always injective. (#6657)
    
    This provides a counterexample for the claim that `Function.Injective (algebraMap R <| CliffordAlgebra Q)`.
    
    This is a formalization of https://mathoverflow.net/questions/60596/clifford-pbw-theorem-for-quadratic-form/87958#87958
    
    Some Zulip discussion is at https://leanprover.zulipchat.com/#narrow/stream/113489-new-members/topic/.F0.9D.94.BD.E2.82.82.5B.CE.B1.2C.20.CE.B2.2C.20.CE.B3.5D.20.2F.20.28.CE.B1.C2.B2.2C.20.CE.B2.C2.B2.2C.20.CE.B3.C2.B2.29/near/222716333.
    
    
    
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>

[33mcommit ccd15763c15da4693fae0da3cc16ced51a2b96be[m
Author: Oliver Nash <github@olivernash.org>
Date:   Fri Nov 3 19:29:42 2023 +0000

    feat: miscellaneous linear algebra lemmas (#8157)

[33mcommit baa7aa8c9b30292fb7aa93b5724d0c2ea7c1948b[m
Author: Oliver Nash <github@olivernash.org>
Date:   Fri Nov 3 16:55:31 2023 +0000

    feat: basic lemmas about nilpotency in rings (#8156)

[33mcommit edcf9202857c59f56e7be80afac5a2ae4b75be63[m
Author: Oliver Nash <github@olivernash.org>
Date:   Fri Nov 3 16:55:30 2023 +0000

    feat: expand `Finset.noncommProd` API (#8155)

[33mcommit 721d46e86735c45336732439f2b9dc8139a7eb17[m
Author: Oliver Nash <github@olivernash.org>
Date:   Fri Nov 3 16:55:29 2023 +0000

    feat: characterise independence in compactly-generated lattices (#8154)
    
    Also some loosely-related short lemmas

[33mcommit bf4260cbab0a5be943fe4cfe97a9d54948ddc61a[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Fri Nov 3 16:13:51 2023 +0000

    chore(RingTheory/Derivation/Basic): generalize `Derivation.compAlgebraMap` to semirings (#8151)
    
    Also adds a `simps` configuration so we get nice lemmas names with `@[simps]` and shuffles the variable order to put all the types first

[33mcommit 7d18b6d9dee43838d342f2228ed06b82ce4b1942[m
Author: Scott Morrison <scott@tqft.net>
Date:   Fri Nov 3 16:13:50 2023 +0000

    chore: bump dependencies (#8149)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 2e15c5a0539fdc24ccfc0bea3220e4b1879c5cd8[m
Author: Xavier Roblot <46200072+xroblot@users.noreply.github.com>
Date:   Fri Nov 3 16:13:48 2023 +0000

    feat: use Minkowski's theorem to prove the existence of algebraic integers of small norm (#8128)
    
    We define the convex body `convexBodySum` and prove the following
    ```lean
    theorem exists_ne_zero_mem_ringOfIntegers_of_norm_le {B : ‚Ñù}
         (h : (minkowskiBound K) < volume (convexBodySum K B)) :
         ‚àÉ (a : ùìû K), a ‚â† 0 ‚àß |Algebra.norm ‚Ñö (a:K)| ‚â§ ((finrank ‚Ñö K : ‚Ñù)‚Åª¬π * B) ^ (finrank ‚Ñö K)
    ```
    Computation of the `volume (convexBodySum K B))` and applications of the result are coming in a following PR.

[33mcommit f17743c31489844d99af411c08c9a0d12e6314c5[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Fri Nov 3 16:13:47 2023 +0000

    docs: prevent lists running onto a single line (#8122)

[33mcommit 6480cf3b7a7d5b2d8793aad4702325d267dbb791[m
Author: Mar√≠a In√©s de Frutos-Fern√°ndez <mariaines.dff@gmail.com>
Date:   Fri Nov 3 16:13:46 2023 +0000

    feat(FieldTheory.AbsoluteGaloisGroup): add the absolute Galois group and its topological abelianization (#7783)
    
    We define the absolute Galois group of a field `K` and its topological abelianization.
    
    
    
    
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>
    Co-authored-by: Mar√≠a In√©s de Frutos-Fern√°ndez <88536493+mariainesdff@users.noreply.github.com>

[33mcommit 5db1ef31aa5480757ec6644815a3c89dcd3a16ae[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Fri Nov 3 16:13:45 2023 +0000

    feat: The four functions theorem (#7551)
    
    Prove the four functions theorem, aka Ahlswede-Daykin inequality, and derive the Holley, Fortuin-Kastelyn-Ginibre and Marica-Sch√∂nheim inequalities.

[33mcommit ad7876f1efce582b6da61e520d1a73f6f840b4e9[m
Author: David Loeffler <d.loeffler.01@cantab.net>
Date:   Fri Nov 3 14:53:29 2023 +0000

    chore (NumberTheory/ZetaFunction): fix typo (#8153)
    
    Fix a typo in module doc string (pointed out on zulip: https://leanprover.zulipchat.com/#narrow/stream/217875-Is-there-code-for-X.3F/topic/Euler.20products/near/400126787)

[33mcommit 500b9f9e706b749cee988c56300c6b0db7f1e169[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Fri Nov 3 14:28:59 2023 +0000

    feat: `CompHaus` and friends are preregular (#8126)
    
    We prove that `CompHaus`, `Profinite`¬†and `Stonean`¬†are preregular (that effective epis can be pulled back).

[33mcommit ab3030a0a93419d2277a1f2a1df8ab2f0ad22e6c[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Fri Nov 3 14:28:57 2023 +0000

    feat: Fubini for functions with compact support and non-sigma-finite measures (#8125)

[33mcommit 36d794942368ce12213c32d2f5a46e499db39d9c[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Fri Nov 3 14:01:16 2023 +0000

    feat: finite-dimensional manifolds are locally compact (#7822)
    
    ... assuming they're modelled over a locally compact field. (Currently, the only such instances in mathlib are $\mathbb{R}$ and $\mathbb{C}$. Once local compactness of the $p$-adic numbers is added to mathlib, this theorem will apply to them also.)
    
    - part of the road towards Sard's theorem

[33mcommit a71794241fa0c7d10f3b1ef7c7e919cb07cfd06c[m
Author: Kyle Miller <kmill31415@gmail.com>
Date:   Fri Nov 3 11:59:05 2023 +0000

    feat: make Quotient.mk notation pretty print (#8022)

[33mcommit 83b113a51376df94dbaa7eb68f11af3dac551628[m
Author: Junyan Xu <junyanxumath@gmail.com>
Date:   Fri Nov 3 10:44:39 2023 +0000

    feat: separated and locally injective maps (#7911)
    
    A function from a topological space `X` to a type `Y` is a separated map if any two distinct points in `X` with the same image in `Y` can be separated by open neighborhoods. A constant function is a separated map if and only if `X` is a `T2Space`.
    
    A function from a topological space `X` is locally injective if every point of `X` has a neighborhood on which `f` is injective. A constant function is locally injective if and only if `X` is discrete.
    
    Given `f : X ‚Üí Y` one can form the pullback $X \times_Y X$; the diagonal map $\Delta: X \to X \times_Y X$ is always an embedding. It is a closed embedding iff `f` is a separated map, iff the equal locus of any two continuous maps equalized by `f` is closed. It is an open embedding iff `f` is locally injective, iff any such equal locus is open. Therefore, if `f` is a locally injective separated map (e.g. a covering map), the equal locus of two continuous maps equalized by `f` is clopen, so if the two maps agree on a point, then they agree on the whole connected component. This is crucial to showing the uniqueness of path lifting and the uniqueness and continuity of homotopy lifting for covering spaces.
    
    The analogue of separated maps and locally injective maps in algebraic geometry are separated morphisms and unramified morphisms, respectively.

[33mcommit 0030ea77b0b9417f5e9cbeb2c9ebb998d8338f13[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Fri Nov 3 10:44:37 2023 +0000

    feat: Shorthands for well-foundedness of `<` and `>` (#7865)
    
    We already have `WellFoundedLT`/`WellFoundedGT` as wrappers around `IsWellFounded`, but we didn't have the corresponding wrapper lemmas.

[33mcommit c539f36b466bcd71c8404dfd9a4dc66fa0664de5[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Fri Nov 3 09:35:02 2023 +0000

    chore: avoid `subst` by `rfl` (#8145)
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit b7a9938bd8252ff3cb99dede61688921e4dc64d2[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Fri Nov 3 09:35:00 2023 +0000

    feat(MeasureTheory/SimpleFunc): add `piecewise_same` (#8144)

[33mcommit bfdf7d098eb104a276a5c65923319d50494b8894[m
Author: Junyan Xu <junyanxumath@gmail.com>
Date:   Fri Nov 3 09:34:59 2023 +0000

    chore: golf IsSplittingField.algEquiv (#8142)
    
    Also golfs `Normal.of_algEquiv` and `Algebra.IsIntegral.of_finite` and refactors `Algebra.IsAlgebraic.bijective_of_isScalarTower`.

[33mcommit b3e4ef91867a379cc1bbe4f02a7e2fbd95220510[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Fri Nov 3 09:34:58 2023 +0000

    feat(Order/PartialSups): golf, add lemmas (#8138)
    
    - Add `partialSups_iff_forall` and `partialSups_le_iff`.
    - Use them to golf some proofs.
    - Drop `partialSups_apply_mono`
      because it's just `(partialSups f).mono`.
    - Add `disjoint_partialSups_left` and `disjoint_partialSups_right`.
    
    Motivated by `partialSups_le_iff`
    from the Mandelbrot Set Connectedness Project.
    
    Co-authored-by: @girving

[33mcommit d8418cc710bf206ab240fb1633417400eb1403be[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Fri Nov 3 09:34:57 2023 +0000

    feat(Data/Real/NNReal): add lemmas about `Real.toNNReal` (#8136)
    
    Add lemmas about comparison between `Real.toNNReal` and `Nat.cast`/`OfNat.ofNat`.
    Also add a few supporting lemmas.

[33mcommit 0bc95f403c08ccb0e0a8a2f7e1eba53b213f5508[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Fri Nov 3 09:34:56 2023 +0000

    feat: add `totallyDisconnectedSpace_subtype_iff` (#8134)
    
    Also add a version about `Embedding`.
    
    Motivated by a lemma in the Mandelbrot Set Connectedness Project.
    
    Co-authored-by: @girving

[33mcommit 8b4ab5e7dd59670fced0fd309f502a39cf97da3c[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Fri Nov 3 09:34:55 2023 +0000

    chore: rename eq_of_eq_on_source_univ to eq_of_eqOnSource_univ  (#8121)
    
    Matches the naming convention, [zulip discussion](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Naming.20convention/near/399951002).
    
    This is probably a left-over from the port; in mathlib3, the hypothesis and the lemma were named using "eq_on_source".
    
    In passing, we also
    - add missing periods to all docstrings involved
    - add a docstring for the LocalHomeomorph version (matching its LocalEquiv clone)
    - fix a missed rename in a doc comment.

[33mcommit ff8432d8d79c6c039dfce08f6234db022733d3ae[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Fri Nov 3 09:34:54 2023 +0000

    feat: categorical sheaf condition for presieves of arrows (#7918)
    
    -  [x] depends on: #7855

[33mcommit d816541412d4f13beb71e370bc542461941b6414[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Fri Nov 3 07:56:13 2023 +0000

    feat(CategoryTheory): more extensionality properties for ComposableArrows (#8119)

[33mcommit 9fcd4d8fce4877e9084915bc8ca2899820154bf2[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Fri Nov 3 07:56:11 2023 +0000

    feat: two homotopic maps of short complexes induce the same map in homology (#8079)

[33mcommit 8ddc254c7c5a86906fd179ae9493606e8db422bf[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Fri Nov 3 07:31:20 2023 +0000

    feat: exactness of short complexes in concrete categories (#8060)

[33mcommit f7d628c4cd910c5c356ca8225d7ad47a45b4c7e7[m
Author: Scott Morrison <scott@tqft.net>
Date:   Fri Nov 3 07:03:21 2023 +0000

    chore: remove unnecessary imports from BinaryHeap (#8143)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 9eab0567e9a66f1818e25a98a65b37c18ca614f0[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Fri Nov 3 06:27:32 2023 +0000

    feat(SpecialFunctions/Pow): prove `cpow_int_mul` etc (#7942)
    
    * Add `Complex.cpow_int_mul`, `Complex.cpow_mul_int`,
      `Complex.cpow_nat_mul`, and `Complex.cpow_mul_nat`.
    * Generalize `Complex.cpow_two` to `Complex.cpow_ofNat`.
    * Golf some proofs using new lemmas.
    
    Motivated by a lemma in the Mandelbrot set connectedness project.
    
    Co-Authored-By: @girving

[33mcommit 433ae22f87185453c631574f1a6f3836c82b0434[m
Author: Scott Morrison <scott@tqft.net>
Date:   Fri Nov 3 02:19:17 2023 +0000

    chore: bump aesop dependency (#8139)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 778883a11ed30ea26adce0ddd9d0c7104ea054e8[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Thu Nov 2 23:47:07 2023 +0000

    chore: `exact`, not `refine` when possible (#8130)
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit 7fbda2f9d909711524a2157a3cafabb46ad5b130[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Thu Nov 2 22:31:11 2023 +0000

    chore: fix universe issue in FinitaryExtensive Stonean (#8131)
    
    Now `Stonean.{u}` is finitary extensive for any universe `u`.

[33mcommit 78305a208a1c9db3c7ec4506f228a6142d1e50d7[m
Author: Timo <timorcb@gmail.com>
Date:   Thu Nov 2 21:53:28 2023 +0000

    chore(LinearAlgebra): remove redundant `[Nontrivial R]` (#8129)
    
    These can be inferred from `[StrictOrderedSemiring R]`.

[33mcommit 7f7a1f04d8514b591e5e9df590f6756231ff27ae[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Thu Nov 2 21:53:27 2023 +0000

    chore(RingTheory/TensorProduct): missing trivial lemmas (#8120)
    
    This also tweaks some argument explicitness, and removes unnecessary type ascriptions

[33mcommit dd5b3da919d449ac8a3392d95ec5ca0ccf3a94f8[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Thu Nov 2 21:04:23 2023 +0000

    feat: the universal property of a disjoint union of topological spaces (#8092)

[33mcommit ec3e666d5e8dca12efcea13b028c27413d3f4bda[m[33m ([m[1;31morigin/iwilare/coends[m[33m)[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Thu Nov 2 20:10:54 2023 +0000

    feat: functoriality of the homology of homological complexes (#8113)

[33mcommit 439648264e3462c87e91cade0dc137b7ff3b3c35[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Thu Nov 2 19:35:19 2023 +0000

    feat: add some missing PowerSeries.coeff_C lemmas (#8019)
    
    These parallel the lemmas for Polynomial

[33mcommit c77531abe48e2d2cb5029d5a270f7b6f5cb964a0[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Thu Nov 2 16:15:35 2023 +0000

    feat: comparison isomorphism for the two homology APIs (#8114)
    
    This PR also changes the definition of group cohomology so as to use the new homology API.

[33mcommit 10702b5864cfcc7775563474863826b9dc6e2979[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Thu Nov 2 16:15:34 2023 +0000

    feat: the snake lemma (#8084)
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit 502bbf587aef71b95be89695389e8b45d7af97e1[m
Author: Junyan Xu <junyanxumath@gmail.com>
Date:   Thu Nov 2 16:15:33 2023 +0000

    feat: Galois orbits in a normal extension are determined by minimal polynomials (#8028)
    
    Add [Normal.minpoly_eq_iff_mem_orbit](https://github.com/leanprover-community/mathlib4/pull/8028/files#diff-d131e3bbd4cfdca7517989f6f30e131ae00a40b34315ac02e6c342c183b6e449R443-R457): addresses https://github.com/leanprover-community/mathlib4/pull/6718/files#r1328899532
    
    Also generalize AlgHom.normal_bijective to `Algebra.IsAlgebraic.bijective_of_isScalarTower'` and golf the proof using a set-theoretic lemma `Surjective.of_comp_left` (slow to build, awaiting CI).
    
    
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>

[33mcommit 6668fecbbcb2350c1606cecfbd38ce6043c56b5a[m
Author: Pol'tta / Miyahara K≈ç <pol_tta@outlook.jp>
Date:   Thu Nov 2 15:26:35 2023 +0000

    refactor: use `PFunctor.map` instead of `Functor.map` (#7743)
    
    `Functor.map` is monomorphic, so the universe of `Œ±` in this theorem is fixed to the universe of `P`:
    ```lean
    theorem dest_corec {P : PFunctor.{u}} {Œ± : Type u} (g : Œ± ‚Üí P Œ±) (x : Œ±) : M.dest (M.corec g x) = M.corec g <$> g x
    ```
    `PFunctor.map` is polymorphic, so the universe of `Œ±` is free from the universe of `P`:
    ```lean
    theorem dest_corec {P : PFunctor.{u}} {Œ± : Type v} (g : Œ± ‚Üí P Œ±) (x : Œ±) : M.dest (M.corec g x) = P.map (M.corec g) (g x)
    ```
    
    
    
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>
    Co-authored-by: Pol'tta / Miyahara K≈ç <52843868+Komyyy@users.noreply.github.com>

[33mcommit b35ec2f855e12622d6b77db2a39b4b9f398c4c68[m
Author: Scott Morrison <scott@tqft.net>
Date:   Thu Nov 2 14:15:36 2023 +0000

    chore: bump CI actions generating deprecation warnings (#8110)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 72912a3679b76a96ac0d1b9fc7004917af974e09[m
Author: Scott Morrison <scott@tqft.net>
Date:   Thu Nov 2 14:15:35 2023 +0000

    chore: fix script that updates nightly-testing-YYYY-MM-DD branches (#8109)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 7e9b515bb3d8e50097b0fb6fd3181004dcb03d2a[m
Author: uniwuni <uniwuni@protonmail.com>
Date:   Thu Nov 2 14:15:34 2023 +0000

    feat(Data/Rel): prove simple propositions about images, preimages and graphs of relations (#6559)
    
    Add lemmas about relation composition with top and bottom elements, conditions under which images under a relation form the whole codomain, and the equivalence between being a functional relation and representable by the graph of a function.
    
    
    
    Co-authored-by: uniwuni <95649083+uniwuni@users.noreply.github.com>

[33mcommit 1400397d7e0dbbb2d3132513c11710e952da3ae1[m
Author: Scott Morrison <scott@tqft.net>
Date:   Thu Nov 2 13:03:44 2023 +0000

    chore: bump Std to Std#254 (#8106)
    
    
    
    Co-authored-by: Fran√ßois G. Dorais <fgdorais@gmail.com>
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit e817b7872bec713fe345f6abcf8bc2b98ee54f33[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Thu Nov 2 11:46:30 2023 +0000

    chore(Order/BooleanAlgebra): reduce risk of instance diamonds (#8099)
    
    We need `sup` and `max` to be defeq, and `max` is defined in Std. To achieve this, we define one in terms of the other.
    
    Until #8105 was merged (which fixed up leanprover/std4#183), they were not defeq:
    ```lean
    example :
      (GeneralizedCoheytingAlgebra.toLattice : Lattice Bool).sup =
        DistribLattice.toLattice.sup :=
      rfl -- failed
    ```
    
    This instance in this PR should have been written such that it couldn't silently cause a diamond in the first place, by reusing existing data rather than creating new data.

[33mcommit 3a5265f961e5741fc2eb5c0666b21316494bf106[m
Author: Bolton Bailey <bolton.bailey@gmail.com>
Date:   Thu Nov 2 11:46:29 2023 +0000

    feat: bijective_iff_map_univ_eq_univ (#7120)
    
    For functions on finite sets, they are bijections iff they map universes into universes.
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>
    Co-authored-by: Sebastian Zimmer<sebastian.zim@googlemail.com>
    
    
    
    Co-authored-by: Sebastian Zimmer <sebastian.zim@googlemail.com>
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 92fe122ec934b76ef683d7bf4e601e8a8457569c[m
Author: Anne Baanen <vierkantor@vierkantor.com>
Date:   Thu Nov 2 10:35:45 2023 +0000

    refactor(Algebra/Hom): transpose `Hom` and file name (#8095)
    
    I believe the file defining a type of morphisms belongs alongside the file defining the structure this morphism works on. So I would like to reorganize the files in the `Mathlib.Algebra.Hom` folder so that e.g. `Mathlib.Algebra.Hom.Ring` becomes `Mathlib.Algebra.Ring.Hom` and `Mathlib.Algebra.Hom.NonUnitalAlg` becomes `Mathlib.Algebra.Algebra.NonUnitalHom`.
    
    While fixing the imports I went ahead and sorted them for good luck.
    
    The full list of changes is:
    renamed:    Mathlib/Algebra/Hom/NonUnitalAlg.lean -> Mathlib/Algebra/Algebra/NonUnitalHom.lean
    renamed:    Mathlib/Algebra/Hom/Aut.lean -> Mathlib/Algebra/Group/Aut.lean
    renamed:    Mathlib/Algebra/Hom/Commute.lean -> Mathlib/Algebra/Group/Commute/Hom.lean
    renamed:    Mathlib/Algebra/Hom/Embedding.lean -> Mathlib/Algebra/Group/Embedding.lean
    renamed:    Mathlib/Algebra/Hom/Equiv/Basic.lean -> Mathlib/Algebra/Group/Equiv/Basic.lean
    renamed:    Mathlib/Algebra/Hom/Equiv/TypeTags.lean -> Mathlib/Algebra/Group/Equiv/TypeTags.lean
    renamed:    Mathlib/Algebra/Hom/Equiv/Units/Basic.lean -> Mathlib/Algebra/Group/Units/Equiv.lean
    renamed:    Mathlib/Algebra/Hom/Equiv/Units/GroupWithZero.lean -> Mathlib/Algebra/GroupWithZero/Units/Equiv.lean
    renamed:    Mathlib/Algebra/Hom/Freiman.lean -> Mathlib/Algebra/Group/Freiman.lean
    renamed:    Mathlib/Algebra/Hom/Group/Basic.lean -> Mathlib/Algebra/Group/Hom/Basic.lean
    renamed:    Mathlib/Algebra/Hom/Group/Defs.lean -> Mathlib/Algebra/Group/Hom/Defs.lean
    renamed:    Mathlib/Algebra/Hom/GroupAction.lean -> Mathlib/GroupTheory/GroupAction/Hom.lean
    renamed:    Mathlib/Algebra/Hom/GroupInstances.lean -> Mathlib/Algebra/Group/Hom/Instances.lean
    renamed:    Mathlib/Algebra/Hom/Iterate.lean -> Mathlib/Algebra/GroupPower/IterateHom.lean
    renamed:    Mathlib/Algebra/Hom/Centroid.lean -> Mathlib/Algebra/Ring/CentroidHom.lean
    renamed:    Mathlib/Algebra/Hom/Ring/Basic.lean -> Mathlib/Algebra/Ring/Hom/Basic.lean
    renamed:    Mathlib/Algebra/Hom/Ring/Defs.lean -> Mathlib/Algebra/Ring/Hom/Defs.lean
    renamed:    Mathlib/Algebra/Hom/Units.lean -> Mathlib/Algebra/Group/Units/Hom.lean
    
    Zulip thread: https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Reorganizing.20.60Mathlib.2EAlgebra.2EHom.60

[33mcommit 404b225cc7af8823e6759120282a7a5b437d4306[m
Author: damiano <adomani@gmail.com>
Date:   Thu Nov 2 09:33:32 2023 +0000

    docs(Order/LocallyFinite): Add a `'` in a doc-string (#8112)
    
    I did not label it as `easy`, since you may want to check the definition with a `'` to make sure that the doc-strings are now referring to the correct declarations, but the other declaration is not shown in the diff!

[33mcommit ee77c3826cfd530aa0b9791e138612dde7732e34[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Thu Nov 2 09:33:31 2023 +0000

    refactor(Data/Matrix/Basic): split row/column decls (#8089)
    
    This splits out `row`/`col`/`updateRow`/`updateColumn` to their own file, as `Data/Matrix/Basic` is getting rather large.
    
    The copyright comes from https://github.com/leanprover-community/mathlib/pull/1816 and https://github.com/leanprover-community/mathlib/pull/2480
    
    There are no new lemmas in this PR, nor were any existing lemmas deleted.
    
    It's possible that even more lemmas could migrate to this new file (for instance, flipping the import with `Matrix.Notation` or `LinearAlgebra.Matrix.Trace`), but I've taken the conservative option of leaving those lemmas alone for now.

[33mcommit 726dd08e7eb7c249e8fc658942914384a3a82829[m
Author: Scott Morrison <scott@tqft.net>
Date:   Thu Nov 2 08:54:03 2023 +0000

    chore: bump Std to #329 (#8105)
    
    This bumps Std up to leanprover/std4#329.
    
    This is a replacement for #8005, which I'll now close.
    
    
    
    Co-authored-by: Fran√ßois G. Dorais <fgdorais@gmail.com>
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 9fa322ace0111a5a4b3f17a249cef427d0516097[m
Author: R√©my Degenne <Remydegenne@gmail.com>
Date:   Thu Nov 2 08:18:43 2023 +0000

    feat: properties of rnDeriv (#7675)
    
    Various results about `rnDeriv`, notably `rnDeriv_add`, `rnDeriv_smul_left` and `rnDeriv_smul_right`. These results describe the Radon-Nikodym derivatives of sums and scaling of measures.
    
    These lemmas were already there for signed measures, but not for `Measure`. The proofs for signed measures use that addition is cancelative (`Œº + ŒΩ‚ÇÅ = Œº + ŒΩ‚ÇÇ ‚Üî ŒΩ‚ÇÅ = ŒΩ‚ÇÇ`). This is not true in general for measures, but is true when `Œº` is mutually singular with the two other measures or when `Œº` is sigma-finite, which is enough for these proofs.
    
    
    
    Co-authored-by: RemyDegenne <remydegenne@gmail.com>
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>

[33mcommit 6f355e375db230aa168391f28964e8ef11ce30c8[m
Author: Fran√ßois G. Dorais <fgdorais@gmail.com>
Date:   Thu Nov 2 05:05:17 2023 +0000

    feat: patch for std4#196 (more min/max lemmas for `Nat`) (#8074)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 92e160691938fff37cfb2d870873191188d11f7e[m
Author: Scott Morrison <scott@tqft.net>
Date:   Thu Nov 2 03:46:20 2023 +0000

    chore: bump Std to Std#340 (#8104)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 8befe9df7f6c668a711b1c2ef99aec4676710309[m
Author: David Renshaw <dwrenshaw@gmail.com>
Date:   Thu Nov 2 03:46:19 2023 +0000

    fix: add withMainContext to rw_search, and add a test case (#8101)
    
    Fixes a bug where `rw_search` could fail with the error: "unknown free variable".
    
    Also adds a missing `whnfR` to `localHypotheses`, which fixes bad behavior that could be seen in `rw?` and `rw_search`.

[33mcommit 8666bd82efec40b8b3a5abca02dc9b24bbdf2652[m
Author: Scott Morrison <scott@tqft.net>
Date:   Thu Nov 2 00:50:44 2023 +0000

    chore: bump Cli (#8103)
    
    Sorry, my previous PR updated the `lakefile.lean` but not the manifest, and so is giving everyone `lake update` warnings. :-(
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 3831ec37f361b50ae2dea89e9e86d4412fb707de[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Wed Nov 1 20:56:03 2023 +0000

    feat: more API for cycles and opcycles of homological complexes (#8091)

[33mcommit cbe29e867873be5030ef179900f50b78cf6b7cf6[m
Author: Kyle Miller <kmill31415@gmail.com>
Date:   Wed Nov 1 19:45:41 2023 +0000

    feat: enable `scoped[ns]` prefix for `notation3` (#8096)

[33mcommit aedc01b08fc48b972c09a9d69a34bba706062078[m
Author: R√©my Degenne <Remydegenne@gmail.com>
Date:   Wed Nov 1 17:24:21 2023 +0000

    feat: Inf variants of `ciSup_mul` and related lemmas (#8078)

[33mcommit 0e345e8532e7e5a79348db3908c9fc25dc849b68[m
Author: Richard M. Hill <r.m.hill@ucl.ac.uk>
Date:   Wed Nov 1 17:24:20 2023 +0000

    feat(Data/Polynomial/Module) : define an R[X] module, given a linear map. (#7728)
    
    Given an element `a` in an `R`-algebra `A` and an `A`-module `M`,
    define an `R[X]`-module `Module.AEval R M a`, whose elements correspond to
    elements of `M`, and where the action of `f : R[X]` is `f ‚Ä¢ m = aeval a f ‚Ä¢ m`.
    Equivalently, `X ‚Ä¢ m = a ‚Ä¢ m`.
    
    This module is abbreviated to `Module.AEval' œÜ` in the special case that `A` is the algebra of `R`-linear maps and `œÜ : M ‚Üí M` is an `R`-linear map.
    
    This is needed in #7419.
    
    
    
    Co-authored-by: Richard M. Hill <86743862+rmhi@users.noreply.github.com>
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 4bda10c2ad6032aff74d4700dbff9e421990af61[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Wed Nov 1 17:24:18 2023 +0000

    feat: Filtering `sups` (#7254)
    
    Match https://github.com/leanprover-community/mathlib/pull/18612.
    
    The lemmas were already added in #7382, though a slight difference in the statement means that we need a new `decidableExistsAndFinsetCoe` instance.

[33mcommit e15cc5f6b4ae0b22891987f2bf64ba839845e0e7[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Wed Nov 1 16:07:04 2023 +0000

    chore(Data/ZMod/IntUnitsPower): rename lemmas (#8087)
    
    This reduces a diff in a future PR (#7866).

[33mcommit b5711ab75f4d84ccf546871cbcb8d5cbe59100ff[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Wed Nov 1 16:07:02 2023 +0000

    chore: Golf `BoundedGENhdsClass (Œ± √ó Œ≤)` instance (#8085)
    
    and the correspond pi instance.
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit f48ec12fef37797af02f1325ed58b7892bfca6fd[m
Author: Scott Morrison <scott@tqft.net>
Date:   Wed Nov 1 16:07:01 2023 +0000

    chore: move Cli dependency from nightly to main (which tracks stable releases) (#8010)
    
    
    
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit bc2e2797ba7ca771b099aa6bccef8963303b5101[m
Author: Mauricio Collares <mauricio@collares.org>
Date:   Wed Nov 1 16:07:00 2023 +0000

    chore: demote `charZero_of_expChar_one'` instance to a theorem (#7777)
    
    The low-priority instance `charZero_of_expChar_one'` takes as an input a `Nontrivial R` and a `ExpChar R 1` instance, but there are no such `ExpChar` instances in Mathlib. It is tried before `StrictOrderedSemiring.to_charZero` when synthesizing `CharZero Nat`, and the former takes a long time to fail (~100ms) because Lean tries to construct `Nontrivial Nat` in all possible ways before giving up, for some reason. See [Zulip thread](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Regression.20in.20simp) and [the synthInstance trace](https://gist.github.com/collares/8590a08c79eed16879a823233b03ba70) for context.
    
    
    
    
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>

[33mcommit 9a7e2f0a69ec5bd296bcd5994b0d15a94e381c4d[m
Author: damiano <adomani@gmail.com>
Date:   Wed Nov 1 16:06:59 2023 +0000

    fix(test/{ MLList + finset_repr + trace + vec_notation }): silence tests (#7269)
    
    More silencing of tests, mostly trading
    ```lean
    #eval (show MetaM Unit from) do
    ```
    for
    ```lean
    run_cmd Lean.Elab.Command.liftTermElabM do
    ```
    
    Added `import Mathlib.Tactic.RunCmd` to `test/MLList.lean`.
    Added `#guard_msgs` in `test/trace.lean`
    
    Affected files:
    ```bash
    test/MLList
    test/finset_repr
    test/trace
    test/vec_notation
    ```

[33mcommit 5a2b014d140e9ab758031a013ea57e38418e59e1[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Wed Nov 1 15:16:33 2023 +0000

    chore: forward-port leanprover-community/mathlib#19028 (#8083)
    
    This was "feat(topology/metric_space): diameter of pointwise zero and addition"

[33mcommit 35e0a3030994d9562b1e2527e139d81c4b580606[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Wed Nov 1 14:02:29 2023 +0000

    chore: remove extraneous Set. qualifiers (#8053)
    
    It's [proposed](https://github.com/leanprover-community/mathlib4/issues/7217) that a code formatter remove those automatically, so we might as well remove them as we see them.

[33mcommit e896b09aed7f3cae0dd57a257d4f0809f2189dcd[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Wed Nov 1 13:33:22 2023 +0000

    feat: introducing the input data of the snake lemma (#8081)

[33mcommit b5013c291f69216fd82ae7ac929d42f9d0780197[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Wed Nov 1 13:33:21 2023 +0000

    feat: compute `Monoid.exponent` as the lcm over pi types and `Prod` (#8066)

[33mcommit 3ef1fe9c6df02f486851ccdd3ba1ada398f0c13d[m
Author: Junyan Xu <junyanxumath@gmail.com>
Date:   Wed Nov 1 13:33:20 2023 +0000

    refactor: golf Normal.of_isSplittingField (#8004)
    
    Before: *Construction* only imports *Normal*, which transitively imports *IsSplittingField*
    Now: *Normal* imports *Construction*, *Construction* only imports *IsSplittingField*
    So no extra transitive import is added to any file other than *Construction* and *Normal*.
    As a consequence, `Polynomial.SplittingField.instNormal` is moved from *Construction* to *Normal*.
    
    `adjoin_rootSet_eq_range` is added to *IsSplittingField*.
    
    `splits_of_comp` in *Splits* is extracted from `splits_of_splits` in *IsSplittingField*.
    
    Source of proof: https://math.stackexchange.com/a/2585087/12932
    
    Move `Algebra.adjoin.liftSingleton` from *IsAlgClosed/Basic* to *Adjoin/Field* in order to speed up `lift_of_splits` (renamed to add namespace `Polynomial`).
    
    
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>

[33mcommit 95dc804115fd11726a6624407b7da802bca731ef[m
Author: Andrew Yang <the.erd.one@gmail.com>
Date:   Wed Nov 1 12:39:16 2023 +0000

    feat(Topology/Category): `CompHaus`, `Profinite` and `Stonean` are `FinitaryExtensive`. (#8012)
    
    
    
    Co-authored-by: Andrew Yang <36414270+erdOne@users.noreply.github.com>

[33mcommit 36a2a825c5d887ceebb4f1589d9b41ff893dd9ff[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Wed Nov 1 12:39:15 2023 +0000

    feat: Eventual boundedness of neighborhoods (#8009)
    
    Forward port https://github.com/leanprover-community/mathlib/pull/18629
    
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 479779ea0b4b1e25a6e6f0effda36df26ac033bd[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Wed Nov 1 11:37:18 2023 +0000

    feat: The lexicographic sum of two locally finite orders is locally finite (#6340)
    
    Forward-ports https://github.com/leanprover-community/mathlib/pull/11352
    
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 00cb9455117f9b1046c7fa0d15bf5b8ad0654c1c[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Wed Nov 1 10:38:21 2023 +0000

    feat(LinearAlgebra/Basis): commuting with basis elements places an element in the center (#7833)

[33mcommit 51dd9ef2c2e6d664113944505de3db28ab026254[m
Author: Peiran Wu <15968905+wupr@users.noreply.github.com>
Date:   Wed Nov 1 10:38:20 2023 +0000

    refactor(GroupTheory/GroupAction/Basic): re-organise, rename, and make some variables implicit (#7786)
    
    - Re-organise the namespace and section structure of GroupTheory/GroupAction/Basic.lean.
    - Remove the namespaces `MulAction.Stabilizer` and `AddAction.Stabilizer`, renaming `MulAction.Stabilizer.submonoid` to `MulAction.stabilizerSubmonoid`.
    - Make variables for the monoid/group/set implicit when an element or subset is used in the statement.

[33mcommit 7c1c7ff7e70678c2c5917fbd1ba3e6809e89e8c6[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Wed Nov 1 10:38:19 2023 +0000

    feat: Nobeling's theorem (#6286)
    
    Nobeling's theorem: the Z-module of locally constant maps from a profinite set to the integers is free.
    
    -  [x] depends on: #6360
    -  [x] depends on: #6373
    -  [x] depends on: #6395
    -  [x] depends on: #6396
    -  [x] depends on: #6432
    -  [x] depends on: #6520
    -  [x] depends on: #6578
    -  [x] depends on: #6589
    -  [x] depends on: #6722
    -  [x] depends on: #7829
    -  [x] depends on: #7895
    -  [x] depends on: #7896
    -  [x] depends on: #7897
    -  [x] depends on: #7899

[33mcommit e3bc933a980ed0b2d0ee6312078ef49019b76ad2[m
Author: Robin Carlier <57142648+robin-carlier@users.noreply.github.com>
Date:   Wed Nov 1 09:55:48 2023 +0000

    chore(CategoryTheory/Limits/Shapes/Terminal): remove some unnecessary `HasLimit` and `HasColimit` hypotheses (#8068)

[33mcommit fa84cf7ee70cd182f0e60caac9c14b6b0c4d4742[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Wed Nov 1 09:55:46 2023 +0000

    feat: short exact short complexes (#8058)
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit d3e3459db9509a08eb07788f44a1b1ec4851982c[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Nov 1 08:43:57 2023 +0000

    feat: restriction to `{a}·∂ú` is equal to the original measure (#8073)
    
    Also reuse variables from `variable` here and there.

[33mcommit c2d0272f1cc0c59032132431349cde6afe5f8309[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Wed Nov 1 08:43:56 2023 +0000

    chore: clear some porting notes on rfl (#8063)
    
    We remove some porting notes for `rfl`s that by now work again.
    
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit d1889482353bf721a12cdd41791a2375223f363e[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Wed Nov 1 07:43:32 2023 +0000

    feat: more API for homotopies of short complexes (#8069)
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit 12b7b979cbfd3e9012e8c23153f8f5452b3d7862[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Wed Nov 1 07:43:31 2023 +0000

    feat(CategoryTheory/Localization): equivalence relation on left fractions (#8055)

[33mcommit feebec3b0bb878720a4a99a2c8aad5d093d9d8a3[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Wed Nov 1 07:43:30 2023 +0000

    feat: multiplication by `closure {1}` in topological groups does not change closed and open subsets (#7858)

[33mcommit 350a374847b41c9cc1e96593c246774b613085cd[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Wed Nov 1 06:34:20 2023 +0000

    feat(CategoryTheory): the category of composable arrows (#7999)
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit 8f163221eaac63ae5e4d71fe84e34d68c727899c[m
Author: Jon Eugster <eugster.jon@gmail.com>
Date:   Wed Nov 1 05:48:09 2023 +0000

    fix: make CI-task "check for noisy stdout lines" more verbose. (#7868)
    
    linter warnings print the following messages to stdout:
    
    ```
    stdout:
    ./././MyProject/MyFile.lean:19:53: warning: unused variable `x` [linter.unusedVariables]
    ./././MyProject/MyFile.lean:19:53: warning: unused variable `y` [linter.unusedVariables]
    ```
    
    With this change, the CI would at least print the first line after `stdout:`, partially helping with debugging.

[33mcommit 62ca97d2bea7c14b51359c275842910772eabcc3[m
Author: Joachim Breitner <mail@joachim-breitner.de>
Date:   Wed Nov 1 05:25:24 2023 +0000

    chore(scripts/lean-pr-testing-comments.sh): better link target (#7357)
    
    previously, it would link to
    <https://github.com/leanprover-community/mathlib4/compare/master...lean-pr-testing-2577>,
    which contains lots and lots of commits unrelated to the Lean PR. It
    seems cleaner to use
    <https://github.com/leanprover-community/mathlib4/compare/nightly-testing...lean-pr-testing-2577>,

[33mcommit 845846d31e875066c58af0477361076aead5744e[m
Author: Scott Morrison <scott@tqft.net>
Date:   Wed Nov 1 02:56:25 2023 +0000

    feat: the `rw_search` tactic (#6120)
    
    Example usage:
    
    ```
    example (xs ys : List Œ±) : (xs ++ ys ++ ys).length = 2 * ys.length + xs.length := by
      rw_search  -- Try this: rw [@List.length_append, @List.length_append, @add_rotate, Nat.two_mul]
    ```
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>

[33mcommit e4ce4443bedf25f8405c70fed9a26ce43c186df8[m
Author: David Renshaw <dwrenshaw@gmail.com>
Date:   Wed Nov 1 01:49:26 2023 +0000

    feat: port Rat.cast positivity extension (#8042)
    
    See the mathlib3 version here: https://github.com/leanprover-community/mathlib/blob/3365b20c2ffa7c35e47e5209b89ba9abdddf3ffe/src/tactic/positivity.lean#L737-L741
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 056e7257480ba893727fd5804ff236ef24a8ea63[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Wed Nov 1 00:15:40 2023 +0000

    feat: add `DecidableEq` instances for `Multiplicative` and `Additive` (#8072)

[33mcommit f2946219bda030a712a7864bc8b6b8d3eb80fd5f[m
Author: Bulhwi Cha <chabulhwi@semmalgil.com>
Date:   Wed Nov 1 00:15:39 2023 +0000

    doc: put a period at the end of a sentence (#8064)
    
    This matches the surrounding definitions.

[33mcommit 370c9af7642e02c35dc03dc50fe8ea8270cced5a[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Wed Nov 1 00:15:38 2023 +0000

    chore(Data/Set/Image): re-use some variables (#8054)
    
    This also generalizes a universe from `Type` to `Sort` in `Set.range_eval`

[33mcommit ad46b683186e1077e5854c72a8a5c80f0906fdd7[m
Author: Scott Morrison <scott@tqft.net>
Date:   Wed Nov 1 00:15:37 2023 +0000

    chore: automate nightly-testing-YYYY-MM-DD branches (#7940)
    
    These branches will track `nightly-testing` while it is using the `nightly-YYYY-MM-DD` toolchain.
    
    This enables better combined CI: it gives the option of testing a Lean 4 PR not against `nightly-testing`, but against the previous `nightly-testing-YYYY-MM-DD` branch, avoiding our frequent problems with `nightly-testing` moving on too fast.
    
    Note that this approach will only update the `nightly-testing-YYYY-MM-DD` branch after successful CI on the `nightly-testing` branch.
    
    It isn't a complete solution by itself, but these tracking branches at least give us more options.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 5561bd395adfb9eb0d1aaf5353aaa90a855b458a[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Tue Oct 31 23:08:19 2023 +0000

    chore: refactor `prod_take_succ` to `List.get` (#8043)
    
    Needed to finish what was started in #8039
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit 901dedefe93e062e9e0f71647628423ad8f9410c[m
Author: Matthew Robert Ballard <matt@mrb.email>
Date:   Tue Oct 31 22:32:02 2023 +0000

    perf (Functor.Flat): restructure proof to reduce simp time (#8065)
    
    This file recently jumped almost 200% in #8051. Changing a `simpa using X` call into a `convert X <;> simp` cuts the clock time for the file in half.

[33mcommit 41442e1fb9b35c5ded0e2e43b51ac14f576801ae[m
Author: Kyle Miller <kmill31415@gmail.com>
Date:   Tue Oct 31 19:34:07 2023 +0000

    fix: Exists delaborator merging (#8070)
    
    The binder merging feature of the delaborator was matching too much and creating ill-formed terms like `‚àÉ (_ : True) x, True`.

[33mcommit 43030491023bae429330143d9cdf98fb556afbf7[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Tue Oct 31 18:07:01 2023 +0000

    feat: let `push_neg` replace `not (Set.Nonempty s)` with `s = emptyset` (#8000)
    
    
    
    Co-authored-by: Kyle Miller <kmill31415@gmail.com>

[33mcommit 79577733973a4a08524eea59275fb22dc1cc9bf0[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Tue Oct 31 17:03:10 2023 +0000

    feat: new class `ClosableCompactSubsetOpenSpace` of topological spaces (#7860)
    
    Useful to uniformize proofs for T2 spaces and regular spaces, notably to discuss regular measures in topological groups.

[33mcommit 95e9bc1742eb149f61accb5de18215971fc49bdf[m
Author: Thomas Zhu <thomas.zhu.sh@hotmail.com>
Date:   Tue Oct 31 15:03:20 2023 +0000

    feat(Probability/Density): Random variables are independent iff joint density is product (#8026)
    
    This PR proves that two random variables are independent, iff their joint distribution is the product measure of marginal distributions, iff their joint density is a product of their marginal densities up to AE equality. It also uses lemmas stating that `Œº.withDensity` is injective up to AE equality.

[33mcommit 0c484a54e619edb488d952f382ad8be75a1f2b3f[m
Author: Chris Hughes <chrishughes24@gmail.com>
Date:   Tue Oct 31 14:39:57 2023 +0000

    feat: pushouts of monoids (#8061)
    
    
    
    Co-authored-by: Chris Hughes <33847686+ChrisHughes24@users.noreply.github.com>

[33mcommit c13d8d61e3c12ae0a89d0c77dff387e54b77156c[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Oct 31 13:19:56 2023 +0000

    feat(Data/Complex): add lemmas like `re_eq_abs` (#8025)

[33mcommit 2bff6b4e8c7f5cf190732fc9a2bf22b6c6851e43[m
Author: Matias Heikkil√§ <mapehe@iki.fi>
Date:   Tue Oct 31 11:24:46 2023 +0000

    fix(Topology/CompletelyRegular): Typo (#8059)
    
    Fix a small typo in the copyright notice.

[33mcommit d09f697a22178005bf0a5a25c98f629945d41c96[m
Author: Robin Carlier <57142648+robin-carlier@users.noreply.github.com>
Date:   Tue Oct 31 11:24:45 2023 +0000

    chore(CategoryTheory/Limits/Fubini): Fubini theorem for colimits (#8046)
    
    Dualize all statements in `CategoryTheory/Limits/Fubini.lean`.
    
    
    
    Co-authored-by: Andrew Yang <36414270+erdOne@users.noreply.github.com>

[33mcommit 2d242e7f9ac3018b16bf2fb93334ef674b685e6d[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Tue Oct 31 11:24:44 2023 +0000

    feat: Independence of singletons (#7251)
    
    Port a bit of https://github.com/leanprover-community/mathlib/pull/18506, but it's mostly handmade.
    
    
    
    
    Co-authored-by: RemyDegenne <Remydegenne@gmail.com>

[33mcommit cddb28fc599393da11df54a2d13b69fc7eecdb0b[m
Author: Robin Carlier <57142648+robin-carlier@users.noreply.github.com>
Date:   Tue Oct 31 10:54:31 2023 +0000

    feat(RingTheory/Flat): free and projective modules over a `CommRing` are flat (#7567)
    
    Prove that flat modules are stable under retracts, isomorphisms and direct sums. Use this to deduce that free and projective modules are flat.
    
    
    
    Co-authored-by: Robin Carlier <robin.carlier@ens-lyon.fr>
    Co-authored-by: Andrew Yang <36414270+erdOne@users.noreply.github.com>
    Co-authored-by: Johan Commelin <johan@commelin.net>

[33mcommit 1ff3bf341c6a14611bd2f7f689853d12f06c1694[m[33m ([m[1;33mtag: v4.3.0-rc1[m[33m)[m
Author: Scott Morrison <scott@tqft.net>
Date:   Tue Oct 31 09:38:50 2023 +0000

    chore: bump toolchain to v4.3.0-rc1 (#8051)
    
    This incorporates changes from
    
    * #7845
    * #7847
    * #7853
    * #7872 (was never actually made to work, but the diffs in `nightly-testing` are unexciting: we need to fully qualify a few names)
    
    They can all be closed when this is merged.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit f8593acbc38a592e6eeda6ce0d26383798de1b32[m
Author: Andrew Yang <36414270+erdOne@users.noreply.github.com>
Date:   Tue Oct 31 08:51:20 2023 +0000

    Chore(CategoryTheory/Extensive): Fix docstring (#8048)

[33mcommit 0830b6a3d4d9889ea6972980c2e36114e7db90c4[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Tue Oct 31 07:55:06 2023 +0000

    feat: more explicit sheaf condition for presieves of arrows (#7855)
    
    We give more explicit analogues for compatible families of elements for a `Presieve.ofArrows` and prove that if such families have unique amalgamation then the sheaf condition is satisfied.
    
    - [x] depends on: #7854
    
    
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>

[33mcommit 85a1f28fbf7e973dd67fb9f1f27ee50fccd148fc[m
Author: Antoine Chambert-Loir <antoine.chambert-loir@u-paris.fr>
Date:   Tue Oct 31 06:01:35 2023 +0000

    feat(Data.Finset.Antidiagonal): generalize `Finset.Nat.antidiagonal` (#7486)
    
    
    We define a type class `Finset.HasAntidiagonal A` which contains a function
    `antidiagonal : A ‚Üí Finset (A √ó A)` such that `antidiagonal n`
    is the Finset of all pairs adding to `n`, as witnessed by `mem_antidiagonal`.
    
    When `A` is a canonically ordered add monoid with locally finite order
    this typeclass can be instantiated with `Finset.antidiagonalOfLocallyFinite`.
    This applies in particular when `A` is `‚Ñï`, more generally or `œÉ ‚Üí‚ÇÄ ‚Ñï`,
    or even `Œπ ‚Üí‚ÇÄ A`  under the additional assumption `OrderedSub A`
    that make it a canonically ordered add monoid.
    (In fact, we would just need an `AddMonoid` with a compatible order,
    finite `Iic`, such that if `a + b = n`, then `a, b ‚â§ n`,
    and any finiteness condition would be OK.)
    
    For computational reasons it is better to manually provide instances for `‚Ñï`
    and `œÉ ‚Üí‚ÇÄ ‚Ñï`, to avoid quadratic runtime performance.
    These instances are provided as `Finset.Nat.instHasAntidiagonal` and `Finsupp.instHasAntidiagonal`.
    This is why `Finset.antidiagonalOfLocallyFinite` is an `abbrev` and not an `instance`.
    
    This definition does not exactly match with that of `Multiset.antidiagonal`
    defined in `Mathlib.Data.Multiset.Antidiagonal`, because of the multiplicities.
    Indeed, by counting multiplicities, `Multiset Œ±` is equivalent to `Œ± ‚Üí‚ÇÄ ‚Ñï`,
    but `Finset.antidiagonal` and `Multiset.antidiagonal` will return different objects.
    For example, for `s : Multiset ‚Ñï := {0,0,0}`, `Multiset.antidiagonal s` has 8 elements
    but `Finset.antidiagonal s` has only 4.
    
    ```lean
    def s : Multiset ‚Ñï := {0, 0, 0}
    #eval (Finset.antidiagonal s).card -- 4
    #eval Multiset.card (Multiset.antidiagonal s) -- 8
    ```
    
    ## TODO
    
    * Define `HasMulAntidiagonal` (for monoids).
      For `PNat`, we will recover the set of divisors of a strictly positive integer.
    
    This closes #7917
    
    Co-authored by: Mar√≠a In√©s de Frutos-Fern√°ndez <mariaines.dff@gmail.com>
    and Eric Wieser <efw27@cam.ac.uk>
    
    
    
    Co-authored-by: Antoine Chambert-Loir <antoine.chambert-loir@math.univ-paris-diderot.fr>
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 753159252c585df6b6aa7c48d2b8828d58388b79[m[33m ([m[1;33mtag: v4.2.0[m[33m)[m
Author: Scott Morrison <scott@tqft.net>
Date:   Tue Oct 31 05:35:43 2023 +0000

    chore: bump toolchain to v4.2.0 (#8050)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 13d875a6a0c041ac58aa1b2c8254b48659b91c5a[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Tue Oct 31 04:30:30 2023 +0000

    feat: completion of the file Algebra.Homology.ShortComplex.Exact (#7997)

[33mcommit 23717cb870d453fa314d99467b6cb51da0e6a411[m
Author: Matias Heikkil√§ <mapehe@iki.fi>
Date:   Tue Oct 31 02:45:12 2023 +0000

    feat(Topology/CompletelyRegular): Add definition `CompletelyRegularSpace` (#7926)
    
    
    Add definitions `CompletelyRegularSpace` and `T35Space`.

[33mcommit 2d044ba01aea3dcb0ae4af7b6ba554cbc1ab2e29[m
Author: Martin Dvo≈ô√°k <martin.dvorak@matfyz.cz>
Date:   Tue Oct 31 02:18:21 2023 +0000

    docs: fix name is ValuedCsp.Instance.IsOptimumSolution (#8037)
    
    
    
    Co-authored-by: madvorak <dvorakmartinbridge@seznam.cz>

[33mcommit ab1d5a447028222aceedd9c7a8cdd23bea5a0a3a[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Tue Oct 31 02:18:20 2023 +0000

    refactor(Data/Sym/Sym2): simplify decidability instances (#8020)
    
    There shouldn't be any need for a custom boolean algorithm here, typeclass search can find it.
    
    Removes a porting comment from #1805  about `boolEq`, which isn't needed after all.

[33mcommit 0965c0b64c7bc19ef7bc0fda8f179560a9ca98b4[m
Author: Eric Rodriguez <ericrboidi@gmail.com>
Date:   Tue Oct 31 02:18:19 2023 +0000

    chore(Algebra/CharP/Quotient): slightly golf (#7992)
    
    removes a todo but not sure if the most principled.

[33mcommit d99ad9bc565ad27136496135141bb2e2d8a500ea[m
Author: David Renshaw <dwrenshaw@gmail.com>
Date:   Tue Oct 31 01:57:43 2023 +0000

    chore: uncomment a norm_num test that passes now (#8049)
    
    This test started passing in https://github.com/leanprover-community/mathlib4/commit/60790d4fd15e2d67606041b9f7058872911a8ac8.

[33mcommit 1c0dba647efee272308d730b1fabe41a0e7ed099[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Mon Oct 30 22:21:32 2023 +0000

    doc: convert comments to docstrings and doc-comments (#7951)

[33mcommit 57cf5ffa9729e75bc7dcd4813975736639d2b594[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Mon Oct 30 21:42:57 2023 +0000

    chore: refactor to `List.get` (#8039)
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit aaa97c71b8cab4e658757e5e7e6a632548ff9df3[m
Author: Peter Nelson <71660771+apnelson1@users.noreply.github.com>
Date:   Mon Oct 30 21:12:01 2023 +0000

    feat: (Data.Matroid) basic matroid theory (#6352)
    
    This PR is the first in a series that are intended to add matroid theory to mathlib. The file `Data.Matroid.Basic` contains the definition of (possibly infinite) matroids, API relating bases, independent/dependent sets and bases of sets, and some simple typeclasses related to finiteness/nonemptiness of matroids. We also define a tactic whose job is to prove that a set is contained in the ground set of a matroid (using aesop); it is imperfect, but does an ok job.
    
    Alternative axiomatizations, duality, minors, rank, circuits, closure, flats, etc etc are all ready to go, and will be added in a sequence of future PRs.
    
    
    
    Co-authored-by: Kyle Miller <kmill31415@gmail.com>

[33mcommit 4ad9d1eb861c684f27621840380d7b4e245f9596[m
Author: Floris van Doorn <fpvdoorn@gmail.com>
Date:   Mon Oct 30 20:20:42 2023 +0000

    feat: additional version of FTC-2 for improper integrals (#7755)
    
    * The extra import doesn't import any additional files transitively.
    * From the Sobolev project
    
    Co-authored-by: Heather Macbeth 25316162+hrmacbeth@users.noreply.github.com
    
    
    
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>

[33mcommit 6b83e01c4b771afdf9316fbc69269a7560b12b67[m
Author: Kexing Ying <kexingying@gmail.com>
Date:   Mon Oct 30 19:25:52 2023 +0000

    feat: add `withDensity_eq_zero_iff`  (#8045)
    
    
    
    Co-authored-by: Kexing Ying <kexing.ying@epfl.ch>

[33mcommit 67f76211bfdab90cf096150d55bad531108e492d[m
Author: Kyle Miller <kmill31415@gmail.com>
Date:   Mon Oct 30 19:25:51 2023 +0000

    fix: make sure types of `Set.encard` and `Set.ncard` are beta reduced (#8044)

[33mcommit 5a69fafcfcd944ce332f8e3cd38451a52e303960[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Mon Oct 30 19:25:50 2023 +0000

    feat(CategoryTheory): calculus of fractions (#8041)
    
    This PR introduces notions of left and right fractions for a morphism property in a category. The typeclasses `MorphismProperty.HasLeftCalculusOfFractions` and `MorphismProperty.HasRightCalculusOfFractions` are also introduced.

[33mcommit 2b448f2dbbbeca2ae47627324e0a7b4e65bfb378[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Mon Oct 30 19:25:49 2023 +0000

    refactor(Algebra/Algebra/Subalgebra/Basic): use a better defeq for `‚ä• : Subalgebra R A` (#8038)
    
    And the same thing for `StarSubalgebra R A`. `IntermediateField` was already handled in #7957.
    
    As a result, nine (obvious) lemmas are now true by definition.
    
    This slightly adjusts the statement of `Algebra.toSubmodule_bot` to make it simpler and true by definition; the original statement can be recovered by rewriting by `Submodule.one_eq_span`, which I've had to add in some downstream proofs.

[33mcommit 35528f8ced47f1476274e9b236b956f36085529c[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Mon Oct 30 19:25:47 2023 +0000

    feat: exactness of short complexes in balanced categories (#7996)

[33mcommit 32d292ca4647ff0790302ec0b9f095c2304274db[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Mon Oct 30 19:25:46 2023 +0000

    feat: quasi-isomorphisms are preserved by functors which preserve homology (#7993)
    
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit 8d64882c7143c416a9887065d90eae1974d8692d[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Mon Oct 30 19:25:45 2023 +0000

    feat: add `peel` tactic (#7685)
    
    As requested on [Zulip](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Logical.20congruence.20or.20weakening.20tactic).
    
    Given `p q : ‚Ñï ‚Üí Prop`, `h : ‚àÄ x, p x`, and a goal `‚ä¢ : ‚àÄ x, q x`, the tactic `peel h with h' x` will introduce `x : ‚Ñï`, `h' : p x` into the context and the new goal will be `‚ä¢ q x`. This works with `‚àÉ`, as well as `‚àÄ·∂†` and `‚àÉ·∂†`, and it can even be applied to a sequence of quantifiers.
    
    For a more complex example, given a hypothesis and a goal:
    ```
    h : ‚àÄ Œµ > (0 : ‚Ñù), ‚àÉ N : ‚Ñï, ‚àÄ n ‚â• N, 1 / (n + 1 : ‚Ñù) < Œµ
    ‚ä¢ ‚àÄ Œµ > (0 : ‚Ñù), ‚àÉ N : ‚Ñï, ‚àÄ n ‚â• N, 1 / (n + 1 : ‚Ñù) ‚â§ Œµ
    ```
    (which differ only in `<`/`‚â§`), applying `peel h with h_peel Œµ hŒµ N n hn` will yield a tactic state:
    ```
    h : ‚àÄ Œµ > (0 : ‚Ñù), ‚àÉ N : ‚Ñï, ‚àÄ n ‚â• N, 1 / (n + 1 : ‚Ñù) < Œµ
    Œµ : ‚Ñù
    hŒµ : 0 < Œµ
    N n : ‚Ñï
    hn : N ‚â§ n
    h_peel : 1 / (n + 1 : ‚Ñù) < Œµ
    ‚ä¢ 1 / (n + 1 : ‚Ñù) ‚â§ Œµ
    ```
    and the goal can be closed with `exact h_peel.le`.
    
    Co-authored-by: Kyle Miller <kmill31415@gmail.com>
    
    
    
    Co-authored-by: Patrick Massot <patrickmassot@free.fr>
    Co-authored-by: Kyle Miller <kmill31415@gmail.com>

[33mcommit db4f21d5164b19c218b49b3e4724b7342282aebd[m
Author: Xavier Roblot <46200072+xroblot@users.noreply.github.com>
Date:   Mon Oct 30 17:26:56 2023 +0000

    feat: Prove that the integral of a function composed with the absolute value is twice the integral over the positive (#8036)

[33mcommit 46d7a4016ac7c55eab6d7acfd0835ca01fd949a0[m
Author: Anatole Dedecker <anatolededecker@gmail.com>
Date:   Mon Oct 30 17:26:54 2023 +0000

    Misc lemmas about Specializes, Inseparable and path-connectedness (#7970)
    
    Generalizing one of the proofs introduced in #7878

[33mcommit f6bb43b90a88361f496fbb56e1c97dff4eb019fb[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Mon Oct 30 17:26:53 2023 +0000

    chore(Topology/Separation): rename type variables (#7589)
    
    This file was using a mix of Greek letters and standard math convention (X, Y, Z).
    `connectedComponent_eq_iInter_clopen` was even using `X` in comments and $\alpha$ in the code.
    
    As [discussed](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Naming.20convention.3A.20topological.20spaces/near/395769893) on zulip, standardize on the latter.

[33mcommit 04c1707be5acd0835f752d7c87d469aa8cf5a3d5[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Mon Oct 30 17:26:52 2023 +0000

    feat: Birkhoff representation theorem (#7417)
    
    Any finite distributive lattice is isomorphic to the lattice of lower sets of its irreducible elements (and to the lattice of irreducible elements of its lower sets). In particular, it can be represented as a sublattice of some powerset algebra.

[33mcommit 61e8e6811a490a7edea6d6a095bfcccbb5c18b0c[m
Author: Andrew Yang <the.erd.one@gmail.com>
Date:   Mon Oct 30 16:19:04 2023 +0000

    feat(CategoryTheory/Extensive): Relax typeclass requirements (#8015)
    
    
    
    
    Co-authored-by: Andrew Yang <36414270+erdOne@users.noreply.github.com>

[33mcommit dcc69c716487fb6a27463e584e20547d71146cd0[m
Author: Junyan Xu <junyanxumath@gmail.com>
Date:   Mon Oct 30 16:19:03 2023 +0000

    chore: split GroupPower/Order (#7978)
    
    
    
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>

[33mcommit 333277cf99e70607a651cd28df93fd50bf10e322[m
Author: R√©my Degenne <Remydegenne@gmail.com>
Date:   Mon Oct 30 15:05:24 2023 +0000

    feat(MeasureTheory): `Œº.singularPart (r ‚Ä¢ ŒΩ) = Œº.singularPart ŒΩ` (#8040)
    
    Prove 3 lemmas:
    - an instance `MeasurableSMul ‚Ñù‚â•0 ‚Ñù‚â•0‚àû`
    - `instance haveLebesgueDecomposition_smul_right (Œº ŒΩ : Measure Œ±) [HaveLebesgueDecomposition Œº ŒΩ]
        (r : ‚Ñù‚â•0) : Œº.HaveLebesgueDecomposition (r ‚Ä¢ ŒΩ)`
    - `theorem singularPart_smul_right (Œº ŒΩ : Measure Œ±) (r : ‚Ñù‚â•0) (hr : r ‚â† 0) :
        Œº.singularPart (r ‚Ä¢ ŒΩ) = Œº.singularPart ŒΩ`

[33mcommit b7434b9cbdefa8d1212e3514c3d479a7691edae3[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Mon Oct 30 15:05:23 2023 +0000

    feat: more API for split short complexes (#7995)

[33mcommit 24cd315a71cc65c4856e2cbafeb7ae1b2c150664[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Mon Oct 30 15:05:22 2023 +0000

    chore: remove some double spaces (#7983)
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit 012154374dafb922509db534520083bb6d37cc2c[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Mon Oct 30 15:05:21 2023 +0000

    feat(CategoryTheory): allow diagram chases by arguing up to refinements (#7821)
    
    This PR introduces the most basic results which enable doing diagram chases in general abelian categories by arguing "up to refinements".
    
    
    
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>

[33mcommit baf4bc6f566094ebd1e03e70ccd91e7e2257a6d3[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Mon Oct 30 15:05:20 2023 +0000

    feat: Basic lemmas about positivity of `a ‚Ä¢ b` (#7647)
    
    All lemmas and lemma names are taken from their `mul` counterpart.

[33mcommit 185dddfc6745cc254847085423dd050992417d46[m
Author: R√©my Degenne <Remydegenne@gmail.com>
Date:   Mon Oct 30 13:56:11 2023 +0000

    feat: if X is Gaussian, then `X+y` and `c*X` are Gaussian (#7674)
    
    Co-authored-by: Alexander Bentkamp
    
    
    
    Co-authored-by: RemyDegenne <remydegenne@gmail.com>
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>

[33mcommit d1f2a8e25e5a8ac59556b1bef38e7fe5c0f73e0b[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Oct 30 12:55:36 2023 +0000

    feat(Data/Complex): add lemmas like `div_ofReal_re` (#8024)

[33mcommit fd0d3accb1574b9af5ab847284e17f07d303311e[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Oct 30 12:55:34 2023 +0000

    feat: explicit formula for the complex square root (#7968)
    
    Also add formula for `cos (x / 2)`, `sin (x / 2)` and golf some proofs.

[33mcommit 7f1c6f7312e2d1a0a8de977e9c6ad025eda9b59e[m
Author: R√©my Degenne <Remydegenne@gmail.com>
Date:   Mon Oct 30 12:28:46 2023 +0000

    feat: generalize `ae_le_of_forall_set_lintegral_le_of_sigmaFinite` to AEMeasurable functions (#8032)

[33mcommit b71f1c84aeeb09297616b3b796894fad661baae2[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Oct 30 11:10:32 2023 +0000

    feat: add `Set.InjOn.exists_mem_nhdsSet` (#7947)
    
    A continuous function injective on a compact set
    and injective on a neighborhood of each point of this set
    is injective on a neighborhood of this set.
    
    From the Mandelbrot set connectedness project.
    
    Co-authored-by: @girving

[33mcommit 553dd6bde2c4f841ca529838ee1007a0dc1e7003[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Mon Oct 30 11:10:31 2023 +0000

    chore(Topology/Clopen): rename type variables (#7921)
    
    This file was using a mixture of Greek letters and letters X, Y, Z. Switch to using the latter consistently, per [Zulip discussion](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Naming.20convention.3A.20topological.20spaces/near/395769893).
    
    Best reviewed commit by commit; each is self-contained and should be quick to review.

[33mcommit 2d628e7674bfd795fbbd41e6c8686e89b7136cd9[m
Author: Anatole Dedecker <anatolededecker@gmail.com>
Date:   Mon Oct 30 11:10:30 2023 +0000

    feat: open maps from I √ó X, I discrete (#7809)
    
    
    
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>

[33mcommit 7d300cd848e1878e502c010ef07854e584416076[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Mon Oct 30 11:10:29 2023 +0000

    chore(Topology/Compactness/SigmaCompact): rename type variables (#7730)
    
    Greek letters for topological spaces are outdated, use letters X, Y, Z instead.
    [Zulip discussion](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Naming.20convention.3A.20topological.20spaces/near/395769893).
    
    
    
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>

[33mcommit 2904132a565ad8197edf86f541442712a225502e[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Mon Oct 30 10:24:57 2023 +0000

    chore: split MetricSpace.basic (#7920)
    
    This reduces the main file from 3340 to 2220 lines.
    The remaining file is somewhat entangled, so splitting is less obvious. Help is welcome, though a follow-up PR is probably better :-)
    
    I've kept copyright and authors as they were originally.

[33mcommit 0b6d797c25f75efd46add53957abfcb5aef64918[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Oct 30 08:37:46 2023 +0000

    feat(Data/Set): images of intervals under `Subtype.val` (#7653)
    
    Add `simp` lemmas for images of intervals in other intervals
    under `Subtype.val`.

[33mcommit 41b0e9c7f0d1ab669a24a957b1bd07886fd13749[m
Author: Junyan Xu <junyanxumath@gmail.com>
Date:   Mon Oct 30 03:57:44 2023 +0000

    refactor: generalize Abs lemmas from rings to groups (#7976)
    
    Four lemmas are moved from [Algebra/Order/Monoid/Defs.lean](https://github.com/leanprover-community/mathlib4/pull/7976/files#diff-b7e2a9cad39a929d367ebafb50a8fee9a683847bfe6cf4965d26c8b73d938162) to [Algebra/Order/Group/Defs.lean](https://github.com/leanprover-community/mathlib4/pull/7976/files#diff-1ea79e1c68d33cde0e0d03b5cd88acada0fe81a37be3c91e0dbdf5734e81b824) and generalized
    
    Four lemmas are moved from [Algebra/Order/Ring/Abs.lean](https://github.com/leanprover-community/mathlib4/pull/7976/files#diff-df3e020492662385d4cf526fc26cd5d5292e333cecb7aa35591abbf597ff36d7) to [Algebra/Order/Group/Abs.lean](https://github.com/leanprover-community/mathlib4/pull/7976/files#diff-04fe7d4ab1d9e83e80baaa4ff56278e736e3ec0a4ddace3fa767ddc86c69821b) and generalized
    
    Four lemmas are added in [Algebra/Order/Monoid/Defs.lean](https://github.com/leanprover-community/mathlib4/pull/7976/files#diff-b7e2a9cad39a929d367ebafb50a8fee9a683847bfe6cf4965d26c8b73d938162). They're special cases of [one_le_pow_iff](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Algebra/GroupPower/Order.html#one_le_pow_iff), but I can't import the file without offending assert_not_exists.
    
    
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>

[33mcommit 0044ce8e8a29dd483576eeb9898aced7c1533396[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Mon Oct 30 03:09:05 2023 +0000

    refactor(FieldTheory/Adjoin): provide a better defeq for `‚ä•` (#7957)
    
    This means `(‚ä• : IntermediateField F E).toSubalgebra = ‚ä•` is true by definition.
    
    Also adds `IntermediateField.map_bot` now that the proof is trivial.

[33mcommit 65ab68cb979db5aedcef2d881b6939a89c433b81[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Oct 30 03:09:04 2023 +0000

    feat: `‚àÉ·∂† x in ùìù a, x < a` (#7941)
    
    * Add `frequently_lt_nhds` and `frequently_gt_nhds`.
    * Move some lemmas from `Topology/Order/Basic` to `Topology/Algebra/Order/LeftRight`.
    * Relax TC assumptions in `Filter.Eventually.exists_lt` (and `*_gt`).
      New versions assume `NeBot (ùìù[<] a)` and `NeBot (ùìù[>] a)`,
      so the latter one can be applied, e.g., to `((a : ‚Ñù‚â•0) : ‚Ñù‚â•0‚àû)`.
    
    From the Mandelbrot set connectedness project.
    
    Co-Authored-By: @girving

[33mcommit 442eef6fd3ba9cfc24dfbff647325d9d0afad2f9[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Oct 30 02:26:44 2023 +0000

    chore: split `Topology.MetricSpace.Metrizable*` (#7912)
    
    Move
    - basic definitions to `Topology.Metrizable.Basic`,
    - Urysohn's metrization theorem to `Topology.Metrizable.Urysohns', and
    - metrizability of a uniform space with countably generated uniformity to `Topology.Metrizable.Uniform`.
    
    The next step is to redefine `Metrizable` as "uniformizable with countably generated uniformity"
    and make this definition available much earlier.

[33mcommit eeb791d8490dacb8003f96b7b0e0c6ef754e5bd0[m
Author: Patrick Massot <patrickmassot@free.fr>
Date:   Mon Oct 30 00:16:29 2023 +0000

    feat: more delaborators (#7964)
    
    
    
    Co-authored-by: Kyle Miller <kmill31415@gmail.com>

[33mcommit 5ce799c528c4a9c94cfb9a692f670fe950a82e97[m
Author: Scott Morrison <scott@tqft.net>
Date:   Sun Oct 29 23:01:10 2023 +0000

    chore: bump aesop (#8011)
    
    This requires removing some rules that `aesop` rejects. They aren't needed, and in fact I think were never doing anything?
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit c3470951ee01539dbc3968ab29fdc0d82f68ed1c[m
Author: Scott Morrison <scott@tqft.net>
Date:   Sun Oct 29 21:47:08 2023 +0000

    chore: bump std (#8008)
    
    This bumps std up to and including the merge of leanprover/std4#321
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 8c5976fff477bf4208567493a777a7d1bf53703c[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Sun Oct 29 21:47:07 2023 +0000

    feat: sheaves for unions of Grothendieck topologies (#7961)
    
    A presheaf is a sheaf for a union of two grothendieck topologies iff it is a sheaf for each separately.

[33mcommit 7b409262140039d00672c35a8e36f50b594d1edc[m
Author: Bolton Bailey <bolton.bailey@gmail.com>
Date:   Sun Oct 29 20:49:34 2023 +0000

    chore: coe_ratCast remove note (#8017)
    
    Applies the suggestion in the porting note

[33mcommit 3a9b57c42ffba439bff1c6de6c350fb12b858f82[m
Author: Scott Morrison <scott@tqft.net>
Date:   Sun Oct 29 15:52:05 2023 +0000

    chore: update Mathlib for leanprover/std4#183 (#7982)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit a0343c16431ed023e41ce6a030d364f3065ea069[m
Author: David Renshaw <dwrenshaw@gmail.com>
Date:   Sun Oct 29 15:21:32 2023 +0000

    fix: catch 'none' exception in Real.sqrt positivity extension (#8014)
    
    This example currently fails
    ```lean
    example (x : ‚Ñù) : 0 ‚â§ Real.sqrt x := by positivity
    ```
    due to the exception being thrown here:
    https://github.com/leanprover-community/mathlib4/blob/b56efa53d7479fda9740f364170cbaef34699dee/Mathlib/Tactic/Positivity/Core.lean#L304
    
    It should succeed, because the junk value used for `sqrt` of a negative number is non-negative.
    
    This PR fixes it by catching the exception, a pattern used elsewhere:
    https://github.com/leanprover-community/mathlib4/blob/b56efa53d7479fda9740f364170cbaef34699dee/Mathlib/Tactic/Positivity/Core.lean#L325

[33mcommit b56efa53d7479fda9740f364170cbaef34699dee[m
Author: Geoffrey Irving <irving@naml.us>
Date:   Sun Oct 29 11:56:41 2023 +0000

    feat(Analysis/Analytic): A few more analyticity lemmas (#7967)
    
    1. Analytic at a point means analytic in a ball
    2. In addition to `AnalyticAt.{smul,mul,pow}`, do `AnalyticOn.{smul,mul,pow}`
    
    Also change `AnalyticAt.smul` and `AnalyticAt.pow` to use pointwise `smul` and `pow` rather than function `smul` and `pow`, as I think this is more ergonomic when used in practice (from experience with https://github.com/girving/ray).

[33mcommit a988ad9300897ae7de89811e768a0b09555e6488[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sun Oct 29 04:04:31 2023 +0000

    feat: a unique cluster pt of a filter is its limit (#7944)
    
    If a filter has a unique cluster point in a compact set,
    then this point is a limit of the filter.
    
    We add four versions of this fact:
    - for a compact set or a compact space;
    - for a `ClusterPt` and `_ ‚â§ ùìù _`
      or `MapClusterPt` and `Filter.Tendsto _ _ (ùìù _)`.
    
    Also
    
    - add `isCompact_iff_ultrafilter_le_nhds'`
      that uses `s ‚àà f` instead of `‚Üëf ‚â§ ùìü s`;
    - move `Ultrafilter.le_nhds_lim` to a more appropriate file.
    
    Motivated by a lemma in the Mandelbrot set connectedness project.
    
    Co-Authored-By: @girving

[33mcommit bab05758f84cb41874389437518c647dbbf93b24[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Sat Oct 28 19:07:15 2023 +0000

    feat: change `IsFreeGroup` to a `Prop` (#7698)
    
    Currently, the class `IsFreeGroup` contains data (namely, a specific set of generators). This is bad, as there are many sets of generators in a free group, and changing sets of generators happens all the time in geometric group theory. We switch to a design in which
    * we define `FreeGroupBasis`, following the definition and API of bases of vector spaces. Most existing API around `IsFreeGroup` is transferred to lemmas taking a free group basis as a variable.
    * The typeclass `IsFreeGroup` is Prop-valued, and requires only the existence of a free group basis.

[33mcommit 7b6b2a929038f47fe84f5674803e1a3d3d19dd9c[m
Author: Christian Merten <christian@merten.dev>
Date:   Sat Oct 28 15:58:35 2023 +0000

    fix timezone and decoding issues in port status script (#8001)
    
    Fixes timezone and decoding issues in the `make_port_status.py` script.

[33mcommit 8063e2bfadad5be7ccd40074a2b3494d2c815e52[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Sat Oct 28 15:29:01 2023 +0000

    refactor(CategoryTheory/Monoidal/Transport): flip the direction of `ŒºIso` and `ŒµIso` (#7922)
    
    Reversing these makes the API closer to that of `CategoryTheory.LaxMonoidalFunctor`, and doesn't seem to have much impact on proof difficulty.
    This also golfs a proof rather than attempting to fix the old one.
    
    
    
    Co-authored-by: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>

[33mcommit 2aead333af274e6fc64669d43be204c27c2e51a9[m
Author: Kevin Buzzard <k.buzzard@imperial.ac.uk>
Date:   Sat Oct 28 14:53:25 2023 +0000

    add @[inherit_doc] to equiv notation (#7998)
    
    This makes hovering over `‚âÉ` display the docstring for `Equiv` (if I've understood things correctly).

[33mcommit d70b029618a44e71c2e168bc0d758f0fad6df0b3[m
Author: Andrew Yang <the.erd.one@gmail.com>
Date:   Sat Oct 28 11:22:32 2023 +0000

    feat: Remove `Extensive` in favour of `FinitaryExtensive`. (#7731)
    
    
    
    Co-authored-by: Andrew Yang <36414270+erdOne@users.noreply.github.com>

[33mcommit 77ccc30d9f983d3c9bfbc6a795623d404227f4e7[m
Author: Kyle Miller <kmill31415@gmail.com>
Date:   Fri Oct 27 21:59:33 2023 +0000

    fix: `push_neg` shouldn't unfold projections (#7989)

[33mcommit 9045cd8c333c2c484c4609feaf7a16708eb2b5f9[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Fri Oct 27 17:59:35 2023 +0000

    chore(Data/Bool/Basic): lemmas about min and max (#7984)

[33mcommit 09820a53ad2336ec325849dc35986a91aa935f06[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Fri Oct 27 17:59:34 2023 +0000

    fix(FieldTheory): add the missing `_root_` lost during porting (#7981)
    
    You can tell this was a porting error because the `#align`s were weird.

[33mcommit a7954735c30761bf7a62e3a0662682e1b0c7dbd0[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Fri Oct 27 17:59:33 2023 +0000

    fix(Tactic/ApplyFun): do not silence errors (#7972)
    
    `MVarId.assumption` is dangerous because you can't tell whether it failed due to a crash or no suitable assumption.
    
    In the case of `apply_fun`, this meant the behavior would change depending on the recursion depth (or presumably heartbeat limit).

[33mcommit 220023c1086c4a48a5b17303cd2fcd3b1b5017c9[m
Author: Floris van Doorn <fpvdoorn@gmail.com>
Date:   Fri Oct 27 17:59:32 2023 +0000

    fix: resolve some `nolint simpNF` commands (#7929)

[33mcommit f52e2714c277748588a64d3bbdd2012e2c0d47bc[m
Author: Timo <timorcb@gmail.com>
Date:   Fri Oct 27 17:23:08 2023 +0000

    chore: ofNat lemmas for Complex.normSq and abs (#7975)
    
    Having `_ofNat` lemmas is important for confluence given that for both `normSq` and `abs`, the `_ofReal` lemma is `@[simp]` and so is `ofReal_ofNat`. We already have lemmas for 0 and 1 from the bundled classes for both functions, so I'm only adding lemmas for the `AtLeastTwo` case here.

[33mcommit 8903aac3e1ce126a14c5482e2133b485e080d319[m
Author: Andr√©s Goens <a.goens@uva.nl>
Date:   Fri Oct 27 16:31:29 2023 +0000

    feat (Data/Polynomial/RingDivision): add lemmas for subtraction and negation (#7971)
    
    Adds two lemmas that show that negation and subtraction commute with polynomial division.
    
    
    
    
    Co-authored-by: Andr√©s Goens <andres@goens.org>
    Co-authored-by: Andr√©s Goens <andres.goens@ed.ac.uk>

[33mcommit 377e205757f6b2cab2895a2e37a283d8ca792dcc[m
Author: Anne Baanen <Vierkantor@users.noreply.github.com>
Date:   Fri Oct 27 15:47:55 2023 +0000

    chore: fix Lean3-ism in SetLike docs (#7986)
    
    Although most of the docs were ported, we still used old function syntax and `congr'` instead of `congr!`. I tested the new version on `Subgroup`.

[33mcommit b0a73d4f81f7c3c52d4a29d4f8d47f1061501271[m
Author: Buster Copley <buster@buster.me.uk>
Date:   Fri Oct 27 15:47:54 2023 +0000

    feat: Nontrivial instances for ExteriorAlgebra, CliffordAlgebra (#7985)
    
    Using methods suggested by @eric-wieser
    [Zulip discussion](https://leanprover.zulipchat.com/#narrow/stream/113489-new-members/topic/Nontrivial.20algebras)

[33mcommit b65c6a35d726e7be81e7ab7daa2bcfacfe1e5fd9[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Fri Oct 27 14:12:39 2023 +0000

    feat: the homology of short complexes of abelian groups (#7966)
    
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit c5fe4511fef17b6e548f63097f467e3c40d51510[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Fri Oct 27 14:12:38 2023 +0000

    refactor: introduce the new homology API for homological complex and rename the old one (#7954)
    
    This PR renames definitions of the current homology API (adding a `'` to `homology`, `cycles`, `QuasiIso`) so as to create space for the development of the new homology API of homological complexes: this PR also contains the new definition of `HomologicalComplex.homology` which involves the homology theory of short complexes.
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit a6c4c7e809413e5dbe99142932b1bcbca7f4b694[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Fri Oct 27 13:10:02 2023 +0000

    feat: Fintype.prod_prod_type (#7955)
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 0608933a7b9d277e820778adf731a96b0fb11645[m
Author: Scott Morrison <scott@tqft.net>
Date:   Fri Oct 27 12:02:32 2023 +0000

    chore: bump aesop, incompletely (#7980)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 7a2492cd35177bb7284f7469dda1de105d663b3f[m
Author: Kitamado <tellagoodstory@icloud.com>
Date:   Fri Oct 27 10:36:44 2023 +0000

    add minimum_of_length_pos_mem (#7974)
    
    add `minimum_of_length_pos_mem` to `Mathlib/Data/List`
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 02b5c76bd21cfdd03202290be0c950882abfdf34[m
Author: Amelia Livingston <101damnations@github.com>
Date:   Fri Oct 27 09:57:00 2023 +0000

    feat(RepresentationTheory/GroupCohomology): add some API for group cohomology in low degree (#7734)
    
    
    
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>

[33mcommit d8f3f716052533d78285c25c907a472a994cd041[m
Author: Scott Morrison <scott@tqft.net>
Date:   Fri Oct 27 08:33:36 2023 +0000

    chore: bump std (#7979)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 257fd3f45a790ec4e4d2ab9adbcf9a6f7e7b9ff3[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Fri Oct 27 08:10:44 2023 +0000

    feat: more properties of homology in preadditive categories (#7817)
    
    This PR also introduces the notion of homotopy of morphisms between short complexes in preadditive categories.
    
    
    
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>

[33mcommit dc43514ee783bba6740edf532b0a7d2a7b8b05e5[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Fri Oct 27 07:47:56 2023 +0000

    feat: a split short complex is exact (#7816)
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>

[33mcommit 5f258eb538d15429b57cf29ce7962b14ccafc64b[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Fri Oct 27 07:19:54 2023 +0000

    doc(Algebra/DualNumber): notation docstrings (#7969)

[33mcommit e3f29f25f05389aec035c24bdedfbd887c9b3a26[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Fri Oct 27 06:11:52 2023 +0000

    feat: inequalities of decreasing lists (#7896)

[33mcommit 7c56cc12dce9d83d6b17fe5dd3989ec2f9f8f067[m
Author: Scott Morrison <scott@tqft.net>
Date:   Fri Oct 27 01:06:27 2023 +0000

    chore: better error handling in congr! (#7945)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 2ebf8b9cde2f8cdcd3346ae2cc62fbf7f92024fe[m
Author: Scott Morrison <scott@tqft.net>
Date:   Thu Oct 26 23:50:21 2023 +0000

    chore: allow more heartbeats in Algebra/Jordan/Basic (#7952)
    
    This was already extremely close to the limit, and becomes a tiny bit over on `nightly-2023-10-26` (no significant overall change, see discussion at https://github.com/leanprover/lean4/pull/2714#issuecomment-1779912951).
    
    
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 57d9c35748b06ca3b65d31ed85f1960d4b6ee5cd[m
Author: Andrew Yang <the.erd.one@gmail.com>
Date:   Thu Oct 26 22:15:23 2023 +0000

    feat(CategoryTheory/Adhesive): Sheaf toposes are finitary extensive and adhesive (#7721)
    
    Port of https://github.com/leanprover-community/mathlib/pull/17637
    
    
    
    Co-authored-by: Andrew Yang <36414270+erdOne@users.noreply.github.com>

[33mcommit c38470f361845bfd9c2cc954f563aede538aef3f[m
Author: David Renshaw <dwrenshaw@gmail.com>
Date:   Thu Oct 26 21:10:38 2023 +0000

    feat: port positivity extension for Nat.ascFactorial (#7931)
    
    Adds a positivity extension for `Nat.ascFactorial`. (Compare to the lean 3 version: https://github.com/leanprover-community/mathlib/blob/3365b20c2ffa7c35e47e5209b89ba9abdddf3ffe/src/tactic/positivity.lean#L762-L767)
    
    Also updates the `Nat.factorial` positivity extension to use a more idiomatic `~q()` match.

[33mcommit c09b98953387a8f92ae7daf455681d022fbcd830[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Thu Oct 26 21:10:37 2023 +0000

    feat(MeasureTheory/Integral/Lebesgue): add `set_lintegral_subtype` (#7679)
    
    * Add `MeasureTheory.set_lintegral_eq_subtype` and
      `MeasureTheory.set_lintegral_subtype`.
    * Add `MeasurableEmbedding.comap_map`,
      `MeasurableEmbedding.comap_restrict`, and
      `MeasurableEmbedding.restrict_comap`.
    * Drop measurability assumption in `MeasurableEmbedding.comap_preimage`.
    * Remove some empty lines.

[33mcommit b8e38026977c95fb3cead26ef0efa73b61696145[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Thu Oct 26 21:10:36 2023 +0000

    feat: Sublattices (#7549)
    
    Basic API for sublattices (there's more to come).

[33mcommit 8b0098cff3cb76592d555335afa33fa4b304aaf2[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Thu Oct 26 19:51:53 2023 +0000

    doc: typos in to_additive docs (#7956)
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit 168f6c2311e11523041e91f21e6c42b8aa896bc6[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Thu Oct 26 19:14:04 2023 +0000

    chore(FieldTheory/IntermediateField): some lemmas about `toSubalgebra` (#7958)

[33mcommit 1ffe11781965ec53f79fe5a18b8e25d4b874f1a7[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Thu Oct 26 18:40:29 2023 +0000

    chore(SpecialFunctions/Pow): golf (#7960)

[33mcommit 9e92f67f3d4accdc07df1ab578b92129e1c47748[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Thu Oct 26 17:29:41 2023 +0000

    feat(Data/*/Sqrt): decidability of `IsSquare` (#7935)
    
    [Zulip thread](https://leanprover.zulipchat.com/#narrow/stream/217875-Is-there-code-for-X.3F/topic/.E2.9C.94.20Case.20checking.20in.20combinatorics/near/398517440)

[33mcommit 645da3e57a8b763ba16719af53439ae7617624e1[m
Author: Antoine Chambert-Loir <antoine.chambert-loir@u-paris.fr>
Date:   Thu Oct 26 16:24:49 2023 +0000

    feat (GroupTheory.Perm.Cycle.PossibleTypes) : cycleTypes of perm (#7433)
    
    Characterize the possible types of permutations: given `m : Multiset ‚Ñï`,
    there are permutations in `Equiv.Perm Œ±` with cycleType `m` if and only if
    `m.sum`is at most `Fintype.card Œ±` and the members of `m` are at least 2.
    
    This result will be used in later PR which computes the cardinality of
    conjugacy classes in `Equiv.Perm Œ±` and `alternatingGroup Œ±`
    
    
    
    Co-authored-by: Antoine Chambert-Loir <antoine.chambert-loir@math.univ-paris-diderot.fr>

[33mcommit 8cd944d0aa56ccfd19573ab0199afe25b4431fee[m
Author: sven-manthe <sven.manthe@gmerek-manthe.de>
Date:   Thu Oct 26 14:48:11 2023 +0000

    Fix: add two simp lemmas about complete lattice homs (#7959)
    
    related lemmas for sInf etc are simp

[33mcommit 2392a12c582544ec077aa1858f4398cea253b6d9[m
Author: David Renshaw <dwrenshaw@gmail.com>
Date:   Thu Oct 26 14:48:10 2023 +0000

    chore: use Qq in new Gamma positivity extension (#7900)
    
    Adds Qq static checking, as requested in this comment: https://github.com/leanprover-community/mathlib4/pull/7888#issuecomment-1777483059
    
    The `have pa' : Q(..) := pa` lines are necessary to sort out typeclass instances of `LE` and `LT`.

[33mcommit 5f7038542c7b215a519b3856c18809a12eb1fd42[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Thu Oct 26 14:48:09 2023 +0000

    feat: Flat triangles have aligned vertices (#7733)
    
    In a normed torsor over a strictly convex space, if the triangle inequality `dist a c ‚â§ dist a b + dist b c` is an equality, then `b` lies between `a` and `c`.
    
    
    
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit a5627a81cf47756ea2394579e90a0c853f52c7f9[m
Author: Scott Morrison <scott@tqft.net>
Date:   Thu Oct 26 13:37:38 2023 +0000

    chore: bump dependencies (#7953)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit b73fc7ea3e9d4e71b65a695e2e49a91d066a1d37[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Thu Oct 26 13:37:37 2023 +0000

    feat: add `Metric.sphere_subset_ball` (#7946)
    
    From the Mandelbrot set boundedness project
    
    Co-Authored-By: @girving

[33mcommit e43f3621472e63f62d7bdd8d74e8730c5a9696f8[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Thu Oct 26 13:37:36 2023 +0000

    feat: path-connectedness is preserved by homeomorphisms (#7878)
    
    Mirrors the corresponding proofs for connectedness.
    
    Co-authored-by: @ADedecker

[33mcommit 57a0a1ab6d1278ebb745f51c0d57085206abe6f9[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Thu Oct 26 12:30:34 2023 +0000

    feat: `Prod.fst : X √ó Y ‚Üí X` is a closed map if `Y` is compact (#7936)
    
    From the Mandelbrot set connectedness project
    
    Co-Authored-By: @girving

[33mcommit 7adc50c4a3d775011f06c992e4ceda19f29843fa[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Thu Oct 26 11:12:33 2023 +0000

    chore: fix whitespace typos (#7950)

[33mcommit 1a6b42a0328410e334a8d19a87029e526c27f418[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Thu Oct 26 11:12:32 2023 +0000

    chore: use more `‚àè` instead of `Finset.prod` (#7948)
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit 7026a0cedf7436badfb00520dce9ba8620fc777f[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Thu Oct 26 11:12:31 2023 +0000

    chore(Algebra/DualNumber): `Œµ` commutes (#7928)
    
    This doesn't generalize to `TrivSqZeroExt`, as we do not have a notion of `Commute` for `smul`.

[33mcommit d8e5144d7d0c592f3d82dc303a0e02c7caecda07[m
Author: Richard M. Hill <r.m.hill@ucl.ac.uk>
Date:   Thu Oct 26 11:12:30 2023 +0000

    feat (RingTheory/PowerSeries) add formal derivative operation (#7820)
    
    Given a commutative semiring R, define the formal derivative R[[X]] \to R[[X]] and prove some basic properties.
    
    This is a part of #7271.

[33mcommit 49f7f62dff21b1f5880b25e7c21b0c29446f3890[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Thu Oct 26 10:03:35 2023 +0000

    chore: move Submodule.{map,comap} to Algebra.Module.Submodule.Map (#7925)

[33mcommit c6cb8b612d48f6f3659290185c78f38d1f4d9cfd[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Thu Oct 26 10:03:34 2023 +0000

    feat: condition for being < an ordinal in a decreasing list (#7899)

[33mcommit 3716d38c885133bb6082156b49b2a2f8eefe34e0[m
Author: Andrew Yang <the.erd.one@gmail.com>
Date:   Thu Oct 26 10:03:33 2023 +0000

    feat(CategoryTheory/Limits/VanKampen): Properties of van Kampen colimits (#7745)
    
    Also moves the definition of van Kampen colimits from `CategoryTheory/Extensive.lean` into a new file.
    
    
    
    Co-authored-by: Andrew Yang <36414270+erdOne@users.noreply.github.com>
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>

[33mcommit d03396c1c75c600ba7083ccb968dc7354915fb10[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Thu Oct 26 10:03:32 2023 +0000

    feat: Lattice closedness (#7548)
    
    Define when a set in a lattice is closed under lattice operations.

[33mcommit 840db66366ad717cd5d5defc6f8036bb898e049a[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Thu Oct 26 08:57:17 2023 +0000

    feat: adding an element at the head of lists preserves non-strict lexicographic inequality (#7897)

[33mcommit cccdf1fd3cf96540d6005f6e4961816e762c7b13[m
Author: Kyle Miller <kmill31415@gmail.com>
Date:   Thu Oct 26 03:07:05 2023 +0000

    fix: make `replace` not inadvertently close goal (#7939)
    
    If `replace` couldn't clear the hypothesis, it would accidentally leave no more goals. (Note that `pure ()` doesn't work because the main goal has already been assigned by that point so will be deleted from the goals list.)

[33mcommit f1bf090e8954d7fad3265b92d6f1356c68eb5bc4[m
Author: Mario Carneiro <mcarneir@andrew.cmu.edu>
Date:   Thu Oct 26 03:07:04 2023 +0000

    feat: `ring` for `PNat` (#6570)
    
    This is a (relatively low-effort) implementation of `ring` on `PNat` which works by using a typeclass to lift expressions to `Nat`, where the more usual methods apply. It is written in a generic style so it can be extended with typeclasses for other types, which extends the applicability to any type which has an injective map to a commutative semiring.
    
    
    
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>
    Co-authored-by: Rob Lewis <Rob.y.lewis@gmail.com>

[33mcommit f10c02248e16aff2ab9cbba24f8ac2c1a6620cba[m
Author: Patrick Massot <patrickmassot@free.fr>
Date:   Thu Oct 26 02:36:44 2023 +0000

    chore: Scope the adjoin element notation (#7938)

[33mcommit 452129ae895bdfa299884f11ca1d9277de43a867[m
Author: Kyle Miller <kmill31415@gmail.com>
Date:   Thu Oct 26 01:32:06 2023 +0000

    feat: have `notation3` use elaborator when generating matchers, add support for pi/lambda (#6833)
    
    `notation3` was generating matchers directly from syntax, which included a half-baked implementation of a term elaborator. This switches to elaborating the term and then generating matchers from the elaborated term. This
    1. is more robust and consistent, since it uses the main elaborator and one can make use of other notations
    2. has the nice side effect of adding term info to expansions in the `notation3` command
    3. can unfortunately generate matchers that are more restrictive than before since they also match against elaborated features such as implicit arguments.
    
    We now also generate matchers for expansions that have pi types and lambda expressions.

[33mcommit 57e4e03dd1782a74cf937835bbdb5f90955e4406[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Oct 25 20:48:06 2023 +0000

    feat(Filter): lemmas from Mandelbrot connectedness project (#7913)
    
    - Add `Filter.frequently_iff_neBot`
      and `Filter.frequently_mem_iff_neBot`.
    
    - Drop some implicit arguments
      that are available from `variable`.
    
    - Add `Filter.disjoint_prod` and `Filter.frequently_prod_and`.
    
    - Swap `Filter.le_prod` with `Filter.tendsto_prod_iff'`
      to use the latter in the proof of the former.
    
    Co-Authored-By: @girving

[33mcommit c60a780523464f433ac20559889d20c60c79e928[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Oct 25 20:01:32 2023 +0000

    feat(NhdsSet): lemmas from the Mandelbrot set connectedness project (#7914)
    
    Add `eventually_nhdsSet_iff_exists`, `eventually_nhdsSet_iff_forall`,
    and `IsOpen.mem_nhdsSet_self`.
    
    Co-authored-by: @girving

[33mcommit 0eda3bbccc776d7df82a7eb0943ee31650b92e6f[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Wed Oct 25 17:48:18 2023 +0000

    fix(CategoryTheory/Monoidal/Category): correct mathport-ized lemma names (#7923)
    
    `tensor_hom_inv_id`, which matches `tensor_inv_hom_id`, was incorrectly renamed during porting to `tensorHom_inv_id`.

[33mcommit 7f885ee905fe01646967a99b54028c3270cce975[m
Author: Kyle Miller <kmill31415@gmail.com>
Date:   Wed Oct 25 17:26:24 2023 +0000

    feat: pretty print as `‚Ü•S` instead of `{ x // x ‚àà S }` for SetLike (#7927)
    
    Adds a delaborator detecting `{ x // x ‚àà S }` where the membership uses `SetLike.instMembership`, since then this matches the `CoeSort` instance for `SetLike`.

[33mcommit 65b7d1648abdf4ed5a0e68dff09a96450c0dc48a[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Oct 25 14:17:59 2023 +0000

    feat: generalize some lemmas to directed types (#7852)
    
    ## New lemmas / instances
    
    - An archimedean ordered semiring is directed upwards.
    - `Filter.hasAntitoneBasis_atTop`;
    - `Filter.HasAntitoneBasis.iInf_principal`;
    
    ## Fix typos
    
    - Docstrings: "if the agree" -> "if they agree".
    - `ProbabilityTheory.measure_eq_zero_or_one_of_indepSetCat_self` ->
      `ProbabilityTheory.measure_eq_zero_or_one_of_indepSet_self`.
    
    ## Weaken typeclass assumptions
    
    ### From a semilattice to a directed type
    
    - `MeasureTheory.tendsto_measure_iUnion`;
    - `MeasureTheory.tendsto_measure_iInter`;
    - `Monotone.directed_le`, `Monotone.directed_ge`;
    - `Antitone.directed_le`, `Antitone.directed_ge`;
    - `directed_of_sup`, renamed to `directed_of_isDirected_le`;
    - `directed_of_inf`, renamed to `directed_of_isDirected_ge`;
    
    ### From a strict ordered semiring to an ordered semiring
    
    - `tendsto_nat_cast_atTop_atTop`;
    - `Filter.Eventually.nat_cast_atTop`;
    - `atTop_hasAntitoneBasis_of_archimedean`;

[33mcommit 34d930ad7d64baf78421cee4c6a07f2357bcf6df[m
Author: Geoffrey Irving <irving@naml.us>
Date:   Wed Oct 25 13:20:53 2023 +0000

    feat(Analysis/Analytic): A few lemmas that simple things are analytic (#7677)
    
    We record various simple lemmas that things are `analyticAt` or `analyticOn`.  There's no hard work here, just corollaries of other results:
    
    1. `id`, `fst`, `snd`
    2. Power series terms, in the origin (we already know they have power series, this is just the `.analyticAt_changeOrigin` corollary
    3. Finite sums
    4. Pairs of analytic functions: `x ‚Ü¶ (f x, g x)`
    
    We also add a few lemmas for dealing with curried analytic functions. Starting with `AnalyticOn ùïú (uncurry h) s`,
    
    1. `AnalyticOn.curry_comp` composes it with two input analytic functions
    2. `AnalyticOn.along_fst/snd` show analyticity along each coordinate
    
    
    
    
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>
    Co-authored-by: David Loeffler <d.loeffler.01@cantab.net>

[33mcommit 7c069f7f1110ba047d99f5f6ace9de2695844111[m
Author: Arend Mellendijk <arend.mellendijk@gmail.com>
Date:   Wed Oct 25 11:20:52 2023 +0000

    feat(Algebra/BigOperators/Order): prod_lt_prod (#7844)
    
    Add a product variant of [mul_lt_mul](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Algebra/Order/Ring/Defs.html#mul_lt_mul), following the pattern of [Finset.prod_lt_prod'](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Algebra/BigOperators/Order.html#Finset.prod_lt_prod'). This fills in a gap between [Finset.prod_le_prod](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Algebra/BigOperators/Order.html#Finset.prod_le_prod), [Finset.prod_le_prod'](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Algebra/BigOperators/Order.html#Finset.prod_le_prod') and [Finset.prod_lt_prod'](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Algebra/BigOperators/Order.html#Finset.prod_lt_prod').

[33mcommit f81eaba3fed8f1f0a0b18c1eb0409a2deba7f8d0[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Wed Oct 25 10:47:24 2023 +0000

    refactor: Move the data fields of `MonoidalCategory` into a `Struct` class (#7279)
    
    This matches the approach for `CategoryStruct`, and allows us to use the notation within `MonoidalCategory`.
    
    It also makes it easier to induce the lawful structure along a faithful functor, as again it means by the time we are providing the proof fields, the notation is already available.
    
    This also eliminates `tensorUnit` vs `tensorUnit'`, adding a custom pretty-printer to provide the unprimed version with appropriate notation.

[33mcommit f04a8ee5448894523db0720c5e74c1fb68b23a78[m
Author: Mario Carneiro <mcarneir@andrew.cmu.edu>
Date:   Wed Oct 25 09:51:56 2023 +0000

    fix: catch instance failures in linarith (#7916)
    
    As [reported on Zulip](https://leanprover.zulipchat.com/#narrow/stream/270676-lean4/topic/Running.20out.20of.20heartbeats/near/398418838).
    
    
    
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>

[33mcommit 8c5a066b64dbe8a061b1018522665210a2f24726[m
Author: Arend Mellendijk <arend.mellendijk@gmail.com>
Date:   Wed Oct 25 07:40:01 2023 +0000

    feat(NumberTheory/ArithmeticFunction): lemma about lcm, gcd and multiplicative functions (#7787)
    
    This lemma came out of my Selberg sieve project.
    
    
    
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>

[33mcommit 0935274497e96485e5df03e957039bc81d254fcd[m
Author: Scott Morrison <scott@tqft.net>
Date:   Wed Oct 25 03:39:52 2023 +0000

    chore: bump Std (#7908)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit a8f9b16116572abf097eb93f7398a684fd7fc4a8[m
Author: Kyle Miller <kmill31415@gmail.com>
Date:   Wed Oct 25 02:51:13 2023 +0000

    feat: beta% term elaborator (#7207)
    
    Defines a `beta% t` syntax that elaborates `t` and then does one level of beta reduction using `Lean.Expr.headBeta`. This is useful for defining notations that insert a function under a binder and want to substitute the bound variable, for example `‚àÄ i, beta% p i`.

[33mcommit 6c71243734bf9a5c1191d22275eb9682d5133bf7[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Oct 25 01:20:42 2023 +0000

    chore: move `tendsto_zpow_atTop_atTop` (#7887)
    
    Also move it to the `Filter` namespace
    and drop `Strict` from some TC assumptions.

[33mcommit 1a79f4b2854dea6dc7a133543f0a140d4138cc58[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Tue Oct 24 21:58:52 2023 +0000

    feat: gt versions of some lemmas about sorted lists and finsets (#7895)

[33mcommit 270b0eab86d904baab30c071d83713ffd44b9f08[m
Author: Patrick Massot <patrickmassot@free.fr>
Date:   Tue Oct 24 20:48:10 2023 +0000

    chore: remove `Equiv.toFun_as_coe_apply` (#7902)
    
    This `simp` lemma was added during the port but tagged as probably unnecessary after fixing https://github.com/leanprover/lean4/issues/1937. This PR confirms it is indeed no longer necessary. The only proofs that needed fixing were the one explicitly calling the new simp lemma.
    
    The porting note can go too.

[33mcommit bf077b111ca30b6793deafddf07fd8949cb92a3a[m
Author: Heather Macbeth <25316162+hrmacbeth@users.noreply.github.com>
Date:   Tue Oct 24 17:18:56 2023 +0000

    chore: positivity extension for the Gamma function (#7888)

[33mcommit 5fcd5523d36c26132ccf9bc264523423ba5d3e60[m
Author: Heather Macbeth <25316162+hrmacbeth@users.noreply.github.com>
Date:   Tue Oct 24 16:07:05 2023 +0000

    chore: gcongr tagging (#7889)
    
    Tag lemmas about `tsub` (truncated subtraction), nnreal and ennreal powers, and measures for `gcongr`.

[33mcommit 2737bd912c4b1ffed90ba7cb2682c3b549b9e714[m
Author: Adam Topaz <github@adamtopaz.com>
Date:   Tue Oct 24 14:44:31 2023 +0000

    feat: `apply _ at _` tactic (#7527)
    
    See relevant zulip discussions [here](https://leanprover.zulipchat.com/#narrow/stream/270676-lean4/topic/MVars.20from.20implicit.20variables/near/394893597) and [here](https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/apply.20at/near/394509077)
    
    
    
    Co-authored-by: joneugster <eugster.jon@gmail.com>

[33mcommit bca93b9f1fa478d202d51efe98b90d3678695209[m
Author: Bolton Bailey <bolton.bailey@gmail.com>
Date:   Tue Oct 24 13:49:40 2023 +0000

    feat: add Fin.cons_mem_piFinset_iff (#6605)
    
    Adds a lemma about when `Fin.cons` is an element of `piFinset`
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 9eb5aaff128911772f3564ce032b44a94d5f8ba7[m
Author: Martin Dvo≈ô√°k <martin.dvorak@matfyz.cz>
Date:   Tue Oct 24 10:48:40 2023 +0000

    General valued constraint satisfaction problem defined (#7404)

[33mcommit d918edcf0cfdd4deef533160cdc38b6bb3b72ca9[m
Author: Anne Baanen <vierkantor@vierkantor.com>
Date:   Tue Oct 24 10:15:47 2023 +0000

    perf: speed up `Ring.DirectLimit.field` instance (#7864)
    
    This is split off from #7584
    
    
    
    
    Co-authored-by: Anne Baanen <Vierkantor@users.noreply.github.com>

[33mcommit a9da37b003b0d5c7a3a4c4dc09156e82aaccf00c[m
Author: Xavier Roblot <46200072+xroblot@users.noreply.github.com>
Date:   Tue Oct 24 09:40:28 2023 +0000

    feat: volume of a complex ball (#6907)
    
    We prove the formula for the area of a disc
    ```lean
    theorem volume_ball (x : EuclideanSpace ‚Ñù (Fin 2)) (r : ‚Ñù) :
        volume (Metric.ball x r) = NNReal.pi * (ENNReal.ofReal r) ^ 2
    ```
    and deduce from this, the volume of complex balls
    ```lean
    theorem volume_ball (a : ‚ÑÇ) (r : ‚Ñù) :
        volume (Metric.ball a r) = NNReal.pi * (ENNReal.ofReal r) ^ 2
    ```
    
    Co-authored-by: James Arthur
    Co-authored-by: Benjamin Davidson
    Co-authored-by: Andrew Souther
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 16ccdcd17b493446686489520fefcdfffca3a818[m
Author: Scott Morrison <scott@tqft.net>
Date:   Tue Oct 24 09:20:12 2023 +0000

    chore: bump Std and ProofWidgets ('Try these:' widget) (#7881)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>
    Co-authored-by: Komyyy <pol_tta@outlook.jp>

[33mcommit f201111e06fc2e156824f8fa1884ed27053c6f35[m
Author: Winston Yin <winstonyin@gmail.com>
Date:   Tue Oct 24 07:55:51 2023 +0000

    fix: Incorrect integral curve existence theorem for vector fields (#6875)
    
    `exists_isPicardLindelof_const_of_contDiffOn_nhds` had unnecessarily specific assumptions.
    
    `ContDiffOn` assumption is replaced with `ContDiffAt`.
    
    `ProperSpace E` assumption is removed.

[33mcommit b5128f3cea63ba2020dcb5c5294bfa9a6fad495f[m
Author: Scott Morrison <scott@tqft.net>
Date:   Tue Oct 24 06:52:26 2023 +0000

    chore: fix porting note about Comma.eqToHom_right by adding simp lemmas (#7884)
    
    There are two things going on here: the change in behaviour in `simp` (currently, but not for much longer, requiring `zeta := false`), and some defeq abuse that I'm resolving here by adding additional `simp` lemmas.
    
    This will slightly clarify one of the changes required in #7847
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit ef3af0d00b0736a2bcbaf65c73fa1283769ba37b[m
Author: Scott Morrison <scott@tqft.net>
Date:   Tue Oct 24 06:28:38 2023 +0000

    chore: bump std dependency (#7880)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 1391538ca16e876f951240346a3e4abe1ed17cc7[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Mon Oct 23 23:48:21 2023 +0000

    chore: split `CategoryTheory/Sites/SheafOfTypes (#7854)
    
    I was planning to add some stuff to this file which was already over 1000 lines long.
    
    - The explicit sheaf condition for a sieve/presieve `IsSheafFor` is now in `CategoryTheory/Sites/IsSheafFor`.
    - The sheaf condition for a sieve/presieve in terms of equalizer diagrams is now in `CategoryTheory/Sites/EqualizerSheafCondition`
    - Only things related to `IsSheaf`/`IsSeparated`¬†are left in the file `CategoryTheory/Sites/SheafOfTypes`.

[33mcommit eb68871754bb542e75f903eab8f4dc0ac67203eb[m
Author: Scott Morrison <scott@tqft.net>
Date:   Mon Oct 23 22:39:25 2023 +0000

    feat: allow configuration of discharger for rw? (#7798)
    
    It's pretty minor configuration: you can choose between no discharger, `assumption`, or `solve_by_elim`.
    
    Moreover it's only configurable in the plumbing, not the porcelain.
    
    Both of these are intentional. I'll happily review PRs that add user-facing customisation.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>

[33mcommit 37fc6aa9679ab45c2c7bd7098426c0b8d5afcda9[m
Author: Kyle Miller <kmill31415@gmail.com>
Date:   Mon Oct 23 22:39:24 2023 +0000

    feat: Make proxy type elaborator add docstrings for aux definitions (#7793)
    
    The linter complains about missing docstrings on definitions generated by the proxy type elaborator and one of the Fintype deriving handlers. Adds useful docstrings to these generated definitions. Removes some nolints.
    
    
    
    
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>

[33mcommit 8fa99514ecce0fe2ffb9b61fee63307390db47e6[m
Author: Floris van Doorn <fpvdoorn@gmail.com>
Date:   Mon Oct 23 22:39:23 2023 +0000

    fix: improve the output of `trace.to_additive_detail` a bit (#7642)
    
    * Also improve troubleshooting instructions

[33mcommit e9da486301080c2f72366a2547c0ba77d0e3cb74[m
Author: Kyle Miller <kmill31415@gmail.com>
Date:   Mon Oct 23 21:31:28 2023 +0000

    feat: add docstring to generated `notation3` pretty printers (#7794)
    
    Removes a number of nolints, and also improves the warning when a pretty printer can't be generated.
    
    
    
    
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>

[33mcommit 56102518894110f4b30d5d61e3711a9f2c677574[m
Author: Patrick Massot <patrickmassot@free.fr>
Date:   Mon Oct 23 20:24:44 2023 +0000

    fix: Put golden ratio notation in a specific namespace. (#7871)
    
    The current situation blocks two very common letters if you `import Mathlib` and `open Real`.

[33mcommit 5a2e66e19981cc4b79c2c15aa7916470b6a4d483[m
Author: Moritz Doll <moritz.doll@googlemail.com>
Date:   Mon Oct 23 18:45:44 2023 +0000

    chore(Analysis): minor golfs using positivity (#7870)

[33mcommit 55c25193b2ea23b390d07b57d21acbc7fd28d789[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Mon Oct 23 17:38:56 2023 +0000

    chore(Algebra/Group/TypeTags): lemmas about pow and smul (#7862)
    
    Half of these lemmas already existed, but were a long way from the definition that define the operators.
    For the ones that did exist, the `#align`s have been kept.
    
    The new lemmas are all `@[simp]` since that matches the corresponding `add`/`mul` lemmas.
    This makes some lemmas about `Int` and `Nat` not simp-normal any more (they disagree on commutativity), but that doesn't seem to matter.

[33mcommit 7db2b0a833667d7712a33533c4053ddc4a519fe6[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Mon Oct 23 16:32:22 2023 +0000

    feat: two small lemmas about ordered lists (#7829)
    
    We prove that in a sorted list, the `head!`¬†is the smallest element, and that if a list is lexicographically smaller than another list, then its `head!`¬†is smaller than or equal to that of the other.

[33mcommit 482fff77182baa076eeef2ed4732c9b4b4f6addb[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Mon Oct 23 14:19:53 2023 +0000

    feat(Logic/Function/OfArity): generalize the return type (#7859)

[33mcommit 1beeb5e5b4d9a6c97a49a925fec94237a489a3fb[m
Author: Junyan Xu <junyanxumath@gmail.com>
Date:   Mon Oct 23 14:19:52 2023 +0000

    refactor: remove redundant condition in HomotopyRel (#7848)
    
    For a homotopy `F` between `f‚ÇÄ` and `f‚ÇÅ` to be a homotopy relative to a set S, it suffices that `F (t, x) = f‚ÇÄ x` for all `x ‚àà S` and `t : I`, from which `F (t, x) = f‚ÇÅ x` can be derived.
    
    Also add `HomotopyRel.compContinuousMap`.

[33mcommit cf041cccff59df221c92d67ca29378960df2fac0[m
Author: negiizhao <egresf@gmail.com>
Date:   Mon Oct 23 14:19:51 2023 +0000

    chore: fix the names of some `Bool` lemmas (#7841)

[33mcommit 94927403e83317046a420ad613fcfc4b74d7f12a[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Mon Oct 23 14:19:50 2023 +0000

    feat(Algebra/CharP/Quotient): iff lemmas (#7748)

[33mcommit 759f2afefac1b85a3d58e08607c095dc90bba758[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Mon Oct 23 14:19:48 2023 +0000

    feat(Data/ZMod/IntUnitsPower): The power operator by `ZMod 2` on `‚Ñ§À£` (#7661)
    
    [Zulip thread](https://leanprover.zulipchat.com/#narrow/stream/116395-maths/topic/Powers.20of.20.60.E2.84.A4.CB.A3.60.20by.20.60ZMod.202.60/near/396291926)

[33mcommit 2b385e2452e288ba9a3e21ad785fe796d43437ce[m
Author: Heather Macbeth <25316162+hrmacbeth@users.noreply.github.com>
Date:   Mon Oct 23 14:19:47 2023 +0000

    feat: locally ringed space structure on a manifold (#7423)
    
    Equip a smooth manifold-with-corners with the structure of a locally ringed space.

[33mcommit e3421e315d179ba1fac24894d8bc65bf7e0be392[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Mon Oct 23 14:19:46 2023 +0000

    feat: commutative star-ordered rings are ordered rings (#7309)
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>

[33mcommit f977d71227812a135206761c2e1e0256ba64c0ba[m
Author: Amelia Livingston <101damnations@github.com>
Date:   Mon Oct 23 14:19:45 2023 +0000

    chore(RepresentationTheory.GroupCohomology): make namespaces lower camel case (#6029)
    
    
    
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>

[33mcommit 9f4d6c3b9e9c06ea22ce3f2fa6dbbb6cbddf819c[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Mon Oct 23 13:22:49 2023 +0000

    chore: reorder variables for `to_additive` (#7856)
    
    `to_additive` heuristics work best when the type to be additivized comes first. We make sure this is the case for later applications.

[33mcommit e4247f293bcf82b48b1184511c99614a2fd4f9a4[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Mon Oct 23 12:31:08 2023 +0000

    feat(Logic/Function/OfArity): curry and uncurry (#7773)
    
    
    
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>

[33mcommit cf2788d1f172b7bd0280a707b7b2b81d49ab77c1[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Mon Oct 23 12:31:06 2023 +0000

    feat: Pointwise set difference, complement (#7383)
    
    Define `Finset.diffs` and `Finset.compls`, the pointwise set difference of two finsets and pointwise complement of a finset.
    
    `diffs` appears in the statement of the Marica-Sch√∂nheim inequality and `compls` in the proof.
    
    Also fix the corresponding statements for `sups` and `infs` to use the new `¬∑` notation.

[33mcommit d245266b5279613ba8e922bb9871f068b6d4abb1[m[33m ([m[1;31morigin/bump_std6[m[33m)[m
Author: Jon Eugster <eugster.jon@gmail.com>
Date:   Mon Oct 23 11:47:15 2023 +0000

    fix(Tactic/Cases): fix context for induction' (#7684)
    
    Adding a test case for `induction'` that failed and fixing it: `induction' a` would accidentally leave `a` and variables depending on `a` in context.

[33mcommit f51f9ac4ade4a8957566359dabd18b5718368bc1[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Oct 23 10:59:38 2023 +0000

    fix(Analysis/../CompareExp): fix natural powers (#7837)
    
    Because of leanprover/lean4#2220,
    `z ^ (n : ‚Ñï)` was interpreted as `z ^ (‚Üën : ‚ÑÇ)`.
    Add a workaround, fix proofs, move part of a proof to a new lemma.

[33mcommit cd9eb31124305aa625dd4ed57601219823932dc9[m
Author: Pol'tta / Miyahara K≈ç <pol_tta@outlook.jp>
Date:   Mon Oct 23 10:25:49 2023 +0000

    refactor: more readable error message when `borelize` fails (#7231)
    
    `borelize X` fails when `‚ÄπTopologicalSpace X‚Ä∫` depends on `i : MeasurableSpace X`, but this message isn't readable:
    ```lean
    failed to create binder due to failure when reverting variable dependencies
    ```
    This is probrem in this case:
    https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/borelize.20gives.20.22failed.20to.20create.20binder.2E.2E.2E.22
    
    This PR make  error messages more readable:
    ```lean
    ‚ÄπTopologicalSpace X‚Ä∫ := (expr depends on i)"
    depends on
    i : MeasurableSpace X
    so `borelize` isn't avaliable
    ```

[33mcommit 72c71a7419825666b30ce4cbea6ef0780a7c8018[m
Author: Bhavik Mehta <bhavikmehta8@gmail.com>
Date:   Mon Oct 23 09:44:58 2023 +0000

    chore(counterexamples): remove incorrect counterexample (#7836)
    
    This was a counterexample I suggested to a certain problem, and it was added to counterexamples/ without proof.
    I later realised it doesn't actually work, so I'm removing it from this file. Damiano's example does still work, and provide a counterexample to the claim.

[33mcommit 37079e5a93bc9486af16d1ec30c4251334e616c9[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Mon Oct 23 09:44:57 2023 +0000

    feat: reduce FLT to odd primes (#7485)

[33mcommit 4a242ae695e19c2120fe585dfffa2c38f9b00c09[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Mon Oct 23 09:15:58 2023 +0000

    feat: properties of the conductor (#7352)
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit 16ab7ddda2c0da7a003ca155412dda76c670db29[m
Author: Newell Jensen <newell.jensen@gmail.com>
Date:   Mon Oct 23 05:48:15 2023 +0000

    fix: Make `rightInverse_inv` use `RightInverse`. (#7792)
    
    fix: Make `rightInverse_inv` use `RightInverse`.
    
    
    
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>

[33mcommit 49b7459e781c2cea928235d669585fb02ff89efe[m
Author: Fr√©d√©ric Dupuis <dupuisf@iro.umontreal.ca>
Date:   Mon Oct 23 02:56:48 2023 +0000

    feat: add gcongr lemmas for `Nat.floor`, `Nat.ceil`, `Int.floor`, `Int.ceil` (#7811)
    
    The lemmas are just restatements of lemmas of the form `Monotone Nat.floor` etc, but these cannot be tagged directly with the gcongr attribute.
    
    
    
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>

[33mcommit 801dc0dea88ae5071959485b6e84e73cb69ea6b4[m
Author: Scott Morrison <scott@tqft.net>
Date:   Mon Oct 23 00:35:17 2023 +0000

    chore: update dependencies (#7832)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 5c9a2858ec8178550107ce072e8d1119429752df[m
Author: Scott Morrison <scott@tqft.net>
Date:   Sun Oct 22 12:47:47 2023 +0000

    chore: add docstring on says syntax (#7818)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>
    Co-authored-by: Rob Lewis <Rob.y.lewis@gmail.com>

[33mcommit 3d8d336f32c45aff67b1da5cc3f5e83b00a93265[m
Author: Sebastian Zimmer <sebastian.zim@googlemail.com>
Date:   Sun Oct 22 11:10:56 2023 +0000

    Support coersions from Nat to ordered semirings in linarith (#7439)
    
    feat: Assume natural numbers are nonnegative when cast to any ordered semiring inside `linarith`
    
    Previously this would only work when casting to an integer.
    
    
    
    Co-authored-by: Rob Lewis <Rob.y.lewis@gmail.com>

[33mcommit 004800e44b832e4ca875eab23bd21f31a693687a[m
Author: Joachim Breitner <mail@joachim-breitner.de>
Date:   Sun Oct 22 10:07:23 2023 +0000

    refactor: List.All‚ÇÇ to List.Forall (#7797)
    
    This renames `List.All‚ÇÇ` to `List.Forall`, because the `‚ÇÇ` is highly
    confusing when it usually means ‚Äútwo lists‚Äù, and we had users on Zulip
    not find `List.Forall` because of that
    (<https://leanprover.zulipchat.com/#narrow/stream/217875-Is-there-code-for-X.3F/topic/Is.20there.20List.2EForall.E2.82.82.2C.20but.20for.20one.20list.3F.20.28In.20library.20Std.29/near/397551365>)
    
    
    
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>

[33mcommit 85acbc3d9133e92d0fb7c50b1f5f4802234c395f[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Sun Oct 22 08:08:28 2023 +0000

    chore: bump std and aesop (#7746)
    
    This includes leanprover/std4#301 which requires slight tweaks to the `List.sublists` API.
    
    One other proof also breaks, presumably due to other Std4 commits.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>

[33mcommit 3ce43c18f614b76e161f911b75a3e1ef641620ff[m
Author: Sebastian Zimmer <sebastian.zim@googlemail.com>
Date:   Sat Oct 21 19:10:27 2023 +0000

    feat: Handle powers and multiplicative inverses in cancel_denoms (#7819)
    
    fixes #7732
    
    
    
    Co-authored-by: Rob Lewis <Rob.y.lewis@gmail.com>

[33mcommit 6bdaf22f0e751d488560c76beb4d65af4dfd766a[m
Author: Kyle Miller <kmill31415@gmail.com>
Date:   Sat Oct 21 16:58:26 2023 +0000

    fix: context handling for `use` tactic (#7827)
    
    Fixes error reported by Patrick Massot [on Zulip](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/use.20bug/near/397784284).

[33mcommit 30c94754f9063d6bc090079e2527087f224f5d6d[m
Author: Utensil <utensilcandel@gmail.com>
Date:   Sat Oct 21 12:59:20 2023 +0000

    chore(Algebra/FreeAlgebra): fix ported comments (#7824)
    
    Per discussion on [zulip](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/FreeAlgebra.2ERel).

[33mcommit 512169bb521ab7e042031fb98d313cc8f133d6c5[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Sat Oct 21 10:50:37 2023 +0000

    feat: Removing elements from a lower set (#7374)
    
    If a set `t` is an upper set inside a lower set `s`, then `s \ t` is a lower set.

[33mcommit 6f830e699387d6cea284514ea16a64f0e075212b[m
Author: Scott Morrison <scott@tqft.net>
Date:   Sat Oct 21 09:35:34 2023 +0000

    chore: bump toolchain to v4.2.0-rc4 (#7813)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit ce6094fcaaa23b3278522f75b3e4a539df0704b5[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Sat Oct 21 09:35:33 2023 +0000

    feat(CategoryTheory): a product of distinguished triangles is distinguished (#7641)

[33mcommit 21c7184c628e8df2ffcc91b0591a273018f5cf92[m
Author: samvang <59202064+samvang@users.noreply.github.com>
Date:   Sat Oct 21 09:35:32 2023 +0000

    feat: Adjunction between topological spaces and locales (#4593)
    
    We define the contravariant functors between the categories of Frames and Topological Spaces and prove that they form an adjunction.
    Work started at the BIRS workshop "Formalization of Cohomology Theories", Banff, May 2023.
    
    Co-authored-by: Anne Baanen <vierkantor@vierkantor.com>
    Co-authored-by: leopoldmayer <leomayer@uw.edu>
    Co-authored-by: Brendan Seamas Murphy <shamrockfrost@gmail.com>
    
    
    
    Co-authored-by: leopoldmayer <leomayer@uw.edu>
    Co-authored-by: Brendan Murphy <shamrockfrost@gmail.com>
    Co-authored-by: Vierkantor <vierkantor@vierkantor.com>
    Co-authored-by: Ya√´l Dillies <yael.dillies@gmail.com>

[33mcommit 1623012a236d1374d8c08d480463a00f6f8c672a[m
Author: Scott Morrison <scott@tqft.net>
Date:   Sat Oct 21 07:39:00 2023 +0000

    chore: bump Std dependency (shiftRight lemmas) (#7771)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit ed50feefe25122051edafa5a5acd9c4735e20d96[m
Author: Junyan Xu <junyanxumath@gmail.com>
Date:   Sat Oct 21 06:49:10 2023 +0000

    feat: miscellaneous lemmas about local homeomorphisms (#7655)
    
    
    
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>

[33mcommit dac8099ac0e5368dd01e32b704b6e2f0d13d2790[m
Author: Junyan Xu <junyanxumath@gmail.com>
Date:   Sat Oct 21 06:49:09 2023 +0000

    feat: universe generalizations in UniqueGluing and Forget (#7654)
    
    + Add a criterion `isLimit_iff` for a cone to be a limit in Limits/Types.lean.
    
    + Use the criterion to show the equivalence between the UniqueGluing and PairwiseIntersection sheaf conditions without going through EqualizerProducts, thereby generalize the universes.
    
    + Remove theorems/def that are now unnecessary. (cc @justus-springer)
    
    + Generalize `isSheaf_iff_isSheaf_forget` for sheaves on sites using `isSheaf_iff_isLimit`; use it to prove and generalize the result on topological spaces, removing a large chunk of code.
    
    
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>

[33mcommit 490560e167430bd38a227e3642f6bf4db29c285a[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Sat Oct 21 06:11:50 2023 +0000

    feat: various criteria for the exactness of short complexes (#7806)

[33mcommit 0ca6e0291c787f67bf360c2201f292f793fb5357[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Fri Oct 20 20:51:30 2023 +0000

    feat: preimage of an analytic set is an analytic set (#7805)
    
    Also golf a proof.

[33mcommit 214e72fdba68b06220263598de8ef02f2c84e689[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Fri Oct 20 20:51:29 2023 +0000

    feat: add a `SetLike` default rule set for `aesop` (#7111)
    
    This creates a new `aesop` rule set called `SetLike` to house lemmas about membership in subobjects.
    
    Lemmas like `pow_mem` should be included in the rule set:
    ```lean
    @[to_additive (attr := aesop safe apply (rule_sets [SetLike]))]
    theorem pow_mem {M A} [Monoid M] [SetLike A M] [SubmonoidClass A M] {S : A} {x : M}
    (hx : x ‚àà S) : ‚àÄ n : ‚Ñï, x ^ n ‚àà S
    ```
    
    Lemmas about closures, like `AddSubmonoid.closure` should be included in the rule set, but they should be assigned a penalty (here we choose `20` throughout) so that they are not attempted before the general purpose ones like `pow_mem`.
    ```lean
    @[to_additive (attr := simp, aesop safe 20 apply (rule_sets [SetLike]))
      "The `AddSubmonoid` generated by a set includes the set."]
    theorem subset_closure : s ‚äÜ closure s := fun _ hx => mem_closure.2 fun _ hS => hS hx
    ```
    
    In order for `aesop` to make effective use of `AddSubmonoid.closure` it needs the following new lemma.
    ```lean
    @[aesop 5% apply (rule_sets [SetLike])]
    lemma mem_of_subset {s : Set B} (hp : s ‚äÜ p) {x : B} (hx : x ‚àà s) : x ‚àà p := hp hx
    ```
    Note: this lemma is marked as very unsafe (`5%`) because it will apply *whenever* the goal is of the form `x ‚àà p` where `p` is any term of a `SetLike` instance; and moreover, it will create `s` as a metavariable, which is in general a terrible idea, but necessary for the reason mentioned above.

[33mcommit bd6067cebb81fc90f0eb08b33bc42283490ff950[m
Author: cyl <2158864003@qq.com>
Date:   Fri Oct 20 20:51:28 2023 +0000

    feat: Uniformly and strongly convex functions (#7040)
    
    We define uniform convex functions with modulus `œÜ` and `m`-strongly convex functions on a normed space.
    
    Co-authored-by: Ziyu Wang <tropicalfish910@gmail.com>
    Co-authored-by: Ya√´l Dillies <yael.dillies@gmail.com>
    
    
    
    Co-authored-by: cyl <108876608+chenyili0818@users.noreply.github.com>
    Co-authored-by: Ya√´l Dillies <yael.dillies@gmail.com>

[33mcommit 142eedb5b4f6bece4a3dbf3297fbb9740a99f14e[m
Author: Joachim Breitner <mail@joachim-breitner.de>
Date:   Fri Oct 20 19:41:35 2023 +0000

    chore: Remove DiscrTree.getElements, use std4‚Äôs `.values` (#7800)
    
    it duplicates a definition found in `std4`.
    
    In fact, it duplicates two definitions found in `std4`, so use
    `.values` consistently, so that `.elements` can be dropped from `std4`
    (in https://github.com/leanprover/std4/pull/285).

[33mcommit 1020213cc223a941d4418f43c925b0976a66449c[m
Author: Scott Morrison <scott@tqft.net>
Date:   Fri Oct 20 18:15:22 2023 +0000

    chore: refactor de-duplication in rw? (#7799)
    
    Slight refactor of how de-duplication works in `rw?`.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit d6a066329f4a84bdd5d5322677a0c9748e5cea1a[m
Author: Alex J Best <alex.j.best@gmail.com>
Date:   Fri Oct 20 17:53:21 2023 +0000

    chore: ignore PRs from master (#7807)
    
    The popular (and very useful for mathlib reviewing) extension "github pull requests and issues" helpfully suggests people  are reviewing #7215 when they check out master, this is sub-optimal so we add a setting to ignore this branch.
    
    See https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/PR.20associated.20with.20default.20branch/near/397749801

[33mcommit b8e9a283b47b6bf9126508810ab00dd7b36b2c83[m
Author: Joachim Breitner <mail@joachim-breitner.de>
Date:   Fri Oct 20 16:10:14 2023 +0000

    fix(says tactic): Don‚Äôt stumble over `Try this:\n` instead of `Try this:‚ê£` (#7803)
    
    as discussed in
    https://leanprover.zulipchat.com/#narrow/stream/113489-new-members/topic/.E2.9C.94.20Lake.20build.20succeeds.20on.20local.2C.20but.20fails.20on.20GitHub.20Action/near/397679705

[33mcommit 1b4e26ac85cc04f7b7e9cbb74c18f24c0a48f26b[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Fri Oct 20 15:15:33 2023 +0000

     chore(Topology): minimize some imports (#7775)
    
    For faster build times and clearer dependencies. No attempt at being exhaustive.
    
    The new import in `Clopen.lean` had been transitively imported before.

[33mcommit 33e0d3e665fb66f3a41f40e5033e75f8750b9389[m
Author: Andrew Yang <the.erd.one@gmail.com>
Date:   Fri Oct 20 14:35:26 2023 +0000

    feat(Topology/Sheaves/Functors): Specialize pullback-pushforward adjunction to sheaves over topological spaces. (#7722)
    
    Port of https://github.com/leanprover-community/mathlib/pull/17561
    
    
    
    Co-authored-by: Andrew Yang <36414270+erdOne@users.noreply.github.com>

[33mcommit 3b7adb75200f89e4eb8122281fcc75e0603786bb[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Fri Oct 20 14:35:25 2023 +0000

    feat: a homotopy of maps of cochain complexes identifies to (-1)-cochains in the complex of homomorphisms (#7656)
    
    This PR introduces an equivalence between homotopy of maps of cochains complexes and `(-1)`-cochains satisfying suitable conditions. It also introduces the action of an additive functor on cochains.
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit 54f4b74f929315c25a893dd1f4ed89ccf1e4f19e[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Fri Oct 20 14:35:24 2023 +0000

    feat: pretriangulated categories have finite biproducts (#7626)

[33mcommit 585294d719ab24aca87c89f01d5e8f6954717130[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Fri Oct 20 14:35:23 2023 +0000

    feat(CategoryTheory): covariant functoriality of graded objects on the index set (#7425)

[33mcommit 1a371eb01e27d3df8ca5fd5c0b13c617068e1041[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Fri Oct 20 14:35:21 2023 +0000

    feat: exactness for short complexes coincides with CategoryTheory.Exact (#7280)

[33mcommit 0227fee3bc3498adcd28fdfb97462f48fc62e6ba[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Fri Oct 20 14:35:20 2023 +0000

    feat: description of sheaves for regular sieves (#6919)
    
    We prove that presheaves satisfying an equaliser condition on preregular categories are sheaves for `regular` presieves.
    
    - [x] depends on: #6876
    
    Co-authored-by: Riccardo Brasca @riccardobrasca [riccardo.brasca@gmail.com](mailto:riccardo.brasca@gmail.com)
    Co-authored-by: Filippo A E Nuccio @faenuccio [filippo.nuccio@univ-st-etienne.fr](mailto:filippo.nuccio@univ-st-etienne.fr)

[33mcommit 93521b73acd8b5935dbebbb03a1a70072d7dd9fd[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Fri Oct 20 14:35:19 2023 +0000

    feat: condensed sets are equivalent to sheaves on `Stonean` and `Profinite` (#6810)
    
    Co-authored-by: Adam Topaz @adamtopaz
    Co-authored-by: Nick Kuhn @nick-kuhn
    
    - [x] depends on: #6809

[33mcommit 6f69c1acda33b5915c0c9a3366b11a957920d0df[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Fri Oct 20 13:51:26 2023 +0000

    feat: the pretriangulated structure on the opposite category (#7336)

[33mcommit 53ae52b4b02665479ad5297e05878c07e129e969[m
Author: samvang <59202064+samvang@users.noreply.github.com>
Date:   Fri Oct 20 09:11:20 2023 +0000

    fix(Order/Hom): coercion lemmas for lattice and complete lattice (#7796)
    
    These are a number of small fixes of coercions of lattices and complete lattices, made by Ya√´l Dillies in the context of a larger refactor of the branch `frametopadjunction`.
    
    Co-authored by: Ya√´l Dillies

[33mcommit afc570346f75ad8aae9921c491333a8e4d26f986[m
Author: Rob Lewis <Rob.y.lewis@gmail.com>
Date:   Fri Oct 20 06:54:16 2023 +0000

    feat: add exponentiation option back to `linear_combination` (#7789)
    
    [mathlib3#15428](https://github.com/leanprover-community/mathlib/pull/15428) added an exponent option to `linear_combination`. The idea is that `linear_combination (exp := 2) ...` will take a linear combination of hypotheses adding up to the *square* of the goal. This is only mildly useful on its own, but it's a very useful certificate syntax for [mathlib3#15425](https://github.com/leanprover-community/mathlib/pull/15425).
    
    
    
    Co-authored-by: Rob Lewis <rob.y.lewis@gmail.com>

[33mcommit 08a8af0bc86b066933f76221f69539978a3c9893[m
Author: Kyle Miller <kmill31415@gmail.com>
Date:   Fri Oct 20 05:41:11 2023 +0000

    fix: `eta_reduce` tactic should recursively reduce (#7785)
    
    Reported by eric-wieser in #7773

[33mcommit aa0ff04a0ff1869077bed2ae8337e3f6497394cc[m
Author: Pol'tta / Miyahara K≈ç <pol_tta@outlook.jp>
Date:   Fri Oct 20 05:04:14 2023 +0000

    style: rename `Stream'.nth` to `Stream'.get` (#7514)
    
    Many of `nth` (e.g. `list.nth`, `stream.seq.nth`) are renamed to `get?` in Mathlib 4, but `Stream'.nth` had been remained as it.

[33mcommit afd3acaf580f6bf9c735b6043bc99ae80bc84199[m
Author: Scott Morrison <scott@tqft.net>
Date:   Thu Oct 19 22:44:39 2023 +0000

    feat: rw? can discharge side conditions using local hypotheses (#7770)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 0a44be3169f442f2ffa8f3448b14be5c1aa22101[m
Author: Wen Yang <yang-wen@139.com>
Date:   Thu Oct 19 22:16:10 2023 +0000

    feat(LinearAlgebra/Matrix): transvection matrix is block triangular (#7765)
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 9eb25ab7e92a2a96ada352b66698dee56a26cbcb[m
Author: Oliver Nash <github@olivernash.org>
Date:   Thu Oct 19 21:13:11 2023 +0000

    feat: miscellaneous Lie algebra lemmas (#7782)

[33mcommit 267b8cb1526b1662c0afebba9584c898e784c235[m
Author: Bolton Bailey <bolton.bailey@gmail.com>
Date:   Thu Oct 19 20:25:27 2023 +0000

    feat: natDegree_sub_C (#7776)
    
    Adds `degree_sub_C, natDegree_sub_C`, analogous to `..._add_C`.
    
    Also relocates `C_neg` and `C_sub` to `Basic.lean` (where `C_add` is) so that the new lemmas can be in the same file as their `add` counterparts.

[33mcommit 50e3588429265ffc3fbd960f62e7d85e9141a862[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Thu Oct 19 20:25:26 2023 +0000

    chore(Logic/Function/OfArity): rename `Arity` to `Function.OfArity` (#7772)
    
    Also puts it in a new file.

[33mcommit 924eae116b6c7200444dcc319edbf51b364c0bc5[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Thu Oct 19 20:25:25 2023 +0000

    chore: protect `Int.xor` (#7757)
    
    This cleans up some local notation needed to work around the clash with the `Bool` `xor` in the root namespace.

[33mcommit 97c0e220caecbae0c45dac726b9312597d5c9128[m
Author: Joachim Breitner <mail@joachim-breitner.de>
Date:   Thu Oct 19 19:17:45 2023 +0000

    docs: capitalize `List.All` in it's own docstring (#7784)

[33mcommit 20a9a01a52a20e286d92a1d4fe2580d59bfba5f8[m
Author: Matthew Robert Ballard <matt@mrb.email>
Date:   Thu Oct 19 18:23:45 2023 +0000

    chore (ValuationSubring): change from set to subtype  (#7780)
    
    Currently the file uses `{S | A ‚â§ S}` for `primeSpectrumEquiv` and other declarations. This changes those to `{S // A ‚â§ S}` which makes the `simpNF` happier about the generated `simp` lemmas.

[33mcommit 6fc8e6ec44a01eed01778e1f6cfe13cab42118b2[m
Author: Bolton Bailey <bolton.bailey@gmail.com>
Date:   Thu Oct 19 17:07:06 2023 +0000

    chore: remove nonterminal simp (#7580)
    
    Removes nonterminal simps on lines looking like `simp [...]`

[33mcommit 6549ac3bb348f17af4c1bd180a468be0a51a9cff[m
Author: Peiran Wu <15968905+wupr@users.noreply.github.com>
Date:   Thu Oct 19 16:29:14 2023 +0000

    feat(Analysis/InnerProductSpace/Calculus): Add theorem that abs on ‚Ñù is not differentiable at 0 (#7362)
    
    Adds a theorem which states that the absolute value function on ‚Ñù is not differentiable at zero.

[33mcommit fca1e12a7999b05f0f549b6009be64b9f41568a1[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Thu Oct 19 14:38:29 2023 +0000

    feat(Algebra/DirectSum/Decomposition): extensionality lemma for maps from a decomposition (#7662)
    
    Two linear maps from a module with a decomposition agree if they agree on every piece.
    
    Also replaces some bad `simps` lemmas with manual ones.

[33mcommit 3203ad2feb7a50a72e936c436e56036df48396c2[m
Author: Scott Morrison <scott@tqft.net>
Date:   Thu Oct 19 13:51:19 2023 +0000

    chore: improve documentation of lake exe graph (#7738)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 4b5f7e5b67bcb0b432429647fc059ac1c91656d6[m
Author: Oliver Nash <github@olivernash.org>
Date:   Thu Oct 19 13:16:50 2023 +0000

    fix: revert 3c0fc273d6875eef3177eb9d9b4876c0606638b4 (#7774)
    
    This reverts PR #7205 which seems to be causing trouble (though we do not understand why).
    
    See:
    https://leanprover.zulipchat.com/#narrow/stream/144837-PR-reviews/topic/.237341.20updateFinset/near/397477372 https://leanprover.zulipchat.com/#narrow/stream/144837-PR-reviews/topic/.237205.20pp.2Ebeta/near/397342667
    
    An example error is:
    ```
    libc++abi: terminating due to uncaught exception of type lean::exception: cannot evaluate `[init]` declaration 'Lean.pp.beta' in the same module
    ```

[33mcommit ab701cadeca3dca4332cc5819405f5a3fba424c2[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Thu Oct 19 13:16:49 2023 +0000

    feat(LinearAlgebra/QuadraticForm/Prod): `inl`, `inr`, and `single` are isometries (#7723)

[33mcommit cf3ecdf945b0fdb73260f766cff50a320f4af4be[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Thu Oct 19 13:16:47 2023 +0000

    feat(LinearAlgebra/QuadraticForm/Prod): lemmas about `polar`,`polarBilin`, and `associated` (#7664)
    
    This also slightly adjusts the file sectioning in order to introduce the temporary `Ring` assumption.

[33mcommit d3c0421bff08942823ddc2f1b418281a755a695b[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Thu Oct 19 13:16:46 2023 +0000

    feat(Algebra/Module/GradedModule): generalize `+` to `+·µ•` in indicies (#7573)
    
    The action is now of signature `A i ‚Üí M j ‚Üí M (i +·µ• j)` instead of `A i ‚Üí M j ‚Üí M (i + j)`.
    These are defeq when `i` and `j` are of the same type.
    
    This allow the grading type of the ring and module to be different, as long as one acts additively on the other, as requested on Zulip:
    
    @AntoineChambert-Loir [said](https://leanprover.zulipchat.com/#narrow/stream/116395-maths/topic/submodules.20of.20a.20graded.20module/near/395408542):
    > In our work with Maria Ines,  we had the impression that some basic work on graded stuff is still missing. For example, [...] graduations which are not indexed by the same thing on the ring and on the module (some action of one on the other would be required, of course )
    
    @kbuzzard [said](https://leanprover.zulipchat.com/#narrow/stream/116395-maths/topic/submodules.20of.20a.20graded.20module/near/395411889):
    > In alg geom it's pretty common to have the rings indexed by $‚Ñï$ and the modules by $‚Ñ§$.
    
    Mathlib is rather short on instances for additive actions, but with suitable instances this will allow the ring to be ‚Ñï-graded and the module to be ‚Ñ§-graded.

[33mcommit 7099860341a954c07890183219306995d1332e5a[m
Author: Andrew Yang <the.erd.one@gmail.com>
Date:   Thu Oct 19 12:40:28 2023 +0000

    feat(Mathlib/AlgebraicGeometry): Move material on restriction to new file (#7749)
    
    Also provides new notations and fixed slow proofs
    
    
    
    Co-authored-by: Andrew Yang <36414270+erdOne@users.noreply.github.com>

[33mcommit 58a6689c861b93ed14f75f9233a85fae4e44fe02[m
Author: Floris van Doorn <fpvdoorn@gmail.com>
Date:   Thu Oct 19 11:58:17 2023 +0000

    feat: some measure preserving equivalences on pi-types (#7751)
    
    * Also fix the statement of some lemmas of an earlier PR.
    * From the Sobolev project
    * There are more that depend on #7341
    
    Co-authored-by: Heather Macbeth 25316162+hrmacbeth@users.noreply.github.com

[33mcommit 36114b7a0279188952d99bc13f32eddedae2643c[m
Author: Floris van Doorn <fpvdoorn@gmail.com>
Date:   Thu Oct 19 11:09:13 2023 +0000

    feat: some lemmas about nnnorm and integration / L1-norm (#7753)
    
    * From the Sobolev project
    
    Co-authored-by: Heather Macbeth 25316162+hrmacbeth@users.noreply.github.com

[33mcommit c1b8ef266eb8671253f0840f218d4b183d966da1[m
Author: Scott Morrison <scott@tqft.net>
Date:   Thu Oct 19 09:56:51 2023 +0000

    chore: linarith rolls back the meta state if it fails (#7769)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit b9ac893f84ed966b67704a38daae557546fc7b4d[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Thu Oct 19 09:56:50 2023 +0000

    refactor: use bitwise notation for `Nat.land`, `Nat.lor`, and `Nat.xor` (#7759)
    
    This didn't exist in Lean 3.

[33mcommit 311c20beae2fb4e14ca1f778a7e630542216d234[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Thu Oct 19 09:56:49 2023 +0000

    chore(Data/Num/Lemmas): fix lemma names (#7758)
    
    
    
    Co-authored-by: Chris Hughes <chrishughes24@gmail.com>

[33mcommit c1696eec5c9167cf7ac32a0df7f80d044c1f8456[m
Author: Pol'tta / Miyahara K≈ç <pol_tta@outlook.jp>
Date:   Thu Oct 19 09:56:46 2023 +0000

    style: `CoeFun` for `PFunctor.Obj` & `MvPFunctor.Obj` (#7526)

[33mcommit ae7ec61a7b0e120ac9bdbeda6f0047c8059f754f[m
Author: Scott Morrison <scott@tqft.net>
Date:   Thu Oct 19 09:00:56 2023 +0000

    chore: removing unneeded maxHeartbeats (#7761)
    
    Due to recent changes in core we can reduce or remove many `set_option maxHeartbeats` statements.
    
    I have tried to be careful to not leave anything too close to the line, so don't be surprised if some of these can still be reduced further.
    
    This reduces us from 96 `maxHeartbeats` statements to `44`. (There are 10 false positives in meta or testing code.)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit d478563b320941d876a7fe036ae848e40ff4d10b[m
Author: Scott Morrison <scott@tqft.net>
Date:   Thu Oct 19 08:30:18 2023 +0000

    chore: bump dependencies (#7767)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 23a69c77985689d9930944c79bbccecf66cffea0[m
Author: Scott Morrison <scott@tqft.net>
Date:   Thu Oct 19 05:10:43 2023 +0000

    chore: update dependency URLs (#7764)
    
    All of Mathlib's dependencies now live under `leanprover` or `leanprover-community`! üéâ
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 69c9fa51b098afaf6b6d3e6e396e0b66987675d3[m
Author: Thomas Browning <tb65536@uw.edu>
Date:   Thu Oct 19 03:49:19 2023 +0000

    feat(Order/CompleteLatticeIntervals): Complete lattice instance on `Set.Icc` (#7740)
    
    This PR adds a complete lattice instance on `Set.Icc`.
    
    
    
    Co-authored-by: Thomas Browning <tb65536@users.noreply.github.com>

[33mcommit a3e0e089000ff3d55a05e33d9e6890e80c666dea[m
Author: Scott Morrison <scott@tqft.net>
Date:   Thu Oct 19 02:29:31 2023 +0000

    chore: cleanup of Data.Nat.Bitwise (#7763)
    
    We would like to move much of the content of this file up to Std, as projects working on SMT automation need them.
    
    This is a preliminary cleanup to reduce imports in preparation for upstreaming.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 51c7969308516887591959ccbfbdc2c71d086de1[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Wed Oct 18 21:09:58 2023 +0000

    feat: split Topology/Connected.lean (#7646)
    
    In the last step, I have removed *redundant* imports: those which are implied by the other imports.
    I can revert those changes if desired/if this seems too brittle.

[33mcommit 813c10aba9d93120cd9c1cf46954fc85b9f915d5[m
Author: Alex Keizer <tobias@grosser.es>
Date:   Wed Oct 18 16:31:47 2023 +0000

    chore: remove `Nat.bitwise'` (#7451)
    
    Building upon the proof that `Nat.bitwise` and `Nat.bitwise'` are equal (from #7410), this PR completely removes `bitwise'` and changes all uses to `bitwise` instead.
    
    In particular, `land'/lor'/lxor'` are replaced with the `bitwise`-based equivalent operations in core, which have overriden optimized implementations in the compiler.
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>
    Co-authored-by: Alex Keizer <alex@keizer.dev>
    Co-authored-by: Chris Hughes <chrishughes24@gmail.com>

[33mcommit 7891de94e3557cd04aebddf2315592c1034a2b22[m
Author: Tobias Grosser <tobias@grosser.es>
Date:   Wed Oct 18 13:39:57 2023 +0000

    chore: update std (#7744)
    
    This commit includes the new BitVec library in std.
    
    No further changes are needed on the mathlib side.

[33mcommit e05d9aec5693639a96b65bd82615c34f2e0096f8[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Wed Oct 18 11:36:11 2023 +0000

    chore(Tactic/Polyrith): show stderr if something goes wrong (#7737)
    
    In particular, on gitpod what goes wrong is that `requests` is not installed, which this also fixes.

[33mcommit ea1c5f87996ffc30087f252c24f7057b63447b5a[m
Author: David Loeffler <d.loeffler.01@cantab.net>
Date:   Wed Oct 18 11:36:10 2023 +0000

    feat(Analysis/Analytic): some more API for analytic functions (#7552)
    
    This PR adds some basic results about analytic functions: products of analytic functions are analytic, and the inverse map on a normed field is analytic away from 0.

[33mcommit 68b12e1119866b71e2ce0a8f7603076cbf5dc6f9[m
Author: Pol'tta / Miyahara K≈ç <pol_tta@outlook.jp>
Date:   Wed Oct 18 09:57:57 2023 +0000

    style: `pp_with_univ` for `TypeVec` & `PFunctor` & `MvPFunctor` (#7742)

[33mcommit 5cff8ebee7885caa78612fde3fa90129ed4b02f1[m
Author: Scott Morrison <scott@tqft.net>
Date:   Wed Oct 18 09:57:56 2023 +0000

    chore: bump Std dependency (#7724)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 3c0fc273d6875eef3177eb9d9b4876c0606638b4[m
Author: Kyle Miller <kmill31415@gmail.com>
Date:   Wed Oct 18 09:57:53 2023 +0000

    feat: pp.beta (#7205)
    
    I do not recommend using this feature, but since Lean 3 had it, and since it's possible for us to implement it as mathlib code, here it is.
    
    This is future-proof against core implementing it in the sense that [if it gets implemented](https://github.com/leanprover/lean4/issues/715) there will likely be a name collision, and then these two modules can be deleted.
    
    
    
    
    Co-authored-by: Oliver Nash <github@olivernash.org>

[33mcommit d2e0ba3e8b540d4da16c636852e930f36921b9b9[m
Author: Antoine Chambert-Loir <antoine.chambert-loir@u-paris.fr>
Date:   Wed Oct 18 08:53:57 2023 +0000

    feat (LinearAlgebra/TensorProduct/RightExactness): right exactness of tensor product for algebras (#7533)
    
    Prove right exactness of tensor product for algebras.
    
    * `Algebra.TensorProduct.ker_map` computes the kernel of `Algebra.TensorProduct.map f g`
    
    * `Algebra.TensorProduct.lTensor_ker` and `Algebra.TensorProduct.rTensor_ker` compute the kernels
      of `Algebra.TensorProduct.map f id` and `Algebra.TensorProduct.map id g`
    
    
    
    Co-authored-by: Antoine Chambert-Loir <antoine.chambert-loir@math.univ-paris-diderot.fr>

[33mcommit 54436a74b9af841677521ec75fa2e80a552e9843[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Wed Oct 18 08:18:16 2023 +0000

    chore(CategoryTheory.Triangulated): use more camelCase for distTriang (#7643)
    
    This PR renames lemmas like `rot_of_dist_triang` as `rot_of_distTriang`.

[33mcommit e21dcf909777e1944f3797eb7e66867dcd5d41ec[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Wed Oct 18 08:18:15 2023 +0000

    chore: make `SimplexCategory.skeletalFunctor` a functor to NonemptyFinLinOrdCat.{0} (#7272)
    
    `SimplexCategory` used to have a universe parameter, but for already some time, it is no longer the case. However, the functor `SimplexCategory.skeletalFunctor` was still a functor from the simplex category to `NonemptyFinLinOrdCat.{v}`. This PR changes this to `NonemptyFinLinOrdCat.{0}`. The main consequence of this is that if `C` is a category, the `n`-simplices of the simplicial set `nerve C` (see `AlgebraicTopology.Nerve`) are now definitionally equal to `Fin (n+1) ‚•§ C`.

[33mcommit 4a7ff0e3b1de848e130237e338a689f252766b30[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Wed Oct 18 07:22:01 2023 +0000

    refactor(Data/Polynomial): remove `open Classical` (#7706)
    
    This doesn't change any polynomial operations, but:
    * Makes some `Decidable` values computable (otherwise, they're pointless!)
    * Add a few missing arguments to lemmas here and there to make them more general
    
    This is exhaustive, within the directories it touches.
    
    Once again, the use of `letI := Classical.decEq R` instead of `classical` here is because of the weird style of proofs in these files, where `if` is preferred to `by_cases`.

[33mcommit 29fc60fc4b560bab33577a74af62a32c5e415c4e[m
Author: Floris van Doorn <fpvdoorn@gmail.com>
Date:   Wed Oct 18 06:36:48 2023 +0000

    feat: Prove Measure.add_right_inj for sigma-finite measures (#7727)
    
    * Generalizes a lemma from #7713.

[33mcommit a7c12f10a2d8a0e02bf51a57939559a0f495f099[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Wed Oct 18 06:03:33 2023 +0000

    fix(Algebra/Order/Ring/Defs): typo in nonneg (#7736)

[33mcommit e5d58e8575d25956bd93387c08127b02c86606f3[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Wed Oct 18 01:20:20 2023 +0000

    fix(Tactic/Polyrith): fix crash when hypotheses are constant polynomials (#7586)
    
    This forward-ports leanprover-community/mathlib#17142
    
    The tests are commented out because the test framework for polyrith was never ported. You can check out the branch and run polyrith manually to see that everything is ok.

[33mcommit bf083fc28a4dd9c6ca1b54fbadbbb5444ad3ae46[m
Author: Joachim Breitner <mail@joachim-breitner.de>
Date:   Tue Oct 17 22:13:41 2023 +0000

    CI: print lean and lake versions (#7726)
    
    this makes it easier to check if really the lean version was used that
    was expected.
    
    Maybe elan could be more chatty
    (https://github.com/leanprover/elan/issues/111), but it doesn‚Äôt hurt to
    have this here.

[33mcommit 75dfd25e59c43a24c6d504115f403240010c7f3c[m
Author: Scott Morrison <scott@tqft.net>
Date:   Tue Oct 17 20:58:44 2023 +0000

    chore: rename Finset.powersetLen to powersetCard (#7667)
    
    I don't understand why this was ever named `powersetLen`, there isn't even the notion of the length of a Finset/Multiset.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit b940be208b0720c3acc6f89b25360dd812054166[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Tue Oct 17 17:20:14 2023 +0000

    chore(Algebra/BigOperators/Finsupp): sums of `Finsupp.single` (#7716)
    
    This adds a new lemma to match the existing `Pi` lemma, and renames the existing lemmas to avoid inconsistent naming.
    
    The `equivFunOnFinite` lemma is motivated by #6657.

[33mcommit c5594244d6b6e5e0c0a479a4501c34b0ea194fce[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Tue Oct 17 13:38:07 2023 +0000

    chore: missing spaces after `rcases`, `convert` and `congrm` (#7725)
    
    Replace `rcases(` with `rcases (`. Same thing for `convert(` and `congrm(`. No other change.

[33mcommit 751fcc9fb6bfba132ded0ef571d1901cfb844fe6[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Oct 17 12:30:07 2023 +0000

    Add `MeasureTheory.IsLocallyFiniteMeasure.withDensity_coe` (#7692)
    
    .. and `MeasureTheory.IsLocallyFiniteMeasure.withDensity_ofReal`

[33mcommit 750120926720faadde449cc355833afa50c8b30e[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Tue Oct 17 11:24:09 2023 +0000

    chore: cleanup typo in `filter_upwards` (#7719)
    
    mathport was forgetting a space in `filter_upwards [...]with` instead of `filter_upwards [...] with`.

[33mcommit 3759c6d38fc230cb31f68f604329c928ba4ea771[m
Author: R√©my Degenne <Remydegenne@gmail.com>
Date:   Tue Oct 17 10:36:17 2023 +0000

    feat: simple lemmas about withDensity (#7714)
    
    
    
    Co-authored-by: R√©my Degenne <remydegenne@gmail.com>

[33mcommit 46b5f1b8896c6ceb82156563b0702a3e8ff9abf7[m
Author: liuyf0188 <liuyf0188@gmail.com>
Date:   Tue Oct 17 10:36:16 2023 +0000

    feat(LinearAlgebra/Matrix/SchurComplement): adding matrix determinant lemma (#7086)
    
    
    
    Co-authored-by: liuyf0188 <118104061+liuyf0188@users.noreply.github.com>
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit fe33c1a10c3cd3fe385fbf905ec8c197e44b07be[m
Author: Scott Morrison <scott@tqft.net>
Date:   Tue Oct 17 09:07:15 2023 +0000

    chore: remove some unnecessary 'open private' (#7720)
    
    While having a look at how bad the use of `open private` has become, found two that are trivial to remove.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit fe9572d2b5e8a02b0a057b8f3d535b1da95e9c5d[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Tue Oct 17 09:07:14 2023 +0000

    chore: remove many `Type _` before the colon (#7718)
    
    We have turned to `Type*` instead of `Type _`, but many of them remained in mathlib because the straight replacement did not work. In general, having `Type _` before the colon is a code smell, though, as it hides which types should be in the same universe and which shouldn't, and is not very robust.
    
    This PR replaces most of the remaining `Type _` before the colon (except those in category theory) by `Type*` or `Type u`. This has uncovered a few bugs (where declarations were not as polymorphic as they should be).
    
    I had to increase heartbeats at two places when replacing `Type _` by `Type*`, but I think it's worth it as it's really more robust.

[33mcommit be3dd2cca77f966bfdc17265bac32e65644dd8f2[m
Author: Alex J Best <alex.j.best@gmail.com>
Date:   Tue Oct 17 09:07:12 2023 +0000

    feat: some polynomial coeff mul lemmas (#7717)
    
    from https://leanprover.zulipchat.com/#narrow/stream/217875-Is-there-code-for-X.3F/topic/Polynomial.20coefficient/near/396950541

[33mcommit 7ee08478dd3e65fda5228008deb48b0d8406ba9e[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Tue Oct 17 07:53:03 2023 +0000

    fix(Data/Polynomial/Degree/TrailingDegree): correct porting mistake on Decidable instance (#7711)

[33mcommit 9211d76e20650e7ab0c2aec4c6807026b17d0078[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Tue Oct 17 07:52:56 2023 +0000

    chore: add decidable instances for stabilizer membership (#7709)

[33mcommit 0b9b714c96723198a3c48a3de12c7dd73485296e[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Tue Oct 17 07:52:53 2023 +0000

    chore: Fix decidability issues in UV-compression (#7708)
    
    We had been a bit lazy in Lean 3 with the decidability instances here, and it recently bit me.
    
    This PR reorders the lemmas to avoid `decidableEqOfDecidableLE`. There's only one new lemma: `Set.Sized.uvCompression`. Also golf a bit and fix style.

[33mcommit 1323ee53d03081bb1dfb9184926aa66a45444d74[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Tue Oct 17 07:52:50 2023 +0000

    feat: MonoidalCategory (QuadraticModuleCat R) (#7244)
    
    Together with #7130, this now results in a `CommMonoid (Skeleton (QuadraticModuleCat R))`, which is similar to the multiplicative part of the [Grothendieck-Witt ring](https://en.wikipedia.org/wiki/Witt_group#Grothendieck-Witt_ring) of quadratic forms.
    
    (Strictly the Grothendieck-Witt ring would introduce a subcategory of QuadraticModuleCat for the non-singular forms)
    
    This is largely a copy-and-paste from #7598 (though it was written first)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>
    Co-authored-by: Joachim Breitner <mail@joachim-breitner.de>

[33mcommit 2da494d2bfc6145023ef272371755c2ddff5fa20[m
Author: Scott Morrison <scott@tqft.net>
Date:   Tue Oct 17 06:25:10 2023 +0000

    chore: swap primes on forall_apply_eq_imp_iff (#7705)
    
    Two pairs of the form `foo` and `foo'`, where `foo'` is the simp lemma (and hence used in many `simp only`s) and `foo` is not used at all.
    
    Swap the primes, so that when it is time (now!) to upstream the lemma we actually use, it doesn't need to have a prime...
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 4de9b983b6933d0fac3dacd97efd1744a3d5badb[m[33m ([m[1;33mtag: v4.2.0-rc3[m[33m)[m
Author: Scott Morrison <scott.morrison@gmail.com>
Date:   Tue Oct 17 14:33:30 2023 +1100

    chore: bump toolchain to v4.2.0-rc3

[33mcommit ab56fa28da38a962b7952fc9e52edb14bef2bc5a[m
Author: Scott Morrison <scott.morrison@gmail.com>
Date:   Tue Oct 17 14:33:07 2023 +1100

    Revert "chore: revert #7703 (#7710)"
    
    This reverts commit f3695eb20c685cfcb5e45f75b1e68a59b8de7efb.

[33mcommit eece5add45e36af3afc64b084c58b8a9480abcd2[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Mon Oct 16 22:36:22 2023 +0000

    feat: sigma-compact sets (#7576)
    
    Define sigma-compact subsets of a topological space and show their basic properties.
    
    * compact sets are sigma-compact
    * countable unions of (sigma-)compact sets are sigma-compact
    * closed subsets of sigma-compact sets are sigma-compact.
    
    Relate them to sigma-compact space: a set is sigma-compact iff it is a sigma-compact space (w.r.t. the subspace topology).
    
    In a later PR, we'll show that sigma-compact measure zero sets are nowhere dense.
    
    - [x] depends on: #7528
    
    
    Co-authored-by: David Loeffler <d.loeffler.01@cantab.net>
    Co-authored-by: grunweg <grunweg@posteo.de>

[33mcommit 76f48d1d5bca7a206a730021e2bcf84726a8bcb6[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Mon Oct 16 21:28:35 2023 +0000

    feat(Data.Nat.Multiplicity): sub_one_mul_multiplicity_factorial (#6546)
    
    
    
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit f3695eb20c685cfcb5e45f75b1e68a59b8de7efb[m
Author: Matthew Robert Ballard <matt@mrb.email>
Date:   Mon Oct 16 19:01:58 2023 +0000

    chore: revert #7703 (#7710)
    
    This reverts commit 26eb2b0ade1d7e252d07b13ea9253f9c8652facd.

[33mcommit db232449608bb2f06757a72240afb02e936d183a[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Mon Oct 16 17:17:47 2023 +0000

    feat: `IsCancelAdd` instances for (d)finsupp and monoid algebra (#7582)
    
    The left and right versions would be pointless on `AddMonoidAlgebra` as addition is commutative.

[33mcommit 7de02716fe1230b79007ec9a5d055a7e1bd02b0c[m
Author: R√©my Degenne <Remydegenne@gmail.com>
Date:   Mon Oct 16 15:56:26 2023 +0000

    feat: add a Gaussian probability distribution over ‚Ñù (#7671)
    
    - Create a new `Distributions` folder for particular probability distributions.
    - Define a Gaussian distribution over ‚Ñù by its pdf
    
    Co-authored-by: Lorenzo Luccioli
    
    From a project started at LftCM 2023.

[33mcommit bdfd1fa735d1783887a6db5fd49c65868eb808af[m
Author: Floris van Doorn <fpvdoorn@gmail.com>
Date:   Mon Oct 16 14:39:41 2023 +0000

    feat: lemmas about derivatives (#7683)
    
    * From the Sobolev project
    
    Co-authored-by: Heather Macbeth 25316162+hrmacbeth@users.noreply.github.com

[33mcommit b3740a51d3f67a86cfdec919727077379a5ff51d[m
Author: Floris van Doorn <fpvdoorn@gmail.com>
Date:   Mon Oct 16 14:39:40 2023 +0000

    feat: lemmas for MeasurableSpace.Basic (#7682)
    
    * From the Sobolev project
    
    Co-authored-by: Heather Macbeth 25316162+hrmacbeth@users.noreply.github.com

[33mcommit bf0bc236981dce17304841e0de53da18f612cdf7[m
Author: Floris van Doorn <fpvdoorn@gmail.com>
Date:   Mon Oct 16 14:39:39 2023 +0000

    feat: lemmas about Lebesgue integral (#7681)
    
    * From the Sobolev project
    
    Co-authored-by: Heather Macbeth 25316162+hrmacbeth@users.noreply.github.com

[33mcommit e3644b2ca0a5f540883486345445752b1ef82b9f[m
Author: Xavier Roblot <46200072+xroblot@users.noreply.github.com>
Date:   Mon Oct 16 13:44:02 2023 +0000

    feat: add a Module.Finite instance for units of number field (#7412)
    
    Add the following instance
    ```lean
    instance : Module.Finite ‚Ñ§ (Additive (ùìû K)À£)
    ```
    
    To prove this instance, it is helpful to add some `rfl` lemmas about `Additive` and `AddMonoidHom.toIntLinearMap`
    
    This PR also fixes a couple of typo in the docstring

[33mcommit 5744925ea8edc7253147b37308d41a4c7e8d8a0d[m
Author: Scott Morrison <scott@tqft.net>
Date:   Mon Oct 16 11:33:02 2023 +0000

    chore: cleanup Init/Data/Nat/Lemmas (#7704)
    
    ~~I'll upstream `Nat.find` shortly~~, just cleaning up the cruft here first.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit ecab3f29059b5252d8381d67c1699c83a330b9ec[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Mon Oct 16 11:33:00 2023 +0000

    feat: Monotonicity of `Finsupp.support` (#7697)

[33mcommit 979bf9a93f1dc95b4d2ca282158d615be1e89b69[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Mon Oct 16 11:32:58 2023 +0000

    doc: Clarify the use case of `Function.extend` (#7547)
    
    Confusion was recently expressed so as to how to use `Function.extend`. This is an attempt to clear it up.
    
    Also fix the name of `Injective.factorsThrough`.

[33mcommit 38db825645dc57221fd6572c9c151e2d28b862ea[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Mon Oct 16 09:02:36 2023 +0000

    chore(RingTheory/PowerSeries/Basic): remove `open Classical` (#7665)
    
    Only two lemma statements have changed:
    
    * `coeff_truncFun` now contains the missing `[DecidableEq œÉ]` needed to make the statement make sense
    * `order_eq_multiplicity_X` now contains a missing `DecidableRel` argument needed to make the RHS fully general.
    
    Everywhere else, `classical` has just been inserted into the proof.
    
    
    
    Co-authored-by: Antoine Chambert-Loir <antoine.chambert-loir@math.univ-paris-diderot.fr>
    Co-authored-by: Antoine Chambert-Loir <antoine.chambert-loir@u-paris.fr>

[33mcommit 7e8b89e31cc6de2b954e689412eac2beb9b0144b[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Mon Oct 16 08:03:53 2023 +0000

    fix: add missing `DecidableEq` arguments (#7702)
    
    These make the lemmas strictly more (syntactically) general.
    
    As usual, the way to find these is to remove `open Classical` and fix what breaks.
    Usually this means adding `classical` to the start of the proof, but there are lots of weird term-mode proofs here for which adding a more surgical `letI := Classical.decEq` is easier.

[33mcommit 26eb2b0ade1d7e252d07b13ea9253f9c8652facd[m[33m ([m[1;33mtag: v4.2.0-rc2[m[33m)[m
Author: Scott Morrison <scott@tqft.net>
Date:   Mon Oct 16 04:14:16 2023 +0000

    chore: bump toolchain to v4.2.0-rc2 (#7703)
    
    This includes all the changes from #7606.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 7f121a48292e7093b3c6cb4a9bba6db8c41362f0[m
Author: Moritz Doll <moritz.doll@googlemail.com>
Date:   Mon Oct 16 02:18:21 2023 +0000

    feat(Analysis/InnerProductSpace/LinearPMap): the adjoint is closed (#6537)
    
    Define the graph of the adjoint and prove that the adjoint operator is always closed.

[33mcommit a33e3ec1e05284a34791525a9bfb36096c7e5431[m
Author: Scott Morrison <scott@tqft.net>
Date:   Sun Oct 15 23:39:49 2023 +0000

    chore: bump std (#7694)
    
    Some deleted lemmas have been upstreamed to Std.
    
    Note that the statements of `List.zipWith_map_left` (and `_right`) have been changed, requiring slight changes here.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>
    Co-authored-by: sgouezel <sebastien.gouezel@univ-rennes1.fr>

[33mcommit a24cd27b774b05ba29e28ede6d5e65d6430551a0[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Sun Oct 15 22:40:20 2023 +0000

    chore(RingTheory/TensorProduct): extract a helper lemma (#7699)

[33mcommit ed915e6beaa34aeac86882f041c031d95e666cc2[m
Author: Scott Morrison <scott@tqft.net>
Date:   Sun Oct 15 22:40:19 2023 +0000

    chore: relax unnecessarily strict heartbeats (#7651)
    
    This was causing failures in unrelated PRs.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 5ac9cb38fcf9079f6519764442b871fbd4091ab1[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sun Oct 15 21:38:45 2023 +0000

    feat: drop more `CompleteSpace` assumptions (#7691)
    
    Also add `completeSpace_prod`, `integrable_prod`.

[33mcommit a577026abec9d89ff729b87be8aa34e28fe346fd[m
Author: Floris van Doorn <fpvdoorn@gmail.com>
Date:   Sun Oct 15 18:32:52 2023 +0000

    feat: some simp lemmas to compute more cardinals (#7660)

[33mcommit 84f5ad08536a2df0c918a2c6383d10c3304f1da1[m
Author: Alex Kontorovich <58564076+AlexKontorovich@users.noreply.github.com>
Date:   Sun Oct 15 14:34:55 2023 +0000

    refactor: AddCircle (#7700)
    
    This is a refactor of `AddCircle`, changing it from a `def` to an `abbrev`. This fixes issues arising from a `deriving` statement that failed during the port, and allows for much better inference of instances.
    
    Co-authored-by: Heather Macbeth <25316162+hrmacbeth@users.noreply.github.com>

[33mcommit d7cb8fe4a1af53bc2a69ff76c6a46388ae7ea0d1[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Sun Oct 15 14:04:48 2023 +0000

    feat: remove sigma-finiteness assumption in layercake formula (#7454)
    
    Currently, the layercake formula for the Lebesgue integral assumes sigma-finiteness of the measure, while the layercake formula for the Bochner integral (and integrable functions) doesn't. At the cost of a more complicated proof, we remove the sigma-finiteness also from the Lebesgue measure case.
    
    
    
    Co-authored-by: Kalle <kalle.kytola@aalto.fi>

[33mcommit 39796d114b0eb24b437387e237a3b4fb26ef61d5[m
Author: MohanadAhmed <m.a.m.elhassan@gmail.com>
Date:   Sun Oct 15 08:02:12 2023 +0000

    feat: Cache check for toolchains mismatch (#7652)
    
    See [Zulip Thread](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/.60lake.20exe.20cache.20get.60.20should.20check.20toolchains)
    
    TLDR: When a project uses mathlib as a dependency check if it has the same lean-toolchain. If it does not use the same lean-toolchain print out an error message and exit

[33mcommit d80a329b6415790bcc99d9e23b9ece6e97e239bf[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sun Oct 15 07:15:58 2023 +0000

    chore: add `Homeomorph.measurableEmbedding` (#7689)

[33mcommit a25db8aeab4f293d74f02ae5f1a6b714999727c0[m
Author: Scott Morrison <scott@tqft.net>
Date:   Sun Oct 15 07:15:57 2023 +0000

    chore: remove @[simp] attribute already in Std (#7687)
    
    This attribute is already there at the point of definition in Std now.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 7a1fb8031874334c4f8226d946311e1cb6b4e618[m
Author: R√©my Degenne <Remydegenne@gmail.com>
Date:   Sun Oct 15 07:15:56 2023 +0000

    feat: add `withDensity_mono`, `withDensity_inv_same` and a few others (#7544)

[33mcommit 7b81b5fe2be7858980d04e9f668c48d8f2dcc27d[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sun Oct 15 06:31:45 2023 +0000

    feat: generalize `MeasureTheory.Measure.Regular.sigmaFinite` (#7690)
    
    Generalize `MeasureTheory.Measure.Regular.sigmaFinite`
    from a regular measure to a measure finite on compacts,
    rename it to `MeasureTheory.SigmaFinite.of_isFiniteMeasureOnCompacts`.

[33mcommit a3d674a5f2934b31724ec940218c06e7f769bbc7[m
Author: Scott Morrison <scott@tqft.net>
Date:   Sun Oct 15 01:17:53 2023 +0000

    chore: remove unnecessary Subsingleton.elim from aesop_cat (#7668)
    
    I think this was a workaround that is no longer necessary. If CI disagrees I'll just close this.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit ba1689574fa612340b8a5169a10a7b7aa72da021[m
Author: Timo <timorcb@gmail.com>
Date:   Sat Oct 14 22:22:02 2023 +0000

    feat(Data.Finset): add `Finset.filterMap` (#7672)

[33mcommit 47a07c71f5d4d52f626d38ea970ab4f59f5026b6[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sat Oct 14 20:52:53 2023 +0000

    feat: a map to an empty type is measure preserving (#7680)

[33mcommit 04245a845816a4f6d44b6e726e349872bd74ac64[m
Author: Eric Rodriguez <ericrboidi@gmail.com>
Date:   Sat Oct 14 13:46:09 2023 +0000

    chore: remove autoImplicit in NeZero.lean (#7673)
    
    I was unaware there was some of these still lying around - should we tidy these up?
    
    
    
    Co-authored-by: Eric Rodriguez <37984851+ericrbg@users.noreply.github.com>

[33mcommit f4abbaa745b12606fd5c20a7227824a64021a30d[m
Author: Eric Rodriguez <ericrboidi@gmail.com>
Date:   Sat Oct 14 13:46:05 2023 +0000

    feat: some basic quaternion facts (#7119)
    
    
    
    
    Co-authored-by: Eric Rodriguez <37984851+ericrbg@users.noreply.github.com>

[33mcommit 6c63dfbe3196e2af49d0972a2c73315dca786e9a[m
Author: Jeremy Tan Jie Rui <reddeloostw@gmail.com>
Date:   Sat Oct 14 07:05:40 2023 +0000

    feat: vertex replacement (#6808)
    
    `cliqueFree_of_replaceVertex_cliqueFree` is still quite long.

[33mcommit 8437cdac90bad7d0b288d750dbafe2e15235ed17[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Sat Oct 14 06:04:53 2023 +0000

    chore(Archive,Counterexamples): use `Type*` not `Type _` (#7663)
    
    This is an exhaustive replacement.

[33mcommit 016664228b1533dd85a5619e2817947a50949c73[m
Author: Patrick Massot <patrickmassot@free.fr>
Date:   Fri Oct 13 21:18:05 2023 +0000

    feat: long overdue delaborators (#7633)
    
    This brings to Mathlib assorted delaborators written by @kmill for various projects including Mathematics in Lean. They mostly fix regressions compared to Lean 3.
    
    
    
    Co-authored-by: Mario Carneiro <mcarneir@andrew.cmu.edu>

[33mcommit 11add7feea9488bd2250bf2122566d4d92e675a2[m
Author: Oliver Nash <github@olivernash.org>
Date:   Fri Oct 13 13:56:51 2023 +0000

    feat: a non-singular Killing form remains non-singular when restricted to a Cartan subalgebra (#7613)
    
    They key addition is the lemma `LieAlgebra.IsKilling.ker_restrictBilinear_of_isCartanSubalgebra_eq_bot`.

[33mcommit 7a8ef174830807fe0404de6c9efa05c97c856c8c[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Fri Oct 13 13:56:49 2023 +0000

    feat: `MonoidalCategory (AlgebraCat R)` (#7598)
    
    Some of these proofs are a little awkward as they have to fight with:
    
    * non-reducible type issues with `Quiver.Hom` vs `AlgHom`
    * mazes of coercions between `AlgEquiv` and `LinearMap`
    * defeqs not matching between module and algebra tensor product
    
    This also corrects an accidental mis-statement of `Algebra.TensorProduct.assoc_tmul`.

[33mcommit d6f894a0e34567a349c8ae08dd82ba69936fd4e3[m
Author: damiano <adomani@gmail.com>
Date:   Fri Oct 13 13:23:14 2023 +0000

    chore(GroupTheory/QuotientGroup): unindent `theorem` (#7659)
    
    Discovered following [this Zulip thread](https://leanprover.zulipchat.com/#narrow/stream/113489-new-members/topic/Should.20namespaces.20be.20indented.3F).

[33mcommit faa8dc9bbdde5c0c4f6fca40789ac68b9d9b89ec[m
Author: Martin Dvo≈ô√°k <martin.dvorak@matfyz.cz>
Date:   Fri Oct 13 12:52:43 2023 +0000

    feat(Computability/CFG): define context-free grammars (#6385)
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>
    Co-authored-by: Alex J Best <alex.j.best@gmail.com>

[33mcommit c98e6b7f0f028f7958b90fe156a7756f9b7a1939[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Thu Oct 12 21:38:12 2023 +0000

    feat: Finset family induction (#7522)
    
    Provide an induction principle for finset families: One can increase the support of a finset family one by one.

[33mcommit d8093fd5ee19a4c771d9aa7201d0606ec8e05649[m
Author: Koundinya Vajjha <koundinya.vajjha@gmail.com>
Date:   Thu Oct 12 18:21:12 2023 +0000

    feat: 2-adic norm of the n-th harmonic number (#7635)
    
    feat: 2-adic norm of the n-th harmonic number

[33mcommit bdd2abeef269942277a372c193bd0aa46ee8cae0[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Thu Oct 12 17:10:25 2023 +0000

    feat: integral of `f x ‚Ä¢ g y` over `Œ± √ó Œ≤` (#7627)
    
    * Generalize `integral_prod_mul` to `integral_prod_smul`, add `Integrable.prod_smul`.
    * Rename `integrable_prod_mul` to `Integrable.prod_mul`.
    * Add `integral_fun_fst` and `integral_fun_snd`.

[33mcommit 42b62d41dd723321a3a0801f4d9e583625f90311[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Thu Oct 12 12:34:10 2023 +0000

    feat: `NullMeasurable` function is `AEMeasurable` (#7604)
    
    This is true if the function admits an a.e. range
    with countably generated œÉ-algebra.
    
    In particular, a function is `AEStronglyMeasurable`
    iff it is `NullMeasurable` and it admits a separable a.e. range.

[33mcommit 11458852dd0c626349f7c1bc17eddee90dfc8cd4[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Thu Oct 12 12:34:08 2023 +0000

    feat(Data/Num): use bitwise notation (#7593)
    
    This enables the existing `|||`, `&&&`, `<<<`, `>>>`, and `^^^` notation for `Num` and `PosNum`, and makes them simp-normal form.

[33mcommit 7b2163cef3b5059c50919f4ac33475d699182126[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Thu Oct 12 10:52:41 2023 +0000

    chore(Topology/GDelta.lean): rename type variables (#7637)
    
    Greek letters for topological spaces are outdated, use letters X, Y, Z instead.
    [Zulip discussion](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Naming.20convention.3A.20topological.20spaces/near/395769893).

[33mcommit 1955a8e03fd64c4bbe01f763b7a022eb9322eae3[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Thu Oct 12 10:52:40 2023 +0000

    chore(Topology/LocallyCompact.lean): rename type variables (#7636)
    
    Greek letters for topological spaces are outdated, use letters X, Y, Z instead.
    [Zulip discussion](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Naming.20convention.3A.20topological.20spaces/near/395769893).
    
    Also generalise universes to Type* in two places.

[33mcommit 238b4602cfed0e7b4b72ae8778663491b80e0850[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Thu Oct 12 10:52:39 2023 +0000

    feat: naturality of the isomorphisms induced by functors which preserves homology (#7624)
    
    If `F : C ‚•§ D` is a functor which preserves homlogy (e.g. preserves finite limits/colimits), there is a natural isomorphism `F.mapShortComplex ‚ãô ShortComplex.homologyFunctor D ‚âÖ ShortComplex.homologyFunctor C ‚ãô F` which expresses that `F` "commutes" with homology.

[33mcommit 6025756d9419f0440a83d151298d95a2eef691bf[m
Author: Oliver Nash <github@olivernash.org>
Date:   Thu Oct 12 10:52:38 2023 +0000

    chore: improve defeq for `Sup` and `sSup` of `LieSubmodule`s (#7608)
    
    The point is that the following four lemmas are now all true by definition:
    
    - `LieSubmodule.inf_coe_toSubmodule`
    - `LieSubmodule.sInf_coe_toSubmodule`
    - `LieSubmodule.sup_coe_toSubmodule` [previously existed but not true by definition]
    - `LieSubmodule.sSup_coe_toSubmodule` [previously did not exist]

[33mcommit f9c99994aa6f76f7f91dd14430c43c971dd65911[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Thu Oct 12 10:52:37 2023 +0000

    chore(Algebra/DirectSum/Algebra): remove a redundant assumption (#7585)
    
    `commutes` is implied by `hone` and linearity.
    
    This matches the approach taken by `AlgHom.ofLinearMap`.

[33mcommit d99c52e77f8a7872aca755592e2ecd7539e7798f[m
Author: Alex J Best <alex.j.best@gmail.com>
Date:   Thu Oct 12 10:52:35 2023 +0000

    chore: replace Nat.digits_add_two_add_one with a syntactic matching simp lemma (#7428)
    
    This seems more useful once the theory is set up.
    Previously
    ```
    Nat.digits 10 (n + 1) = l
    ```
    would simp to
    ```
    (n + 1) % (8 + 2) :: Nat.digits (8 + 2) ((n + 1) / (8 + 2)) = l
    ```
    now it simps to
    ```
    (n + 1) % 10 :: Nat.digits 10 ((n + 1) / 10) = l
    ```

[33mcommit 560cd07471d559aa9fdbcfa8c0667d04fd10a5c1[m
Author: Joachim Breitner <mail@joachim-breitner.de>
Date:   Thu Oct 12 10:52:34 2023 +0000

    refactor: No need for CachedData in library_search and rw? (#7305)
    
    Previously, `Mathlib.Tactic.Cache` defined a `CachedData` data structure
    to keep a reference to the `CompactedRegion` that we get when unpickling
    the cache from a file, but it was never used.
    
    It also seems to be the case that keeping that reference is not
    necessary to keep the unpickled data alive. (It is the other way around:
    The data stays alive until `.free` is called explicitly, which we do not
    plan to do here.)
    
    Therefore, to simplify the code, this PR removes `CachedData`. This came
    out of working on `#find` in #6363

[33mcommit 674218293676e81e42597914b774ba4557c928e3[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Thu Oct 12 10:52:33 2023 +0000

    feat: self_le_pow (#7101)
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit ab2d44e7027b663104d3c088084c7adcbf8f2150[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Thu Oct 12 09:37:04 2023 +0000

    chore(RingTheory/TensorProduct): golf  (#7539)
    
    This adds `LinearMap.map_mul_iff` to match `AddMonoidHom.map_mul_iff` and uses it (along with `AlgHom.ofLinearMap`) to golf away some induction proof in favor of `ext`.
    The main motivation is the `map_mul_iff` lemma itself, not the golfing.
    
    Also fixes some incorrect docstrings that were mangled during porting, and adds an explicit name to an instance.

[33mcommit 423fc25eb06146c2b51218173af93bb9305443d9[m
Author: Thomas Browning <tb65536@uw.edu>
Date:   Thu Oct 12 09:02:48 2023 +0000

    refactor(NumberTheory/FLT): Define Fermat's Last Theorem for fixed exponent (#7494)
    
    This PR adds a definition of Fermat's Last Theorem for fixed exponent. The motivation for this is that `FermatLastTheoremWith ‚Ñï n`, `FermatLastTheoremWith ‚Ñ§ n`, and `FermatLastTheoremWith ‚Ñö n` are all equivalent, so it would be nice to have a canonical name, rather than sometimes referring to one and sometimes referring to another.

[33mcommit 780c5bab744f6170e5c077de521cab6b9437fa4e[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Thu Oct 12 07:34:25 2023 +0000

    feat(Integral/Bochner): golf Markov's inequality, drop an assumption (#7619)
    
    * Golf the proof of `MeasureTheory.mul_meas_ge_le_integral_of_nonneg`.
    * Drop the assumption `[IsFiniteMeasure Œº]`.
    * Assume `0 ‚â§·µê[Œº] f` instead of `0 ‚â§ f`.

[33mcommit 644ffcede0f3d1da4b7cfc97215cd7ab5e071696[m
Author: Patrick Massot <patrickmassot@free.fr>
Date:   Thu Oct 12 03:09:00 2023 +0000

    feat: small missing group lemmas (#7614)
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit eea0ff093abd0e7f0a4829f46336b0f52757ac68[m
Author: Alex J Best <alex.j.best@gmail.com>
Date:   Wed Oct 11 23:57:15 2023 +0000

    feat: check workflows are consistent in CI (#7625)
    
    Hopefully this will save a little time with things like #7622  in the long run

[33mcommit 13444d800e71a22689e60023576255503756cd93[m
Author: David Loeffler <d.loeffler.01@cantab.net>
Date:   Wed Oct 11 21:40:46 2023 +0000

    chore(Topology/SubsetProperties): Refactor SubsetProperties.lean (#7628)
    
    Split up the 2000-line `Topology/SubsetProperties.lean` into several smaller files. Not only is it too huge, but the name is very unhelpful, since actually about 90% of the file is about compactness; I've moved this material into various files inside a new subdirectory `Topology/Compactness/`.

[33mcommit 1e5877183e80ed05bc231d2a45e907ab41baaf7f[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Wed Oct 11 20:05:10 2023 +0000

    feat: homology isomorphism for a functor which preserves homology (#7623)
    
    When a functor `F` preserves the homology of a short complex `S`, it is shown in this PR that there is an isomorphism `(S.map F).homology ‚âÖ F.obj S.homology`.

[33mcommit 7dffcc4b8cf7f65cdda6024e5c5531ee3de9eb7a[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Oct 11 20:05:09 2023 +0000

    feat(MeasureTheory/../Prod): drop unneeded assumptions (#7620)
    
    * Drop `CompleteSpace` assumption in all theorems about Bochner
      integral on `Œ± √ó Œ≤`.
    * Drop measurability assumption in `lintegral_prod_swap`.

[33mcommit 2c0ab8d7870ec5323ecea3bd37cffc4e5462270c[m
Author: Oliver Nash <github@olivernash.org>
Date:   Wed Oct 11 20:05:08 2023 +0000

    feat: Fitting decomposition of a representation of a nilpotent Lie algebra (#7556)

[33mcommit c00742dc87c9656c6a5502317d75344c0284751b[m
Author: Joachim Breitner <mail@joachim-breitner.de>
Date:   Wed Oct 11 20:05:07 2023 +0000

    refactor(Lean.Meta.DiscrTree): Stackless `mapArrays` (#7387)
    
    the naive implementation of `mapArrays`, when run in the interpreter, can
    stack overflow when creating the `find_theorems` cache in CI, this
    blocks #7244.
    
    While more fundamental fixes are possible (e.g. a Trie structure that
    cannot be that deep, https://github.com/leanprover/lean4/pull/2577),
    simply rewriting `mapArrays` to be a single tail-recursive function
    (which the interpreter is able to execute without using stack space)
    should prevent more unrelated PRs from failing CI.

[33mcommit b39fc2a80f96ffe50b3b8eae0f820de0f21d776f[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Wed Oct 11 19:02:46 2023 +0000

    chore(Topology/Homeomorph): rename type variables (#7587)
    
    X, Y, Z are standard mathematical names for topological spaces.
    As [discussed](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Naming.20convention.3A.20topological.20spaces/near/395769893) on zulip, let us rename them.
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>

[33mcommit 8e92c5fbf35e1439f912d14a345136f7e1b8e589[m
Author: Eric Rodriguez <37984851+ericrbg@users.noreply.github.com>
Date:   Wed Oct 11 14:21:16 2023 +0000

    chore: typo (#7621)

[33mcommit 9532a8ecde37389d8c0b1db481933ff3a0454cd2[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Oct 11 12:19:13 2023 +0000

    feat(MeasureTheory/../Prod): null measurability of `f ‚àò fst` (#7610)
    
    A function on the product that depends only on one component is null measurable iff it is null measurable as a function of one variable.

[33mcommit 6b31fee633b467ad47f629c3284c2c25129168a6[m
Author: Brendan Seamas Murphy <shamrockfrost@gmail.com>
Date:   Wed Oct 11 11:21:49 2023 +0000

    chore: Make groupoidOfElements use Groupoid.inv instead of CategoryTheory.inv (#7616)
    
    It seemed suspicious to me that the definition of the action groupoid was noncomputable, since the definition is so explicit. It turns out CategoryTheory.groupoidOfElements was marked noncomputable because its definition of Groupoid.inv used CategoryTheory.inv to choose an inverse. This seems like it was probably just a namespace issue, and the author intended to use Groupoid.inv (which is computable). It seems like this definition would be a lot easier to work with in practice.

[33mcommit b0b0f7c0c82098a6c0e7cc658c99aebd5f5ac5de[m
Author: Robin Carlier <57142648+robin-carlier@users.noreply.github.com>
Date:   Wed Oct 11 09:58:11 2023 +0000

    chore(LinearAlgebra/Basic): change a `CommSemiring`instance to a `Semiring` instance (#7611)
    
    Generalize `mem_map_equiv` and likes to `Semiring` (previously used `CommSemiring` instances).
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 9ff5b6f12cad072e43b9dc7624fd15ba5ce10c8a[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Wed Oct 11 09:58:10 2023 +0000

    feat: use suppress_compilation in tensor products (#7504)
    
    More principled version of #7281.

[33mcommit fbb3ffbfeea060425c8979ed8a97a679ff773f92[m
Author: Scott Morrison <scott@tqft.net>
Date:   Wed Oct 11 08:25:00 2023 +0000

    chore: run mk_build_yml (#7622)
    
    Wasn't run after the second change in #7618.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 9106dcf8afea4b8a9ce2f42448d3a0ddbb89c370[m
Author: Jason Yuen <jason_yuen2007@hotmail.com>
Date:   Wed Oct 11 08:24:59 2023 +0000

    chore: remove trailing space in backticks (#7617)
    
    This will improve spaces in the mathlib4 docs.

[33mcommit 8de3e1022420e90d40e4474715aa75e6852b50fe[m
Author: Scott Morrison <scott@tqft.net>
Date:   Wed Oct 11 08:24:58 2023 +0000

    chore: bump std (#7602)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 451325f4b4476e7d6ade6b0cad6e0e6c51f3cd20[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Wed Oct 11 07:51:31 2023 +0000

    feat: functors which preserves right homology (#7256)

[33mcommit ad5f24375827ac0d93c6f37f446bede116af2f4b[m
Author: Scott Morrison <scott@tqft.net>
Date:   Wed Oct 11 06:19:03 2023 +0000

    chore: build lean4checker until it works (#7618)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit a40e5bad68baa84b5724df32ceb53d033ab57888[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Oct 10 23:14:16 2023 +0000

    chore(MeasureTheory/Function): golf some proofs (#7588)

[33mcommit b400da174997ae53232a3761b921ba45215cc2ec[m
Author: Oliver Nash <github@olivernash.org>
Date:   Tue Oct 10 23:14:15 2023 +0000

    feat: improve API for Fitting decomposition of a linear endomorphism (#7487)
    
    Especially the new lemma `LinearMap.eventually_isCompl_ker_pow_range_pow`

[33mcommit 69c11afc3834fd1d0ee62995c5aacc39dabf834c[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Tue Oct 10 21:36:52 2023 +0000

    feat: nowhere dense and meagre sets (#7180)
    
    Define nowhere dense and meagre sets and show their basic properties.
    Meagre sets are defined as the complement of comeagre(=residual) sets
    (and shown to be equivalent to the standard definition); we deduce their API from the API for comeagre sets.
    
    
    
    Co-authored-by: grunweg <grunweg@posteo.de>

[33mcommit 6dbefa3d3842353aac8639cb435d38f434469d14[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Tue Oct 10 20:30:52 2023 +0000

    chore: fix typo in docstring (#7612)

[33mcommit d34032a3c8b87036cbca79b8857758c6575493f6[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Tue Oct 10 20:30:50 2023 +0000

    feat: compact subsets in products as cofiltered limits of projections (#6578)
    
    We exhibit a compact subset in a product of totally disconnected Hausdorff spaces as a limit of its projections to finite subsets of the indexing set, in the category `Profinite`. The proof is structured in the same way as `Profinite.isIso_asLimitCone_lift` and `DiscreteQuotient.exists_of_compat`.

[33mcommit 10922d629732029c792ce609f0574c08864e54f4[m
Author: grunweg <grunweg@posteo.de>
Date:   Tue Oct 10 18:38:41 2023 +0000

    doc(Topology/Homeomorph): two docstrings (#7595)

[33mcommit 201c8eea40038dcab82059e0836aee78c919e773[m
Author: Patrick Massot <patrickmassot@free.fr>
Date:   Tue Oct 10 17:21:15 2023 +0000

    feat: Chinese remainder for ZMod. (#7599)

[33mcommit 2937b757f71325e24d8b2f6c732cd9a61f590e74[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Tue Oct 10 10:33:30 2023 +0000

    chore: use `zeta = false` in `push_neg` (#7592)
    
    There is no reason to expand local definitions while pushing negations inside a formula.

[33mcommit 7fb3d8a663eed915271cd35b684f8cc3544ea7bf[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Oct 10 07:17:49 2023 +0000

    chore(MeasureTheory/Measure): use `‚àß` instead of `‚àÉ` (#7603)
    
    Use `‚àÉ t', t' ‚äÜ t ‚àß _` instead of `‚àÉ t' (_ : t' ‚äÜ t), _`
    and similarly with `‚äá`
    in `MeasureTheory.toMeasurable` and related lemmas.
    
    Also reflow linebreaks in an unrelated proof.

[33mcommit c4caeb2493450c5c4194ddea40780a12f53d6633[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Tue Oct 10 07:17:48 2023 +0000

    fix(Algebra/Algebra/Basic): missing universe polymorphism (#7597)
    
    This was previously inferred as `PUnit.{1}`

[33mcommit 3f4910debcdd03d6ca9f9063b698a36fd2e3c211[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Mon Oct 9 21:43:43 2023 +0000

    chore: mark Homeomorph.isCompact_{pre}image simp (#7594)
    
    The analogous lemmas for open, closed, preconnected, connected sets are all tagged simp.

[33mcommit 0bf6843fdd60f2a3179d63d560fff0ace34ffe47[m
Author: David Loeffler <d.loeffler.01@cantab.net>
Date:   Mon Oct 9 21:43:41 2023 +0000

    feat(Topology/Separation): filter of codiscrete sets (#7456)
    
    This PR shows that, in any topological space, the sets whose complement is discrete and closed form a filter. (The only somewhat nontrivial step is to check that unions of discrete closed sets are discrete.)
    
    This is intended as a preliminary for introducing meromorphic functions on opens in $\mathbb{C}$ (which are, by definition, holomorphic on a co-discrete set).

[33mcommit 6ddda3a85416c145ef3e4cc078a7ac569ccbc1d3[m
Author: Patrick Massot <patrickmassot@free.fr>
Date:   Mon Oct 9 20:03:06 2023 +0000

    feat: simp lemmas for polynomial coefficients (#7557)
    
    Code by Ruben-VandeVelde
    
    
    Co-authored-by: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit bc49eb9ba756a233370b4b68bcdedd60402f71ed[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Mon Oct 9 18:38:16 2023 +0000

    feat(CategoryTheory/Monoidal/Transport): generalize to a faithful functor (#7237)
    
    I needed this to transfer the monoidal structure from `ModuleCat` to `QuadraticModuleCat`, but would also work for transferring the same structure from `ModuleCat` to `AlgebraCat`.
    
    The changes are:
    
    * A new `CategoryTheory.Monoidal.induced` definition, proven from scratch with slightly uglier proofs than what `transport` used. The new proofs use `simp` rather more than targeted slice commands, mainly due to lack of patience on my part.
    * `CategoryTheory.Monoidal.transport` now has a trivial implementation in terms of `induced`, as does `CategoryTheory.MonoidalCategory.fullMonoidalSubcategory` (though this was already fairly trivial)
    * `CategoryTheory.Monoidal.laxToTransported` has been removed, as it's just a less useful version of `CategoryTheory.Monoidal.toTransported`
    * `CategoryTheory.Monoidal.toTransported` has been golfed to oblivion, as it now falls out trivially by showing `fromTransported` first.

[33mcommit 54e9f324078adfa41d7d687ca2a3295614d315bd[m
Author: Newell Jensen <newell.jensen@gmail.com>
Date:   Mon Oct 9 17:08:12 2023 +0000

    doc(GroupTheory.Index): update main definitions to use `relindex_mul_index`. (#7472)
    
    doc(GroupTheory.Index): update main definitions to use `relindex_mul_index`.

[33mcommit fff0bc67837df7d52c654dfa31032081dfc1b6cb[m
Author: Alex Keizer <alex@keizer.dev>
Date:   Mon Oct 9 15:23:52 2023 +0000

    feat: prove equality of `Nat.bitwise` and `Nat.bitwise'` (#7410)
    
    This PR proves that `Nat.bitwise` (from core) and `Nat.bitwise'` (from mathlib) are equal
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 2ee7c9f67a60c49ffa602cbc8597d8493871cdb6[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Mon Oct 9 13:35:44 2023 +0000

    doc: add docstrings for vector and matrix notation (#7583)

[33mcommit 281dea7c34da4e2d72d099fe5bb3da322dbe2dac[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Mon Oct 9 13:35:43 2023 +0000

    refactor(LinearAlgebra/QuadraticForm/Basic): remove non-commutativity support (#7581)
    
    As discussed [on Zulip](https://leanprover.zulipchat.com/#narrow/stream/116395-maths/topic/Quadratic.20Maps/near/395529867), this generalization seems nonsensical as currently implemented.
    
    
    There are sensible ways to make this generalization, but they are much larger refactors, and in the meantime the current generalization is useless anyway.

[33mcommit 68b3c5a3a00e831a6fbe9b48559190d51782e7b1[m
Author: Matthew Robert Ballard <matt@mrb.email>
Date:   Mon Oct 9 13:35:41 2023 +0000

    perf (Filter.Germ): direct inheritance patterns for instances (#7540)
    
    We replace uses of `Function.Surjective.x` with terms constructed using direct inheritance from parents.

[33mcommit 4f086f94fe577c33f844506a6bfe8509178ce7ae[m
Author: Heather Macbeth <25316162+hrmacbeth@users.noreply.github.com>
Date:   Mon Oct 9 13:35:40 2023 +0000

    feat: structure sheaf of a manifold  (#7332)
    
    In https://github.com/leanprover-community/mathlib/pull/19146, we defined `StructureGroupoid.LocalInvariantProp.sheaf`, the sheaf-of-types of functions `f : M ‚Üí M'` (for charted spaces `M`, `M'`) satisfying some local property in the sense of `StructureGroupoid.LocalInvariantProp` (for example continuity, differentiability, smoothness).
    
    In this PR, in the case of smoothness, we upgrade this to a sheaf of groups if `M'` is a Lie group, a sheaf of abelian groups if `M'` is an abelian Lie group, and a sheaf of rings if `M'` is a "smooth ring".
    
    Co-authored-by: Adam Topaz <github@adamtopaz.com>
    
    
    
    Co-authored-by: Floris van Doorn <fpvdoorn@gmail.com>

[33mcommit 159651e099eddb8fd8fd828d42b30566851be6f6[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Mon Oct 9 12:27:07 2023 +0000

    feat: effective epi iff surjective in `CompHaus`/`Profinite`/`Stonean` (#7421)
    
    - [x] depends on: #7420

[33mcommit 768bedaa335b19e3de47f0362c8009bc9e83e94b[m
Author: damiano <adomani@gmail.com>
Date:   Mon Oct 9 12:27:06 2023 +0000

    feat(Tactic/MoveAdd): port `move_add` (#6576)
    
    This PR is a short implementation of the `move_add` tactic.
    
    It is intended as a preliminary port, featuring the reordering strategy and a very na√Øve proof-algorithm.
    
    A more refined version with a more robust proof will appear in a later PR.

[33mcommit c47533761c56c0cced26e611824e4a7bcc980716[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Mon Oct 9 10:41:46 2023 +0000

    feat(Algebra/DirectSum/Algebra): graded multiplication as a bilinear map (#7577)
    
    Also adds some missing actions on `GradedMonoid` which cleans up the definition of `DirectSum.GAlgebra` slightly.
    
    This also replaces `(‚ü®i, x‚ü© : GradedMonoid _)` with `.mk i x` as the former uses `Sigma.mk` instead of `GradedMonoid.mk`, which is annoying for `rw`.

[33mcommit 953f84aa5e2661c9ec3a07b299aac5300d59502f[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Mon Oct 9 10:41:45 2023 +0000

    fix(RingTheory/GradedAlgebra/Basic): rewrite `simps` lemma by hand (#7574)
    
    The simps lemmas generated here were bad.
    The porting note matches the one on `decomposeAddEquiv` which also needed manual lemmas.
    
    This also adds new lemmas that help keep `simp` confluent.

[33mcommit 2cf88deb11d45afbacd70908ea44b46d1420a0c1[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Mon Oct 9 10:41:44 2023 +0000

    feat(Algebra/Order/Ring/Defs): auto-derive one of the fields of `OrderCommSemiring` (#7572)
    
    Commutativity means one field of `OrderSemiring` follows from the other.

[33mcommit 28df819dd8f163fcdc2e4ed5241d8b93ac90a180[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Mon Oct 9 10:41:42 2023 +0000

    refactor(Algebra/Algebra/Equiv): align `AlgEquiv.ofLinearEquiv` with `AlgHom.ofLinearMap` (#7537)
    
    The former previously took a hypothesis about `f (algebraMap R A r) = algebraMap R B r`, but now needs only `f 1 = 1`, matching the latter. This doesn't make much difference at the two callers.

[33mcommit 1d33c1b940d58bd43d8a8f56915a30d89866a8a6[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Mon Oct 9 10:04:53 2023 +0000

    chore(Algebra/DirectSum/Ring): add missing rfl lemma (#7575)
    
    This isn't a simp lemma for the same reason that `Algebra.TensorProduct.one_def` isn't.
    
    Also simplifies the term in the instance.

[33mcommit 196e587ab97e5d825e39bb5f7a2bec267a2479f6[m
Author: Pol'tta / Miyahara K≈ç <pol_tta@outlook.jp>
Date:   Mon Oct 9 08:36:24 2023 +0000

    style: `Qpf` to `QPF` & `PFunctor.IdxCat` to `PFunctor.Idx` (#7499)
    
    `IdxCat` was a mathport-ism caused by the name being capitalized in Lean 3.

[33mcommit 60c0549c0f4066236400ae680319233691ce584c[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Oct 9 07:13:01 2023 +0000

    chore(CircleIntegral): fix a docstring, golf a proof (#7570)

[33mcommit 02472004ac07263a83850885f8ae00f448a14809[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Oct 9 06:37:14 2023 +0000

    chore(MeasureTheory/../Prod/Integral): Drop an assumption, golf (#7579)
    
    Drop some measurability assumptions by using the fact that `Prod.swap`
    is a measurable equivalence.

[33mcommit 0cb70832b8835490900a04d74024121d93de425f[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Oct 9 05:50:08 2023 +0000

    feat(MeasureTheory/../Prod): add lemmas about `NullMeasurableSet` (#7578)
    
    Also golf a proof.
    
    The informal proof was provided by Felix Weilacher on [Zulip](https://leanprover.zulipchat.com/#narrow/stream/116395-maths/topic/Product.20of.20nonmeasurable.20sets).
    
    Co-authored-by: @Felix-Weilacher

[33mcommit 44c2586aaa61610a790a75c9b1f01c4dd05620d7[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Sun Oct 8 22:56:40 2023 +0000

    feat: analogue of iSup.prod for sets (#7528)
    
    
    
    Co-authored-by: grunweg <grunweg@posteo.de>

[33mcommit 60e96a10d301278a6b9b8136211adb0d38c0ed5a[m
Author: Anatole Dedecker <anatolededecker@gmail.com>
Date:   Sun Oct 8 22:03:22 2023 +0000

    doc(MeasureTheory/Constructions/Polish): fix typo (#7571)

[33mcommit 8cdd933d3dc8908df1dac56376a6900f55b4dfd0[m
Author: Oliver Nash <github@olivernash.org>
Date:   Sun Oct 8 20:38:27 2023 +0000

    feat: various Lie algebra definitions / lemmas (#7507)
    
    These are all motivated by a result I've proved but I believe they make sense in their own right so I have split them out in the hopes of simplifying review.

[33mcommit 81fa8d9e845905d1ca6d742d17f63e2facb0eb88[m
Author: Mar√≠a In√©s de Frutos-Fern√°ndez <mariaines.dff@gmail.com>
Date:   Sat Oct 7 21:08:08 2023 +0000

    chore: fix aligns (#7529)

[33mcommit e09f6c623ba672430950fe9b1e994af4098d7657[m
Author: Patrick Massot <patrickmassot@free.fr>
Date:   Sat Oct 7 19:56:17 2023 +0000

    feat: Polynomial.sum_comp (#7559)

[33mcommit fd3a089b1eae469ba1e1d14ec4f1c3e568f187de[m
Author: Jason Yuen <jason_yuen2007@hotmail.com>
Date:   Sat Oct 7 18:13:03 2023 +0000

    feat(NumberTheory): Rayleigh's theorem (#7027)

[33mcommit fe7a9982444ca00a52c3c2b3f5a1b725b299c74c[m
Author: R√©my Degenne <Remydegenne@gmail.com>
Date:   Sat Oct 7 16:42:58 2023 +0000

    feat: lemmas about accumulate/partialSups/biUnion (#7562)
    
    Co-authored-by: Peter Pfaffelhuber
    
    From the Kolmogorov extension theorem project.
    
    
    
    Co-authored-by: R√©my Degenne <remydegenne@gmail.com>

[33mcommit b097a5ad56536766f778dae9c0cc7631485165db[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Sat Oct 7 08:18:22 2023 +0000

    feat: open mapping theorem for surjective morphisms between locally compact groups (#7356)

[33mcommit 7732480f2cf031ced6eb29d25d2f0c70ffd56a43[m
Author: Oliver Nash <github@olivernash.org>
Date:   Sat Oct 7 06:50:46 2023 +0000

    chore: relax typeclass assumptions in two modular lattice lemmas (#7555)
    
    Co-authored-by: Junyan Xu <junyanxumath@gmail.com> @alreadydone

[33mcommit fb3884a6050e87d4cd7ed034b459f152d2b432a3[m
Author: Alex J Best <alex.j.best@gmail.com>
Date:   Fri Oct 6 21:21:17 2023 +0000

    chore: add a couple of to_additives (#7535)

[33mcommit 8ec1ec7da4a2b6d6865c3b84ea1c6d02b55d97a1[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Fri Oct 6 15:59:03 2023 +0000

    chore(Topology/../Order): weaken TC assumptions (#7553)
    
    Generalize some lemmas from `ConditionallyCompleteLinearOrder`
    to `LinearOrder`.
    Also drop an unused `variable`.

[33mcommit c151d0706a00b9e9399de0ded77d06d1106bd505[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Fri Oct 6 15:59:02 2023 +0000

    chore: clean up names with iUnion instead of Union (#7550)

[33mcommit 88e8df9fc9445df66c3374bf0cbecd064aea7331[m
Author: Martin Dvo≈ô√°k <martin.dvorak@matfyz.cz>
Date:   Fri Oct 6 15:59:00 2023 +0000

    chore: make CanonicallyLinearOrdered[Add]CommMonoid extend more (#7515)
    
    Originally:
    ```
    class CanonicallyLinearOrderedAddCommMonoid (Œ± : Type*)
      extends CanonicallyOrderedAddCommMonoid Œ±, LinearOrder Œ±
    
    class CanonicallyLinearOrderedCommMonoid (Œ± : Type*) extends CanonicallyOrderedCommMonoid Œ±,
      LinearOrder Œ±
    ```
    Now:
    ```
    class CanonicallyLinearOrderedAddCommMonoid (Œ± : Type*)
      extends CanonicallyOrderedAddCommMonoid Œ±, LinearOrderedAddCommMonoid Œ±
    
    class CanonicallyLinearOrderedCommMonoid (Œ± : Type*)
      extends CanonicallyOrderedCommMonoid Œ±, LinearOrderedCommMonoid Œ±
    ```
    
    It gives the same union of properties as before, but now we have two more conversions for free:
    `CanonicallyLinearOrderedAddCommMonoid ` -> `LinearOrderedAddCommMonoid `
    `CanonicallyLinearOrderedCommMonoid ` -> `LinearOrderedCommMonoid `

[33mcommit f182837658bba8837e002af746309740cb7cdba6[m
Author: Chris Hughes <chrishughes24@gmail.com>
Date:   Fri Oct 6 14:17:29 2023 +0000

    refactor(TensorProduct): golf the definition of Neg (#7546)

[33mcommit 5c40b849f9287cef6e8d8cc1256112b9d32bbbda[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Fri Oct 6 14:17:27 2023 +0000

    refactor(MetricSpace/Basic): use `cobounded` more (#7543)

[33mcommit 2dac27d716092cdda3ecfbd86d4e9fa628965d51[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Fri Oct 6 14:17:26 2023 +0000

    chore(Probability): rename `Pmf` to `PMF` (#7542)
    
    Search and replace `Pmf` with `PMF`.

[33mcommit f47760bec150faa4beb5ee200323042bd9b840d3[m
Author: Patrick Massot <patrickmassot@free.fr>
Date:   Fri Oct 6 14:17:25 2023 +0000

    chore: Refactor Chinese remainders (#7532)

[33mcommit dd73238e7988b1264988b3dd44eae2d23473d8b6[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Fri Oct 6 14:17:24 2023 +0000

    feat: Rademacher theorem (#7003)
    
    We prove Rademacher theorem, stating that a Lipschitz function between finite-dimensional real vector spaces is differentiable almost everywhere.

[33mcommit caeb3feabcf753bf36c06877c4988c6edda4bdf3[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Fri Oct 6 14:17:21 2023 +0000

    feat: Extending convex functions (#6339)
    
    Forward-ports https://github.com/leanprover-community/mathlib/pull/18797
    
    The changes to `Mathlib.Data.Set.Intervals.Basic` were independently added to mathlib4 in `Mathlib.Data.Set.Intervals.Image`, so the `#align`s have been added there instead of the original file.
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit e2c210a9674e8f7793af1cb4af0aa0309a307b9c[m
Author: Oliver Nash <github@olivernash.org>
Date:   Fri Oct 6 12:22:33 2023 +0000

    feat: add lemmas `Disjoint.isCompl_sup_right_of_isCompl_sup_left` (and partner) (#7483)

[33mcommit 9115321247f0516194fd2d333c3c4d20132cb844[m
Author: Oliver Nash <github@olivernash.org>
Date:   Fri Oct 6 12:22:32 2023 +0000

    feat: define the positive Fitting component of the representation of a nilpotent Lie algebra (#7360)

[33mcommit 911cd305d405023471e81fc89a0cc8a4978361ff[m
Author: Patrick Massot <patrickmassot@free.fr>
Date:   Fri Oct 6 00:26:26 2023 +0000

    feat: first isomorphism theorem for rings (#7536)
    
    This matches the textbook version which does not assume surjectivity, and is also consistent with the Mathlib group theory version.

[33mcommit 167880ba45c8aa187d774c5b59f6b9a80ff9b935[m
Author: Anatole Dedecker <anatolededecker@gmail.com>
Date:   Thu Oct 5 21:41:38 2023 +0000

    feat: open subsets of locally connected spaces are locally connected (#7530)

[33mcommit dc0ee378c7fb369a7122ef5c4a061f19dca5af7c[m
Author: Jannis Limperg <jannis@limperg.de>
Date:   Thu Oct 5 21:41:36 2023 +0000

    refactor: purge aesop_cat_nonterminal (#7505)
    
    `aesop_cat_nonterminal` is a non-terminal variant of `aesop`. It's not supposed to be used in production code since it's even worse than non-terminal `simp`. However, there were a few occurrences left (presumably from the port), which this PR removes.
    
    The only nontrivial change is that I add mathlib's `rfl` tactic to the `CategoryTheory` Aesop rule set.

[33mcommit 13ed79ef62f2835153cb3734dfd994b83540056d[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Thu Oct 5 21:41:34 2023 +0000

    chore: mark map_prod/map_sum as simp (#7481)

[33mcommit 19ca95b1845dbf39941356e3958b5d6032618ea2[m
Author: Bolton Bailey <bolton.bailey@gmail.com>
Date:   Thu Oct 5 19:52:52 2023 +0000

    chore: fix nonterminal simps (#7497)
    
    Fixes the nonterminal simps identified by #7496

[33mcommit 63e3334262b581305bf4d9294374be751fd7ac0f[m
Author: Patrick Massot <patrickmassot@free.fr>
Date:   Thu Oct 5 18:27:14 2023 +0000

    chore: Use IsCoprime for ideals. (#7523)
    
    Make `IsCoprime I J` the preferred way to say that two ideals are coprime, provide lemmas translating to other formulations.

[33mcommit 943f6a16d27a44766b2f93ca241caa09fa35467f[m
Author: R√©my Degenne <Remydegenne@gmail.com>
Date:   Thu Oct 5 17:31:32 2023 +0000

    chore: put Measure.withDensity into a new file (#7508)
    
    It was in Integral.Lebesgue, which is about the definition of the Lebesgue integral.

[33mcommit d7f380a127d9137bdb221cc53d6b68762f09568f[m
Author: Chris Hughes <chrishughes24@gmail.com>
Date:   Thu Oct 5 14:55:57 2023 +0000

    perf(Polynomial): fix CommSemiring instance missed in #7434 (#7518)

[33mcommit 87eb696ebcebeb067820a70014c6e31c1fe54cb2[m
Author: Junyan Xu <junyanxumath@gmail.com>
Date:   Thu Oct 5 13:18:23 2023 +0000

    feat(Topology): continuity from a product with a discrete space (#7511)
    
    + Add four pairs of lemmas continuous((Within)At/On)_prod_of_discrete_left/right  in ContinuousOn.lean: to check continuity of a function from `X √ó Y` to `Z` with `X` discrete, it suffices to check continuity of every slice of it with `x : X` fixed.
    
    + Remove duplicate lemmas continuous_uncurry_of_discreteTopology(_left) from Constructions.lean in favor of the more general (iff) version.
    
    + Move the lemma continuous_iff_continuousOn_univ up.
    
    
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>

[33mcommit a71a5026facbac985b1d6c116b288300d4113de1[m
Author: Oliver Nash <github@olivernash.org>
Date:   Thu Oct 5 13:18:22 2023 +0000

    feat: add `forall_or_exists_not` and `exists_or_forall_not` (#7458)

[33mcommit 37bce198f220d122774dcaaf6ef8e76c6594f5c7[m
Author: Scott Morrison <scott@tqft.net>
Date:   Thu Oct 5 11:48:18 2023 +0000

    chore: 'cache' hashes Lean.versionString (#7513)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit ed78eef524a8b0065699e2617df82bfd42d083d0[m
Author: Matthew Robert Ballard <chrishughes24@gmail.com>
Date:   Thu Oct 5 11:48:17 2023 +0000

    perf (LinearAlgebra.Quotient): direct inheritance for extended SMul classes (#7459)
    
    We replace the calls to `Function.Surjective.x` for constructing instances with a more direct inheritance pattern.
    
    
    
    Co-authored-by: Chris Hughes <33847686+ChrisHughes24@users.noreply.github.com>
    Co-authored-by: Matthew Ballard <matt@mrb.email>

[33mcommit 994364d23b300ad9d92152df97104ce3aee11111[m
Author: Bolton Bailey <bolton.bailey@gmail.com>
Date:   Thu Oct 5 11:48:16 2023 +0000

    feat: add lemma List.getD_map (#7307)
    
    Adds a lemma, analogous to [Option.getD_map](https://leanprover-community.github.io/mathlib4_docs/Std/Data/Option/Lemmas.html#Option.getD_map), but for `List`.
    
    Also fixes a few nearby lemmas to use `induction`/`cases` instead of `induction'`/`cases'`
    
    ~~Co-authored-by: GitHub Copilot~~

[33mcommit f7d61d5db7917abee381a85c52fe074c11f20a01[m
Author: Bolton Bailey <bolton.bailey@gmail.com>
Date:   Thu Oct 5 11:48:14 2023 +0000

    feat: new lemma totalDegree_coeff_finSuccEquiv_add_le (#7206)
    
    Adds a new lemma

[33mcommit 49f7188978c151b67c924ea228ae2a7defc76140[m
Author: R√©my Degenne <Remydegenne@gmail.com>
Date:   Thu Oct 5 10:24:42 2023 +0000

    feat: add simple lemmas about MeasurableEquiv (#7509)

[33mcommit 4b53c17d267c29aff121111497600999de0a283e[m
Author: Chris Hughes <chrishughes24@gmail.com>
Date:   Thu Oct 5 10:24:41 2023 +0000

    perf: improve some instances in Polynomial (#7434)

[33mcommit 7f01c9909e30a82f734361aed38254a7402b9f21[m
Author: Chris Hughes <chrishughes24@gmail.com>
Date:   Thu Oct 5 10:24:39 2023 +0000

    perf: improve some instances in Finsupp (#7430)

[33mcommit e640058cb8caf3c132834dd72b526eadb1a30681[m
Author: Antoine Chambert-Loir <antoine.chambert-loir@u-paris.fr>
Date:   Thu Oct 5 09:03:14 2023 +0000

    feat: Right exactness of tensor product of modules (#6447)
    
    
    
    Co-authored-by: Antoine Chambert-Loir <antoine.chambert-loir@math.univ-paris-diderot.fr>
    Co-authored-by: Johan Commelin <johan@commelin.net>
    Co-authored-by: Kevin Buzzard <k.buzzard@imperial.ac.uk>

[33mcommit f3bc24c31d063d976cd1cc5c0a38743c0bf77729[m
Author: Martin Dvo≈ô√°k <martin.dvorak@matfyz.cz>
Date:   Thu Oct 5 06:34:46 2023 +0000

    chore: rename CanonicallyOrderedAddMonoid to ..AddCommMonoid (#7503)
    
    Renames:
    
    
    `CanonicallyOrderedMonoid` ->
    `CanonicallyOrderedCommMonoid`
    
    `CanonicallyOrderedAddMonoid` ->
    `CanonicallyOrderedAddCommMonoid`
    
    `CanonicallyLinearOrderedMonoid` ->
    `CanonicallyLinearOrderedCommMonoid`
    
    `CanonicallyLinearOrderedAddMonoid` ->
    `CanonicallyLinearOrderedAddCommMonoid`

[33mcommit d926a3889f62daf75026bead146f06bdf8eb5ad9[m
Author: Junyan Xu <junyanxumath@gmail.com>
Date:   Thu Oct 5 06:34:45 2023 +0000

    chore(RingTheory): golf, generalize, fix docs (#7500)
    
    
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>

[33mcommit e080fe90cd5cc97d3e05812478eefe08c14faec0[m
Author: Timo <timorcb@gmail.com>
Date:   Thu Oct 5 06:34:44 2023 +0000

    feat: support `zify` on divisibility propositions (#7489)

[33mcommit 463ad2993d43075598da9bedb3cc83f4cff44003[m
Author: Timo <timorcb@gmail.com>
Date:   Thu Oct 5 06:34:43 2023 +0000

    fix: restore simp confluence for `qify [(h : n ‚à£ m)]` (#7488)
    
    Fixes #7480

[33mcommit 321e7c6665ee01c4e95d35cfd50b1900ce8f033f[m
Author: Scott Morrison <scott@tqft.net>
Date:   Thu Oct 5 06:05:44 2023 +0000

    chore: in CI, retry operations that use the network (#7495)
    
    Network errors cause fairly frequent transient failures in CI.
    
    Let's square the probability of this happening.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 1bacc4eed553660a3d642d478bc51b671aa98d22[m
Author: Patrick Massot <patrickmassot@free.fr>
Date:   Thu Oct 5 03:08:57 2023 +0000

    feat: Select and insert widgets (#7260)
    
    Builds a framework to define widgets allowing users to select some sub-expressions of the main goal to generate a tactic call. Four examples using this framework are included, generating calls to tactics `conv`, `congrm` and `gcongr` and generating new calc steps. Also includes a `calc` tactic code action to start a calc proof.
    
    
    
    Co-authored-by: Wojciech Nawrocki <wjnawrocki@protonmail.com>

[33mcommit 2b8dea43f8493550f0b20b7a4ec73287de62ba51[m
Author: Scott Morrison <scott@tqft.net>
Date:   Wed Oct 4 23:56:43 2023 +0000

    chore: disable CI cache check for lean-pr-testing-NNNN branches (#7510)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 68abdcd0789edad9bef8d848aa3318206be032a2[m
Author: Patrick Massot <patrickmassot@free.fr>
Date:   Wed Oct 4 21:53:11 2023 +0000

    fix: notation for concrete cyclic perms (#7492)

[33mcommit a5516f580a31bf7ec20be84cc4fe50824cd3e35a[m
Author: Anne Baanen <vierkantor@vierkantor.com>
Date:   Wed Oct 4 14:04:33 2023 +0000

    chore: fix deprecated identifier (#7502)
    
    I came across a few places in Mathlib that still used this name that has been deprecated for a few years now. Now we're consistent again and I don't have to suffer when encountering the wrong version :)

[33mcommit 8045a474062fe18a7e0216a4113e0666c3b28393[m
Author: Mario Carneiro <mcarneir@andrew.cmu.edu>
Date:   Wed Oct 4 14:04:32 2023 +0000

    feat: unreachableTactic support for `notation3` (#7501)
    
    This is needed to avoid a `unreachableTactic` lint warning when using `by tac` inside `notation3`. (The same thing is built in for the other `notation` variants.)
    
    
    
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>

[33mcommit 0090c609254fa722ec2ffb424bcf315314191e65[m
Author: Patrick Massot <patrickmassot@free.fr>
Date:   Wed Oct 4 14:04:31 2023 +0000

    chore: fix docstrings (#7491)

[33mcommit c93575a3bf66341c32a357213ba963b6052aa2d5[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Wed Oct 4 14:04:29 2023 +0000

    chore: cleanup some spaces (#7484)
    
    Purely cosmetic PR.

[33mcommit ffcd2b0d877cfd47ae2a46e0535af279b02e5eca[m
Author: Chris Hughes <chrishughes24@gmail.com>
Date:   Wed Oct 4 14:04:27 2023 +0000

    perf: change one instance in coprods of groups (#7292)

[33mcommit 1b346a7bb0c56b8d1f6526161359a75384276be0[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Wed Oct 4 12:39:58 2023 +0000

    feat: add some ring theory lemmas (#7466)
    
    From flt-regular.
    
    Co-authored-by: Andrew Yang <the.erd.one@gmail.com>

[33mcommit be0d066cb7381532d79a03e56bfd664ecd6e69ba[m
Author: Alex J Best <alex.j.best@gmail.com>
Date:   Wed Oct 4 10:59:17 2023 +0000

    chore: fix some cases in names (#7469)
    
    And fix some names in comments where this revealed issues

[33mcommit 5eb774863120be9b8dd0bd758b82a29f41990206[m
Author: Xavier Roblot <46200072+xroblot@users.noreply.github.com>
Date:   Wed Oct 4 10:09:10 2023 +0000

    doc: add an algebraic number theory section to Mathlib overview (#7429)

[33mcommit 39a866a8658151890d84106ca8edd9fbebfe9df1[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Wed Oct 4 08:36:54 2023 +0000

    chore: cleanup some spaces (#7490)
    
    Purely cosmetic PR

[33mcommit b2540cf9b47f7cf8d913114cb688317719bc50b4[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Tue Oct 3 19:47:12 2023 +0000

    feat: add some Associated/Prime lemmas (#7465)
    
    From flt-regular.
    
    Co-authored-by: Andrew Yang <the.erd.one@gmail.com>

[33mcommit df7b04231c9920b36d13328cb3f0f402d88e7da5[m[33m ([m[1;31morigin/mrb/parse_id[m[33m)[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Tue Oct 3 12:58:14 2023 +0000

    chore: tidy various files (#7359)

[33mcommit 7afe52aaaf41d4d7495609b147e16974300ae604[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Tue Oct 3 12:58:11 2023 +0000

    feat: the union of the regular and extensive coverages generates the coherent topology (#6876)
    
    We define the regular and extensive coverages on categories and prove that their union generates the coherent topology on extensive, regular, precoherent categories.
    
    - [x] depends on: #6878
    - [x] depends on: #6879
    - [x] depends on: #6896
    
    Co-authored-by: Riccardo Brasca @riccardobrasca [riccardo.brasca@gmail.com](mailto:riccardo.brasca@gmail.com)
    Co-authored-by: Filippo A E Nuccio @faenuccio [filippo.nuccio@univ-st-etienne.fr](mailto:filippo.nuccio@univ-st-etienne.fr)

[33mcommit 363a0f74c96d97b80ac2c15cf88a93b680c5c25a[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Tue Oct 3 11:52:09 2023 +0000

    feat: new tactic suppress_compilation, use it in OperatorNorm (#7326)
    
    The tactic `suppress_compilation` makes sure that `def` and `instance` are replaced by `noncomputable def` and `noncomputable instance` so that the compiler does not try to produce executable code. This leads to gains in compilation time and olean sizes. Using it in OperatorNorm.lean reduces the olean size from 10756 kB to 6626 kB, for instance.
    
    Implementation due to @tydeu, see https://leanprover.zulipchat.com/#narrow/stream/270676-lean4/topic/noncomputability.20and.20oleans/near/392451565

[33mcommit 374447aa7961261fca5f2ed2223c81e518fca2fa[m
Author: Bolton Bailey <bolton.bailey@gmail.com>
Date:   Tue Oct 3 11:52:07 2023 +0000

    feat: add degree_map_eq_iff (#7170)
    
    Stub lemma for `degree_map_eq_iff`. Feel free to try proving it!
    
    Co-authored-by: Floris van Doorn
    
    
    
    Co-authored-by: Floris van Doorn <fpvdoorn@gmail.com>

[33mcommit d17c882c386bf3463e9815e56c49cca070b39ca7[m
Author: Matthew Robert Ballard <matt@mrb.email>
Date:   Tue Oct 3 10:19:33 2023 +0000

    chore (AlgebraicGeometry.StructureSheaf): clean up some instances (#7473)
    
    We replace a few `show X from inferInstance` with `inferInstanceAs` which reduces some `let_fun`'s in the resulting term. We also align the names with casing convention.

[33mcommit 7144232313cfdc9a6f191fa52c4563578ceba034[m
Author: Patrick Massot <patrickmassot@free.fr>
Date:   Tue Oct 3 10:19:32 2023 +0000

    feat: sup_eq_closure for Submonoid and Subgroup (#7468)

[33mcommit 87799c2f08ba1ac5ec8087283bec4cd1e46e05aa[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Tue Oct 3 10:19:31 2023 +0000

    feat: add Algebra.coe_norm_int (#7463)
    
    From flt-regular.
    
    Co-authored-by: Andrew Yang <the.erd.one@gmail.com>

[33mcommit 20cc2dcda2bb95de8bdc47ea9d4a33aaa543de63[m
Author: Floris van Doorn <fpvdoorn@gmail.com>
Date:   Tue Oct 3 10:19:30 2023 +0000

    feat: lemmas about equiv and logic (#7338)
    
    * From the marginal project

[33mcommit bc669d25ba55eeab87de065cd5da9ff6cdf532ca[m
Author: Scott Morrison <scott@tqft.net>
Date:   Tue Oct 3 08:56:45 2023 +0000

    chore: run 'lean4checker' during CI (#7368)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 56e8939271644eade7948e852ac02635a0e17c57[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Tue Oct 3 08:56:44 2023 +0000

    chore: move some code to Algebra.Module.Submodule.Lattice and add some comments (#7366)

[33mcommit 7d1964147f55581b8897a9482a16898788541763[m
Author: Anatole Dedecker <anatolededecker@gmail.com>
Date:   Tue Oct 3 07:51:22 2023 +0000

    feat: some golfing in AlgebraicGeometry.PrimeSpectrum.Basic (#7373)

[33mcommit 68c7277eb809a743588fe39cd21737944bf8e6c6[m
Author: Timo <timorcb@gmail.com>
Date:   Tue Oct 3 07:21:41 2023 +0000

    doc: fix typos (#7470)
    
    Co-Authored-By: newell <newell.jensen@gmail.com>

[33mcommit eaac61bf6bdd376c6f2ab625b92ecc30944ad0ff[m
Author: Matthew Robert Ballard <matt@mrb.email>
Date:   Tue Oct 3 00:57:03 2023 +0000

    chore : revert 1c1f211fab568c (#7474)
    
    This reverts commit 1c1f211fab568c513da3f142512f154bb139a82c.
    
    I did not make two weeks much less a month.

[33mcommit 1c1f211fab568c513da3f142512f154bb139a82c[m
Author: Matthew Ballard <matt@mrb.email>
Date:   Mon Oct 2 20:49:50 2023 -0400

    change

[33mcommit 71a0cb812bdefdf75535d8cc894026f1eaca4ba1[m
Author: Jannis Limperg <jannis@limperg.de>
Date:   Mon Oct 2 17:58:22 2023 +0000

    chore: remove some Aesop calls in Category.Basic (#7462)
    
    This is in preparation for the next Aesop version, which will include a change to the handling of simp theorems. That change can affect the order in which simp lemmas are applied. Some Aesop calls in CategoryTheory.Category.Basic were sensitive to this ordering, so I've replaced them with simpler proofs.

[33mcommit c0de7678daaf188f29eec11a009cc342774d697f[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Mon Oct 2 15:34:07 2023 +0000

    feat: disintegration of Lebesgue measure in vector spaces (#7252)
    
    To check that a property is true ae in a vector space, it suffices to check that it is true ae along all translates of a given vector subspace.

[33mcommit 89ef31102f161fe84e63f6600973e8e72b470760[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Mon Oct 2 15:09:41 2023 +0000

    chore: drop redundant LinearMap/LinearEquiv.map_sum (#7426)
    
    Note that `_root_.map_sum` is not marked as `@[simp]`.

[33mcommit f1a26d74c6f24f344bb4656785c9c24958df74da[m
Author: Jujian Zhang <jujian.zhang1998@outlook.com>
Date:   Mon Oct 2 11:21:20 2023 +0000

    chore: fix typo `mimimal` to `minimal` (#7455)

[33mcommit 80b890f7e8113c7dd0832d09f8caf66cf169dcd3[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Mon Oct 2 09:36:07 2023 +0000

    chore(LinearAlgebra/DirectSum/TensorProduct): missing lemma (#7399)
    
    We had the lemma about how the forward direction of this equivalence behaves, but not the reverse direction.

[33mcommit 4298bf336970ac33b398dcb0d7fd336e63219437[m
Author: Scott Morrison <scott@tqft.net>
Date:   Mon Oct 2 09:36:06 2023 +0000

    chore: CI compiles 'graph' (#7347)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 89df0a5a9c582951e2ac2c1c01016b55ebfb52ac[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Mon Oct 2 07:53:23 2023 +0000

    chore: golf some Nat.Prime proofs (#7452)
    
    Also correct indentation for another.

[33mcommit d36df78ddbbacae15a7c0522d384d901787993b9[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Oct 2 07:53:22 2023 +0000

    chore(LinearAlgebra/Alternating): split (#7448)
    
    I'm going to refactor/expand API about `domCoprod`, and I don't want to rebuild the whole library when I do it.

[33mcommit 51089d8f290c06725d47f07f60d0e42d83f6474b[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Mon Oct 2 06:27:42 2023 +0000

    feat: some lemmas about associated and prime elements (#7453)
    
    From flt-regular.
    
    Co-authored-by: Andrew Yang <the.erd.one@gmail.com>
    
    
    
    Co-authored-by: timotree3 <timorcb@gmail.com>

[33mcommit 465105ce43a02544a210981cc541caadac2cc6cf[m
Author: Jakob von Raumer <jakob@von-raumer.de>
Date:   Mon Oct 2 06:27:41 2023 +0000

    feat: some lemmas about List and ZMod (#7424)
    
    
    
    Co-authored-by: Alex J Best <alex.j.best@gmail.com>

[33mcommit 2372c7a7b72bfd454fb451b676778b5e81b55db1[m
Author: Kyle Miller <kmill31415@gmail.com>
Date:   Mon Oct 2 06:06:53 2023 +0000

    chore: update Mathlib.Mathport.Syntax (#7443)

[33mcommit aef04106feb057e57456331886e5f38e392dea9f[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Sun Oct 1 12:14:58 2023 +0000

    chore: Make `Set`/`Finset` lemmas match lattice lemma names (#7378)
    
    Rename `union_eq_left_iff_subset` to `union_eq_left` to match `sup_eq_left`. Similarly for the `right` and `inter` versions.

[33mcommit 86831e868a1fc76bfa49a25cb554ff97cd8db284[m
Author: kkytola <kalle.kytola@aalto.fi>
Date:   Sat Sep 30 17:02:19 2023 +0000

    feat: Add a basic layercake formula for Bochner integral. (#7167)
    
    Layer cake formulas currently exist for `ENNReal`-valued functions and Lebesgue integrals. This PR adds the most common version of the layer cake formula for integrable a.e.-nonnegative real-valued functions and Bochner integrals.
    
    
    
    Co-authored-by: kkytola <‚Äúkalle.kytola@aalto.fi‚Äù>
    Co-authored-by: kkytola <39528102+kkytola@users.noreply.github.com>

[33mcommit 071f47d27115f6b801ba2e4ba42334817abf2446[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Fri Sep 29 15:19:12 2023 +0000

    feat: add some List.takeWhile lemmas (#7397)
    
    Co-authored-by: Scott Morrison <scott@tqft.net>

[33mcommit 2cb209a1c0911b9223659099dddcfe7874c6a6fd[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Fri Sep 29 15:19:11 2023 +0000

    style: a linter for four spaces (#7283)
    
    Includes an auto-fix feature with the `--fix` flag so that spacing suggestions will be automatically applied in review also.
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit 3d729341e47389b74ece4d01d6cf1a53c7526c82[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Fri Sep 29 14:27:54 2023 +0000

    feat(RingTheory/TensorProduct): the universal property of the tensor product of algebras (#7409)
    
    The construction used for `CliffordAlgebra.ofBaseChange` generalizes into a universal property for building arbitrary algebra morphisms out of the tensor product.
    
    It turns out this is a known result; it is mentioned at https://en.wikipedia.org/wiki/Tensor_product_of_algebras#Further_properties which cites the linked reference, though the version added by this PR is heterobasic like the rest of this file.
    
    This is a generalization of the existing `Algebra.TensorProduct.productLeftAlgHom` to non-commutative rings.

[33mcommit 6d73bdfd29367b53a722fa6f49e3964e699e2526[m
Author: Moritz Doll <moritz.doll@googlemail.com>
Date:   Fri Sep 29 14:27:53 2023 +0000

    feat(Analysis): add WithLp for products (#6136)
    
    The file `NormedSpace.ProdLp` is copied from `NormedSpace.PiLp` with a two changes
    - For `p = 0` we define the distance by using and if-else block which in turn makes it necessary to add some classicality assumptions
    - We omit the sections about basis and constant maps
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 042888f56f24644d2e2de00c683fd947ceba3ea4[m
Author: Kexing Ying <kexingying@gmail.com>
Date:   Fri Sep 29 13:54:33 2023 +0000

    feat(Probability/Kernel/Disintegration): Uniqueness of the disintegration kernel (#6110)
    
    
    
    Co-authored-by: JasonKYi <kexing.ying19@imperial.ac.uk>
    Co-authored-by: RemyDegenne <Remydegenne@gmail.com>

[33mcommit d8905e7b44ddd3de2c9053e6b04708ebf8732145[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Fri Sep 29 13:26:33 2023 +0000

    docs: Create CONTRIBUTING.md (#7367)
    
    This file is surfaced in several places in the github UI, if it exists.
    
    Actually writing something of substance here risks it going out of sync; but this should hopefully lead new contributors towards the guide if they found mathlib through github rathe than the website.

[33mcommit 701760004fa318e62741a8aeb68fc93552a7bf95[m
Author: Chris Hughes <chrishughes24@gmail.com>
Date:   Fri Sep 29 10:41:02 2023 +0000

    perf: improve some instances in GroupTheory/Congruence (#6874)

[33mcommit b3b5ba1eafea950e31d8a322d5cb2283fa960164[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Fri Sep 29 06:57:45 2023 +0000

    feat: Supremum of `Finset.Iic a` (#7416)
    
    and lemmas about `Set.toFinset` of `Finset.Ixx`

[33mcommit d3263b231fc2baca52b49308a9c35acca2ade1d0[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Fri Sep 29 06:57:44 2023 +0000

    chore: exactly 4 spaces in theorems (#7328)
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit c0af8b81975f591701151139ab98dc36b9988117[m
Author: Felix-Weilacher <fweilach@andrew.cmu.edu>
Date:   Fri Sep 29 06:57:43 2023 +0000

    feat: add standard Borel space class (#7243)
    
    add a class `StandardBorelSpace`, whose relationship to `PolishSpace` is analogous to the relationship between `PolishSpace` and complete metric space. The usefulness is shown by `_root_.MeasurableSet.standardBorel`: A measurable subset of a standard Borel space is Polish. Note that a borel measurable subset of a Polish space will not typically be Polish in the induced topology!
    
    Specific things done in this PR:
    
    - added some basic instances for `StandardBorelSpace`
    - changed theorems with hypotheses `[MeasurableSpace X] [TopologicalSpace X] [BorelSpace X] [PolishSpace X]` but which do not refer to the topology on `X` to depend instead on  `[MeasurableSpace X][StandardBorelSpace X]`. These automatically generalize the old theorems thanks to `standardBorel_of_polish`.
    
    I believe this sort of refactoring can be pushed a lot farther in future PRs.
    
    
    
    Co-authored-by: Felix-Weilacher <112423742+Felix-Weilacher@users.noreply.github.com>

[33mcommit 5d32dbdedd926bd86da0ada0c75ea0a57fa68c52[m
Author: Koundinya Vajjha <koundinya.vajjha@gmail.com>
Date:   Fri Sep 29 04:40:00 2023 +0000

    feat: the n-th harmonic number is not an integer for n > 1. (#7319)
    
    The n-th Harmonic number is not an integer for n > 1. This proof uses 2-adic valuations.

[33mcommit 316798910c98a1d59071a21774e1191728993302[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Fri Sep 29 04:01:44 2023 +0000

    feat: a single element `EffectiveEpiFamily` consists of an `EffectiveEpi` (#7420)

[33mcommit f706948328510c81403f61a208d134ea2041fdbd[m
Author: Apurva <apurvanakade@gmail.com>
Date:   Fri Sep 29 03:32:53 2023 +0000

    feat(Analysis): define pointed cones (#6437)
    
    We define `PointedCone` as `Submodule ùïú‚â•0 E`.
    Most of this code is copied from the `ConvexCone` file.
    
    The main reason for this type synonym is to be able to work with direct sums/products of cones (which are now just direct sums/products of submodules).
    
    
    
    Co-authored-by: Apurva Nakade <apurvnakade@gmail.com>
    Co-authored-by: apurvanakade <53553755+apurvanakade@users.noreply.github.com>

[33mcommit 8de1ab0b52a31c3fb4fc053d0da757aaa917f640[m
Author: Patrick Massot <patrickmassot@free.fr>
Date:   Thu Sep 28 22:53:26 2023 +0000

    chore: bump ProofWidgets to v0.0.17 (#7414)

[33mcommit 4b23a87311177c6929a8d5b42a9246f8d5c6b690[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Thu Sep 28 22:53:25 2023 +0000

    chore(CategoryTheory/Adjunction/Basic): missing dsimp lemmas (#7361)

[33mcommit 7101b4c777205983905a46d4b30f42e1b02bb4f5[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Thu Sep 28 21:41:02 2023 +0000

    feat: Extend a nonnegative function (#7418)
    
    The result of extending a nonnegative function by a nonnegative function is nonnegative.

[33mcommit b2d415234c85aceb6ffbb857ef4c309e2499a2c6[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Thu Sep 28 19:35:27 2023 +0000

    chore(CategoryTheory): rename Cofan.proj as Cofan.inj (#7406)
    
    This PR renames the "injections" of a cofan as `Cofan.inj`. The previous name `Cofan.proj` was confusing.

[33mcommit 6d330f70776185dc2a20c4dee0394d65a1f63b34[m
Author: Chris Hughes <chrishughes24@gmail.com>
Date:   Thu Sep 28 17:09:58 2023 +0000

    perf: improve instances in TensorProduct (#7401)
    
    
    
    Co-authored-by: Chris Hughes <33847686+ChrisHughes24@users.noreply.github.com>

[33mcommit 3f15d7710a92e1c6cd2fe39c5069ff8dfdad3550[m
Author: R√©my Degenne <Remydegenne@gmail.com>
Date:   Thu Sep 28 17:09:57 2023 +0000

    chore: split Measure.Trim definition from MeasureSpace.lean (#7385)
    
    The file MeasureSpace has more than 4000 lines: let's move some results out of it.
    
    
    
    Co-authored-by: R√©my Degenne <remydegenne@gmail.com>

[33mcommit ca81ad431371bd4a41440bbaf92e54ab0ec3fa0d[m
Author: R√©my Degenne <Remydegenne@gmail.com>
Date:   Thu Sep 28 15:48:39 2023 +0000

    fix: name of `AEMeasurable.ae_eq_of_forall_set_lintegral_eq` (#7380)

[33mcommit 42019ce8a82dfe2888c1981278d239dbb59b6f7d[m
Author: Bolton Bailey <bolton.bailey@gmail.com>
Date:   Thu Sep 28 15:48:37 2023 +0000

    feat: add theorem cast_subgroup_of_units_card_ne_zero (#6500)
    
    Adds a theorem saying the cardinality of a multiplicative subgroup of a field, cast to the field, is nonzero. As well as `sum_subgroup_units_zero_of_ne_bot` and other theorems about summing over multiplicative subgroups.
    
    Co-authored-by: Pratyush Mishra <prat@upenn.edu>
    Co-authored-by:  Buster <rcopley@gmail.com>

[33mcommit edaa10ad4ab8a0c3d55ca9509486f6d24fd7663d[m
Author: Jujian Zhang <jujian.zhang1998@outlook.com>
Date:   Thu Sep 28 12:57:04 2023 +0000

    feat(GroupTheory/Submonoid): add opposite submonoids (#7415)
    
    We already have API for the multiplicative opposite of subgroups.
    
    This tidies the API for subgroups by introducing separate `.op` and `.unop` definitions (as dot notation on `.opposite` worked in Lean 3 but not Lean 4), and adds the same API for submonoids.

[33mcommit 94638cdbd608af3055bf28101e0ef2dbaca15049[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Thu Sep 28 12:57:02 2023 +0000

    feat: Order isomorphism between `Finset Œ±` and `Set Œ±` (#7375)
    
    over a fintype.
    
    Also fix the name of `Finset.mem_powerset_len_univ_iff` (it should be `powersetLen`, not `powerset_len`).

[33mcommit dae39b2a9fad269963c50f4839c29d483819a1ba[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Thu Sep 28 12:57:00 2023 +0000

    feat(Data/Set/Intervals/Image): Complete API (#7146)
    
    Dualise all existing lemmas and prove their strictly monotone versions.
    
    The lemmas are grouped as
    * `mapsTo`, `image_subset`
      * `On`, not `On`
        * `Monotone`, `Antitone`, `StrictMono`, `StrictAnti`
          * `Ixi`, `Iix`, `Ixx`
    
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit b86770a38f6ee8d4a7f64cebcf388fb8b8cef89b[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Thu Sep 28 08:57:05 2023 +0000

    feat: add Finsupp.prod/sum_eq_single (#7349)
    
    In several places, we unfold `Finsupp.sum` just to use `Finset.sum_eq_single`; this adds the missing lemma.

[33mcommit 2f22e2900cc8c53bc2f308c1166473f3f8cb2f76[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Thu Sep 28 08:35:04 2023 +0000

    feat: LocallyConstant.piecewise' (#6589)
    
    We define a variant of `LocallyConstant.piecewise` which defines a locally constant map on a subset given locally constant maps on two closed subsets covering it, that agree on the intersection.
    
    -  [x] depends on: #6616
    
    Co-authored-by: Anatole Dedecker @ADedecker

[33mcommit 51e00c7c095e7381a6dbee5d1679f028af52ee5f[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Thu Sep 28 05:09:39 2023 +0000

    feat: Extra `sups` lemmas (#7382)

[33mcommit 926c0c5f20491ed64320fa1067d8cba516740647[m
Author: Floris van Doorn <fpvdoorn@gmail.com>
Date:   Wed Sep 27 23:08:24 2023 +0000

    fix: add `symm_map_mul` to fix simp issue. (#7407)
    
    [Zulip thread](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/!4.234183.20.60simps.60.20maximum.20recursion.20depth)

[33mcommit d07cdbe2d5a07b9c6f70c1df64e0c4002575df68[m
Author: kkytola <kalle.kytola@aalto.fi>
Date:   Wed Sep 27 23:08:23 2023 +0000

    feat: Lemmas about integrals of bounded continuous functions. (#7222)
    
    This PR adds some lemmas about integrals of bounded continuous functions. The lemmas are collected in a separate file.
    
    
    
    Co-authored-by: kkytola <39528102+kkytola@users.noreply.github.com>

[33mcommit 415849560598330933be2c868e5bf63b7d4208af[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Wed Sep 27 21:48:16 2023 +0000

    style: fix multiple spaces before colon (#7411)
    
    Purely cosmetic PR

[33mcommit 0dbbdedec85764f1a1a97f81f14f3f0dfa79ad2e[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Wed Sep 27 21:48:15 2023 +0000

    refactor(RingTheory/TensorProduct): simplify assumptions (#7403)
    
    Rather than showing agreement on all the scalars in `algHomOfLinearMapTensorProduct`, it suffices to show agreement on `1`.
    
    This also replaces a few downstream proofs with `rfl` in order to make them eligible for `dsimp`.
    These results were always true by `rfl`, but it was easier to make this change than fix the old proofs.

[33mcommit 3ac819de78e864a0d58d2d6b3bbe2a117d59dd2d[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Wed Sep 27 20:27:46 2023 +0000

    feat: Miscellaneous `Finset` lemmas (#7379)

[33mcommit c8320acc4c2c255e60303bab2ff6c8e0e39d30cd[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Wed Sep 27 20:27:45 2023 +0000

    feat: When the sum of a nonneg function is zero (#7372)
    
    Also fix implicitness of arguments to `Finset.sum_singleton`.

[33mcommit fad287b639967306ee9aed2f7e7e5a8fe9753f1f[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Wed Sep 27 19:04:39 2023 +0000

    feat: `Finset Œ±` has decidable `‚â§` (#7377)
    
    This is surprisingly missing.
    
    Also correct the porting note: `decidableDforallFinset` could not have possibly been picked up when looking for `Decidable (s ‚äÇ t)`.

[33mcommit 61a9412aa18b1cd10433b64b8ee4405e089df0fe[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Wed Sep 27 17:02:00 2023 +0000

    feat(RingTheory/TensorProduct): non-unital algebras (#7106)
    
    Mathlib already knows that the tensor product of two rings is a ring. This splits the instance into multiple intermediate pieces so as to conclude analogous results for non-unital and non-associative rings.

[33mcommit af392cbc4927db22d7739f2598b673b894e8826a[m
Author: Floris van Doorn <fpvdoorn@gmail.com>
Date:   Wed Sep 27 15:18:25 2023 +0000

    fix: 100.yaml was missing a line (#7402)

[33mcommit b42cde1f9965f80454f018cdc4b687013023d362[m
Author: R√©my Degenne <Remydegenne@gmail.com>
Date:   Wed Sep 27 15:18:24 2023 +0000

    feat(Probability/Kernel): add simp lemmas about the zero kernel (#7381)
    
    
    
    Co-authored-by: R√©my Degenne <remydegenne@gmail.com>

[33mcommit 2b8f139ec9748bbb5010f2ac5bbf32d4676df49a[m
Author: Xavier Roblot <46200072+xroblot@users.noreply.github.com>
Date:   Wed Sep 27 14:09:47 2023 +0000

    feat(NumberTheory.NumberField.Units): proof of Dirichlet's unit theorem (#5960)
    
    We prove Dirichlet's unit theorem. More precisely, the main results are:
    ```lean
    def basisModTorsion : Basis (Fin (Units.rank K)) ‚Ñ§ (Additive ((ùìû K)À£ ‚ß∏ (torsion K)))
    ```
    where `Units.rank := Fintype.card (InfinitePlace K) - 1` and
    ```lean
    theorem exist_unique_eq_mul_prod (x : (ùìû K)À£) : ‚àÉ! (Œ∂ : torsion K) (e : Fin (Units.rank K) ‚Üí ‚Ñ§),
        x = Œ∂ * ‚àè i, (fundSystem K i) ^ (e i)
    ```
     where `fundSystem : Fin (rank K) ‚Üí (ùìû K)À£` is a fundamental system of units.
    
    The exponents in `exist_unique_eq_mul_prod` can be computed via the following result:
    ```lean
    theorem fun_eq_repr {x Œ∂ : (ùìû K)À£} {f : Fin (rank K) ‚Üí ‚Ñ§} (hŒ∂ : Œ∂ ‚àà torsion K)
        (h : x = Œ∂ * ‚àè i, (fundSystem K i) ^ (f i)) : f = (basisModTorsion K).repr (Additive.ofMul ‚Üëx)
    ```

[33mcommit aa7c8c33b817c1c38c1e99eb72a0ece024666ddd[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Wed Sep 27 08:12:49 2023 +0000

    feat: Embed a gen. Bool. alg. into a Bool. alg. (#7371)
    
    This is useful to prove that Boolean algebra results not mentioning `compl` and `top` also hold in generalised Boolean algebras.

[33mcommit 7a2b5b8e0441e659bcaf101e33f3ee20a91ce9fa[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Wed Sep 27 06:47:17 2023 +0000

    refactor: Change `OrderBot` ext lemma to `Subsingleton` (#7376)
    
    This ext lemma had no assumption, so it can be turned into a `Subsingleton` instance.
    
    Note that in Lean 3, `subsingleton` instances were a performance concern for simp. This concern is gone in Lean 4.

[33mcommit ad44c68bac5bdcb1d5f9665ba21e63eb5d5aff0a[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Wed Sep 27 03:37:04 2023 +0000

    chore(RingTheory/TensorProduct): extra lemmas about `{nat,int}Cast` (#7391)

[33mcommit 2c8d12cc0ce56ce0f45bf3bf6b83f395ed34c411[m
Author: Scott Morrison <scott@tqft.net>
Date:   Wed Sep 27 03:37:03 2023 +0000

    chore: bump to std#260 (#7134)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>
    Co-authored-by: Alex Keizer <alex@keizer.dev>

[33mcommit bb4380009c9b054aa33a2f42c592c35477493555[m
Author: Scott Morrison <scott@tqft.net>
Date:   Wed Sep 27 02:09:58 2023 +0000

    chore: add more pp_dot attributes (#7288)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 81a57fb9a854b1d51c76343dae900997fe875abd[m
Author: Scott Morrison <scott@tqft.net>
Date:   Wed Sep 27 00:21:57 2023 +0000

    chore: bump Mathlib dependencies (#7393)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 26b25885bff1060bd207eb45ab1ddf6e534ae6c1[m
Author: David Renshaw <dwrenshaw@gmail.com>
Date:   Tue Sep 26 17:40:28 2023 +0000

    feat: Port positivity extensions for `Nat.ceil`, `Int.ceil`, `Int.floor` (#7089)
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 0984a59e54f54decf7f01a08eca287f7d52d8a67[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Tue Sep 26 17:18:42 2023 +0000

    feat: super factorial written as product (#6806)
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit 5c902e07aaaace98ef725bc1153da75910a09ac1[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Tue Sep 26 14:05:30 2023 +0000

    feat: locally Lipschitz maps (#7314)
    
    Define locally Lipschitz maps and show their basic properties.
    In particular, they are continuous and stable under composition and products.
    As an application, we conclude that C¬π maps are locally Lipschitz.
    
    
    
    Co-authored-by: grunweg <grunweg@posteo.de>

[33mcommit 1bda3b46774ca7d204e632781b92c31e32828e89[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Tue Sep 26 13:13:24 2023 +0000

    feat(Topology/SubsetProperties): add Inducing.isCompact_preimage (#7290)
    
    Simple generalisation of `ClosedEmbedding.isCompact_preimage`; its injectivity hypothesis was never used.
    
    
    
    Co-authored-by: grunweg <grunweg@posteo.de>

[33mcommit c88129425ba49dfdddde0404400ecfcb4a11c3e0[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Tue Sep 26 13:13:23 2023 +0000

    feat: strong law of large numbers for vector-valued random variables (#7218)
    
    We already have the strong law of large numbers for real-valued integrable random variables. We generalize it to general vector-valued integrable random variables. This does not require any second-countability assumptions as integrable functions can by definition be approximated by simple functions, for which the result is deduced from the one-dimensional one.
    
    Along the way, we extend a few lemmas in the library from the real case to the vector case, and remove unneeded second-countability assumptions.

[33mcommit 4d91cd8b97acf77e7cf9eb4c6b9f183247f89a1a[m
Author: Floris van Doorn <fpvdoorn@gmail.com>
Date:   Tue Sep 26 11:46:27 2023 +0000

    feat: lemmas about finset (#7337)
    
    From the marginal project

[33mcommit c3321530b8e39fe6a91bb7a25f8a3532b64e4c46[m
Author: MohanadAhmed <m.a.m.elhassan@gmail.com>
Date:   Tue Sep 26 11:46:26 2023 +0000

    feat: eigenvalues of A·¥¥A and AA·¥¥ are non-negative (#7312)
    
    The PR provides two  lemmas showing that the eigenvalues of $A\^HA$ and $AA^H$ are non-negative:
    
    - `eigenvalues_conjTranspose_mul_self_nonneg`:
    $$\text{eig}(A\^H A) \geq 0 $$
    - `eigenvalues_self_mul_conjTranspose_nonneg`:
    $$\text{eig}(A A\^H) \geq 0 $$
    
    This was suggested by @Vierkantor in PR #6042

[33mcommit d84c8d2f0a727e1248d2ce49bb2fb1b8c153d5da[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Tue Sep 26 11:46:25 2023 +0000

    feat: Sigma-algebra generated by a singleton (#2513)
    
    Match https://github.com/leanprover-community/mathlib/pull/18506

[33mcommit b2f9c24b60fadee88f6172e2e0685850f323e1c7[m[33m ([m[1;33mtag: v4.2.0-rc1[m[33m)[m
Author: Scott Morrison <scott@tqft.net>
Date:   Tue Sep 26 10:21:49 2023 +0000

    chore: bump toolchain to v4.2.0-rc1 (#7370)
    
    This rolls in the changed from #6928.
    
    Co-authored-by: Thomas Murrills <thomasmurrills@gmail.com>
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit bf1ceb82960fe37c5f22a2b07d26ca12f27716ba[m
Author: Oliver Nash <github@olivernash.org>
Date:   Tue Sep 26 09:02:00 2023 +0000

    feat: lemmas about divisibility, mostly related to nilpotency (#7355)

[33mcommit f203f2e0caf1d9ea25b7f2e4b8c2afebd2c6967b[m[33m ([m[1;33mtag: v4.1.0[m[33m)[m
Author: Scott Morrison <scott@tqft.net>
Date:   Tue Sep 26 08:43:02 2023 +0000

    chore: bump toolchain to v4.1.0 (#7369)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 0fd376a2a6771146b41dfd81b6726431ebc5f2c4[m
Author: Matthew Robert Ballard <matt@mrb.email>
Date:   Mon Sep 25 17:31:14 2023 +0000

    chore: add @mattrobball to maintainer list  (#7358)
    
    Not sure how aspirational the claims of expertise can be.

[33mcommit 448e347a46707ed566863dec645b6eeb6829163a[m
Author: Chris Wong <lambda.fairy@gmail.com>
Date:   Mon Sep 25 14:23:45 2023 +0000

    feat: SameCycle.equivalence and SameCycle.setoid (#7353)
    
    I'm exploring @kmill's combinatorial maps work and these two definitions are part of it:
    
    https://github.com/kmill/lean-graphs/blob/bd3139daf81c0f41ce5ade951195858cdf038bd2/src/myequiv.lean#L72-L76
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 8f4cf33f525fec7294ef62cbcdd69648d2ad7fd4[m
Author: Richard M. Hill <r.m.hill@ucl.ac.uk>
Date:   Mon Sep 25 14:23:43 2023 +0000

    feat(RingTheory/Nilpotent): add lemma on powers of nilpotents (#7340)
    
    add lemma saying that powers of nilpotent elements are nilpotent.

[33mcommit b915222e6beab6fc3d6ce057eefb4e20aaab802b[m[33m ([m[1;31morigin/fin-tuple[m[33m)[m
Author: negiizhao <egresf@gmail.com>
Date:   Mon Sep 25 13:30:46 2023 +0000

    feat(Order/WithBot): add some lemmas (#6275)
    
    The `WithTop` version of the last 3 lemmas already exists.

[33mcommit fe2c350a0d0889341aa1c741338f76a73ba03f7e[m
Author: Malvin Gattinger <malvin@w4eg.eu>
Date:   Mon Sep 25 09:45:27 2023 +0000

    chore: attempt to fix broken links in docs (#7350)
    
    For example, the page of [`Mathlib.Data.List.BigOperators.Basic`](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Data/List/BigOperators/Basic.html) is trying to link to [`Mathlib.Data.List.Defs`](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Data/List/Defs.html) using `./defs` but that becomes `../../../../././defs` and a broken link.
    
    
    
    Co-authored-by: Malvin Gattinger <malvin@w4eg.de>

[33mcommit 6f7f5f38aeade5fd16b2d96674a055b3a850e736[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Sep 25 05:21:56 2023 +0000

    feat(OperatorNorm,Multilinear): add lemmas, golf (#7302)
    
    ### `Analysis/NormedSpace/OperatorNorm`
    
    * Add `ContinuousLinearMap.isLeast_op_norm`, `ContinuousLinearMap.op_nnnorm_le_iff`,
      and `ContinuousLinearMap.isLeast_op_nnnorm`.
    * Golf some proofs.
    * Drop `RingHomIsometric` assumption here and there.
    
    ### `Analysis/NormedSpace/Multilinear`
    
    * Add `ContinuousMultilinearMap.isLeast_op_norm`, `ContinuousMultilinearMap.isLeast_op_nnnorm`, `ContinuousMultilinearMap.le_mul_prod_of_le_op_norm_of_le`, `ContinuousMultilinearMap.op_norm_le_iff`, `ContinuousMultilinearMap.op_nnnorm_le_iff`, `ContinuousMultilinearMap.op_nnnorm_prod`, `ContinuousMultilinearMap.op_nnnorm_pi`.
    * Golf/move some proofs.
    * Change implicit/explicit arguments in some lemmas.

[33mcommit 2517504aba1cf936952d865d256cfed2344e9987[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Mon Sep 25 00:55:30 2023 +0000

    chore: add IsROrC.toDecidableEq (#7315)
    
    We already have noncomputable `DecidableEq` instances for `Real` and `Complex`; putting them here too reduces friction in code generalized to `IsROrC K`.

[33mcommit ee7626c67f22daf75e46a07077ac19b17df75bb4[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Sun Sep 24 21:00:38 2023 +0000

    chore: tidy various files (#7343)

[33mcommit 7916792c6939de87261827767e630150f43e3f9c[m
Author: Chris Hughes <chrishughes24@gmail.com>
Date:   Sun Sep 24 20:16:20 2023 +0000

    refactor: Create FreeGroup folder in GroupTheory (#7334)

[33mcommit 6a6a3a838fe6762a3ca04e4cbe8fccf39ebe610a[m
Author: Christopher Hoskin <christopher.hoskin@gmail.com>
Date:   Sun Sep 24 19:47:54 2023 +0000

    refactor(Topology/Order): Rename order topologies (#7310)
    
    Rename the Upper/Lower UpperSet/LowerSet topologies to the conventions suggested by @YaelDillies in https://github.com/leanprover-community/mathlib4/pull/2508#discussion_r1306711450
    
    
    
    Co-authored-by: Ya√´l Dillies <yael.dillies@gmail.com>

[33mcommit c2c14af546cb1f036b580220193b283f7335392a[m
Author: Scott Carnahan <128885296+ScottCarnahan@users.noreply.github.com>
Date:   Sun Sep 24 17:11:38 2023 +0000

    fix: rm off-by-one error in finset.eventually_constant_prod (#7333)
    
    The hypothesis is that the function is trivial for all indices `\geq N`, and the original conclusion is that for `n \geq N` the product up to `n` is equal to the product up to `N` (namely `range N+1`), but we can strengthen this by removing the index `N` part.  This change is especially important for simplifying products and sums with only the initial term nontrivial.

[33mcommit 7bb9c63e6ca89ced0dd814528d98b414fc186254[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Sun Sep 24 16:27:40 2023 +0000

    chore: fix references to `toUniformSpace` in docstrings (#7348)

[33mcommit 3a62351cdc175276774c2af93e34c816efe0442c[m
Author: Alex J Best <alex.j.best@gmail.com>
Date:   Sun Sep 24 16:09:06 2023 +0000

    chore: fix docgen link in readme (#7354)
    
    Noticed in #7350

[33mcommit e95989a3696b4c379c07e3a2346d487094b96e17[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Sun Sep 24 12:30:35 2023 +0000

    feat: add Nat.descFactorial_eq_prod_range (#7261)

[33mcommit e6937e6c278a533f18b08d34ad6e15ce8bc35cfe[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Sun Sep 24 12:02:48 2023 +0000

    feat: conductor of Dirichlet character (#7320)
    
    Co-authored-by: Michael Stoll <Michael.Stoll@uni-bayreuth.de>
    
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit e876531bc97ae579fdfe15106bcf2da81527f011[m
Author: Bolton Bailey <bolton.bailey@gmail.com>
Date:   Sun Sep 24 09:09:01 2023 +0000

    feat: add theorem natDegree_modByMonic_lt (#7278)
    
    Adds the natDegree analogue of this theorem
    
    Co-authored-by: Pratyush Mishra <prat@upenn.edu>

[33mcommit 37ef3d5d93968353933e4c935e834a0852ac153d[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Sat Sep 23 22:49:28 2023 +0000

    chore(CategoryTheory): swapping the names of opOp and unopUnop (#7344)
    
    This PR swaps the names of `opOp` and `unopUnop` which are the functors of the equivalence of categories `opOpEquivalence : C·µí·µñ·µí·µñ ‚âå C`. As `Opposite.op` is the map `C ‚Üí C·µí·µñ`, the functor `C ‚•§ C·µí·µñ·µí·µñ` should be named `opOp` and the functor `C·µí·µñ·µí·µñ ‚•§ C` should be named `unopUnop`. It was previously the opposite; this PR fixes this.

[33mcommit f0d1951adc1e4952c440136325f5ca8617ab491a[m
Author: Mario Carneiro <mcarneir@andrew.cmu.edu>
Date:   Sat Sep 23 09:00:57 2023 +0000

    fix: extension logic for `#align_import` (#7329)
    
    There was a bug in the previous implementation causing none of the mod4's to be saved properly.
    
    
    
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>

[33mcommit 8276aae1c1fa7ec26fe0b8a89ca748f592ac2e27[m
Author: Heather Macbeth <25316162+hrmacbeth@users.noreply.github.com>
Date:   Sat Sep 23 04:39:14 2023 +0000

    chore: move (locally) ringed spaces out of `AlgebraicGeometry` (#7330)
    
    Create new folder `Geometry.RingedSpace` for (locally) ringed spaces and move about half of the contents of `AlgebraicGeometry` there.  Files renamed:
    ```
    AlgebraicGeometry.OpenImmersion.Scheme ‚Üí AlgebraicGeometry.OpenImmersion
    AlgebraicGeometry.RingedSpace ‚Üí Geometry.RingedSpace.Basic
    AlgebraicGeometry.LocallyRingedSpace ‚Üí Geometry.RingedSpace.LocallyRingedSpace
    AlgebraicGeometry.LocallyRingedSpace.HasColimits ‚Üí Geometry.RingedSpace.LocallyRingedSpace.HasColimits
    AlgebraicGeometry.OpenImmersion.Basic ‚Üí Geometry.RingedSpace.OpenImmersion
    AlgebraicGeometry.PresheafedSpace ‚Üí Geometry.RingedSpace.PresheafedSpace
    AlgebraicGeometry.PresheafedSpace.Gluing ‚Üí Geometry.RingedSpace.PresheafedSpace.Gluing
    AlgebraicGeometry.PresheafedSpace.HasColimits ‚Üí Geometry.RingedSpace.PresheafedSpace.HasColimits
    AlgebraicGeometry.SheafedSpace ‚Üí Geometry.RingedSpace.SheafedSpace
    AlgebraicGeometry.Stalks ‚Üí Geometry.RingedSpace.Stalks
    ```
    
    See [Zulip](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/split.20AlgebraicGeometry).

[33mcommit d0f7245e3615cac2a49174c3110ece8b1efcba1d[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Fri Sep 22 18:39:50 2023 +0000

    feat(Topology/Order): add `IsClosed.isLeast_csInf` (#7301)
    
    Also add `IsClosed.isGreatest_csSup`.

[33mcommit 3430a1fb92267f066e4878c7b5c9c7c0cc34bd0b[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Fri Sep 22 17:59:08 2023 +0000

    feat: definition of the distinguished triangles in the opposite category (#7327)

[33mcommit fc88c1f4a7bdaa3aac5d0a9e85a1093faf68bdc4[m
Author: Richard M. Hill <r.m.hill@ucl.ac.uk>
Date:   Fri Sep 22 17:22:32 2023 +0000

    feat(RingTheory/PowerSeries): add lemmas on formal power series (#7294)
    
    Add lemmas on truncation of pormal power series
    
    
    
    Co-authored-by: Richard M. Hill <86743862+rmhi@users.noreply.github.com>

[33mcommit c97e6da04bc2bb4f3eee3b91c971524b34539cf5[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Fri Sep 22 12:58:10 2023 +0000

    feat: the shift on the opposite category (#7324)

[33mcommit 11dbfb2bf343ea5fffd0fb4e5ba7b5e7b084d40b[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Fri Sep 22 11:29:25 2023 +0000

    chore: exactly 4 spaces in subsequent lines for def (#7321)
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit d1b874501d3f903e699cb5ee816f86280482fe8c[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Fri Sep 22 11:29:24 2023 +0000

    feat: self-adjoint elements commute iff their product is self-adjoint (#7318)

[33mcommit 5f0e89dd5f1b7fed45c1f16b16ac17bd80381ed6[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Fri Sep 22 11:29:23 2023 +0000

    chore: drop redundant LinearMap/LinearEquiv.map_finsupp_sum (#7313)

[33mcommit b68cba430a2bd7b48000c9b0293cda90c5c2713f[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Fri Sep 22 11:29:22 2023 +0000

    chore(Topology/SubsetProperties): rename isCompact_of_isClosed_subset (#7298)
    
    As discussed [on Zulip](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/naming.20in.20docs.23SubsetProperties/near/392310506).
    
    
    Co-authored-by: grunweg <grunweg@posteo.de>

[33mcommit d44ca292ff3e253c9a3629e67ad44fc36a50984e[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Fri Sep 22 11:29:20 2023 +0000

    feat: quasi-isomorphisms of short complexes (#7262)

[33mcommit 1097d1a5b6c83577fe146bd8d87d8f9820c87e81[m
Author: Mario Carneiro <mcarneir@andrew.cmu.edu>
Date:   Fri Sep 22 09:46:43 2023 +0000

    feat: environment extension for `#align_import` (#6926)
    
    Implements the environment extension corresponding to the `#align_import` command. This is a prerequisite for making it work in mathport.
    
    I also made the origin information (git repo & commit) optional, since this may not be available for e.g. local projects, and mathport doesn't need it to work.
    
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>

[33mcommit 1d02ef7075e23700fa7e893bd6835ee513faf961[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Fri Sep 22 08:17:09 2023 +0000

    feat: Zeckendorf's theorem (#6880)
    
    Prove Zeckendorf's theorem: Every natural number can be written uniquely as a sum of distinct non-consecutive Fibonacci numbers.
    
    Instead of proving an `ExistsUnique` statement, I define an equivalence between natural numbers and Zeckendorf representations.
    
    
    
    
    Co-authored-by: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>

[33mcommit 40fe51271f280aecad7143836d2a57f5db97f1fe[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Fri Sep 22 07:38:24 2023 +0000

    chore: Remove `Cat` suffixes (#3730)
    
    These names needn't change in the first place.

[33mcommit 4220ff1efcd57b29714bc5d88c73235f3176219a[m
Author: Scott Morrison <scott@tqft.net>
Date:   Fri Sep 22 06:15:54 2023 +0000

    chore: add further comments in #7291 (#7317)
    
    Just recording an explanation from the review of #7291 into the source code.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 3d4c8815adc64f656c4a0cb58aabf358285289ba[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Fri Sep 22 06:15:53 2023 +0000

    feat: `BoundedSMul` on `Prod` and `Pi` (#7311)
    
    Requested by Sophie Morel. From LeanAPAP.
    
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 43ed95abaa01a0e73eeebddba8b3e07846f90231[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Fri Sep 22 06:15:51 2023 +0000

    chore: exactly 4 spaces in subsequent lines (#7296)
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit b85546bf86f40e2220e2131b7701a2d7c31e904e[m
Author: Scott Morrison <scott@tqft.net>
Date:   Fri Sep 22 06:15:49 2023 +0000

    chore: remove invalid trans argument on EqOn.trans (#7285)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 8a285a60d564e8603ef922d11ef3a784e57c2376[m
Author: Matthew Robert Ballard <matt@mrb.email>
Date:   Fri Sep 22 05:30:27 2023 +0000

    perf (AlgebraicGeometry): tricks to mildly improve performance  (#7306)
    
    These changes mildly improve performance. They are put in place until `AlgebraicGeometry` is refactored.

[33mcommit 4b5f759776e27b25271a5ac30f888a1270e7b5ee[m
Author: Matthew Robert Ballard <matt@mrb.email>
Date:   Fri Sep 22 04:37:14 2023 +0000

    perf (DirectSum.Finsupp): mark `finsuppTensorFinsupp` noncomputable  (#7308)
    
    This shaves off ~13s from this file, see #7103

[33mcommit 28ab4916400ca1d887c6caf605b105988218f327[m
Author: Matthew Robert Ballard <matt@mrb.email>
Date:   Fri Sep 22 04:13:07 2023 +0000

    fix (RingTheory.Kaehler): short cut instances to remove timeouts (#6149)
    
    This obviates the need for bumping timeout limits in `RingTheory.Kaehler` at the expense of explicit instances that Lean should easily be finding.
    
    
    
    Co-authored-by: Kevin Buzzard <k.buzzard@imperial.ac.uk>
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 21c933af396917f3fb3346def5a4f615cdde75e8[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Thu Sep 21 23:28:44 2023 +0000

    chore(Complex/Exponential,PadicNumbers): minor golf (#7303)
    
    Cherry-picked from #7128

[33mcommit 08c9bdd1957e9426474cf75ae07cb8c7323c5b6d[m
Author: Floris van Doorn <fpvdoorn@gmail.com>
Date:   Thu Sep 21 23:09:26 2023 +0000

    fix: deduplicate and make exp notation scoped (#7297)
    
    [Zulip](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/duplicate.20notation.20cexp)

[33mcommit 2e62146c8bd0172326b8feb573199bb812a55268[m
Author: Matthew Robert Ballard <matt@mrb.email>
Date:   Thu Sep 21 20:48:30 2023 +0000

    chore: remove unused unification hints (#7304)
    
    These unification hints appear to do nothing.

[33mcommit 89ce9cfcbb39536b42e740e62d3e6081730b9cb6[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Thu Sep 21 19:25:55 2023 +0000

    feat: the category of `CategoryTheory.Limits.Bicone`s (#7209)
    
    We already had this for `Limits.Cone` and `Limits.Cocone`.
    
    This also promotes `Bicone.toCone` and `Bicone.toCocone` to functors, leaving the old names as a shorthand for `Functor.obj`.

[33mcommit 766dbabf20107762023926c745be855c03337a3d[m
Author: Oliver Nash <github@olivernash.org>
Date:   Thu Sep 21 19:02:02 2023 +0000

    feat: remove `IsNoetherian R L` hypothesis from proof that zero-weight space of a Lie module is nilpotent (#7295)
    
    This is possible thanks to the commit: 63ca289d983f26977a4c956c729ec33b4e2ad0d6

[33mcommit 95aba72345b0a27648e245934bfd7639232d8db3[m
Author: Alex Kontorovich <58564076+AlexKontorovich@users.noreply.github.com>
Date:   Thu Sep 21 17:41:54 2023 +0000

    feat: the Unfolding Trick (#6223)
    
    This PR is a forward port of mathlib3 PR !3#18863
    
    Co-authored-by: Heather Macbeth <25316162+hrmacbeth@users.noreply.github.com>
    
    
    
    Co-authored-by: Matthew Ballard <matt@mrb.email>

[33mcommit 4ac1d22ce3440b9f907357ab528ddd15b17048ee[m
Author: Matthew Robert Ballard <matt@mrb.email>
Date:   Thu Sep 21 16:56:50 2023 +0000

    perf: make some defs noncomputable (#7299)
    
    These declarations in `NormedSpace.OperatorNorm` take an inordinate of time to compile (see #7103).
    
    As there is no actual executable code built upon these definitions currently, we make them `noncomputable` until a better solution arises.

[33mcommit 80106b754a829dae5295b6413ec9d55831bf6fdc[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Thu Sep 21 16:56:49 2023 +0000

    feat(CategoryTheory): the pullback of a shift by a monoid morphism (#7270)

[33mcommit a856ab3b9d53c5837aa4f822be0992d36f781f2d[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Thu Sep 21 15:29:32 2023 +0000

    doc(Topology/SubsetProperties): fix typos (#7289)
    
    
    
    Co-authored-by: grunweg <grunweg@posteo.de>

[33mcommit f328333d3828612e01b700a0bf9ac4ae00be429f[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Thu Sep 21 15:29:31 2023 +0000

    feat(LinearAlgebra/Multilinear): generalize some defs to `Semiring` (#7284)
    
    Also cleanup `FunLike`-related code
    and move code about `Semiring`s to a new section.
    
    For linear equivalences, generalization to a `Semiring` required introducing
    a new `Semiring` argument, so that `R`-linear objects are related
    by an `S`-linear equivalence.

[33mcommit 1b0c36075ddce364253195ff0d5ebd900fac92e3[m
Author: Mario Carneiro <mcarneir@andrew.cmu.edu>
Date:   Thu Sep 21 14:06:38 2023 +0000

    fix: add .hash files to the cache (#7291)
    
    These files are new in v4.1.0. If we don't cache them (or regenerate them, but they are tiny files so there is no reason not to cache them) then lake gets messed up unless you use the `-R` option in the next `lake build`.
    
    
    
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>

[33mcommit a526f3ebfd15b267d66a4130c69e0b947f6ee63b[m
Author: Floris van Doorn <fpvdoorn@gmail.com>
Date:   Thu Sep 21 13:09:08 2023 +0000

    fix: fix coercion of `Heyting.Regular` (#7293)
    
    [Zulip thread](https://leanprover.zulipchat.com/#narrow/stream/113489-new-members/topic/import.20Mathlib.20leads.20to.20Lean.20not.20terminating)

[33mcommit d383329f78ac8ede32891dece0f8ce7caf9ef767[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Thu Sep 21 11:01:58 2023 +0000

    feat: the naive shift on the opposite category (#7268)

[33mcommit 63ca289d983f26977a4c956c729ec33b4e2ad0d6[m
Author: Oliver Nash <github@olivernash.org>
Date:   Thu Sep 21 09:45:57 2023 +0000

    feat: `Hom(N, M)` is Noetherian when `M` is Noetherian and `N` is finitely-generated. (#7276)
    
    
    
    
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 0c7d6fa5bb16b4a1ca9eaa97c01bce48bcac90d5[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Thu Sep 21 09:16:40 2023 +0000

    chore: only four spaces for subsequent lines (#7286)
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit 9fbca06f59749829b28b94be963b5592d591dc6a[m
Author: Alex J Best <alex.j.best@gmail.com>
Date:   Thu Sep 21 02:30:20 2023 +0000

    feat: dont add reviewdog suggestions to draft prs (#7259)
    
    This will allow people a way to silence the bot if its too annoying.
    (thinking of https://github.com/leanprover-community/mathlib4/pull/4197)

[33mcommit 18c578f6953134777ab4cb6230fb527eb66a4504[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Thu Sep 21 01:54:54 2023 +0000

    feat: changeLevel for Dirichlet characters (#7263)
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit 236a4f542ecbc010962f1041a4427a3038f81f82[m
Author: Alex J Best <alex.j.best@gmail.com>
Date:   Wed Sep 20 17:47:56 2023 +0000

    feat: add some lemmas about polynomials and ofNat to enable simplifying with nat literals (#7110)

[33mcommit 96a11c7aac574c00370c2b3dab483cb676405c5d[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Sep 20 16:02:45 2023 +0000

    feat: add `Function.update_eq_const` and `eq_const_of_subsingleton` (#7275)
    
    Also golf `Function.update_apply`.

[33mcommit a959734fb3154edcce30e1e908380bbe3c2125b9[m
Author: Arend Mellendijk <arend.mellendijk@gmail.com>
Date:   Wed Sep 20 14:54:00 2023 +0000

    feat: `Nat.lcm_mul_left` and `Nat.lcm_mul_right` (#6990)
    
    Add two lemmas about `Nat.lcm`. These results mirror [Nat.gcd_mul_left](https://leanprover-community.github.io/mathlib4_docs/Std/Data/Nat/Gcd.html#Nat.gcd_mul_left) present in Std.
    
    
    
    Co-authored-by: Arend Mellendijk <FLDutchmann@users.noreply.github.com>

[33mcommit db04a978b67b2200691f0bd968f334c83261b66a[m
Author: MohanadAhmed <m.a.m.elhassan@gmail.com>
Date:   Wed Sep 20 12:37:16 2023 +0000

    feat: injectivity of multiplication with matrices whose product is 1 (#7266)
    
    Given two matrices $A$ and $B$ whose product is 1 $AB = 1$, then left multiplication/right multiplication with these matrices from the appropriate side is an injection.
    
    Suggested by @Vierkantor  in PR #6042

[33mcommit d7fb6a370ac05949b59a1293ff81ab1703e9667a[m
Author: Patrick Massot <patrickmassot@free.fr>
Date:   Wed Sep 20 12:37:14 2023 +0000

    feat: bump ProofWidgets4 (#7258)

[33mcommit 4026e6f81193cc3417cf989e3cf26d72c99d116a[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Wed Sep 20 11:42:11 2023 +0000

    feat: some theorems about iterated polynomial derivatives (#7274)

[33mcommit a2b2bcfaafed5c8dcf937d7fdb7838c8e9f8b837[m
Author: Alex J Best <alex.j.best@gmail.com>
Date:   Wed Sep 20 09:59:37 2023 +0000

    chore: another non-class instance (#7250)
    
    Following https://github.com/leanprover-community/mathlib4/pull/7245, https://leanprover.zulipchat.com/#narrow/stream/270676-lean4/topic/isClass.3F.20panic!/near/391779504.
    
    There is one exception that it is unclear how to fix, it seems lean makes the internal declarations in a block of mutual instances also instances perhaps? Seeing as it is internal I hope it won't cause too much trouble

[33mcommit 14b1439dca57f646f3bec929e119ef9e39bbaa0c[m
Author: Xavier Roblot <46200072+xroblot@users.noreply.github.com>
Date:   Wed Sep 20 09:38:15 2023 +0000

    feat(NumberTheory.NumberField.CanonicalEmbedding): add exists_ne_zero_mem_ringOfIntegers_lt (#5650)
    
    This PR proves the following result:
    ```lean
    theorem exists_ne_zero_mem_ringOfIntegers_lt (h : minkowski_bound K < volume (convex_body_lt K f)) :
         ‚àÉ (a : ùìû K), a ‚â† 0 ‚àß ‚àÄ w : InfinitePlace K, w a < f w
    ```
    where `f : InfinitePlace K ‚Üí ‚Ñù‚â•0` and `convex_body_lt K f` is the set of points `x` such that `‚Äñx w‚Äñ < f w` for all infinite places `w`. This is a key result in the proof of Dirichlet's unit theorem #5960

[33mcommit f2ec396b7ebb2f6bb221ae2e5143c801885e66c2[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Wed Sep 20 09:16:07 2023 +0000

    perf: make `QuadraticForm.tensorDistrib` noncomputable (#7265)
    
    It's actually (trivially) computable, but Lean takes such an extraordinarily long time to compile it that its better to pretend that it isn't.
    
    Another instance of #7103.

[33mcommit 2c3ee375d609fb8e22e675d46e5e19a145f10617[m
Author: damiano <adomani@gmail.com>
Date:   Wed Sep 20 04:57:33 2023 +0000

    chore(test/*): add `test_sorry` axiom in tests to make them less noisy (#6868)
    
    This PR adds `axiom test_sorry` for the `sorry`s in tests, in order to remove the noisy output of `sorry`.
    
    In `test/rewrites.lean` and `test/IsCompact.lean` some of the `#guard_msgs` are `#guard_msgs(warning)`, due to further messages.
    
    Affected files:
    ```
    test/apply_fun.lean
    test/cancel_denoms.lean
    test/Change.lean
    test/congr.lean
    test/congrm.lean
    test/convert.lean
    test/DefEqTransformations.lean
    test/FBinop.lean
    test/GCongr/inequalities.lean
    test/GeneralizeProofs.lean
    test/ImplicitUniverses.lean
    test/InstanceTransparency.lean
    test/LibrarySearch/IsCompact.lean
    test/LiftLets.lean
    test/linarith.lean
    test/MfldSetTac.lean
    test/mod_cases.lean
    test/Monotonicity.lean
    test/nontriviality.lean
    test/norm_num.lean
    test/push_neg.lean
    test/Real.lean
    test/rewrites.lean
    test/ring.lean
    test/Zify.lean
    ```
    
    [Zulip discussion](https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/noisy.20tests)

[33mcommit f1e1b39899498bf70f6ce57039873027a8ac6a43[m
Author: Chris Hughes <chrishughes24@gmail.com>
Date:   Wed Sep 20 00:51:48 2023 +0000

    feat(ModelTheory): The theory of fields of charP (#7188)
    
    
    
    Co-authored-by: Johan Commelin <johan@commelin.net>

[33mcommit ef379b92d91714f42327c714712a0d07264b7d6c[m
Author: Kyle Miller <kmill31415@gmail.com>
Date:   Tue Sep 19 18:49:01 2023 +0000

    fix: make linarith recognize not-equals when splitNe is true (#7255)
    
    This is fixing an error discovered in an example reported by Dan Velleman [on Zulip](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/.E2.9C.94.20Strange.20linarith.20behavior/near/390786695).

[33mcommit 8da7f369150d3ab5cb843226b2d91d84c55c0e7e[m
Author: EmilieUthaiwat <emiliepathum@gmail.com>
Date:   Tue Sep 19 14:59:09 2023 +0000

    feat: add Prod.associated_iff (#7235)
    
    
    
    
    Co-authored-by: EmilieUthaiwat <102412311+EmilieUthaiwat@users.noreply.github.com>

[33mcommit fe39449a52435740a920a996c38a2b7c688c3a7e[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Tue Sep 19 14:59:07 2023 +0000

    chore: rm `@simp` from factorial (#7078)
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit 6af751e84a5e8d15f0d0d2d1b279ad4f7da7f28e[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Tue Sep 19 14:38:03 2023 +0000

    feat: completion of the basic ShortComplex.Homology API (#7195)
    
    This PR marks the completion of the file `Algebra.Homology.ShortComplex.Homology`. It adds various API definitions and lemmas, including a comparison of the homology in a category and its opposite category.
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit 96747a0e50085ade924d67b8158c36cf786c93c0[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Tue Sep 19 14:15:00 2023 +0000

    feat: Dirichlet character (#7010)
    
    - [x] depends on: #7013
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>
    Co-authored-by: laughinggas <58670661+laughinggas@users.noreply.github.com>

[33mcommit 904dc41a15d583330e29144c584ae05ae4bfac27[m
Author: Michail Karatarakis <mixkarat@gmail.com>
Date:   Tue Sep 19 12:32:54 2023 +0000

    port the clean tactic from lean 3 to lean 4 (#5909)
    
    
    
    
    Co-authored-by: Kyle Miller <kmill31415@gmail.com>

[33mcommit 172bfffa8f5dac91317780938797c609c373541e[m
Author: Anatole Dedecker <anatolededecker@gmail.com>
Date:   Tue Sep 19 11:30:25 2023 +0000

    chore: fix docstrings in RingTheory.Nakayama (#7253)

[33mcommit 750d5a43258f83f39a2bb1190f233b7880a4ec08[m
Author: Chris Hughes <chrishughes24@gmail.com>
Date:   Tue Sep 19 11:30:24 2023 +0000

    feat(ModelTheory): the theory of fields (#7186)

[33mcommit 4cfea61757223840de86f128d26574c01527657b[m
Author: Junyan Xu <junyanxumath@gmail.com>
Date:   Tue Sep 19 11:30:23 2023 +0000

    feat(UniqueProds): two theorems of Strojnowski (#7171)
    
    
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>

[33mcommit dd7a1c24b009a303dcedf38189a0ef493facf552[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Tue Sep 19 11:09:01 2023 +0000

    feat: relations between cycles, opcycles and homology of short complexes (#7194)

[33mcommit 2c07b501651da1a3d50bb25af2a101356c36ca50[m
Author: Anne Baanen <vierkantor@vierkantor.com>
Date:   Tue Sep 19 10:04:40 2023 +0000

    feat: `IsDedekindRing` is `IsDedekindDomain` minus `IsDomain` (#6127)
    
    This PR defines `IsDedekindRing` as `IsDedekindDomain` without the bundled `IsDomain` hypothesis.
    
    Zulip thread: https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/Should.20.60IsDedekindDomain.60.20extend.20.60IsDomain.60.3F
    
    
    
    Co-authored-by: Anne Baanen <Vierkantor@users.noreply.github.com>

[33mcommit c299a4292abc7649819a1e499bfb1c8e345158c6[m
Author: MohanadAhmed <m.a.m.elhassan@gmail.com>
Date:   Tue Sep 19 07:20:50 2023 +0000

    feat (Data/Matrix/Blocks): simp lemmas for toBlocks of diagonal matrices (#7249)
    
    Lemmas `toBlocks‚ÇÅ‚ÇÅ_diagonal`, `toBlocks‚ÇÇ‚ÇÇ_diagonal`, `toBlocks‚ÇÅ‚ÇÇ_diagonal`, `toBlocks‚ÇÇ‚ÇÅ_diagonal` to make dealing with sub blocks of diagonal matrices a bit easier
    
    Useful for PR #6042

[33mcommit 6d8747c62a7d2d0ba04b9bb22aeb820761868d66[m
Author: Junyan Xu <junyanxumath@gmail.com>
Date:   Tue Sep 19 07:20:48 2023 +0000

    chore(GroupCat/Injective): golf  (#7204)
    
    
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>

[33mcommit 44ec4f1b95f0217c1dd7c5e86edaf7eb961483ac[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Tue Sep 19 07:20:47 2023 +0000

    feat: the type of cocycles in the complex of morphisms between cochain complexes (#7201)
    
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit 7b9379f757a189e91d80999bd0e23c47ae9f2c49[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Tue Sep 19 07:20:46 2023 +0000

    feat: more API for the homology of short complexes (#7193)
    
    This PR develops the homology API. This includes the introduction of the notion of category with homology, i.e. a category where all short complexes have homology.

[33mcommit 957593fb268c7762c3c2c34fd4bfe4f7e709178f[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Tue Sep 19 06:23:54 2023 +0000

    chore(CategoryTheory): pp_dot for `NatTrans` and `Equivalence` (#7241)
    
    The goal view gets pretty unreadable when working with `Equivalence`s without these.

[33mcommit 98e78f90ec6f93268c84b413fdae7dce5cbee0e6[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Sep 19 04:03:05 2023 +0000

    refactor(Topology/MetricSpace): remove `Metric.Bounded` (#7240)
    
    Use `Bornology.IsBounded` instead.

[33mcommit 28b8e22add9f3cdb5f8c6b1424f355e230c9430c[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Sep 19 03:31:25 2023 +0000

    chore(LpSpace): golf (#7214)
    
    Cherry-picked from #6839

[33mcommit d715e38b156b9d43f0a712df4375766544b0af89[m
Author: Scott Morrison <scott@tqft.net>
Date:   Tue Sep 19 02:04:13 2023 +0000

    feat: rw? uses the first suggestion (#7247)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 3fa0c3fe8a2dbe8e8a69dd29ba08d58099ed9a40[m
Author: Alex J Best <alex.j.best@gmail.com>
Date:   Tue Sep 19 02:04:11 2023 +0000

    chore: fix non-class instances in factorization (#7245)
    
    See https://leanprover.zulipchat.com/#narrow/stream/270676-lean4/topic/isClass.3F.20panic!/near/391792347

[33mcommit 50703451af110776dd5e52d095766ae9915a042b[m
Author: Scott Morrison <scott@tqft.net>
Date:   Tue Sep 19 01:45:16 2023 +0000

    feat: update to leanprover/std4#258 (#7248)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 6d27aa8f4f3e15d6a98c360fa42aea0d75217c4c[m
Author: grunweg <grunweg@posteo.de>
Date:   Mon Sep 18 22:14:14 2023 +0000

    doc(Topology/Metric/Lipschitz): add a few more docstrings (#7233)

[33mcommit 01d4aaa85135b7df3c0183cce615becd993637e3[m
Author: damiano <adomani@gmail.com>
Date:   Mon Sep 18 20:19:55 2023 +0000

    docs(Util/Import): clarify `#find_home!` docs (#7242)
    
    Include in the docs for `#find_home!` a clarification, explaining a possible misunderstanding pointed out by @riccardobrasca.  The outcome of `#find_home!` could still be the current lemma.
    
    Also mention that the best results are obtained inside a file with `import Mathlib`.

[33mcommit 4575c79cba16392dd5d06b20384006ad9babb900[m
Author: Oliver Nash <github@olivernash.org>
Date:   Mon Sep 18 18:26:16 2023 +0000

    chore: refactor Lie algebra weight spaces (#7210)
    
    The key change is the new definition `LieModule.weightSpaceOf` which shows that the eigenspaces of the action of a single element of a Lie algebra on a representation are Lie submodules. I need to use this fact to develop the theory further.

[33mcommit 5f9ca856597930ba085c3d9e76d749667d192d19[m
Author: Eric Rodriguez <ericrboidi@gmail.com>
Date:   Mon Sep 18 17:00:44 2023 +0000

    fix: use `match` with `Decidable`. (#7232)
    
    This works around leanprover/lean4#2552 - fix found by @b-mehta. I changed the `Nat` instance where the issue was found, and some `List` instances in hope it fixes mysterious slowdowns with `Finset` decidability. Any more instances changed would probably be good.

[33mcommit 8658bfa7a1e6a62806c1761b4b01dc8270e30279[m
Author: Junyan Xu <junyanxumath@gmail.com>
Date:   Mon Sep 18 15:32:47 2023 +0000

    chore(Finsupp/Lex): syntactically better data fields in Partial/LinearOrder instances (#7229)

[33mcommit a150006ee59356e4e881f2cd69be447d0e9b5699[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Mon Sep 18 15:32:46 2023 +0000

    feat(LinearAlgebra/TensorProduct/Prod): `TensorProduct` distributes over `Prod` (#7226)
    
    As requested [over a year ago](https://leanprover.zulipchat.com/#narrow/stream/217875-Is-there-code-for-X.3F/topic/tensor.20product.20distributes.20over.20.60prod.60/near/290752673) by @kbuzzard.

[33mcommit d9e7e897cb8ac01e1d7ac3edf2a7308039370fec[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Mon Sep 18 15:32:44 2023 +0000

    feat(LinearAlgebra/QuadraticForm/TensorProduct): commutativity and associativity (#7223)
    
    This was discussed at LFTCM regarding the Grothendieck-Witt ring of quadratic forms.
    
    These could eventually be used to show that #6987 forms a braided monoidal category.

[33mcommit 0d6cb15fd5090c8010a7b74ec023b31d338221fe[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Mon Sep 18 15:32:43 2023 +0000

    feat: functors which preserve homology (#7197)

[33mcommit 712ddeca08695b69b357aac1040d1641ec147e43[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Mon Sep 18 15:32:41 2023 +0000

    feat: study of the left/right homology comparison morphism (#7192)
    
    In this PR, it is shown that a short complex has homology iff it has both left and right homology and that the comparison morphism between the two is an isomorphism.

[33mcommit e7a507d66227467c68432e9102601c89876eafb6[m
Author: Chris Hughes <chrishughes24@gmail.com>
Date:   Mon Sep 18 15:32:40 2023 +0000

    feat(ModelTheory): FreeCommRing to term in the language of rings (#7187)

[33mcommit 86fa78904617a77f296845ed7796b9cf988e76c2[m
Author: Junyan Xu <junyanxumath@gmail.com>
Date:   Mon Sep 18 15:32:39 2023 +0000

    feat: TwoUniqueProds (#7169)
    
    + Introduce `TwoUniqueProds/Sums`: let `R[G]` be a monoid algebra over a semiring `R` without zero-divisors. A natural sufficient condition for `R[G]` to have no zero-divisors is that `G` has `UniqueProds`, as is shown by [MonoidAlgebra.instNoZeroDivisorsOfUniqueProds](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Algebra/MonoidAlgebra/NoZeroDivisors.html#MonoidAlgebra.instNoZeroDivisorsOfUniqueProds). Similarly, a natural sufficient condition for `R[G]` to have only trivial units (of the form `rg` with `r` a unit in `R` and `g` a unit in `G`) is that `G` has `TwoUniqueProds`, but we don't prove this yet in this PR. `TwoUniqueProds G` is also a natural sufficient condition in order for factors of a homogeneous element in an algebra graded by `G` without zero-divisors to themselves be homogeneous.
    
    + Show `TwoUniqueProds` implies `UniqueProds`: `TwoUniqueProds.toUniqueProds`
    
    + Strengthen `of_Covariant_right/left` to have `TwoUniqueProds` as conclusion
    
    + Extract `of_image_filter` from the proof of the instance `UniqueProds (‚àÄ i, G i)` and use it also in the proof of `TwoUniqueProds (‚àÄ i, G i)`
    
    + Use some private defs (starting from `private abbrev I`) to transfer `(Two)UniqueProds (‚àÄ i, G i)` instances to `(Two)UniqueProds (G √ó H)`
    
    + Move the `[Module ‚Ñö G] : UniqueSums G` instance from NoZeroDivisors.lean to UniqueProds.lean and strengthen to `TwoUniqueSums`
    
    New lemmas about UniqueMul:
    + `of_card_le_one`, `iff_card_le_one`, `UniqueMul_of_TwoUniqueMul`
    
    
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>

[33mcommit 6aa66fafc3a3fcf163b2c7456186ec4d451b72b0[m
Author: Eric Rodriguez <ericrboidi@gmail.com>
Date:   Mon Sep 18 15:32:38 2023 +0000

    chore: tidy up a factorization proof (#7164)
    
    This used to not work because the finsupp poisoned the computability, but it seems fine now. Also slightly tidied it whilst I was there.
    
    However, I'm not sure if this is actually wise to keep as something towards `Sort*`: the created term on `k + 2` is not pretty and has an `Eq.mpr`.

[33mcommit a2e8c03e04a5ed62fe80e532374c63f1a17cf369[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Mon Sep 18 15:32:36 2023 +0000

    chore: move some lemmas about LinearMap pow/comp earlier (#7158)

[33mcommit 4b30681ee56a3a501ef360136ee89da045479cee[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Mon Sep 18 15:32:35 2023 +0000

    feat: the category of quadratic modules, QuadraticModuleCat (#6987)
    
    The motivations here are:
    * `QuadraticModuleCat.cliffordAlgebra : QuadraticModuleCat.{u} R ‚•§ AlgebraCat.{u} R` (in this PR)
    * The project to formalize the Witt ring of quadratic forms ended up needing `QuadraticModuleCat`, which came up at LFTCM2023

[33mcommit 00fdd1f47798ccd3fbe86bad99443071e2868295[m
Author: Anatole Dedecker <anatolededecker@gmail.com>
Date:   Mon Sep 18 13:50:48 2023 +0000

    chore: fix docstring of IsLocalization (#7234)

[33mcommit 3882a68b10ec96d1de94a34a69052c57b4ef8420[m
Author: Oliver Nash <github@olivernash.org>
Date:   Mon Sep 18 13:50:46 2023 +0000

    chore: disable `pp.proof.withType` globally (#7211)
    
    Related [Zulip thread](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Pretty.20printing.20.60proofs.2EWithType.60)

[33mcommit 3e44bb07945dcb375a65c38e1ad3a1690827e2d5[m
Author: Jakob von Raumer <jakob@von-raumer.de>
Date:   Mon Sep 18 13:50:45 2023 +0000

    chore: replace ConeMorphism.Hom by ConeMorphism.hom (#7176)

[33mcommit f8add0e9d30f8f94dacc9f4499f312a3745996a6[m
Author: grunweg <grunweg@posteo.de>
Date:   Mon Sep 18 13:50:44 2023 +0000

    doc(Geometry/Manifold): manifolds are not required to be Hausdorff nor second countable (#7159)
    
    For many results, these assumptions are not required. As finite-dimensional manifolds are commonly assumed to be Hausdorff and second countable, it seems worth to call this out explicitly.

[33mcommit 9dd5d676c7b1db2e500b57a10a46a7b076791fbd[m
Author: damiano <adomani@gmail.com>
Date:   Mon Sep 18 13:50:42 2023 +0000

    chore(test/DeriveToExpr + search/BestFirst): quiet two tests with large outputs (#7156)
    
    Removes approximately 350 lines of noisy output from `test`.
    
    [Zulip discussion](https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/noisy.20tests)

[33mcommit 5553d1d4d9cb54aba8a3131a473b458da599a149[m
Author: Christopher Hoskin <christopher.hoskin@gmail.com>
Date:   Mon Sep 18 13:50:41 2023 +0000

    fix(Topology/Order/UpperLowerSetTopology): Fix theorem names in UpperLowerSetTopology to match mathlib4 conventions (#6557)
    
    Modify lemma names in `UpperLowerSetTopology` to meet Mathlib4 conventions.
    
    
    
    Co-authored-by: Christopher Hoskin <mans0954@users.noreply.github.com>

[33mcommit a19a62d999ed9bb8fc874ff064d6a7c0efca1091[m
Author: Jon Eugster <eugster.jon@gmail.com>
Date:   Mon Sep 18 12:27:25 2023 +0000

    fix: `replace` does not work when importing `Mathlib.Tactic.Replace` (#7080)
    
    `replace a := f a` does not work when only importing `Mathlib.Tactic.Replace`.
    
    
    
    Co-authored-by: Kyle Miller <kmill31415@gmail.com>

[33mcommit e70f8800f70f89b102ad7469128ace674213e1e5[m
Author: Scott Morrison <scott@tqft.net>
Date:   Mon Sep 18 06:07:07 2023 +0000

    chore: bump to std4#261 (#7141)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit b955f55bfacf6e8680762d296fd89754a598c01d[m
Author: Junyan Xu <junyanxumath@gmail.com>
Date:   Mon Sep 18 04:21:04 2023 +0000

    chore: replace `minpoly.eq_of_algebraMap_eq` by `algebraMap_eq` (#7228)
    
    Also changes the repetitive names `minpoly.minpoly_algHom/Equiv` to `minpoly.algHom/Equiv_eq`

[33mcommit dd840899506c263979b49c43296a729d55269d82[m
Author: Jujian Zhang <jujian.zhang1998@outlook.com>
Date:   Mon Sep 18 04:21:03 2023 +0000

    feat: rework `StrictSeries` to `RelSeries` (#7221)
    
    I amend the definition of `StrictSeries` according to [this thread](https://leanprover.zulipchat.com/#narrow/stream/144837-PR-reviews/topic/StrictSeries.20!4.233858.2C.20!4.233852/near/356952195)
    
    Now a `RelSeries r` of length `n` is $a_0 \stackrel{r}{\to} a_1 \stackrel{r}{\to} \dots \stackrel{r}{\to} a_n$.
    
    In case `r` is transitive, then `p : RelSeries r` implies that the underlying function of `r` is strictly monotonic.
    
    Then if $\alpha$ is a preordered set, an `LTSeries` is a `RelSeries (. < .)` and its Krull dimension is defined as the supremum of length of `LTSeries`.
    
    For future: now `CompositionSeries` is `RelSeries jordan_holder_lattice.is_maximal` and rework the Jordan Holder file
    
    
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>
    Co-authored-by: Scott Carnahan <128885296+ScottCarnahan@users.noreply.github.com>

[33mcommit 559a3fe0b2ea889380fe7563ee98adf442687d91[m
Author: James Gallicchio <jamesgallicchio@gmail.com>
Date:   Mon Sep 18 01:46:36 2023 +0000

    chore: update to std4#100 (#6743)
    
    Std bump patch for https://github.com/leanprover/std4/pull/100
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 85699baf752593cb2c79fe5d1e769778f8a7d898[m
Author: Bolton Bailey <bolton.bailey@gmail.com>
Date:   Sun Sep 17 19:35:28 2023 +0000

    feat: add lemma eq_C_of_Empty (#7208)
    
    Adds a new lemma

[33mcommit 9ebe3593aabcd995614a203b1bc5041b10eac98e[m
Author: negiizhao <egresf@gmail.com>
Date:   Sun Sep 17 16:14:30 2023 +0000

    feat: add lemma `Quotient.exists` (#7220)
    
    Also `forall_quotient_iff {Œ± : Type*} [r : Setoid Œ±] ...` -> `Quotient.forall {Œ± : Sort*} {s : Setoid Œ±} ...`

[33mcommit dd1c3d04a317a2e1ec7967673c13a7f8223a1fe7[m
Author: negiizhao <egresf@gmail.com>
Date:   Sun Sep 17 13:55:11 2023 +0000

    chore: redefine `Setoid.correspondence` for better defeq (#7212)

[33mcommit bfaffcf10e6d088ae7c1c22462cbd7ae46f6c358[m[33m ([m[1;33mtag: v4.1.0-rc1[m[33m)[m
Author: Scott Morrison <scott@tqft.net>
Date:   Sun Sep 17 11:27:10 2023 +0000

    chore: bump to v4.1.0-rc1 (2nd attempt) (#7216)
    
    
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 193761250a9869327056b499a7f49d676ed5e3a9[m
Author: Patrick Massot <patrickmassot@free.fr>
Date:   Sun Sep 17 06:02:31 2023 +0000

    fix: don't zeta-expand in filter_upwards (#7213)

[33mcommit 8b0612f609ca39f77644674745694da2f1e6adb7[m
Author: michaellee94 <michael.a.rodrigues.lee@gmail.com>
Date:   Sun Sep 17 04:53:23 2023 +0000

    feat: Add analytic structure groupoid on models with corners (#6386)
    
    
    
    Co-authored-by: Michael Lee <michael_lee1@brown.edu>

[33mcommit 0413b3dfe9433bd2c3de2736f8ca3cc2077602ac[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Sun Sep 17 04:08:23 2023 +0000

    fix: actually run the linter (#7199)
    
    After the next bump, `lake exe runLinter` will run the linter on `Std` not on `Mathlib`. To play it safe, we make it very clear that we want to run against Mathlib.

[33mcommit 2f19a6b1924e700518c8d9332c1379b1fdfe9c10[m
Author: damiano <adomani@gmail.com>
Date:   Sat Sep 16 19:24:52 2023 +0000

    feat(AddMonoidAlgebra*): add notation `R[A]` for `addMonoidAlgebra R A` (#7203)
    
    Introduce the notation `R[A]` for `AddMonoidAlgebra R A`.  This is to align `Mathlib`s notation with the standard notation for [group ring](https://en.wikipedia.org/wiki/Group_ring).
    
    The notation is scoped in `AddMonoidAlgebra` and there is *no* analogous notation for `MonoidAlgebra`.
    
    I only used the notation for single-character `R` and `A`s and only in the range `[a-zA-Z]`.
    
    The extra lines are all in `Mathlib/Algebra/MonoidAlgebra/Basic.lean`.  They are accounted for by extra text in the doc-module and the actual notation.
    
    Affected files:
    ```bash
    Counterexamples/ZeroDivisorsInAddMonoidAlgebras
    Algebra/AlgebraicCard
    Algebra/MonoidAlgebra/Basic
    Algebra/MonoidAlgebra/Degree
    Algebra/MonoidAlgebra/Division
    Algebra/MonoidAlgebra/Grading
    Algebra/MonoidAlgebra/NoZeroDivisors
    Algebra/MonoidAlgebra/Support
    Data/Polynomial/AlgebraMap
    Data/Polynomial/Basic
    Data/Polynomial/Eval
    Data/Polynomial/Laurent
    RingTheory/FiniteType
    ```

[33mcommit eec55af474ea5763bc724b24779cba53b23d7d2d[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Sat Sep 16 17:31:03 2023 +0000

    feat: base change of Clifford algebras (#6778)
    
    The main result here is `CliffordAlgebra (Q.baseChange A) ‚âÉ‚Çê[A] A ‚äó[R] CliffordAlgebra Q`; that is, the `A ‚äó[R]` can be moved from `_ : QuadraticForm A (A ‚äó[R] _)` to the outside and vice versa.

[33mcommit 2cd05f06195dd30a530b87e7eb3282fd267fdc7a[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Sat Sep 16 14:32:22 2023 +0000

    feat(LinearAlgebra/QuadraticForm/Basic): more lemmas (#7196)
    
    This also adds a handful of missing lemmas about `Set.center` for inverses and numeric literals.

[33mcommit 57a494b0a4f0bb7273957b8fbf8eed3e3ca794ba[m
Author: damiano <adomani@gmail.com>
Date:   Sat Sep 16 12:55:41 2023 +0000

    docs(Algebra/MonoidAlgebra/Basic): fix order of arguments in docs (#7202)
    
    The arguments to `AddMonoidAlgebra` were reversed with respect to normal use in the module docs.  They also used `Œ±` instead of `R`.  For reference, these are the actual definitions:
    
    ```lean
    -- Data/MvPolynomial/Basic
    def MvPolynomial (œÉ : Type*) (R : Type*) [CommSemiring R] :=
      AddMonoidAlgebra R (œÉ ‚Üí‚ÇÄ ‚Ñï)
    
    -- Data/Polynomial/Basic
    structure Polynomial (R : Type*) [Semiring R] where ofFinsupp ::
      toFinsupp : AddMonoidAlgebra R ‚Ñï
    ```

[33mcommit 1fa13fb0c5b2b03073245ecc37ab5748f4cc0358[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Sat Sep 16 12:55:39 2023 +0000

    chore: use `_root_.map_sum` more consistently (#7189)
    
    Also `_root_.map_smul` when in the neighbourhood.

[33mcommit e10f5f89aad5ccea7b2494755168106ace6dee17[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Sat Sep 16 12:55:38 2023 +0000

    doc(Algebra/Category/MonCat/Colimits): label `#print` remarks as only working in Lean 3 (#7183)
    
    This also fixes some markdown issues.

[33mcommit 96806534a3a47c26cec8985be643f13c2a1b9c92[m
Author: negiizhao <egresf@gmail.com>
Date:   Sat Sep 16 08:38:35 2023 +0000

    chore: fix name `*.Lf` (#7163)

[33mcommit 45b31dda2ce52960302b158e06f7d1f539fd94ec[m
Author: Pol'tta / Miyahara K≈ç <pol_tta@outlook.jp>
Date:   Sat Sep 16 07:01:29 2023 +0000

    chore: replace `Fin.castIso` and `Fin.revPerm` with `Fin.cast` and `Fin.rev` for the bump of Std (#5847)
    
    Some theorems in `Data.Fin.Basic` are copied to Std at the recent commit in Std.
    These are written using `Fin.cast` and `Fin.rev`, so declarations using `Fin.castIso` and `Fin.revPerm` in Mathlib should be rewritten.
    
    
    
    Co-authored-by: Pol'tta / Miyahara K≈ç <52843868+Komyyy@users.noreply.github.com>
    Co-authored-by: Johan Commelin <johan@commelin.net>

[33mcommit 67b54e26a290135bcb4fbb70bc7c678bf3e59827[m
Author: Xavier Roblot <46200072+xroblot@users.noreply.github.com>
Date:   Sat Sep 16 00:55:39 2023 +0000

    feat: remove the diamond for Complex.measureSpace (#6832)
    
    We remove the instance
    ```lean
    instance measureSpace : MeasureSpace ‚ÑÇ :=  ‚ü®Measure.map basisOneI.equivFun.symm volume‚ü©
    ```
    in `MeasureTheory.Measure.Lebesgue.Complex` since `‚ÑÇ` has already a `measureSpace` instance coming from its `InnerProductSpace` structure over `‚Ñù`, and fix the proof of `volume_preserving_equiv_pi`.
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit d7030312d9695e27ffe77ad72f57783389f2ef51[m
Author: palalansouk√Æ <hodellurt@gmail.com>
Date:   Fri Sep 15 18:54:10 2023 +0000

    feat(Data/List/Range + Data/Finset/Sort): List.finRange lemmas (#7184)
    
    Prove Fin.sort_univ and List.indexOf_finRange discussed in https://leanprover.zulipchat.com/#narrow/stream/113489-new-members/topic/.E2.9C.94.20value.20of.20.60fintypeEquivFin.60
    
    
    
    Co-authored-by: palalansouk√Æ <73170405+iehality@users.noreply.github.com>
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit a962d3b9aa0d02195cb54648bac22671dfd0efc6[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Fri Sep 15 18:54:09 2023 +0000

    chore(Algebra/Category/MonCat/Colimits): name induction cases (#7181)
    
    This isn't any shorter, but it removes a lot of sequential underscores!

[33mcommit a9e352eeea7c3f0416ef448e805701f7e72dd541[m
Author: Joachim Breitner <mail@joachim-breitner.de>
Date:   Fri Sep 15 18:54:07 2023 +0000

    feat: Pmf.integral_eq_sum (#6454)
    
    The main result is that the integral (i.e. the expected value) with regard to a
    measure derived from a `Pmf` is a sum weighted by the `Pmf`.
    
    It also provides the expected value for specific probability mass functions
    (bernoulli so far).

[33mcommit 6d72cf86a7472d67282fd302b045f68ea964cc1d[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Fri Sep 15 18:54:06 2023 +0000

    refactor: redefine `Monoid.Coprod` (#2214)
    
    - Redefine `Monoid.Coprod`.
    - Use `@[to_additive]`.
    - Expand API.

[33mcommit e92d6643527a05eec0e9baa2a1394d32881603e6[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Fri Sep 15 17:45:49 2023 +0000

    chore: golf linearIsometry_apply_dfinsupp_sum_single (#7191)

[33mcommit b26eaa549e13645bb26314087df11f4aa36574fb[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Fri Sep 15 17:45:48 2023 +0000

    chore: realign map_dfinsupp_sum/prod (#7190)

[33mcommit f8ec4777a2a43e24f80c75b0cd70e359abb76bf6[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Fri Sep 15 17:45:47 2023 +0000

    chore: mv `mul_X_add_nat_cast_comp` and `mul_X_sub_int_cast_comp` (#7175)
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit 42f80cb483db9da3c3152bc66f39d398e6ed1009[m
Author: Chris Hughes <chrishughes24@gmail.com>
Date:   Fri Sep 15 17:12:16 2023 +0000

    feat(ModelTheory): the language of rings (#7185)
    
    
    
    Co-authored-by: Chris Hughes <33847686+ChrisHughes24@users.noreply.github.com>

[33mcommit fb84a08fd1133f30f8e5fdae671626bd966a125b[m
Author: Jujian Zhang <jujian.zhang1998@outlook.com>
Date:   Fri Sep 15 17:12:15 2023 +0000

    feat : Abelian groups has enough injectives (#7157)

[33mcommit 481b5fc5f7c789da77a2ddfcde045ab49dab89a3[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Fri Sep 15 17:12:13 2023 +0000

    feat: Equivalence between Alexandrov-discrete spaces and preorders (#6989)
    
    Construct the category equivalence between Alexandrov-discrete spaces and preorders

[33mcommit 121504750e8d3c78f04ae8e7ab58f11ce647f691[m
Author: Matthew Robert Ballard <matt@mrb.email>
Date:   Fri Sep 15 17:12:12 2023 +0000

    perf: remove overspecified fields (#6965)
    
    This removes redundant field values of the form `add := add` for smaller terms and less unfolding during unification.
    
    A list of all files containing a structure instance of the form `{ a1, ... with x1 := val, ... }` where some `xi` is a field of some `aj` was generated by modifying the structure instance elaboration algorithm to print such overlaps to stdout in a custom toolchain.
    
    Using that toolchain, I went through each file on the list and attempted to remove algebraic fields that overlapped and were redundant, eg `add := add` and not `toFun` (though some other ones did creep in). If things broke (which was the case in a couple of cases), I did not push further and reverted.
    
    It is possible that pushing harder and trying to remove all redundant overlaps will yield further improvements.

[33mcommit 40b58304ad9cb6913d2d4e97172b2c306fdb61f2[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Fri Sep 15 16:52:30 2023 +0000

    Revert "chore: bump to v4.1.0-rc1 (#7174)" (#7198)
    
    This reverts commit 6f8e81040eae7655f51d145b8026569b91d66e0d.
    Unfortunately this bump was not linted correctly, as CI did not run `runLinter Mathlib`.
    
    We can unrevert once that's fixed.

[33mcommit 6f8e81040eae7655f51d145b8026569b91d66e0d[m
Author: Scott Morrison <scott@tqft.net>
Date:   Fri Sep 15 12:48:13 2023 +0000

    chore: bump to v4.1.0-rc1 (#7174)
    
    Some changes have already been review and delegated in #6910 and #7148.
    
    The diff that needs looking at is https://github.com/leanprover-community/mathlib4/pull/7174/commits/64d6d07ee18163627c8f517eb31455411921c5ac
    
    The [std bump PR](https://github.com/leanprover/std4/pull/263) was insta-merged already!
    
    
    
    Co-authored-by: leanprover-community-mathlib4-bot <leanprover-community-mathlib4-bot@users.noreply.github.com>
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 526ab1418d1d1fdb65556b6eda2cb731a9fdaf9b[m
Author: grunweg <grunweg@posteo.de>
Date:   Fri Sep 15 11:27:37 2023 +0000

    doc(Topology/Bases): mention Lindel√∂f property (#7160)

[33mcommit b449971adb0e412bdaed99a48b9c233a06838899[m
Author: Joachim Breitner <mail@joachim-breitner.de>
Date:   Fri Sep 15 11:27:36 2023 +0000

    feat(Order/WithBot, Data/Real/ENNReal): coe_injective (#7153)
    
    There already exists `NNReal.coe_injective` and
    `WithBot.coe_injective`, so this adds the analogous
    `ENNReal.coe_injective` and `WithTop.injective`.

[33mcommit 740d16ac5af60b9ff4b25c10c8173fe7bc3be084[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Fri Sep 15 10:01:20 2023 +0000

    feat: the quotient category is preadditive (#7049)
    
    It is shown in this PR that when an equivalence relation on morphisms in a preadditive category is compatible with the addition, then the quotient category is preadditive.

[33mcommit 31f3bd86a3d117871a386d6becb20599d07b3138[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Fri Sep 15 09:18:12 2023 +0000

    feat: exactness of short complexes (#7052)
    
    This PR introduces the definition of a proposition `S.Exact` when `S` is a short complex.

[33mcommit 5d8bd2218f9e2b2f7c55fcf9da3901fb8a66acd7[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Fri Sep 15 09:18:11 2023 +0000

    feat(Control/ULiftable): instances for `Except` and `Option` (#6350)

[33mcommit b0e5bef35e4d82df8e2febc2617996a3e0d588fe[m
Author: Christopher Hoskin <christopher.hoskin@gmail.com>
Date:   Fri Sep 15 08:07:10 2023 +0000

    feat(Order/OmegaCompletePartialOrder): Show that Scott Continuity implies OmegaCompletePartialOrder.Continuous' (#6831)
    
    In https://github.com/leanprover-community/mathlib/pull/18517 we introduced the notion of a Scott Continuous function between preorders. This PR shows that a Scott Continuous function between OmegaCompletePartialOrders is necessarily `OmegaCompletePartialOrder.Continuous'`.
    
    
    
    Co-authored-by: Christopher Hoskin <mans0954@users.noreply.github.com>
    Co-authored-by: Christopher Hoskin <christopher.hoskin@overleaf.com>

[33mcommit 20fb81821d7bb3b3bff5da563638068af7b19108[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Fri Sep 15 07:16:03 2023 +0000

    chore: fix pochhammer names (#7161)
    
    those got somehow lost in the merges...
    
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit 967f3619af6d29c45f704b4b8b0d60cc8a82614a[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Fri Sep 15 07:16:02 2023 +0000

    feat: define the regular and extensive coverages (#6896)
    
    We define the regular and extensive coverages on categories, and define typeclasses with the necessary properties categories need to have to be able to define these coverages.
    
    Co-authored-by: Riccardo Brasca @riccardobrasca [riccardo.brasca@gmail.com](mailto:riccardo.brasca@gmail.com)
    Co-authored-by: Filippo A E Nuccio @faenuccio [filippo.nuccio@univ-st-etienne.fr](mailto:filippo.nuccio@univ-st-etienne.fr)

[33mcommit 58a284116c8566233a42cdf92feab6e16c82ebb9[m
Author: Scott Morrison <scott@tqft.net>
Date:   Fri Sep 15 05:52:05 2023 +0000

    chore: bump ProofWidgets to 0.0.15 (#7070)
    
    We attempted this previously in #7044 and #7056, but it resulted in a broken cache.
    
    Hopefully that is reproducible on this PR, and we can diagnose and fix before merging!
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>

[33mcommit ee0f4af669fe14f81ce4ad9a9efa5a74d39399a0[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Fri Sep 15 05:52:04 2023 +0000

    feat: the line derivative is measurable (#7055)
    
    Last prerequisite for Rademacher theorem in #7003.
    
    Along the way, we weaken the second-countability assumptions for strong measurability of the derivative and the right derivative.

[33mcommit 518115d0841508e50b5243ae3569870ced64f036[m
Author: Scott Morrison <scott@tqft.net>
Date:   Fri Sep 15 04:33:55 2023 +0000

    chore: delete all but 10 most recent toolchains during CI (#7166)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit f80bb2fb0da9df53720e17a9e7f427ed75bbc124[m
Author: Junyan Xu <junyanxumath@gmail.com>
Date:   Fri Sep 15 04:33:54 2023 +0000

    feat: Finsets of cardinality > 1 in Pi types (#6818)
    
    Add an equivalent condition for `1 < m * n` in Nat, and two lemmas about Finsets of cardinality > 1.
    
    
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>

[33mcommit fbed088030877d18ff5830a4b3a8676545947e42[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Fri Sep 15 03:05:45 2023 +0000

    chore: make fields of algebraic (iso)morphisms `protected` (#7150)
    
    Pretty much all these fields are implementation details, and not intended as API. There is no point in `open MonoidHom` bringing `toFun` or `map_mul'` into the environment, as neither are the preferred way to spell those things.

[33mcommit 9db9cbb1adfd0811175c97fae0ab62d80daa613a[m
Author: Mario Carneiro <mcarneir@andrew.cmu.edu>
Date:   Fri Sep 15 00:38:12 2023 +0000

    feat: add git origin info to cache .ltar files (#7143)
    
    This should have no user-visible effects, but from here on `.ltar` files in the cache will contain the commit from which they were generated. Because of the way `cache` works, when you download the cache for a commit you might be using files built from several different commits, because later commits only invalidated some files and the old files are still good. If an `.ltar` file turns out to be bad (e.g. has a surprising `.trace` and is causing `lake build` to ignore it), this is helpful information for debugging, and it's only a few extra bytes in the file.
    
    The new version of leantar has a new function: `leantar -k 1234.ltar` will print out the "comments" in the file. If it is a file generated by an old version of leantar it will be empty, but files generated subsequent to this commit will show something along the lines `git=mathlib4@12de34` containing the commit sha for the run that generated this ltar file.
    
    
    
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>

[33mcommit 50988b8b20d898309da7c81cf11baaa452bd0c07[m
Author: Vasily Nesterov <vas.nesterov63@gmail.com>
Date:   Thu Sep 14 21:19:41 2023 +0000

    feat(Analysis/Convex): Radon's convexity theorem (#6598)
    
    Add Radon's theorem on convex sets
    
    
    
    Co-authored-by: Vasily Nesterov <118051017+vasnesterov@users.noreply.github.com>
    Co-authored-by: Ya√´l Dillies <yael.dillies@gmail.com>

[33mcommit 96d78537d03e9f8f84b09636339d3ebe29d5d639[m
Author: damiano <adomani@gmail.com>
Date:   Thu Sep 14 18:26:06 2023 +0000

    feat(UniqueProds + NoZeroDivisors): AddMonoidAlgebra instances (#6723)
    
    Add `UniqueProds/Sums` and `NoZeroDivisors` instances.
    
    This has recently been prompted by the port of the [Lindemann-Weierstrass Theorem](https://leanprover.zulipchat.com/#narrow/stream/116395-maths), but the results are self-contained.  Instances such as the ones in this PR are the reasons why `UniqueProds/Sums` were introduced.
    
    Affected files:
    ```
    Algebra/
            Group/UniqueProds.lean
            MonoidAlgebra/NoZeroDivisors.lean
    ```
    
    
    
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>

[33mcommit 7c77a529de083ff44b5aac1d07edb038450156c5[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Thu Sep 14 17:32:11 2023 +0000

    feat: the complex of homomorphisms between two cochain complexes (#7050)
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit 8266eb71c71cf3b014a409c9722463ec85a60370[m
Author: Anatole Dedecker <anatolededecker@gmail.com>
Date:   Thu Sep 14 17:32:10 2023 +0000

    feat: piCongr for topological and uniform spaces (#6836)

[33mcommit 27f0b9bb8b9aaa83d105b7d0ef823cd6e00dbb19[m
Author: Chris Hughes <chrishughes24@gmail.com>
Date:   Thu Sep 14 17:32:09 2023 +0000

    feat(ModelTheory): definable_iff_finitely_definable (#6651)

[33mcommit 7dd3aa25fcf7fb0455b9efaeae5d24d0f07e4c6e[m
Author: Wen Yang <yang-wen@139.com>
Date:   Thu Sep 14 15:54:40 2023 +0000

    feat(Data/Set/Intervals): Ioo_union_both (#7133)
    
    If `a ‚â§ b`, then `(a, b) ‚à™ {a, b} = [a, b]`.
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 6ad7d2f3a5992f6ad3904e157e9433114c83f758[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Thu Sep 14 15:54:39 2023 +0000

    feat(CategoryTheory/Monoidal/Skeleton): `CommMonoid` instance (#7130)
    
    This also names the instances so that the docstring can refer to them.

[33mcommit 351962aa4d2080ab99d3337e93736db961adbe7a[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Thu Sep 14 15:54:38 2023 +0000

    feat(LinearAlgebra/QuadraticForm): add `QuadraticForm.Isometry` (#6984)
    
    Also use it to tidy the API of `CliffordAlgebra.map`.

[33mcommit c493a2c3d5da5c100b8e12948b198a1a370d55df[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Thu Sep 14 15:54:36 2023 +0000

    feat: descPochhammer_natDegree (#6929)
    
    - [x] depends on: #6918
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit a90843f1f240db712f0852fec3183e94cba82e54[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Thu Sep 14 15:54:35 2023 +0000

    feat: monic_descPochhammer (#6927)
    
     - [x] depends on: #6918
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit fe31c871032574194cffaad6c7af4eebefb228dc[m
Author: Chris Hughes <chrishughes24@gmail.com>
Date:   Thu Sep 14 15:24:01 2023 +0000

    docs(HNN Extension): add names of Higman and Neumann (#7154)

[33mcommit e3c514cd63a2ee7e6a5effbf4e07d14b3e1ca8b4[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Thu Sep 14 15:24:00 2023 +0000

    feat(LinearAlgebra/QuadraticForm/Prod): products are commutative up to isomorphism (#7139)
    
    Surprisingly we're missing the whole tower of bundled `Equiv.prodAssoc` definitions, so this PR omits those too.

[33mcommit 6a80fec39fb5239be277955a75547fd40258d5b3[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Thu Sep 14 15:23:59 2023 +0000

    feat: better junk value for fderivWithin at isolated points (#7117)
    
    Currently, when `x` is isolated in the set `s`, then `fderivWithin k f s x` can be anything. We modify the definition by ensuring that it is equal to `0` in this case. This ensures that the range of `derivWithin` is always contained in the closure of the span of the range of `f`.

[33mcommit ad978d9ca2c799126db2ea0009f0fae1ec6719cf[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Thu Sep 14 15:23:56 2023 +0000

    feat: define `MeasurableSpace.invariants` (#7054)

[33mcommit 9749c6376037fa8dac053b6474d53a909a8b4be1[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Thu Sep 14 13:42:28 2023 +0000

    chore: unify map_dfinsupp_sum/prod lemmas (#7151)

[33mcommit 084cfb354233793728fd0ef1054e9b156224e7f6[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Thu Sep 14 13:42:27 2023 +0000

    style: fix wrapping of `where` (#7149)

[33mcommit eb83f03fffd8eec11d1078392f7fde0774616f92[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Thu Sep 14 13:42:25 2023 +0000

    chore(RingTheory/TensorProduct): cleanup type names (#7145)
    
    This fix has picked up a mixture of naming conventions for type names. In particular, this replaces:
    * `A, B, B', C, D, D'` with `A, B, C, D, E, F`
    * `R, A, A'` with `R, S, A`
    * `k, R` with `R, A`
    
    This also gives the universes explicit names because this is marginally nicer to read than `u_<random number>`.

[33mcommit aafb96fd92a9a5e21da88398e42e00b09a50200a[m
Author: Joachim Breitner <mail@joachim-breitner.de>
Date:   Thu Sep 14 13:42:24 2023 +0000

    chore: generalize type of isBlackListed (#7136)
    
    easier to use from, say, `MetaM` or `CommandElabM` this way.

[33mcommit 1328e6e267178486aba1ec847abef8613502aa0d[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Thu Sep 14 13:42:23 2023 +0000

    feat: the category of short complexes is preadditive (#7047)
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit 11bd532d71bec75fb75e2cd23b767c1b077f0b28[m
Author: Xavier Roblot <46200072+xroblot@users.noreply.github.com>
Date:   Thu Sep 14 13:42:22 2023 +0000

    feat: add results for the computation of the volume of Zspan.fundamentalDomain (#6904)
    
    We prove that the covolume of a $\mathbb{Z}$-lattice of $\mathbb{R}^n$ generated by the basis $b$ is equal to the absolute value of the determinant of the matrix formed by the vectors of $b$, that is
    ```lean
    theorem volume_fundamentalDomain [Fintype Œπ] [DecidableEq Œπ] (b : Basis Œπ ‚Ñù (Œπ ‚Üí ‚Ñù)) :
         volume (fundamentalDomain b) = ENNReal.ofReal |(Matrix.of b).det|
    ```

[33mcommit 693d13c7ff2bd0033d25243612c38cef3ab359d5[m
Author: Scott Morrison <scott@tqft.net>
Date:   Thu Sep 14 13:07:19 2023 +0000

    chore: add a CI step that validates the cache (#7099)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit b2dbb2c64242b105fb9d7328edd44f32ea05c28b[m
Author: damiano <adomani@gmail.com>
Date:   Thu Sep 14 12:44:12 2023 +0000

    feat(UniqueProds): subsingleton and MulOpposite lemmas (#6755)
    
    Basic support for `subsingleton` and `MulOpposites`.  Helps #6723.
    
    
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>

[33mcommit bd93b8ebdaea3189c903b6b2af47645a952ea5e5[m
Author: Scott Morrison <scott@tqft.net>
Date:   Thu Sep 14 11:42:59 2023 +0000

    chore: fix bash syntax in lean-pr-testing-comments.sh (#7144)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit dc0e30aa842fb692d38361c047db66e7e9ecd761[m
Author: Scott Morrison <scott@tqft.net>
Date:   Thu Sep 14 11:42:58 2023 +0000

    chore: run 'cache get' twice in CI (#7129)
    
    This is a band-aid for the frequent failures due to network errors we've been seeing lately.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 42093ba388383c45b97cd9d14eadc5d1672f5233[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Thu Sep 14 11:42:57 2023 +0000

    feat: descPochhammer (#6918)
    
    - [x] depends on: #6917
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit 31ea6454cd1258ccde973e1ea3e90f84cd8f9aea[m
Author: Bolton Bailey <bolton.bailey@gmail.com>
Date:   Thu Sep 14 10:14:13 2023 +0000

    feat: exists_unique_iff_card_one (#7067)
    
    Adds a theorem

[33mcommit 9fb4ff66da786bda67e503ffa4643bd7395be63d[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Thu Sep 14 10:14:12 2023 +0000

    feat(CategoryTheory/Triangulated): shifting distinguished triangles and variations on the five lemma (#7053)
    
    In this PR, it is shown that the shift of a distinguished triangle is a distinguished triangle. It is also shown that in a morphism between distinguished triangles, if two morphisms are isomorphisms, so is the third.

[33mcommit 132c469a1d602eb9050a04ca68853667363aa775[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Thu Sep 14 10:14:11 2023 +0000

    feat: the shift on the homotopy category of cochain complexes (#7048)

[33mcommit 4bc2392b53d349a4a004b3c6daf81a221d4b41c6[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Thu Sep 14 10:14:10 2023 +0000

    feat: Exterior of a set (#6982)
    
    In an Alexandrov-discrete space, every set has a smallest neighborhood. We call this neighborhood the *exterior* of the set. It is completely analogous to the interior, except that all inclusions are reversed.

[33mcommit 1e1cdbfcb9b5f0ee50da2f48c107760e20fa62ca[m
Author: Chris Hughes <chrishughes24@gmail.com>
Date:   Thu Sep 14 10:14:08 2023 +0000

    feat: HNN extensions and Britton's lemma (#6923)
    
    
    
    Co-authored-by: Chris Hughes <33847686+ChrisHughes24@users.noreply.github.com>

[33mcommit 52192c401d2854c25b9c7e2c73186fca108f5f3d[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Thu Sep 14 10:14:07 2023 +0000

    feat: det_vandermonde_id_eq_superFactorial (#6827)
    
    - [x] depends on: #6768
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit 9476eae9ab5d1e9c2ad2370147f02263664e4d4f[m
Author: Junyan Xu <junyanxumath@gmail.com>
Date:   Thu Sep 14 10:14:05 2023 +0000

    chore(Co(ntra)variantClass): generalize and remove duplicates (#6677)
    
    4 files have major changes:
    
    [Algebra/CovariantAndContravariant.lean](https://github.com/leanprover-community/mathlib4/pull/6677/files#diff-764d54e9aec88678ce0ea3815466659fa7157fd2eedcc0ff412e1dd0d29dd1e1)
    + Add new theorem `contravariant_le_iff_contravariant_lt_and_eq`.
    + Add `covariantClass_le_of_lt` generalizing and replacing `Mul.to_covariantClass_left/right` in Algebra/Order/Monoid/Defs.lean
    + Replace `CommSemigroup` by `IsSymmOp N N mu` and replace `CancelSemigroup` by `IsMulCancel`, removing superfluous associativity assumption.
    + new theorems `covariant_lt_of_covariant_le_of_contravariant_eq` and `contravariant_le_of_contravariant_eq_and_lt` that could replace eight instances when appropriate refactoring is in place.
    + Golfs
    + Fix changed names in other files.
    
    [Algebra/Order/Monoid/Lemmas.lean](https://github.com/leanprover-community/mathlib4/pull/6677/files#diff-c2487d6e6723908a2b225ada734c34973df02568470b006d117f1d5dc02279f9)
    + Generalize `mul_eq_mul_iff_eq_and_eq` and remove the less general `Left/Right.mul_eq_mul_iff_eq_and_eq`.
    + Move `mul_le_mul_iff_of_ge`.
    + Introduce the more general Left/Right versions of `min_le_max_of_mul_le_mul`.
    + Move `min_lt_max_of_mul_lt_mul` here from [Algebra/GroupPower/Order.lean](https://github.com/leanprover-community/mathlib4/pull/6677/files#diff-85059824b1e928b1e837ac778960d991bfe9d6cb1809f5c4fdc4151432967790).
    + Replace `CommSemigroup` by `IsSymmOp`.
    
    [Algebra/Order/Monoid/Basic.lean](https://github.com/leanprover-community/mathlib4/pull/6677/files#diff-d69116bc1a74c9c0fa2567f6b46ba380d7d96f5463378477fe6165a612286bae)
    + Remove `eq_and_eq_of_le_of_le_of_mul_le` as it's just one direction of `mul_le_mul_iff_of_ge` but with more assumptions.
    
    [Algebra/Order/Ring/Lemmas.lean](https://github.com/leanprover-community/mathlib4/pull/6677/files#diff-84a9a84aac2261f2bf7bb093c52ff380fa59f0cc849c9d8a935e38625b870d42)
    + Generalize two versions of `mul_eq_mul_iff_eq_and_eq_of_pos`
    + Golfs
    
    Changes to [Algebra/Group/UniqueProds.lean](https://github.com/leanprover-community/mathlib4/pull/6677/files#diff-ebdf20b185bac5adc5a22ffdf53e7dfa74bb23fb34dfa47a761bb9dfa66c9fc1) and [Algebra/MonoidAlgebra/NoZeroDivisors.lean](https://github.com/leanprover-community/mathlib4/pull/6677/files#diff-01c7904bf1227e1223f180ad94ac7d7633b93d65e529385deb6d10dd7655b5e0) are in declarations that will be removed by #6723.
    
    
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>

[33mcommit 433091dd14872b246fa4a9b657128767500560b1[m
Author: Anne Baanen <vierkantor@vierkantor.com>
Date:   Thu Sep 14 10:14:04 2023 +0000

    refactor: remove `IsDomain` hypothesis from `IsIntegrallyClosed` (#6126)
    
    This PR modifies the definition of `IsIntegrallyClosed` to drop the `IsDomain` hypothesis. This change came out of the discussions of modifying `IsDedekindDomain` to either extend `IsDomain` or to drop `IsDomain` entirely and change it to `IsDedekindRing`. (The former being a dependency of this PR, the latter a follow-up.)
    
    Zulip thread: https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/Should.20.60IsDedekindDomain.60.20extend.20.60IsDomain.60.3F

[33mcommit 9022a7ddb9c3283b8c37e8f889da80b87bc55840[m
Author: Scott Morrison <scott@tqft.net>
Date:   Thu Sep 14 09:08:49 2023 +0000

    chore: reduce use of Init.Data.Int.CompLemmas (#7142)
    
    `Mathlib.Init.Data.Int.CompLemmas` was ported from core, and was never really intended for outside use. Nevertheless, people started using it. (Surprise!)
    
    This PR removes one out of the two uses in Mathlib.
    
    If anyone would like to do the other in a separate PR, please do! You would need to reprove
    ```
    theorem natAbs_add_nonneg {a b : ‚Ñ§} (wa : 0 ‚â§ a) (wb : 0 ‚â§ b) :
        Int.natAbs (a + b) = Int.natAbs a + Int.natAbs b := sorry
    
    theorem natAbs_add_neg {a b : ‚Ñ§} (wa : a < 0) (wb : b < 0) :
        Int.natAbs (a + b) = Int.natAbs a + Int.natAbs b := sorry
    ```
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 22b19e1aaf45d4cbf676dcaf7d0cf96ec8cb3642[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Thu Sep 14 09:08:48 2023 +0000

    chore: `Module.{Free,Finite}` instances for `ULift` (#7135)
    
    These carry no data so should be harmless.

[33mcommit f16dbd9bba98b3a82e0bc7dd9526770f8f67c317[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Thu Sep 14 09:08:47 2023 +0000

    feat: the linear span of a separable set is separable (#7115)

[33mcommit 8fa31ad904ce4ebaccf9de150e53ac399f520ed3[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Thu Sep 14 07:53:21 2023 +0000

    feat(CategoryTheory/Limits/Shapes/Biproducts): add associator (#7127)
    
    As far as I can tell this doesn't exist anywhere else. The motivation is #7125, but I have a lot less idea of what I'm doing there than I do here.

[33mcommit 48d20bd1c60e5be261350bffede726d3942e2f9a[m
Author: Bolton Bailey <bolton.bailey@gmail.com>
Date:   Thu Sep 14 07:53:20 2023 +0000

    feat: expand API for `Polynomial.divX` and some related results (#6428)
    
    Various lemmas about `Polynomial.natDegree`
    
    Co-authored-by: Pratyush Mishra

[33mcommit cdbcc21987465a4a2b7818916888e1dcee620bb2[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Thu Sep 14 06:57:04 2023 +0000

    chore: tidy various files (#7137)

[33mcommit b639e46a19a0328adfb9b1fdf8cbe39dfc1de76b[m
Author: Scott Morrison <scott.morrison@gmail.com>
Date:   Thu Sep 14 15:33:16 2023 +1000

    chore: fix link to workflow run posted to Lean4 repo

[33mcommit 226948a52f8e19ad95ff6025a96784d7e7ed6ed0[m
Author: Kyle Miller <kmill31415@gmail.com>
Date:   Wed Sep 13 23:02:27 2023 +0000

    chore: move `mkRichHCongr` from `congr!` implementation into CongrTheorems module (#7107)
    
    1. Defines a trace class `Meta.CongrTheorems` for congruence theorem generators in general
    2. Renames `Congr!.mkHCongrThm` to `Lean.Meta.mkRichHCongr` for this congruence theorem generator
    3. Adds a `forceHEq` parameter to the function; `false` is the default and makes it act like `Lean.Meta.mkHCongr`, but `congr!` expects the lemma to prove a `HEq` and not an `Eq`.
    4. Makes `mkRichHCongr` package up some more data and return a `CongrTheorem`

[33mcommit 100e68cb3cde858bc3ad627fcaedb2f9ed2abaf8[m
Author: Oliver Nash <github@olivernash.org>
Date:   Wed Sep 13 21:26:38 2023 +0000

    feat: add `Finset.card_le_one_iff_subsingleton` and `Finset.one_lt_card_iff_nontrivial` (#7131)
    
    The versions for `Fintype` already exist but are missing for `Finset`.

[33mcommit 65ef10e6b1aab1cd5ec709e2116c97341cce6ea1[m
Author: kkytola <kalle.kytola@aalto.fi>
Date:   Wed Sep 13 14:54:18 2023 +0000

    chore: generalize layercake formulas to null-measurable and a.e.-nonnegative functions (#6936)
    
    The layercake formulas (a typical example of which is ‚à´‚Åª f^p ‚àÇŒº = p * ‚à´‚Åª t in 0..‚àû, t^(p-1) * Œº {œâ | f(œâ) > t}) had been originally proven assuming measurability and nonnegativity of `f`. This PR generalizes them to null-measurable and a.e.-nonnegative `f`.
    
    
    
    Co-authored-by: kkytola <‚Äúkalle.kytola@aalto.fi‚Äù>
    Co-authored-by: kkytola <39528102+kkytola@users.noreply.github.com>

[33mcommit 1bfcb2b787acb0d83b2e2eceadd6601452c8acab[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Wed Sep 13 14:53:49 2023 +0000

    feat: Linear order on upper/lower sets (#6816)
    
    Match https://github.com/leanprover-community/mathlib/pull/19068
    
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 7eb274328956bed2aa04fd593211b6518ce2cdc4[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Wed Sep 13 13:29:19 2023 +0000

    chore: tidy various files (#7132)

[33mcommit 07916a0dba634b20175dad8ca4b354084fcfc742[m
Author: Xavier Roblot <46200072+xroblot@users.noreply.github.com>
Date:   Wed Sep 13 11:20:06 2023 +0000

    feat: Prove that the measure equivalence between EuclideanSpace ‚Ñù Œπ and Œπ ‚Üí ‚Ñù is volume preserving  (#7037)
    
    We prove that the two `MeasureSpace` structures on $\mathbb{R}^\iota$, the one coming from its identification with `Œπ‚Üí ‚Ñù` and the one coming from `EuclideanSpace ‚Ñù Œπ`, agree in the sense that the measure equivalence between the two corresponding volumes is measure preserving.
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 5802001517a7bb76195c2dec200c99f05b6da6bd[m
Author: Scott Morrison <scott@tqft.net>
Date:   Wed Sep 13 10:00:32 2023 +0000

    chore: minor import adjustment (#7118)
    
    Easy cleanup after recent Std bumps.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 33c02ffbc1c013de125ff75d749bd68a3d44bceb[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Wed Sep 13 10:00:30 2023 +0000

    chore: Generalise and move liminf/limsup lemmas (#6846)
    
    Forward-ports https://github.com/leanprover-community/mathlib/pull/18628

[33mcommit 95ae01c3ca7c59bec4d4fc9029b82dedc547a03f[m
Author: Jeremy Tan Jie Rui <reddeloostw@gmail.com>
Date:   Wed Sep 13 10:00:29 2023 +0000

    feat: group generated by a finite-order submonoid element (#6648)
    
    This was split from #6629 after @tb65536's golf, the construction here now no longer needed there.
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 0444e0c2973cb815bc9b3197e5a95b00824c2c0a[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Wed Sep 13 08:37:12 2023 +0000

    feat(Data/Nat/Basic): self_add_sub_one and friends (#7123)
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit 2a9e72b4235522066022621f362b01445bf2ec3d[m
Author: Scott Morrison <scott@tqft.net>
Date:   Wed Sep 13 01:17:34 2023 +0000

    chore: fix lake exe graph --exclude-meta (#6958)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>
    Co-authored-by: Jon Eugster <eugster.jon@gmail.com>

[33mcommit 99672163af6c6f492f6b7619f0caa10687f003f2[m
Author: Scott Morrison <scott@tqft.net>
Date:   Wed Sep 13 01:17:33 2023 +0000

    feat: nondeterminism monad, and use in backtrack (#3464)
    
    
    
    Co-authored-by: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>
    Co-authored-by: Kyle Miller <kmill31415@gmail.com>

[33mcommit fc2008593d76e4c679d97a12ae89bd0173337b4e[m
Author: Scott Morrison <scott@tqft.net>
Date:   Tue Sep 12 23:50:13 2023 +0000

    chore: bump Std for #251 (#7126)
    
    Some minor renaming:
    * `Sum.not_isLeft` becomes `Sum.bnot_isLeft`
    * `Sum.Not_isLeft` becomes `Sum.not_isLeft`
    
    A few explicit arguments also became implicit.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 127feabb148d18c30543534f97d8f786110eef2f[m
Author: Thomas Browning <tb65536@uw.edu>
Date:   Tue Sep 12 22:27:47 2023 +0000

    chore: fix typo (#7121)
    
    This PR fixes a typo from #6508.

[33mcommit 1bde21dcbe0188fc6423353ae4efcd3904266906[m
Author: Alex J Best <alex.j.best@gmail.com>
Date:   Tue Sep 12 22:27:45 2023 +0000

    feat: LinearOrderedAddCommMonoidWithTop EReal·µí·µà (#7109)
    
    And  `AddCommMonoidWithOne EReal`

[33mcommit 6848ad5e1b924bb683f83c6bcdfc471e4033327c[m
Author: Alex J Best <alex.j.best@gmail.com>
Date:   Tue Sep 12 22:27:44 2023 +0000

    chore: remove some no longer relevant porting notes (#7108)

[33mcommit fd58eb4fa38f9a4abd9fd10b99a48b184ed09f39[m
Author: Alex J Best <alex.j.best@gmail.com>
Date:   Tue Sep 12 22:27:43 2023 +0000

    chore: use mk_iff more (#7105)

[33mcommit e36d25efdff5dfc145e963d606c58138d82cb6fd[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Tue Sep 12 22:27:42 2023 +0000

    chore: fix port of surjective_quotient_mk (#7096)
    
    The mathlib3 lemma is about quotient.mk, which takes an instance argument and is translated into mathlib4 as Quotient.mk'.

[33mcommit 7ff6f232adf3de869f37b626a5307be45847e27e[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Tue Sep 12 22:27:41 2023 +0000

    chore: speed up edgeDensity_chunk_not_uniform (#7088)

[33mcommit 0c1c834a2bdc5de555cd19a43ada898615e98a62[m
Author: Arend Mellendijk <arend.mellendijk@gmail.com>
Date:   Tue Sep 12 22:27:40 2023 +0000

    feat(NumberTheory/Divisors):  Two lemmas about filtering by divisibility (#7084)
    
    Add lemmas about filtering the `Finset`s of divisors or factors by divisibility. These two results came up while developing API for the `Finset` of tuples with a fixed product `n`.

[33mcommit ac0ad1e804edff1e62245628407395de22e72302[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Tue Sep 12 22:27:39 2023 +0000

    chore: tidy various files (#7081)

[33mcommit 789bd510a1855d821bb27cdb46a88c5fa1c1ec81[m
Author: damiano <adomani@gmail.com>
Date:   Tue Sep 12 22:27:38 2023 +0000

    feat(Util/Imports): add `#find_home!` to exclude current module (#7075)
    
    Add the `!` flag to `#find_home` that excludes the current module as potential home.  This change is analogous to #7025.
    
    This behaviour can be desirable when the lemma depends on *explicit* lemmas in the current file that you also want to move.  There is also the possibility that the proof of the lemma you want to move uses an *auto-generated* lemma and that auto-generated lemma would be auto-generated also in the earlier file.
    
    Here is an example:
    ```lean
    --  this takes place in a new file `Mathlib/Algebra/NewFile.lean`
    import Mathlib.Util.Imports
    import Mathlib.Algebra.Group.Prod
    
    lemma withSimp {A} [Zero A] (a : A) (h : a = 0) :
        (a, 0) = 0 := by
      simp only [h, Prod.mk_eq_zero]
    
    lemma withRw {A} [Zero A] (a : A) (h : a = 0) :
        (a, 0) = 0 := by
      rw [h, Prod.mk_eq_zero, eq_self, eq_self, true_and]
      trivial
    
    #print withSimp  -- blah blah `Mathlib.Algebra.NewFile._auxLemma.1`
    #print withRw    -- only "visible" lemmas
    
    #find_home  withSimp  -- `Mathlib.Algebra.NewFile`
    #find_home! withSimp  -- `Mathlib.Algebra.Group.Prod`
    #find_home  withRw    -- `Mathlib.Algebra.Group.Prod`
    ```

[33mcommit aa8559ba734d729e33f0a122911ab247320a7f7d[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Tue Sep 12 22:27:36 2023 +0000

    feat: gcd and coprime sub (#7051)
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit 56e5b36f7fa8e77165a8ea25e38d895b673d11c2[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Tue Sep 12 22:27:35 2023 +0000

    feat: maps induced on the homology of short complexes (#7042)

[33mcommit 26c33508ad1e29f6e5be0031bf038db0cf85c362[m
Author: Alex J Best <alex.j.best@gmail.com>
Date:   Tue Sep 12 22:27:34 2023 +0000

    feat: allow users to expand `field_simp` into a `simp` call (#6776)
    
    This should allow users to debug what `field_simp` is doing more easily.
    And a little bit of miscellaneous cleanup of the field_simp doc.

[33mcommit 69a3de318de6e785f5a9e546f6e06090b4ccc192[m
Author: Bolton Bailey <bolton.bailey@gmail.com>
Date:   Tue Sep 12 21:07:30 2023 +0000

    style: a linter for colons (#6761)
    
    A linter that throws on seeing a colon at the start of a line, according to the [style guideline](https://leanprover-community.github.io/contribute/style.html#structuring-definitions-and-theorems) that says these operators should go before linebreaks.

[33mcommit 198327e1ab3a723e3713643c936e5d9dbeea7e19[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Sep 12 17:41:30 2023 +0000

    chore(Order/RelIso): golf, fix NS (#7114)
    
    * Rename `Surjective.wellFounded_iff` to
      `Function.Surjective.wellFounded_iff`.
    * Golf the proof.

[33mcommit bf815bd5bd5a500e92450380a3d22db6fe5bfbeb[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Sep 12 17:41:29 2023 +0000

    refactor: split `NormalSpace` into `NormalSpace` and `T4Space` (#7072)
    
    * Rename `NormalSpace` to `T4Space`.
    * Add `NormalSpace`, a version without the `T1Space` assumption.
    * Adjust some theorems.
    * Supersedes thus closes #6892.
    * Add some instance cycles, see #2030

[33mcommit 8c31491fa9c95151e0596116748405d262387017[m
Author: Jakob von Raumer <jakob@von-raumer.de>
Date:   Tue Sep 12 17:16:49 2023 +0000

    feat: The category Fact(f) (#6966)
    
    This prepares to have Factorisation systems in Lean as well as to serve as a generalisation of things like `MonoFactorisation`.

[33mcommit 8435e0dce882b20abe74c0b10b475bc591bd98a3[m
Author: Eric Rodriguez <37984851+ericrbg@users.noreply.github.com>
Date:   Tue Sep 12 15:48:36 2023 +0000

    docs: make `sub_neg` refer to `sub_neg_eq_add` (#7104)
    
    I'm not a fan of this naming :/

[33mcommit 02719d54c67186cad556eb021344cc389221a83f[m
Author: damiano <adomani@gmail.com>
Date:   Tue Sep 12 12:40:24 2023 +0000

    chore(Util/Imports): accumulate imports in find_home to log once (#7066)
    
    Currently, `#find_home` prints each possible import separately.  This PR makes it print them all as a single list.
    
    It also makes sure that the results are displayed at `#find_home` alone, rather than the whole `#find_home new_lemma` call.

[33mcommit 2bffb702994da378e6d32bd33288ba02ff86e0ae[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Tue Sep 12 12:40:23 2023 +0000

    chore: replace anonymous morphism constructors with named fields (#7015)
    
    This makes it easier to refactor the order or inheritance structure of morphisms without having to change all of the anonymous constructors.
    
    This is far from exhaustive.

[33mcommit ae1eb5e75ab41ee81b72ad23cdb35264f7e664ba[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Tue Sep 12 12:40:21 2023 +0000

    chore: rename `pochhammer` (#6917)
    
    We rename `pochhammer` to `ascPochhammer`  to prepare adding `descPochhammer`.
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>
    Co-authored-by: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>

[33mcommit 329ef788a3a9555e4bf9e0960d5fb58796e2325b[m
Author: damiano <adomani@gmail.com>
Date:   Tue Sep 12 12:40:20 2023 +0000

    chore(test/Change): use `guard_msgs` in Change (#6843)
    
    This PR simply adds `#guard_msgs` checks to the tests in `Change`.

[33mcommit 21f843c8c202c8ee9e0412786ba19a475abb022d[m
Author: Matthew Robert Ballard <matt@mrb.email>
Date:   Tue Sep 12 12:40:19 2023 +0000

    chore (RingTheory.Congruence): make RingCon extend AddCon and Con (#6772)
    
    Currently `RingCon` extends `Add` and `Mul`. This changes it to extend `AddCon` and `Con` directly.

[33mcommit 5128540fafd6d8b365d59522550038b3c82ec8e5[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Tue Sep 12 12:40:17 2023 +0000

    chore(LinearAlgebra/DFinsupp): remove dependency on `Basis` (#6706)
    
    The motivation here is to explore re-defining `Basis` with `DFinsupp` instead of `Finsupp`, in order to make it computable.

[33mcommit a9f079b5b18046571c8e420cbcbd13d912917bc4[m
Author: Alex J Best <alex.j.best@gmail.com>
Date:   Tue Sep 12 12:40:16 2023 +0000

    feat: auto-suggest style fixes in CI (#6569)
    
    This PR tries to help with the issue of contributors pushing a branch, closing their computer, and then later getting notified about a trivial style issue like, leaving a trailing space or a `set_option pp.proofs true` on somewhere.
    
    With this change, the style linter output is added as github suggestions to your PR, which can be easily applied from the web interface without having to check out the branch again.
    
    These checks run in a separate workflow to the original linters as the suggestions can only be added to PRs, not to branches, so this workflow will not run on branches not yet PRed. This is a slight duplication of work when a branch is part of a PR, but the time is so minimal compared to actually building / tactic linting that we dont think this will have a noticable effect on CI resources.
    
    The check all files imported suggesters are less likely to trigger if the user simply forgot the file. This is due to a technical limitation of github suggestions; suggestions can only be added to lines modified in the diff. It will at least fix help things if the user alphabetises wrongly (this has actually happened to me before...)
    We _could_ have the linters automatically push fixes, but that is more invasive and potentially annoying so we hold off that for now until there is appetite for it.
    
    We also moved the slightly expensive install bibtool step later as that step takes some time compared to the others and its nice to get more instant feedback from the earlier steps if they are going to fail anyway.
    
    
    
    Co-authored-by: Julian Berman <Julian@GrayVines.com>

[33mcommit ca73a84a06ff3161f85d115801ce39ac88c7eed4[m
Author: Kevin Buzzard <k.buzzard@imperial.ac.uk>
Date:   Tue Sep 12 12:40:14 2023 +0000

    feat: statement of Fermat's Last Theorem (#6508)
    
    
    
    Co-authored-by: Ya√´l Dillies <yael.dillies@gmail.com>
    Co-authored-by: Oliver Nash <github@olivernash.org>

[33mcommit 9479520d342f61beef61e0d3bf2a62ee1958a425[m
Author: Scott Morrison <scott.morrison@gmail.com>
Date:   Tue Sep 12 22:20:57 2023 +1000

    Revert "chore: add CI step to check lake-manifest.json is up to date (#7071)"
    
    This reverts commit 9c2f17f68a9bd84e93f2a7a0fc8b8921c88c033e.

[33mcommit 4ce559e1ede2f73044d7b51520462205a90fb4ad[m
Author: damiano <adomani@gmail.com>
Date:   Tue Sep 12 09:41:42 2023 +0000

    chore(test/*): quiet unusedVariables (#6872)
    
    ~~Quiets the `unused_variables` linter in the appropriate tests.~~
    (Introduces and) prefixes unused variables with `_` in test files.
    
    Affected files:
    ```
    test/congrm.lean
    test/interval_cases.lean
    test/LibrarySearch/IsCompact.lean
    test/Set.lean
    test/slim_check.lean
    ```
    
    [Zulip discussion](https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/noisy.20tests)

[33mcommit da2f8a8b1d14b417176549cc73b6decd61926b40[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Tue Sep 12 09:41:41 2023 +0000

    feat: maps from the unitization of non-unital subobjects of unital algebras (#6372)
    
    If S is non-unital subalgebra of a unital R-algebra A, there is a natural map `Unitization R S ‚Üí‚Çê[R] A` whose range is `Algebra.adjoin R (S : Set A)`. When `1 ‚àâ S` and `R` is a field, this map is injective, and so we can restrict the codomain to `Algebra.adjoin R (S : Set A)` and turn it into an `AlgEquiv`.
    
    We specialize this to the `‚Ñï`-unitization of a non-unital subsemiring and its `Subsemiring.closure`, as well as the `‚Ñ§`-unitization of a non-unital subring and its `Subring.closure`. We also extend the above map to a `StarAlgHom` in the case of `NonUnitalStarSubalgebras`.
    
    This continues the non-unital-ization of mathlib.
    
    Co-authored-by: Anatole Dedecker <anatolededecker@gmail.com>

[33mcommit 9c2f17f68a9bd84e93f2a7a0fc8b8921c88c033e[m
Author: Scott Morrison <scott@tqft.net>
Date:   Tue Sep 12 08:19:57 2023 +0000

    chore: add CI step to check lake-manifest.json is up to date (#7071)
    
    Looks like it works: https://github.com/leanprover-community/mathlib4/actions/runs/6134766950/job/16647879105
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 26bdb031ba1ec01760a375a2121827e5c28a35cb[m
Author: Xavier Roblot <46200072+xroblot@users.noreply.github.com>
Date:   Tue Sep 12 07:58:23 2023 +0000

    feat: add some lemmas for Haar measures (#7034)
    
    We prove some lemmas that will be useful in following PRs #6832 and #7037, mainly:
    ```lean
    theorem Basis.addHaar_eq {b : Basis Œπ ‚Ñù E} {b' : Basis Œπ' ‚Ñù E} :
         b.addHaar = b'.addHaar ‚Üî b.addHaar b'.parallelepiped = 1
    
    theorem Basis.parallelepiped_eq_map (b : Basis Œπ ‚Ñù E) :
         b.parallelepiped = (TopologicalSpace.PositiveCompacts.piIcc01 Œπ).map b.equivFun.symm
           b.equivFunL.symm.continuous
    
    theorem Basis.addHaar_map (b : Basis Œπ ‚Ñù E) (f : E ‚âÉL[‚Ñù] F) :
        map f b.addHaar = (b.map f.toLinearEquiv).addHaar
    ```
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 057cc17899502b21a8901d003c888d90269ff99e[m
Author: Scott Morrison <scott@tqft.net>
Date:   Tue Sep 12 07:58:22 2023 +0000

    feat: have cache use temporary files and renaming to avoid broken files (#7022)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit d0e5669164cb1edd98154a811ab5924f3796e8f3[m
Author: Scott Morrison <scott@tqft.net>
Date:   Tue Sep 12 05:47:52 2023 +0000

    chore: bump Std to #253 (#7113)
    
    Bump PR for https://github.com/leanprover/std4/pull/253
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 6de532979af2826d8a2bf69391e4a7cc2f72caac[m
Author: Scott Morrison <scott@tqft.net>
Date:   Tue Sep 12 05:28:32 2023 +0000

    chore: further refactors of prerequisites of `norm_num` (#7097)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 260cb506093f1ce53d9c0478d76bd5baf1b09673[m
Author: Scott Morrison <scott@tqft.net>
Date:   Tue Sep 12 04:12:31 2023 +0000

    refactor: split Algebra.Hom.Group and Algebra.Hom.Ring (#7094)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 0851f8100e11301e9ce296d8b72728fb4eaafa38[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Mon Sep 11 21:06:15 2023 +0000

    fix(Algebra/Module/LinearMap): weaken an over-eager coercion (#6786)
    
    We do not want `AlgHom` to cast to `LinearMap` via the rarely-used `DistribMulActionHom`.
    
    The only places this was used are:
    * ones that I wrote accidentally, which are replaced with `AlgHom.toLinearMap` (for which lemmas already exist)
    * a non-unital case, where I've inserted the transitive coercion manually (and a TODO); a syntactic change that does not change the underlying term
    
    We could consider adding a `LinearMapClass.toLinearMap` coercion in a future PR, but I would guess this is just unification hell compared to `AlgHom.toLinearMap`, so I don't want to volunteer to do it.

[33mcommit a4810ea04ddc7af8761cdd88f1b78036a99b66a0[m
Author: Matthew Robert Ballard <matt@mrb.email>
Date:   Mon Sep 11 20:08:28 2023 +0000

    feat (NormedSpace.Dual): make `Dual` reducible  (#6998)
    
    Following `LinearAlgebra.Dual` this makes `NormedSpace.Dual` reducible.

[33mcommit eae0fe5d1fc6566892e4eb631e9c0887910f7bd5[m
Author: Julian Berman <Julian@GrayVines.com>
Date:   Mon Sep 11 18:53:15 2023 +0000

    chore: lint-style.py was calling str.replace incorrectly (#7100)
    
    (it doesn't take keyword arguments unfortunately)

[33mcommit 5cffe216b2278ee5b0977783dec26f6bf45f5474[m
Author: Scott Morrison <scott@tqft.net>
Date:   Mon Sep 11 18:53:13 2023 +0000

    chore: split Algebra.Semiconj and Algebra.Commute (#7098)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 58e3baa5952e86c5facdc97cecce4f6545a8d5b9[m
Author: grunweg <rothgami@math.hu-berlin.de>
Date:   Mon Sep 11 18:53:12 2023 +0000

    doc(Topology/MetricSpace/Lipschitz): typo and punctuation; add a few docstrings (#7077)
    
    - Fix a typo, add four periods.
    - Add docstrings to a few results.

[33mcommit d6303b84f47123c1ff382f26a15034c5ee8c7292[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Mon Sep 11 18:53:10 2023 +0000

    feat: characterizations of monotonicity in locally finite orders (#6709)
    
    - [x] depends on: #6711
    - [x] depends on: #6712
    
    
    
    Co-authored-by: Heather Macbeth <25316162+hrmacbeth@users.noreply.github.com>

[33mcommit ff269867bbead842203f9376d4b4a90b54ca0eab[m
Author: Kyle Miller <kmill31415@gmail.com>
Date:   Mon Sep 11 18:53:09 2023 +0000

    feat: make `Fintype (SimpleGraph V)` computable (#4112)
    
    Adds `DecidableEq V` to the `Fintype (SimpleGraph V)` instance's type signature, which can be easily satisfied in a noncomputable setting.

[33mcommit 23cd2eabe45f28df8e1778c94ca00fd4287b6cf8[m
Author: Scott Morrison <scott@tqft.net>
Date:   Mon Sep 11 15:07:31 2023 +0000

    chore: reduce imports to Data/Nat/Cast/Basic and Data/Rat/Defs (#7093)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 5c5d0dca03dd9d38e718ef719dac5232d1994e71[m
Author: Anatole Dedecker <anatolededecker@gmail.com>
Date:   Mon Sep 11 13:37:53 2023 +0000

    fix: add # to titles in Algebra.Homology.ShortComplex.* (#7062)

[33mcommit f48d0465c15f8e4361589a0ffc06eca9c0e597ed[m
Author: Scott Morrison <scott@tqft.net>
Date:   Mon Sep 11 13:37:51 2023 +0000

    chore: further cleanup of `norm_num` (#7046)
    
    The main change here is to split `NormNum.Core` into `NormNum.Result` and `NormNum.Core`. Other than that split it is just moving small declarations to better homes.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit ac0730ec2450cc9a154263e951aa1980910c0e68[m
Author: Scott Morrison <scott@tqft.net>
Date:   Mon Sep 11 11:57:13 2023 +0000

    chore: fix #minimize_imports (#7025)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit a9f0f4a6fde06b57f339663a19b6be2ba07a4a4f[m
Author: Scott Morrison <scott@tqft.net>
Date:   Mon Sep 11 07:50:29 2023 +0000

    chore: module doc for #find_home, #minimize_imports, import early (#7095)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 9893bbd22fdca4005b93c8dbff16c1d2de21bc1a[m
Author: Scott Morrison <scott@tqft.net>
Date:   Mon Sep 11 04:42:32 2023 +0000

    chore: reduce imports to Data.Rat.Cast.CharZero (#7091)
    
    Removing further unnecessary imports on the path to major tactics.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 271b84c00458f7fe8ceacd63ed939bb5bc18deea[m
Author: Scott Morrison <scott@tqft.net>
Date:   Mon Sep 11 03:33:24 2023 +0000

    chore: cleanup imports of Data/Rat/Cast/Defs (#7092)
    
    Removing further unnecessary imports on the path to major tactics.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 37e6e50e483cbe4bd989ddb9e998ac55bf18bbc8[m
Author: Scott Morrison <scott@tqft.net>
Date:   Mon Sep 11 02:32:44 2023 +0000

    chore: linarith only needs ring1 (#7090)
    
    I appreciate that this is "going backwards" in the sense of requiring more explicit imports of tactics (and making it more likely that users writing new files will need to import tactics rather than finding them already available).
    
    However it's useful for me while I'm intensively working on refactoring and upstreaming tactics if I can minimise the dependencies between tactics. I'm very much aware that in the long run we don't want users to have to manage imports of tactics, and I am definitely going to tidy this all up again once I'm finished with this project!
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 83d7426bfc4e802df64c373031a369a895b54bfa[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Sun Sep 10 18:23:14 2023 +0000

    refactor(Data/Int/Bitwise): use `<<<` and `>>>` notation (#6789)
    
    The lemma names have changed to use `shiftLeft` and `shiftRight` to match the new `Nat` names.

[33mcommit 47db6c42812fc292fe89f97047cc821646fce584[m
Author: David Renshaw <dwrenshaw@gmail.com>
Date:   Sun Sep 10 16:11:10 2023 +0000

    chore: delete redundant commented-out positivity test (#7085)
    
    In #1391, this exact test was added farther up in the file (along with other integer division tests):
    https://github.com/leanprover-community/mathlib4/blob/a5c7037917334676f4a8af94f2c98f773adae880/test/positivity.lean#L128

[33mcommit 080932ee0b738a88fe9a97cfc6b7efd4f17b29fd[m
Author: Anatole Dedecker <anatolededecker@gmail.com>
Date:   Sun Sep 10 15:48:51 2023 +0000

    chore: fix docstrings, names and aligns about paracompacity of emetric spaces (#7064)

[33mcommit a5c7037917334676f4a8af94f2c98f773adae880[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Sun Sep 10 13:28:21 2023 +0000

    feat(Data/Finsupp): add notation (#6367)
    
    This PR provides `fun‚ÇÄ | 3 => a | 7 => b` notation for `Finsupp`, which desugars to `Finsupp.update` and `Finsupp.single`, in the same way that `{a, b}` desugars to `insert` and `singleton`.
    
    It also provides a matching delaborator: as an example of the effect of this, `Finsupp.single_add` now shows as:
    ```lean
    Finsupp.single_add.{u_2, u_1} {Œ± : Type u_1} {M : Type u_2} [inst‚úù : AddZeroClass M] (a : Œ±) (b‚ÇÅ b‚ÇÇ : M) :
      (fun‚ÇÄ | a => b‚ÇÅ + b‚ÇÇ) = (fun‚ÇÄ | a => b‚ÇÅ) + fun‚ÇÄ | a => b‚ÇÇ
    ```
    
    Finally, it provides a `Repr` instance; though this is somewhat misleading as the syntax that is produced by `Repr` isn't actually computable so can't round-trip!
    
    [Discussed on Zulip here](https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/Notation.20for.20.60Finsupp.60/near/381919585).

[33mcommit 2677935b07251b1ff33995f56c729c244b4b880f[m
Author: Kyle Miller <kmill31415@gmail.com>
Date:   Sun Sep 10 13:09:13 2023 +0000

    refactor: re-home some meta code (#6921)

[33mcommit 7d308680dc444730e84a86c72357ad9a7aea9c4b[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Sun Sep 10 08:25:13 2023 +0000

    fix: don't use `False` as a bool, use `false` (#7059)

[33mcommit f91160c3b897ef9698cd3706d2330c3b59fdb3e8[m
Author: Anatole Dedecker <anatolededecker@gmail.com>
Date:   Sun Sep 10 04:46:52 2023 +0000

    chore: fix reference to `compactCovering` in docstring (#7065)

[33mcommit f39f702c5a959e982234aa58fd18cd05b66364a5[m
Author: Anatole Dedecker <anatolededecker@gmail.com>
Date:   Sun Sep 10 03:26:27 2023 +0000

    fix: fix link in docstring of IsWellFounded (#7063)

[33mcommit 4a2385568a01fa6bade831da153dd2b38af368ae[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Sun Sep 10 03:26:26 2023 +0000

    chore: tidy various files (#7041)

[33mcommit a57bfd637191864eb51d9e3ba8f163d83ad6f50d[m
Author: negiizhao <egresf@gmail.com>
Date:   Sun Sep 10 03:26:25 2023 +0000

    feat: roots in an algebra (#6740)
    
    
    
    Co-authored-by: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>

[33mcommit f93f41c18cdb522a8feca6f639ca1d8bfb37ab3b[m
Author: Scott Morrison <scott@tqft.net>
Date:   Sun Sep 10 12:40:42 2023 +1000

    chore: revert ProofWidgets bump in #7044 and #7056 (#7069)
    
    The cache is broken after #7044 and #7056, so I am reverting them. (And merging directly, rather than via bors.)

[33mcommit ff7397ebf652d33f73c896e2abdecb9f815c834e[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Sun Sep 10 00:39:19 2023 +0000

    feat: super factorial (#6768)
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit ab88fbbdb30aeb81a496b4ea23ca0ec47f88074a[m
Author: damiano <adomani@gmail.com>
Date:   Sat Sep 9 23:05:06 2023 +0000

    feat(LinearAlgebra/Matrix/Trace): add Matrix.trace_diagonal (#7061)
    
    The trace of a diagonal matrix is the sum of the diagonal elements.
    
    [Zulip discussion](https://leanprover.zulipchat.com/#narrow/stream/217875-Is-there-code-for-X.3F/topic/Trace.20of.20diagonal)

[33mcommit ae7a2e405d9b9b6b12043697567197a1701e6047[m
Author: Patrick Massot <patrickmassot@free.fr>
Date:   Sat Sep 9 23:05:05 2023 +0000

    chore: complete ProofWidgets bump (#7056)
    
    
    
    Co-authored-by: Wojciech Nawrocki <wjnawrocki@protonmail.com>

[33mcommit b2cf368dbfc04d0eb3f5c500f50293aaad059f39[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Sat Sep 9 21:45:11 2023 +0000

    feat: More `Finset.sup'` lemmas (#7021)
    
    Match https://github.com/leanprover-community/mathlib/pull/18989

[33mcommit a14fcecbe1b1a1d6c9d11878606b3a7a54e9cb97[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Sat Sep 9 20:21:24 2023 +0000

    feat: self_lt_pow (#7058)
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit e07e8ddc829e47680e761283af5b32629be4f3d4[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sat Sep 9 20:21:23 2023 +0000

    chore: move some files to `MeasureTheory/MeasurableSpace/` (#7045)

[33mcommit c69a99d67c402e6b34de17b86ba06960ab75f7c4[m
Author: damiano <adomani@gmail.com>
Date:   Sat Sep 9 19:18:30 2023 +0000

    chore(RingTheory/Nilpotent): untwine two universes (#7057)
    
    A simple replacement: `R S : Type u` changes to `R S : Type*`.  Before this change, the example below failed:
    ```lean
    variable {A B : Type*} [MonoidWithZero A] [MonoidWithZero B]
    
    example {a : A} (ha : IsNilpotent a) (f : A ‚Üí*‚ÇÄ B) : IsNilpotent (f a) := by
      exact ha.map f
    ```

[33mcommit 0948c002be15c13e36f430154c9a142caaa74c6a[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sat Sep 9 17:26:22 2023 +0000

    feat: von Neumann Mean Ergodic Theorem (#6053)

[33mcommit 386927c1c194aa22f7cfa9d2ff785a8350c9317c[m
Author: Anatole Dedecker <anatolededecker@gmail.com>
Date:   Sat Sep 9 15:10:16 2023 +0000

    feat: (sSup, Iic) and (Ici, sInf) are Galois connections (#6951)

[33mcommit 54527c58d123171c36990652e0b9dfabae612d30[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Sat Sep 9 11:57:30 2023 +0000

    feat: derivative along a vector (#7038)
    
    Prerequisite for Rademacher's theorem in #7003
    
    We currently have in mathlib the Fr√©chet derivative, and the derivative of maps defined on the scalar field. In this PR, we introduce another notion, the derivative along a line. It is more elementary (but less well behaved) than the full Fr√©chet derivative.
    
    The API is essentially copied from the file on the one-dimensional derivative, with a few additions that have proved useful for Rademacher's theorem. The API could definitely be expanded, but it's already heavy... I have put everything in the single file `LineDeriv/Basic.lean`, mimicking the directory structure for `FDeriv` and `Deriv` and leaving open the possibility to add other files in this folder with more API.

[33mcommit 43718b8bde561e133edfd4ab8b5def9fb438c18d[m
Author: Alex J Best <alex.j.best@gmail.com>
Date:   Sat Sep 9 05:33:18 2023 +0000

    feat: check for some common git problems in CI (#7043)
    
    Add a couple of actions to automatically complain if people commit two types of bad file (files whose names differ only by case and files which are in the gitignore).

[33mcommit d00a69d57e2232764c9e2d1c0306276b9e074025[m
Author: Patrick Massot <patrickmassot@free.fr>
Date:   Sat Sep 9 05:01:28 2023 +0000

    chore: bump ProofWidgets (#7044)

[33mcommit 527ecc31b2c0624df087d1c94f8c43db9f7ac1e4[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Fri Sep 8 22:32:21 2023 +0000

    feat(Topology/Algebra): add `DiscreteTopology MÀ£` (#7028)
    
    Add instances for `[DiscreteTopology M] : DiscreteTopology M·µê·µí·µñ`
    and `[DiscreteTopology M] : DiscreteTopology MÀ£`,
    as well as additive versions.

[33mcommit 8908a0a5868e57dd4bc6661fd18bab68beee1e49[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Fri Sep 8 21:07:20 2023 +0000

    chore: simplify `by rfl` (#7039)
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit d04897a61efc29f2393f448154f212472c91b47d[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Fri Sep 8 15:47:55 2023 +0000

    chore: tidy various files (#7035)

[33mcommit 686be169f8a0c5157c0ad49a153a8f934146dd8e[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Fri Sep 8 14:39:54 2023 +0000

    refactor(LinearAlgebra/CliffordAlgebra/Conjugation): expose implementation details of 'reverse' (#6783)
    
    Having the fully-bundled `AlgHom` (to `MulOpposite`) is occasionally useful for building larger `AlgHom`s, especially if the `MulOpposite` can be cancelled out later.

[33mcommit bb3c2eb4516de1460ede80f08445d492b196c351[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Fri Sep 8 13:40:44 2023 +0000

    feat: add `DiscreteTopology.of_continuous_injective` (#7029)

[33mcommit 2df6bb4167844ead7631ba547d6a44d465c0b37b[m
Author: Alex J Best <alex.j.best@gmail.com>
Date:   Fri Sep 8 11:01:41 2023 +0000

    feat: restore the module docstring code snippet (#7030)
    
    We had this in mathlib3, allowing one to type `mo` (then press tab, at least for me) in an empty file and have a snippet template of a module docstring inserted with the title named to the filename, which can save a little time.
    The implementation is now a bit overkill as it splits on `_` and capitalizes still to get from the filename to the module title, which likely has no affect for most lean 4 filenames.

[33mcommit c48c769c3e1d68c84f814c1a9f060c493336c817[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Fri Sep 8 11:01:40 2023 +0000

    feat: flesh out the API for `realPart` and `imaginaryPart` (#7023)
    
    Improve API for the `realPart` and `imaginaryPart` maps in a star module over `‚ÑÇ`.
    
    1. remove the `simp` attribute on `realPart_apply_coe` and `imaginaryPart_apply_coe`
    2. construct the `‚Ñù`-linear equivalence `Complex.selfAdjointEquiv` between `selfAdjoint ‚ÑÇ` and `‚Ñù`. In fact, this would be an algebra equivalence, but that requires `selfAdjoint ‚ÑÇ` to have an `algebra ‚Ñù (selfAdjoint ‚ÑÇ)` structure, which it doesn't have.
    3. show the span (over `‚ÑÇ`) of `selfAdjoint A` is `‚ä§ : Submodule ‚ÑÇ A`

[33mcommit bce8378b2796946611b5f6bba9f9c033e7a6a65e[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Fri Sep 8 11:01:38 2023 +0000

    chore: missing simps lemmas for `Multiplicative` defs (#7016)
    
    This also fixes the definitions to not include any defeq abuse, which is required in order to not produce a bad simp lemma.

[33mcommit db154ca046724ea012437eb49f18728a3ea282d0[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Fri Sep 8 11:01:37 2023 +0000

    feat: characterize isLittleO on principal filters (#7008)
    
    And use this to golf `isLittleO_top`.

[33mcommit cc353a57e50b43f9f8a3e0d578fa5f876972eac0[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Fri Sep 8 11:01:36 2023 +0000

    doc: cleanup documentation on Basis.constr (#7007)
    
    Currently, the documentation in the file-level docstring is just wrong.

[33mcommit 5959edf8a779ebd732c115209701f7bf2a98fa00[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Fri Sep 8 11:01:35 2023 +0000

    feat: cleanup API around differentiable functions (#7004)
    
    First calculus prerequisites for Rademacher theorem in #7003.
    
    Add a few lemmas that were available for `FDeriv` but not for `Deriv`, weaken assumptions here and there.

[33mcommit 20aad7f90a2d1207daac1e676073f2995041cda3[m
Author: David Renshaw <dwrenshaw@gmail.com>
Date:   Fri Sep 8 11:01:34 2023 +0000

    feat: add Nat.digits_append_digits (#6999)
    
    Similar to `Nat.ofDigits_digits_append_digits`, but with a `digits` on the RHS instead of an `ofDigits` on the LHS.

[33mcommit 338f41e03f0006b8655df76264691c2fa1993a10[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Fri Sep 8 11:01:33 2023 +0000

    feat: definition of the homology of a short complex (#6994)
    
    This PR introduces the definition `S.homology` for a short complex `S` that "has homology".

[33mcommit 2b261f6dcf68319f2d6ebbdb07a7b7ca675c3fe7[m
Author: Felix-Weilacher <fweilach@andrew.cmu.edu>
Date:   Fri Sep 8 11:01:32 2023 +0000

    chore: implement porting notes about Polish spaces (#6991)
    
    Make the following changes which were intentionally left till after the port:
    
    - Move several instances of `PolishSpace` from MeasureTheory.Constructions.Polish to Topology.MetricSpace.Polish
    
    - Remove instance of `PolishSpace` for `nat -> nat`, since lean4 can find this automatically
    
    - Change `PolishSpace` to extend `SecondCountableTopology`, since lean4 now allows loops in TC inference.

[33mcommit a17d250d7448e12a175a004fee90ba1c463596e7[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Fri Sep 8 11:01:31 2023 +0000

    feat(Algebra/Category/ModuleCat): composition of restriction of scalar functors (#6915)
    
    This PR studies the behaviour of restriction of scalars functors with respect to composition.

[33mcommit 248b0091e74899ac6fc40a2545b4278e522d92b0[m
Author: Xavier Roblot <46200072+xroblot@users.noreply.github.com>
Date:   Fri Sep 8 11:01:29 2023 +0000

    feat: compute the integral of sqrt (1 - x ^ 2) (#6905)
    
    We prove
    ```lean
    theorem integral_sqrt_one_sub_sq : ‚à´ x in (-1 : ‚Ñù)..1, sqrt (1 - x ^ 2) = œÄ / 2
    ```
    which will in turn be used to compute the area of the disc and then the volume of the unit complex ball in #6907

[33mcommit dd9279a5f75923483ecad8e757d2609d77498d87[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Fri Sep 8 11:01:28 2023 +0000

    chore(*/TensorProduct): missing functorial lemmas (#6781)
    
    This adds missing `map_id`, `map_comp`, `congr_refl`, `congr_trans`, and `congr_symm` lemmas.

[33mcommit a384f1b247ecdc81dd85dd7a223cbc094bbe35c4[m
Author: Markus Himmel <markus@himmel-villmar.de>
Date:   Fri Sep 8 11:01:27 2023 +0000

    feat: a functor from a small category to a filtered category factors through a small filtered category (#6212)

[33mcommit 9f97ec195ad6ceecf86ca22fe241abc8b4eb35b4[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Fri Sep 8 09:40:43 2023 +0000

    feat: expand API on locally integrable functions (#7006)
    
    Measure theory prerequisites for Rademacher theorem in #7003.

[33mcommit 55bbc69dd44f871c660f6901d9181651d3937b8c[m
Author: Scott Morrison <scott@tqft.net>
Date:   Fri Sep 8 09:40:42 2023 +0000

    chore: split Tactic.NormNum.Basic (#7002)
    
    This was accumulating a lot of different plugins. This split makes it easier to track which tactics rely on which plugins.
    
    Summary of changes:
    * `Tactic.NormNum.Basic` has had contents split out into separate files:
      * `Eq`
      * `Ineq`
      * `Inv`
      * `Pow`
      * `OfScientific`
    * `Tactic.NormNum.CharZero` has been rolled into the new `Tactic.NormNum.Inv`
    * `Tactic.NormNum.OrderedRing` has been rolled into the new `Tactic.NormNum.Ineq`
    * `Tactic.NormNum` imports all the new plug-in files
    * `Tactic.Ring` only imports the `norm_num` plugins it needs
    * `CancelDenoms` moved to `CancelDenoms.Core` with only the imports needed by the tactic
    * and replaced with a new `CancelDenoms` that imports `CancelDenoms.Core` and some additional imports for plugins that are useful when using `cancel_denoms`
    * `Linarith.Preprocessing` only imports `CancelDenoms.Core`, rather than `CancelDenoms`
    * add imports to `Linarith` that are not needed for the implementation, but make it more powerful
    * `SimpleGraph.Density` requires an additional import because it has been removed earlier.
    * `test/GCongr/inequalities.lean` needs the `OfScientific` plugin.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 257d54b5f5aa1c5efd191ace07aeb17abcbf3275[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Fri Sep 8 08:48:06 2023 +0000

    feat: a few lemmas on continuous functions (#7005)
    
    Topological prerequisites for Rademacher theorem in #7003.

[33mcommit 20cab645c664feaffb2e4a6e9b97376839787eba[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Fri Sep 8 07:26:19 2023 +0000

    feat: ZMod.castHom_self (#7013)
    
    drive-by: typo
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit 8cad453eefc1e46eedba344c16bebe3f0408d79f[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Fri Sep 8 07:26:18 2023 +0000

    feat: Functoriality of `WithUpperSetTopology` (#6988)
    
    A monotone map between preorders spaces induces a continuous map between themselves considered
    with the upper set topology. Similarly for the lower set topology.

[33mcommit 1366b4e12b29b2b0721cc86dda28a064e66e5a6f[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Fri Sep 8 07:26:17 2023 +0000

    chore(Tactic/Basic): add `pp_with_univ` to some builtin types (#6684)
    
    These can't go in the same file as where `pp_with_univ` is defined, so here seems as good as anywhere.
    
    This means `ULift A` now prints as `ULift.{v,u} A`. Ideally it would print as `ULift.{v} A` ([Zulip thread](https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/pp_with_univ.20for.20only.20some.20universe.20arguments/near/386153934)), but this is a problem with pretty much every current use of `pp_with_univ`.
    
    
    
    Co-authored-by: Johan Commelin <johan@commelin.net>

[33mcommit e79d2a791285546f944041dd2c7c941b511bc2f6[m
Author: Chris Hughes <chrishughes24@gmail.com>
Date:   Fri Sep 8 07:26:16 2023 +0000

    fix: remove simp from BoundedFormula.subst and add to realize_subst (#6635)
    
    `mapTermRel` doesn't have any nice simp lemmas about it, so it's best not to unfold subst.

[33mcommit a58dc4fe9822e946061b92f7170dfc9fcff95ae2[m
Author: Chris Hughes <chrishughes24@gmail.com>
Date:   Fri Sep 8 07:26:15 2023 +0000

    feat(ModelTheory): models_of_models_theory (#6566)

[33mcommit 4257c45ea9ea0373817b2fbff309ea310e4a6a53[m
Author: Chris Hughes <chrishughes24@gmail.com>
Date:   Fri Sep 8 07:26:13 2023 +0000

    feat(ModelTheory/Definability): equivalence with an alternative definition (#6558)

[33mcommit d56176f12b78a0cf8454d9c2a6e9e8d4954dc58a[m[33m ([m[1;33mtag: v4.0.0[m[33m)[m
Author: Scott Morrison <scott@tqft.net>
Date:   Fri Sep 8 06:14:16 2023 +0000

    chore: bump to Lean v4.0.0 (#7024)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 4df62d3a826e00dfcf6c103aeab1e414d922b1ed[m
Author: Bolton Bailey <bolton.bailey@gmail.com>
Date:   Fri Sep 8 04:16:23 2023 +0000

    feat: add Finsupp.sum_cons (#6604)
    
    Adds `Finsupp.sum_cons`. Analogous to `Fin.sum_cons`, but for the Finsupp version.
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 9afc13a6d3946a3f7ba2c57214b4f664de35c3a7[m
Author: Alex J Best <alex.j.best@gmail.com>
Date:   Thu Sep 7 23:49:37 2023 +0000

    feat: add an error when eqns will not have desired effect (#7019)
    
    Due to the implementation at https://github.com/leanprover/lean4/blob/a7efe5b60e86b26fefd4795b46d66af369b97329/src/Lean/Meta/Eqns.lean#L83-L96 currently registering eqns will not work if lean already registered some eqns itself.
    
    As a bandaid we make the eqns attribute check and error in this case.

[33mcommit bdc47f6897bd41d0cbeacc8767dea09db3d4e1de[m
Author: Scott Morrison <scott@tqft.net>
Date:   Thu Sep 7 22:31:27 2023 +0000

    chore: avoid lean3 style have/suffices (#6964)
    
    Many proofs use the "stream of consciousness" style from Lean 3, rather than `have ... := ` or `suffices ... from/by`.
    
    This PR updates a fraction of these to the preferred Lean 4 style.
    
    I think a good goal would be to delete the "deferred" versions of `have`, `suffices`, and `let` at the bottom of `Mathlib.Tactic.Have`
    
    (Anyone who would like to contribute more cleanup is welcome to push directly to this branch.)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 2fe0c1c9c7754407a500747e1737b1bdb3f7963c[m
Author: atarnoam <atarnoam@gmail.com>
Date:   Thu Sep 7 21:19:51 2023 +0000

    feat: multiplication on the right preserves left invariant measures (#6071)
    
    The image of a left invariant measure under right addition is left invariant, and if the measure was a Haar measure it is
    stays a Haar measure.
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit a8cb5022c261390f661a9c64c5d59d6fa0c4c9dd[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Thu Sep 7 20:17:21 2023 +0000

    chore: tidy various files (#7017)

[33mcommit f599dc21fcc2d649a34ded14f1d4fe6f4c6dc96c[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Thu Sep 7 19:25:07 2023 +0000

    feat: measurability of the derivative of a function depending on a parameter (#6903)
    
    We reuse the main results that were proved for functions not depending on a parameter (but we need to tweak the definition of the set `A` to let it cover all cases, replacing a large inequality by a strict one).

[33mcommit cc97d0d85b247fe3a1de6fd076ee804a8696929d[m
Author: Scott Morrison <scott@tqft.net>
Date:   Thu Sep 7 12:30:45 2023 +0000

    feat: control labels from comments (#7012)
    
    Same implementation as at Lean and Std, by request from @jcommelin.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 23ffa51000241a871b17ef7ac4b4f76905aafeaf[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Thu Sep 7 12:30:43 2023 +0000

    chore: tidy various files (#7009)

[33mcommit 4f3418a7cad9c453b9036172044585715fe8a0b1[m
Author: Scott Morrison <scott@tqft.net>
Date:   Thu Sep 7 12:30:42 2023 +0000

    chore: delay import of Tactic.Common (#7000)
    
    I know that this is contrary to what we've done previously, but:
    
    * I'm trying to upstream a great many tactics from Mathlib to Std (essentially, everything that non-mathematicians want too).
    * This makes it much easier for me to see what is going on, and understand the import requirements (particularly for the "big" tactics `norm_num` / `ring` / `linarith`)
    * It's actually not as bad as it looks here, because as these tactics move up to Std they will start disappearing again from explicit imports, but Mathlib can happily import all of Std.
    
    (Oh
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit c719310c294c63c4bae7ca9b4e1699629340ee67[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Thu Sep 7 11:10:14 2023 +0000

    feat: sups and limsups are measurable in conditionally complete linear orders (#6979)
    
    Currently, we only have that sups and limsups are measurable in complete linear orders, which excludes the main case of the real line. With more complicated proofs, these measurability results can be extended to all conditionally complete linear orders, without any further assumption in the statements.

[33mcommit f0c7f6d33d32126d9d8ed45390f390a0646a1e35[m
Author: Scott Morrison <scott@tqft.net>
Date:   Thu Sep 7 09:49:32 2023 +0000

    chore: split Data.Rat.Cast (#7001)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 4e5902ac4440852b6fdfb445fd288548c1ff5993[m
Author: Scott Morrison <scott@tqft.net>
Date:   Thu Sep 7 07:07:24 2023 +0000

    chore: avoid using cases' early (#6997)
    
    This will help with my cleanup of the early library, facilitating moving tactics upstream.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit cdd09f00fe17b15f429287b59fc41d292f6b65d9[m[33m ([m[1;31morigin/lftcm[m[33m)[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Thu Sep 7 05:43:50 2023 +0000

    feat: add an instance for `T3Space` (#6861)
    
    Add an instance `[T0Space Œ±] [RegularSpace Œ±] : T3Space Œ±`,
    drop now unneeded lemmas like `TopologicalGroup.t3Space`.
    
    
    
    Co-authored-by: Chris Hughes <chrishughes24@gmail.com>

[33mcommit 9aca15d7cefd64ee8f61c9680c8a402093e0577c[m
Author: Jujian Zhang <jujian.zhang1998@outlook.com>
Date:   Thu Sep 7 05:09:55 2023 +0000

    feat : Stacks: Lemma 0052 (3) irreducible component of noetherian space contains a nonempty open subset (#6881)
    
    any irreducible components of a noetherian space contains a nonempty open subset
    
    
    
    Co-authored-by: Chris Hughes <chrishughes24@gmail.com>

[33mcommit 844436b8e934723791c651c28ca914a34873857d[m
Author: Chris Hughes <chrishughes24@gmail.com>
Date:   Thu Sep 7 00:04:57 2023 +0000

    feat: WithTop.charZero (#6992)
    
    Also `WithBot.charZero`

[33mcommit bf8d6d9ecfe112815261ed94ec2048d46d949b61[m
Author: lines <wren.robson@gmail.com>
Date:   Thu Sep 7 00:04:56 2023 +0000

    feat(LinearAlgebra/Lagrange): Generalize typeclasses. (#6714)
    
    Generalize some key definitions in the definition of Lagrange interpolation.
    
    In particular, the definition of the nodal polynomial does not need to be over a field.

[33mcommit 6079a14f8dbaa7022cd4d43ab27acef77048da4e[m
Author: Thomas Browning <tb65536@uw.edu>
Date:   Thu Sep 7 00:04:55 2023 +0000

    refactor(FieldTheory/NormalClosure): change definition and add API (#6163)
    
    This PR adds API and changes the definition of the normal closure of $F\leq K\leq L$ to be an intermediate field of L/F, rather than an intermediate field of L/K. For example, I think it would be more common to say that the normal closure of $\mathbb{Q}(\sqrt[3]{2})/\mathbb{Q}$ is $\mathbb{Q}(\sqrt[3]{2},\zeta_3)/\mathbb{Q}$ rather than $\mathbb{Q}(\sqrt[3]{2},\zeta_3)/\mathbb{Q}(\sqrt[3]{2})$. This change also means that the normal closure goes from being a dependent function `(K : Type) ‚Üí IntermediateField K L` to being a non-dependent function `Type ‚Üí IntermediateField F L`, making it easier to compare across the Galois corespondence.
    
    Supersedes https://github.com/leanprover-community/mathlib/pull/18971
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>
    Co-authored-by: Thomas Browning <tb65536@users.noreply.github.com>

[33mcommit 2c0daa9c00f4b974f91b16ff57c3a9ab6f687c08[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Wed Sep 6 23:43:34 2023 +0000

    feat: Category of Alexandrov-discrete spaces (#6986)
    
    Define `AlexDisc`, the category of Alexandrov-discrete topological spaces with continuous maps.

[33mcommit 36c3259c12d231e40e2120b9b6ea535550378b93[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Wed Sep 6 23:43:33 2023 +0000

    feat: Type synonym for the specialisation order (#6985)
    
    Define `Specialization Œ±` for a topological space `Œ±` and equip it with the specialisation order.
    
    This constitutes a functor from topological spaces to preorders, and T‚ÇÄ spaces to partial orders.

[33mcommit 8f46576d9af5c2b27a7634b98d049b24aa5cdad9[m
Author: Scott Morrison <scott@tqft.net>
Date:   Wed Sep 6 22:20:07 2023 +0000

    chore: cleanup in Mathlib.Init (#6977)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 90725365f66193126076a44deed8a4c5ab25a307[m
Author: Chris Hughes <chrishughes24@gmail.com>
Date:   Wed Sep 6 21:54:44 2023 +0000

    feat(ModelTheory): iAlls and iExs (#6613)

[33mcommit 3ebc913ecbd0c4c2e6084d75cad472ac9d97d3d4[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Wed Sep 6 20:46:35 2023 +0000

    chore: tidy various files (#6924)

[33mcommit 3b8d2c93e6b77f422aaa4a8365353e7898d02a0b[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Sep 6 19:23:52 2023 +0000

    feat: `Subsingleton` instances for `*Hom` (#6913)
    
    Add `Subsingleton` instances
    for `OneHom`, `MonoidHom`, and `MonoidWithZeroHom`
    from a `Subsingleton`.

[33mcommit 566dc2a53cce341f35a88ae589d518637be69f07[m
Author: Scott Morrison <scott@tqft.net>
Date:   Wed Sep 6 17:49:48 2023 +0000

    chore: reduce imports of Data.Nat.Basic (#6974)
    
    Slightly delay the import of `Mathlib.Algebra.Group.Basic`, to reduce imports for tactics.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 5f6506b3eccd93813264644658136bb31d289993[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Wed Sep 6 16:43:55 2023 +0000

    feat: Monic pochhammer (#6906)
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit 7878119e9e603faaad296ae3722353c28565cec9[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Wed Sep 6 16:43:53 2023 +0000

    feat: port LinearAlgebra.QuadraticForm.Dual (#6885)

[33mcommit c672a3ff65fe819935b124a17e390f80fa002d7c[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Wed Sep 6 15:49:45 2023 +0000

    feat: composition of localization functors (#6882)
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit 04ea0a4b248b758db3e4a936a142f8b0ea5e2fce[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Wed Sep 6 13:50:44 2023 +0000

    feat: `det_vandermonde_add` and `det_vandermonde_sub` (#6812)
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit 380bf315f0882219d944838d55c8a947f3e43c6e[m
Author: lines <wren.robson@gmail.com>
Date:   Wed Sep 6 13:50:43 2023 +0000

    feat(Data/Sum/Basic): create direct versions of get(Left|Right)? analogous to Option.get (#6663)
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit e9d14811c59892636c302bc1f3155aeb76ba9291[m
Author: Kevin Buzzard <k.buzzard@imperial.ac.uk>
Date:   Wed Sep 6 11:21:58 2023 +0000

    fix: typo in docs (#6983)

[33mcommit d67f31e18f147a8d0d0bbd06e845b8dc92d96bc5[m
Author: Scott Morrison <scott@tqft.net>
Date:   Wed Sep 6 11:21:57 2023 +0000

    chore: split Mathlib.Algebra.Invertible (#6973)
    
    `Mathlib.Algebra.Invertible` is used by fundamental tactics, and this essentially splits it into the part used by `NormNum`, and everything else.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 73877f41a41b755ef6016debcd872557f111d241[m
Author: Chris Hughes <chrishughes24@gmail.com>
Date:   Wed Sep 6 11:21:56 2023 +0000

    feat(GroupTheory/CoprodI): add various things (#6900)
    
    
    The main changes made here were
    
    - Adding a `cons` constructor to make a new word where the underlying list is just `cons`. Use this to simplify the definition of `rcons`
    - Defining a `consRecOn` induction principle and use this to simpllify the definition of `equivPairAux`, allowing me to delete the private def `mkAux`
    - Some lemmas about being an element of `rcons` and `smul`

[33mcommit c95f05bdc478b13f154e61b4fcf8641544f05519[m
Author: Matthew Robert Ballard <matt@mrb.email>
Date:   Wed Sep 6 11:21:55 2023 +0000

    chore: update/remove heart beat bumps (#6860)
    
    We clean up heart beat bumps after #6474.

[33mcommit a01099796d71a791174089d37d29d7089c245c40[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Wed Sep 6 11:21:53 2023 +0000

    feat: The forgetful functor on `Stonean`¬†has a left adjoint given by Stone-Cech compactification (#6826)

[33mcommit b1be421a08c577d4d72d3a78f7a6d4a940886596[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Wed Sep 6 11:21:52 2023 +0000

    feat: Stonean is projective in Profinite (#6809)
    
    ... also moves around some stuff and given an epi `f` in `Stonean`, `Profinite` or `CompHaus`, provides instances `[Epi f]` in both the other categories.

[33mcommit 906a71a0140ad3f6c95f95d5278895b46966b4f7[m
Author: Chris Hughes <chrishughes24@gmail.com>
Date:   Wed Sep 6 11:21:51 2023 +0000

    feat: List.head_mem (#6801)

[33mcommit ac32e346cb9c3c0c9a07e0b092d3cd80f4feac1f[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Wed Sep 6 11:21:49 2023 +0000

    feat: pullbacks in Stonean where one map is an open embedding (#6779)
    
    We define pullbacks in `Stonean` of pairs `f`, `i` where `i` is an open embedding, explicitly as the inverse image under `f` of the image of `i`.
    
    Co-authored-by: Riccardo Brasca @riccardobrasca [riccardo.brasca@gmail.com](mailto:riccardo.brasca@gmail.com)
    Co-authored-by: Filippo A E Nuccio @faenuccio [filippo.nuccio@univ-st-etienne.fr](mailto:filippo.nuccio@univ-st-etienne.fr)

[33mcommit 32e9e20958ba53992bee548b1f469faafbd5f919[m
Author: lines <wren.robson@gmail.com>
Date:   Wed Sep 6 11:21:48 2023 +0000

    fix(Logic/Equiv/Basic): Make use of Bool in equivs consistent. (#6736)
    
    See also the poll at https://leanprover.zulipchat.com/#narrow/stream/144837-PR-reviews/topic/.236736.20Bool.20consistency.2E/near/387566483 and the surrounding discussion.

[33mcommit 05b606a97fef493af88f12fb0655a115b1ebd46d[m
Author: Chris Hughes <chrishughes24@gmail.com>
Date:   Wed Sep 6 11:21:47 2023 +0000

    feat(ModelTheory): simp attribute on realize_relabel (#6656)

[33mcommit efa84af4a83127ec3559e3cdfbe1c79bd3946f07[m
Author: Chris Hughes <chrishughes24@gmail.com>
Date:   Wed Sep 6 11:21:46 2023 +0000

    feat(ModelTheory): sups of finite sets of formulas (#6654)
    
    
    
    Co-authored-by: Chris Hughes <33847686+ChrisHughes24@users.noreply.github.com>

[33mcommit a0814b88c8f20757c2cac0c4846e3ba076fcd3bb[m
Author: Patrick Massot <patrickmassot@free.fr>
Date:   Wed Sep 6 11:21:44 2023 +0000

    chore: remove succ from Stirling (#6280)
    
    The Stirling formula file was full of `n.succ` whose only purpose was to steer automatic coercion to a real number. Then formulas became unreadable and had to be restated in docstrings, leading to the error flagged [on zulip](https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/Typo.20in.20documentation.20of.20.60log_stirling_seq_formula.60/near/380554733)
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit db7fecc0133c2f1014348e23849181bd336513ee[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Wed Sep 6 10:25:45 2023 +0000

    feat: Kernel of a filter (#6981)
    
    Define the kernel of a filter as the intersection of its sets and show it forms a Galois coinsertion with the principal filter.

[33mcommit b550667f6871e142a506631ba39105f070b1d1dd[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Wed Sep 6 10:25:44 2023 +0000

    feat: Strengthening an equiv to an homeo (#6980)
    
    Add `Equiv.toHomeomorph`, a convenient version of `Equiv.toHomeomorph_of_inducing`.

[33mcommit 61fa6e960daa833f70f32195fb410e0b68742086[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Wed Sep 6 09:06:46 2023 +0000

    feat: pochhammer_natDegree (#6897)
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit d9573627bf9a66293613016ec37e1e005ce488cf[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Wed Sep 6 09:06:45 2023 +0000

    feat(linear_algebra/orientation): add `orientation.reindex` (#6889)
    
    This forward-ports leanprover-community/mathlib#19236

[33mcommit 79f281ac8dd9ba107649792faefe483bf8cc1c5c[m
Author: Chris Hughes <chrishughes24@gmail.com>
Date:   Wed Sep 6 09:06:43 2023 +0000

    perf(GroupTheory/CoprodI): Get rid of one use of with in an instance (#6830)
    
    
    
    Co-authored-by: Chris Hughes <33847686+ChrisHughes24@users.noreply.github.com>

[33mcommit bdbeb48080a02306eadb0609f48b344266bd67b6[m
Author: Alex J Best <alex.j.best@gmail.com>
Date:   Wed Sep 6 09:06:42 2023 +0000

    feat: add a --fix option to attempt to autofix simple style issues (#6568)
    
    This is still written in python, and still a bit "manual" whereas a full reimplementation as an autoformatter would be better, but this hopefully provides a convenient way to fix common issues.
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 48eb1fbca70539c1b9a163d6b4269512fba5c681[m
Author: damiano <adomani@gmail.com>
Date:   Wed Sep 6 09:06:41 2023 +0000

    chore: golf using `compute_degree` (#6222)
    
    This PR is a companion to #6221.  It uses the tactic `compute_degree` to golf two proofs and restore a proof closer to its mathlib3 version.

[33mcommit b5528b3bc9b00c7fc2fd16479e4dbd3f16c7ce37[m
Author: Scott Morrison <scott@tqft.net>
Date:   Wed Sep 6 07:39:12 2023 +0000

    chore: cleanup Mathlib.Init.Data.Prod (#6972)
    
    Removing from `Mathlib.Init.Data.Prod` from the early parts of the import hierarchy.
    
    While at it, remove unnecessary uses of `Prod.mk.eta` across the library.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 55a12e0d98d98d34ec7824a01207645fb02546bc[m
Author: Scott Morrison <scott@tqft.net>
Date:   Wed Sep 6 07:39:10 2023 +0000

    chore: cleanup old toolchains in CI (#6969)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 22b9ffe9619fa42b8cef237974c60317a781db74[m
Author: Scott Morrison <scott@tqft.net>
Date:   Wed Sep 6 07:39:08 2023 +0000

    chore: remove @[defaultTarget] from checkYaml and runLinter (#6967)
    
    Having `@[defaultTarget]` on `checkYaml` and `runLinter` meant that these were compiled every time someone ran `lake build`. This involves compilation steps, which are not provided by the cache, and so `lake build` could be noisy even with Mathlib was otherwise ready to use:
    
    ```
    % lake build
    [976/3736] Compiling Mathlib.Tactic.ToLevel
    [981/3736] Compiling Mathlib.Lean.CoreM
    [982/3736] Compiling Mathlib.Tactic.PPWithUniv
    [990/3736] Compiling Mathlib.Util.WhatsNew
    [990/3736] Compiling Mathlib.Mathport.Rename
    [990/3736] Compiling Mathlib.Tactic.DeriveToExpr
    [991/3736] Compiling Mathlib.Tactic.ToExpr
    [1011/3736] Building scripts.checkYaml
    [1016/3736] Building scripts.runLinter
    [2414/3736] Compiling scripts.checkYaml
    [2891/3736] Compiling scripts.runLinter
    [3736/3736] Linking runLinter
    [3736/3736] Linking checkYaml
    ```
    (possibly followed by a page of linking warnings for people on older macos)
    
    As these are not compiled by `lake build` anymore, we make sure to use `lake exe` at the point of use rather than assuming the binary is already there.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit c161d1800ce3788307e2d726b7a265549a1c04d7[m
Author: Scott Morrison <scott@tqft.net>
Date:   Wed Sep 6 06:13:58 2023 +0000

    chore: delay import of NeZero until after basic hierarchy (#6970)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit d432864936da5e332f35fae780ed8d82fc7f971b[m
Author: Scott Morrison <scott@tqft.net>
Date:   Wed Sep 6 06:13:56 2023 +0000

    feat: better handling of cancellation in feedback to Lean4 PRs (#6912)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 3d1bfa5b730bbc24e6c48cafc623e6f1d8b48415[m
Author: Scott Morrison <scott@tqft.net>
Date:   Wed Sep 6 04:50:55 2023 +0000

    chore: ensure Ring/Defs doesn't depend on Group/Basic (#6956)
    
    In the basic algebraic hierarchy, the `Defs` files should ideally only depend on earlier `Defs` files, importing as little theory as possible.
    
    This PR makes some rearrangements so `Ring.Defs` can depend on `Group.Defs` rather than requiring `Group.Basic`.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 5ea095ef4ce2001d47a1e25ccbfadd7f059c7ab8[m
Author: Scott Morrison <scott@tqft.net>
Date:   Wed Sep 6 03:42:55 2023 +0000

    chore: bump for Std4#240 (#6968)
    
    The `replace` tactic was upstreamed in https://github.com/leanprover/std4/pull/240.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 44f5524554f8b0b74b8274e4113d39b3ede240eb[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Tue Sep 5 23:13:09 2023 +0000

    feat: Alexandrov-discrete spaces (#6962)
    
    We define Alexandrov-discrete spaces as topological spaces where the intersection of a family of open sets is open.
    
    This PR only gives a minimal API because the goal is to ensure that lemma names like `isOpen_sInter` are free to use for `AlexandrovDiscrete`. The existing lemmas are getting prefixed by `Set.Finite` or suffixed by `_of_finite`.

[33mcommit 686671be7b2efe6fd65b15f615e69ba079bc870d[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Tue Sep 5 20:39:16 2023 +0000

    feat(CategoryTheory): misc lemmas about morphism properties (#6887)
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit 1f3d3886a1240e49430518767d3e42c786112573[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Tue Sep 5 16:59:38 2023 +0000

    feat: the shift on the category of cochain complexes (#6626)
    
    This PR constructs the shift on the category of cochain complexes.
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit 03c21faf973bc8accdf48e1f30061aa880d507d5[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Sep 5 15:17:42 2023 +0000

    feat(Topology): add `IsCompact.nhdsSet_prod_eq` etc (#6961)
    
    Also delete `NhdsContainBoxes` and related lemmas as they were only used for another proof of `generalized_tube_lemma`.

[33mcommit 18d1194b306425c097bcc9be079c578c8a08dd8e[m
Author: Scott Morrison <scott@tqft.net>
Date:   Tue Sep 5 15:17:41 2023 +0000

    chore: minimise imports in Tactic/Ring (#6960)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit ab52fda385ddaebb1db141149631dbcc08f69e26[m
Author: Thomas Browning <tb65536@uw.edu>
Date:   Tue Sep 5 14:01:34 2023 +0000

    refactor(Data/Int/Units): golf `isUnit_eq_or_eq_neg` (#6952)
    
    This PR adds an `IsUnit` version of `units_ne_iff_eq_neg` and uses it to golf `isUnit_eq_or_eq_neg`.

[33mcommit 25328470a55aa09a7ffa69d801e8c890e13dd31f[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Tue Sep 5 14:01:33 2023 +0000

     feat: more API for the complex of morphisms between cochain complexes (#6894)
    
    This PR shows that the composition of cochains is bilinear and introduces the differential on cochains.

[33mcommit 99d769196d55441e44fc3e2c38c822ee699c5692[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Tue Sep 5 14:01:32 2023 +0000

    feat: change junk value for supremum of unbounded sets (#6870)
    
    We switch from `sSup univ` to `sSup ‚àÖ` for the supremum of unbounded sets in a conditionally complete linear order. These quantities already coincide for all concrete instances in mathlib. With the new convention one gets additionally the theorem
    ```lean
    theorem cbiSup_eq_of_not_forall {p : Œπ ‚Üí Prop} {f : Subtype p ‚Üí Œ±} (hp : ¬¨ (‚àÄ i, p i)) :
        ‚®Ü (i) (h : p i), f ‚ü®i, h‚ü© = iSup f ‚äî sSup ‚àÖ
    ```
    which will be convenient for general measurability statements.

[33mcommit a88ee8c5c9f6ea438a9b36eb1904523f6c7bca65[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Tue Sep 5 14:01:30 2023 +0000

    feat(CategoryTheory): morphisms of localizers (#6869)
    
    This PR introduces the categorical notion of morphisms of localizers.
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit 5c1d35971bf47d519c661244850bb89877b195e6[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Tue Sep 5 14:01:29 2023 +0000

    feat: the shift on the category of triangles (#6688)
    
    If a preadditive category `C` is equipped with a shift by the integers, then the category of triangles in `C` is also equipped with a shift.

[33mcommit 788a9389adcd7664b303e57e3c5bdf85c0e43254[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Tue Sep 5 14:01:28 2023 +0000

    feat: the shift induced on a localized category (#6655)
    
    This PR shows that when a morphism property `W` on a category is compatible with the shift by a monoid `A`, then the localized category can also be equipped with a shift.
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 5498737f4ddc8b7943cfd3fb99eba86d29d554e7[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Tue Sep 5 12:17:35 2023 +0000

    chore: rename isBoundedBilinearMapApply to isBoundedBilinearMap_apply (#6963)

[33mcommit a1fd072e8a44a5555ba109dbb6049c8e715e01b2[m
Author: Scott Morrison <scott@tqft.net>
Date:   Tue Sep 5 10:32:04 2023 +0000

    chore: minimize imports in NormNum.Core (#6953)
    
    Reducing the imports in `Mathlib.Tactic.NormNum.Core` a bit.
    
    (I was thinking about whether it might be possible to upstream some of `norm_num`. As is it has a lot of prerequisites!)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit b47296c9650af9fc2ddf3c58ba6e5ea882ec8e82[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Tue Sep 5 10:32:03 2023 +0000

    feat(RingTheory/FiniteType): generalize results to non-commutative generators (#6757)
    
    Many of the proofs in this file go via quotients of `MvPolynomial`; but this forces a commutativity assumption that can be avoided by instead going via quotients of `FreeAlgebra`.
    
    Most of the new `FreeAlgebra` results are just copies of the proofs for `MvPolynomial`, which isn't ideal in terms of duplication.

[33mcommit 6da248626fad9d075eb1c428ec58acc4ccfc1ab9[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Sep 5 10:32:01 2023 +0000

    feat: generalize some lemmas from a normed space to a TVS (#5771)
    
    - Generalize `FiniteDimensional.complete`, `Submodule.complete_of_finiteDimensional` from a
      normed space over `ùïú` to a uniform additive commutative group that is a TVS over `ùïú`.
    - Generalize `Submodule.closed_of_finiteDimensional`, `LinearMap.closedEmbedding_of_injective`,
      `closedEmbedding_smul_left` `isClosedMap_smul_left`, and
      `ContinuousLinearMap.exists_right_inverse_of_surjective` from a normed space to a TVS.
    - Rename `finiteDimensional_of_isCompact_closed_ball‚ÇÄ` to
      `finiteDimensional_of_isCompact_closedBall‚ÇÄ`.
    
    
    
    Co-authored-by: ADedecker <anatolededecker@gmail.com>

[33mcommit 560425d20af49dd39b8bc9262d8d9d1909b49a59[m
Author: Scott Morrison <scott@tqft.net>
Date:   Tue Sep 5 09:13:09 2023 +0000

    feat: split Logic.Nontrivial (#6959)
    
    This continues reducing the import requirements for the basic algebraic hierarchy.
    
    In combination with #6954 #6955 #6956 #6957, this reduces the imports for `Mathlib.Algebra.Field.Defs` from
    
    * [before.pdf](https://github.com/leanprover-community/mathlib4/files/12518547/before.pdf)
    * [after.pdf](https://github.com/leanprover-community/mathlib4/files/12518546/after.pdf)
    
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 6226f9303265d60c69e22fa8f85d0b46901b9c26[m
Author: Scott Morrison <scott@tqft.net>
Date:   Tue Sep 5 09:13:08 2023 +0000

    chore: redundant import (#6957)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 9a51c25f4b4d7fb971da5413a6e8092b21af94f2[m
Author: Scott Morrison <scott@tqft.net>
Date:   Tue Sep 5 09:13:07 2023 +0000

    chore: separate NeZero dependency from Nat/Cast/Defs (#6955)
    
    I'm trying to remove any extraneous material from the core definitions in the algebraic hierarchy that are used in tactics.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 6aa77b129f9c47c76c547407bb878d25645600f9[m
Author: Scott Morrison <scott@tqft.net>
Date:   Tue Sep 5 09:13:05 2023 +0000

    chore: split out IsField (#6954)
    
    
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 08ccb2bf666099363a1aad8fd9bf19d512833969[m
Author: Scott Morrison <scott@tqft.net>
Date:   Tue Sep 5 09:13:04 2023 +0000

    chore: @[simp] cancel_(right|left) (#6300)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 5dac7e8d551ccbb757855db8acec18bea2932fdf[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Tue Sep 5 08:30:49 2023 +0000

    feat: the shift on a quotient category (#6653)
    
    This PR constructs the shift on a quotient category.
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit 4047be941a5603144b02ac9b3868963e614e3d71[m
Author: Scott Morrison <scott@tqft.net>
Date:   Tue Sep 5 07:06:36 2023 +0000

    chore: remove unnecessary imports in tactics (#6940)
    
    This is motivated by preparations for upstreaming tactics to Std.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 27866b848920f9620ed5a72c9039fff58e479d6f[m
Author: Arthur Paulino <arthurleonardo.ap@gmail.com>
Date:   Mon Sep 4 23:28:23 2023 +0000

    feat: documentation for `Mathlib.Tactic.Have` (#6950)
    
    This PR adds documentation for `Mathlib.Tactic.Have`
    
    It also deletes content in a namespace that was instructed to be deleted after the merge of https://github.com/leanprover/lean4/pull/2262, which was merged in the 9th of June (2023)

[33mcommit ef128c47113a367d85abef2a4e3ffde05978e091[m
Author: Scott Morrison <scott@tqft.net>
Date:   Mon Sep 4 23:06:51 2023 +0000

    chore: run cache in archive and counterexamples (#6945)
    
    Speeds up the 180s build of `Archive` and `Counterexamples` to about 45s.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit e92aa3c82cf269b6347ebfeeff559cd28f3decdd[m
Author: Oliver Nash <github@olivernash.org>
Date:   Mon Sep 4 22:10:46 2023 +0000

    feat: further theory about the Killing form of Lie algebras (#6737)

[33mcommit 02e140cbb5b8c5d2b40bd06c0c5f01b16316b0c6[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Mon Sep 4 20:25:50 2023 +0000

    feat: Girth of a simple graph (#6948)
    
    Define the girth of a simple graph as a `‚Ñï‚àû`.

[33mcommit 2f410e1ee3eeb7b9953e4e7f66169f0595148263[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Mon Sep 4 17:35:38 2023 +0000

    feat(Algebra): integer powers of -1 (#6720)
    
    This PR introduces the map `Int.negOnePow : ‚Ñ§ ‚Üí ‚Ñ§` which sends `n` to `(-1 : Units ‚Ñ§) ^ n`.
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit 22f1f9fc3f4c2a2eddcc49a342200e32959918a4[m
Author: Chris Hughes <chrishughes24@gmail.com>
Date:   Mon Sep 4 17:05:07 2023 +0000

    feat: Binary coproducts of Monoids (#6828)

[33mcommit 174c56b3caf830635b120f5e51c5df22b8284fdf[m
Author: Chris Hughes <chrishughes24@gmail.com>
Date:   Mon Sep 4 17:05:05 2023 +0000

    chore: redefine AlgebraicClosure to make certain instance diagrams commute (#6734)
    
    A similar trick to the trick used in #4891 makes all the required type class diagrams commute.
    
    I also added instances for `CharP` and `CharZero` and tests for the instance diagrams.
    
    
    
    Co-authored-by: Chris Hughes <33847686+ChrisHughes24@users.noreply.github.com>

[33mcommit f3bcca592192b92c27c57b82ce96cbfe506e6167[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Mon Sep 4 17:05:04 2023 +0000

    feat: abelian categories have homology (#6586)
    
    
    
    
    Co-authored-by: Johan Commelin <johan@commelin.net>
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit b1caad96de9fedbef8dec022c46a8be940ddd5b2[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Mon Sep 4 16:01:21 2023 +0000

    refactor: colimits in ModuleCat (#6925)
    
    This PR refactors the construction of colimits of modules in order to prove that the forgetful functor to abelian groups preserves colimits.

[33mcommit 25953fdd85d46ad90c6a88a7ba7f6a484c510a9e[m
Author: Chris Hughes <chrishughes24@gmail.com>
Date:   Mon Sep 4 16:01:20 2023 +0000

    refactor(QuotientGroup): small change to statement of lift (#6848)

[33mcommit 7a05698b7c68102f60ab1ce9a83b6d6dd16c8b08[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Mon Sep 4 15:04:20 2023 +0000

    feat: `x ‚Ü¶ x / a` tendsto to infinity in `‚Ñï` (#6914)
    
    and a few lemmas missing from `Order.Filter.AtTopBot`.

[33mcommit 80b90ea716641947a1d41a6738e493955a9ca50c[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Mon Sep 4 15:04:19 2023 +0000

    feat: the induced shift on the target category of a functor (#6652)
    
    When a functor `F : C ‚•§ D` satisfies a suitable condition, this PR constructs a shift on the category `D` from a shift on the category `C`.

[33mcommit 8dcd6db9f563ed341be34a057ef1bd2b7eead2d7[m
Author: Timo <timorcb@gmail.com>
Date:   Mon Sep 4 15:04:17 2023 +0000

    feat(SetTheory/ZFC): ZFSet is the type of small sets of ZFSets (#6226)

[33mcommit 9615a16231c61331f4095672b2c32beebe5502f6[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Mon Sep 4 14:41:03 2023 +0000

    feat: uniqueness of the localized category up to equivalence (#6867)

[33mcommit 1c6dff23edb6019f2577ad33a1b0a17e8cc8c57a[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Mon Sep 4 14:41:02 2023 +0000

    feat: first definitions in the API for the homology of short complexes (#6443)
    
    In this PR, some basic constructions for left and right homology of short complexes are combined.
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit a085bc37fe2c104426a6f860ad49fea560e7844d[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Mon Sep 4 13:19:04 2023 +0000

    feat(Data/Nat/Order/Basic): le_one_iff_eq_zero_or_eq_one (#6949)
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit 1cf05bbe535635a753ec388621c726f879ea1a28[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Mon Sep 4 13:19:03 2023 +0000

    feat: More complete lattice `WithTop` lemmas (#6947)
    
    and corresponding lemmas for `‚Ñï‚àû`.
    
    Also fix implicitness of `iff` lemmas.

[33mcommit 05474e33212ac3bd5dac6b78f84a28080feabee9[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Sep 4 13:19:02 2023 +0000

    feat(Data/Set): +3 lemmas about `Set.inclusion` (#6944)

[33mcommit faba1c3eb8838b67c3eb08b266dec300f7c83889[m
Author: Scott Morrison <scott@tqft.net>
Date:   Mon Sep 4 13:19:01 2023 +0000

    chore: delete restate_axiom (#6939)
    
    This isn't used in Mathlib4, and wasn't useful during the port, so I think we can just drop it now.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 8dea0d0f6b6eff9a1a8ca9fcd2bf62b096971cc6[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Mon Sep 4 13:19:00 2023 +0000

    chore: Fix `add_left_embedding_eq_add_right_embedding` name (#6935)
    
    This was accidentally snake case.

[33mcommit fa813a8e75b4b7fd2ee7ee388672d4e9957ff15b[m
Author: Chris Hughes <chrishughes24@gmail.com>
Date:   Mon Sep 4 13:18:59 2023 +0000

    feat(Int/Units): a few lemmas about ‚Ñ§À£ (#6933)

[33mcommit 57559c59a501e14bcdd3ddef0fca4834decaa271[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Mon Sep 4 13:18:58 2023 +0000

    feat: Sup-closed sets (#6901)
    
    This defines sets closed under supremum/infimum, shows that every set has a sup-closure/inf-closure and prove that if every sup-closed/inf-closed set in a sup-semilattice/inf-semilattice has a least upper bound/greatest lower, then the lattice is in fact complete.
    
    As a bonus, we use our new predicate in `Order.CompactlyGenerated`.
    
    Co-authored-by: Christopher Hoskin <christopher.hoskin@gmail.com>

[33mcommit 351431b22254f03dddc405eddab3057c0a9ec6bd[m
Author: Oliver Nash <github@olivernash.org>
Date:   Mon Sep 4 13:18:56 2023 +0000

    feat: nilpotent matrices have nilpotent trace (#6588)
    
    Also some related results
    
    Co-authored-by: damiano <adomani@gmail.com>

[33mcommit 699bc9052925f727d41f74511f26b0cdc15f4bcb[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Mon Sep 4 12:27:13 2023 +0000

    chore(Analysis): rename lipschitz_on_univ to lipschitzOn_univ (#6946)
    
    Also rename `dimH_image_le_of_locally_lipschitz_on` to `dimH_image_le_of_locally_lipschitzOn`.

[33mcommit 01fd4ae9d7d2500add74deb5c5b74db763a38f34[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Sep 4 08:29:01 2023 +0000

    feat: kernel of `orthogonalProjection K` is `K·óÆ` (#6943)

[33mcommit 278b4e15c698b59b9fa3c59eee93526f8f69d4b4[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Sep 4 08:28:59 2023 +0000

    feat(Equicontinuity): equicontinuous family converges on a closed set (#6942)
    
    If `F : Œπ ‚Üí X ‚Üí Œ±` is an equicontinuous family of functions
    and `f : X ‚Üí Œ±` is a continuous function,
    then `{x | Tendsto (F ¬∑ x) l (ùìù (f x))}` is a closed set.

[33mcommit 04d2f7d820511fda372fed336de9258da13b6254[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Sep 4 07:35:19 2023 +0000

    fix(Analysis,Topology): fix names (#6938)
    
    Rename:
    
    - `tendsto_iff_norm_tendsto_one` ‚Üí
      `tendsto_iff_norm_div_tendsto_zero`;
    - `tendsto_iff_norm_tendsto_zero` ‚Üí
      `tendsto_iff_norm_sub_tendsto_zero`;
    - `tendsto_one_iff_norm_tendsto_one` ‚Üí
      `tendsto_one_iff_norm_tendsto_zero`;
    - `Filter.Tendsto.continuous_of_equicontinuous_at` ‚Üí
      `Filter.Tendsto.continuous_of_equicontinuousAt`.

[33mcommit 3f9dee6adf287742f66dfda5079840cb2497af69[m
Author: kkytola <kalle.kytola@aalto.fi>
Date:   Sun Sep 3 21:10:29 2023 +0000

    chore: Undo adding a heavy import in MeasureTheory.Integral.Lebesgue. (#6850)
    
    Create a new file `MeasureTheory.Integral.Indicator` to undo adding the import of `MeasureTheory.Constructions.BorelSpace.Metrizable` in `MeasureTheory.Integral.Lebesgue` introduced in #6225.

[33mcommit 8c47c4038ef15eef85511d722c657967f031d078[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sun Sep 3 19:50:33 2023 +0000

    feat: define weakly locally compact spaces (#6770)

[33mcommit 58a5282edc54bb625e573d9b501cfd60259f7c43[m
Author: Pedro S√°nchez Terraf <pedrost@gmail.com>
Date:   Sun Sep 3 17:06:30 2023 +0000

    feat(SetTheory): definition of initial ordinals, œâ‚ÇÅ as an ordinal, ordinal-indexed unions (#6404)
    
    - I setup notation for the first ordinal in each cardinality.
    - `œâ‚ÇÅ` is defined as an ordinal, not as an `out` (cf. `MeasureTheory.CardMeasurableSpace`).
    - Lemma using the cofinality of `œâ‚ÇÅ`.
    - Lemma on the cardinality of ordinal-indexed `iUnion`s in preparation for material on the Borel hierarchy.
    
    
    
    Co-authored-by: Pedro S√°nchez Terraf <sterraf@users.noreply.github.com>
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>

[33mcommit a28c357d33f8896af66dbc4d11055a38c0ab9cc0[m
Author: Chris Hughes <chrishughes24@gmail.com>
Date:   Sun Sep 3 15:44:14 2023 +0000

    feat(GroupTheory/Complement): the equivalence and some corresponding lemmas (#6899)
    
    
    
    Co-authored-by: Chris Hughes <33847686+ChrisHughes24@users.noreply.github.com>

[33mcommit b6962296badb73eaa6457845f4a7c091fbe84728[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Sun Sep 3 15:44:13 2023 +0000

    feat: The range in a succ order is unbounded (#6883)
    
    Strictly monotone/antitone functions from an order without top/bottom to a succ/pred order have unbounded range.

[33mcommit 8e53cc7d476d4d8d802b794fed1ea5512dc5cd88[m
Author: Christopher Hoskin <christopher.hoskin@gmail.com>
Date:   Sun Sep 3 15:44:12 2023 +0000

    feat(Order/CompletePartialOrder): Introduce complete partial orders (#6170)
    
    This PR considers complete partial orders (sometimes called directedly complete partial orders). These are partial orders for which every directed set has a least upper bound. Complete partial orders are a natural framework for studying approximations and fixed point theorems (Davey & Priestley, Chapter 8).
    
    
    
    Co-authored-by: Ya√´l Dillies <yael.dillies@gmail.com>
    Co-authored-by: Christopher Hoskin <mans0954@users.noreply.github.com>
    Co-authored-by: Christopher Hoskin <christopher.hoskin@overleaf.com>

[33mcommit 8c7f8f7d1d5102104a2ed0b6c46b8363b4311e1b[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Sun Sep 3 14:49:51 2023 +0000

    feat(NumberTheory/Padics/PadicVal): factorial_choose' (#5860)
    
     -  [x] depends on: #5803
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>
    Co-authored-by: Kyle Miller <kmill31415@gmail.com>

[33mcommit 21873b49da099479ac3bfd70cd3c6600b8194429[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Sun Sep 3 13:54:30 2023 +0000

    chore(Order.Filter): remove duplicated lemmas (#6932)
    
    Remove the lemmas `le_pure_iff_eq_pure` (duplicate of `NeBot.le_pure_iff`) and `eq_bot_or_pure_of_subsingleton_mem` (duplicate of `subsingleton_iff_bot_or_pure`).
    
    This requires moving a few lemmas after their non-duplicate prerequisites.

[33mcommit 0ed13e59b57bfb99824bc6d72e1c240eacb8e4fe[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Sun Sep 3 13:01:48 2023 +0000

    docs: Improve `DenseEmbedding` explanation (#6817)
    
    Match https://github.com/leanprover-community/mathlib/pull/18134

[33mcommit a128cd995f9117c3a933d37b295d7a6b89a348a0[m
Author: kkytola <kalle.kytola@aalto.fi>
Date:   Sun Sep 3 11:06:39 2023 +0000

    feat: push-forwards of finite measures and probability measures (#6551)
    
    Add push-forwards of finite measures and probability measures, and prove that push-forwards under continuous functions are continuous (w.r.t. the topologies of weak convergence of measures).
    
    Besides being a natural addition to the API, this should enable simple proofs of, for example, continuity of some parametric distributions (multi-dimensional gaussians, exponential distribution, ...) with respect to their parameters.
    
    
    
    Co-authored-by: kkytola <39528102+kkytola@users.noreply.github.com>

[33mcommit acc7084b6ebbdb1f2f27776bf26acc1ef9b829fb[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sat Sep 2 21:54:42 2023 +0000

    feat(Topology/../Equicontinuity): add lemmas about finite index type (#6849)

[33mcommit 0135e4c13f2442a950e3d5bed49cd1ccf47972e3[m
Author: MohanadAhmed <m.a.m.elhassan@gmail.com>
Date:   Sat Sep 2 20:42:59 2023 +0000

    feat: Elements less than some value of a sorted tuple are at the beginning of the tuple. (#6728)
    
    For a sorted (monotone) tuple containing n elements with exactly r elements less than or equal some value, all these elements are at the first r locations of the tuple.
    
    Proofs by @Ruben-VandeVelde , @ericrbg @eric-wieser see [Zulip Thread](https://leanprover.zulipchat.com/#narrow/stream/217875-Is-there-code-for-X.3F/topic/Sorted.20nonnegative.20tuple.20must.20have.20zero.20elements.20at.20start)
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 1cd61aa9c3b02d98faf04b94a016a63f2e319c6a[m
Author: Jeremy Tan Jie Rui <reddeloostw@gmail.com>
Date:   Sat Sep 2 17:53:21 2023 +0000

    feat: Zagier's "one-sentence proof" of Fermat's theorem on sums of two squares (#6629)

[33mcommit 8953aea386bf2eb7b00350bb5d4379b43d100399[m
Author: Chris Hughes <chrishughes24@gmail.com>
Date:   Sat Sep 2 16:56:54 2023 +0000

    fix: remove a bad Algebra instance in FractionRing (#6724)

[33mcommit 40f72b5538c9bf81ce9009aee2d4dd159a78f126[m
Author: Thomas Browning <tb65536@uw.edu>
Date:   Sat Sep 2 15:49:48 2023 +0000

    feat(GroupTheory/CommutingProbability): Group with commuting probability exactly 1/n (#6582)
    
    This PR constructs a group with commuting probability exactly 1/n as a product of dihedral groups.
    
    Besides independent interest, this construction is useful for handling factors of 1/n (e.g., the end of this blog post: https://randompermutations.com/2015/02/06/commuting-probability-of-compact-groups/).

[33mcommit e319f2a7634928f78210d006ab07e7a913993227[m
Author: Anatole Dedecker <anatolededecker@gmail.com>
Date:   Sat Sep 2 14:31:58 2023 +0000

    chore: factor out "DTT hell" of Equiv.piCongrLeft to a single proof (#6835)

[33mcommit f327170d3097ca4517bc4ed41a92847bf0bfce64[m
Author: damiano <adomani@gmail.com>
Date:   Sat Sep 2 12:08:48 2023 +0000

    feat: tactic `compute_degree` (#6221)
    
    This PR ports the whole `compute_degree` tactic from mathlib3.
    
    The tactic makes progress on goals of the form
    *  `natDegree f ‚â§ d`,
    *  `degree f ‚â§ d`,
    *  `natDegree f = d`,
    *  `degree f = d`,
    *  `coeff f n = r`.
    
    The variant `compute_degree!` applies `norm_num` and `assumption` to all left-over goals.
    
    For instance, here is a valid computation of the degree of the 105-th cyclotomic polynomial:
    ```lean
    example : natDegree
        (1 + X + X ^ 2 - X ^ 5 - X ^ 6 - 2 * X ^ 7 - X ^ 8 - X ^ 9 + X ^ 12 + X ^ 13 + X ^ 14 +
            X ^ 15 + X ^ 16 + X ^ 17 - X ^ 20 - X ^ 22 - X ^ 24 - X ^ 26 - X ^ 28 + X ^ 31 + X ^ 32 +
            X ^ 33 + X ^ 34 + X ^ 35 + X ^ 36 - X ^ 39 - X ^ 40 - 2 * X ^ 41 - X ^ 42 - X ^ 43 +
            X ^ 46 + X ^ 47 + X ^ 48 : ‚Ñ§[X]) = 48 := by
      compute_degree!
    ```
    (Lean takes approximately 3s on my computer to prove the computation above.)
    
    Affected files:
    ```
    Mathlib/Lean/Expr/Basic.lean
    Mathlib/Tactic/ComputeDegree.lean
    test/ComputeDegree.lean
    ```

[33mcommit fcac03a462fdb371edc5c1b027cc0db7b7a63d5c[m
Author: Chris Hughes <chrishughes24@gmail.com>
Date:   Sat Sep 2 10:56:36 2023 +0000

    feat(Subgroup): apply_ofInjective_symm (#6898)
    
    
    
    Co-authored-by: Chris Hughes <33847686+ChrisHughes24@users.noreply.github.com>

[33mcommit f36f228405e08bf81beaa1ed9370799c3af46e55[m
Author: Antoine Chambert-Loir <antoine.chambert-loir@u-paris.fr>
Date:   Sat Sep 2 08:01:51 2023 +0000

    fix(GroupTheory/GroupAction/Basic): correct name from to_additive (#6920)
    
    correct `AddAction.mem_fixedPoints_iff_card_orbit_eq_zero` to `AddAction.mem_fixedPoints_iff_card_orbit_eq_one`,
    as it was wrongly chosen from `MulAction.mem_fixedPoints_iff_card_orbit_eq_one` by to_additive tag
    
    
    
    Co-authored-by: Antoine Chambert-Loir <antoine.chambert-loir@math.univ-paris-diderot.fr>

[33mcommit ab6dac98bb953d089da09ebad00a2ec2b39794ce[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Sat Sep 2 07:00:01 2023 +0000

    fix: set `vsc` variable properly in debian install script (#6922)
    
    This simply redirects standard error to `/dev/null` in the `which` commands so that it doesn't set the `vsc` variable to garbage.

[33mcommit 16aae960701d02214dd95080a534800c2fbbaf76[m
Author: Alex J Best <alex.j.best@gmail.com>
Date:   Fri Sep 1 23:02:31 2023 +0000

    feat: let `apply_fun` apply functions at LT and Ne hypotheses (#6807)
    
    
    
    
    Co-authored-by: Kyle Miller <kmill31415@gmail.com>

[33mcommit cda5caa719c6f4cebb505d3bc9250e3bbaf0fc67[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Fri Sep 1 20:13:24 2023 +0000

    chore: tidy various files (#6838)

[33mcommit b5fcdfd9ab980f9a809f92cc27b3cba7d5abffcd[m
Author: Xavier Roblot <46200072+xroblot@users.noreply.github.com>
Date:   Fri Sep 1 13:27:42 2023 +0000

    feat: define the discriminant of a number field (#6394)
    
    This PR defines the discriminant of a number field as the discriminant of `RingOfIntegers.basis` and proves some basic results, mainly: it does not depend upon the choice of the integral basis and it is equal to 1 for `‚Ñö`.

[33mcommit 45570400f56b907d2032c91dd5d61eaa46e3857e[m
Author: negiizhao <egresf@gmail.com>
Date:   Fri Sep 1 11:54:54 2023 +0000

    chore: fix universe (#6911)

[33mcommit fbaf76bb20e118d11b86cd5b893b75287d1db45b[m
Author: Scott Morrison <scott@tqft.net>
Date:   Fri Sep 1 11:26:31 2023 +0000

    fix: use token when CI merges to nightly-testing (#6916)
    
    If we use the default tokens, then further workflows are not triggered by the pushes here.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 5e3de160241c384193f474cd07c55650f5011df6[m
Author: Scott Morrison <scott@tqft.net>
Date:   Fri Sep 1 09:37:54 2023 +0000

    ci: automated `nightly-testing` branch (#6823)
    
    This PR adds three workflows that manage a `nightly-testing` branch.
    
    * Every commit to `master` is merged to `nightly-testing`, resolving conflicts in favour of `nightly-testing`.
    * Once a day the `lean-toolchain` is bumped to the newest Lean nightly release.
    * If CI fails, a bot posts in the mathlib reviewers stream.
    
    The aim is to get quick notification that a nightly release of Lean is incompatible with Mathlib.
    
    The `nightly-testing` branch is not intended to ever contain human contributions, and in particular it is always okay to delete it and recreate it from `master`.
    
    If there are breaking changes:
    * If it could be fixed by a change to Mathlib that would work both on the current `lean-toolchain` used by `master`, and the latest nightlies, please make the PR to Mathlib `master`.
    * If it requires a fix that doesn't make sense on the current `lean-toolchain` used by `master`, please make a PR with a new `lean-toolchain`, mark that PR as `blocked-by-core-release`, but also **merge** your PR into `nightly-testing` (once you've verified it works!)
    
    There is no attempt to avoid repeated messages if we've already notified zulip about the failure, and subsequent commits continue to fail. Suggestions for dealing with that welcome.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 5eb78105b3a483f7c7d559900f0d3b735722be00[m
Author: Scott Morrison <scott@tqft.net>
Date:   Fri Sep 1 06:07:43 2023 +0000

    fix: handling of newlines in CI comments to Lean4 (#6909)
    
    I didn't get escaping right the [first time](https://github.com/leanprover-community/mathlib4/pull/6866#discussion_r1311279563).
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 3d839ab8d2ce3144f938c05fd3763c83e2e7d56b[m
Author: Scott Morrison <scott@tqft.net>
Date:   Fri Sep 1 05:47:17 2023 +0000

    fix: correct link to workflow when reporting CI to Lean4 repo (#6908)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 0469f845e132ccd0e56c40aafd34bd9084c104bb[m
Author: Heather Macbeth <25316162+hrmacbeth@users.noreply.github.com>
Date:   Thu Aug 31 14:25:02 2023 +0000

    chore: bump Std (#6884)
    
    We gain https://github.com/leanprover/std4/pull/236 and https://github.com/leanprover/std4/pull/235.

[33mcommit 0a4dce795bdc4b1b3b1380912780d9cc17fb6966[m
Author: Scott Morrison <scott@tqft.net>
Date:   Thu Aug 31 13:03:29 2023 +0000

    feat: report back to lean4 repository results of lean-pr-testing branches (#6866)
    
    
    
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 93e701cad990aff30a8e6ce39b260940b1802c65[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Thu Aug 31 13:03:27 2023 +0000

    feat: the atTop filter is countably generated in a second-countable topology (#6864)

[33mcommit 23550c1e3b21f7f3312acb901cef261f51219f72[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Thu Aug 31 11:52:56 2023 +0000

    feat: the complement of a countable set is path-connected in dimension > 1 (#6690)
    
    Also show that spheres are path-connected in dimension > 1.

[33mcommit dd94c82dda3dbccce23e150c02e8e0981ffa16bb[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Thu Aug 31 10:55:38 2023 +0000

    feat(Data/../ENNReal): add 2 lemmas (#6819)

[33mcommit 658235826386f03bfb2b231fa42ead956567ce60[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Thu Aug 31 09:57:56 2023 +0000

    chore(Topology/Algebra/Group): golf, move (#6820)
    
    Move some lemmas from `Topology.Algebra.UniformGroup` to
    `Topology.Algebra.Group.Basic`, golf.

[33mcommit 9648a9a2b21f19b1766ff588420172a37e79d3a4[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Thu Aug 31 08:18:29 2023 +0000

    feat: define the union of two coverages (#6878)

[33mcommit 85c04e73b7248ddc9f4748e86d4d4339d985b14d[m
Author: Christopher Hoskin <christopher.hoskin@gmail.com>
Date:   Thu Aug 31 08:18:28 2023 +0000

    refactor(Algebra/Star/*): Allow for star operation on non-associative algebras (#6562)
    
    Typically a * operation on a mathematical structure `R` equipped with a multiplication is an involutive anti-automorphism i.e.
    ```
    ‚àÄ r s : R, star (r * s) = star s * star r
    ```
    Currently mathlib defines a class `StarSemigroup` to be a semigroup satisfying this property. However, the requirement for the multiplication to be associative is unnecessarily restrictive. There are important classes of star-algebra which are not associative (e.g. JB*-algebras).
    
    This PR removes the requirement for a  `StarSemigroup` to be a semigroup, merely requiring it to have a multiplication.
    
    I've changed the name from `StarSemigroup` to `StarMul` since it's no longer a semigroup.
    
    [Zulip discussion](https://leanprover.zulipchat.com/#narrow/stream/116395-maths/topic/non-associative.20*-algebras)
    
    Previously opened as a mathlib PR https://github.com/leanprover-community/mathlib/pull/17949
    
    
    
    Co-authored-by: Christopher Hoskin <mans0954@users.noreply.github.com>
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 404fef6ad12cb12ee80c6ec597612118fa4b54ec[m
Author: Jon Eugster <eugster.jon@gmail.com>
Date:   Thu Aug 31 07:47:20 2023 +0000

    chore: move `Game` to `SetTheory.Game` (#6365)
    
    move `Game` and `PGame` into namespace `SetTheory` as `_root_.Game` might collide with other definitions (e.g. in projects depending on mathlib)

[33mcommit 2fa7e88ae8c2a0ad44a548be921c0af59c7381fc[m
Author: Jeremy Tan Jie Rui <reddeloostw@gmail.com>
Date:   Thu Aug 31 07:25:14 2023 +0000

    docs: Better explain `FarFromTriangleFree` (#6696)

[33mcommit 5fdbb6a3784e34446303de2d8e8467ecb74bd2bc[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Thu Aug 31 06:59:37 2023 +0000

    feat: some instances for effective epimorphic families (#6879)
    
    We provide some instances for effective epimorphic families whose coproduct exists.

[33mcommit dd781b4101c2d151a556ea1323191a6e56f3c92e[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Thu Aug 31 04:41:08 2023 +0000

    chore: move 2 files to a new folder (#6853)
    
    Later I'm going to split files like `Lipschitz` into 2: one in `EMetricSpace/`
    and one in `MetricSpace/`.

[33mcommit bfb6bb73fcf42809d0a0a27bcc876b09aec36fb3[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Wed Aug 30 22:54:58 2023 +0000

    refactor: remove PiLp.equiv (#6501)
    
    This removes the `(PiLp.equiv 2 fun i => Œ± i)` abbreviation, replacing it with its implementation `(WithLp.equiv 2 (‚àÄ i, Œ± i))`. The same thing is done for `PiLp.linearEquiv`.

[33mcommit 0a341a6168d1d4d00754eca1eb3730b501bddc67[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Aug 30 21:33:56 2023 +0000

    refactor(Data/Set): redefine `Set.Nontrivial` (#6805)
    
    Fixes #4353

[33mcommit bae4f344736fec2adab0a0902a7113e3dea4161f[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Aug 30 16:50:32 2023 +0000

    feat: define `ProperConstSMul` (#6675)

[33mcommit 20d01623a897718dc2ec9da8b8f30f4ef2b98c87[m
Author: Scott Morrison <scott@tqft.net>
Date:   Wed Aug 30 15:04:49 2023 +0000

    feat: fix bug in MVarId.independent? and handling of symm in solve_by_elim (#6862)
    
    Fixes the `exact?` bug reported at https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/exact.3F.20recent.20regression.3F/near/387691588.
    
    Diagnosing this problem also revealed https://github.com/leanprover/lean4/issues/2483, which we work around here (thanks @kmill) rather than wait for.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 2d4a7e079332b99e4f147f75c35a9eab971ec1af[m[33m ([m[1;33mtag: v4.0.0-rc4[m[33m)[m
Author: Scott Morrison <scott@tqft.net>
Date:   Wed Aug 30 13:20:23 2023 +0000

    chore: bump to v4.0.0-rc4 (#6873)
    
    
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 571a128435c5bbc1c4040539bef0483536af2e5b[m
Author: Martin Dvo≈ô√°k <martin.dvorak@matfyz.cz>
Date:   Wed Aug 30 09:45:59 2023 +0000

    chore(Algebra/Group/Basic): remove redundant declaration (#6871)

[33mcommit cc016b6463c62bb4ae5ddb751734ee4d41a6f811[m
Author: Scott Morrison <scott@tqft.net>
Date:   Wed Aug 30 07:55:56 2023 +0000

    chore: bump upstream dependencies (#6865)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit e8477a93d0167f0ba267556bd90720efe762529c[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Wed Aug 30 03:48:21 2023 +0000

    chore: rm `@[simp]` from factorial_succ (#6840)
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit c83178f4f1ae5a706bf6e6775e358db260030e72[m
Author: Scott Morrison <scott@tqft.net>
Date:   Wed Aug 30 00:51:00 2023 +0000

    chore: bump quote4 (#6857)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 0c4163fd9970c28032641a1b7dc78188cda8a0ce[m
Author: Floris van Doorn <fpvdoorn@gmail.com>
Date:   Tue Aug 29 21:39:54 2023 +0000

    refactor: split `MeasureTheory.Group.Integration` (#6715)
    
    I want to use the lemma `lintegral_add_right_eq_self` in a file that doesn't import Bochner integration.

[33mcommit 7df583cc32a6c570c8c0cd6ce03638d980a70617[m
Author: Martin Dvo≈ô√°k <martin.dvorak@matfyz.cz>
Date:   Tue Aug 29 19:05:08 2023 +0000

    feat(Data/List/Basic): mem_doubleton (#6756)

[33mcommit 81b27a4280624d4e3545a858c6ccfeb38f508b66[m
Author: kkytola <kalle.kytola@aalto.fi>
Date:   Tue Aug 29 16:55:05 2023 +0000

    feat: add the portmanteau implication from Borel set limit condition to closed set limsup condition (#6253)
    
    Add one implication of portmanteau theorem: a Borel set limit condition implies a closed set limsup condition.
    
    
    
    Co-authored-by: kkytola <‚Äúkalle.kytola@aalto.fi‚Äù>
    Co-authored-by: kkytola <39528102+kkytola@users.noreply.github.com>

[33mcommit 2865aeda84135fad248864181270996cbf195fe2[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Tue Aug 29 15:10:23 2023 +0000

    feat: multiplicative morphism properties (#6698)
    
    This PR introduces the notion of multiplicative morphism property, i.e. contains identities and is stable under composition.
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit cac4c90d484524dc1b797eaa775193f932bee9d0[m
Author: Scott Morrison <scott@tqft.net>
Date:   Tue Aug 29 13:52:36 2023 +0000

    feat: rw? uses local hypotheses (#6764)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 46f6f34063bce6359ec55fc1eb5702b9092857c1[m
Author: Scott Morrison <scott@tqft.net>
Date:   Tue Aug 29 12:49:38 2023 +0000

    feat: Estimator typeclass and implementation for Levenshtein distance (#6119)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>
    Co-authored-by: Thomas Browning <tb65536@uw.edu>
    Co-authored-by: Chris Hughes <chrishughes24@gmail.com>
    Co-authored-by: Oliver Nash <github@olivernash.org>
    Co-authored-by: sgouezel <sebastien.gouezel@univ-rennes1.fr>
    Co-authored-by: Alex J Best <alex.j.best@gmail.com>
    Co-authored-by: Xavier Roblot <46200072+xroblot@users.noreply.github.com>
    Co-authored-by: michaellee94 <michael_lee1@brown.edu>

[33mcommit 33a92b681d5df854acadfa505793c08ecf9b5938[m
Author: Jeremy Tan Jie Rui <reddeloostw@gmail.com>
Date:   Tue Aug 29 10:56:21 2023 +0000

    chore: delete empty `Card` file from #6341 (#6842)

[33mcommit 9c42de5a4b8a516e76b40275e585eb90a7adcaf6[m
Author: damiano <adomani@gmail.com>
Date:   Tue Aug 29 10:34:53 2023 +0000

    docs(CategoryTheory/EssentialImage): typo and punctuation (#6841)
    
    Fix a typo, add two periods.

[33mcommit 1680acb65aeb224e8366c2734f6ef78e5045aa52[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Tue Aug 29 08:16:37 2023 +0000

    feat: the category of presheaves of modules is preadditive (#6837)
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit d7b5d387e1c0701865b8254e5be8c4ed422e7c1a[m
Author: Scott Morrison <scott@tqft.net>
Date:   Tue Aug 29 03:36:02 2023 +0000

    feat: lower bounds for Levenshtein edit distance (#6118)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>
    Co-authored-by: Thomas Browning <tb65536@uw.edu>
    Co-authored-by: Chris Hughes <chrishughes24@gmail.com>
    Co-authored-by: Oliver Nash <github@olivernash.org>
    Co-authored-by: sgouezel <sebastien.gouezel@univ-rennes1.fr>
    Co-authored-by: Alex J Best <alex.j.best@gmail.com>
    Co-authored-by: Xavier Roblot <46200072+xroblot@users.noreply.github.com>
    Co-authored-by: michaellee94 <michael_lee1@brown.edu>

[33mcommit b9d6ccb61a810dec9a6f25c4588535ca956add8f[m
Author: Scott Morrison <scott@tqft.net>
Date:   Tue Aug 29 02:16:41 2023 +0000

    chore: reduce withImportModules duplication (#6482)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 0a43d126385269f048bcdcf0fa872e1e12740e33[m
Author: Scott Morrison <scott@tqft.net>
Date:   Tue Aug 29 00:54:33 2023 +0000

    chore: fix bug in rw? (#6088)
    
    This fixes a problem I encountered in another tactic, where the rewrites are not being tried with the original `MetavarContext`.
    
    
    
    Co-authored-by: Kevin Buzzard <k.buzzard@imperial.ac.uk>
    Co-authored-by: Joachim Breitner <mail@joachim-breitner.de>
    Co-authored-by: Chris Hughes <chrishughes24@gmail.com>
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>
    Co-authored-by: Anatole Dedecker <anatolededecker@gmail.com>
    Co-authored-by: Thomas Browning <tb65536@uw.edu>
    Co-authored-by: Oliver Nash <github@olivernash.org>
    Co-authored-by: sgouezel <sebastien.gouezel@univ-rennes1.fr>
    Co-authored-by: Alex J Best <alex.j.best@gmail.com>
    Co-authored-by: Xavier Roblot <46200072+xroblot@users.noreply.github.com>
    Co-authored-by: michaellee94 <michael_lee1@brown.edu>
    Co-authored-by: Yuma Mizuno <mizuno.y.aj@gmail.com>
    Co-authored-by: Markus Himmel <markus@himmel-villmar.de>
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>
    Co-authored-by: Peiran Wu <15968905+wupr@users.noreply.github.com>
    Co-authored-by: Moritz Firsching <moritz.firsching@gmail.com>
    Co-authored-by: Yury G. Kudryashov <urkud@urkud.name>
    Co-authored-by: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
    Co-authored-by: Anne Baanen <vierkantor@vierkantor.com>
    Co-authored-by: Bolton Bailey <bolton.bailey@gmail.com>
    Co-authored-by: Fr√©d√©ric Dupuis <dupuisf@iro.umontreal.ca>
    Co-authored-by: Moritz Doll <moritz.doll@googlemail.com>
    Co-authored-by: kkytola <kalle.kytola@aalto.fi>
    Co-authored-by: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
    Co-authored-by: damiano <adomani@gmail.com>
    Co-authored-by: Kyle Miller <kmill31415@gmail.com>
    Co-authored-by: R√©my Degenne <remydegenne@gmail.com>
    Co-authored-by: Jz Pan <acme_pjz@hotmail.com>
    Co-authored-by: Eric Rodriguez <ericrboidi@gmail.com>

[33mcommit 9b9a1a5a3347776508138e469fe30a32a737cf1c[m
Author: Alex J Best <alex.j.best@gmail.com>
Date:   Mon Aug 28 22:49:52 2023 +0000

    chore: cleanup unneeded lines (#6829)
    
    After https://github.com/leanprover/std4/pull/230, and clear some unused imports

[33mcommit af00132509c0902eaf543d2a98818f1d2ebeb465[m
Author: Markus Himmel <markus@himmel-villmar.de>
Date:   Mon Aug 28 21:38:14 2023 +0000

    feat: upgrade a functor to a functor to structured arrows (#6787)

[33mcommit a8ca8271ea610e0e0e4d11eb2366b33cfed9a4c8[m
Author: Alex J Best <alex.j.best@gmail.com>
Date:   Mon Aug 28 21:38:13 2023 +0000

    feat: use the function to help elaborate the injectivity lemma in `apply_fun` (#6733)
    
    
    
    Co-authored-by: Kyle Miller <kmill31415@gmail.com>

[33mcommit 7499ee49bab1bc11ebac98aa32bffbe51ed1d9d2[m
Author: Markus Himmel <markus@himmel-villmar.de>
Date:   Mon Aug 28 21:38:12 2023 +0000

    refactor: move morphisms in StructuredArrow to a lower universe (#6397)
    
    This PR changes the definition
    ```lean
    abbrev fromPUnit (X : C) : Discrete PUnit.{v + 1} ‚•§ C :=
      (Functor.const _).obj X
    ```
    to
    ```lean
    abbrev fromPUnit (X : C) : Discrete PUnit.{w + 1} ‚•§ C :=
      (Functor.const _).obj X
    ```
    and then redefines
    ```lean
    def StructuredArrow (S : D) (T : C ‚•§ D) :=
      Comma (Functor.fromPUnit S) T
    ```
    to
    ```lean
    def StructuredArrow (S : D) (T : C ‚•§ D) :=
      Comma (Functor.fromPUnit.{0} S) T
    ```
    
    The effect of this is that given `{C : Type u‚ÇÅ} [Category.{v‚ÇÅ} C] {D : Type u‚ÇÇ} [Category.{v‚ÇÇ} D] (S : D) (T : C ‚•§ D)`, the morphisms of `StructuredArrow S T` no longer live in `max v‚ÇÅ v‚ÇÇ`, but in `v‚ÇÅ`, as they should. Thus, this PR is basically a better version of #6388.
    
    My guess for why we used to have the larger universe is that back in the day, the universes for limits were much more restricted, so stating the results of `Limits/Comma.lean` was not possible if the morphisms of `StructuredArrow` live in `v‚ÇÅ`. Luckily, by now it is possible to state everything correctly, and this PR adjusts `Limits/Comma.lean` and `Limits/Over.lean` accordingly.

[33mcommit cf01bdac5d88dbecde40d580ea1a989e3ebe8b43[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Mon Aug 28 20:53:59 2023 +0000

    chore: fix SHA for Dold-Kan equivalence files (#6834)

[33mcommit 837c4ae201ef879e060695d205c09f64fe5dcd26[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Mon Aug 28 19:47:53 2023 +0000

    chore: tidy various files (#6577)

[33mcommit 08334f552c6d6d6d8ae7ea02ac6dd2d88f51e083[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Mon Aug 28 19:24:28 2023 +0000

    feat: basic results about epi/mono/iso in pretriangulated categories (#6815)
    
    In this PR, it is shown that in pretriangulated categories, monomorphisms (and epimorphisms) split. In a distinguished triangle, a morphism is an isomorphism iff the third object is zero.

[33mcommit bcd40be144973b3386cc387dd57ecaf482b9532e[m
Author: Jon Eugster <eugster.jon@gmail.com>
Date:   Mon Aug 28 14:22:33 2023 +0000

    fix(Tactic/ExtractGoal): remove mathport's placeholder syntax for `extract_goal` (#6707)
    
    `extract_goal` has been implemented in #4595.
    
    Currently `import Mathlib.Mathport.Syntax` (or `import Mathlib`) overwrites this with a placeholder syntax yielding: `tactic 'Mathlib.Tactic.extractGoal' has not been implemented`
    
    
    
    
    Co-authored-by: Kyle Miller <kmill31415@gmail.com>

[33mcommit 8dd91afb8f37f14024ee48161cc60b73933d1de7[m
Author: damiano <adomani@gmail.com>
Date:   Mon Aug 28 13:36:25 2023 +0000

    lint(scripts/lint-style): Add linting for lower-case clashes (#6825)
    
    Introduce a global check on git-managed filenames in the whole repository, making sure that the filenames are distinct also up to upper/lower casing.
    
    Fixes an issue that came up when two file names that only differed by their casing were imported in a case-insensitive operating system.
    
    As a check, I pushed [branch#adomani/testUpperLowerLinter](https://github.com/leanprover-community/mathlib4/tree/adomani/testUpperLowerLinter) from this PR containing `CODe_OF_CONDUCT.md` alongside `CODE_OF_CONDUCT.md`.  The [linter failed](https://github.com/leanprover-community/mathlib4/actions/runs/5997399826/job/16263715177) on that branch.

[33mcommit 91f0ca6403c51ed1aef4a31692dcd1117232937b[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Mon Aug 28 13:36:24 2023 +0000

    feat: inclusion maps into finite coproducts in Stonean are open embeddings (#6774)
    
    ... both the explicit and the abstract one.
    
    - [x] depends on: #6771
    
    Co-authored-by: Riccardo Brasca @riccardobrasca [riccardo.brasca@gmail.com](mailto:riccardo.brasca@gmail.com)
    Co-authored-by: Filippo A E Nuccio @faenuccio [filippo.nuccio@univ-st-etienne.fr](mailto:filippo.nuccio@univ-st-etienne.fr)

[33mcommit 7c2f38417705b7e03c912ae025ff41f8a8c3c4e7[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Mon Aug 28 12:46:49 2023 +0000

    feat: generalize sheaf condition to only the relevant pullbacks existing (#6750)
    
    We define a predicate `Presieve.hasPullbacks` which says that the pullback of every pair of arrows in the presieve exists. This allows to generalize `Equalizer.Presieve.sheaf_condition` to categories that don't necessarily have all pullbacks (such as `Stonean`).
    
    Co-authored-by: Riccardo Brasca @riccardobrasca [riccardo.brasca@gmail.com](mailto:riccardo.brasca@gmail.com)
    Co-authored-by: Filippo A E Nuccio @faenuccio [filippo.nuccio@univ-st-etienne.fr](mailto:filippo.nuccio@univ-st-etienne.fr)

[33mcommit 5bf01a878b7708fa1adb1103a47c97883baa24ad[m
Author: Scott Morrison <scott@tqft.net>
Date:   Mon Aug 28 11:01:16 2023 +0000

    chore: bump Std (#6822)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit a80d330cac8f1d82b69767e1412893ac36ca6c00[m[33m ([m[1;33mtag: v4.0.0-rc2[m[33m)[m
Author: Scott Morrison <scott@tqft.net>
Date:   Mon Aug 28 07:27:07 2023 +0000

    chore: bump to v4.0.0-rc2 (#6824)
    
    This is actually a no-op, as `v4.0.0-rc2` points to the same commit as `nightly-2023-08-23`. But the plan is to wean us off the nightly releases and on to release candidates, so might as well start now.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 9460288d5fd2c6b224869e8d774dcea4c4225e3b[m
Author: damiano <adomani@gmail.com>
Date:   Mon Aug 28 05:30:46 2023 +0000

    fix(test/{ Change - change }): merge the files test/Change and test/change (#6821)
    
    The motivation is that on case-insensitive system, the files overwrite each other.
    
    The `bash` command
    ```bash
    # uniq -D: print all duplicate lines
    git ls-files | sort --ignore-case | uniq -D --ignore-case
    ```
    lists all the paths that are identical when upper/lower case is ignored.
    
    [Zulip](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/test.2Fchange.2Elean)

[33mcommit 16a23a0733296144dbd17c1d63e942b7ff452efb[m
Author: Markus Himmel <markus@himmel-villmar.de>
Date:   Sun Aug 27 17:09:59 2023 +0000

    feat: more API for Sigma.map' (#6811)

[33mcommit 7a05c35fdce79a5bdd7cab497a19ba239ff72fcb[m
Author: Markus Himmel <markus@himmel-villmar.de>
Date:   Sun Aug 27 16:15:49 2023 +0000

    feat: functoriality of StructuredArrow.homMk' (#6813)

[33mcommit 1e89b24fbe4c81cd8f2a17f541c6aca9e8033db7[m
Author: Chris Hughes <33847686+ChrisHughes24@users.noreply.github.com>
Date:   Sun Aug 27 14:55:32 2023 +0000

    feat: Function.End.one_def and mul_def (#6802)
    
    
    
    Co-authored-by: Chris Hughes <chrishughes24@gmail.com>

[33mcommit 9a9e31c76cebda72027752554b7da6c991fcc231[m
Author: Moritz Doll <kmill31415@gmail.com>
Date:   Sun Aug 27 12:05:24 2023 +0000

    feat: `congr(...)` congruence quotations and port `congrm` tactic (#2544)
    
    Adds a term elaborator for `congr(...)` "congruence quotations". For example, if `hf : f = f'` and `hx : x = x'`, then we have `congr($hf $x) : f x = f' x'`. This supports the functions having implicit arguments, and it has support for subsingleton instance arguments. So for example, if `s t : Set X` are sets with `Fintype` instances and `h : s = t` then `congr(Fintype.card $h) : Fintype.card s = Fintype.card t` works.
    
    Ports the `congrm` tactic as a convenient frontend for applying a congruence quotation to the goal. Holes are turned into congruence holes. For example, `congrm 1 + ?_` uses `congr(1 + $(?_))`. Placeholders (`_`) do not turn into congruence holes; that's not to say they have to be identical on the LHS and RHS, but `congrm` itself is responsible for finding a congruence lemma for such arguments.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>
    Co-authored-by: Moritz Doll <moritz.doll@googlemail.com>

[33mcommit dd64a902f2ef6b970ae0bf581ac0bd1cbb3070b1[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Sun Aug 27 09:46:50 2023 +0000

    fix: doc for fin_cases (#6744)
    
    With the `*`, I'm getting a syntax error, so I propose to have an example that actually works (or fixing `fin_cases` that it works with `*`.)
    
    
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit e11aa034fd2c7ce4723a0586165a1b207af48d4f[m
Author: damiano <adomani@gmail.com>
Date:   Sun Aug 27 09:46:49 2023 +0000

    feat: tactic `change? _` (#6471)
    
    Writing `change? (some term)` tries to unify the given term with the current goal and prints the result of unification (and instantiation of meta-variables).  This is useful to replace a `dsimp` by a `change ...`, when you already know what you would like the end defeq expression to look like.
    
    [Zulip discussion](https://leanprover.zulipchat.com/#narrow/stream/270676-lean4/topic/Copying.20from.20the.20widget.20view)

[33mcommit c1c4bde31e285fcd787d1f7d306ce98028bde992[m
Author: Chris Hughes <chrishughes24@gmail.com>
Date:   Sun Aug 27 08:28:31 2023 +0000

    chore(Group): protect things like Semigroup.mul_assoc (#6799)

[33mcommit 5359fc26b2693273914df8a743a001b439cf8b97[m
Author: damiano <adomani@gmail.com>
Date:   Sun Aug 27 08:28:30 2023 +0000

    chore: port and reorder some imports, remove duplicate split_ifs in Tactic.Common (#6798)

[33mcommit d7d4e1fc3768d8fecafd5f1429a663e8b6cbb2bc[m
Author: damiano <adomani@gmail.com>
Date:   Sun Aug 27 08:28:29 2023 +0000

    chore(Topology/Sheaves/Forget): port an example from a comment (#6796)
    
    I left the example in the docs, so that it shows up in doc-gen, and I duplicated it outside of the docs, so that it does not rot.

[33mcommit 93bcc03c5df0247deb02ddb336c811ad0a664ffd[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Sun Aug 27 08:28:28 2023 +0000

    chore: rename `Nat.shiftl'` to `Nat.shiftLeft'` (#6788)
    
    This makes it match the unprimed `Nat.shiftLeft`.
    
    Follows on from #6356 which removed `Nat.shiftl`.

[33mcommit 49a849ef6552d31540f743c26285990701af0365[m
Author: Alex J Best <alex.j.best@gmail.com>
Date:   Sun Aug 27 05:46:32 2023 +0000

    feat: fix norm num with arguments (#6600)
    
    `norm_num` was passing the wrong syntax node to `elabSimpArgs` when elaborating, which essentially had the effect of ignoring all arguments it was passed, i.e. `norm_num [add_comm]` would not try to commute addition in the simp step.
    The fix itself is very simple (though not obvious to debug!), probably using TSyntax more would help avoid such issues in future.
    
    Due to this bug many `norm_num [blah]` became `rw [blah]; norm_num` or similar, sometimes with porting notes, sometimes not, we fix these porting notes and other regressions during the port also.
    
    Interestingly `cancel_denoms` uses `norm_num [<- mul_assoc]` internally, so  `cancel_denoms` also got stronger with this change.

[33mcommit 06f8796bb8be7836bf42619a83e69991d6c13ed1[m
Author: Alex J Best <alex.j.best@gmail.com>
Date:   Sun Aug 27 02:59:13 2023 +0000

    feat: have library search use the whole range for replacement (#6782)
    
    previously `apply? using h` would replace to `refine blah using h` rather than `refine blah`.
    
    This also changes the diagnostic message to be on the whole syntax `apply? using h` rather than just the `apply?` bit, which seems fine to me.

[33mcommit 695a349f6487822074617a149fff2b291bfbd8b7[m
Author: Alex J Best <alex.j.best@gmail.com>
Date:   Sun Aug 27 02:59:11 2023 +0000

    chore: cleanup Gcongr after std4#137 (#6775)

[33mcommit 73156237d3c805023e714e9735c76e341e37597e[m
Author: Alex J Best <alex.j.best@gmail.com>
Date:   Sun Aug 27 02:59:10 2023 +0000

    feat: make mk_iff produce terms with default lambda binders in exists (#6765)
    
    Previously the produced lemmas could look bad with the default exists delaborator i.e.
    https://leanprover-community.github.io/mathlib4_docs/Mathlib/Data/Multiset/Basic.html#Multiset.Rel_iff
    
    I see no reason to keep the implicitness of the original inductive in an existential

[33mcommit 6b391efa697c6b0e8590cac08cc1c3ec02974702[m
Author: Joachim Breitner <mail@joachim-breitner.de>
Date:   Sun Aug 27 01:38:26 2023 +0000

    field_simp: Use positivity as a discharger (#6312)
    
    The main reasons is that having `h : 0 < denom` in the context should suffice for `field_simp` to do its job, without the need to manually pass `h.ne` or similar.
    
    Quite a few `have := ‚Ä¶ ‚â† 0` could be dropped, and some `field_simp` calls no longer need explicit arguments; this is promising.
    
    This does break some proofs where `field_simp` was not used as a closing tactic, and it now
    shuffles terms around a bit different. These were fixed. Using `field_simp` in the middle of a proof seems rather fragile anyways.
    
    As a drive-by contribution, `positivity` now knows about `œÄ > 0`.
    
    fixes: #4835
    
    
    
    
    Co-authored-by: Matthew Ballard <matt@mrb.email>

[33mcommit c39c6f7897a0cc1856a5db2ad783792a51ca065e[m
Author: Chris Hughes <chrishughes24@gmail.com>
Date:   Sat Aug 26 23:29:48 2023 +0000

    refactor(QuotientGroup): Generalize some things to Monoids (#6804)

[33mcommit 0beb1d08bfc3243ece0a76339caf7e06cc7f9adf[m
Author: Markus Himmel <markus@himmel-villmar.de>
Date:   Sat Aug 26 20:43:32 2023 +0000

    feat: construct maps between products with different indexing types (#6792)

[33mcommit f8d81046ef6446e4648f6526b8b752a2f7da6fdf[m
Author: Yuma Mizuno <mizuno.y.aj@gmail.com>
Date:   Sat Aug 26 19:18:55 2023 +0000

    feat(CategoryTheory/Bicategory): define left Kan extensions (#6552)
    
    The basic design follows the API for colimits in the category theory library.
    
    The dictionary looks like:
    Current PR
    `LeftExtension` <-> `Limits.Cocone`
    `LeftExtension.IsKan` <-> `Limits.IsColimit`
    Future PR
    `LeftExtension.HasKan` <-> `Limits.HasColimit`
    `lan` <-> `Limits.colimit`
    
    The diagrams in the docs are far from ideal, but I hope it helps for the time being. I would be very happy to have a graphical visualization by e.g. the widgets.

[33mcommit 93e2bebd1c0c0d94148ac996cd438d00a4042c74[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sat Aug 26 17:11:44 2023 +0000

    chore(MeasureTheory/../LpSeminorm): golf (#6797)
    
    * Generalize TC assumptions in some lemmas.
    * Golf `MeasureTheory.snorm_sub_le'`.
    * Move some `neg` lemmas up so that we can use them in `MeasureTheory.snorm_sub_le'`.

[33mcommit 289d4614f7ce6887b91265508ba35ff04922b9ba[m
Author: Mario Carneiro <di.gama@gmail.com>
Date:   Sat Aug 26 12:33:40 2023 +0000

    feat: multiple `scoped` in `notation3` (#6793)
    
    See the [discussion on Zulip](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/mathport.20fails/near/387335863). `notation3` did not support more than one occurrence of `scoped` due to an unnecessary limitation in the generated delaborator. It now handles this case correctly.

[33mcommit 7320add83bd985547e2c6d408e75ef3a18cff572[m
Author: damiano <adomani@gmail.com>
Date:   Sat Aug 26 09:51:08 2023 +0000

    feat(ToAdditive + UniqueProds): support `[uU]niqueProds ‚Üí[uU]niqueSums` (#6751)
    
    This PR adds `to_additive` support to convert
    * `UniqueProds` to `UniqueSums` and
    * `uniqueProds` to `uniqueSums`.
    
    This is just the dictionary support, plus the removal of two, now correctly guessed, `to_additive` names.

[33mcommit 45e55c3fe3cbffae97b5a55c79d0e4ba6e4a328b[m
Author: Alex J Best <alex.j.best@gmail.com>
Date:   Sat Aug 26 08:06:36 2023 +0000

    chore: cleanup a few porting notes and friends relating to alias (#6790)
    
    - After the new alias command we can now do `protected alias`
    - alias at some point broke dot notation by unfolding (see #1022) this was fixed in #1058 but the library was not fixed up there

[33mcommit d9827fd6968d45431e167534f2adea93b283fc71[m
Author: David Renshaw <dwrenshaw@gmail.com>
Date:   Sat Aug 26 06:58:14 2023 +0000

    fix: 'injective of' -> 'injective on' in Finset.preimage docstring (#6794)

[33mcommit 467c358f5ce4c59ca5607f3d2059f060e3ac1f60[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Fri Aug 25 22:21:33 2023 +0000

    feat(Logic/Relation): add missing relation material and show `‚©ø = ReflGen (¬∑ ‚ãñ ¬∑)` (#6711)

[33mcommit c085fa8416ac52e054aec60d0ea2785d4b73246e[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Fri Aug 25 21:13:39 2023 +0000

    feat(LinearAlgebra/Basis): flag defined by a basis (#6269)
    
    Also add supporting lemmas and golf some proofs.
    
    Based on a file from the Sphere Eversion Project.

[33mcommit 465dada7e266c30301c51484fa16980e86f8a1d5[m
Author: Eric Rodriguez <ericrboidi@gmail.com>
Date:   Fri Aug 25 20:01:08 2023 +0000

    feat: unit equivalences (#6526)
    
    Useful for Wedderburn's little theorem.
    
    
    
    Co-authored-by: Eric Rodriguez <37984851+ericrbg@users.noreply.github.com>

[33mcommit 57230798f9c5d8040084a9fb6e20e63d39e93185[m
Author: Alex J Best <alex.j.best@gmail.com>
Date:   Fri Aug 25 18:02:16 2023 +0000

    feat: some improvements to `apply_fun` (#6732)
    
    - Re-enabling applying an order equiv to the target
    - using `withMainContext` so that locals are treated properly
    - enabling some commented out tests

[33mcommit 89776af893d393a50d2a18b5f5119a3f938a4a1a[m
Author: Chris Hughes <chrishughes24@gmail.com>
Date:   Fri Aug 25 17:17:06 2023 +0000

    chore(IsAlgClosed): move some defs about lift into IsAlgClosed namespace (#6754)
    
    
    
    Co-authored-by: Chris Hughes <33847686+ChrisHughes24@users.noreply.github.com>

[33mcommit d49f95feaac243b3cdc43add0b4c75f02f4d9cba[m
Author: damiano <adomani@gmail.com>
Date:   Fri Aug 25 15:49:36 2023 +0000

    chore(Algebra/Order/Group/Defs): 3 line breaks (#6785)
    
    Move 3 line breaks, so that they no longer separate inputs to `Co*variantClass`es.

[33mcommit 7e9ae5f48a426be7341483d495b5185c37324c65[m
Author: Joachim Breitner <mail@joachim-breitner.de>
Date:   Fri Aug 25 14:43:21 2023 +0000

    chore(Data/Finset/NatAntidiagonal): naming of antidiagonalEquivFin (#6784)
    
    and add `simps`, as pointed out by @eric-wieser in
    https://github.com/leanprover-community/mathlib4/pull/6766#pullrequestreview-1595354618

[33mcommit e561ee7a3c5322de02630e6549a4394260470ceb[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Fri Aug 25 14:43:19 2023 +0000

    chore: remove duplicate lemma HasFDerivWithinAt.nhdsWithin (#6773)
    
    This is a perfect duplicate of `HasFDerivWithinAt.mono_of_mem`.
    
    Same thing with `Deriv` instead of `FDeriv`.

[33mcommit 5d955e029c6e411b69f9a61a768561f6094b962e[m
Author: Jeremy Tan Jie Rui <reddeloostw@gmail.com>
Date:   Fri Aug 25 14:43:18 2023 +0000

    feat: complete multipartite graphs (#6762)
    
    https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Complete.20multipartite.20graphs/near/386500598

[33mcommit 8bf281f0224f16569a5a157e42848ed0862732b1[m
Author: Junyan Xu <junyanxumath@gmail.com>
Date:   Fri Aug 25 14:43:17 2023 +0000

    refactor: golf #6309 (#6676)
    
    Also changes a lemma to instance and adds a new instance.
    
    
    
    Co-authored-by: Jujian Zhang <jujian.zhang1998@outlook.com>
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>

[33mcommit 60b551aa1d2c25bac35a359ede4aa38e14ef3f84[m
Author: Kevin Buzzard <k.buzzard@imperial.ac.uk>
Date:   Fri Aug 25 14:43:16 2023 +0000

    feat: y*log(x)=log(z) iff x^y=z (#6469)

[33mcommit 89686db4116077eb4ba9aa930f07bbbbc3387e35[m
Author: mhk119 <harun19@stanford.edu>
Date:   Fri Aug 25 13:22:19 2023 +0000

    feat: delete Nat.shiftr and Nat.shiftl (#6356)
    
    These already exists upstream (with minorly different but equal definitions) as `Nat.shiftRight` and `Nat.shiftLeft`.
    
    
    
    
    Co-authored-by: mhk119 <58151072+mhk119@users.noreply.github.com>
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 41aa37ba2566c3b7a7605956387e19b013f72d21[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Fri Aug 25 11:15:36 2023 +0000

    feat: Stonean.homeoOfIso and Stonean.isoOfHomeo (#6771)
    
    Changes `Profinite.homeoOfIso` and `Profinite.isoOfHomeo` to go through `CompHaus` and adds `Stonean.homeoOfIso`, `Stonean.isoOfHomeo` and `Stonean.isoEquivHomeo`

[33mcommit ed9d55905d3529322af5f08130377da7682ce0ec[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Fri Aug 25 10:49:58 2023 +0000

    chore(LinearAlgebra/CliffordAlgebra): remove `Q := Q` (#6780)
    
    The removal of a FunLike instance for `Module.Dual` made these unnecessary.

[33mcommit 0d2b123917cccfc00c2e7ca2c9421f75b791b3ab[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Fri Aug 25 10:49:57 2023 +0000

    feat(LinearAlgebra/QuadraticForm/TensorProduct): base change of quadratic forms (#6636)

[33mcommit 2c3112d5b71875a83a0b2b49af5f7163ff631b2f[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Fri Aug 25 09:58:52 2023 +0000

    chore: golf some proofs, add helper lemmas (#6769)

[33mcommit f5e24a519e0b49f82fe052b95bf95f5750e91f2e[m
Author: Scott Morrison <scott@tqft.net>
Date:   Fri Aug 25 08:19:52 2023 +0000

    chore: fix bug in `exact? using ...` (#6745)
    
    Lemmas that generate no subgoals were being incorrectly accepted by `exact? using ...`.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 3672fba8e7019d0289251318a4bc0380be306554[m
Author: negiizhao <egresf@gmail.com>
Date:   Fri Aug 25 07:09:21 2023 +0000

    feat: add some lemmas about `Finsupp.indicator` (#6719)
    
    It's hard to rewrite after using `indicator_eq_sum_single` and `prod_indicator_index`, so I add these two lemmas.

[33mcommit 7f2ee0917b6e7b4d2a2fbd505eb56448b0cce911[m
Author: kkytola <kalle.kytola@aalto.fi>
Date:   Fri Aug 25 05:30:39 2023 +0000

    feat: Results about convergence of measures of sets assuming convergence of indicator functions. (#6225)
    
    Adding results about convergence of measures of sets assuming convergence of indicator functions.
    
    
    
    Co-authored-by: kkytola <‚Äúkalle.kytola@aalto.fi‚Äù>
    Co-authored-by: kkytola <39528102+kkytola@users.noreply.github.com>

[33mcommit 1239d77cc5fdd1ecb8fc2f8a70ee5f0cfed53aff[m
Author: Joachim Breitner <mail@joachim-breitner.de>
Date:   Thu Aug 24 17:13:59 2023 +0000

    feat: Pmf.binomial (#6425)
    
    Inspired by a file by @pfaffelh
    
    Co-authored-by: Peter Pfaffelhuber <peter.pfaffelhuber@stochastik.uni-freiburg.de>

[33mcommit 2deb01baed243254ba7dc3568e0e7eb272ea2483[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Thu Aug 24 16:07:59 2023 +0000

    chore: rename 2 lemmas (#6767)
    
    - `ChartedSpace.locallyCompact` ‚Üí `ChartedSpace.locallyCompactSpace`
    - `ModelWithCorners.locally_compact` ‚Üí `ModelWithCorners.locallyCompactSpace`

[33mcommit a57b2c258e75834539c2f4cbf2e188d3ed3bde0b[m
Author: Joachim Breitner <mail@joachim-breitner.de>
Date:   Thu Aug 24 16:07:58 2023 +0000

    feat: Data.Finset.NatAntidiagonal.antidiagonal_equiv_fin (#6766)
    
    as suggested by @ocfnash in https://github.com/leanprover-community/mathlib4/pull/6425#discussion_r1304089614

[33mcommit 40c20c89a8574527dbe6f05e0ff26e4596a1c775[m
Author: Kyle Miller <kmill31415@gmail.com>
Date:   Thu Aug 24 14:43:18 2023 +0000

    feat: some tactics to transform hypotheses and goals to defeq expressions (#5717)
    
    This provides a function to create a tactic from any `Expr ‚Üí MetaM Expr` that maps expresions to defeq expressions. The tactic handles the standard location processing.
    
    Also provides some tactics: `whnf`, `beta_reduce`, `reduce`, `unfold_let`, `unfold_projs`, `eta_reduce`, and `eta_expand`. Some of these (like `whnf`) are more useful in high-level tactic scripts or for exploration than in actual finished proofs. The `unfold_let` tactic is useful for finer-grained zeta reduction (a.k.a. substituting in the values of let-bound hypotheses) and for providing a working alternative to `unfold` for local bindings.

[33mcommit 08612f6418b6ec30e1cbbab4accff72fc7335ee1[m
Author: damiano <adomani@gmail.com>
Date:   Thu Aug 24 13:32:05 2023 +0000

    golf(UniqueProds): Junyan's golf of some proofs. (#6753)

[33mcommit 82a5026dcf579adfdc201a3bd131b5a2b58a0c3c[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Thu Aug 24 13:32:03 2023 +0000

    feat: the product of Borel spaces is Borel when either of them is second-countable (#6689)
    
    We have currently that the product of two Borel spaces is Borel when both of them are second-countable. It is in fact sufficient to assume that only one of them is second-countable. We prove this in this PR.
    
    Also move the definition of `SecondCountableEither` from `Function.StronglyMeasurable` to `BorelSpace.Basic` to be able to use it in the statement of the above theorem.

[33mcommit 7bd54f65d9ac46a2a9de054f0076a03c11cc32c3[m
Author: Joachim Breitner <mail@joachim-breitner.de>
Date:   Thu Aug 24 13:32:02 2023 +0000

    feat: MeasureTheory.Integral.Bochner: integral_fintype and similar (#6446)
    
    This adds some lemmas about `integral` where we already have the corresponding
    lemmas for `lintegral`. The goal is `integral_fintype`, which rewrites an
    integral over a finite type as a finite sum over the elements, with singleton
    measures (these singleton measures can then further be simplified when the
    measure comes from a `Pmf`, but that will follow some other time.).
    
    Also fixes lemma name `integral_eq_lintegral_pos_part_sub_lintegral_neg_part` in
    the module comments.

[33mcommit 75e304329afbf23141f4463f6f36bfed3b82904c[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Thu Aug 24 09:53:05 2023 +0000

    feat: some lemmas about products and coproducts in opposite categories (#6758)
    
    - Adds missing theorem `hasColimit_op_of_hasLimit` and its dual.
    - Adds `instance [HasCoproduct Z] : HasProduct (fun z ‚Ü¶ op (Z z))` and its dual
    - Defines the isomorphism `op (‚àê Z) ‚âÖ ‚àè (fun z => op (Z z))` and its dual and proves some naturality lemmas about them.
    
    Co-authored-by: Riccardo Brasca @riccardobrasca [riccardo.brasca@gmail.com](mailto:riccardo.brasca@gmail.com)
    Co-authored-by: Filippo A E Nuccio @faenuccio [filippo.nuccio@univ-st-etienne.fr](mailto:filippo.nuccio@univ-st-etienne.fr)

[33mcommit 891adb329938ca3cd49a1d1208f691a98fb0896f[m
Author: Mario Carneiro <di.gama@gmail.com>
Date:   Thu Aug 24 00:00:50 2023 +0000

    fix: reduce imports for scripts (#6716)
    
    As [noted on Zulip](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/lake.20exe.20cache.20get.20broken.3F/near/386489865), a from-scratch build of mathlib after `lake exe cache get` will compile all of `Std` due to some unnecessary imports. With a few well chosen import reductions we only end up having to compile ~20 files instead of ~300 files (compile meaning `Compiling`, generating the arch-dependent `.o` files that are not in the cache).

[33mcommit f5f38ed9dfc3ba2d51c60563c3a78043b6b93080[m
Author: Fr√©d√©ric Dupuis <dupuisf@iro.umontreal.ca>
Date:   Wed Aug 23 18:06:45 2023 +0000

    feat: lemmas about monotonicity of `rpow` (#6742)
    
    This lemma adds lemmas about the monotonicity properties of `fun (x:‚Ñù) => x^r`.

[33mcommit b9e5e5fc246355b452a997cd1d85dcbb7aaee657[m
Author: damiano <adomani@gmail.com>
Date:   Wed Aug 23 15:40:09 2023 +0000

    feat(Algebra/Group/Opposite): add `isLeft/RightCancelMul` (#6752)
    
    [Zulip discussion](https://leanprover.zulipchat.com/#narrow/stream/217875-Is-there-code-for-X.3F/topic/MulOpposites.20and.20.5Binstances.5D)

[33mcommit 9ce86dabb66c5eb32bb69e970865a7ef8be4dc68[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Wed Aug 23 14:09:02 2023 +0000

    feat(LinearAlgebra/TensorAlgebra/Basis): the free and tensor algebras are free modules (#6680)
    
    The main result here is `Basis.tensorAlgebra (b : Basis Œ∫ R M) : Basis (FreeMonoid Œ∫) R (TensorAlgebra R M)` from which everything else follows without much work.

[33mcommit c35ba47375c4f80f3ba26a7301b17eadfac2562c[m
Author: Scott Morrison <scott@tqft.net>
Date:   Wed Aug 23 12:46:06 2023 +0000

    feat: deduplicate results from rw? (#6749)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit ca1274afdb62cbe1eaaa3b216fe1d23d917ce1e3[m
Author: Scott Morrison <scott@tqft.net>
Date:   Wed Aug 23 12:46:05 2023 +0000

    feat: deduplicate lemmas used by rw? (#6746)
    
    Solving request 1. from @b-mehta's [zulip](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Duplicates.20in.20rw.3F/near/381963606) post.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit e9d747efaf44790f92c3b259f01071f60961da97[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Wed Aug 23 12:46:03 2023 +0000

    chore(Data/Matrix/Invertible): generalize conjugate and transpose lemmas (#6618)
    
    The `conjTranspose` lemmas now work for non-commutative rings.

[33mcommit 1caf4e1deb3c434dde7f56708542982ebb308f72[m
Author: Scott Morrison <scott@tqft.net>
Date:   Wed Aug 23 11:25:48 2023 +0000

    chore: bump to nightly-2023-08-23 (#6748)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 3b480fba57b7850fc615df5706137a02548870f6[m
Author: Joachim Breitner <mail@joachim-breitner.de>
Date:   Wed Aug 23 11:25:37 2023 +0000

    docs: Document conv => ‚Ä¶ equals => tactic (#6747)
    
    which was introduced in https://github.com/leanprover/std4/pull/204

[33mcommit 4c583ce7b9e956eee0a9469d394c3033f3a24f68[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Aug 23 11:25:35 2023 +0000

    feat: lemmas about indicator of the symmetric difference (#6738)

[33mcommit 7824a6772ea0967a0cc519fda3a4e9716a5a6aa9[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Wed Aug 23 11:25:33 2023 +0000

    fix(CategoryTheory/Localization/Construction): restore universe polymorphism (#6685)
    
    [Zulip thread](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/.236499.20broke.20universe.20polymorphism/near/384284680).
    
    Without explicit universes, `CategoryTheory.Localization.Construction.relations` (and everything downstream) was inferred as taking `Category.{u,u} C`.

[33mcommit 34d86d99954d9dd1453a5c099439de5460eb3251[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Wed Aug 23 11:25:31 2023 +0000

    feat(RingTheory/FiniteType): generalize some results to non-commutative rings (#6681)
    
    I was hoping to use this in combination with #6680 to show the `TensorAlgebra` is finitely generated, where I needed to generalize `FiniteType.equiv`; but it turns out that the `FiniteType` instance on `MonoidAlgebra` also isn't generalized!
    
    The summary here is:
    * Move `Algebra.adjoin_algebraMap` from `Mathlib/RingTheory/Adjoin/Tower.lean` to `Mathlib/RingTheory/Adjoin/Basic.lean` and golf the proof to oblivion
    * Provide an alternative statement of `adjoin_union_eq_adjoin_adjoin`, `adjoin_algebraMap_image_union_eq_adjoin_adjoin`, which works in non-commutative rings, and use it along with a new `adjoin_top` lemma to prove `Algebra.fg_trans'` more generally.
    * Introduce a new `S` variable throughout, with the convention that `R` and `S` are commutative, `A` and `B` remain not-necessarily-commutative, and `A/S/R` is a tower of algebras.
    * Apply some zero-effort generalizations to semirings.

[33mcommit 65eb1191b9638f6f380617f5ac102010836fc68b[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Wed Aug 23 11:25:25 2023 +0000

    chore(Data/Finsupp/Multiset): lemmas about union and intersection (#6659)

[33mcommit 41eb5e6bba90b0830e358edb15e04a5b13e51347[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Wed Aug 23 11:25:23 2023 +0000

    chore: remove autoImplicit in LinearAlgebra (#6634)
    
    In `Mathlib/LinearAlgebra/Dual.lean` we also overhaul the universe argument names, as the file switched between two conventions and making up undeclared universe variables.
    
    `Mathlib/LinearAlgebra/Prod.lean` invented some new variables even though it already had plenty available.

[33mcommit 77823cdd6e5668e77652377d7a3c373bd01f4513[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Wed Aug 23 10:05:07 2023 +0000

    feat: TotallySeparatedSpace instance for profinite sets (#6722)
    
    Adds an instance `TotallySeparatedSpace` for totally disconnected compact Hausdorff spaces. This direction of `compact_t2_tot_disc_iff_tot_sep`¬†was missing an instance.

[33mcommit 552f9b55354a5f5db402948d38f4689326bed6eb[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Aug 23 10:05:06 2023 +0000

    fix: `simps` config for `Units` (#6514)

[33mcommit 330b78e284acaa7f35e8ac864f14ee1e54d9490e[m
Author: Alex J Best <alex.j.best@gmail.com>
Date:   Wed Aug 23 08:58:07 2023 +0000

    feat: add a coe to ideal quotient rings (#6620)
    
    Like we have for (Add)Subgroups already

[33mcommit 23e7b3db0d5d642ab06719e9edc68f8ad900c1a2[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Wed Aug 23 08:35:00 2023 +0000

    feat: `Stonean` is precoherent (#6725)
    
    Co-authored-by: Jon Eugster @joneugster
    Co-authored-by: Boris Bolvig Kj√¶r <bbk@math.ku.dk> @bbolvig
    Co-authored-by: Sina Hazratpour <sinahazratpour@gmail.com> @sinhp
    Co-authored-by: Nima Rasekh <rasekh@mpim-bonn.mpg.de> @nimarasekh
    
     -  [x] depends on: #5808
    
    We give a characterisation of effective epimorphic families in `Stonean`¬†and deduce that `Stonean` is a precoherent category.
    This work was done during the 2023 Copenhagen masterclass on formalisation of condensed mathematics. Numerous participants contributed.

[33mcommit 1842728665adc152effc5b6574e5dde28925163a[m
Author: damiano <adomani@gmail.com>
Date:   Wed Aug 23 08:11:47 2023 +0000

    docs(Algebra/Group/UniqueProds): update + mention MonoidAlgebras (#6741)
    
    A simple update of the docs for `UniqueProds/Sums`.  I also added a paragraph explaining the relationship between `UniqueProds/Sums` and `(Add)MonoidAlgebras`.

[33mcommit 8283eb95d1d5e3cf4aef18d45b6b5bacc2f4092d[m
Author: Chris Hughes <chrishughes24@gmail.com>
Date:   Wed Aug 23 07:42:41 2023 +0000

    chore: simplify construction of splitting field (#6735)
    
    
    
    Co-authored-by: Chris Hughes <33847686+ChrisHughes24@users.noreply.github.com>

[33mcommit 19e0ba92d515807cd80a1789fabbf5c4355561be[m
Author: Fran√ßois G. Dorais <fgdorais@gmail.com>
Date:   Wed Aug 23 04:19:20 2023 +0000

    feat: patch for new alias command (#6172)

[33mcommit f59eee0ef35a7c868ee69aca7d48efb23b82838b[m
Author: Scott Morrison <scott@tqft.net>
Date:   Wed Aug 23 00:18:57 2023 +0000

    chore: bump Std (#6721)
    
    This incorporates changes from https://github.com/leanprover-community/mathlib4/pull/6575
    
    I have also renamed `Multiset.countp` to `Multiset.countP` for consistency.
    
    Co-authored-by: James Gallichio <jamesgallicchio@gmail.com>
    
    
    
    
    Co-authored-by: James <jamesgallicchio@gmail.com>
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 46eac9430b52257ee62539452ed39c9c444206a6[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Tue Aug 22 22:24:02 2023 +0000

    revert: #5602 (#6717)
    
    This reverts commit caa9fe6b612c9064fa2f57cb4842149a0c6f1ff5.
    
    "feat: maps between the unitization of a non-unital subalgebra and its `Algebra.adjoin` (#5602)"
    
    This revert exists because the PR was merged before it was finished, and because it will make the diff with the new changes simpler.

[33mcommit 093597d495484f95afebb9f7898a8769d3b06f59[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Tue Aug 22 17:26:07 2023 +0000

    feat: projectivity of `Stonean` in `CompHaus`   (#5808)
    
    Co-authored-by: Filippo A E Nuccio [filippo.nuccio@univ-st-etienne.fr](mailto:filippo.nuccio@univ-st-etienne.fr)
    Co-authored-by: Nikolas Kuhn [nikolaskuhn@gmx.de](mailto:nikolaskuhn@gmx.de)
    Co-authored-by: Adam Topaz [topaz@ualberta.ca](mailto:topaz@ualberta.ca)
    
     -  [x] depends on: #5634
     -  [x] depends on: #5761
    
    This work was done during the 2023 Copenhagen masterclass on formalisation of condensed mathematics. Numerous participants contributed.
    
    
    
    Co-authored-by: David Kurniadi Angdinata <dka31@cantab.ac.uk>

[33mcommit 537e7f030d6df737d728c7c002fb1928f4615afa[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Tue Aug 22 14:19:38 2023 +0000

    feat: `Profinite` is precoherent (#5858)
    
    Co-authored-by: Jon Eugster @joneugster
    Co-authored-by: Boris Bolvig Kj√¶r <bbk@math.ku.dk> @bbolvig
    Co-authored-by: Sina Hazratpour <sinahazratpour@gmail.com> @sinhp
    Co-authored-by: Nima Rasekh <rasekh@mpim-bonn.mpg.de> @nimarasekh
    
     -  [x] depends on: #5763
    
    We give a characterisation of effective epimorphic families in `Profinite`¬†and deduce that `Profinite` is a precoherent category.
    This work was done during the 2023 Copenhagen masterclass on formalisation of condensed mathematics. Numerous participants contributed.
    
    
    
    Co-authored-by: Jon Eugster <eugster.jon@gmail.com>

[33mcommit db373a75816d420c2441e31b5146e7d6b22d6eac[m
Author: Anatole Dedecker <anatolededecker@gmail.com>
Date:   Tue Aug 22 13:23:09 2023 +0000

    chore: more predictable ext lemmas for TopologicalSpace and UniformSpace (#6705)

[33mcommit 896b6feb9e27a7ecda6a3b0d5cb658e499416eca[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Aug 22 13:23:06 2023 +0000

    refactor(Filter/EventuallyConst): redefine (#6673)

[33mcommit 40c2a3b8b992e1dab698fb823984a4c626ec459b[m
Author: damiano <adomani@gmail.com>
Date:   Tue Aug 22 12:16:12 2023 +0000

    chore: Capitalize `pointwise` (#6727)
    
    Just the one character `pointwise` to `Pointwise` in the doc-module.

[33mcommit 7f1bdad7e31d057ba1a9111cdf332b071bc43617[m
Author: Oliver Nash <github@olivernash.org>
Date:   Tue Aug 22 10:56:13 2023 +0000

    feat: lemmas about Smith normal form and trace of restriction (#6666)

[33mcommit 8f78230536025925db73016a9c366eebba2a5700[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Tue Aug 22 03:35:36 2023 +0000

    feat: compute rank of `‚ÑÇ` and `‚Ñù` as `‚Ñö`-modules (#6672)
    
    This adds a trivial cardinality argument that shows that when `V` is a free `K`-module where `K` is infinite and satisfies the strong rank condiiton, then the rank of `V` coincides with its cardinality. This is then used to establish that `Module.rank ‚Ñö ‚Ñù = continuum = Module.rank ‚Ñö ‚ÑÇ`, and therefore that `‚Ñù` and `‚ÑÇ` are isomorphic as vector spaces over `‚Ñö`.
    
    As requested on [Zulip](https://leanprover.zulipchat.com/#narrow/stream/217875-Is-there-code-for-X.3F/topic/Hamel.20basis.20and.20reals.20isomorphic.20to.20the.20complexes.20as.20an.20a.2E.2E.2E)

[33mcommit f972c58789d83ec909024b83c9e114fd4ca1b400[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Tue Aug 22 02:46:42 2023 +0000

    feat: The norm on `Unitization` is a C‚ãÜ-norm (#5393)
    
    This shows that C‚ãÜ-algebras are always `RegularNormedAlgebra`s, so that their `Unitization` is equipped with a norm. Moreover, we show this norm is a C‚ãÜ-norm.
    
    - [x] depends on: #5330
    - [x] depends on: #5741
    - [x] depends on: #5742
    - [x] depends on: #5743

[33mcommit 31bcfac8138aef2b5aebf531108b74c97e23e292[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Tue Aug 22 00:30:28 2023 +0000

    feat: add a few missing lemmas about `Covby` and `Wcovby` (#6712)

[33mcommit dd15b866ce98f1719f7216901dc1bee899b1dc18[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Tue Aug 22 00:30:28 2023 +0000

    feat: cochains of morphisms between cochain complexes (#6701)
    
    This PR starts the construction of the cochain complex of morphisms from a cochain complex to another.

[33mcommit e73099ee4fad7e4f280dcec13e69649063cddfb7[m
Author: Junyan Xu <junyanxumath@gmail.com>
Date:   Tue Aug 22 00:10:34 2023 +0000

    fix: correct typos in a counterexample's docstring (#6713)
    
    
    
    
    
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>

[33mcommit a2e5641d1f409a2a0aac86ea2b7d87f0b54f4159[m
Author: Matthew Robert Ballard <matt@mrb.email>
Date:   Mon Aug 21 22:43:15 2023 +0000

    chore (Int.Cast.Defs): delete last line (#6710)
    
    The last line is `open Nat` which came from an incomplete deletion of content from this fild. We delete the line.

[33mcommit 20d6b8e686364ae0c0adc572a441265eef700cd9[m
Author: Alex J Best <alex.j.best@gmail.com>
Date:   Mon Aug 21 22:43:14 2023 +0000

    feat: add some symm attributes throughout the library (#6708)
    
    Also add a couple of refl and trans attributes

[33mcommit 425f4caef91e0d88691dc858895c4562ad53bbda[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Mon Aug 21 21:19:58 2023 +0000

    doc: add missing docstrings around `ToExpr` (#6699)
    
    These are extracted from https://github.com/leanprover/std4/pull/221
    
    Co-authored-by: Kyle Miller <kmill31415@gmail.com>
    
    
    
    Co-authored-by: Kyle Miller <kmill31415@gmail.com>

[33mcommit f25139b758e258bad4af67c9e503d4ed82dfd65a[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Mon Aug 21 18:17:17 2023 +0000

    chore(LinearAlgebra/DFinsupp): make `DFinsupp.coprodMap` computable (#6704)
    
    There was no need to go via `Finsupp` here.

[33mcommit 590f2c4872a72871a1b08f6d4c4504b9996fd405[m
Author: Oliver Nash <github@olivernash.org>
Date:   Mon Aug 21 17:56:19 2023 +0000

    feat: characterise the reverse of the characteristic polynomial of a matrix (#6561)

[33mcommit 134b6cb8b1e2ded5b75ad74eb346d5c1061f5d18[m
Author: Eric Rodriguez <ericrboidi@gmail.com>
Date:   Mon Aug 21 15:17:20 2023 +0000

    chore: small generalization of finsupp lemmas (#6700)
    
    Noticed whilst doing my other PR about char_zero. Leaves statements that create data alone.

[33mcommit 4d4baabf3d68c7f07996d74fbdce144a68bd7a1f[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Mon Aug 21 15:17:18 2023 +0000

    chore(SetTheory): add missing `pp_with_univ` to `Cardinal.lift` and `Ordinal.lift` (#6683)
    
    The docstrings telling you to enable `pp.universes` are no longer relevant.

[33mcommit 09648f47e355450b89c02deb981da1ab56ce399b[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Mon Aug 21 14:05:51 2023 +0000

    chore(Tactic/ToLevel): add `pp_with_univ` (#6702)

[33mcommit c198eb679d29b75584a82b575eb5c17717a6f497[m
Author: Alex J Best <alex.j.best@gmail.com>
Date:   Mon Aug 21 14:05:50 2023 +0000

    chore: remove nolint from partENat (#6664)
    
    Adding nolints seems the wrong solution here, the linter is right to complain, theses lemmas should just be used by hand until the general instance is proved

[33mcommit 368923da0362e039715c44e27d5a1e8ec02d43c9[m
Author: Anatole Dedecker <anatolededecker@gmail.com>
Date:   Mon Aug 21 11:54:42 2023 +0000

    feat: behavior of `Cauchy` under operations on `UniformSpace` (#6694)
    
    Some of the lemmas are cherry-picked from leanprover-community/mathlib#17975 and will be useful for the general Arzela-Ascoli theorem, but I also filled some API holes on the way.

[33mcommit 2b6f001260fc8b3f09f677762b33efd448256eba[m
Author: Eric Rodriguez <ericrboidi@gmail.com>
Date:   Mon Aug 21 10:28:08 2023 +0000

    feat: char p for mv_polys over semirings (#6697)
    
    This generalises existing instances to apply to `CommSemiring`s. It also generalises a whole file that was using unnecessarily strong assumptions.

[33mcommit 885480409e857a9bda3ca843d37ce9bfcd2c03d4[m
Author: Scott Morrison <scott@tqft.net>
Date:   Mon Aug 21 04:30:54 2023 +0000

    chore: bump Std4 (#6695)
    
    The file [`Mathlib.Util.Pickle`](https://github.com/leanprover/std4/pull/211) has been upstreamed to std4, as has the declaration [`String.count`](https://github.com/leanprover/std4/pull/220).
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit c6e395dd3bb117a6db28f2b094bc822994f7cee9[m
Author: Bolton Bailey <bolton.bailey@gmail.com>
Date:   Mon Aug 21 01:30:37 2023 +0000

    feat: add theorem about nodal on Subgroup (#6495)
    
    A lemma about the vanishing polynomial.
    
    Co-authored-by: Pratyush Mishra

[33mcommit 782e4d39631e932e32e31d01384b4ffabba9e936[m
Author: Junyan Xu <junyanxumath@gmail.com>
Date:   Mon Aug 21 00:12:55 2023 +0000

    feat(Data/List/Chain): well-foundedness of chains under `List.Lex` (#6432)
    
    shorter proof of the main result of #6361
    
    Zulip: https://leanprover.zulipchat.com/#narrow/stream/217875-Is-there-code-for-X.3F/topic/List.2ELex.20is.20well.20founded.20on.20decreasing.20lists/near/382708025
    
    
    
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>

[33mcommit 38e1b744e0332a6344c1d84fe2c30a3e820858cb[m
Author: Anatole Dedecker <anatolededecker@gmail.com>
Date:   Sun Aug 20 21:55:55 2023 +0000

    feat: easy lemmas about extrema indexed by a union (#6693)

[33mcommit dcc92db9894a9b01c766ebd416cacff0a222247a[m
Author: Jeremy Tan Jie Rui <reddeloostw@gmail.com>
Date:   Sun Aug 20 20:55:54 2023 +0000

    feat: matrix equality of strongly regular graphs (#6507)

[33mcommit 0b511e95b3300f4bf3bdb373fbf293aabb1b4a61[m
Author: damiano <adomani@gmail.com>
Date:   Sun Aug 20 19:29:09 2023 +0000

    chore: fix doc-strings about (`c` vs `C`)`ounterexamples` (#6691)
    
    This PR just touches doc-strings.  It fixes capitalization issues involving `Counterexamples` and adds a missing line-break for better display.

[33mcommit e75cfd18fc756ea54fed5b3ba29ea0ff255a9baf[m
Author: negiizhao <egresf@gmail.com>
Date:   Sun Aug 20 19:29:08 2023 +0000

    chore(Data/Polynomial/Basic): golf & make some variables implicit (#6270)

[33mcommit a1bb5932254a591f05aba4f28cee2310bbebc9b0[m
Author: damiano <adomani@gmail.com>
Date:   Sun Aug 20 16:14:55 2023 +0000

    feat(Mathlib/Algebra/CharP/Basic): add ringChar_zero_iff_CharZero (#6572)
    
    [Zulip discussion](https://leanprover.zulipchat.com/#narrow/stream/217875-Is-there-code-for-X.3F/topic/CharZero_of_ringChar_zero)

[33mcommit 53adf85896afd4106cfeea8dba2a7d80621a5757[m
Author: Anatole Dedecker <anatolededecker@gmail.com>
Date:   Sun Aug 20 14:37:16 2023 +0000

    feat: missing results about StarAlgHom.codRestrict (#6668)
    
    This is a step towards making sure that all the `codRestrict` APIs are similar, but they're still not similar enough in wether they take bundled subobjects/morphisms or subobject/morphism classes.

[33mcommit 0db562a3d547682db31b0360890579046fe89d06[m
Author: Xavier Roblot <46200072+xroblot@users.noreply.github.com>
Date:   Sun Aug 20 13:35:31 2023 +0000

    feat(Algebra.Module.Zlattice): add Zlattice.module_free and Zlattice.rank (#5728)
    
    We prove the main characterisation of $\mathbb{Z}$-lattices: a subgroup $L$ of $\mathbb{R}^n$ that is discrete and that spans $\mathbb{R}^n$ is a free $\mathbb{Z}$-module of rank $n$ (in a slightly more general setting).

[33mcommit d63c3830e494df7548840bb829e225c0c49b454a[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Sun Aug 20 12:05:07 2023 +0000

    feat: sufficient condition for a cycle map to be an isomorphism (#6231)
    
    This PR gives a sufficient condition which ensures that a morphism of short complexes induces an isomorphism on cycles (or opcycles).
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit 9dd5bbfe4329a6c98a233e2f4f5f05178443dbf0[m
Author: Matthew Robert Ballard <matt@mrb.email>
Date:   Sun Aug 20 10:00:42 2023 +0000

    chore (Algebra.Field.Defs): remove unused structure instances (#6686)
    
    In both `Division.toDivisionSemiring` and `Field.toSemiField`, an extra unused `Semiring` instance is provided to construct the instance. This removes them.

[33mcommit cf479f4ee9e6e5e54f8b3ddea0011c3f816350d4[m
Author: Scott Morrison <scott@tqft.net>
Date:   Sun Aug 20 07:35:23 2023 +0000

    chore: bump to nightly-2023-08-19 (#6687)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit c6ffbe85b4bc821f6abec1ff549ebd2c7552aa23[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Sat Aug 19 18:38:22 2023 +0000

    feat: a countable set has dense complement in a nontrivial vector space over a complete normed field (#6556)

[33mcommit 1a978e5c1b5c6b88d6e9bb7f14ffe0f44453eddd[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Sat Aug 19 18:38:21 2023 +0000

    feat(LinearAlgebra): complements on spaces of dimension >1 or >n (#6348)

[33mcommit 277dea952df34759a39b00abcc615238ae32c506[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sat Aug 19 17:21:38 2023 +0000

    chore: drop `MulZeroClass.` in `mul_zero`/`zero_mul` (#6682)
    
    Search&replace `MulZeroClass.mul_zero` -> `mul_zero`, `MulZeroClass.zero_mul` -> `zero_mul`.
    
    These were introduced by Mathport, as the full name of `mul_zero` is actually `MulZeroClass.mul_zero` (it's exported with the short name).

[33mcommit a0d8b86730ccd539a8d51f24688ff2270b79bb24[m
Author: Anatole Dedecker <anatolededecker@gmail.com>
Date:   Sat Aug 19 13:44:25 2023 +0000

    feat: two missing lemmas about restricting continuous maps (#6616)

[33mcommit 0a3c0125a92b4fb21252d7bd7c4dbf47c5208405[m
Author: Anatole Dedecker <anatolededecker@gmail.com>
Date:   Sat Aug 19 12:28:32 2023 +0000

    chore: make sure that some coercions have an attached definition (#6667)

[33mcommit 887eb161f5d001b175b2821e277bad81fb9ba077[m
Author: Bolton Bailey <bolton.bailey@gmail.com>
Date:   Sat Aug 19 12:28:31 2023 +0000

    docs: fix monoidal category docstring (#6623)
    
    Seems like the classes are called `BraidedCategory` and `SymmetricCategory`, so I changed the docstring to reflect this.

[33mcommit f2214bfa73da19186cefcfacc35e97a8235a696f[m
Author: Anatole Dedecker <anatolededecker@gmail.com>
Date:   Sat Aug 19 12:06:35 2023 +0000

    doc: fix some typos in comments in Mathlib.Topology.ProperMap (#6601)

[33mcommit 7694d42382a89c8cc721eef587e2e3d77b8ee5f9[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sat Aug 19 10:47:55 2023 +0000

    feat(Set/NAry): add `Set.Subsingleton.image2` (#6671)

[33mcommit 0c89b795a753d605820a4d153986b08c3506ca16[m
Author: Xavier Roblot <46200072+xroblot@users.noreply.github.com>
Date:   Sat Aug 19 09:44:39 2023 +0000

    refactor(NumberTheory.NumberField.CanonicalEmbedding): make the canonical embedding canonical (#5518)
    
    It was observed by @kbuzzard, and rightly so, that in the first version of this file the `canonical_embedding` was not so canonical. This refactor fixes that by replacing it with a truly canonical embedding.
    
    More precisely, in the old version, the canonical embedding was defined as the ring homomorphism
     `K ‚Üí+* ‚Ñù^r‚ÇÅ √ó ‚ÑÇ^r‚ÇÇ` that sends `x ‚àà K` to `(œÜ_‚ÇÅ(x),...,œÜ_r‚ÇÅ(x)) √ó (œà_‚ÇÅ(x),..., œà_r‚ÇÇ(x))` where
     `œÜ_‚ÇÅ,...,œÜ_r‚ÇÅ` are its real embeddings and `œà_‚ÇÅ,..., œà_r‚ÇÇ` are its complex embeddings (up to
     complex conjugation). This is not canonical since it depends upon the choice of the `œà`'s.
    
    In the new version, the canonical embedding is defined as the ring homomorphism `K ‚Üí+* ‚ÑÇ^n` that sends `x ‚àà K` to `(œÜ_‚ÇÅ(x),...,œÜ_n(x))` where the `œÜ_i`'s are the complex embeddings of `K`.
    
    The new version is easier to compute with since one does not have to distinguish between real and complex embeddings as in the first version. It also enables to prove the following result: the image of the ring of integers by `canonicalEmbedding` is a full ‚Ñ§-lattice (see `latticeBasis`) that will be useful in #5650.
    
    Note that the original version of the canonical embedding will reappear in #5650 (as `mixedEmbedding`) since it allows for easier volume computation.

[33mcommit 0dd146c23431d3352d5c576cd8c19f0fcff29cc8[m
Author: Chris Hughes <chrishughes24@gmail.com>
Date:   Sat Aug 19 08:16:42 2023 +0000

    feat: zeroLocus_span and some simp attributes (#6650)

[33mcommit 2afbd9d853b26012b039ad2e6a7f6ecc2e55f70d[m
Author: Yuma Mizuno <mizuno.y.aj@gmail.com>
Date:   Sat Aug 19 02:44:12 2023 +0000

    feat(CategoryTheory/Bicategory): define adjunctions (#6406)
    
    This RP introduces adjunctions and adjoint equivalences in bicategories, and shows that a (non-adjoint) equivalence can be promoted to an adjoint equivalence by upgrading the counit.
    
    The constructor of adjoint equivalences only requires the left triangle identities since I will plan to show that it implies the right triangle identities in a separate PR.

[33mcommit fd3a26ed6fb0533a18b9eafe99f63eaeac73aab6[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Fri Aug 18 23:14:19 2023 +0000

    fix(Algebra/IndicatorFunction): minor fixes (#6640)
    
    - Fix name in docstrings.
    - Use `Type*` in `variable`, explicitly use `Sort*`.
    - Use `to_additive` to generate the additive version.
    - Drop pattern matching.
    - Add `Set.mulIndicator_diff'`,
      the multiplicative version of `Set.indicator_diff`.

[33mcommit 7f528029b4a45eb68f97f02d1997a740b866bcd9[m
Author: Junyan Xu <junyanxumath@gmail.com>
Date:   Fri Aug 18 23:14:18 2023 +0000

    feat: generalize algebraic pullback instances (#6536)
    
    Generalizes RingEquiv.noZeroDivisors and RingEquiv.isDomain to MulEquiv
    
    Adds Function.Injective.isLeft/RightCancelMulZero, MulEquiv.toZeroHomClass, and MulEquiv.isField (the last one is useful for #6309)
    
    
    
    Co-authored-by: Junyan Xu <junyanxu.math@gmail.com>

[33mcommit 6c6f2a6a73f23e06408f65453430860a6f5f7e53[m
Author: lines <wren.robson@gmail.com>
Date:   Fri Aug 18 21:51:52 2023 +0000

    fix(Data/Sum/Basic): Add ? to Sum-get function names. (#6665)
    
    As the `getLeft` and `getRight` functions are to Option, they should have a ? on the end.

[33mcommit e79a197c2ff0f3614de1e93ea4fc7b8e6d1071d1[m
Author: Julian Berman <Julian@GrayVines.com>
Date:   Fri Aug 18 21:51:51 2023 +0000

    fix(LinearAlgebra/Dimension): make LinearMap.rank an abbrev (#6545)
    
    Previously, a statement like:
    
    ```lean
    import Mathlib.LinearAlgebra.Dimension
    import Mathlib.Tactic
    
    variable {K : Type} [Field K]
    variable {V W : Type} [AddCommGroup V] [AddCommGroup W] [Module K V] [Module K W]
    variable {L : V ‚Üí‚Çó[K] W}
    
    open LinearMap (ker)
    open Module (rank)
    
    example : rank K V = L.rank + rank K (ker L) := by
        sorry
    ```
    
    required rewriting `LinearMap.rank` before manually finding the existence of `rank_range_add_rank_ker`.
    
    After this change though, `exact?` successfully finds the lemma / solves the above.

[33mcommit efc5aeb0b8e22b2c6175558ccbccaa4cde6a89fa[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Fri Aug 18 21:51:50 2023 +0000

    feat: algebraic maps in LocallyConstant (#6520)
    
    We define more algebraic versions of `LocallyConstant.comap` and evaluation of locally constant maps, continuing the work of #6396.

[33mcommit 4e21b60aee20de53339eeb5f43592ae732b7b5f4[m
Author: Chris Hughes <chrishughes24@gmail.com>
Date:   Fri Aug 18 20:40:40 2023 +0000

    feat: Fin.cons_one (#6649)

[33mcommit 23e976e7d3efbf5eb9240f1be9d503fa72e45fec[m
Author: Johan Commelin <johan@commelin.net>
Date:   Fri Aug 18 18:30:59 2023 +0000

    refactor(FieldTheory): remove redundant axiom neg_mem' from IntermediateField (#6669)

[33mcommit 338bb3fb605968650667a90deeaa666d95fff36a[m
Author: Yakov Pechersky <ypechersky@treeline.bio>
Date:   Fri Aug 18 18:30:58 2023 +0000

    feat(GroupTheory/Subgroup/Basic): ker_{fst,snd} (#6639)
    
    
    
    
    Co-authored-by: Yakov Pechersky <pechersky@users.noreply.github.com>
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 6c02c99f9cd82cffbf1a6439e667956bc3c8ec78[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Fri Aug 18 17:06:35 2023 +0000

    chore: improve cross-links between ULift equivalences (#6660)
    
    The names are all over the place, leading me to believe that `ULift.moduleEquiv` didn't exist. Cross-linking to the other equivs (via code and comments) makes them easier to find.

[33mcommit ffc1e0b2c6605631bafcbafef9b434a0993f598f[m
Author: Junyan Xu <junyanxumath@gmail.com>
Date:   Fri Aug 18 15:36:31 2023 +0000

    feat: ordered monoid instances for lexicographic order on Prod, Pi, Finsupp and Dfinsupp (#6625)
    
    
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 96f0a9003a1032e51a21b807aa9fe772112b5816[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Fri Aug 18 14:52:17 2023 +0000

    feat(LinearAlgebra/Dual): `ULift M` is reflexive (#6661)
    
    The TODO for this assumed that `LinearEquiv.ulift` was missing, but in fact it already existed.

[33mcommit 2e06bd9f0f56ec7f72fad9f6bc0acd8ccdc0bf13[m
Author: Chris Hughes <chrishughes24@gmail.com>
Date:   Fri Aug 18 14:30:24 2023 +0000

    feat(Data/Sum): forall_sum_pi (#6658)
    
    
    
    Co-authored-by: Chris Hughes <33847686+ChrisHughes24@users.noreply.github.com>

[33mcommit 8c53b71834adeb8e17af5b199907e26f0f81a4dd[m
Author: Scott Morrison <scott@tqft.net>
Date:   Fri Aug 18 11:04:14 2023 +0000

    chore: bump to nightly-2023-08-17 (#6019)
    
    The major change here is adapting to `simp` failing if it makes no progress.
    The vast majority of the redundant `simp`s found due to this change were extracted to #6632.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 971fb7a744716265e3eacc36333869516fa7181b[m
Author: Matthew Robert Ballard <matt@mrb.email>
Date:   Fri Aug 18 10:07:52 2023 +0000

    fix (LinearAlgebra.Dual): delete `instFunLikeDual` (#6637)
    
    It seems that Lean can find `LinearMap.instFunLike` just fine now. Furthermore, `Module.Dual.instFunLikeDual` was causing TC synthesis to fail. We delete it.

[33mcommit 05ef5b4c1ea66959e264b452a7e4cb58b48d5502[m
Author: Sebastian Ullrich <sebasti@nullri.ch>
Date:   Fri Aug 18 08:08:27 2023 +0000

    perf: use Lake's `crlf2lf` (#6647)
    
    Speeds up no-op `lake exe cache get` by ~36%

[33mcommit 96928745419f068100b2ab845cdd880a01d00fab[m
Author: Moritz Doll <moritz.doll@googlemail.com>
Date:   Fri Aug 18 07:22:49 2023 +0000

    feat(LinearPMap): Closure and inverse commute (#6563)

[33mcommit 28fda0d616497d351aa5256c027d4adbfe43dbde[m
Author: Arend Mellendijk <arend.mellendijk@gmail.com>
Date:   Fri Aug 18 07:22:48 2023 +0000

    feat(Data/Nat/Squarefree): Add lemmas about the product of distinct factors of a squarefree `Nat` (#6344)
    
    These lemmas will be used to develop a basic theory of arithmetic functions $n \mapsto \prod_{p\mid n} f(p)$.

[33mcommit be7fa69be8901a2513db032a54d3750936510caf[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Fri Aug 18 07:22:47 2023 +0000

    feat: define `RegularNormedAlgebra` and add the norm on the `Unitization` (#5742)
    
    This constructs a norm on the `Unitization ùïú A` of a (possibly non-unital) normed algebra `A`, subject to the condition that `ContinuousLinearMap.mul ùïú A` is an isometry. A norm on `A` satisfying this property is said to be regular so we add the class `RegularNormedAlgebra` where this construction makes sense.
    
    This norm is particularly nice because, among norms on the unitization of a `RegularNormedAlgebra`, this norm is minimal. Moreover, it is the (necessarily unique) C‚ãÜ-norm on the unitization when the norm on `A` is a C‚ãÜ-norm (see #5393)
    
    - [x] depends on: #5741

[33mcommit fb232849b87afc525453e515a23a2677710a1739[m
Author: Yakov Pechersky <ypechersky@treeline.bio>
Date:   Fri Aug 18 06:06:29 2023 +0000

    feat(Data/Rat/Defs): num_eq_zero_iff (#6638)
    
    
    
    
    Co-authored-by: Yakov Pechersky <pechersky@users.noreply.github.com>

[33mcommit a016a32e42e7c17c6ba40fc3c743f749abcf67ff[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Fri Aug 18 10:02:46 2023 +0530

    reverting an unwanted addition to CategoryTheory.Quotient

[33mcommit 53821048d524af54fd04569362c69ed7acb7417c[m
Author: Scott Morrison <scott@tqft.net>
Date:   Fri Aug 18 14:23:16 2023 +1000

    Revert "feat: the induced shift on the target category of a functor" (#6644)

[33mcommit 268a8e25576fa06c06d175043572c77af8e7b2a5[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Fri Aug 18 09:51:02 2023 +0530

    trying to revert unwanted commits

[33mcommit 3febb8c24e3513e24a0c2f306428cb920f7857d7[m[33m ([m[1;31morigin/induced_shift[m[33m)[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Fri Aug 18 09:41:12 2023 +0530

    feat: the shift on a quotient category

[33mcommit 071d4f7396e37893f00f67c88d1822e46f59d556[m
Merge: adb6afd84b f7cf7edc84
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Fri Aug 18 09:30:13 2023 +0530

    Merge remote-tracking branch 'origin/shift_induced'

[33mcommit adb6afd84bba23ae3d29609ea10775a3c0872046[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Thu Aug 17 22:17:38 2023 +0000

    chore(MeasureTheory): golf (#6641)
    
    - Golf some proofs.
    - Rename `MeasureTheory.indicatorConst_empty`
      to `MeasureTheory.indicatorConstLp_empty`.
    - Change some linebreaks.

[33mcommit 3274487113b092f4a5f17ab6bb8392aa23b002b0[m
Author: Anatole Dedecker <anatolededecker@gmail.com>
Date:   Thu Aug 17 21:55:08 2023 +0000

    feat(Analysis.LocallyConvex.Barrelled): generalize Banach-Steinhaus theorem (#5676)

[33mcommit 916c75c1d9f2fcdcd11d5d5b32f69afcc94bb9c4[m
Author: Eric Wieser <scott.morrison@gmail.com>
Date:   Thu Aug 17 17:28:14 2023 +0000

    chore: remove unused simps (#6632)
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit da086fb4503efdc53aeb04020f4f9fb18232aa54[m
Author: Scott Morrison <scott@tqft.net>
Date:   Thu Aug 17 14:45:05 2023 +0000

    chore: cleanup nolint dupNamespace (#6624)
    
    The dupNamespace linter now ignores auxiliary definitions.
    
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 433c27554ead56a5cd829f36efd4c1367f22c651[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Thu Aug 17 14:45:04 2023 +0000

    feat(LinearAlgebra/BilinearForm/TensorProduct): base change of bilinear forms (#6306)
    
    This generalizes the existing `BilinForm.tensorDistrib` to be heterogenous in the rings it uses, such that a base change,
    ```lean
    protected def baseChange (B : BilinForm R M‚ÇÇ) :
      BilinForm A (A ‚äó[R] M‚ÇÇ) :=
    ```
    falls out as a special case. I do not attempt to generalize `BilinForm.tensorDistribEquiv`.
    
    Unfortunately, this changes the defeq as
    ```diff
    -(B‚ÇÅ.tmul B‚ÇÇ) (m‚ÇÅ ‚äó‚Çú m‚ÇÇ) (m‚ÇÅ' ‚äó‚Çú m‚ÇÇ') = B‚ÇÅ m‚ÇÅ m‚ÇÅ' * B‚ÇÇ m‚ÇÇ m‚ÇÇ'
    +(B‚ÇÅ.tmul B‚ÇÇ) (m‚ÇÅ ‚äó‚Çú m‚ÇÇ) (m‚ÇÅ' ‚äó‚Çú m‚ÇÇ') = B‚ÇÇ m‚ÇÇ m‚ÇÇ' ‚Ä¢ B‚ÇÅ m‚ÇÅ m‚ÇÅ'
    ```
    We could fix this by using the right action instead, but that's a lot of work for a very minorly annoying defeq.
    
    This also breaks the defeq of `tensorDistribEquiv B = tensorDistrib B`; though the reason is more complicated than the scalar action issue above. It would be fixed if we defined all the homogenous operations on tensor products as special cases of the heterogenous ones, but that's also a lot of work for a very small win.
    
    This is a port of work from https://github.com/pygae/lean-ga/pull/31, and almost at the end of the path to a base change of quadratic forms and clifford algebras.
    
    This was independently developed at the Leiden workshop as [`BilinForm.baseChange`](https://github.com/alexjbest/ant-lorentz/blob/1f97add294b2d50f99537c15583666d78b0d7e24/AntLorentz/BaseChange.lean#L75-L85), though the results there are not sorry-free.

[33mcommit 41e3e2b1da628f8de38038ce86531a4ef0b96898[m
Author: Alex J Best <alex.j.best@gmail.com>
Date:   Thu Aug 17 12:57:03 2023 +0000

    feat: to_additive for pow_boole (#6535)

[33mcommit a2f44d104a859bc0ecd44fa2cb03aafc7278b9de[m
Author: Fran√ßois G. Dorais <fgdorais@gmail.com>
Date:   Thu Aug 17 11:39:45 2023 +0000

    feat: patch for std4#219 (#6622)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 485b736d48a5d94ff465810656263ba25f677808[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Thu Aug 17 11:16:35 2023 +0000

    refactor(Algebra/Lie/BaseChange): use new tensor product machinery (#6628)

[33mcommit f7cf7edc84fb468a6c54c6c8d1d978645f7043bd[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Thu Aug 17 15:57:21 2023 +0530

    pleasing the linter

[33mcommit 5f5c4e1885bf283680af7bf0ca6c3eecde68f961[m
Author: Fran√ßois G. Dorais <fgdorais@gmail.com>
Date:   Thu Aug 17 10:19:52 2023 +0000

    fix: patch for std4#193 (#6188)
    
    fix: patch for std4#193

[33mcommit 820e7a952dc644ec748ad15e22f0747c302bae1a[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Thu Aug 17 15:31:01 2023 +0530

    feat: the induced shift on the target category of a functor

[33mcommit ae74c2e545c4f18cea002d8c25b12b0ed38d2fcf[m
Author: MohanadAhmed <m.a.m.elhassan@gmail.com>
Date:   Wed Aug 16 23:07:50 2023 +0000

    feat: star self dot product eq zero and kernel lemmas apply to matrices not just vectors (#6587)
    
    This generalizes two results about vectors to matrices:
    * `dotProduct_star_self_eq_zero` to `conjTranspose_mul_self_eq_zero`
    * `dotProduct_self_star_eq_zero` to `self_mul_conjTranspose_eq_zero`
    
    It also adds lemmas linking the kernel (under left-multiplication, right-multiplication, `vecMul`, and `mulVec`) of $A$, $A^HA$, and $AA^H$.
    
    Some of these lemmas are used in the SVD decomposition theorem of R or C matrices #6042
    
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit d72f88a74f36c5ad7ec439cd2f0bf662d0fd559a[m
Author: MohanadAhmed <m.a.m.elhassan@gmail.com>
Date:   Wed Aug 16 21:06:36 2023 +0000

    chore: conjTranspose and transpose are obviously injective  (#6615)
    
    `conjTranspose` and `transpose` are injective
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 1c48b04cc734bde3d5c9ee34d9bd32e50d7648d2[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Aug 16 18:57:52 2023 +0000

    chore: drop some unneeded `maxHeartbeats` (#6564)

[33mcommit 8712fabc6d0867d8040373d582459b461b6deff9[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Wed Aug 16 18:01:40 2023 +0000

    chore(Data/Matrix/Basic): trivial simp lemmas for `row` and `col` (#6614)

[33mcommit 861d9d427b67fd113e54945e5686c5e5020dc755[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Wed Aug 16 18:01:39 2023 +0000

    chore(Data/Matrix/Basic): iff lemmas for (conj)transpose and 0/1 (#6602)

[33mcommit d8130a5e4766a9d33691200d8c2d29e7807b1002[m
Author: Oliver Nash <github@olivernash.org>
Date:   Wed Aug 16 16:40:55 2023 +0000

    chore: restate `isNoetherian_of_fg_of_noetherian'` using `Module.Finite` (and rename). (#6609)

[33mcommit ee8a9190195683f2d034d09514c21df3b807ed7b[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Wed Aug 16 16:11:02 2023 +0000

    refactor(LinearAlgebra/Matrix/PosDef): Generalize to StarOrderedRing (#6489)
    
    I assume this is mathematically sound, though right now we can't generalize many dependencies due to the reliance of `InnerProductSpace`.

[33mcommit d70c3ce4868f45de83cc5742e1d39cbed15d5e87[m[33m ([m[1;31morigin/heq-funext[m[33m)[m
Author: ADedecker <anatolededecker@gmail.com>
Date:   Wed Aug 16 18:42:42 2023 +0300

    Revert "Two missing lemmas about restricting continuous maps"
    
    This reverts commit c978143be562c8f4e2460e805d8d789a654295b1.

[33mcommit c978143be562c8f4e2460e805d8d789a654295b1[m
Author: ADedecker <anatolededecker@gmail.com>
Date:   Wed Aug 16 18:29:52 2023 +0300

    Two missing lemmas about restricting continuous maps

[33mcommit 62396ef519d5e71b6951531ccb309cf6ae1a7ac0[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Wed Aug 16 13:05:08 2023 +0000

    feat(Data/List/Basic): remove `bind_append` (#6599)
    
    This removes `bind_append`, since an identical `append_bind` is already in `std`.
    
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit ab751e1e69f56110e99409baa0633a0f73d5e4ad[m
Author: Pol'tta / Miyahara K≈ç <pol_tta@outlook.jp>
Date:   Wed Aug 16 12:08:34 2023 +0000

    fix(NumberTheory/PythagoreanTriples): clear unnecessary hypothesis of `PythagoreanTriple.classification` (#6594)
    
    The `rcases` tactic causes this theorem to pull in an unused assumption, as per [this Zulip thread](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/rcases.20modifies.20assumptions/near/371582124).
    
    Before this PR, `PythagoreanTriple.classification` includes an unnecessary `h`:
    ```lean
    theorem PythagoreanTriple.classification {x y z : ‚Ñ§} (h : PythagoreanTriple x y z) :
      PythagoreanTriple x y z ‚Üî
        ‚àÉ k m n,
          (x = k * (m ^ 2 - n ^ 2) ‚àß y = k * (2 * m * n) ‚à® x = k * (2 * m * n) ‚àß y = k * (m ^ 2 - n ^ 2)) ‚àß
            (z = k * (m ^ 2 + n ^ 2) ‚à® z = -k * (m ^ 2 + n ^ 2))
    ```

[33mcommit 910795a848f904bf58d71b388557e5c7393b2437[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Wed Aug 16 10:50:07 2023 +0000

    chore(Analysis/NormedSpace/MatrixExponential): remove Lean 3 TC workarounds (#6608)
    
    The file still compiles without these, so I guess as predicted we no longer need them. They were certainly needed in Lean 3.

[33mcommit ee38ee9a46217a7d1c69d9c020a88f8ab53ee8a0[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Wed Aug 16 10:50:06 2023 +0000

    feat(Algebra/GroupWithZero/Units/Lemmas): div_div_div_cancel_left' (#6606)
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit 38c07226a16718eb795d21b235c5dbe282be86b0[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Wed Aug 16 09:33:16 2023 +0000

    refactor(Data/Matrix): Eliminate `‚¨ù` notation in favor of `HMul` (#6487)
    
    The main difficulty here is that `*` has a slightly difference precedence to `‚¨ù`. notably around `smul` and `neg`.
    
    The other annoyance is that `‚ÜëU ‚¨ù A ‚¨ù ‚ÜëU‚Åª¬π : Matrix m m ùî∏` now has to be written `U.val * A * (U‚Åª¬π).val` in order to typecheck.
    
    A downside of this change to consider: if you have a goal of `A * (B * C) = (A * B) * C`, `mul_assoc` now gives the illusion of matching, when in fact `Matrix.mul_assoc` is needed. Previously the distinct symbol made it easy to avoid this mistake.
    
    On the flipside, there is now no need to rewrite by `Matrix.mul_eq_mul` all the time (indeed, the lemma is now removed).

[33mcommit 0bfa84d351c98d0dc09eeadfdb6f42d81f56a40c[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Wed Aug 16 08:04:41 2023 +0000

    feat: show universe arguments when printing `Category` (#6550)
    
    Arguably we only want one universe argument, but that's not supported.

[33mcommit d66f29ee65bcbe2b6211b4a3ef4b0e31664d9515[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Aug 16 05:50:38 2023 +0000

    feat: add `PUnit.completeLinearOrder` (#6585)

[33mcommit 6c1ea0d78a74032ba8d6419c6669bae716af2c04[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Aug 16 05:50:37 2023 +0000

    chore(Topology/Bases): minor golf (#6584)

[33mcommit 979bb0f97a093f0f29ac439132acf0218d3969c5[m
Author: Scott Morrison <scott@tqft.net>
Date:   Wed Aug 16 04:08:02 2023 +0000

    feat: computation of Levenshtein edit distance (#6117)
    
    Subsequent PRs will prove properties of this definition, and implement the `rw_search` tactic using it.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>
    Co-authored-by: Thomas Browning <tb65536@uw.edu>
    Co-authored-by: Chris Hughes <chrishughes24@gmail.com>
    Co-authored-by: Oliver Nash <github@olivernash.org>
    Co-authored-by: sgouezel <sebastien.gouezel@univ-rennes1.fr>
    Co-authored-by: Alex J Best <alex.j.best@gmail.com>
    Co-authored-by: Xavier Roblot <46200072+xroblot@users.noreply.github.com>
    Co-authored-by: michaellee94 <michael_lee1@brown.edu>

[33mcommit 3045aef4ffb0fd709de915066088b9bb54ba54a6[m
Author: Alex J Best <alex.j.best@gmail.com>
Date:   Tue Aug 15 23:11:50 2023 +0000

    chore: fix tests after #6528 disabled autoimplicits (#6597)
    
    These work on the command line and therefore didn't fail in CI (as `lake env lean blah.lean` doesn't pick up the extra lean args?) but as soon as you open one of these files in vscode you get a sea of red errors.
    
    I tried to fix a couple in a minimal way, if there was just for example one universe level missing, for most files the "fix" for now is just reenabling autoimplicits for the file.
    This revealed a couple of tests that were incorrectly using an implicit type when they thought they were using Nat.
    Two files had issues, that we may want to follow up on  `test/superscript.lean` which failed even with autoimplicits turned on when using an autoimplicit superscript variable (unsure if this was intentional).
    And the `ToExpr` deriving handler seems to rely on autoimplicits somehow to work properly in the presence of universe, if an explicit universe variable is added there is still an error.

[33mcommit ae892b70fc6989661d1a55eeb707c5056a21db90[m
Author: Mac Malone <mac@lean-fro.org>
Date:   Tue Aug 15 21:46:27 2023 +0000

    chore: bump to nightly-2023-08-15 (#6592)
    
    
    
    Co-authored-by: tydeu <tydeu@hatpress.net>

[33mcommit 2c51fd67abd29f5acb717a7e9bce9b45a0cb1fcb[m
Author: Oliver Nash <github@olivernash.org>
Date:   Tue Aug 15 20:14:00 2023 +0000

    feat: add some regularity results for multivariable polynomials (#6541)
    
    The goal (which is achieved) is to make things like this work:
    ```lean
    example {s : Finset œÉ} {n : œÉ} {k : ‚Ñï} {p : MvPolynomial œÉ R} :
        p * (‚àè n in s, X n) * X n ^ k = 0 ‚Üî p = 0 := by
      simp
    ```

[33mcommit ca250c52e4cd0c5e1142234d855696eb2b2bf677[m
Author: Jujian Zhang <jujian.zhang1998@outlook.com>
Date:   Tue Aug 15 19:39:45 2023 +0000

    feat(RingTheory/Artinian) : prime ideals are maximal in aritinial rings (#6309)
    
    prime ideals in artinian rings are maximal

[33mcommit b5ece30947b3cd725c5ffa958481e36684395661[m
Author: Anatole Dedecker <anatolededecker@gmail.com>
Date:   Tue Aug 15 16:57:11 2023 +0000

    feat: weaken assumptions for `IsCompact.existsIsLeast` and all of its variations (#6345)
    
    As discussed a while ago on [Zulip](https://leanprover.zulipchat.com/#narrow/stream/217875-Is-there-code-for-X.3F/topic/upper.20semicontinuous.20functions.20are.20bounded.20below.20compact), we introduce classes expressing that a certain topology has closed `Ici`s/`Iic`s, which is sufficient to get boundedness of compacts on the desired side. The main application is that these now apply to types satisfying [UpperTopology](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Topology/Order/LowerUpperTopology.html#UpperTopology)/[LowerTopology](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Topology/Order/LowerUpperTopology.html#LowerTopology), which will allow us to apply these compactness results to semicontinuous functions.
    
    The naming was discussed [here](https://leanprover.zulipchat.com/#narrow/stream/217875-Is-there-code-for-X.3F/topic/upper.20semicontinuous.20functions.20are.20bounded.20below.20compact/near/383557463)

[33mcommit f3df63ef62e531cc847f8abceb0ad8742a5c9f71[m
Author: Anatole Dedecker <anatolededecker@gmail.com>
Date:   Tue Aug 15 15:52:55 2023 +0000

    chore: move all UniformSpace-related notations in scope Uniformity (#6565)
    
    Currently we have [Uniformity.termùì§](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Topology/UniformSpace/Basic.html#Uniformity.term%F0%9D%93%A4) but [Topology.¬´termùì§[_]¬ª](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Topology/UniformSpace/Basic.html#Topology.%C2%ABterm%F0%9D%93%A4[_]%C2%BB), which is really confusing.

[33mcommit 0e5c7d3bbfe69d51b244e2a9627fd7d9ad7034d4[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Tue Aug 15 15:52:54 2023 +0000

    feat: a function which is zero as a distribution vanishes almost everywhere (#6532)
    
    We first prove this on real manifolds and then deduce it for vector spaces to avoid duplication.

[33mcommit ec5f4d95349fb4fb3653d419585e12fddff35452[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Aug 15 15:52:52 2023 +0000

    feat: add `Filter.Eventually.self_of_nhdsSet` (#6497)
    
    Also add `subset_of_mem_nhdsSet`.
    From the Sphere Eversion Project.

[33mcommit 63cf08024298db28e65cb842a181a94852200953[m
Author: Anatole Dedecker <anatolededecker@gmail.com>
Date:   Tue Aug 15 14:56:56 2023 +0000

    fix: remove no-break spaces in Topology.UniformSpace.Basic (#6560)
    
    This caused titles to not show properly in docs.

[33mcommit 280a9f50ed49fc27396d06d438fde63691818268[m
Author: Anatole Dedecker <anatolededecker@gmail.com>
Date:   Tue Aug 15 13:30:39 2023 +0000

    chore: golf some proofs introduced in #6360 (#6405)
    
    Notably, getting rid of some injectivity restrictions makes some later proofs simpler.
    
    
    
    Co-authored-by: dagurtomas <dagurtomas@gmail.com>
    Co-authored-by: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>

[33mcommit 17a54df98b471ea0554423b31edbac787c85a7f6[m
Author: R√©my Degenne <Remydegenne@gmail.com>
Date:   Tue Aug 15 08:08:46 2023 +0000

    feat: intervals with rational bounds generate the real Borel sigma algebra (#6490)
    
    Add `borel_eq_generateFrom_Ioi_rat`, `borel_eq_generateFrom_Ici_rat`, `borel_eq_generateFrom_Iic_rat` (we already have the `Iio` result). Also prove that these sets of intervals are pi-systems.
    
    
    
    Co-authored-by: RemyDegenne <remydegenne@gmail.com>

[33mcommit 8ce4d53857a18de92a34aca934128275495d6773[m
Author: Scott Morrison <scott@tqft.net>
Date:   Tue Aug 15 07:18:08 2023 +0000

    feat: add `auto-merge-after-CI` label (#6415)
    
    Immediately after the `awaiting-CI` label is removed, check if the PR is labelled `auto-merge-after-CI`, and if so have the mathlib4 bot issue a `bors merge`.
    
    Note that for now bors is not actually listening to the mathlib4 bot, so we will have to enable that once this has been tested.
    
    The main use case here is generating automatic bump PRs so that we can keep up with Lean 4 nightly with less busy work.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 8840a96f8f511417af465094b55ed79957eda30e[m
Author: Markus Himmel <markus@himmel-villmar.de>
Date:   Tue Aug 15 07:18:07 2023 +0000

    feat: turn a cocone into a functor to costructured arrows (#6369)
    
    After making this PR I noticed that this already existed in `Functor/Flat.lean`, so I unified the two developments.

[33mcommit 72b6e767aa1c478f6b5d9c51912b0e8a4f415b2e[m
Author: Yuma Mizuno <mizuno.y.aj@gmail.com>
Date:   Tue Aug 15 06:23:32 2023 +0000

    feat(CategoryTheory/Bicategory): composition as a functor (#6581)
    
    This PR shows that the composition of 1-morphism is a functor, and the associators and the unitors are natural isomorphisms.

[33mcommit 63ae2f41b48247ace2afedddcf58695ec5c5c607[m
Author: michaellee94 <michael_lee1@brown.edu>
Date:   Tue Aug 15 04:44:54 2023 +0000

    feat(RingTheory/MvPolynomial/NewtonIdentities): Add proof of Newton's identities (#6139)
    
    
    
    Co-authored-by: michaellee94 <michael.a.rodrigues.lee@gmail.com>
    Co-authored-by: Oliver Nash <github@olivernash.org>

[33mcommit a075669f9771fca06315e01c59a1c20a41a8408d[m
Author: Xavier Roblot <46200072+xroblot@users.noreply.github.com>
Date:   Tue Aug 15 03:15:38 2023 +0000

    feat: proof of Gershgorin's circle theorem and some applications (#6436)
    
    Prove [Gershgorin circle theorem](https://en.wikipedia.org/wiki/Gershgorin_circle_theorem) and some applications that will be useful for the proof of Dirichlet's unit theorem #5960

[33mcommit 7be90e46ad48741fc9cdc928b048563657aa634e[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Mon Aug 14 23:54:23 2023 +0000

    feat(LinearAlgebra/TensorProduct/Opposite): `A·µê·µí·µñ ‚äó[R] B·µê·µí·µñ ‚âÉ‚Çê[S] (A ‚äó[R] B)·µê·µí·µñ` (#6555)

[33mcommit 90a4745d9db14716c4eefe3e9e19ed17c8daa19e[m
Author: Alex J Best <alex.j.best@gmail.com>
Date:   Mon Aug 14 23:29:39 2023 +0000

    feat: cleanup lint-style a bit (#6549)
    
    Removing some linters and error codes that are not Lean 4 relevant
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 23eea43772ccb6612db6b87130cb5d0ee29ae807[m
Author: Oliver Nash <github@olivernash.org>
Date:   Mon Aug 14 23:29:38 2023 +0000

    feat: define the trace / killing forms on a Lie algebra (#6308)

[33mcommit 75bcb1858e6be1310ad63d8eb99f36882a6e2e13[m
Author: Oliver Nash <github@olivernash.org>
Date:   Mon Aug 14 20:58:26 2023 +0000

    chore: refactor perfect rings / fields (#6182)
    
    The main changes are:
    
    - we replace the data-bearing `PerfectRing` typeclass with a `Prop`-valued (non-constructive) version,
    - we introduce a new typeclass `PerfectField`,
    - we add a proof that a perfect field of positive characteristic has surjective Frobenius map,
    - we add some basic facts such as perfection of finite rings / fields and products of perfect rings.

[33mcommit d1cd996ff31c2ac883b7f5743f3a7f9727055a6b[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Mon Aug 14 19:43:12 2023 +0000

    feat: use junk value in the definition of conditionally complete linear order (#6571)
    
    Currently, in a conditionally complete linear order, the supremum of an unbounded set hasn't any specific property. However, in all instances in mathlib, all unbounded sets have the same supremum. This PR adds this requirement in mathlib. This will be convenient to remove boundedness assumptions in measurability statements.

[33mcommit 704efa4d928b79ac7249410b96a25d6fba557a5e[m
Author: Oliver Nash <github@olivernash.org>
Date:   Mon Aug 14 19:43:11 2023 +0000

    feat: lemmas about parity and `Nat.antidiagonal` (#6540)

[33mcommit 1377815e5531dd244ad7e093889d4f3770f982c0[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Mon Aug 14 19:43:10 2023 +0000

    feat(Algebra/Algebra/Opposite): `A ‚âÉ‚Çê[R] A·µê·µí·µñ·µê·µí·µñ` and `(A ‚âÉ‚Çê[R] B·µê·µí·µñ) ‚âÉ (A·µê·µí·µñ ‚âÉ‚Çê[R] B)` (#6525)
    
    This also adds the missing `AlgEquiv.equivCongr` as a more general version of `AlgEquiv.autCongr`.

[33mcommit 4e823e1adb0cd807b0ea64aa1225b3358beb9acf[m
Author: Chris Hughes <chrishughes24@gmail.com>
Date:   Mon Aug 14 19:43:09 2023 +0000

    feat: charZero_iff_forall_prime_ne_zero (#6518)

[33mcommit abbba041dd21a55a994d8323c5450db46964ad8b[m
Author: Thomas Browning <tb65536@uw.edu>
Date:   Mon Aug 14 19:43:08 2023 +0000

    refactor(*): Protect `Function.Commute` (#6456)
    
    This PR protects `Function.Commute`, so that it no longer clashes with `Commute` in the root namespace, as suggested by @j-loreaux in #6290.

[33mcommit 34ce2e5a52a64b3d220926c4f4862d6804c4656b[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Mon Aug 14 17:31:03 2023 +0000

    ci: turn back on the docBlame linter (#6579)
    
    This was turned off during porting as it forced porters to write docstrings for things they were not familiar with.
    
    `nolints.json` was rebuilt with `lake build runLinter; ./build/bin/runLinter --update Mathlib`.

[33mcommit 0c24f831f1e333c5ed24e554039194a5b498d9c4[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Mon Aug 14 16:43:20 2023 +0000

    fix: disable autoImplicit globally (#6528)
    
    Autoimplicits are [highly controversial](https://leanprover.zulipchat.com/#narrow/stream/270676-lean4/topic/.60autoImplicit.20true.60.20is.20evil/near/355142480) and also [defeat the performance-improving work](https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/autoimplicit.20and.20Type*/near/383878932) in #6474.
    
    The intent of this PR is to make `autoImplicit` opt-in on a per-file basis, by disabling it in the lakefile and enabling it again with `set_option autoImplicit true` in the few files that rely on it.
    
    That also keeps this PR small, as opposed to attempting to "fix" files to not need it any more.
    
    I claim that many of the uses of `autoImplicit` in these files are accidental; situations such as:
    
    * Assuming `variables` are in scope, but pasting the lemma in the wrong section
    * Pasting in a lemma from a scratch file without checking to see if the variable names are consistent with the rest of the file
    * Making a copy-paste error between lemmas and forgetting to add an explicit arguments.
    
    Having `set_option autoImplicit false` as the default prevents these types of mistake being made in the 90% of files where `autoImplicit`s are not used at all, and causes them to be caught by CI during review.
    
    I think there were various points during the port where we encouraged porters to delete the `universes u v` lines; I think having autoparams for universe variables only would cover a lot of the cases we actually use them, while avoiding any real shortcomings.
    
    [A Zulip poll](https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/mathlib4.3A.20autoImplicit.20false.20by.20default.3F/near/384265143) (after combining overlapping votes accordingly) was in favor of this change with `5:5:18` as the `no:dontcare:yes` vote ratio.
    
    While this PR was being reviewed, a handful of files gained some more likely-accidental autoImplicits. In these places, `set_option autoImplicit true` has been placed locally within a section, rather than at the top of the file.

[33mcommit 6b723c042ee27fdcba0365b947254174d67b96b3[m
Author: Anatole Dedecker <anatolededecker@gmail.com>
Date:   Mon Aug 14 12:56:33 2023 +0000

    chore: quasiconvexity doesn't need an additive structure on the codomain (#6494)

[33mcommit 1e78d106b7b0cec5da0f83622ce30e9d03651186[m
Author: Chris Hughes <chrishughes24@gmail.com>
Date:   Mon Aug 14 12:56:31 2023 +0000

    feat: Minimal axioms for rings and fields (#6472)

[33mcommit 6d6b40f7ec913d4091d13eb7a4bca0a5bde1626d[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Mon Aug 14 12:56:30 2023 +0000

    feat(LinearAlgebra/BilinearForm): a tensor product of symmetric bilinear forms is symmetric (#6466)

[33mcommit 0c5253c6add55fc5f638e0383f3b9610ddc35c8e[m
Author: Chris Hughes <chrishughes24@gmail.com>
Date:   Mon Aug 14 12:56:28 2023 +0000

    feat(ModelTheory): alternative statement of compactness (#6453)
    
    
    
    Co-authored-by: Chris Hughes <33847686+ChrisHughes24@users.noreply.github.com>

[33mcommit 2c586614cad668bbd4dc0d13cb3ed7fdaaac69c8[m
Author: Joachim Breitner <mail@joachim-breitner.de>
Date:   Mon Aug 14 12:56:27 2023 +0000

    feat: MeasurableSpace (Fin n) (#6431)
    
    This defines the instance `MeasurableSpace (Fin n)`.
    The motivation is #6425, which defines `Pmf.binomial`, and thus a measure on `Fin n`.

[33mcommit c1776a3da70b67192c15f5178270c3270aba8905[m
Author: Kevin Buzzard <k.buzzard@imperial.ac.uk>
Date:   Mon Aug 14 12:56:25 2023 +0000

    perf: add instance shortcut to remove heartbeat bump (#6410)
    
    This removes a maxHeartbeats bump (the only one in the file).

[33mcommit c54060b4a386fb664d066bd0d611e2d9002d82f6[m
Author: Eric Rodriguez <ericrboidi@gmail.com>
Date:   Mon Aug 14 12:56:23 2023 +0000

    feat: the class equation (groups) (#6375)
    
    This is mostly mathported work of Johan's towards Wedderburn's Little theorem.
    
    
    
    Co-authored-by: Eric Rodriguez <37984851+ericrbg@users.noreply.github.com>

[33mcommit cd6dd35c5cd5a80c46968d6ca29289986aa4e924[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Mon Aug 14 12:56:22 2023 +0000

    fix: replace SMul.smul use in UpperHalfPlane (#6353)

[33mcommit 47d15c35466f8a6f6de3622391a99bd0326941af[m
Author: Scott Morrison <scott@tqft.net>
Date:   Mon Aug 14 12:56:20 2023 +0000

    chore: adjust priorities of mem_map lemmas (#6327)
    
    The `mem_map` lemmas were inconsistently either not `simp` lemmas at all, `simp` lemmas, or `simp` lemmas with a lowered priority.
    
    This PR makes them uniformly low priority simp lemmas, and adds a few simp attributes to "better" simp lemmas instead. (However these lemmas are themselves quite inconsistent across different algebraic structures, and I haven't attempted to add missing ones.)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 628cf18b4a2f1cb11d2f88b94830281bb8d4105e[m
Author: Jz Pan <acme_pjz@hotmail.com>
Date:   Mon Aug 14 12:56:19 2023 +0000

    feat(Mathlib/FieldTheory/IsSepClosed) separably closed field and separable closure - basic definition (#6285)
    
    Main changes
    
    - Add `IsSepClosed` and basic properties.
    - Add `IsSepClosure` and basic properties.
    
    
    
    Co-authored-by: Johan Commelin <johan@commelin.net>

[33mcommit 886c740aa9d04327cd798dd148f7509a171cb5ae[m
Author: R√©my Degenne <remydegenne@gmail.com>
Date:   Mon Aug 14 12:56:17 2023 +0000

    feat(Probability/Kernel/Condexp): some properties of condexpKernel (#6109)
    
    `condexpKernel` is a Markov kernel, is strongly measurable and is a.e. equal to the conditional expectation.
    
    
    
    Co-authored-by: RemyDegenne <Remydegenne@gmail.com>

[33mcommit 86bb3de9bb184bdd09e9d18f5890a1136c7429ff[m
Author: Kyle Miller <kmill31415@gmail.com>
Date:   Mon Aug 14 12:56:16 2023 +0000

    feat: lemmas about connectivity of subgraphs and induced graphs (#5927)
    
    (Replaces [mathlib#18454](https://github.com/leanprover-community/mathlib/pull/18454).)
    
    Co-authored-by: R√©mi Bottinelli <remi.bottinelli@bluewin.ch>

[33mcommit a6b1311d59ebf12b05f84b0a7b2e4a8914ac09f3[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Mon Aug 14 12:01:46 2023 +0000

    chore: move lemmas from Stietljes.lean to their proper afterport places (#6554)

[33mcommit 595af3d07891a4f9203767f1e27dfb3c5a3c208a[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Mon Aug 14 11:02:03 2023 +0000

    chore: tidy various files (#6534)

[33mcommit ea2fa1665568c413cbaf7473f04f7bd9c2d34347[m
Author: damiano <adomani@gmail.com>
Date:   Mon Aug 14 10:09:53 2023 +0000

    chore(Mathlib/Algebra/CharP/Basic): golf cast_injOn_of_ringChar_ne_two (#6573)
    
    Just the shortening of a proof, letting `simp` do the work.

[33mcommit d08d8bb218e6354e222f30b54af3faf1260cdd90[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Mon Aug 14 09:10:13 2023 +0000

    chore: Remove noaligns from MonoidAlgebra.Degree (#6574)
    
    There seems to have been a misunderstanding about the purpose of this command.

[33mcommit c14ff12d3d102e34a1e497438b97334822dac6cc[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Mon Aug 14 08:13:48 2023 +0000

    feat(Algebra/MonoidAlgebra/Basic): add `domCongr` (#6567)
    
    This is the `AlgEquiv` version of `Finsupp.domLCongr`.
    
    `MvPolynomial.renameEquiv` is a special case of this, but it's probably not worth changing the defeqs to redefine it that way.

[33mcommit c769b9d88f251ff1f0c92001fd4ef480d6ea0537[m
Author: damiano <adomani@gmail.com>
Date:   Mon Aug 14 05:39:51 2023 +0000

    feat: add definitions of degrees of AddMonoidAlgebras (#6260)
    
    This PR defines
    
    1. the `supDegree` of an `AddMonoidAlgebra`, graded by a `SemilatticeSup`;
    1. the `infDegree` of an `AddMonoidAlgebra`, graded by a `SemilatticeInf`;
    1. ~~the `maxDegree` of an `AddMonoidAlgebra`, graded by a `LinearOrder` with a bottom element;~~
    1. ~~the `minDegree` of an `AddMonoidAlgebra`, graded by a `LinearOrder` with a top element.~~
    
    It also proves that under addition and multiplication in the `AddMonoidAlgebra`, each degree behaves as expected.
    
    The lemmas are there simply to give a sample usage of the new definition.
    
    The [corresponding `mathlib3` PR](https://github.com/leanprover-community/mathlib/pull/15296) was `not-too-late` and closed unmerged.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 484cfebd9cd53b374d26ec72e8706cbe683384dc[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Mon Aug 14 01:22:12 2023 +0000

    refactor: generalize PiLp to WithLp (#6409)
    
    The motivation is to be able to reuse this for `ProdLp` in #6136.
    
    This matches the pattern of how the `Lex` type synonym is used.

[33mcommit 4fa9d3db6bcd0b9d21151cf254658a5270226da8[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sun Aug 13 21:09:01 2023 +0000

    feat(LinearAlgebra/Basis): add lemmas/golf (#6460)
    
    * Add `Basis.mem_span_image`, `Basis.self_mem_span_image`.
    * Golf some proofs.
    * Add `@[simp]` to `Basis.span_eq`.

[33mcommit c532d7b8b62ae053ce3d894ac69b52564e644696[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Sun Aug 13 15:48:43 2023 +0000

    feat: forward port of Mathlib.AlgebraicTopology.DoldKan.Equivalence (#6444)
    
    In this PR (which is a forward port of https://github.com/leanprover-community/mathlib/pull/17926), the Dold-Kan equivalence between simplicial objects and chain complexes in abelian categories is constructed.
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit 9f8f772f02755375a8301679aeb67186742c59fa[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Sun Aug 13 13:12:24 2023 +0000

    feat: developing the API of right homology of short complexes (#6230)
    
    This PR develops the API of the right homology of short complexes, getting all the dual notions and results that were previously obtained for the left homology.
    
    
    
    Co-authored-by: Markus Himmel <markus@himmel-villmar.de>
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit 14430ef690c88d302a760029fbd24b7b25ac1201[m
Author: kkytola <kalle.kytola@aalto.fi>
Date:   Sun Aug 13 11:39:15 2023 +0000

    feat: lemma limsup_const_add + 7 variants (#6455)
    
    Add 8 lemmas: `limsup_const_add`, ..., `liminf_sub_const`.
    
    The 4 lemmas about `add` are proven with typeclass assumptions which apply to `‚Ñù`, `‚Ñù‚â•0`, and `‚Ñù‚â•0‚àû` (at least). The 4 lemmas about `sub` are proven with typeclass assumptions which apply to `‚Ñù` and `‚Ñù‚â•0` (at least). For `‚Ñù‚â•0‚àû`, we add separate implementations of these latter 4 lemmas `ENNReal.liminf_sub_const`, ...
    
    
    
    Co-authored-by: kkytola <39528102+kkytola@users.noreply.github.com>

[33mcommit 640038f37d0b63cc7e7590d40893f5619fdafd81[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sun Aug 13 09:51:11 2023 +0000

    chore(LpSpace): golf, generalize (#6553)
    
    * drop mostly unused section variables;
    * generalize `MeasureTheory.lintegral_indicator_const`
      and `MeasureTheory.snorm_indicator_const`
      to a `NullMeasurableSet`;
    * golf a proof.

[33mcommit 6961667d57c6833fb351443537acf0967383d9f1[m
Author: Moritz Doll <moritz.doll@googlemail.com>
Date:   Sun Aug 13 08:45:41 2023 +0000

    feat: add more algebraic instances for LinearPMap (#6538)
    
    We add some properties of subtraction and cleanup the naming of the old instances.

[33mcommit f697cccce2d242385d0ef070025a3495feb12d08[m
Author: Fr√©d√©ric Dupuis <dupuisf@iro.umontreal.ca>
Date:   Sun Aug 13 08:12:34 2023 +0000

    feat: lemmas about monotonicity and asymptotics of `rpow` (#6140)
    
    
    
    Co-authored-by: Fr√©d√©ric Dupuis <31101893+dupuisf@users.noreply.github.com>

[33mcommit a28c6c6ce79d0b1160e83639f511b5bebbe93cac[m
Author: Bolton Bailey <bolton.bailey@gmail.com>
Date:   Sat Aug 12 22:08:38 2023 +0000

    feat: weaken assumptions on Polynomial.map lemmas (#6544)
    
    The assumptions on these lemmas seem to be too strong - `R` does not need to be a field, only a division ring, and `S` does not need to be a division ring, only a nontrivial semiring.

[33mcommit 80b3e90ff8c50eb2a72d802e39aba9c7eb3d4d37[m
Author: Anne Baanen <vierkantor@vierkantor.com>
Date:   Sat Aug 12 20:56:34 2023 +0000

    refactor: make IsDedekindDomain extend the other classes (#5834)
    
    This redefines the `IsDedekindDomain` class to be the conjunction through `extends` of the classes `IsDomain`, `IsNoetherianRing`, `DimensionLEOne` and `IsIntegrallyClosed`.
    
    Zulip thread: https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/Should.20.60IsDedekindDomain.60.20extend.20.60IsDomain.60.3F

[33mcommit f2c3294f9b859bb322e4142e39aae38ee08076e0[m
Author: Scott Morrison <scott@tqft.net>
Date:   Sat Aug 12 20:56:33 2023 +0000

    feat: presheaf of modules over a presheaf of rings (#4670)
    
    This is extracted from the draft PR https://github.com/leanprover-community/mathlib4/pull/4116 which tries to compare this definition with the definition in terms of a presheaf in `RingMod`.
    
    
    
    Co-authored-by: Oliver Nash <github@olivernash.org>
    Co-authored-by: Christopher Hoskin <christopher.hoskin@gmail.com>
    Co-authored-by: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
    Co-authored-by: Anatole Dedecker <anatolededecker@gmail.com>
    Co-authored-by: Matthew Robert Ballard <k.buzzard@imperial.ac.uk>
    Co-authored-by: Peter Nelson <71660771+apnelson1@users.noreply.github.com>
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>
    Co-authored-by: R√©my Degenne <remydegenne@gmail.com>
    Co-authored-by: Thomas Browning <tb65536@uw.edu>
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>
    Co-authored-by: Matthew Robert Ballard <matt@mrb.email>
    Co-authored-by: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
    Co-authored-by: Yury G. Kudryashov <urkud@urkud.name>
    Co-authored-by: Arend Mellendijk <arend.mellendijk@gmail.com>
    Co-authored-by: Markus Himmel <markus@himmel-villmar.de>
    Co-authored-by: Christopher Hoskin <christopher.hoskin@overleaf.com>
    Co-authored-by: Bulhwi Cha <chabulhwi@semmalgil.com>
    Co-authored-by: Floris van Doorn <fpvdoorn@gmail.com>
    Co-authored-by: negiizhao <egresf@gmail.com>
    Co-authored-by: Alex J Best <alex.j.best@gmail.com>
    Co-authored-by: Jeremy Tan Jie Rui <reddeloostw@gmail.com>
    Co-authored-by: Kyle Miller <kmill31415@gmail.com>
    Co-authored-by: Chris Hughes <chrishughes24@gmail.com>
    Co-authored-by: Jz Pan <acme_pjz@hotmail.com>

[33mcommit 9560eb0d52443bc35d9436b7e12bc3a98ca91fdd[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sat Aug 12 19:50:20 2023 +0000

    feat(Set/Prod): add `Set.Subsingleton.prod` (#6529)
    
    Add `Set.Subsingleton.prod` and `Set.subsingleton_univ_pi`.

[33mcommit cb48f57dde1bd2c7f5f135aca20906106279575b[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Sat Aug 12 18:26:28 2023 +0000

     feat: port Combinatorics.Quiver.Covering  (#6383)

[33mcommit 07bb4a58c17bfd10b42de9ad44660ad4825ce807[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sat Aug 12 17:49:15 2023 +0000

    chore(MeasureTheory/.../ContinuousMapDense): golf 1 `obtain` (#6542)

[33mcommit 4fbcc51d43f506a786637db41acba51797a8c314[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Sat Aug 12 17:00:38 2023 +0000

    feat(NumberTheory/Padics/PadicVal): padicValNat_factorial' (#5803)
    
    - [x] depends on: #5778
    - [x] depends on: #5789
    - [x] depends on: #5802
    - [x] depends on: #6505
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit 3d6112b5c7d095d3088b359c611a5a2704c5dbdc[m
Author: Markus Himmel <markus@himmel-villmar.de>
Date:   Sat Aug 12 02:59:05 2023 +0000

    feat: the forgetful functor from CostructuredArrow F X to Over X (#6366)

[33mcommit ec529253abeb03ae46ff9333058202ea0a8df595[m
Author: Xavier Roblot <46200072+xroblot@users.noreply.github.com>
Date:   Fri Aug 11 23:48:54 2023 +0000

    feat: add Algebra.discr_localizationLocalization  (#6422)
    
    We prove
    ```lean
    theorem Algebra.discr_localizationLocalization (b : Basis Œπ R S) :
      Algebra.discr R‚Çò (b.localizationLocalization R‚Çò M A‚Çò) = algebraMap R R‚Çò (Algebra.discr R b)
    ```
    We need for that to prove the analogue for the trace of `Algebra.norm_localization` (that was the only result in `RingTheory.Localization.Norm`). Since the results are added to this file, it is renamed to `RingTheory.Localization.NormTrace` (not sure about the name though).

[33mcommit ad9a95ec53fdeee6ffd1e9eb9ccf796760557678[m
Author: Peiran Wu <15968905+wupr@users.noreply.github.com>
Date:   Fri Aug 11 20:30:18 2023 +0000

    refactor(GroupTheory/GroupAction/Basic): rename variable names to a consistent style (#6531)
    
    Renaming variable names in basic definitions, theorems, and proofs regarding `MulAction` and `AddAction`, so that the choice of letter is
    
    1. consistent with sibling files (e.g. GroupTheory/GroupAction/Defs.lean) and
    2. easy to parse.
    
    Specifically,
    
    - `M` (for "monoid") or `G` (for "group") is the type that acts;
    - `Œ±` is the type that is acted on;
    - terms of `M` are `m` etc and terms of `G` are `g` etc;
    - terms of `Œ±` are `a` etc.
    
    Miswording in the docstrings for `MulAction.fixedBy` and `AddAction.fixedby` is also fixed.

[33mcommit 3697da162404a0a72fd837e1fe9e74b7981f1344[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Fri Aug 11 19:14:45 2023 +0000

    chore: tidy various files (#6393)

[33mcommit b48610ff7efde07f120bb4793794c7736346199b[m
Author: Markus Himmel <markus@himmel-villmar.de>
Date:   Fri Aug 11 19:14:44 2023 +0000

    feat: every presheaf on a large category is a colimit of representables (#6387)

[33mcommit 30b7080e0f2698cd4ad34c04cf9a0ede562fbcae[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Fri Aug 11 18:23:17 2023 +0000

    docs: replace `‚¨ù BLACK VERY SMALL SQUARE` with `¬∑ MIDDLE DOT` (#6522)
    
    `MIDDLE DOT` is now valid Lean syntax for function arguments, which is what these docstrings are referring to.

[33mcommit cf85b042d2bad29885b5f59232529f102feb6d12[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Fri Aug 11 17:06:18 2023 +0000

    feat(Topology): use `OrderHomClass` for `CompactExhaustion` (#6461)
    
    Also rename `is_compact'` field to `isCompact'`.

[33mcommit a71e95811f814f86f20f2ad512e94edd48a39a0c[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Fri Aug 11 15:25:30 2023 +0000

    feat(Data/Nat/Digits): sub_one_mul_sum_div_pow_eq_sub_sum_digits (#6505)
    
    - [x] depends on: #6448
    - [x] depends on: #6493
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit 5b3ada45ae3b95bef4211e4613f43981afc23ed0[m
Author: Chris Hughes <chrishughes24@gmail.com>
Date:   Fri Aug 11 14:14:11 2023 +0000

    chore: delete unused letI and nolint (#6523)

[33mcommit ecc61a3b7450508a3c90b0fc9ca4ca62ca1e19a1[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Fri Aug 11 14:14:09 2023 +0000

    style: remove trailing whitespace and modify the linter to detect it (#6519)

[33mcommit 6c055eb60bce1ff71c60b5706bbb22920f1bbc88[m
Author: Thomas Browning <tb65536@uw.edu>
Date:   Fri Aug 11 14:14:08 2023 +0000

    feat(GroupTheory/SpecificGroups/Dihedral): Conjugacy classes in odd dihedral groups (#6502)
    
    This PR counts conjugacy classes in odd dihedral groups. The even case is a bit harder due to the half-rotation being central.

[33mcommit e8820b88b07fc6b22e6163a089cb73771e3a443a[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Fri Aug 11 14:14:07 2023 +0000

    feat: continuous linear equivalences act transitively on nonzero vectors (#6346)
    
    For any nonzero vectors, one can find a continuous linear equivalence sending the first one to the second one. This follows from the existence of nontrivial linear forms, whichis proved in mathlib in the two following situations:
    * normed spaces over R or C
    * locally convex vector spaces over R
    To obtain a statement that applies in these two cases, we introduce a new typeclass `SeparatingDual`.

[33mcommit cf872fff8d84ff4d6491dddc12a3bb9e5d90dc18[m
Author: Anatole Dedecker <anatolededecker@gmail.com>
Date:   Fri Aug 11 13:05:19 2023 +0000

    chore: protect `Submodule.map_smul` (#6521)
    
    In the current situation, `open Submodule` prevents using the (exported) lemma [SMulHomClass.map_smul](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Algebra/Hom/GroupAction.html#SMulHomClass.map_smul) without qualifying it explicitly, which is a bit of a shame since we need it all the time for linear maps. This also means that using `map_smul` for [Submodule.map_smul](https://leanprover-community.github.io/mathlib4_docs/Mathlib/LinearAlgebra/Basic.html#Submodule.map_smul) will never work outside of `namespace Submodule`, so we might as well make it protected.

[33mcommit 68e7a9e8ddbd68341383b6220eb2cf59973b9d4e[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Fri Aug 11 11:56:31 2023 +0000

    feat(Algebra/Algebra/Opposite): tools for working with opposite algebras (#6364)
    
    This moves the `Algebra` instance on `MulOpposite` to a new file, and adds the `AlgHom` and `AlgEquiv` versions of various existing `RingHom` and `RingEquiv` definitions:
    
    * `AlgHom.fromOpposite`
    * `AlgHom.toOpposite`
    * `AlgHom.op`
    * `AlgHom.unop`
    * `AlgEquiv.op`
    * `AlgHom.unop`
    * `AlgEquiv.toOpposite`
    
    As `MulOpposite.instAlgebra` is no longer in `Mathlib.Algebra.Algebra.Basic`, some new downstream imports are needed.

[33mcommit 4eabdeb3293f84defabbe62244db0c22eb52ec97[m
Author: Chris Hughes <chrishughes24@gmail.com>
Date:   Fri Aug 11 10:51:16 2023 +0000

    feat: charP_iff_prime_eq_zero (#6516)

[33mcommit 4716e2a236423b55610ca91a5e7aee1d1ea55804[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Fri Aug 11 10:51:15 2023 +0000

    chore(Analysis/InnerProductSpace/PiL2): Make EuclideanSpace.equiv an `abbrev` (#6503)
    
    This definition already exists elsewhere more generally, but this spelling is admittedly easier to find.

[33mcommit d567f7cfc07d1a56eabb808ca3be77113520505b[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Fri Aug 11 09:51:07 2023 +0000

    chore: use `IsDirected` in `Filter.isBounded_sup` (#6511)

[33mcommit a216784ed0a9f212e436834b61bc89cae87e3cd2[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Fri Aug 11 09:19:53 2023 +0000

    chore: restore Type* in SpecificLimits/IsROrC.lean (#6515)
    
    This was accidentally changed in #6506.

[33mcommit b44650d7797933c7477bb0e8a7cbaeb7293fd49a[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Fri Aug 11 08:55:46 2023 +0000

    feat: construct a smooth function on a manifold equal to one on a given closed set and with given support (#6067)

[33mcommit eb58d9e5b56b13d187cf5b15bf23bdf320368545[m
Author: Scott Morrison <scott@tqft.net>
Date:   Fri Aug 11 08:07:28 2023 +0000

    chore: bump aesop (#6513)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 94eadaf697396db9a5046ac36ae458a716b2ce99[m
Author: Scott Morrison <scott@tqft.net>
Date:   Fri Aug 11 07:19:05 2023 +0000

    chore: fix lakefile (#6510)
    
    My PR https://github.com/leanprover-community/mathlib4/pull/6423 modified the lakefile to point to a branch of the `Qq` library, but this had only been necessary during my local testing against a patched version of Lean. I should not have committed this change, and we should not have merged it to `master`.
    
    It's harmless, I think, but should be reverted asap.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit b0eb5caa4f67fb7c2b232600b21f9c43f64c25a5[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Fri Aug 11 05:07:39 2023 +0000

    feat(Data/Nat/Digits): sum_le_ofDigits (#6493)
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit f4e6240349659da1dae22fd5c421bfc43a28eb82[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Fri Aug 11 02:45:52 2023 +0000

    doc: add docstring for `StarOrderedRing ‚Ñù` (#6481)

[33mcommit cd15d6508c1907548a58bab26f4c8adcae389da6[m
Author: Matthew Robert Ballard <matt@mrb.email>
Date:   Fri Aug 11 02:23:32 2023 +0000

    fix (InnerProductSpace.Basic): make toSesqForm noncomputable (#6512)
    
    Explicitly marks `ContinuousLinearMap.toSesqForm` as `noncomputable` to prevent runaway build process which does produces nothing.

[33mcommit df08e0d603a542bd9266a68aca5af352dbe5b164[m
Author: Scott Morrison <scott@tqft.net>
Date:   Thu Aug 10 23:46:42 2023 +0000

    chore: no need for universe polymorphism in convexHull_eq (#3634)
    
    
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 355541ae7a2455222f179dcf7f074aa2c45eb8aa[m
Author: Kaiyu Yang <kaiyuy@caltech.edu>
Date:   Thu Aug 10 23:22:08 2023 +0000

    style: fix Windows-style line-endings and modify the linter to detect them (#6506)
    
    style: fix Windows-style line-endings and modify the linter to detect them

[33mcommit 057299dc3c9d269cfd370c557832e91adeae4037[m
Author: Antoine Chambert-Loir <antoine.chambert-loir@u-paris.fr>
Date:   Thu Aug 10 22:19:40 2023 +0000

    feat: Add a `DecidableEq` instance for `Polynomial` (#5942)
    
    Add a `DecidableEq` instance for `Polynomial` (in the presence of `DecidableEq` for coefficients).
    
    This instance is the companion of an analogue instance for `MvPolynomial`, and it allows to use if‚Ä¶ then‚Ä¶ else for `Polynomial` without having to `open Classical`.
    
    This also makes `Polynomial.instNormalizationMonoid` computable, by defining it in terms of this new instance.
    
    
    
    Co-authored-by: Antoine Chambert-Loir <antoine.chambert-loir@math.univ-paris-diderot.fr>
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 96a37689635c9403e67104f73206cf848be79706[m
Author: MohanadAhmed <m.a.m.elhassan@gmail.com>
Date:   Thu Aug 10 21:26:54 2023 +0000

    feat: Mul by invertible matrices is injective even for rectangular matrices (#6486)
    
    Multiplication by invertible matrices from the left or right is injective. Note that [`mul_left_injective‚ÇÄ`](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Algebra/GroupWithZero/Defs.html#mul_left_injective%E2%82%80) and friends don't apply because they would require similar (square) matrices.

[33mcommit 32de3f675e28bc8b32de22cba2660940d0a5fc10[m
Author: Matthew Robert Ballard <matt@mrb.email>
Date:   Thu Aug 10 19:52:43 2023 +0000

    chore: banish `Type _` and `Sort _` (#6499)
    
    We remove all possible occurences of `Type _` and `Sort _` in favor of `Type*` and `Sort*`.
    
    This has nice performance benefits.

[33mcommit c4190b46a0e755ba10c94038aa77e644abeb95d0[m
Author: Oliver Nash <github@olivernash.org>
Date:   Thu Aug 10 19:52:41 2023 +0000

    feat: lemmas about nilpotency and polynomials (#6450)

[33mcommit 807aecc70dc1d882f78ad343df09d55bc8d2860c[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Thu Aug 10 19:52:40 2023 +0000

    feat(Data/Nat/Digits): dividing by `p^i` (#6448)
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit ba80034619884735df10ebb449b4fc2a44b2c3e7[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Thu Aug 10 18:21:37 2023 +0000

    chore: update std4 (#6492)

[33mcommit 76efa470a138b8d64e5b08d423e087e4974bc5c2[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Thu Aug 10 17:12:07 2023 +0000

    feat: cardinality of a set with a countable cover (#6351)
    
    Assume that a set `t` is eventually covered by a countable family of sets, all with
    cardinality `‚â§ a`. Then `t` itself has cardinality at most `a`.

[33mcommit 4ae3f82ffc5659e67e94e89878838432cb7cc216[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Thu Aug 10 13:44:28 2023 +0000

    chore(Data/IsROrC/Basic): trivial lemmas about inequalities with zero (#6488)

[33mcommit 00f96f0d0f9f84a339f6b82975d3ac4926c3aa5a[m
Author: Scott Morrison <scott@tqft.net>
Date:   Thu Aug 10 12:07:48 2023 +0000

    chore: deduplicate ToExpr FilePath (#6480)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 65a35f7809b7d20a27535a8c2b872b8327db8c26[m
Author: Scott Morrison <scott@tqft.net>
Date:   Thu Aug 10 12:07:46 2023 +0000

    chore: ensure all instances referred to directly have explicit names (#6423)
    
    Per https://github.com/leanprover/lean4/issues/2343, we are going to need to change the automatic generation of instance names, as they become too long.
    
    This PR ensures that everywhere in Mathlib that refers to an instance by name, that name is given explicitly, rather than being automatically generated.
    
    There are four exceptions, which are now commented, with links to https://github.com/leanprover/lean4/issues/2343.
    
    This was implemented by running Mathlib against a modified Lean that appended `_·æ∞` to all automatically generated names, and fixing everything.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 8c698a524a8dbde0edac827a4ea68a59f423d5b6[m
Author: damiano <adomani@gmail.com>
Date:   Thu Aug 10 12:07:45 2023 +0000

    feat: simple lemmas about polynomials and their degrees (#6220)
    
    This PR extracts some lemmas about polynomials that are helpful for the tactic `compute_degree` (#6221).
    
    The signature of a theorem changed:
    ```lean
    theorem coeff_pow_of_natDegree_le (pn : p.natDegree ‚â§ n) :
        (p ^ m).coeff (n * m) = p.coeff n ^ m  -- <-- the order of the product was `n * m`
        (p ^ m).coeff (m * n) = p.coeff n ^ m  -- <-- and it became `m * n`
    ```
    Modified files:
    ```
    Data/Polynomial/Basic.lean
    Data/Polynomial/Degree/Lemmas.lean
    Data/Polynomial/Degree/Definitions.lean
    Data/Polynomial/Coeff.lean  -- for a "`simp` can prove this" golf
    ```

[33mcommit 461da4ad7cdfd226872f7dd276d8864df432a994[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Thu Aug 10 11:44:01 2023 +0000

    feat: algebraic versions of LocallyConstant.comap (#6396)
    
    We give algebraic versions of `LocallyConstant.comap` given the relevant algebraic structure on the target.

[33mcommit 4dc11c851d8c007ede2e475a2010c6b75f948a1c[m
Author: Kevin Buzzard <k.buzzard@imperial.ac.uk>
Date:   Thu Aug 10 10:11:54 2023 +0000

    fix: remove porting note (#6478)
    
    Remove now-false claim in porting note.

[33mcommit 27940a5143a4a33b7d8ff65d49129f466e905d76[m
Author: damiano <adomani@gmail.com>
Date:   Thu Aug 10 10:11:52 2023 +0000

    feat: counterexample to `Monic => regular` in general semirings (#6476)
    
    This example fixes a mistake that I made in a PR review: the implication `Monic => IsRegular` does not hold in general `Semiring`s (cf. [Polynomial.Monic.isRegular](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Data/Polynomial/Monic.html#Polynomial.Monic.isRegular) for the statement with a `Ring` hypothesis).
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 6e5e4ba90175a3f859fe9c3856dd140abdb080cd[m
Author: Anatole Dedecker <anatolededecker@gmail.com>
Date:   Thu Aug 10 10:11:51 2023 +0000

    feat: generalize `AEMeasurable.indicator` to `NullMeasurableSet` (#6445)

[33mcommit 21202466e6094d983405f153d2513dee04851519[m
Author: Niels Voss <code@nielsvoss.com>
Date:   Thu Aug 10 10:11:50 2023 +0000

    fix(NumberTheory/FermatPsp): Update definition and theorem names (#6371)
    
    Fix some definition and theorem names in NumberTheory/FermatPsp. Most of these definitions were previously under the `FermatPsp` namespace. This PR removes the `FermatPsp` namespace and places all the definitions under the `Nat` namespace.
    
    The following are the main changes made to names:
    - `FermatPsp.ProbablePrime` -> `Nat.ProbablePrime`
    - `FermatPsp` -> `Nat.FermatPsp`
    - `FermatPsp.coprime_of_probablePrime` -> `Nat.coprime_of_probablePrime`
    - `FermatPsp.probablePrime_iff_modEq` -> `Nat.probablePrime_iff_modEq`
    - `FermatPsp.coprime_of_fermatPsp` -> `Nat.coprime_of_fermatPsp`
    - `FermatPsp.base_one` -> `Nat.fermatPsp_base_one`
    - `FermatPsp.exists_infinite_pseudoprimes` -> `Nat.exists_infinite_pseudoprimes`
    - `FermatPsp.frequently_atTop_fermatPsp` -> `Nat.frequently_atTop_fermatPsp`
    - `FermatPsp.infinite_setOf_prime_modeq_one` -> `Nat.infinite_setOf_pseudoprimes`
    
    The last name was originally a mistake that came from the proof I used as reference.
    
    This PR additionally contains a few fixes for the proofs that were needed because they are now in the `Nat` namespace. It also removes the `Mathlib.Data.Nat.Prime` import because it is transitively included in the `Mathlib.FieldTheory.Finite.Basic` import.

[33mcommit 5135f10def0baca9bb60fa2d0a64f86b235f7ef0[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Thu Aug 10 10:11:49 2023 +0000

    feat(Control/Random): instances for `ULift` (#6271)

[33mcommit e18a95e7fcfadebdddb5323b86ab6f9eb90a451f[m
Author: Calvin Lee <pounce@meta.com>
Date:   Thu Aug 10 10:11:48 2023 +0000

    doc: change variable names in AtPrime.lean (#6242)
    
    This commit changes the names of the prime ideal to `I` to match the docstrings. It also fixes an instance of `Localization.AtPrime` taking too many arguments in a docstring.
    
    
    
    
    Co-authored-by: Calvin Lee <pounce@integraldoma.in>

[33mcommit ee689443f70bbb6ba59346d41b24843646478625[m
Author: Bulhwi Cha <chabulhwi@semmalgil.com>
Date:   Thu Aug 10 10:11:47 2023 +0000

    chore: slightly golf `Equiv.ulift` (#6180)
    
    Use `ULift.down_up` to provide a value for the field `right_inv`.

[33mcommit 8c390f68a1285825146d45916a4d8e6bd4bc5526[m
Author: negiizhao <egresf@gmail.com>
Date:   Thu Aug 10 10:11:45 2023 +0000

    feat: make `Dfinsupp.sigmaCurry` computable (#1947)
    
    ~~mathlib3 PR: https://github.com/leanprover-community/mathlib/pull/18316~~

[33mcommit 35ae770835c2770643ccc5a57910828ba9885e23[m
Author: damiano <adomani@gmail.com>
Date:   Thu Aug 10 08:49:40 2023 +0000

    chore(Algebra/{ Group/UniqueProds, Order/Monoid/Basic }): move `eq_and_eq_of_le_of_le_of_mul_le` earlier (#6483)
    
    This move was suggested in #6220.  In fact, the lemma is a general fact about an inequality involving multiplications and did not really belong in the file where it was.
    
    Affected files:
    ```
    Algebra.Group.UniqueProds
    Algebra.Order.Monoid.Basic
    ```

[33mcommit 45fd6b088364b130552f0568cb460e8c6675c4e6[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Thu Aug 10 08:05:12 2023 +0000

    chore: let Lean auto apply `isBoundedDefault` tactic (#6485)

[33mcommit f330b65348432a6e7dc2c49403394517886f8c32[m
Author: Scott Morrison <scott@tqft.net>
Date:   Thu Aug 10 05:03:34 2023 +0000

    chore: ForIn instance for NameMap (#6484)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 69906dca77aa3070d1e23781fc67a0c535cd64e9[m
Author: Scott Morrison <scott@tqft.net>
Date:   Thu Aug 10 02:36:27 2023 +0000

    chore: isBlacklisted returns CoreM, not MetaM (#6479)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 966f4b35d353b0461f80c0038e0a6ccdbb4c3ba3[m
Author: Jon Eugster <eugster.jon@gmail.com>
Date:   Thu Aug 10 00:40:37 2023 +0000

    feat(ImportGraph): add option to exclude tactics (#6153)
    
    Add an option `lake exe graph --excludeMeta` which removes all nodes that start with `Mathlib.[Tactic|Lean|Util]`

[33mcommit 5bd446b84565196711a3fdf2b61102683f6415de[m
Author: Kyle Miller <kmill31415@gmail.com>
Date:   Wed Aug 9 23:19:36 2023 +0000

    fix: adjust nondetermininstic LibrarySearch tests (#6477)
    
    Some of the tests for LibrarySearch functionality are nondetermininstic and were using `#guard_msgs` to check for specific output. This could [create spurious failures](https://github.com/leanprover-community/mathlib4/actions/runs/5810778556/job/15756601503). We switch to using `#guard_msgs (drop info)` for these tests, which still cleans up the stdout when running these tests without filtering out errors.

[33mcommit a4bbe653c01ece442a86f44f416e614c012a8ee4[m
Author: Matthew Robert Ballard <matt@mrb.email>
Date:   Wed Aug 9 23:19:35 2023 +0000

    feat: add Type*/Sort* and tests (#6474)
    
    This adds Kyle Miller's elaborators for `Type*` and `Sort*` which provide implicit universe variables.
    
    It also includes a few tests.
    
    Co-authored-by: Kyle Miller <kmill31415@gmail.com>

[33mcommit 7f7c66f211f6c2016439ec4c907cd144f1e9e9ca[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Wed Aug 9 23:19:34 2023 +0000

    ci: remove mathlib4_docs deployment (#6464)
    
    This is now [managed by the mathlib4_docs repository](https://github.com/leanprover-community/mathlib4_docs/actions), as this is required to use the new github pages deployment mechanism.
    
    The downside of this approach is that we will have to restart doc builds manually every 90 days or so.

[33mcommit cae423d87c29223c3b19b6f8dab43e2e5f220e37[m
Author: Eric Wieser <m.a.m.elhassan@gmail.com>
Date:   Wed Aug 9 22:46:18 2023 +0000

    feat: IsROrC.toStarOrderedRing as a scoped instance (#6391)
    
    With `open scoped ComplexOrder`, we current have `StarOrderedRing Complex` (as well as some other order instances).
    With this PR, that scope puts the same order on `K` where `IsROrC K`.
    
    There is an ongoing discussion about whether opening the scope should be required, but there is no need to address that concern simultaneously with improving behavior when the scope is *already* open. There also seems to be fewer downstream instance resolution issues to resolve by leaving it in the scope.
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit cdd51dd56c513d7826d8d3cfc2e7fe7bbc5e2ce3[m
Author: Christopher Hoskin <christopher.hoskin@gmail.com>
Date:   Wed Aug 9 22:00:36 2023 +0000

    refactor(Algebra/Order/LatticeGroup): Non-commutative Lattice Groups (#6452)
    
    Generalise results in Algebra/Order/LatticeGroup to the case where the group is non-commutative
    
    
    
    Co-authored-by: Christopher Hoskin <christopher.hoskin@overleaf.com>

[33mcommit b51a8a9d936be6c90bde2951352846d34634bca6[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Wed Aug 9 22:00:34 2023 +0000

    feat: piecewise locally constant maps and related lemmas (#6373)
    
    We define the locally constant map on a topological space covered by two closed sets, defined piecewise on those two closed sets by two maps, that are equal on the intersection.

[33mcommit 3e8bc7b21c4206e677ad3d73dad7e9fc96dd93f9[m
Author: MohanadAhmed <m.a.m.elhassan@gmail.com>
Date:   Wed Aug 9 21:32:34 2023 +0000

    feat: Rank of a hermitian matrix is the count of non-zero eigenvalues (#6354)
    
    This PR provides the lemmas:
    
    - `IsHermitian.spectral_theorem'`: a slightly modified spectral_theorem such that the hermitian matrix can be directly replaced.
    $$A = VDV^{-1}\quad D = \text{diag}(d)$$
    - `IsHermitian.rank_eq_count_non_zero_eigs`: the rank of a hermitian matrix is the number of non-zero eigenvalues of that matrix
    $$\text{rank}(A) = \text{card} \lbrace \quad i \quad | \quad d_i \neq 0 \rbrace$$
    - `IsHermitian.rank_eq_rank_diagonal`: the rank of a hermitian matrix is the same as its rank after diagonalization by the eigenvector matrix
    $$\text{rank}(A) = \text{rank}(D)$$
    - `Matrix.rank_diagonal`: the rank of a diagonal matrix is the number of non-zero diagonal elements. Note that this was previously the name of a lemma about LinearMaps we take that name (but keep the align to avoid disrupting the tooling).
    $$\text{rank}(V)  = \text{Diag}(v) \implies \text{rank}(V) = \text{card} \lbrace \quad i \quad | \quad v_i \neq 0 \rbrace$$
    - `LinearMap.rank_diagonal`: the rank of a linear map that is formed from a diagonal matrix is the number of non-zero diagonal entries. This was previously called `Matrix.rank_diagonal`.
    
    Co-authored-by: Mohanad Ahmed <m.a.m.elhassan@gmail.com>

[33mcommit ee7bea2f8f8761352c0e26f1a8b656d510f3ddea[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Aug 9 20:24:01 2023 +0000

    chore(Algebra/Quandle): use `FunLike` (#6463)

[33mcommit a2c3434580c2573206f1c1b74825bbfee4f7bbeb[m
Author: David Kurniadi Angdinata <dka31@cantab.ac.uk>
Date:   Wed Aug 9 19:01:43 2023 +0000

    feat(Topology/ExtremallyDisconnected): prove Gleason's theorem (#5634)
    
    This work was done during the 2023 Copenhagen masterclass on formalisation of condensed mathematics. Numerous participants contributed.
    
    Co-authored-by: Filippo A E Nuccio <filippo.nuccio@univ-st-etienne.fr>
    Co-authored-by: Dagur √Åsgeirsson <dagurtomas@gmail.com>
    Co-authored-by: Nikolas Kuhn <nikolaskuhn@gmx.de>

[33mcommit 22d431c3ad818715c3fc9dd882b7a72b87c5cc0a[m
Author: Anatole Dedecker <anatolededecker@gmail.com>
Date:   Wed Aug 9 19:01:42 2023 +0000

    feat(Analysis/LocallyConvex/WithSeminorms): equicontinuity criteria (#5580)

[33mcommit 6cb2b8d5afd73e2291c68fdd875e5b6b1fe9994b[m
Author: Joachim Breitner <mail@joachim-breitner.de>
Date:   Wed Aug 9 17:44:40 2023 +0000

    feat: Summable.countable_support (#6473)
    
    A step towards showing that `Pmf`s have countable support.
    
    Thanks Eric Rodriguez and Kevin Buzzard for helping on zulip.
    
    
    
    Co-authored-by: Yury G. Kudryashov <urkud@urkud.name>

[33mcommit 65acf0f1f59b9bdac3ea821eeef81960486b11a4[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Wed Aug 9 17:44:39 2023 +0000

    chore(Data/Complex): move order to a separate file (#6457)
    
    Given how confusing this order could be to newcomers, it's probably not reasonable to call it `Basic`.
    At any rate, `Data/Complex/Basic` is very long, and this is an easy split.

[33mcommit f1e127807379d9a4d80d65432991487510950318[m
Author: Thomas Browning <tb65536@uw.edu>
Date:   Wed Aug 9 17:44:18 2023 +0000

    refactor(GroupTheory/GroupAction/Quotient): Move conjugacy class formula earlier (#6290)
    
    This PR moves a formula for the number of conjugacy classes earlier. The proof uses Burnside's theorem, so it cannot be moved any earlier than `GroupTheory/GroupAction/Quotient`.

[33mcommit 9f2c07823780026866722292212bf1a18ff61469[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Wed Aug 9 15:56:52 2023 +0000

    feat(Analysis/SpecialFunctions/Pow): powers of finite products (#6470)

[33mcommit b83a5a7e7051b239bf8c13bf59fe202c0d9d5a96[m
Author: Scott Morrison <scott@tqft.net>
Date:   Wed Aug 9 15:56:51 2023 +0000

    chore: 'says' ignores following comments when verifying (#6381)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit b4b9ed7769f8862468612f977a48080f26ef79f9[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Wed Aug 9 14:42:48 2023 +0000

    chore(Data/Finsupp/Basic): golf `restrictSupportEquiv` (#6426)

[33mcommit 8cda325ab3a46513593fd683bafd41580b189361[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Wed Aug 9 14:13:28 2023 +0000

    chore(FieldTheory/NormalClosure): remove a porting note (#6315)

[33mcommit 1f3f13656bb89b928661b0b9764f8d719bf0fc48[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Aug 9 12:58:34 2023 +0000

    feat(Order/Chain): add 2 lemmas (#6459)
    
    Cherry-picked from #6269

[33mcommit 0f85d19fae95b9d5a31e0bf15024018e53f220a9[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Wed Aug 9 11:48:41 2023 +0000

    chore: regularize HPow.hPow porting notes (#6465)

[33mcommit 40bc9866bfd79c378e8bc8ad5aa12723a127ca69[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Wed Aug 9 11:48:40 2023 +0000

    chore(LinearAlgebra/TensorProduct): better names for induction hypotheses (#6451)
    
    This also makes some proofs more verbose to make it clearer which goal is which.

[33mcommit 2610ce3d573c45f069c6bf8bf306512d3bb4ed2c[m
Author: Martin Dvo≈ô√°k <martin.dvorak@matfyz.cz>
Date:   Wed Aug 9 11:27:24 2023 +0000

    docs(Computability/NFA) (#6467)

[33mcommit 07944c77adc653e2f348fc03e0e0671edc69777d[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Aug 9 08:53:20 2023 +0000

    chore(HahnSeries): use `FunLike` (#6462)

[33mcommit 71bf59b2e096ba9b061fa65665c5cd32170da014[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Wed Aug 9 08:22:39 2023 +0000

    feat: more basic API for pretriangulated categories (#6377)
    
    This PR slightly extends the basic API of pretriangulated categories.

[33mcommit 2d11c668314a5b2e55f34f7b65964118fcb1ff9f[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Wed Aug 9 07:07:53 2023 +0000

    chore(LinearAlgebra/QuadraticForm): scalar tower instances and cleanup (#6433)
    
    This is needed to state that the base change of a quadratic form is itself a linear operation.
    
    Also adds a linear version of `BilinForm.toQuadraticForm`, and cleans up some docstrings that had been mangled by `fix-comments.py`

[33mcommit 003e3ca217054d38e937bfd0859cbaeef36856f2[m
Author: Scott Morrison <scott@tqft.net>
Date:   Wed Aug 9 06:46:32 2023 +0000

    chore: use #guard_msgs in some tests (#6439)
    
    Note that these reveal a regression in `exact?` that has already happened. I'll look into fixing it separately.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit aa94d2e49cf70bc6e13eb67c37551186d0d0c9c1[m
Author: Scott Morrison <scott@tqft.net>
Date:   Wed Aug 9 01:11:14 2023 +0000

    chore: bump Std (adapt to migration of ListM) (#6413)
    
    `ListM` has been [moved to `Std`](https://github.com/leanprover/std4/pull/165) and renamed as `MLList`.
    
    There are some slight API functions, that ensure operations are lazy, requiring the addition of some `fun _ =>` here in Mathlib.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@anu.edu.au>
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>
    Co-authored-by: Bulhwi Cha <chabulhwi@semmalgil.com>

[33mcommit ffeae88c8927b8797660ad66f716bd63416d2a41[m
Author: damiano <adomani@gmail.com>
Date:   Tue Aug 8 21:44:22 2023 +0000

    chore: Doc-string fixes (#6399)
    
    Just some casing issues in some doc-strings in
    
    ```
    Algebra.Group.Commute
    Algebra.Group.Units
    ```

[33mcommit e176cb09cfea33b93722456809c91785e19d40b6[m
Author: Scott Morrison <scott@tqft.net>
Date:   Tue Aug 8 21:44:21 2023 +0000

    chore(Logic/Function/Basic): @[simp] lemmas (#6303)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 3b1f6c875e8a1668f1266502d12bcc39923b7982[m
Author: Scott Morrison <scott@tqft.net>
Date:   Tue Aug 8 20:21:51 2023 +0000

    chore(Data/Set/Image): @[simp] (#6298)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit e4268cf5009976670ee77212690fd5f879f857aa[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Tue Aug 8 19:33:33 2023 +0000

    chore(Analysis/NormedSpace/ContinuousLinearMap): forward-port leanprover-community/mathlib#19108 (#6217)

[33mcommit cc20f81507e7313dfc1e0f2fada8efb3eaff525f[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Aug 8 18:01:29 2023 +0000

    feat(GaloisConnection): add 2 lemmas (#6441)

[33mcommit 730a984be41fe00db74d4db888708c96809d238e[m
Author: Scott Morrison <scott@tqft.net>
Date:   Tue Aug 8 18:01:27 2023 +0000

    feat: Try this: for multiple rewrites (#6434)
    
    Splitting this off from #6120, hopefully for faster review.
    
    I would like to upstream this file to Std, as it it used by `exact?`.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit cac5d34e8b92704509907d24bcc5a204b9302a1d[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Tue Aug 8 18:01:25 2023 +0000

    feat(Data/Finsupp/Antidiagonal): add `antidiagonal_single` (#6421)

[33mcommit 275b475dbbacc1bf64a5c2b29573470485731ba1[m
Author: Oliver Nash <github@olivernash.org>
Date:   Tue Aug 8 18:01:24 2023 +0000

    feat: basic facts about discrete subsets and subgroups (#5969)
    
    Co-authored-by: Bhavik Mehta <bhavik.mehta8@gmail.com>

[33mcommit ffef20aff945b5f7e9c603831850e75fdb240519[m
Author: Scott Morrison <scott@tqft.net>
Date:   Tue Aug 8 16:37:46 2023 +0000

    chore: change 'Porting:' to 'Porting note:' (#6378)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit f6bf5e04260de1e70a004c76b33c0d0aef7c2020[m
Author: negiizhao <egresf@gmail.com>
Date:   Tue Aug 8 16:37:45 2023 +0000

    chore: fix names `(Add)SubmonoidClass.Subtype` (#6374)

[33mcommit dc585c91d6512b70f5e0f44517e93bb1e528f0a9[m
Author: MohanadAhmed <m.a.m.elhassan@gmail.com>
Date:   Tue Aug 8 16:37:43 2023 +0000

    feat: Positivity/Nonnegativity of Eigenvalues of PosDef/PosSemidef Matrices (#6368)
    
    Two lemmas:
    
    - `Matrix.PosDef.eigenvalues_pos`: $$A \in k^{n\times n}, A > 0 \implies \lambda (A) >0$$
    - `Matrix.PosSemidef.eigenvalues_nonneg`: $$A \in k^{n\times n}, A \geq 0 \implies \lambda (A) \geq 0$$
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 1c91df4c791086214de2b3d96a428ec2365297f6[m
Author: Pol'tta / Miyahara K≈ç <pol_tta@outlook.jp>
Date:   Tue Aug 8 15:11:40 2023 +0000

    feat: port `ac_change` tactic (#5869)
    
    Just a macro.
    
    
    
    Co-authored-by: Pol'tta / Miyahara K≈ç <52843868+Komyyy@users.noreply.github.com>
    Co-authored-by: Alex J Best <alex.j.best@gmail.com>

[33mcommit dbd4d4f557cc318b46f414e3b7b671cab7ddfd8a[m
Author: Scott Morrison <scott@tqft.net>
Date:   Tue Aug 8 15:11:38 2023 +0000

    feat: cache accepts module names as well as file names (#5577)
    
    My most common use case for `lake exe cache get ARG` is with `ARG` an import in a file I have open. This allows you to just copy and paste the import, without having to change `.` to `/` and add `.lean`.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 2be04ba8cc42d847b6530163244cb3b024ca7fd9[m
Author: kkytola <kalle.kytola@aalto.fi>
Date:   Tue Aug 8 13:50:24 2023 +0000

    feat: Add ConditionallyCompleteLinearOder versions of Monotone.map_limsSup_of_continuousAt etc. (#6107)
    
    Generalize some existing lemmas from `CompleteLinearOrder`s to `ConditionallyCompleteLinearOrder`s, adding the appropriate boundedness assumptions:
    
    - `Monotone.map_limsSup_of_continuousAt` + its 3 order-dual variants
    - `Monotone.map_limsup_of_continuousAt` + its 3 order-dual variants
    - `Monotone.map_sSup_of_continuousAt'` + its 3 order-dual variants
    - `Monotone.map_iSup_of_continuousAt'` + its 3 order-dual variants
    
    For the first two to work automatically still on `CompleteLinearOrder`s, the existing macro tactic `isBoundedDefault` about boundedness of filters is used. For the last two to work automatically still on `CompleteLinearOrder`s, a similar new macro tactic `bddDefault` about boundedness of sets is included in the PR.
    
    
    
    
    
    
    
    Co-authored-by: kkytola <39528102+kkytola@users.noreply.github.com>

[33mcommit dc0b741ee5254a13d5b40879d64d7596be561bc0[m
Author: Scott Morrison <scott@tqft.net>
Date:   Tue Aug 8 09:48:31 2023 +0000

    chore: split observe tactic to its own file (#6438)
    
    This slightly reduces imports, and tidies up a bit in preparation for attempting to upstream to Std.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 5f5bef5abf1ff36832c80bd362ba5bcfadfe303f[m
Author: Scott Morrison <scott@tqft.net>
Date:   Tue Aug 8 09:48:30 2023 +0000

    chore: bump Std version (#6435)
    
    Notably there is now a `l1 ‚à™ l2` notation for `List.union`.
    
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>
    Co-authored-by: Bulhwi Cha <chabulhwi@semmalgil.com>

[33mcommit bf29b32a80e92deb42c390285a1f53b1740a7ac9[m
Author: Markus Himmel <markus@himmel-villmar.de>
Date:   Tue Aug 8 08:22:43 2023 +0000

    feat: more about terminal objects in the category of types (#6401)

[33mcommit cf31d234f510df61f7b5604da2e316a5cf657688[m
Author: Markus Himmel <markus@himmel-villmar.de>
Date:   Tue Aug 8 07:29:05 2023 +0000

    feat: identity is terminal in the over category (#6402)

[33mcommit 1d493fee59a6ea1d0fdeb3b922a2eb61f97ab51e[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Aug 8 05:54:21 2023 +0000

    feat(Algebra/GroupPower): weaken TC assumptions (#6389)
    
    - Assume `OrderedSemiring` instead of `StrictOrderedSemiring`
      here and there.
    - Add `@[simp]` to `zsmul_one`.
    - Add `exists_lt_nsmul`.

[33mcommit 7c8368b759ed2dce2e039292e6d0c525b4d1f7dd[m
Author: Mario Carneiro <di.gama@gmail.com>
Date:   Tue Aug 8 02:42:14 2023 +0000

    chore: bump leantar version (#6430)
    
    This fixes the issue that leantar-0.1.4.exe was not actually statically linked on windows, reported by @MohanadAhmed . Could someone using MacOS aarch64 check that this still works? All other OSs should be unaffected.

[33mcommit 08ac70f520929c21fdf63f089295cc03b0613a41[m
Author: Scott Morrison <scott@tqft.net>
Date:   Tue Aug 8 01:35:29 2023 +0000

    chore: silence deprecation warning in DirectSumIsInternal (#6416)
    
    @eric-wieser, would you be able to find a better solution to this?
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit d71f10bb29883bc639c3f7c9d623196f545f83bf[m
Author: Xavier G√©n√©reux <xaviergenereux@hotmail.com>
Date:   Tue Aug 8 00:12:25 2023 +0000

    feat(analysis/specific_limits): Lemma for limit of 1 / n as n ‚Üí ‚àû in real algebras (#6249)
    
    This PR introduces a single new lemma about the limit of 1 / n as n ‚Üí ‚àû in the complex numbers. It has been placed in a new file to avoid import creep: the obvious file in which to put it (Analysis.SpecificLimits.Basic) does not have the required imports.
    
    Note that this is a prerequisite for an upcoming PR for the Hadamard three-line theorem. Finally, thanks to Patrick Massot for supplying the actual proof on Zulip a while back!
    
    
    
    Co-authored-by: Jireh Loreaux <loreaujy@gmail.com>

[33mcommit 3bac0ea179d698f6578620b4e3568cf1b6a39141[m
Author: Xavier Roblot <46200072+xroblot@users.noreply.github.com>
Date:   Mon Aug 7 22:35:07 2023 +0000

    feat: two ‚Ñ§-basis have the same discriminant (#6424)

[33mcommit 6bef3bc8675073e8f2620c6b6a75b4617b5a3a4d[m
Author: Alex J Best <alex.j.best@gmail.com>
Date:   Mon Aug 7 18:47:22 2023 +0000

    feat: LinearEquivClass QuadraticForm.IsometryEquiv (#6429)
    
    From the lorentz center workshop https://github.com/alexjbest/ant-lorentz
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 759a1d085960466d2220ba05b1e590545dd14716[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Mon Aug 7 16:43:17 2023 +0000

    feat(RingTheory/TensorProduct): heterogenize (#6417)
    
    This:
    * Improves the module docstring, which was both out of date and not very informative
    * Addresses a `TODO` to generalize `includeLeft` to commuting actions. As a result a few downstream results are changed to be about `includeLeftRingHom` or `a ‚äó‚Çú 1`, as carrying around the extra useless ring just makes the lemmas harder to use. Nothing seems to suffer from this change.
    * Introduces `TensorProduct.AlgebraTensorModule.rid`
    * Generalizes the following to work for towers of rings:
      * `Algebra.TensorProduct.algHomOfLinearMapTensorProduct`
      * `Algebra.TensorProduct.map`
      * `Algebra.TensorProduct.congr`
      * `Algebra.TensorProduct.endTensorEndAlgHom`
      * `Algebra.TensorProduct.ext` (and renames it to `Algebra.TensorProduct.ext'`)
      * `Algebra.TensorProduct.rid`
    * Introduces a new `Algebra.TensorProduct.ext` which follows "partially-applied ext lemmas", and uses it to golf a proof in `RingTheory/Etale.lean`
    
    I need many of these results for building `AlgEquiv`s relating to the base change of clifford algebras.

[33mcommit 8c52db32389e38e7ca1a0c70467c01998d851bbd[m
Author: MohanadAhmed <m.a.m.elhassan@gmail.com>
Date:   Mon Aug 7 15:21:49 2023 +0000

    feat: Trivial Star makes ConjTranspose_eq_transpose (#6419)
    
    Under the trivial star, $A\^H = A\^T$

[33mcommit 48ee5fd6d6953b19f5b062a0e309d5ddc93483ac[m
Author: damiano <adomani@gmail.com>
Date:   Mon Aug 7 15:21:48 2023 +0000

    chore: Units -- to_additive no longer complains (#6400)
    
    Remove a porting note, since the reported `to_additive` issue seems resolved.
    
    ```
    Algebra.Group.Units
    ```

[33mcommit c5f2a1583b26685be91f5038b8674fa011204b74[m
Author: Kevin Buzzard <k.buzzard@imperial.ac.uk>
Date:   Mon Aug 7 13:57:02 2023 +0000

    perf: change to CommGroup instance on units (#6398)
    
    Fixes a slowdown issue [reported on Zulip](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Quotient.20slowdowns/near/382006676). The first declaration in that example (the `Basis` example) takes 268578 to elaborate on master but only 11541 (an order of magnitude better) on this branch, and heartbeats no longer need to be bumped.

[33mcommit 9a63798ca94eb36b205e2dc075e4154de915b4e8[m
Author: Chris Hughes <chrishughes24@gmail.com>
Date:   Mon Aug 7 13:57:01 2023 +0000

    feat(Group): constructors for minimal group axioms (#6173)
    
    
    
    Co-authored-by: Chris Hughes <33847686+ChrisHughes24@users.noreply.github.com>

[33mcommit 1accbf5b66031155d16edae730d6d4b623f48c40[m
Author: Anne Baanen <vierkantor@vierkantor.com>
Date:   Mon Aug 7 13:57:00 2023 +0000

    chore: lower instance priority of CancelMonoid.toMonoid etc (#6145)
    
    This PR lowers the instance priority of inheritance going to cancellative structures, specifically those matching the regular expression `(Add)?(Left|Right)?Cancel(Comm)?(Monoid|Semigroup)(WithZero)?`.
    
    Most of these cancellative structures either derive from group structures or from (integral) domain structures (including fields). Thus we should be going through the group and semiring hierarchy before going through the cancellative hierarchy. In particular, `IsDomain` is a mixin depending on `Semiring` so trying to synthesize an `IsDomain` instance to satisfy `Monoid` before even trying `Semiring` makes no sense.
    
    We came across this issue when adding an extra way to find an `IsDomain` instance, because this slows down the failing cancellative search path enough to cause timeouts.
    
    Zulip thread: https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/Why.20is.20.60simpNF.60.20complaining.20here.3F
    
    
    
    
    Co-authored-by: Anne Baanen <Vierkantor@users.noreply.github.com>

[33mcommit 763106d31c7654326fdf3ebda31b5578ef5072b8[m
Author: Yuma Mizuno <mizuno.y.aj@gmail.com>
Date:   Mon Aug 7 12:37:10 2023 +0000

    feat(CategoryTheory/Monoidal): define whiskering operators (#6420)
    
    Extracted from #6307. Just put the whiskerings into the constructor.

[33mcommit 35d5cfa064f88d2eb15e904c554618386b5ed642[m
Author: Scott Morrison <scott@tqft.net>
Date:   Mon Aug 7 12:37:09 2023 +0000

    chore: remove an obsolete porting note (#6418)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 758fc17d5d8dedfc8bd9ac1529507cc1d0a257d2[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Mon Aug 7 12:37:08 2023 +0000

    feat(Data/Finsupp): make toMultiset and antidiagonal computable (#6331)
    
    In Lean 3, the computability of `Finsupp.toMultiset` was poisoned by the `AddMonoid (Œ± ‚Üí‚ÇÄ ‚Ñï)` instance, even though this was not used in computation. This is no longer the case in Lean 4, so we can make this computable by adding a `DecidableEq Œ±` argument.
    
    We loosely follow the pattern used with `DFinsupp`, where we split the declaration in two, as only one direction needs `DecidableEq Œ±`. As a result, `Finsupp.toMultiset` is now only an `AddMonoidHom`, though `Multiset.toFinset` remains an equiv.
    
    
    We're missing some of the formatting infrastructure for this to be pretty, but this now works:
    ```lean
    #eval ((Finsupp.mk Finset.univ ![1, 2, 3] sorry).antidiagonal).image
      fun x : _ √ó _ => (x.1.toFun, x.2.toFun)
    ```

[33mcommit 79082ab411cefb1510b0ca9cc0f99c6adbe05756[m
Author: Scott Morrison <scott@tqft.net>
Date:   Mon Aug 7 11:07:47 2023 +0000

    chore: bump dependencies (#6412)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 5759caedb5317568309192e5f13708b0c97bc026[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Mon Aug 7 08:44:14 2023 +0000

    feat: two easy lemmas about List.Lex (#6395)
    
    Proves that `[]` is the "bottom element" for `List.Lex r` for any relation `r` and that `List.Lex r [a] [b]` iff `r a b`
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit e03319842fed0de4eddbed468de9f6dbc83c7f33[m
Author: Scott Morrison <scott@tqft.net>
Date:   Mon Aug 7 06:58:47 2023 +0000

    chore: bump to nightly-2023-08-05 (#6414)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit b74a63837cb3519b9021aab68363a1e872978289[m
Author: Alex J Best <alex.j.best@gmail.com>
Date:   Mon Aug 7 05:07:40 2023 +0000

    fix: allow rw? to look in let expressions (#6411)
    
    see https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/panic.20with.20rw.3F/near/382439334

[33mcommit 472450d0c2b3700f5ec74a39e3d9562a767c5897[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Mon Aug 7 04:16:50 2023 +0000

    feat: heterogenize TensorProduct.congr and friends (#6035)
    
    The summary is that this PR:
    * generalizes a handful of results to non-commutative algebras (simply by moving them to an earlier section)
    * adds heterogenous versions of `map`, `congr`, `mapBilinear`, `homTensorHom`, `leftComm`, `tensorTensorTensorComm`
    * generalizes `lcurry`, `uncurry`, and `assoc` to take an extra algebra, such that the `A`s in the two different places can separately be replaced with `R`
    
    The punchline here is really:
    ```lean
    def tensorTensorTensorComm :
      (M ‚äó[R] N) ‚äó[A] (P ‚äó[R] Q) ‚âÉ‚Çó[A] (M ‚äó[A] P) ‚äó[R] (N ‚äó[R] Q) :=
    ```
    which is valuable for a base change / tensor product of bilinear forms when instantiated as
    ```lean
    (M ‚äó[R] N) ‚äó[A] (Dual A M ‚äó[R] Dual R N)
      ‚âÉ‚Çó[A]
    (M ‚äó[A] Dual A M) ‚äó[R] (N ‚äó[R] Dual R N)
    ```
    It would not surprise me if it's possible to introduce a third ring into `tensorTensorTensorComm`, but for now I'd prefer to assume that for that particular definition, two rings is enough for anybody!
    
    Unfortunately, this was not the case for `lcurry`, `uncurry`, and `assoc`, which really do need to work over three rings so that the `A`s in the two different places can separately be replaced with `R`; both permutations are needed in the construction of `tensorTensorTensorComm`, and it seemed preferable to not have a plethora of primed variants.
    
    I make no claim that the pile of `IsScalarTower` and `SMulCommClass` arguments here are in any sense optimal, besides the fact they specifically enable the use-case I have for the base change of bilinear forms.

[33mcommit 44692e22020daf18e17259cb25898407b172e5ec[m
Author: Kevin Buzzard <k.buzzard@imperial.ac.uk>
Date:   Sun Aug 6 22:44:08 2023 +0000

    chore: more universe generalisations / fixes (#5659)
    
    There are changes of two types: first I add some `.{w}` in some declarations to ensure that universes are in the right order. Secondly I generalise some results from `Category.{max u1 v1, u2}` to `Category.{v2, u2}`.
    
    From the Copenhagen workshop.

[33mcommit dc0a7a960f151cc40d3076087e941ec310f87ede[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Sun Aug 6 20:21:38 2023 +0000

    feat: change definition of natCast in Cardinal to lift #(Fin n) (#6384)
    
    The new definition is conceptually more satisfactory.
    
    By also changing the definition of the `Zero` and `One` instances, we get `((0 : ‚Ñï) : Cardinal) = 0` and `((1 : ‚Ñï) : Cardinal) = 1` definitionally (which wasn't true before), which is in practice more convenient than definitional equality with `PEmpty` or `PUnit`.

[33mcommit 2ea340babc7a7c778fd9f4fa42362210f0207d97[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Sun Aug 6 19:00:28 2023 +0000

    feat: localization of adjunctions between categories (#6235)
    
    This PR shows that under suitable assumptions, adjunctions can be localized.
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit 0cacd20d77c9efa6c767e12a8c6dd1f6c56f60d1[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Sun Aug 6 18:36:33 2023 +0000

    feat: the category of short complexes has colimits (#6324)
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit fed8b9106da165b04b8eed7508f3d82f1393e5e3[m
Author: Jon Eugster <eugster.jon@gmail.com>
Date:   Sun Aug 6 16:57:28 2023 +0000

    feat(ImportGraph): add option to exclude imports from other packages (#6151)
    
    Add an option `lake exe graph --to MyProject.XY --noDep` which removes all nodes that do not start in `MyProject`.

[33mcommit d3bfbe43cf1946bbfd1dad8ffd38b02d122860e4[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Sun Aug 6 10:15:18 2023 +0000

    feat: short exact sequence of free modules (#6360)
    
    We prove that if the left and right term in a short exact sequence of modules are free, then the middle term is free as well, and related results.

[33mcommit 87d6e2ea758b720cf7ac6f9c03526d399bd98f09[m
Author: Markus Himmel <markus@himmel-villmar.de>
Date:   Sun Aug 6 07:06:02 2023 +0000

    feat: composition properties of final functors (#6250)

[33mcommit 0b36c9055a241a3de4277dfeceb2dec4fda30e2c[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Sun Aug 6 06:23:16 2023 +0000

    feat: basic results about preservation of kernels/cokernels (#6279)
    
    This PR shows basic results about the preservation of (limit) kernels forks by functors which preserve zero morphisms.

[33mcommit e966251dad895969c405b369b86797bd9a070c28[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Sun Aug 6 06:23:15 2023 +0000

    feat: localization functors are preserved through equivalences (#6236)
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit a1293cea798c73e083a3d71d1d9d9848db10a441[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Sun Aug 6 06:23:14 2023 +0000

    feat: duality results for the right homology of short complexes (#6227)
    
    This PR shows duality results for left and right homology of short complexes. From the corresponding result for left homology, it is deduced that a morphism of short complexes which is epi on the left object, iso on the middle object and mono on the right object induces an isomorphism in right homology.
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit 3e4399557b9aab401492b18fd3fd016c493d7057[m
Author: Scott Morrison <scott@tqft.net>
Date:   Sun Aug 6 05:35:56 2023 +0000

    chore: update links to issue #5081 to std4#86 (#6392)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 5df781c2538c071f33f7d13f7cb8095fb2b80ac8[m
Author: Markus Himmel <markus@himmel-villmar.de>
Date:   Sun Aug 6 01:46:05 2023 +0000

    feat: CostructuredArrow is locally small (#6388)

[33mcommit 5499730580e720d79018303ae546a8a84206078f[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Sun Aug 6 01:46:04 2023 +0000

    chore: tidy various files (#6382)

[33mcommit 02a98bc233ccbbda8f12246b887dfd2ac5d839a5[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Sun Aug 6 01:46:03 2023 +0000

    chore(Algebra/Hom/GroupAction): add `initialize_simps_projections` (#6343)
    
    Without this change the lemmas were called `*_toFun` instead of `*_apply`.
    
    These lines should go immediately after the (transitive) `FunLike` instance is configured.
    
    This PR also tidies some whitespace around `where`s.

[33mcommit 4d576bbbae149c2080e538963f66a4dd1c45dc78[m
Author: damiano <adomani@gmail.com>
Date:   Sun Aug 6 01:46:01 2023 +0000

    chore: add `extract_goal` to `Tactic.Common` (#6313)
    
    As suggested in the now-merged #4595, introducing `extract_goal`, this PR adds `extract_goal` to the list of "Common" tactics.

[33mcommit 7d39ff43dc5e869aa8c7a12d7206aac9955589aa[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Sun Aug 6 01:46:00 2023 +0000

    feat: forward port of AlgebraicTopology.DoldKan.EquivalencePseudoabelian (#6293)

[33mcommit 2ce22eb0810361ab6707b71727da422aa5d9aa5b[m
Author: Markus Himmel <markus@himmel-villmar.de>
Date:   Sun Aug 6 01:45:59 2023 +0000

    feat: finally small categories (#6264)

[33mcommit 79a62b9ed2a806fcf8a394e1f7a7e3792f4cff9b[m
Author: Markus Himmel <markus@himmel-villmar.de>
Date:   Sun Aug 6 01:45:58 2023 +0000

    feat: transfer Functor.Final across natural isomorphisms (#6232)

[33mcommit 3ce19f527a139349c5cd915560f600c698ff9b33[m
Author: Sebastian Ullrich <sebasti@nullri.ch>
Date:   Sun Aug 6 00:54:07 2023 +0000

    chore: move some benchmarking files over from Kha/mathlib4-bench (#5993)
    
    This allows us to customize the benchmarking metrics in this repo

[33mcommit 944ee07ebeb4f29aa5b4761bf7597ba6dabf244a[m
Author: Fr√©d√©ric Dupuis <dupuisf@iro.umontreal.ca>
Date:   Sat Aug 5 11:50:43 2023 +0000

    feat: characterizations of `IsBigO` along `atTop` (#6198)
    
    This PR adds a way to characterize `IsBigO` along the `atTop` filter, for cases where we want the constant to depend on a "starting point" `n‚ÇÄ`.
    
    It also adds the lemma `tendsto_nhds_of_eventually_eq`.

[33mcommit 675f2fd964a017fc1becff0ed6c7b8be2739416b[m
Author: Scott Morrison <scott@tqft.net>
Date:   Sat Aug 5 10:32:30 2023 +0000

    feat: (co/bi/)products unchanged by reindexing and isomorphism of factors (#6259)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit b76454f36ba382b005f1d93fc21d7ebb14610b7f[m
Author: Scott Morrison <scott@tqft.net>
Date:   Sat Aug 5 09:50:06 2023 +0000

    chore: cache doesn't need to traverse the cache directory (#6197)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit f5d12b260b7636c247637b8ffedbbc704cefc804[m
Author: Markus Himmel <markus@himmel-villmar.de>
Date:   Sat Aug 5 06:34:12 2023 +0000

    feat: sufficient condition for StructuredArrow.pre to be an equivalence (#6248)

[33mcommit f285e91810d64dddd538cb7971b285664030b226[m
Author: Markus Himmel <markus@himmel-villmar.de>
Date:   Sat Aug 5 05:24:21 2023 +0000

    feat: sufficient condition for StructuredArrow.post to be an equivalence (#6218)

[33mcommit acfe2e4409995a28f386831184ec24987c9d3737[m
Author: Joachim Breitner <mail@joachim-breitner.de>
Date:   Fri Aug 4 22:34:37 2023 +0000

    README: Zulip no longer needs registration (#6332)
    
    as discussed on <https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/Lean.20Chat.20Archive/near/381425741> (how meta)

[33mcommit c4679d7bce1f17cf2c886099b4b8fe30f7e49ba1[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Fri Aug 4 22:34:36 2023 +0000

    chore: tidy various files (#6291)

[33mcommit 314914fadbc04bcee1d49042609603d45765fc39[m
Author: Christopher Hoskin <christopher.hoskin@overleaf.com>
Date:   Fri Aug 4 21:46:18 2023 +0000

    feat(Algebra/Order/LatticeGroup): Add missing `abs_inv` to LatticeGroup (#6357)
    
    Adds missing `abs_inv` to LatticeGroup
    
    
    
    Co-authored-by: Christopher Hoskin <mans0954@users.noreply.github.com>

[33mcommit 90907eb36ed5a46bce216fbb361a1d20874b1c8c[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Fri Aug 4 18:54:43 2023 +0000

    feat(SetTheory/Cardinal): add `ofNat` lemmas (#6362)

[33mcommit b80c0cc9d27ad45e4be44733ac8fabfeb0bf0b6e[m
Author: MohanadAhmed <m.a.m.elhassan@gmail.com>
Date:   Fri Aug 4 16:36:44 2023 +0000

    ConjTranspose multiplication of a matrix by itself is Positive Semidefinite (#6359)
    
    This PR provides two lemmas `isPosSemidef_conjTranspose_mul_self` and `isPosSemidef_self_mul_conjTranspose` stating that for any matrix $A$ the products $A^HA$ and $AA^H$ in the `IsROrC` fields are positive semidefinite.
    
    Co-authored-by: Mohanad Ahmed <m.a.m.elhassan@gmail.com>
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit b24f81feffb9e6831c0bc5d1b1ed8796fd673695[m
Author: Yuma Mizuno <mizuno.y.aj@gmail.com>
Date:   Fri Aug 4 14:41:43 2023 +0000

    fix(CategoryTheory/Bicategory): fix wrong names (#6311)

[33mcommit 8b47bca07dbf9998b7069797f406e5d3d6a4a6e3[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Fri Aug 4 10:53:08 2023 +0000

    fix(data/{Finset,Multiset}): better line breaks in Repr (#6333)
    
    See the attached tests
    
    Previously this gave `{[1, 2,\n 3], [4, 5, 6]}`, where the line break would be within items rather than between items.

[33mcommit d2b1b371a6c1c86515c6374f75359ddad42fb247[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Fri Aug 4 10:00:17 2023 +0000

    feat: complements on connectedness and path-connectedness (#6347)

[33mcommit d32630e87a2394e62ee807b6006c3081a0149e4e[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Fri Aug 4 08:48:00 2023 +0000

    feat: maps between the unitization of a non-unital subalgebra and its `Algebra.adjoin` (#5602)
    
    If `S` is non-unital subalgebra of a unital `R`-algebra `A`, there is a natural surjective map `Unitization R S ‚Üí‚Çê[R] Algebra.adjoin R (S : Set A)`. When `1 ‚àâ S` and `R` is a field, this becomes and `AlgEquiv`.
    
    We specialize this to the `‚Ñï`-unitization of a non-unital subsemiring and its `Subsemiring.closure`, as well as the `‚Ñ§`-unitization of a non-unital subring and its `Subring.closure`. We also extend the above map to a `StarAlgHom` in the case of `NonUnitalStarSubalgebra`s.
    
    This continues the non-unital-ization of mathlib.
    
    - [x] depends on: #5151
    - [x] depends on: #5512
    - [x] depends on: #5537

[33mcommit 72ea277bd5a9687917fae7bccc45ab6b2586ac3f[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Fri Aug 4 06:37:12 2023 +0000

    chore: add @joelriou as maintainer in README.md (#6358)

[33mcommit 067bc406f149a6664640db1f1a6b1e285785deff[m
Author: MohanadAhmed <m.a.m.elhassan@gmail.com>
Date:   Thu Aug 3 20:55:48 2023 +0000

    feat: (Mathlib.Data.Matrix.Rank): rank of a matrix unaffected by multiplication with invertible matrices (#6051)
    
    This PR provides two lemmas:
    
    - `Matrix.rank_mul_eq_left_of_isUnit_det` in a commutative ring R post multiplication (multiplication from the right) by an invertible matrix does not change the rank of a matrix. With $A$ an invertible matrix:
    $$\text{rank}(BA) = \text{rank}(B)$$
    
    - `Matrix.rank_mul_eq_right_of_isUnit_det` in a commutative ring R pre-multiplication (multiplication from the left) by an invertible matrix does not change the rank of a matrix. With $A$ an invertible matrix:
    $$\text{rank}(AB) = \text{rank}(B)$$
    
    Co-authored-by: Mohanad Ahmed <m.a.m.elhassan@gmail.com>
    
    
    
    Co-authored-by: Oliver Nash <github@olivernash.org>
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit e77e8e125b09063a127bcd6e0b33819d999065f2[m
Author: Alex Keizer <alex@keizer.dev>
Date:   Thu Aug 3 19:38:39 2023 +0000

    refactor: generalize shifts from bitvector to arbitrary vectors (#5896)
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 74ee5fbebe317f9f8f9c185a96e45d1e8cdd4371[m
Author: James Gallicchio <JamesGallicchio@users.noreply.github.com>
Date:   Thu Aug 3 18:25:03 2023 +0000

    fix: Mathlib/Control/ULiftable doc typos (#6349)
    
    small typos in docstrings

[33mcommit 32fa6fe637bd032aff021407b6ca7c025eb7b0f4[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Thu Aug 3 17:42:52 2023 +0000

    chore(Analysis/NormedSpace/Star/Multiplier); golf some proofs (#6329)
    
    `coeHom` now elaborates 10x faster on my machine. While perhaps a bit cryptic, this new spelling makes it clear which bit of the proofs are not just unfolding.

[33mcommit 1f78f7fc7fcb1bbe128d3afd540296a322587161[m
Author: Peter Nelson <71660771+apnelson1@users.noreply.github.com>
Date:   Thu Aug 3 16:32:37 2023 +0000

    feat: Finite maximality/minimality (#6337)
    
    This PR slightly tidies the proof of `Set.Finite.exists_maximal_wrt`, and adds a minimality version.
    It also adds primed versions of both that alter the finiteness hypothesis to a weaker hypothesis where only the image is finite.
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 7cbfbc15416d77eeab578a5356506834afff07a3[m
Author: Peter Nelson <71660771+apnelson1@users.noreply.github.com>
Date:   Thu Aug 3 15:55:57 2023 +0000

    feat: rename Data.Set.Ncard to Data.Set.Card (#6341)
    
    We rename `Data.Set.Ncard` to `Data.Set.Card`, since this file now contains two separate cardinality definitions, not just `ncard`.

[33mcommit 387ebe0399db0db2c44bf4d9a624f711725b3781[m
Author: Scott Morrison <scott@tqft.net>
Date:   Thu Aug 3 13:07:21 2023 +0000

    chore: bump to nightly-2023-08-03 (#6334)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 92f695f03034cbfc2cde4c452097ebd8d3f3efba[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Thu Aug 3 10:45:18 2023 +0000

    refactor(LinearAlgebra): Ensure `ChooseBasisIndex` is finite on trivial modules (#6322)
    
    This also changes `basisFintypeOfFiniteSpans` to use `Finite` rather than `Fintype`, as it was noncomputable anyway.
    This means it has to be renamed to `basis_finite_of_finite_spans` as it now is a proof!
    
    
    
    Co-authored-by: Oliver Nash <github@olivernash.org>

[33mcommit 526f38a054d7b1a95f9dd010190d7e77d60caee1[m
Author: Scott Morrison <scott@tqft.net>
Date:   Thu Aug 3 09:17:22 2023 +0000

    chore: bump to nightly-2023-07-31 (#6325)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 421f759a2619ffe137004bc6fcac7c0ac9444581[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Thu Aug 3 09:17:18 2023 +0000

    chore: remove duplicate lemma FiniteDimensional.eq_top_of_finrank_eq (#6304)
    
    The lemma is a perfect duplicate of `Submodule.eq_top_of_finrank_eq`.

[33mcommit 1bc5bc233da83824072a5d4f0541361a81166895[m
Author: Xavier Roblot <46200072+xroblot@users.noreply.github.com>
Date:   Thu Aug 3 09:17:17 2023 +0000

    refactor of NumberTheory.NumberField.Embeddings (#6164)
    
    Remove unnecessary or redundant results and golf some proofs.

[33mcommit 06ace73aa375b0df21eb54ff287a275ed3c08240[m
Author: Jz Pan <acme_pjz@hotmail.com>
Date:   Thu Aug 3 09:17:15 2023 +0000

    feat(AlgebraicGeometry/EllipticCurve/Weierstrass): elliptic curves with specified j-invariant (#5935)
    
    Main changes:
    
    - [x] Define specific Weierstrass curves, whose j-invariants should be 0, 1728, or ‚â† 0 and 1728.
    - [x] Prove the quantities c‚ÇÑ, Œî and j for them (whenever they are defined).
    - [x] Define an elliptic curve from an element j in a field, whose j-invariant is equal to j.
    - [x] Generalize `Inhabited (EllipticCurve ‚Ñö)` to `Inhabited (EllipticCurve F)` for any field `F` (computable if `F` has `DecidableEq`).

[33mcommit daafa2f6d6912c178311bc4198d614b41d63730c[m
Author: Moritz Doll <moritz.doll@googlemail.com>
Date:   Thu Aug 3 09:17:13 2023 +0000

    refactor: use junk values in Submodule.toLinearPMap (#5529)
    
    Change the definition of `Submodule.toLinearPMap` to use a junk value in the case that the condition that the subspace defines the graph of a function is not satisfied. In this case we define `Submodule.toLinearPMap` as the zero map. The domain is the same so that the domain does not depend on the graph-condition.
    
    
    
    Co-authored-by: Oliver Nash <github@olivernash.org>

[33mcommit 73993336bd8e1703c95428c66874e38c8da7ba8c[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Thu Aug 3 08:06:08 2023 +0000

    chore(LinearAlgebra): remove `open Classical` (#6320)
    
    This uncovers a few situations where a lemma was stated with the wrong decidability assumption.
    The corrected lemmas are strictly more syntactically-general.
    
    This is exhaustive in the `LinearAlgebra` folder.
    
    Where removal is impractical, this switches to `open Classical in` to make the intent clear.

[33mcommit 4412853e2b44449d06f0461dd97599fe7913392b[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Thu Aug 3 05:30:36 2023 +0000

    chore(Mathlib/LinearAlgebra/Basis): Move results about vector spaces to a new file (#6321)
    
    This breaks a dependency cycle with `Module.Free`, which means we can immediately show that all vector spaces are free modules.
    
    The lemmas are moved without modification in this PR. A subsequent PR can use the `Module.Free` results to golf the vector space ones, and deduplicate the API.
    
    
    
    
    Co-authored-by: Oliver Nash <github@olivernash.org>

[33mcommit bb6cf90e85cef3655a0f5b17562a89f9c811cc0d[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Thu Aug 3 05:30:35 2023 +0000

    feat: the category of short complexes has limits (#6267)
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit 50ce43f7dd007b48c4c4c7bf407e503decd5f74a[m
Author: Scott Morrison <scott@tqft.net>
Date:   Thu Aug 3 05:30:34 2023 +0000

    feat: add instances for intervals (#5957)
    
    Don't mind at all if anyone would like to push refactors or golfs. My main requirement from this PR is that
    ```lean
    import Mathlib
    
    example : WellFoundedLT { x : ‚Ñï // x ‚â§ 37 }·µí·µà := inferInstance
    ```
    works out of the box.
    
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>
    Co-authored-by: Matthew Robert Ballard <matt@mrb.email>
    Co-authored-by: Xavier Roblot <46200072+xroblot@users.noreply.github.com>
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>
    Co-authored-by: Jz Pan <acme_pjz@hotmail.com>
    Co-authored-by: Thomas Browning <tb65536@uw.edu>
    Co-authored-by: Oliver Nash <github@olivernash.org>
    Co-authored-by: Christopher Hoskin <christopher.hoskin@gmail.com>
    Co-authored-by: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
    Co-authored-by: Anatole Dedecker <anatolededecker@gmail.com>
    Co-authored-by: Matthew Robert Ballard <k.buzzard@imperial.ac.uk>
    Co-authored-by: Peter Nelson <71660771+apnelson1@users.noreply.github.com>
    Co-authored-by: R√©my Degenne <remydegenne@gmail.com>
    Co-authored-by: MohanadAhmed <m.a.m.elhassan@gmail.com>
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>
    Co-authored-by: damiano <adomani@gmail.com>
    Co-authored-by: Chris Hughes <chrishughes24@gmail.com>
    Co-authored-by: R√©my Degenne <Remydegenne@gmail.com>
    Co-authored-by: Jon Eugster <eugster.jon@gmail.com>
    Co-authored-by: Kevin Buzzard <k.buzzard@imperial.ac.uk>

[33mcommit 966fdb633de18daf3979f621430e32d7b5c57473[m
Author: Scott Morrison <scott@tqft.net>
Date:   Thu Aug 3 04:09:27 2023 +0000

    chore: flip and rename rank_eq_of_injective (#6301)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 68a37cd35e05cc51a0f1e5c9ea30473009f881ab[m
Author: Xavier Roblot <46200072+xroblot@users.noreply.github.com>
Date:   Wed Aug 2 23:55:55 2023 +0000

    feat(NumberTheory.NumberField.Units): add torsion subgroup (#5748)
    
    We define the torsion subgroup of the units of a number field and prove some results about it, mostly: it is finite, cyclic and
    an unit is torsion iff its value is 1 at all infinite places. Some results linking to `rootsOfUnity` are also proved.
    
    This PR also includes a direct coercion from `(ùìû K)À£` to `K` that is very convenient, although I am not sure it's done properly.

[33mcommit c87bb109991cca16e9bd068cbdaf27b32cbbda73[m
Author: Xavier Roblot <46200072+xroblot@users.noreply.github.com>
Date:   Wed Aug 2 23:22:23 2023 +0000

    chore: make `ringOfIntegersAlgebra` an instance (#6244)
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 7a9401a0a6850cb157f9e95a2de109b107f458b5[m
Author: Matthew Robert Ballard <matt@mrb.email>
Date:   Wed Aug 2 19:29:37 2023 +0000

    perf (Data.Rat): reduce algebra instances for Rat (#6282)
    
    This removes the `with` pattern from the `Field` and `CommSemiGroupWithZero` instances on `Rat`.
    
    The resulting term decreases in size by an order of magnitude (at least).
    
    
    
    Co-authored-by: Matthew Robert Ballard <100034030+mattrobball@users.noreply.github.com>

[33mcommit 63f711cb71fc1ecf7514d45041be65b15a193842[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Wed Aug 2 18:06:08 2023 +0000

    chore(Data/Polynomial/FieldDivision): use `by_cases` instead of `if` (#6314)
    
    This is easier to remove from the `classical` locale in future, and is arguably more readable

[33mcommit b9cabefa8868ba500a1de5e4d0d5051464a0a5a7[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Wed Aug 2 18:06:07 2023 +0000

    refactor(LinearAlgebra/QuadraticForm): rename `Isometry` to `IsometryEquiv` (#6305)
    
    This is consistent with `LinearIsometryEquiv` vs `LinearIsometry`. The motivation is to make room for `QuadraticForm.Isometry` as the homomorphism.

[33mcommit 30202c4ab3ac6242612cae3d3c2f957c11718229[m
Author: Kevin Buzzard <k.buzzard@imperial.ac.uk>
Date:   Wed Aug 2 18:06:06 2023 +0000

    feat: derivations of (univariate) polynomials (#6023)
    
    An R-derivation from `R[X]` is determined by its value on `X`. Joint work with Richard Hill, who needs this stuff for his work on power series. We followed `MvPolynomial.Derivation` .
    
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>
    Co-authored-by: Oliver Nash <github@olivernash.org>

[33mcommit 8368c269da6c6e550d2f832e2506bec35d54d37f[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Wed Aug 2 16:24:19 2023 +0000

    feat: generalize scalars in Algebra.lsmul (#6209)
    
    This generalizes from `Algebra.lsmul R M : A ‚Üí‚Çê[R] Module.End R M` to `Algebra.lsmul R S M : A ‚Üí‚Çê[R] Module.End S M`.
    
    This generalization was previously not possible because `Module.End S M` was not an `R`-algebra.
    
    Notably this now allows things like `Algebra.lsmul R A A : A·µê·µí·µñ ‚Üí‚Çê[R] Module.End A A` (right multiplication).
    
    This doesn't bother attempting to generalize uses in downstream files, as most of them probably do not need the generality.
    Instead, we just replace `Algebra.lsmul R` with `Algebra.lsmul R R`.

[33mcommit 861ad0cd0c257ba1b028e080eb837fbf55548431[m
Author: Jon Eugster <eugster.jon@gmail.com>
Date:   Wed Aug 2 16:24:18 2023 +0000

    feat: improve error messages of `tauto` (#5965)
    
    Modify `tauto` to throw an error message "tauto failed to solve some goals" if it fails.

[33mcommit a3b98ba05d3602ff365c4388d1f4d71d1f4aa418[m
Author: R√©my Degenne <Remydegenne@gmail.com>
Date:   Wed Aug 2 15:54:06 2023 +0000

    refactor(Probability/Independence): define independence using kernel independence (#6294)
    
    Independence is the special case of independence with respect to a kernel and a measure where the kernel is constant.

[33mcommit 56d44fced78c7cf8fc5cd4a706fda1f742764d7b[m
Author: Chris Hughes <chrishughes24@gmail.com>
Date:   Wed Aug 2 15:54:05 2023 +0000

    fix(ModelTheory): make some defs into abbrevs (#6171)

[33mcommit e79964d530874f92a5ab49dd193d2bce947a7bc0[m
Author: damiano <adomani@gmail.com>
Date:   Wed Aug 2 15:54:04 2023 +0000

    feat(Tactic/ExtractGoal + test/ExtractGoal): port `extract_goal` tactic (#4595)
    
    This is a first PR porting some of the functionality of the `extract_goal` tactic from mathlib3.
    
    
    
    Co-authored-by: Alex J Best <alex.j.best@gmail.com>

[33mcommit 04c61390f6984efcf2f482796941bd3907695bd9[m
Author: Thomas Browning <tb65536@uw.edu>
Date:   Wed Aug 2 15:15:15 2023 +0000

    refactor(Data/ZMod/Basic): Replace `Fact ((n : ‚Ñï) % 2 = 1)` with `Odd n` (#6292)
    
    This PR replaces `Fact ((n : ‚Ñï) % 2 = 1)` with `Odd n`, as suggested in #6086.

[33mcommit 4a7be4723db9e789155830fd13ca484d6d9f0f94[m
Author: Mario Carneiro <di.gama@gmail.com>
Date:   Wed Aug 2 13:41:14 2023 +0000

    fix: HOME variable on windows (#6296)
    
    Fixes an issue [reported on Zulip](https://leanprover.zulipchat.com/#narrow/stream/270676-lean4/topic/.60lake.20exe.20cache.20get.60.20fails.20in.20command.20prompt/near/377455000).

[33mcommit 427e0b1903a5d159e7d02f3f181812f334a4fd3f[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Wed Aug 2 13:41:12 2023 +0000

    chore(Algebra/Category/*/Colimits): golf (#6265)
    
    Found while doing a larger refactor. This doesn't change any defeqs, and the new proofs make it obvious that there's nothing interesting going on here.

[33mcommit b36a2c75148190ab926d23354775d55d32af90cc[m
Author: MohanadAhmed <m.a.m.elhassan@gmail.com>
Date:   Wed Aug 2 13:41:11 2023 +0000

    feat: column and row partitioned matrices (#6052)
    
    This file provides the basic definitions of matrices composed from columns and rows. The concatenation of two matrices with the same row indices can be expressed as `A = fromColumns A‚ÇÅ A‚ÇÇ` the concatenation of two matrices with the same column indices can be expressed as `B = fromRows B‚ÇÅ B‚ÇÇ`.
    
    We then provide a few lemmas that deal with the products of these with each other and with block matrices. Two particular lemmas `fromColumns_mul_fromRows_eq_one_comm` and `equiv_compl_fromColumns_mul_fromRows_eq_one_comm` deal with the case of matrix multiplication that gives one as a result. This gives a crude (but usable) replacement for the `Invertible` type which can only be applied to square matrices (with the same index type for rows and columns).

[33mcommit ab8acf5fc9c0b25dcff6613f72c8beada4ad82e3[m
Author: Scott Morrison <scott@tqft.net>
Date:   Wed Aug 2 11:57:08 2023 +0000

    chore: remove reducible from Function.Surjective (#6297)
    
    This was done once in #5063, then accidentally reverted in #5859.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 3cf735536794d9bf544ce2c66694ab4988dc1939[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Wed Aug 2 10:41:17 2023 +0000

    feat(LinearAlgebra/CliffordAlgebra): support towers of algebras (#6074)

[33mcommit 6538bed270c038732f71fc1a2b36ca9f93a75498[m
Author: Xavier Roblot <46200072+xroblot@users.noreply.github.com>
Date:   Wed Aug 2 09:22:02 2023 +0000

    feat(NumberTheory.NumberField.Basic): add  mem_span_integralBasis (#5996)
    
    Add the following result:
    ```lean
    theorem mem_span_integralBasis {x : K} :
        x ‚àà Submodule.span ‚Ñ§ (Set.range (integralBasis K)) ‚Üî x ‚àà ùìû K
    ```
    that is, `integralBasis` is indeed a `‚Ñ§`-basis of the ring of integers.
    
    Co-authored-by: Riccardo Brasca <riccardo.brasca@gmail.com>
    
    
    
    Co-authored-by: Riccardo Brasca <riccardo.brasca@gmail.com>

[33mcommit 9688c5a91065b841d7cafa405fc217abaf4a50f6[m
Author: MohanadAhmed <m.a.m.elhassan@gmail.com>
Date:   Wed Aug 2 08:48:25 2023 +0000

    Use the IO.FS.rename to move file instead of relying on presence of mv program (#6284)
    
    The Cache program after detecting that LeanTar is old downloads it and attempts to place it in the `CACHEDIR` directory. It then attempts to rename it using the `mv` command it assumes is present on the platform. On windows `cmd` and `powershell` this does not work since `mv` is actually a shell built in and not an executable. (This will however work on MinGW based shells).
    
    @digama0 added the function `IO.FS.rename` in Lean [Lean4#2345](https://github.com/leanprover/lean4/pull/2345#issue-1816557709) which calls the standard C/C++ function `rename`. This PR uses this function to move leantar instead of the runCmd command. When this fix succeeds the output looks like the following (in powershell).
    
    ```text
    PS W:\LeanStuff\graveyard_mathlib4\LeanCacheFix> lake exe cache get
    leantar is too old; downloading more recent version
    Attempting to download 3614 file(s)
    Downloaded: 3614 file(s) [attempted 3614/3614 = 100%] (100% success)
    Decompressing 3614 file(s)
    unpacked in 323 ms
    ```
    
    
    
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>

[33mcommit 66ff2fa8cfa227f4ce7c284f977059f116f81545[m
Author: Thomas Browning <tb65536@uw.edu>
Date:   Wed Aug 2 08:13:17 2023 +0000

    refactor(FieldTheory/NormalClosure): Some golfs (#6289)
    
    This PR extracts some golfs from #6163.

[33mcommit e6733eceaa63e98580cb8b30029664641347ce06[m
Author: Oliver Nash <github@olivernash.org>
Date:   Wed Aug 2 07:30:58 2023 +0000

    feat: define reflexive modules and prove basics of perfect pairings (#4989)
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 4f0b2d5b5e6a9cce7a742dd139b3235affa81128[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Wed Aug 2 07:03:11 2023 +0000

    feat(Algebra/TensorAlgebra): support towers of algebras (#6073)
    
    This is pre-work towards a base-change of clifford algebras.
    
    The main result here is
    ```lean
    @[nolint unusedArguments]
    instance instAlgebra {R A M} [CommSemiring R] [AddCommMonoid M] [CommSemiring A]
        [Algebra R A] [Module R M] [Module A M]
        [IsScalarTower R A M] :
        Algebra R (TensorAlgebra A M)
    ```
    Note that strictly the `IsScalarTower R A M` argument isn't needed, but I'd claim the instance doesn't make any sense without it.
    
    In order to prevent diamonds in the `algebraMap` fields of the `Int` and `Nat` algebra instances, we have stop having `natCast`  as an `irreducible_def`, and we have to add a missing `intCast` customization for `RingQuot`. In order to prevent diamonds in the `smul` fields there and elsewhere (such as a complex tensor algebra being a real algebra), we have to stop having the `smul` definition as an `irreducible_def`. We already had to make a similar refactor to prevent diamonds for `Algebra R (Polynomial A)`.
    
    If we backport any of this to mathlib3, we'd additionally have to change the `smul` definition to not use pattern matching. Thankfully, structure eta in Lean 4 makes that unnecessary.
    
    These diamonds are tested with inline `examples`.

[33mcommit 5cbb0ad67fcc1f40a4ec860c8e928411fabee9bc[m
Author: R√©my Degenne <remydegenne@gmail.com>
Date:   Wed Aug 2 05:14:18 2023 +0000

    feat(Probability/Independence): define independence wrt a kernel and a measure (#6106)
    
    We introduce a new notion of independence with respect to a kernel and a measure. The plan is to eventually express both independence and conditional independence as particular cases of this new notion (see #6098).
    
    Two sigma-algebras `m` and `m'` are said to be independent with respect to a kernel `Œ∫` and a measure `Œº` if for all `m`-measurable sets `t‚ÇÅ` and `m'`-measurable sets `t‚ÇÇ`, `‚àÄ·µê a ‚àÇŒº, Œ∫ a (t‚ÇÅ ‚à© t‚ÇÇ) = Œ∫ a t‚ÇÅ * Œ∫ a t‚ÇÇ`.
    
    Independence is the special case where `Œ∫` is a constant kernel. Conditional independence can be defined by using the conditional expectation kernel `condexpKernel`.
    
    
    
    Co-authored-by: RemyDegenne <Remydegenne@gmail.com>

[33mcommit 8fd5c885ef7fbdc254ec59887cb7c5ae4fb4e05c[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Wed Aug 2 03:48:41 2023 +0000

    chore: golf `Polynomial.degree_mul_le` (#6263)
    
    And other similar lemmas
    
    With thanks to @adomani for adding these lemmas.

[33mcommit 444b9f338e731cfd2bf4c0d37248349e25eebcc4[m
Author: Peter Nelson <71660771+apnelson1@users.noreply.github.com>
Date:   Wed Aug 2 02:18:26 2023 +0000

    feat(Data.Set.Ncard): enat set cardinality (#5908)
    
    This PR is a second attempt at defining the cardinality of a set as extended natural number, with a function `encard`. The implementation involves a refactor, where the existing`ncard` function is redefined in terms of `encard`. This shortens a lot of proofs, reduces reliance on the `Finset` API, and allows for a potential future refactor where `ncard` is removed if it is decided to be redundant.
    
    
    
    Co-authored-by: Jireh Loreaux <loreaujy@gmail.com>

[33mcommit 292d54d18f0d5a36ddebae44817cca95f745f697[m
Author: Matthew Robert Ballard <k.buzzard@imperial.ac.uk>
Date:   Wed Aug 2 00:56:53 2023 +0000

    perf: remove some `with` instance construction patterns (#6241)
    
    The general thought here is that
    ```lean
      { hf.distribMulAction f smul with
        smul := (¬∑ ‚Ä¢ ¬∑)
        ... }
    ```
    is treated roughly as
    ```lean
      let src := hf.distribMulAction f smul
      { toDistribMulAction :=
        { toMulAction :=
          { smul := (¬∑ ‚Ä¢ ¬∑)
            one_smul := src.one_smul
            mul_smul := src.mul_smul}
          smul_add := src.smul_add
          smul_zero := src.smul_zero  }
        ... }
    ```
    which is a much larger term (especially once the `let` is reduced, due to how many arguments `hf.distribMulAction` consumes) than
    ```lean
      { toDistribMulAction := hf.distribMulAction f smul
        ... }
    ```
    
    In some places the long version is _maybe_ still more desirable, if we want a specific syntactic equality for `smul` that the base structure defines differently; but none of the examples in this PR are such a case.
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>
    
    
    
    Co-authored-by: Matthew Ballard <matt@mrb.email>
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 5f76a61b88542aa799e7f6c0ce84003af99b2eaa[m
Author: Anatole Dedecker <anatolededecker@gmail.com>
Date:   Tue Aug 1 21:18:09 2023 +0000

    feat: miscellaneous results about Filter.IsBoundedUnder (#6287)

[33mcommit 6b9326b4c00f1e6882232f8bb7c31da32d268176[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Tue Aug 1 19:57:47 2023 +0000

    chore: tidy various files (#6274)

[33mcommit 11f20c483027bdd887a2743c2974b0a000c609e8[m
Author: Christopher Hoskin <christopher.hoskin@gmail.com>
Date:   Tue Aug 1 19:57:46 2023 +0000

    refactor(Topology/ContinuousFunction/Algebra): lattice ordered group gives inf/sup formula (#6205)
    
    Previously the following comment occured in `Topology.ContinuousFunction.Algebra`:
    
    > -- TODO:
    -- This lemma (and the next) could go all the way back in `Algebra.Order.Field`,
    -- except that it is tedious to prove without tactics.
    -- Rather than stranding it at some intermediate location,
    -- it's here, immediately prior to the point of use.
    
    Subsequently, the theory of lattice ordered groups has been developed in Mathlib (Algebra.Order.LatticeGroup). This now provides the natural "intermediate location" for these lemmas, they are an immediate consequence of `LatticeOrderedCommGroup.two_inf_eq_add_sub_abs_sub` and `LatticeOrderedCommGroup.two_sup_eq_add_add_abs_sub`. In fact we can show that `C(Œ±, Œ≤)` is itself a lattice ordered group and hence expressions for the `inf` and `sup` (`inf_eq` and `sup_eq`) can be deduced directly from `LatticeOrderedCommGroup.two_inf_eq_add_sub_abs_sub` and `LatticeOrderedCommGroup.two_sup_eq_add_add_abs_sub`.
    
    This was previously submitted to Mathlib https://github.com/leanprover-community/mathlib/pull/18780
    
    
    
    Co-authored-by: Christopher Hoskin <christopher.hoskin@overleaf.com>
    Co-authored-by: Christopher Hoskin <mans0954@users.noreply.github.com>

[33mcommit ac5134b0eb7252262a29bd49bb3e60c092e214c9[m
Author: Oliver Nash <github@olivernash.org>
Date:   Tue Aug 1 18:35:21 2023 +0000

    feat: add `MeasureTheory.MeasurePreserving.measure_symmDiff_preimage_iterate_le` (#6175)
    
    Also some minor loosely-related other changes.

[33mcommit 067dad6dcbd5e61738f205faaeb4a0a3e26d9efd[m
Author: Christopher Hoskin <christopher.hoskin@gmail.com>
Date:   Tue Aug 1 18:11:40 2023 +0000

    feat(Topology/Order/UpperLowerSetTopology): Introduce the Upper Set (or Alexandrov) topology and the Lower Set topology (#5672)
    
    Introduces the Upper Set topology, which is the canonical example of an Alexandrov topology and its dual, the Lower Set topology.
    
    
    
    Co-authored-by: Christopher Hoskin <christopher.hoskin@overleaf.com>
    Co-authored-by: Christopher Hoskin <mans0954@users.noreply.github.com>

[33mcommit 34cd6c175a5d0517882571c71433388406eddb18[m
Author: Oliver Nash <github@olivernash.org>
Date:   Tue Aug 1 16:49:34 2023 +0000

    feat: add a generalisation of Dirichlet's approximation theorem (#6033)

[33mcommit bee2977ff0ddf52cafe33e6a9ea2675c66366f5c[m
Author: Thomas Browning <tb65536@uw.edu>
Date:   Tue Aug 1 16:05:19 2023 +0000

    refactor(FieldTheory/NormalClosure): move to new file (#6273)
    
    This PR moves `normalClosure` to a separate file, in preparation for #6163.
    
    
    
    Co-authored-by: Thomas Browning <tb65536@users.noreply.github.com>

[33mcommit d4d88d3b94a1a114c2b048917133bc5975beff59[m
Author: Jz Pan <acme_pjz@hotmail.com>
Date:   Tue Aug 1 15:12:50 2023 +0000

    refactor(AlgebraicGeometry/EllipticCurve/Weierstrass): change the variableChange into a structure (#5841)
    
    Main changes:
    
    - [x] Change the `variableChange` (was `u r s t` everywhere) into a structure `VariableChange`.
    - [x] Add `id`, `comp` and `inv` to `VariableChange` and prove that it form a group and acts on the set of elliptic curves to the left.
    - [x] Add `baseChange` to `VariableChange`, prove the compatibility of it with base change of elliptic curves.
    - [x] Prove that if the ring homomorphism is injective, then `baseChange` of `VariableChange` and elliptic curves are injective (NB: We don't say anything about elliptic curves modulo isomorphism yet!)
    - [x] Prove that `baseChange` of `VariableChange` is a group homomorphism

[33mcommit 8dd136128ec2fc406f90d60dd3931ad8594ceefe[m
Author: Anatole Dedecker <anatolededecker@gmail.com>
Date:   Tue Aug 1 14:29:31 2023 +0000

    feat: n-th derivative of C^{n+p} map is C^p (#6101)

[33mcommit fa24f8ffc33334100199283c9f685e40fd855139[m
Author: Chris Hughes <chrishughes24@gmail.com>
Date:   Tue Aug 1 12:59:39 2023 +0000

    feat: AList.keys_subset_keys_of_entries_subset_entries (#6150)

[33mcommit 4d41532350b234fa99e3a210dcba78962f488ebe[m
Author: Kyle Miller <kmill31415@gmail.com>
Date:   Tue Aug 1 12:59:38 2023 +0000

    feat: Number of edges of a tree (#5918)
    
    Port/review of [mathlib#18638](https://github.com/leanprover-community/mathlib/pull/18638) directly to Mathlib4.
    
    Co-authored-by: Ya√´l Dillies <yael.dillies@gmail.com>
    Co-authored-by: Bhavik Mehta <bhavikmehta8@gmail.com>

[33mcommit 881c6469009e2f36c612a573302295d83664e2ef[m
Author: Scott Morrison <scott@tqft.net>
Date:   Tue Aug 1 12:02:27 2023 +0000

    chore: cleanup API for distributors in preadditive monoidal categories (#6257)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit c8214aaa6cf67b9b374ac2cf88b1785ca92dd073[m
Author: Jeremy Tan Jie Rui <reddeloostw@gmail.com>
Date:   Tue Aug 1 12:02:25 2023 +0000

    feat: parameter equality of strongly regular graphs (#6060)
    
    i.e. $k(k-l-1)=(n-k-1)Œº$. An extra condition $n>0$ is required because the proof (a standard double counting argument) sets itself around an arbitrary vertex of the graph, and furthermore the null graph ($n=0$) can vacuously be made to be strongly regular with any parameters you like.

[33mcommit 73761eed3cf95b646dd2f4c4858b0a1b32f2099e[m
Author: Alex J Best <alex.j.best@gmail.com>
Date:   Tue Aug 1 12:02:24 2023 +0000

    feat: restore field_simp [*] (#6024)
    
    fixes #5689
    
    to do this we basically copy the missing functionality over from the simp internals

[33mcommit e632cabc0596cd17bd04d0745e54e83f42b5a540[m
Author: negiizhao <egresf@gmail.com>
Date:   Tue Aug 1 10:36:56 2023 +0000

    docs(Tactic/Nontriviality): fix docs  (#6191)

[33mcommit 944204bbdedc6a19f5a2e0557cd0d194a060c246[m
Author: Floris van Doorn <fpvdoorn@gmail.com>
Date:   Tue Aug 1 10:36:55 2023 +0000

    fix: add some robustness to fragile declarations (#6177)
    
    These declarations broke when I tweaked instances a little bit (in a separate branch that is not ready yet), and I think these declarations can use some extra robustness (usually by providing some extra information explicitly).

[33mcommit bfd9478adeb7b334ec5a932f94e04ca7f32cf417[m
Author: Scott Morrison <scott@tqft.net>
Date:   Tue Aug 1 10:36:52 2023 +0000

    feat: products of Thunks (#6096)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 865bd5b5dfc7320202595256576a51f976b5d851[m
Author: Scott Morrison <scott@tqft.net>
Date:   Tue Aug 1 09:41:20 2023 +0000

    chore: cleanup some set_option commands (#6281)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit ba0213ee2fa15f254981668a33c6f3ca5c5d88a6[m
Author: Bulhwi Cha <chabulhwi@semmalgil.com>
Date:   Tue Aug 1 08:16:17 2023 +0000

    feat: add instances about `Nat.Primes` (#6238)
    
    The type of prime numbers is infinite and countable.

[33mcommit 6965a5a6f92bf26301362d0a177680ef160eca94[m
Author: Markus Himmel <markus@himmel-villmar.de>
Date:   Tue Aug 1 08:16:16 2023 +0000

    feat: generalize universes for connected categories (#6237)

[33mcommit 69e7283b4b9434ea603e21db3e3fd156ab5a1b9a[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Aug 1 08:16:15 2023 +0000

    feat: add more lemmas about derivatives and `tsupport` (#6228)

[33mcommit 358bd33b4522919f5d823a299b9b6634ac7fc8ce[m
Author: Markus Himmel <markus@himmel-villmar.de>
Date:   Tue Aug 1 07:19:02 2023 +0000

    feat: factorization through full subcategories is definitional (#6184)
    
    In Lean 3, the equality `FullSubcategory.lift P F hF ‚ãô fullSubcategoryInclusion P = F` was evil because it was not definitional (though it was definitional on objects and maps). In Lean 4, it is definitional, so it should be fine to tell this to `dsimp`.

[33mcommit 6c5ad83c2ca4a6e03ae9e33fa52220712b8a9faf[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Jul 31 23:05:14 2023 +0000

    chore: use `FunLike` for `OrderHom` (#5805)
    
    
    
    Co-authored-by: Jujian Zhang <jujian.zhang1998@outlook.com>
    Co-authored-by: Oliver Nash <github@olivernash.org>

[33mcommit c02f4f8de096172dc2c6627d34e050108c594752[m
Author: Christopher Hoskin <christopher.hoskin@overleaf.com>
Date:   Mon Jul 31 21:41:48 2023 +0000

    feat(Order/Monotone/Basic): Add Monotone.dual_iff and Antitone.dual_iff (#6157)
    
    Add if and only if versions of `Monotone.dual` and `Antitone.dual`.
    
    Needed for #5672
    
    
    
    Co-authored-by: Christopher Hoskin <mans0954@users.noreply.github.com>
    Co-authored-by: Christopher Hoskin <christopher.hoskin@gmail.com>

[33mcommit bbf74a5aa41b6924568bf6eaad6bc8f2d60083b7[m
Author: Markus Himmel <markus@himmel-villmar.de>
Date:   Mon Jul 31 19:47:08 2023 +0000

    chore: fix a few typos in docstrings (#6261)

[33mcommit 31d6c54a12ca2b2d7c082afbeda692eb4922f4ea[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Jul 31 19:47:07 2023 +0000

    feat(MeasureTheory): define `DomMulAct` action on `Lp` (#6190)

[33mcommit c2785432b7933d3b1777c843200950f406c9ad60[m
Author: Arend Mellendijk <arend.mellendijk@gmail.com>
Date:   Mon Jul 31 18:22:57 2023 +0000

    doc(Algebra/BigOperators/Basic): fix comment for product notation (#6272)

[33mcommit 2c4229d9915b0d27245d7841f834be512a59ca31[m
Author: Scott Morrison <scott@tqft.net>
Date:   Mon Jul 31 16:57:13 2023 +0000

    feat: iterated categorical (co/bi/)products (#6255)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit ff2de957d1e1a0ab2f0c93590939e4fa3e6b726c[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Jul 31 16:57:12 2023 +0000

    chore(Data/Set): add 2 `@[simp]` attrs (#6251)
    
    The corresponding `Finset` lemmas are already marked `simp`.

[33mcommit e1debad9bb53f198a575da7b40e20774ddef38b2[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Mon Jul 31 16:57:10 2023 +0000

    feat: 2-commutative squares (#6233)
    
    This PR introduces the notion of 2-commutative squares of functors.
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit c8f191daf1ee4201de8a6da3f59dd5f3f2e3a8da[m
Author: Scott Morrison <scott@tqft.net>
Date:   Mon Jul 31 16:57:09 2023 +0000

    chore: Ord instance for Prod.Lex (#6090)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 795a5ff1ec06b1a52281f0440eb11e893e224d2d[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Mon Jul 31 16:57:07 2023 +0000

    feat: the short complexes attached to homological complexes (#6039)
    
    If `K` is an homological complex and `i` some degree, this PR defines the short complex `K.sc i` which is `K.X (c.prev i) ‚ü∂ K.X i ‚ü∂ K.X (c.next i)``.
    
    - [x] depends on: #6008
    
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>
    Co-authored-by: Markus Himmel <markus@himmel-villmar.de>

[33mcommit cebb59256c46bf390c81a196dddad1fcda4e851e[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Mon Jul 31 15:32:18 2023 +0000

    refactor(Algebra/Module/LinearMap): generalize the endomorphism algebra instance (#6207)
    
    Note that the module instance was already generalized; we were just missing the fact that when combined with the existing ring instance, the result was an algebra.
    
    This also moves some lemmas about `IsUnit (_ : Module.End R M)` to an earlier file as they are nothing to do with `Algebra`.

[33mcommit ff15b399223653afec492433aa0b4acb50c1d16f[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Mon Jul 31 15:32:16 2023 +0000

    chore: tidy various files (#6174)

[33mcommit 8b42c6ffb76afdf5faea09532ef360991ca0bab6[m
Author: Matthew Robert Ballard <matt@mrb.email>
Date:   Mon Jul 31 15:32:13 2023 +0000

    chore (Ideal.Cotangent): simplify term for cotangentIdeal (#6156)
    
    This removes an extraneous `have` and reduces a `let` binding.

[33mcommit c8aaaf2c30b84a82bae4fd48d29f9cedcf13e91a[m
Author: Scott Morrison <scott@tqft.net>
Date:   Mon Jul 31 15:32:11 2023 +0000

    feat(Order/Basic): simp lemmas about Subsingleton (#6092)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit b6d0a69cf550a05f595aea43f69c694dd1956feb[m
Author: Thomas Browning <tb65536@uw.edu>
Date:   Mon Jul 31 15:32:09 2023 +0000

    feat: `a + a = 0 ‚Üî a = 0` in `ZMod n` for `n` odd (#6086)
    
    This PR proves that `a + a = 0 ‚Üî a = 0`, and uses it to golf the proof of `ne_neg_self`.

[33mcommit fe97716636151afe907a6c3e8347649aeb0c3d22[m
Author: Thomas Browning <tb65536@uw.edu>
Date:   Mon Jul 31 15:32:07 2023 +0000

    feat: Add `Nat.card_sum` (#6081)
    
    This PR adds `Nat.card_sum`. The finiteness assumptions cannot be dropped, unfortunately.
    
    
    
    Co-authored-by: Thomas Browning <tb65536@users.noreply.github.com>

[33mcommit 4ada7e3daf4c51a039e3b887df07fdb07a67ed9a[m
Author: Arend Mellendijk <arend.mellendijk@gmail.com>
Date:   Mon Jul 31 15:32:05 2023 +0000

    feat(Algebra/BigOperators/Ring): parameterise `DecidableEq` instance for `Finset.prod_add` (#5798)
    
    Remove the use of a classical `DecidableEq` instance from `Finset.prod_add`.

[33mcommit a4f255983ecce8484680e402f5b9b8b0a62de07c[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Mon Jul 31 14:06:24 2023 +0000

    feat: generalize a few `Nat.cast` lemmas (#6229)
    
    This generalizes some `Nat.cast` lemmas from `OrderedSemiring Œ±` to the conjunction of `AddCommMonoidWithOne Œ±`, `PartialOrder Œ±`, `CovariantClass Œ± Œ± (¬∑ + ¬∑) (¬∑ ‚â§ ¬∑)`, `ZeroLEOneClass Œ±`; collectively, these make up an `OrderedAddCommMonoidWithOne`, but that type class doesn't actually exist.
    
    This generalization is not without purpose, the new lemmas will apply to `StarOrderedRing`s, as well as the `selfAdjoint` part thereof, as well as the subtype `{x : Œ± // 0 ‚â§ x}` of positive elements in a `StarOrderedRing`. These can be seen in #4871.
    
    Because we are generalizing some fundamental `simp` lemmas from a single bundled type class to a bag of several classes, Lean had trouble in a few places. So, we opt to keep the `OrderedSemiring` versions of these `simp` lemmas as a special case, and we mark the more general versions with `@[simp low]`. This also avoids needing to update the `positivity` extension for `Nat.cast` to the more general setting for the time being.

[33mcommit cba384a2eb0e13421103f2e69c88d11a379550fb[m
Author: Anne Baanen <vierkantor@vierkantor.com>
Date:   Mon Jul 31 14:06:22 2023 +0000

    chore: split `ClassGroup.mk0_surjective` (#6146)
    
    Not only was this a huge declaration, it also remained unfolded throughout checking the proof, so things like defeq checking were extremely slow (total declaration elaboration time ~1 minute on my machine). Splitting it into a `def` + proofs makes everything much faster.
    
    Total build time for this file on my machine went from ~140 seconds to ~80 seconds.
    
    I came across this issue while trying to figure out why #6011 appeared to slow down building of `ClassGroup.lean`.
    
    
    
    Co-authored-by: Anne Baanen <Vierkantor@users.noreply.github.com>

[33mcommit 9d275d5e843dd28c7b222adec1327056a340c75b[m
Author: Scott Morrison <scott@tqft.net>
Date:   Mon Jul 31 14:06:21 2023 +0000

    feat: Subtype.orderEmbedding (#6097)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 15677ddc7546419f39567cdc218ebe7404780e6f[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Jul 31 14:06:19 2023 +0000

    refactor: rename `FreeProduct` to `Monoid.CoprodI` (#6055)

[33mcommit a333b1ff50343fe0aff93938a19d7188de314794[m
Author: negiizhao <egresf@gmail.com>
Date:   Mon Jul 31 14:06:18 2023 +0000

    feat: add lemmas about `Relator.LeftTotal` `Relator.RightTotal` `Relator.BiTotal` (#5888)

[33mcommit 6f17aeee930b8768d755de6e784876cd52df1643[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Mon Jul 31 13:14:29 2023 +0000

    feat: short complexes in functor categories (#6245)
    
    This PR constructs an equivalence of categories `ShortComplex (J ‚•§ C) ‚âå J ‚•§ ShortComplex C`.

[33mcommit fa6fd7946dd9c980955a878da81134c4f6e01e9e[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Mon Jul 31 11:35:33 2023 +0000

    feat: Add basic order instances on `ULift` (#5998)
    
    This adds:
    
    * `Preorder`
    * `PartialOrder`
    * `SemilatticeSup`
    * `SemilatticeInf`
    * `Lattice`
    * `DistribLattice`
    * `CompleteLattice`
    * `LinearOrder`

[33mcommit 2b0e9629be1e29105daeedc8a0d2587517f0e4b9[m
Author: Scott Morrison <scott@tqft.net>
Date:   Mon Jul 31 08:59:27 2023 +0000

    feat: interaction between eqToHom and (co/bi/)products (#6258)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 4773f928cd0ecf350182dd8f92c14fb1bda9a4f3[m
Author: David Kurniadi Angdinata <dka31@cantab.ac.uk>
Date:   Mon Jul 31 08:59:25 2023 +0000

    feat(Algebra/Category/GroupCat/Abelian): prove AddCommGroupCat is AB5 (#5597)
    
    This work was done during the 2023 Copenhagen masterclass on formalisation of condensed mathematics. Numerous participants contributed.
    
    Co-authored-by: Moritz Firsching <moritz.firsching@gmail.com>
    Co-authored-by: Nikolas Kuhn <nikolaskuhn@gmx.de>
    Co-authored-by: Amelia Livingston <101damnations@github.com>
    
    
    
    Co-authored-by: Markus Himmel <markus@himmel-villmar.de>
    Co-authored-by: Moritz Firsching <firsching@google.com>
    Co-authored-by: adamtopaz <github@adamtopaz.com>
    Co-authored-by: nick-kuhn <nikolaskuhn@gmx.de>

[33mcommit 275e357bbeedbe6ab7c8c644b5544bd2eb6e13cf[m
Author: kkytola <kalle.kytola@aalto.fi>
Date:   Mon Jul 31 08:03:04 2023 +0000

    feat: generalize tendsto_measure_cthickening from PseudoMetricSpace to PseudoEMetricSpace and add corresponding lemmas for open thickenings (#6194)
    
    This PR mainly makes the generalization so that `tendsto_measure_cthickening` and `tendsto_measure_cthickening_of_isClosed` assume `[PseudoEMetricSpace]` instead of `[PseudoMetricSpace]` (the proofs require no changes, but the generality seems valuable).
    
    Also the counterparts `tendsto_measure_thickening` and `tendsto_measure_thickening_of_isClosed` for open thickenings (instead of closed thickenings) are added.

[33mcommit 0938530ed4a526c7d87af9f6eeb88076157e0c7e[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Jul 31 08:03:02 2023 +0000

    feat(Topology/Order/NhdsSet): new file (#6161)
    
    Prove lemmas about neighborhoods of intervals.
    
    Some lemmas are TC-generalizations
    of lemmas from the Sphere Eversion Project.

[33mcommit accdefb04aa1c0912f9c00d54f067706f5237137[m
Author: Anatole Dedecker <anatolededecker@gmail.com>
Date:   Mon Jul 31 08:03:01 2023 +0000

    feat(Topology.ProperMap): basic theory of proper maps (#6005)

[33mcommit dc89373908a65cd4807c248c566cbb75c18328f9[m
Author: Scott Morrison <scott@tqft.net>
Date:   Mon Jul 31 05:20:52 2023 +0000

    chore: remove simp lemmas about biproducts that expand into sums (#6256)
    
    These `simp` lemmas were unhelpful, and sometimes create unnecessarily complicated terms.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 4707b47407cd31d818e78788ee2b66c9b2599c6f[m
Author: Scott Morrison <scott@tqft.net>
Date:   Sun Jul 30 23:31:13 2023 +0000

    feat: allow differential objects with shifts in an AddMonoidWithOne (#6246)
    
    What I was really hoping to do was show that ‚Ñï-graded DGOs were the same as ‚Ñï-graded chain complexes (we have the ‚Ñ§ version), but this still seems awkward. If anyone would like to help with that, please let me know. I think this might be helpful in constructor tensor products of chain complexes with less suffering.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 2bf4b7ef19bcd0b851724b8fa6667c66b0d22846[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Sun Jul 30 17:53:36 2023 +0000

    feat: port Init.Data.List.Lemmas (#6243)

[33mcommit d8c7d9897527e99b28862cdf5a4a13aefee95897[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Sun Jul 30 17:05:24 2023 +0000

    feat: more API for the right homology of short complexes (#6089)
    
    This PR develops more API for the right homology of short complexes. All definitions and statements are parallel to their left homology counterparts.
    
    - [x] depends on: #6008
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit 33baf7d8226b5e94c83a4aebaaeda121436fd035[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Sun Jul 30 12:08:41 2023 +0000

    feat: The convolution of a locally integrable function f with a sequence of bump functions converges ae to f (#6102)

[33mcommit e2279612b5ae340c2b4f1e6a6d50584393d1552b[m
Author: Scott Morrison <scott@tqft.net>
Date:   Sun Jul 30 11:47:42 2023 +0000

    chore: bump to nightly-2023-07-30 (#6247)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 5f8d709999add2b8f4f44c3a0ac3211b3ea43ff9[m
Author: Scott Morrison <scott@tqft.net>
Date:   Sun Jul 30 03:44:29 2023 +0000

    feat(List/MinMax): maximum_of_length_pos (#6115)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 2471abe61054d33705206c6b102cdf7083b76de9[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Sat Jul 29 23:40:05 2023 +0000

    feat: forward port AlgebraicTopology.DoldKan.Compatibility (#6186)
    
    This PR is a forward port of mathlib3 PR !3#17923
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit d8f68396c1ee92f2767ad3e307b7458bd0238d84[m
Author: Calvin Lee <pounce@meta.com>
Date:   Sat Jul 29 18:51:05 2023 +0000

    feat: add IsLocalizedModule.isBaseChange (#5766)
    
    Port of leanprover-community/mathlib#17973
    
    Follow up work:
    * add `IsPushout` when `M` is a `CommRing`.
    
    
    
    Co-authored-by: Calvin Lee <calvins.lee@utah.edu>
    Co-authored-by: Calvin Lee <pounce@integraldoma.in>

[33mcommit 061c9b81305c65cc82c014765c9ef4dd002d8766[m
Author: Amelia Livingston <101damnations@github.com>
Date:   Sat Jul 29 15:51:38 2023 +0000

    fix(Algebra.Category.ModuleCat.Basic): remove `CoeOut (Submodule R M) (ModuleCat R)` instance (#6032)

[33mcommit b017d099728e5be22ea5119f3b11c21fe38519dd[m
Author: Adam Topaz <github@adamtopaz.com>
Date:   Sat Jul 29 15:51:38 2023 +0000

    feat: CategoryTheory/Sites/CoverLifting -- compatibility between sheafification and pullback (#6009)
    
    I'll close https://github.com/leanprover-community/mathlib/pull/14512 once this is merged.

[33mcommit f83ada76f259a0ab365991249bec5395d523329e[m
Author: Scott Morrison <scott@tqft.net>
Date:   Sat Jul 29 14:26:45 2023 +0000

    chore: bump to nightly-2023-07-29 (#6234)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit a211e856dd951acd3717d148c93f441178d45fd6[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Sat Jul 29 13:10:18 2023 +0000

    chore: move some List aligns to a better location (#6056)

[33mcommit cd76c1931686a85e9c7a6b3a3381c4727f3424fb[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Sat Jul 29 12:41:37 2023 +0000

    feat: groups with zero with a smooth division away from zero (#6069)
    
    We have currently (additive or multiplicative) Lie groups but no typeclass to express that division is smooth away from zero in fields.
    This PR adds such a typeclass, modelled on the one we already have in topological spaces.

[33mcommit 3380fd116486e0a60f5553a1543efb74a8e4729b[m
Author: negiizhao <egresf@gmail.com>
Date:   Sat Jul 29 10:38:05 2023 +0000

    docs(Tactic/Convert): fix docs (#6185)

[33mcommit 7433944e2d73d5fe81fd6dab0ddc78d3daad2f65[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sat Jul 29 10:38:03 2023 +0000

    chore(*Deriv*): rename some files (#6167)
    
    Move some files to `Analysis/Calculus/FDeriv`

[33mcommit e6e9a9e6ad9ab93f76dd988d0589e23db85a6c99[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Sat Jul 29 10:38:03 2023 +0000

    fix: make EuclideanDomain.gcdMonoid computable (#6076)
    
    This of course still works non-computably in the presence of `Classical.decEq`, but the caller now has the option.

[33mcommit 91917cb8a985bb0e3f6e4d647f54cca93ac97ebb[m
Author: Archie <archibald.browne21@imperial.ac.uk>
Date:   Sat Jul 29 10:38:02 2023 +0000

    feat: Data/Int/ModEq add theorem modEq_sub_fac, compliment modEq_add_fac (#6040)
    
    Easy of use function to compliment modEq_add_fac, the statement that :
    
    a = b [ZMOD n] implies a - c * n = b [ZMOD n]

[33mcommit 0df52a83b3084d77df15f2281cb80a57de79efc2[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Sat Jul 29 10:38:01 2023 +0000

    feat: explicit limits in Profinite (#5763)
    
    Co-authored by:
    
    - Riccardo Brasca [riccardo.brasca@gmail.com](mailto:riccardo.brasca@gmail.com) @riccardobrasca
    - Filippo A. E. Nuccio [filippo.nuccio@univ-st-etienne.fr](mailto:filippo.nuccio@univ-st-etienne.fr) @faenuccio
    
    Analogue of CompHaus/ExplicitLimits for Profinite.
    This work was done during the 2023 Copenhagen masterclass on formalisation of condensed mathematics. Numerous participants contributed.
    
    
    
    Co-authored-by: Jon Eugster <eugster.jon@gmail.com>

[33mcommit 61b9a4c7634cc3302c8f0c250e11033b43c9f374[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Sat Jul 29 10:38:00 2023 +0000

    feat: some API for explicit limits in CompHaus (#5762)
    
    Co-authored by:
    - Riccardo Brasca [riccardo.brasca@gmail.com](mailto:riccardo.brasca@gmail.com) @riccardobrasca
    - Filippo A. E. Nuccio [filippo.nuccio@univ-st-etienne.fr](mailto:filippo.nuccio@univ-st-etienne.fr) @faenuccio
    
    We add some more API for the compatibility of explicit and abstract limits in CompHaus
    This work was done during the 2023 Copenhagen masterclass on formalisation of condensed mathematics. Numerous participants contributed.

[33mcommit adddab87a2364a014ce903f1fd13b83c6db44ef4[m
Author: Anatole Dedecker <anatolededecker@gmail.com>
Date:   Sat Jul 29 10:37:59 2023 +0000

    feat(Data/Set/Lattice, Order/Filter/Basic): more lemmas about `kernImage` and filter analog (#5744)
    
    Co-authored-by: Junyan Xu <junyanxumath@gmail.com> @alreadydone
    
    This was originally discussed on Zulip, and Junyan made most of the work in [this message](https://leanprover.zulipchat.com/#narrow/stream/217875-Is-there-code-for-X.3F/topic/congruence.20of.20filters.20for.20tendsto/near/294976522). I just changed some proofs to use a bit more Galois connections.
    
    This is a bit of a gadget but it does simplify the proof of `comap_iSup`, and it will also be convenient to define the space of functions with support a compact subset of a fixed set. See [this message](https://leanprover.zulipchat.com/#narrow/stream/217875-Is-there-code-for-X.3F/topic/congruence.20of.20filters.20for.20tendsto/near/302238889) for more details.

[33mcommit 8bbef902115c940955f3eb76ce453502032019f7[m
Author: R√©my Degenne <Remydegenne@gmail.com>
Date:   Sat Jul 29 10:10:02 2023 +0000

    feat(Probability/Cdf): 2 probability measures are equal iff their cdf are equal (#6122)
    
    
    
    Co-authored-by: R√©my Degenne <remydegenne@gmail.com>

[33mcommit 57c5d5ba583267846b2be404d958340ff5fc86f1[m
Author: R√©my Degenne <Remydegenne@gmail.com>
Date:   Sat Jul 29 10:10:01 2023 +0000

    refactor(Probability/Kernel/Composition): define compProd for all kernels (#6054)
    
    `compProd` and `prod` make sense only for s-finite kernels and were defined only for those. I define them for all kernels, with default value 0 when one of the kernels is not s-finite. The new definitions allow rewriting a kernel inside a compProd, which was not possible before (it would raise a "motive is not type correct" error due to the s-finite argument).
    
    
    
    Co-authored-by: R√©my Degenne <remydegenne@gmail.com>

[33mcommit b19ab15a8836ba520f6a934976a25b890f43a20a[m
Author: Bulhwi Cha <chabulhwi@semmalgil.com>
Date:   Sat Jul 29 07:57:34 2023 +0000

    style: leave some variables implicit (#6021)

[33mcommit f39466cb99f0b941b72e1d918d139ef25a419023[m
Author: Thomas Browning <tb65536@uw.edu>
Date:   Sat Jul 29 05:32:39 2023 +0000

    refactor(GroupTheory/CommutingProbability): Remove finite assumption (#6224)
    
    This PR removes the finite assumption on a couple lemmas.

[33mcommit 6220e1d0219e245327c603be771b67aea0fdeb4d[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Fri Jul 28 22:33:36 2023 +0000

    refactor: link the Stone-Weierstrass theorem to the `StarSubalgebra` API (#5267)
    
    The Stone-Weierstrass theorem, including the version for `IsROrC ùïú`, was developed prior to the introduction of `StarSubalgebra`. As such, in order to prove it, a predicate `ConjInvariantSubalgebra` was introduced for `‚Ñù`-subalgebras of `C(X, ùïú)`. This refactors the Stone-Weierstrass theorem to instead use the `StarSubalgebra` API and removes `ContinuousMap.ConjInvariantSubalgebra` entirely. In addition, we provide a few corollaries concerning polynomial functions which are missing from the library.

[33mcommit f4b21de9daa9ae0d976f00f5af1a2dba9b4305e5[m
Author: Thomas Browning <tb65536@uw.edu>
Date:   Fri Jul 28 18:22:46 2023 +0000

    feat: Lemmas about commuting probabilities of groups (#6104)
    
    This PR adds lemmas about commuting probabilities of products of groups and about commuting probabilities of infinite groups.
    
    It also changes some definitions and lemmas to use `Commute`.

[33mcommit 41b6cc2d9f9dd6fde3ba23bcb2c11bc2646b8f0e[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Fri Jul 28 17:34:34 2023 +0000

    feat: basic right homology API of short complexes (#6008)
    
    This PR introduces basic API for the right homology of short complexes, like the definition of `ShortComplex.rightHomology`.
    
    - [x] depends on: #5674
    
    
    
    Co-authored-by: Jo√´l Riou <37772949+joelriou@users.noreply.github.com>

[33mcommit 45bc82549f50c956c311b16cb41ef8cc5a81678f[m
Author: negiizhao <egresf@gmail.com>
Date:   Fri Jul 28 16:09:56 2023 +0000

    chore: move `integralNormalization` to `RingTheory/Polynomial` (#6215)
    
    A similar file `ScaleRoots` is also in `RingTheory/Polynomial`.

[33mcommit 5c3c589cb1f7e2cceae9156b113221853d2a6f4b[m
Author: negiizhao <egresf@gmail.com>
Date:   Fri Jul 28 16:09:54 2023 +0000

    feat(RingTheory/Polynomial/ScaleRoots): reduce typeclass assumptions (#6213)

[33mcommit 0866de5f37e37cda1c24fafc5fbc1de1ed3841f8[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Fri Jul 28 16:09:53 2023 +0000

    chore: replace `(Algebra.ofId R A).toLinearMap` with `Algebra.linearMap R A` (#6208)
    
    A tiny bit of clean up, with the aim of increasing awareness of `Algebra.linearMap`

[33mcommit 982547006236450665db91187fc9c503d9abcf06[m
Author: Scott Morrison <scott@tqft.net>
Date:   Fri Jul 28 16:09:51 2023 +0000

    chore: bump to nightly-2023-07-24 (#6200)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit d60c2188d5d5add07c5c65af5d996fe788f500dc[m
Author: Kevin Buzzard <k.buzzard@imperial.ac.uk>
Date:   Fri Jul 28 16:09:50 2023 +0000

    fix: avoid `with` in `Finsupp.module` (#6189)

[33mcommit 284442f7408dcf6d7aa01098d223af1b388544ec[m
Author: Thomas Browning <tb65536@uw.edu>
Date:   Fri Jul 28 16:09:47 2023 +0000

    feat: Subtype of sum is equivalent to sum of subtypes (#6083)
    
    This PR adds an equivalence between a subtype of a sum and a sum of subtypes

[33mcommit 8c6a52e4e19ca5d2396f0c11aeb58842364d1827[m
Author: negiizhao <egresf@gmail.com>
Date:   Fri Jul 28 15:17:36 2023 +0000

    chore(Data/Polynomial/Degree/Definition): golf (#6214)
    
    The proof for `natDegree_eq_of_degree_eq_some` was already inside the proof for `degree_ne_of_natDegree_ne`

[33mcommit 6cb636b7526cb1d25e344dfe6c3a9ed392882d59[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Fri Jul 28 13:43:27 2023 +0000

    chore(RingTheory/TensorProduct): golf a proof (#6211)
    
    This follows the approach taken in Algebra/DirectSum/Ring, which allows avoiding tedious induction by instead conjuring a weird equality of morphisms and using `ext`.

[33mcommit 7bedbaeb2181e706b6612563c6d4f0565cc6f346[m
Author: Kyle Miller <kmill31415@gmail.com>
Date:   Fri Jul 28 11:36:30 2023 +0000

    feat: make `congr!`'s typeEq plausibility heuristic consider binder info (#5900)
    
    There are cases where we want `convert`/`congr!` to generate equalities between types, even if they don't pass the plausibility test. The examples involve types that are explicit arguments without forward dependencies, which seems like a reasonable rule to try out. We exclude forward dependencies because those lead to heterogenous equalities.

[33mcommit 86ac6bf9dd506d502b43d848103031eaf1e8bc7c[m
Author: damiano <adomani@gmail.com>
Date:   Fri Jul 28 09:38:49 2023 +0000

    fix: fill in "in" in `maxHeartbeats` (#6206)
    
    ```bash
    git ls-files '*.lean' | xargs sed -i "s=maxHeartbeats [0-9]*$=& in="
    ```
    Affected files:
    ```
    Mathlib/CategoryTheory/Monoidal/Braided.lean:479:set_option maxHeartbeats 400000
    Mathlib/FieldTheory/Adjoin.lean:1212:set_option synthInstance.maxHeartbeats 30000
    Mathlib/FieldTheory/IsAlgClosed/Basic.lean:302:set_option maxHeartbeats 800000
    Mathlib/FieldTheory/IsAlgClosed/Basic.lean:303:set_option synthInstance.maxHeartbeats 400000
    Mathlib/RepresentationTheory/GroupCohomology/Basic.lean:202:set_option maxHeartbeats 6400000
    Mathlib/RepresentationTheory/GroupCohomology/Resolution.lean:345:set_option maxHeartbeats 800000
    Mathlib/Topology/MetricSpace/GromovHausdorff.lean:415:set_option maxHeartbeats 300000
    ```
    
    [Zulip](https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/set_option.20maxHeartbeats.20with.20no.20.22in.22)

[33mcommit c84172212bad5a41d3f0a6cee27c049e0484c04a[m
Author: Kyle Miller <kmill31415@gmail.com>
Date:   Fri Jul 28 06:10:49 2023 +0000

    fix: let `use` provide last constructor argument, introduce mathlib3-like flattening `use!` (#5350)
    
    Changes:
    * `use` now by default discharges with `try with_reducible use_discharger` with a custom discharger tactic rather than `try with_reducible rfl`, which makes it be closer to `exists` and the `use` in mathlib3. It doesn't go so far as to do `try with_reducible trivial` since that involves the `contradiction` tactic.
    * this discharger is configurable with `use (discharger := tacticSeq...)`
    * the `use` evaluation loop will try refining after constructor failure, so it can be used to fill in all arguments rather than all but the last, like in mathlib3 (closes #5072) but with the caveat that it only works so long as the last argument is not an inductive type (like `Eq`).
    * adds `use!`, which is nearly the same as the mathlib3 `use` and fills in constructor arguments along the nodes *and* leaves of the nested constructor expressions. This version tries refining before applying constructors, so it can be used like `exact` for the last argument.
    
    The difference between mathlib3 `use` and this `use!` is that (1) `use!` uses a different tactic to discharge goals (mathlib3 used `trivial'`, which did reducible refl, but also `contradiction`, which we don't emulate) (2) it does not rewrite using `exists_prop`. Regarding 2, this feature seems to be less useful now that bounded existentials encode the bound using a conjunction rather than with nested existentials. We do have `exists_prop` as part of `use_discharger` however.
    
    
    
    Co-authored-by: Floris van Doorn <fpvdoorn@gmail.com>

[33mcommit 05363324444f9f81b6431038c9f1a1f0a6838200[m
Author: Markus Himmel <markus@himmel-villmar.de>
Date:   Fri Jul 28 04:47:22 2023 +0000

    chore: trivial generalization of the five lemma (#6181)

[33mcommit aefe18a542bcbbcbd4d09f7dc40543c1aa99bd8b[m
Author: Scott Morrison <scott@tqft.net>
Date:   Fri Jul 28 02:26:57 2023 +0000

    chore: avoid if lifting footgun (#6199)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit acafdc774072409a8f5a6e7ff36a604bf641da0f[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Fri Jul 28 02:26:56 2023 +0000

    feat(Data/Fin): add `CanLift` instance (#6168)

[33mcommit d12dc894ff1c62db917becc3e10f634346d7bed0[m
Author: Scott Morrison <scott@tqft.net>
Date:   Fri Jul 28 00:59:41 2023 +0000

    chore: bump to nightly-2023-07-19 (#6196)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 0e849a1c15a758e9dc0394422175f72940aa99b1[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Thu Jul 27 23:50:08 2023 +0000

    chore: split `RingTheory/TensorProduct` (#6187)
    
    There is a reasonably-sized section on modules over two rings before we actual reach tensor products of rings.
    
    The motivation for splitting here is to make room for the results in #6035.
    
    The declarations are copied without modification, the module docstring has been adapted.

[33mcommit 0dec8c4db9ede634e42503b74042703bf586b645[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Thu Jul 27 23:29:20 2023 +0000

    chore: sync references.bib with mathlib3 (#6193)

[33mcommit f62d8a1c1cef76f7535f18056da577216df3d817[m
Author: Dagur T√≥mas √Åsgeirsson <dagurtomas@gmail.com>
Date:   Thu Jul 27 19:54:53 2023 +0000

    feat: define the category of extremally disconnected compact Hausdorff spaces (#5761)
    
    Co-authored-by: Adam Topaz [topaz@ualberta.ca](mailto:topaz@ualberta.ca) @adamtopaz
    Basics of the category `Stonean` of extremally disconnected compact Hausdorff spaces. This work was done during the 2023 Copenhagen masterclass on formalisation of condensed mathematics. Numerous participants contributed.

[33mcommit 4e4513e279dd573b5768af818db0bb21828f31e2[m
Author: Matthew Robert Ballard <matt@mrb.email>
Date:   Thu Jul 27 17:38:38 2023 +0000

    chore (RingTheory.Kaehler): reasonable heartbeat limits (#6178)
    
    In light of #6141, we can change the heart beats to more representantive numbers.
    
    
    
    Co-authored-by: Matthew Robert Ballard <100034030+mattrobball@users.noreply.github.com>

[33mcommit 6665907145035826a76730b41c809f705c242844[m
Author: Scott Morrison <scott@tqft.net>
Date:   Thu Jul 27 17:38:37 2023 +0000

    feat: says tactic combinator (#5980)
    
    This is a primitive implementation of the `says` combinator discussed at today's porting meeting.
    
    If you write `X says`, where `X` is a tactic that produces a "Try this: Y" message, then you will get a message "Try this: X says Y". Once you've clicked to replace `X says` with `X says Y`, after then `X says Y` will only run `Y`.
    
    I think this is already potentially useful.
    
    Possible additions:
    * a CI mode that re-verifies that `X` really does still say `Y`. (Edit: DONE)
    * If `X` doesn't say anything, perhaps implicitly wrap it with `show_term`?
    * Add an extra `suggest` flag to the `TacticM` state, so we can instruct tactics to print "Try this:" suggestions without adding `?` directly.
    
    Very happy if anyone wants to hack on this / replace with a better implementation, etc.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 14fcf7b258458b93333d12cf1d3f4404698cbc69[m
Author: Floris van Doorn <fpvdoorn@gmail.com>
Date:   Thu Jul 27 17:38:36 2023 +0000

    feat: replace have? correctly (#5305)
    
    * `have? using h` now replaces the whole tactic with the suggestion, not just the `have?`
    * Allow `have!?` as alternative syntax for `have?!` (similar for `rw!?` and `exact!?` -- the latter has not been implemented yet)

[33mcommit 07c5e815b8f71e371d3b43f74a968823d94d52ff[m
Author: Anatole Dedecker <anatolededecker@gmail.com>
Date:   Thu Jul 27 15:45:36 2023 +0000

    doc: add ADedecker to maintainer list (#6179)

[33mcommit 930dd29d188c9fab6bd93ccfc25b44f9f9b6347a[m
Author: Floris van Doorn <fpvdoorn@gmail.com>
Date:   Thu Jul 27 15:45:35 2023 +0000

    feat: Linter that checks that Prop classes are Props (#6148)

[33mcommit 90689c421c95e1f3265daf4dd28958456583a754[m
Author: Kyle Miller <kmill31415@gmail.com>
Date:   Thu Jul 27 15:45:34 2023 +0000

    feat: let `convert` infer instances from goal and allow tc failure (#6041)
    
    Changes the way the term is elaborated so that typeclass inference is tolerated and so that instances are allowed to come from the goal without re-inferring them.

[33mcommit b7ec761f5036a8d62c8207c2e5315304a74b4ffc[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Thu Jul 27 14:26:15 2023 +0000

    feat(Finset): add `IsDirected` instances (#6169)
    
    This way `IsDirected (Finset Œ±) (¬∑ ‚â§ ¬∑)` doesn't need `[DecidableEq Œ±]`.

[33mcommit 00269a6fe716b08dafb1c2791b935cb96f40aab2[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Thu Jul 27 13:17:30 2023 +0000

    chore(linear_algebra/tensor_product): forward-port leanprover-community/mathlib#19143 (#6094)

[33mcommit b9dadb41c7b036d7b6f550b3dbcb757540124d00[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Thu Jul 27 13:17:28 2023 +0000

    feat: define `MeasureTheory.Lp.const` (#5236)

[33mcommit 24924f96316cf5f038225c45243e5d968f26391b[m
Author: Scott Morrison <scott@tqft.net>
Date:   Thu Jul 27 11:51:28 2023 +0000

    chore: bump to nightly-2023-07-15 (#5992)
    
    Various adaptations to changes when `Fin` API was moved to Std. One notable change is that many lemmas are now stated in terms of `i ‚â† 0` (for `i : Fin n`) rather then `i.1 ‚â† 0`, and as a consequence many `Fin.vne_of_ne` applications have been added or removed, mostly removed.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>
    Co-authored-by: Wojciech Nawrocki <wjnawrocki@protonmail.com>
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 758b7d6b19adfc8a0d12be3eafb48507e2e859e5[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Thu Jul 27 10:04:47 2023 +0000

    fix(RingTheory/TensorProduct): fix instance diamonds (#6162)
    
    The optional fields to the algebra typeclasses are a trap; if you forget to provide them then you get diamonds.
    
    This change includes `example`s to verify that the issues are gone.
    
    It looks like this was contributing to the very poor performance of `RingTheory.Kahler`; while the `intAlgebra` and `natAlgebra` diamonds were probably irrelevant, the `Ring.toAddCommGroup` diamond likely caused havoc during unification.

[33mcommit 0bcfc2d2d9c34b86e5127fb1c1e2a82874dcff7f[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Thu Jul 27 07:08:32 2023 +0000

    chore: tidy various files (#6158)

[33mcommit 0d7ac76d488ec48ae670c66c962d264eb92143d6[m
Author: negiizhao <egresf@gmail.com>
Date:   Thu Jul 27 07:08:31 2023 +0000

    feat(Algebra/Order/Monoid/WithTop): missing `WithBot` lemmas in #5837 (#6154)
    
    Missing `WithBot` lemmas in #5837

[33mcommit 13e7c2f028779737d376b64695c4fbbfb45589bb[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Thu Jul 27 07:08:30 2023 +0000

    chore(GroupTheory): forward-port leanprover-community/mathlib#18965 (#6147)

[33mcommit e266a1ed2c7099a2b00b0b488cd25022e4c25c05[m
Author: Moritz Doll <moritz.doll@googlemail.com>
Date:   Thu Jul 27 05:58:06 2023 +0000

    fix(Algebra): some instance names (#6125)

[33mcommit 61fc05bca210b556703c897004b5a03fca41fb7b[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Thu Jul 27 03:35:04 2023 +0000

    feat: a function a.e. invariant under an ergodic map is a.e. constant (#5218)

[33mcommit c954df28facb8bac2b39b579c1c54a27ae16511b[m
Author: negiizhao <egresf@gmail.com>
Date:   Thu Jul 27 01:08:20 2023 +0000

    chore(FieldTheory/Adjoin): remove unnecessary assumptions in `minpolynatDegree_le` and  `minpoly.degree_le` (#6152)
    
    Also
    - fix the names of `minpoly.natDegree_le` and  `minpoly.degree_le`
    - rename `minpoly.ne_zero_of_finite_field_extension` to `minpoly.ne_zero_of_finite`
    - reduce typeclass assumptions of some lemmas in `RingTheory/Algebraic`
    - add two lemmas `isIntegral_of_finite` and `isAlgebraic_of_finite`
    - move `Algebra.isIntegral_of_finite` to `RingTheory/IntegralClosure`

[33mcommit 1919f537439a2b6d11f8b20f5eaeb7620fdd156f[m
Author: Scott Morrison <scott@tqft.net>
Date:   Thu Jul 27 00:36:15 2023 +0000

    chore: move #align_import out of comment (#6165)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 69b4a40f28be4b42edfb177b591b95ed8728d226[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Wed Jul 26 23:58:29 2023 +0000

    doc: add j-loreaux to maintainer list (#6166)

[33mcommit d699fa44ffee1eb20d9533d09ed1fc6bfb8a37cc[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Wed Jul 26 22:42:12 2023 +0000

    doc: merge mathlib3 and mathlib4 `README`s (#6160)
    
    This tries to merge the `README`s for mathlib3 and mathlib4 in a sensible way. Some irrelevant material about `leanproject` was removed, as well as a few mathlib3-specific items. Some of these should be replaced by mathlib4 counterparts in the future.
    
    A section has been added about transitioning from Lean 3 to Lean 4 linking to the survival guide and running mathport on a project depending on mathlib.

[33mcommit 415165ea00734c5219c3e6b1e8be1943ce9062a0[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Wed Jul 26 17:00:46 2023 +0000

    chore: tidy various files (#5999)

[33mcommit e4d17634790fb1682bc7439e6d94d6dde1024f8e[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Jul 26 15:22:20 2023 +0000

    fix: fix a typo (#6155)
    
    A typo restricted `LocallyFinite.prod_left` to `(f g : Œπ ‚Üí Set Y)`
    instead of `(f : Œπ ‚Üí Set X) (g : Œπ ‚Üí Set Y)`.

[33mcommit a5649e64788bc0ccc9a448fefa30521010083830[m
Author: AlexKontorovich <58564076+AlexKontorovich@users.noreply.github.com>
Date:   Wed Jul 26 13:48:59 2023 +0000

    feat: a multiple of a SigmaFinite measure is SigmaFinite (#6137)
    
    Co-authored-by: Heather Macbeth <25316162+hrmacbeth@users.noreply.github.com>

[33mcommit 4df84447e2fea969bf69a26c509dfbc647d008e9[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Jul 26 13:02:04 2023 +0000

    fix: drop notation `œà` (#6143)
    
    `OperatorNorm` accidentally introduced a global notation `œà`.
    Drop it, golf the only proof where it was used.

[33mcommit 01335763b49da7519d297e0de5c2d39de8a6fd4a[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Jul 26 12:12:31 2023 +0000

    refactor: rename/redefine `homeomorphUnitBall` (#6030)
    
    * Add `Equiv.toLocalEquivOfImageEq`
      and `Homeomorph.toLocalHomeomorphOfImageEq`.
    * Rename `homeomorphUnitBall` to `Homeomorph.unitBall`.
    * Add `LocalHomeomorph.univUnitBall`,
      a `LocalHomeomorph` version of `Homeomorph.unitBall`.
    * Add `LocalHomeomorph.unitBallBall` and `LocalHomeomorph.univBall`.
    
    Inspired by a definition from the sphere eversion project.

[33mcommit 36dc67fae274ac0187a9f20899e41fbc8c903c8e[m
Author: Eric Wieser <k.buzzard@imperial.ac.uk>
Date:   Wed Jul 26 10:47:26 2023 +0000

    fix: redefine semiring instance on tensor product (#6141)
    
    By providing the `Mul` instance up front, this seems to make future typeclass search much easier.
    
    This comes at the expense of causing minor elaboration problem in various tensor definitions, which now require the implicit type arguments to be provided explicitly.
    
    This also simplifies some proofs, removing a porting note.
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit f1875b50e6f23b22dbb356b7c34e3a67462404ab[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Jul 26 10:47:25 2023 +0000

    feat(Topology/../Module): add `completeSpace_eqLocus` (#6132)
    
    - Add an instance saying that `LinearMap.eqLocus f g` is a complete space.
    - Drop `priority := 100` in `completeSpace_ker`: this is the main way to prove that the kernel is a complete space.

[33mcommit abb2c69cbbf7e4cea97c2490e6a3c5ce3a7c87d9[m
Author: Moritz Doll <moritz.doll@googlemail.com>
Date:   Wed Jul 26 10:47:25 2023 +0000

    feat: Self-adjoint LinearPMaps are densely defined (#6075)
    
    Define the star on `LinearPMap` as the adjoint and prove that every self-adjoint operator is automatically densely defined.

[33mcommit eec218b4e65f3e71ec86fffdb5ce868b8e8c955c[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Jul 26 10:47:23 2023 +0000

    refactor: split `Analysis.Calculus.LocalExtr` (#5944)
    
    Also make `f`/`f'` arguments implicit in all versions of Rolle's Theorem.
    
    Fixes #4830
    
    ## API changes
    
    - `exists_Ioo_extr_on_Icc`:
      - generalize from functions `f : ‚Ñù ‚Üí ‚Ñù`
        to functions from a conditionally complete linear order
        to a linear order.
      - make `f` implicit;
    - `exists_local_extr_Ioo`:
      - rename to `exists_isLocalExtr_Ioo`;
      - generalize as above;
      - make `f` implicit;
    - `exists_isExtrOn_Ioo_of_tendsto`, `exists_isLocalExtr_Ioo_of_tendsto`:
      new lemmas extracted from the proof of `exists_hasDerivAt_eq_zero'`;
    - `exists_hasDerivAt_eq_zero`, `exists_hasDerivAt_eq_zero'`:
      make `f` and `f'` implicit;
    - `exists_deriv_eq_zero`, `exists_deriv_eq_zero'`:
      make `f` implicit.

[33mcommit 6b4ff5d9cb4e0ee1e766220ca85f4dad0f10900a[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Jul 26 09:26:19 2023 +0000

    feat(Filter/Germ): review algebraic instances (#6130)
    
    Motivated by the Sphere Eversion Project.

[33mcommit 10915fa2ca913975b5a02b2825d4b30d4f034b96[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Jul 26 09:26:18 2023 +0000

    chore: fix some `Set` defeq abuse, golf (#6114)
    
    - Use `{x | p x}` instead of `fun x ‚Ü¶ p x` to define a set here and there.
    - Golf some proofs.
    - Replace `Con.ker_apply_eq_preimage` with `Con.ker_apply`. The old version used to abuse definitional equality between `Set M` and `M ‚Üí Prop`.
    - Fix `Submonoid.mk*` lemmas to use `‚ü®_, _‚ü©`, not `‚ü®‚ü®_, _‚ü©, _‚ü©`.

[33mcommit 2ae56d8df5e685607ccecdf93eca70e0f83a1ee9[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Jul 26 09:26:16 2023 +0000

    feat: derivative of the inversion (#5937)
    
    Prove that inversion is smooth away from the center and its derivative is a scaled reflection.
    
    
    
    Co-authored-by: Oliver Nash <github@olivernash.org>

[33mcommit 9f14c412f193ed09d136228ab9b8c19ed6b27deb[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Jul 26 08:17:43 2023 +0000

    chore(*): add `protected` to `*.insert` theorems (#6142)
    
    Otherwise code like
    ```lean
    theorem ContMDiffWithinAt.mythm (h : x ‚àà insert y s) : _ = _
    ```
    interprets `insert` as `ContMDiffWithinAt.insert`, not `Insert.insert`.

[33mcommit 3bbd2041a878cf5b5e8e84580e2d554766ffed46[m
Author: kkytola <kalle.kytola@aalto.fi>
Date:   Wed Jul 26 06:04:34 2023 +0000

    feat (Mathlib.Topology.MetricSpace.ThickenedIndicator): Add convergence of plain old indicators. (#6047)
    
    Add lemmas `tendsto_indicator_thickening_indicator_closure` and `tendsto_indicator_cthickening_indicator_closure`.
    
    Co-authored-by: @sgouezel and @urkud
    
    
    
    Co-authored-by: kkytola <39528102+kkytola@users.noreply.github.com>

[33mcommit 4d5aef925cc37c54e564b75ec8ad60522e1d3522[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Jul 25 23:43:18 2023 +0000

    feat: add lemmas about `floor`/`ceil`/`fract`/`round` and `OfNat.ofNat` (#6037)
    
    Motivated by `fract_add_one` from the Sphere Eversion Project.

[33mcommit cf6056548e68fe605746a4b063cc0f501c4662f6[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Jul 25 20:35:19 2023 +0000

    feat(Dynamics/Birkhoff): define Birkhoff sum and Birkhoff average (#6131)

[33mcommit bafa8420ed498c91cde7478cb3aa4ea37041c38c[m
Author: Fr√©d√©ric Dupuis <dupuisf@iro.umontreal.ca>
Date:   Tue Jul 25 19:04:19 2023 +0000

    feat: miscellaneous lemmas about properties of `log` and `rpow` (#5987)

[33mcommit 3bece34dc26cf4d399129b12f1e2dd0f45d95dc0[m
Author: Kevin Buzzard <k.buzzard@imperial.ac.uk>
Date:   Tue Jul 25 16:52:05 2023 +0000

    fix: make an ideal lemma more constructive (#6080)
    
    This generalizes `Ideal.pow_multiset_sum_mem_span_pow` away from `Classical.decEq`.

[33mcommit 03720bd1962af9f667a921afa21dbbcb1c337abb[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Tue Jul 25 13:48:57 2023 +0000

    chore(Probability.Kernel): drop AEMeasurable assumptions  (#6129)

[33mcommit 0abcb52f703aad261491699c9a72b14616ea184d[m
Author: FMLJohn <417963616@qq.com>
Date:   Tue Jul 25 13:48:55 2023 +0000

    chore: change author name in Order/KrullDimesnion (#6128)

[33mcommit 69d98d946a3b3db920ccd2b0a3d8a9f2ef716934[m
Author: Kexing Ying <kexingying@gmail.com>
Date:   Tue Jul 25 13:48:54 2023 +0000

    feat(Probability/Kernel/Basic): Evaluation function of a finite kernel is integrable (#6111)
    
    
    
    Co-authored-by: JasonKYi <kexing.ying19@imperial.ac.uk>

[33mcommit 3b24f007f207825126eea4915236927bcbb24162[m
Author: Oliver Nash <github@olivernash.org>
Date:   Tue Jul 25 13:48:53 2023 +0000

    feat: basic set lemmas (#6010)

[33mcommit 2c8ded28b951c081725355ff1dfcc99ba0051021[m
Author: Kevin Buzzard <k.buzzard@imperial.ac.uk>
Date:   Tue Jul 25 12:56:26 2023 +0000

    fix: shorter names for some instances (#6123)

[33mcommit 34dea34e27437371cc44ffdb448c59cb36bebe82[m
Author: qawbecrdtey <qawbecrdtey@kaist.ac.kr>
Date:   Tue Jul 25 11:29:47 2023 +0000

    feat: lemmas about WithBot.unbot (#6124)

[33mcommit 86c30b0e4eae5787b6ac98f686c913299c36e1e7[m
Author: Christopher Hoskin <christopher.hoskin@gmail.com>
Date:   Tue Jul 25 10:57:25 2023 +0000

    feat(Topology/Order/LowerUpperTopology): Dual the lower topology (#5873)
    
    Defines the upper topology, which is the dual of the lower topology on a preorder.
    
    
    
    Co-authored-by: Christopher Hoskin <christopher.hoskin@overleaf.com>
    Co-authored-by: Christopher Hoskin <mans0954@users.noreply.github.com>

[33mcommit fb884ddfb1f319b41225168cd6292844f46a4691[m
Author: Julian Berman <Julian@GrayVines.com>
Date:   Tue Jul 25 09:31:14 2023 +0000

    fix: when apply? fails, say apply? not exact? (#6064)
    
    (Previously the message would say `"exact? didn't find any relevant lemmas"` even when the tactic used was `apply?`)

[33mcommit 9a53c460a3275f0e7b948599b4b4d9e9fd589dc4[m
Author: Scott Morrison <scott@tqft.net>
Date:   Tue Jul 25 08:10:52 2023 +0000

    fix: allow typeclass failures in exact? (#6113)
    
    As requested on [zulip](https://leanprover.zulipchat.com/#narrow/stream/217875-Is-there-code-for-X.3F/topic/.E2.9C.94.20tsum.20and.20HasSum/near/378162082).
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit a16538aff7bc6c1a7cea1ddca708124090f7e0ff[m
Author: Jason Yuen <jason_yuen2007@hotmail.com>
Date:   Tue Jul 25 07:35:07 2023 +0000

    chore: fix grammar mistakes (#6121)

[33mcommit 4bf4f50c0a1ac06e08be83bfb0f728b0341ca515[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Jul 25 06:02:10 2023 +0000

    chore(MeasureSpace): move `dirac` and `count` to new files (#6116)

[33mcommit 28532533761d68211368c04909aba98d96ba2202[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Jul 25 00:32:14 2023 +0000

    fix(ZFC/Basic): fix `Class.sep` (#6084)
    
    `Class.has_sep` was incorrectly ported to `Class.sep` (wrong type).

[33mcommit c652e603884371ddd609b7bee3c2229991d9d6fa[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Mon Jul 24 16:15:09 2023 +0000

    feat: Integrability of g ‚Ä¢ f for g continuous with compact support and f locally integrable (#6100)

[33mcommit 739d98d556266f2730eb9f9cb4be383da619a803[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Jul 24 16:15:08 2023 +0000

    feat: add 2 `coe_pow` lemmas (#6063)
    
    Also drop `@[simp]` on `LinearMap.pow_apply`.

[33mcommit 5d6a12ddf8c5ddb54897071731de15983abd04d7[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Jul 24 16:15:07 2023 +0000

    feat: lemmas about `writtenInExtChartAt` (#5495)

[33mcommit d6ce56d84c53198afa12b6de22f188dcfacd59ff[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Mon Jul 24 15:23:11 2023 +0000

    chore(topology/metric_space): forward-port leanprover-community/mathlib#18875 (#6095)

[33mcommit 393aac6490ccd232b98ded3e5580043b7ab2b28f[m
Author: Bulhwi Cha <chabulhwi@semmalgil.com>
Date:   Mon Jul 24 14:02:25 2023 +0000

    doc: fix type signature of `Relator.LiftFun` (#6099)

[33mcommit 4d06c76f57f023e846ad0abe42d3789b08fdc1ce[m
Author: kkytola <kalle.kytola@aalto.fi>
Date:   Mon Jul 24 14:02:24 2023 +0000

    feat(Algebra/IndicatorFunction): add indicator_iInter_apply as a counterpart to indicator_iUnion_apply. (#6078)
    
    Add lemma `mulIndicator_iInter_apply` and its additive version `indicator_iInter_apply`. These are entirely parallel to the existing `mulIndicator_iUnion_apply` and its additive version `indicator_iUnion_apply`.

[33mcommit 4722c35854d095582a05dad11ef843957f168e7a[m
Author: Thomas Browning <tb65536@uw.edu>
Date:   Mon Jul 24 12:23:29 2023 +0000

    feat: `DihedralGroup 0` is infinite (#6082)
    
    This PR adds an instance stating that `DihedralGroup 0` is infinite.

[33mcommit 46b312748fa25078d4a79b9e097171bbc2c0cdae[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Mon Jul 24 12:23:28 2023 +0000

    ci: do not let bors run if the awaiting-CI label is present (#6068)
    
    We already did this in mathlib3.
    
    This forward-ports https://github.com/leanprover-community/mathlib/pull/9478, which was created a few days after this file was ported in #52.

[33mcommit e8318a885b20614e55be33af4b8e4c5ade6b340d[m
Author: Scott Morrison <scott@tqft.net>
Date:   Mon Jul 24 12:23:27 2023 +0000

    chore: remove 'Ported by' headers (#6018)
    
    Briefly during the port we were adding "Ported by" headers, but only ~60 / 3000 files ended up with such a header.
    
    I propose deleting them.
    
    We could consider adding these uniformly via a script, as part of the great history rewrite...?
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 549500f660c808b62226f90eb959d21e5066126b[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Mon Jul 24 12:23:26 2023 +0000

    chore: forward-port leanprover-community/mathlib#19234 (#5879)
    
    Unfortunately I was not able to forward port the addition of a partially-explicit type to `kaehler_differential.End_equiv_derivation'`, as Lean 4 no longer allows metavariables in instance arguments.

[33mcommit 7dfc12d39650bb50393897cfb9525462781ffc2c[m
Author: Apurva <apurvnakade@gmail.com>
Date:   Mon Jul 24 10:54:32 2023 +0000

    feat(Analysis/Convex/Cone/Proper): define ProperCone.positive extending ConvexCone.positive (#6059)
    
    Defines `ProperCone.positive` extending `ConvexCone.positive`.
    
    Part of #6058

[33mcommit 30c87ba59134091ee645cc808c17dfeca95d47f4[m
Author: Antoine Chambert-Loir <antoine.chambert-loir@u-paris.fr>
Date:   Mon Jul 24 10:54:31 2023 +0000

    feat(Algebra.Ring.Equiv) : provide RingHom inverse (#5997)
    
    Define:
    * `OneHom.inverse` (and its additive version)
    * `NonUnitalRingHom.inverse`
    * `RingHom.inverse`
    
    
    
    Co-authored-by: Antoine Chambert-Loir <antoine.chambert-loir@math.univ-paris-diderot.fr>

[33mcommit 7d64af2acc2e3b5b097a9efd3f2006b2a10b8f18[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Jul 24 10:30:24 2023 +0000

    feat: define `DilationEquiv` (#5755)

[33mcommit a888c0457a6542eedcf32b8dcfb5da9c637af1b2[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Jul 24 10:30:23 2023 +0000

    feat: expand/review API about `gauge` (#5321)

[33mcommit 2bf9e8f131aa5c48cb2ccf177119e3c9fe78cc11[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Mon Jul 24 09:11:08 2023 +0000

    feat(Algebra/FreeAlgebra): support towers of algebras (#6072)
    
    This provide `Algebra R (FreeAlgebra A X)` when `Algebra R A`; previously we only had `Algebra R (FreeAlgebra R X)`.
    
    This also fixes some diamonds that would arise as a result of this new instance by filling the `zsmul` and `intCast` fields of `Module.addCommMonoidToAddCommGroup`, `Algebra.semiringToRing`, and the `nsmul` and `natCast` fields of the `Semiring` instance.

[33mcommit 95a48b5184be1fff2e29807ff28ef377e2872c5b[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Mon Jul 24 09:11:07 2023 +0000

    feat: add scalar tower instances for RingQuot and BilinForm (#6066)
    
    I tidied up some universe and type variables in the RingQuot file while I was here (in the first commit).

[33mcommit ccbfd851c5d0975a7c0b44184f183fe9becbcc79[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Mon Jul 24 07:51:05 2023 +0000

    feat: missing lemma on finprod, modelled on the one on Finset.prod (#6070)

[33mcommit 16563e081a219f75e5f4124e79e0e4be71cc1631[m
Author: Scott Morrison <scott@tqft.net>
Date:   Mon Jul 24 07:51:04 2023 +0000

    feat: lemmas about List.maximum (#6062)
    
    No particular objection if we only want one out of the `_ne_nil` and `_length_pos` pairs, but I like wall-to-wall coverage so `exact?` always works. :-)
    
    (For context, the place I needed these more naturally wanted the `_length_pos` lemmas.)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 5d43a7b1d666707ceff81f70fc7b3085ccd7b351[m
Author: Scott Morrison <scott@tqft.net>
Date:   Mon Jul 24 07:51:03 2023 +0000

    feat: lemma about WithBot.unbot (#6061)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit f5c15b357e23620df2430f45000eb5f62b7fba21[m
Author: Anne Baanen <vierkantor@vierkantor.com>
Date:   Mon Jul 24 07:23:02 2023 +0000

    refactor: turn `DimensionLEOne` into a class (#5833)
    
    The predicate that a ring has Krull dimension at most one was a regular `def`. I believe we should turn it into a class because:
     * The property follows from the ring structure, e.g. because it is a PID or because it is an integral closure.
     * We pass it around as a whole hypothesis, something instance synthesis can deal well with.
     * It makes the definition of `IsDedekindDomain` the conjunction of a number of classes, so we could switch to `extends` for all its fields.
    
    The main change in API is the addition of `Ideal.IsPrime.isMaximal` which is a restatement of the Krull dimension property with convenient dot notation: turn a prime ideal into a maximal ideal given the hypothesis that it's not zero.
    
    Zulip thread: https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/Should.20.60IsDedekindDomain.60.20extend.20.60IsDomain.60.3F/near/374515392

[33mcommit 898a8e784d3b2cc5cec156392edf446ecca48cae[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Jul 24 05:38:34 2023 +0000

    chore: use `¬∑` instead of `.` (#6085)

[33mcommit 0b4132c76105c6e96589ec3dd440250a1bc0f940[m
Author: Thomas Browning <tb65536@uw.edu>
Date:   Sun Jul 23 22:00:21 2023 +0000

    feat: Compositum of two normal field extensions is normal (#6077)
    
    This is a quick consequence of `normal_iSup` which states than an arbitrary compositum of normal field extensions is normal.

[33mcommit f8c1566ccfded661bfcb7b64f01a88be3a9d87dc[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sun Jul 23 10:55:17 2023 +0000

    refactor: use `NeZero` for measures (#6048)
    
    Assume `NeZero Œº` instead of `Œº.ae.NeBot` everywhere,
    and sometimes instead of `Œº ‚â† 0`.
    
    ## API changes
    
    - `Convex.average_mem`, `Convex.set_average_mem`,
      `ConvexOn.average_mem_epigraph`, `ConcaveOn.average_mem_hypograph`,
      `ConvexOn.map_average_le`, `ConcaveOn.le_map_average`:
      assume `[NeZero Œº]` instead of `Œº ‚â† 0`;
    - `MeasureTheory.condexp_bot'`, `essSup_const'`, `essInf_const'`,
      `MeasureTheory.laverage_const`, `MeasureTheory.laverage_one`,
      `MeasureTheory.average_const`:
      assume `[NeZero Œº]` instead of `[Œº.ae.NeBot]`
    - `MeasureTheory.Measure.measure_ne_zero`: replace with an instance;
    - remove `@[simp]` from `MeasureTheory.ae_restrict_neBot`,
      use `‚â† 0` in the RHS;
    - turn `MeasureTheory.IsProbabilityMeasure.ae_neBot`
      into a theorem because `inferInstance` can find it now;
    - add instances:
      - `[NeZero Œº] : NeZero (Œº univ)`;
      - `[NeZero (Œº s)] : NeZero (Œº.restrict s)`;
      - `[NeZero Œº] : Œº.ae.NeBot`;
      - `[IsProbabilityMeasure Œº] : NeZero Œº`;
      - `[IsFiniteMeasure Œº] [NeZero Œº] : IsProbabilityMeasure ((Œº univ)‚Åª¬π ‚Ä¢ Œº)`
        this was a theorem `MeasureTheory.isProbabilityMeasureSmul` assuming `Œº ‚â† 0`;

[33mcommit 641f7a785069b207155dea875f0ab858853936d7[m
Author: Kevin Buzzard <k.buzzard@imperial.ac.uk>
Date:   Sun Jul 23 09:39:59 2023 +0000

    fix: CompatibleSMul : Prop (#6065)
    
    Lean makes it `Type` otherwise. Why does this happen? Am I missing something?

[33mcommit 560eeb2b8ebd4d98257483aef6ddb81e598fa5b0[m
Author: Oliver Nash <github@olivernash.org>
Date:   Sat Jul 22 20:51:23 2023 +0000

    feat: the additive circle is path connected (#6022)

[33mcommit babf0075ee594888903148ccffc4579a4ecf2b51[m
Author: Xavier Roblot <46200072+xroblot@users.noreply.github.com>
Date:   Sat Jul 22 17:39:02 2023 +0000

    chore(Data.Finsupp.Basic): remove redundant instance (#6050)
    
    See [Zulip](https://leanprover.zulipchat.com/#narrow/stream/144837-PR-reviews/topic/.235671/near/377446475)

[33mcommit 1266bc6dae3bce9da898ed0c02c23ea2c7088dfe[m
Author: Mac <tydeu@hatpress.net>
Date:   Sat Jul 22 09:06:40 2023 +0000

    fix: ident-only `recall` w/ level params (#6004)
    
    See the [discussion](https://leanprover.zulipchat.com/#narrow/stream/270676-lean4/topic/recall.20command/near/376648750) on Zulip.

[33mcommit c4d2f6de5121fdbc0b7835dbfc3eb23bbe2510f2[m
Author: Kyle Miller <kmill31415@gmail.com>
Date:   Sat Jul 22 07:26:04 2023 +0000

    fix: `fin_cases` needed an `instantiateMVars` (#6046)

[33mcommit 8db9f1ec67caabf69766e89fa315506c3ca685e1[m
Author: Matthew Robert Ballard <matt@mrb.email>
Date:   Sat Jul 22 07:26:03 2023 +0000

    chore: add aesop wrappers that pass suggestions (#6044)
    
    Adds `aesop_cat?` `aesop_graph?` and `restrict_tac?`

[33mcommit 46f71c61691f26accd73c5ee411801d2d696bf0c[m[33m ([m[1;33mtag: port-complete[m[33m)[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Fri Jul 21 22:53:46 2023 +0000

    chore(Data/Option): add 3 missing lemmas and some `align`s (#6049)
    
    The lemmas were lost while porting. Also drop `Option.getD_coe` since it is the same as `Option.getD_some`.

[33mcommit ddecd77f7936627657245223472f78d6e4c2bfc9[m
Author: Henrik B√∂ving <hargonix@gmail.com>
Date:   Fri Jul 21 22:32:28 2023 +0000

    doc: add yaml doc files to mathlib4_docs output (#6043)

[33mcommit bd0c9574a6de2bb48326a9e7a855f70208646ae1[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Fri Jul 21 16:03:40 2023 +0000

    feat: port yaml files from mathlib3 (#6026)
    
    This was done with a locally-hacked version of `fix-comments.py`, then manually fixing the last 50 or so missing instance names.
    
    This includes CI that verifies the names are valid.

[33mcommit 986b4ab362dc9fc0a898e305f2349209be9ec2a5[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Fri Jul 21 15:43:35 2023 +0000

    Add missing readmes (#6031)
    
    These are copied with minimal modification from mathlib3.

[33mcommit 88fb181bec1b7baaba3ec7529fa266b06e1862dc[m
Author: Anatole Dedecker <anatolededecker@gmail.com>
Date:   Fri Jul 21 14:16:08 2023 +0000

    feat(Topology.Constructions): restriction of a closed map (#6013)

[33mcommit ef85ff8bdc92ed245b67b1f65a4ccc9e858463b4[m
Author: Christopher Hoskin <christopher.hoskin@gmail.com>
Date:   Fri Jul 21 14:16:07 2023 +0000

    feat(Data/Finset): Add a few Finset lemmas (#5933)
    
    Adds four `Finset` lemmas:
    - `Nonempty.inl` and `Nonempty.inr` - unions with Nonempty sets are Nonempty
    - `sup'_mono` and `inf'_mono` - analogues of `sup_mono` and `inf_mono`.
    
    
    
    Co-authored-by: Oliver Nash <github@olivernash.org>

[33mcommit 1bbe6b230ced4705cc8f114b9ef2443620e21fe7[m
Author: Anatole Dedecker <anatolededecker@gmail.com>
Date:   Fri Jul 21 14:16:06 2023 +0000

    feat(Analysis.Seminorm): some results about the order on seminorms (#5807)

[33mcommit 0b6307b294029d4d7fef77a60efad257945991e5[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Fri Jul 21 14:16:05 2023 +0000

    refactor: add notation for `Dilation _ _`, extend API (#5753)
    
    - add notation `X ‚Üí·µà Y` for `Dilation X Y`;
    - add `Dilation.ratio_of_trivial`, `Dilation.ratio_of_subsingleton`;
    - rename `Dilation.id_ratio` to `Dilation.ratio_id`;
    - rename `Dilation.comp_ratio` to `Dilation.ratio_comp'`, add
      `Dilation.ratio_comp` with TC assumptions instead of an explicit
      hypothesis;
    - add `Dilation.ratio_mul`, `Dilation.ratio_one`, `Dilation.ratioHom`,
      and `Dilation.ratio_pow`.

[33mcommit 8fe2ce366cdcf5d06ea7d8de708d81e7d4df8873[m
Author: Xavier Roblot <46200072+xroblot@users.noreply.github.com>
Date:   Fri Jul 21 13:02:21 2023 +0000

    feat(LinearAlgebra.Finsupp): add countable instance (#5671)
    
    Add the instance:
    ```lean
    instance {Œπ : Type _} [Countable R] [Countable Œπ] (v : Œπ ‚Üí M) : Countable (Submodule.span R (Set.range v))
    ```
    which is needed to be able to apply Minkowski theorem to ‚Ñ§-lattices. This instance, in turn, uses the new instance:
    ```lean
    instance [Countable Œ±] [Countable M] : Countable (Œ± ‚Üí‚ÇÄ M)
    ```

[33mcommit e11c53bc530d461f554174abb2ea6c584bbea38c[m
Author: Kyle Miller <kmill31415@gmail.com>
Date:   Fri Jul 21 12:37:45 2023 +0000

    feat: infinite (preconnected, locally finite) graphs have nonempty ends (#5916)
    
    Port/review of [mathlib#18410](https://github.com/leanprover-community/mathlib/pull/18410) directly to Mathlib4.
    
    Co-authored-by: R√©mi Bottinelli <remi.bottinelli@bluewin.ch>
    Co-authored-by: Anand Rao <anand.rao.art@gmail.com>
    
    
    
    Co-authored-by: Oliver Nash <github@olivernash.org>

[33mcommit 738e46a7f794a16ad6854afa7c7f3d2d502e248c[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Fri Jul 21 11:18:27 2023 +0000

    feat(MeasureTheory.Function.AEEqOfIntegral): characterize a locally integrable function by its integral on compact sets (#5876)
    
    We show that, if a locally integrable function has zero integral on all compact sets, then it vanishes almost everywhere.

[33mcommit 995893e5aaa6c61054bcae4db9716ce706fc2cfa[m
Author: Peter Nelson <71660771+apnelson1@users.noreply.github.com>
Date:   Fri Jul 21 10:06:00 2023 +0000

    feat: minimals/maximals API (#5911)
    
    This PR adds some API to `Data.Order.Minimal`, with a few rewrite lemmas for membership in sets of maximals/minimals, lemmas that give sufficient conditions for two sets having the same maximal/minimal elements, and a bunch of lemmas about images/preimages of sets of maximal elements.

[33mcommit aa43be2f855e2261cb76d50ed4f2fbc8471041c0[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Fri Jul 21 08:49:58 2023 +0000

    feat: add some missing simp lemmas (#6028)

[33mcommit 33e6609196fc8b6d2dac2645d6fd94db16e3e05e[m
Author: David Kurniadi Angdinata <dka31@cantab.ac.uk>
Date:   Fri Jul 21 08:49:57 2023 +0000

    feat(Data/Fin/VecNotation): add Matrix.cons_val_two (#5950)

[33mcommit 6c73d07412a06b8c3c3fd3da7ba87706d7760f01[m
Author: Kevin Buzzard <k.buzzard@imperial.ac.uk>
Date:   Fri Jul 21 08:19:24 2023 +0000

    fix: MvPolynomial.Derivation module docstring (#6025)

[33mcommit 160cfb8cbdd4c483cf278b29cd513978d78942a7[m
Author: Bulhwi Cha <chabulhwi@semmalgil.com>
Date:   Fri Jul 21 06:53:16 2023 +0000

    doc: fix grammar (#6027)

[33mcommit af306e0ad0f9b72ef8df0180a7fb604ea674ec15[m
Author: Oliver Nash <github@olivernash.org>
Date:   Fri Jul 21 04:29:10 2023 +0000

    feat: basic measure / topology lemmas (#5986)

[33mcommit 50ec11d4136f91f701e1a24c5102097a51560eec[m
Author: Alex J Best <alex.j.best@gmail.com>
Date:   Fri Jul 21 01:04:00 2023 +0000

    chore: don't mark names starting with eq as internal (#6036)
    
    This was preventing tactics from finding some user lemmas, see https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/library_search.20fails.20to.20find.20theorem/near/377013391 for discussion. Since https://github.com/leanprover/lean4/commit/4d1343d67005749367a08d2964a1dfb0bf09d3dd these are prefixed with an underscore by lean.

[33mcommit a1451be4b1cafd4d5e780a690b9e26c8891d3220[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Thu Jul 20 12:44:08 2023 +0000

    feat(NumberTheory/Padics/PadicVal): lemmas with factorial (#5789)
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit cf06ef757c5b473d895e6257c93045641bdf6b57[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Thu Jul 20 08:16:45 2023 +0000

    feat: left and right homology data are dual notions (#5674)
    
    This PR shows that left and right homology data of short complexes are dual notions.

[33mcommit 02f74960178f1af57a532ebbfb84001ffcf01b2e[m
Author: Heather Macbeth <25316162+hrmacbeth@users.noreply.github.com>
Date:   Thu Jul 20 06:11:01 2023 +0000

    chore: `gcongr` attributes for sup/inf, min/max, union/intersection/complement, image/preimage (#6016)

[33mcommit 852259cbca2f0146229ef7909017d13cb72686dd[m
Author: Patrick Massot <patrickmassot@free.fr>
Date:   Thu Jul 20 06:11:00 2023 +0000

    chore: fix docstring (#6012)

[33mcommit 5070d547230402b61269ec438e9a4a42c5ba7155[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Thu Jul 20 05:23:21 2023 +0000

    chore: fix a name (#6015)
    
    Rename `LocalHomeomorph.trans_equiv_eq_trans`
    to `LocalHomeomorph.transHomeomorph_eq_trans`.
    
    Also fix the module docstring.

[33mcommit 11832fad742749c2fce563d73dae733581d846f5[m
Author: Alex J Best <alex.j.best@gmail.com>
Date:   Thu Jul 20 01:29:39 2023 +0000

    feat: removeNe preprocessor for splitting on inequalities in linarith (#6014)

[33mcommit 876c8e0e48345cd66d9703b8e5920061da97b9f7[m
Author: negiizhao <egresf@gmail.com>
Date:   Thu Jul 20 00:27:41 2023 +0000

    chore: golf `set_theory/ordinal/basic` (#5581)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 3f8ba088046209b758fc9127fea169ec9a72341a[m
Author: Bolton Bailey <bolton.bailey@gmail.com>
Date:   Wed Jul 19 19:29:05 2023 +0000

    feat: add lemmas about natDegree (#5735)
    
    Adds two lemmas about Polynomial.natDegree
    
    Co-authored-by: Pratyush Mishra
    
    
    
    Co-authored-by: Oliver Nash <github@olivernash.org>

[33mcommit e121b524871243fd87f403477264fbac90baed03[m
Author: Arend Mellendijk <arend.mellendijk@gmail.com>
Date:   Wed Jul 19 18:49:42 2023 +0000

    feat(NumberTheory/ArithmeticFunction): define pointwise division of arithmetic functions (#5774)
    
    Define pointwise division of arithmetic functions and prove it preserves multiplicativity.

[33mcommit 752865f250ec52023d8634f4759dc930ec9903a6[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Jul 19 16:53:21 2023 +0000

    chore: add 2 `#align_import`s (#6003)
    
    - `Mathlib/Analysis/Calculus/BumpFunction/Convolution.lean` was extracted from `Mathlib/Analysis/Convolution.lean` in #5940
    - `Mathlib/Geometry/Euclidean/PerpBisector.lean` has lemmas moved from `Mathlib/Geometry/Euclidean/Basic.lean` in #5627

[33mcommit eb706c169328537bb3738144aea03c7db7b9802b[m
Author: Bulhwi Cha <chabulhwi@semmalgil.com>
Date:   Wed Jul 19 15:38:07 2023 +0000

    doc: add missing word (#6006)

[33mcommit 05eae2ddb1c14830f1c351753d6d1fe2b5aec5c4[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Wed Jul 19 14:22:07 2023 +0000

    feat(NumberTheory/Padics/PadicVal): padicValNat_factorial (#5802)
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit 91db558a26be57eb3c0e40f799ffd4fedb15880b[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Wed Jul 19 12:59:07 2023 +0000

    fix: parse new headers for the outofsync bot (#6000)

[33mcommit 4eb7e8403cb392879e4f7cf987050c103a20cd1c[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Wed Jul 19 11:59:40 2023 +0000

    feat(NumberTheory/Padics/PadicVal): factorial_choose (#5862)
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit 293041f7d3d2ff4c724aa090de044357e5c1503f[m
Author: Bolton Bailey <bolton.bailey@gmail.com>
Date:   Wed Jul 19 11:17:59 2023 +0000

    feat: add card_units_add_one lemma (#5738)
    
    A lemma to reexpress card_units without subtraction.

[33mcommit 5dcd1aa417331673ff675eea89cdaca235fd89f5[m
Author: Scott Morrison <scott@tqft.net>
Date:   Wed Jul 19 08:39:03 2023 +0000

    chore: remove unneeded unsafe modifiers in ListM (#5989)
    
    These were left over from the era when `ListM` was `unsafe`.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 89aa3a3b2f4e58193a3209d9d2457d951382ef0c[m
Author: Scott Morrison <scott@tqft.net>
Date:   Wed Jul 19 08:39:02 2023 +0000

    chore: script to replace headers with #align_import statements (#5979)
    
    
    - [x] depends on: #5966
    
    [![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit d3b4f0c82e03ade7832e16f01bc2472fdf6a6f26[m
Author: Gabriel Ebner <gebner@gebner.org>
Date:   Wed Jul 19 08:39:00 2023 +0000

    chore: bump quote4 (#5975)

[33mcommit 41fc6fc0caa07275d1eee2464a2b7428c53c2cc1[m
Author: Kyle Miller <kmill31415@gmail.com>
Date:   Wed Jul 19 08:17:48 2023 +0000

    docs: fix links in conv guides and other typos (#5982)

[33mcommit d31423ae9d5997e4ba3abd4b2d85767cd84966e4[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Jul 19 07:03:02 2023 +0000

    feat: +1 proof that Sorgenfrey plane is not normal (#5775)

[33mcommit 965d6f60a032be73b0faf059c54285e43d0eb3ae[m
Author: Mario Carneiro <di.gama@gmail.com>
Date:   Wed Jul 19 05:37:55 2023 +0000

    feat: make `lake exe cache get!` unpack everything (#5991)
    
    Previously `lake exe cache get!` would download all files from the server, which fixes corrupted files in the `.cache` directory, but it would still skip files up to date according to the `.trace` files, so corrupted files in the `build` directory would not be fixed. (Before `leantar` all files would be unpacked regardless.) Now all files are unpacked when using `get!`. (This could be a separate option, but `get!!` is probably too confusing.)

[33mcommit 12343aa5428690e4312498239f144e34db6a3f58[m
Author: Scott Morrison <scott@tqft.net>
Date:   Wed Jul 19 05:37:54 2023 +0000

    chore: cleanup whitespace (#5988)
    
    Grepping for `[^ .:{-]  [^ :]` and reviewing the results. Once I started I couldn't stop. :-)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 9b5b82411dc0219d8c053e5fbef7c56eed2d871b[m
Author: Scott Morrison <scott@tqft.net>
Date:   Wed Jul 19 05:37:53 2023 +0000

    fix: correct doc-string for LocallyFiniteOrderTop/Bot (#5956)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 26d0eab43f05db777d1cf31abd31d3a57954b2a9[m
Author: Mario Carneiro <di.gama@gmail.com>
Date:   Wed Jul 19 05:16:55 2023 +0000

    fix: mv leantar.exe (#5985)
    
    fixes #5984

[33mcommit b60d88437fa2beee9e24aef69220a9e36b884ba0[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Jul 19 04:15:00 2023 +0000

    chore: golf some proofs (#5983)
    
    Use `Nat.cast` lemmas directly
    instead of rewriting using `Nat.cast_withBot`.

[33mcommit 1c8e7900b1f4107c1cf8ff9ea9384317709f987c[m
Author: Scott Morrison <scott@tqft.net>
Date:   Wed Jul 19 02:48:44 2023 +0000

    feat: missing WellFoundedLT instances (#5899)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit a9956b67f04d896bf50b961d1d112b3848b6a2ab[m
Author: Scott Morrison <scott@tqft.net>
Date:   Wed Jul 19 02:48:43 2023 +0000

    feat: product instances for `OrderedSub` (#5890)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 801ae80220bdadbf3b1fc84c44cdaa8d994dfd8e[m
Author: damiano <adomani@gmail.com>
Date:   Wed Jul 19 01:46:48 2023 +0000

    feat(Tactic/ComputeDegree): add helper lemmas for `compute_degree_le` (#5978)
    
    This PR is a prequel to #5882: it simply adds the helper lemmas about polynomials that the tactic uses.
    
    [Zulip discussion ](https://leanprover.zulipchat.com/#narrow/stream/144837-PR-reviews/topic/.235882.20.60compute_degree_le.60)
    
    
    
    Co-authored-by: Yury G. Kudryashov <urkud@urkud.name>

[33mcommit 2a2e08c951e4e1525ae4354a0182d2debfafadc6[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Jul 18 23:02:55 2023 +0000

    refactor: split `BumpFunctionInner` (#5940)
    
    Fixes #4755

[33mcommit 15ef30fa76608b11fe584c6499cce48e15e3c25f[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Tue Jul 18 21:46:23 2023 +0000

    feat: define `NonUnitalStarSubalgebra`s and develop basic API (#5537)
    
    This continues the non-unital-ization of mathlib
    
    This PR also redefines `StarSubalgebra.centralizer` so that it no longer requires the set `s` provided to be closed under `star`, and instead the carrier is just the `Set.centralizer (s ‚à™ star s)`. Consequently, this changes some things in von Neumann algebras, where we now need to see that `Set.centralizer (‚ÜëS ‚à™ star ‚ÜëS) = Set.centralizer ‚ÜëS`, where `S` is a `StarSubalgebra`. Therefore we add the `simp` lemma `StarMemClass.star_coe_eq`.
    
    - [x] depends on: #5151
    - [x] depends on: #5512

[33mcommit ea67efc21e4e1496f0a1d954cd0c0a952523133a[m
Author: Anatole Dedecker <anatolededecker@gmail.com>
Date:   Tue Jul 18 16:36:22 2023 +0000

    feat(Algebra/Group/[Pi, InjSurj]): add missing boilerplate for `InvOneClass` and `DivInvOneMonoid` (#5904)

[33mcommit e507f376cf8def4d84e636c00c3454f2262fcf71[m
Author: David Kurniadi Angdinata <dka31@cantab.ac.uk>
Date:   Tue Jul 18 14:22:13 2023 +0000

    feat(Data/MvPolynomial/Basic): add multivariate polynomial evaluation lemmas (#5949)

[33mcommit 58e967b79828f5b4cf91157f9a88577bf3baaff2[m
Author: Kevin Buzzard <k.buzzard@imperial.ac.uk>
Date:   Tue Jul 18 13:58:38 2023 +0000

    fix: coercions in ZMod.coe_add_eq_ite (#5981)
    
    The change in behaviour of coercions in mathlib4 meant that this lemma was translated incorrectly (into a much simpler statement).

[33mcommit 69bb9bcba105e0fde62c19e71e0b28b9fa3f9cde[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Tue Jul 18 12:47:31 2023 +0000

    feat(Data/Nat/Digits): two lemmas (#5778)
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit f287c039ed66259399f8d00ee3489ff14d4b53e6[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Jul 18 11:09:51 2023 +0000

    feat: port Order.Irreducible (#5976)
    
    
    
    Co-authored-by: Scott Morrison <scott@tqft.net>

[33mcommit 2f3976beccd935ce8ba55af3316726df2c64a32e[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Jul 18 10:17:40 2023 +0000

    fix: use `isSimp := false` in `simps` (#5977)
    
    Lean 3 `@[simps { attrs := [] }]` should be translated to `@[simps (config := { isSimp := false })]` to avoid adding `@[simp]` attribute.

[33mcommit 1c34db811e7011a2f990ebe7584124e0fb829e70[m
Author: Arend Mellendijk <arend.mellendijk@gmail.com>
Date:   Tue Jul 18 10:17:39 2023 +0000

    feat(Data/Nat/Squarefree): add divisors_filter_squarefree_of_squarefree (#5835)
    
    Add a lemma that helps when applying `divisors_filter_squarefree` or `sum_divisors_filter_squarefree` in the case where `n` is squarefree.

[33mcommit beb5b358038890913e298c80aa95cbaaf1a0bec9[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Jul 18 10:17:38 2023 +0000

    chore: use `OrderHomClass` for `ClosureOperator` (#5820)

[33mcommit f540e33587bb94541ce920f881599b0ac46808c0[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Tue Jul 18 08:48:25 2023 +0000

    feat: add an `align_import` command (#5966)
    
    For now this uses the new command in just one file. If this looks good, I'll make a follow-up to apply this change everywhere.

[33mcommit 593a84d52f9bbb762e152b7e58091e988e50948d[m
Author: Scott Morrison <scott@tqft.net>
Date:   Tue Jul 18 07:35:08 2023 +0000

    chore: forward port #18999 (#5974)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit a3e15d84c240dbe5089cec3f55d0379a9fe72a52[m
Author: Scott Morrison <scott@tqft.net>
Date:   Tue Jul 18 05:18:46 2023 +0000

    chore: forward port #14324 (#5973)
    
    This is the remainder of the forward port of https://github.com/leanprover-community/mathlib/pull/14324.
    
    See https://leanprover-community.github.io/mathlib-port-status/file/set_theory/ordinal/natural_ops for the relevant #outofsync page.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit bb6d52f7d96042a6d80a3e2077b9e5ca93f799df[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Tue Jul 18 03:34:07 2023 +0000

    chore: tidy various files (#5971)

[33mcommit 0b4fd1dfe89d9f4a5775cdd1876fb859ce440819[m
Author: Heather Macbeth <25316162+hrmacbeth@users.noreply.github.com>
Date:   Tue Jul 18 03:34:06 2023 +0000

    chore: golf IMO 2013 q5 (#5967)

[33mcommit 4acd15805540368a14da77f2567d4551d1ca36be[m
Author: Kyle Miller <kmill31415@gmail.com>
Date:   Tue Jul 18 03:34:05 2023 +0000

    fix: put the convert tactic into a namespace (#5963)

[33mcommit 491c4bef8822423f23f94b6f9581ec77a3282c88[m
Author: Alex J Best <alex.j.best@gmail.com>
Date:   Tue Jul 18 03:34:04 2023 +0000

    chore: cleanup universes in tensor product basis (#5906)
    
    During the Leiden workshop we hit a problem showing that the dimension of a tensor product is preserved under base extension, this is due to `Algebra.TensorProduct.basis` having a loose universe variable.
    We fix this, which makes the following code work.
    I'm not 100% sure this is the right variable to set, but it seemed somewhat appropriate
    ```lean
    section basis
    variable [Field k] [AddCommGroup M] [Module k M] [Ring A] [Algebra k A] [Module A M] [IsScalarTower k A M]
      [StrongRankCondition A] [Module.Free k M] [Module.Free A M] [Module.Free k A]
    
    open TensorProduct -- for notation
    
    noncomputable
    def _root_.Basis.base_change (h : Basis Œπ k M) : Basis Œπ A (A ‚äó[k] M) :=
    Algebra.TensorProduct.basis A h -- needs a mathlib change for this to work!
    
    lemma base_change_module_rank_preserved : Module.rank k M = Module.rank A (A ‚äó[k] M) := by
      obtain ‚ü®‚ü®_, bM‚ü©‚ü© := Module.Free.exists_basis (R := k) (M := M)
      rw [‚Üê bM.mk_eq_rank'', (bM.base_change (A := A)).mk_eq_rank'']
    end basis
    
    ```

[33mcommit 4fd905fdd1d816e5532db0c57df84e08c290ae82[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Tue Jul 18 03:34:03 2023 +0000

    chore: speed up FiniteField.two_pow_card (#5865)
    
    This is still awful, but slightly less so.

[33mcommit 2db59610d441740dbbee840bab83434e82282a71[m
Author: Fr√©d√©ric Dupuis <dupuisf@iro.umontreal.ca>
Date:   Tue Jul 18 03:34:02 2023 +0000

    feat: `positivity` extension for `Real.log` of natural/integer casts and numeric literals (#5839)
    
    This PR adds a positivity extension for expressions of the form `Real.log n` where `n` is a cast from a natural number or an integer. (Since `positivity` can't handle conditions like `1 ‚â§ x`, this is pretty much the best we can do for the log.)
    
    Also, the namespace of the positivity extension for `exp` is corrected.

[33mcommit 76f0c27abd55d179a65ed3caa258fdb837697fa5[m
Author: Kyle Miller <kmill31415@gmail.com>
Date:   Tue Jul 18 03:34:01 2023 +0000

    docs: introduction and guide to `conv` mode (#5800)
    
    Add some overviews for `conv` mode. These are added as a `lean_lib` so that we can use docgen to generate the documentation and include it in a `docs` library in the sidebar.
    
    This means
    1. the documentation can be reviewed like any other mathlib PR
    2. the documentation will be deployed like any other mathlib module documentation
    3. this sort of documentation can use the exact same markdown extensions to link to other parts of the library

[33mcommit c1d81a5d4b748ac5e7d6be1f79ee8dea3216a5a8[m
Author: negiizhao <egresf@gmail.com>
Date:   Tue Jul 18 03:33:59 2023 +0000

    feat: remove unnecessary `Classical.choice` in `split_ifs` (#5575)
    
    In rare cases, `Decidable p` is not an instance and `split_ifs` is still classical. I am not familiar with tactic and not sure if there is an easy method to deal with these cases.

[33mcommit 6dfe3d469773a4e707c667003d32e74e133c1ef4[m
Author: Gabriel Ebner <gebner@gebner.org>
Date:   Tue Jul 18 03:33:58 2023 +0000

    feat: CompletelyDistribLattice (#5238)
    
    Adds new `CompletelyDistribLattice`/`CompleteAtomicBooleanAlgebra` classes for complete lattices / complete atomic Boolean algebras that are also completely distributive, and removes the misleading claim that `CompleteDistribLattice`/`CompleteBooleanAlgebra` are completely distributive.
    
     - Product/pi/order dual instances for completely distributive lattices, etc.
     - Every complete linear order is a completely distributive lattice.
     - Every atomic complete Boolean algebra is a complete atomic Boolean algebra.
     - Every complete atomic Boolean algebra is indeed (co)atom(ist)ic.
     - Atom(ist)ic orders are closed under pis.
     - All existing types with `CompleteDistribLattice` instances are upgraded to `CompletelyDistribLattice`.
     - All existing types with `CompleteBooleanAlgebra` instances are upgraded to `CompleteAtomicBooleanAlgebra`.
    
    See [related discussion on Zulip](https://leanprover.zulipchat.com/#narrow/stream/116395-maths/topic/Are.20CompleteDistribLattices.20completely.20distributive.3F/near/366667419).

[33mcommit 6dbfca4761f385a55a18fe3d3ed7e00f1de5eef8[m
Author: Heather Macbeth <25316162+hrmacbeth@users.noreply.github.com>
Date:   Tue Jul 18 02:54:52 2023 +0000

    chore: `gcongr` attributes for `exp` (#5968)

[33mcommit 188909c8c714b44dde6eb262c96c86519fb4789f[m
Author: Mario Carneiro <di.gama@gmail.com>
Date:   Mon Jul 17 23:40:33 2023 +0000

    fix: make `warningAsError` a weak arg (#5970)

[33mcommit f742d1f41237068c480e24207c7edcfe12eed380[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Mon Jul 17 23:40:32 2023 +0000

    fix: re-port topology.category.top.limits.cofiltered (#4986)
    
    This was caught up in a simultaneous split and port, and the dashboard can't tell if its in sync as a result.
    
    This just re-ports the file, which brings in the formatting changes preferred by the latest mathport.
    Most of the changes are whitespace due to the body of `classical` not being indented any more.

[33mcommit 59447f3346e26a3025c1ef541e5cffbaa094098c[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Mon Jul 17 23:40:31 2023 +0000

    fix: re-port topology.category.top.limits.konig (#4985)
    
    This was caught up in a simultaneous split and port, and wasn't quite done correctly as a result
    
    
    
    Co-authored-by: Kevin Buzzard <k.buzzard@imperial.ac.uk>
    Co-authored-by: Scott Morrison <scott@tqft.net>
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 6f33b0b48213ec52218235da9005809df1718dba[m
Author: Kevin Buzzard <k.buzzard@imperial.ac.uk>
Date:   Mon Jul 17 22:16:20 2023 +0000

    feat: add examples to docstrings (#5815)

[33mcommit ede7b29c35adaec67cf0627027b0893c7aaaca19[m
Author: Mario Carneiro <di.gama@gmail.com>
Date:   Mon Jul 17 18:09:39 2023 -0400

    feat: use `leantar` in `lake exe cache` (#5710)
    
    * feat: use `leantar` in `lake exe cache`
    
    * run pack in parallel
    
    * bump leantar
    
    * version check
    
    * use hex for hashes
    
    * chore: bump to 0.1.2, add .exe on windows
    
    * fix: file extension on linux
    
    * fix: arch is reported as arm64 sometimes
    
    * fix: statically linked 0.1.3

[33mcommit f3dd5c320d6039ddbc829e869d918f8c1fd24920[m
Author: Heather Macbeth <25316162+hrmacbeth@users.noreply.github.com>
Date:   Mon Jul 17 14:28:36 2023 -0400

    Revert "hrmacbeth-imo2013-q5"
    
    This reverts commit 29028a36c37ed4a3709e35867ef3edf157a402b4.

[33mcommit 29028a36c37ed4a3709e35867ef3edf157a402b4[m
Author: Heather Macbeth <25316162+hrmacbeth@users.noreply.github.com>
Date:   Mon Jul 17 14:23:55 2023 -0400

    hrmacbeth-imo2013-q5

[33mcommit 039dff725d0a2a4765c2d1b0dc12658969e2c826[m
Author: Kevin Buzzard <k.buzzard@imperial.ac.uk>
Date:   Mon Jul 17 14:51:38 2023 +0000

    fix: change instance priorities in algebra hierarchy (#5941)
    
    WIP: experiments with changing instance priorities. See https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/std4.20.2F.20Lean4.20bump/near/374996945 .
    
    
    
    Co-authored-by: Floris van Doorn <fpvdoorn@gmail.com>

[33mcommit 6259085260e400c8b71d9b9e73a76f2d1f36b428[m
Author: Jeremy Tan Jie Rui <reddeloostw@gmail.com>
Date:   Mon Jul 17 12:18:43 2023 +0000

    feat: port Init.Data.Sigma.Lex (#5948)
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit a9728c0d43f808080ea9ac60a24d347a3dfde0c8[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Jul 17 10:33:06 2023 +0000

    feat: a type is denumerable iff it is countable and infinite (#5951)
    
    From the sphere eversion project

[33mcommit bfc43ce2391dcaa33ee0e92e2a447e652b807e8a[m
Author: Anatole Dedecker <anatolededecker@gmail.com>
Date:   Mon Jul 17 08:55:58 2023 +0000

    feat(Logic.Equiv.Basic): dependent version of `Equiv.prodUnique` (#5817)

[33mcommit fa05951a270fef2873666c46f138e90338cd48d6[m
Author: Gabriel Ebner <gebner@gebner.org>
Date:   Mon Jul 17 07:06:04 2023 +0000

    chore: bump quote4 (#5955)
    
    This update removes the infamous "incompatible metavariable" error.

[33mcommit f49a8091b07f85d2cf3c37d56a42f25e4db9d5a4[m
Author: Scott Morrison <scott@tqft.net>
Date:   Mon Jul 17 07:06:02 2023 +0000

    chore: partial forward port of 14324 (#5954)
    
    This doesn't yet forward port the changes to Mathlib/SetTheory/Ordinal/NaturalOps.lean.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 0ad269754f8a9109905705ff017d5e234b1c7272[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Jul 17 07:06:00 2023 +0000

    feat: add `LocallyFinite.prod_left` and `LocallyFinite.prod_right` (#5953)
    
    From the sphere eversion project.

[33mcommit e2952a73166b34a5f5442749e43d1141bf75d167[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Mon Jul 17 07:05:59 2023 +0000

    feat: make start_port.sh work for core too (#5945)
    
    Tested on core files as `start_port.sh Mathlib/Init/Core` and seems to do something reasonable.
    
    
    
    Co-authored-by: Parcly Taxel <reddeloostw@gmail.com>

[33mcommit c3c3a2d4d9e92ce8cf9e0b13e59ee07195aeff07[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Mon Jul 17 07:05:57 2023 +0000

    chore: sync references.bib with mathlib3 (#5903)

[33mcommit bb0e79eca7742353677fb5ef0dc04afa04cb39ee[m
Author: Pol'tta / Miyahara K≈ç <pol_tta@outlook.jp>
Date:   Mon Jul 17 07:05:56 2023 +0000

    style: `Init.CcLemmas` -> `Init.CCLemmas` (#5886)

[33mcommit 26d6c6ac3ae95ba26d85b344471f7e553f72950f[m
Author: Matthew Robert Ballard <kmill31415@gmail.com>
Date:   Mon Jul 17 07:05:54 2023 +0000

    chore (CategoryTheory.Monad.Monadicity): un-leak notation (#5830)
    
    
    
    Co-authored-by: Matthew Ballard <matt@mrb.email>

[33mcommit 43e6295bdc534f4dc01e6b35fd8c3beb8ec850d2[m
Author: Scott Morrison <scott@tqft.net>
Date:   Mon Jul 17 07:05:53 2023 +0000

    feat: #find_home (#5731)
    
    
    
    Co-authored-by: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit ff552ca17e552370b41b488ef7adf1eaba7ccc24[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Jul 17 05:19:39 2023 +0000

    fix: add `supportInterpreter := true` (#5931)
    
    Fixes `lake exe graph` on Linux.

[33mcommit 307d5488ac6bcc57639635b1f118e6e50dbeacca[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Mon Jul 17 03:51:33 2023 +0000

    feat(MeasureTheory.Integral.Bochner): drop completeness requirement from the definition (#5910)
    
    The notion of Bochner integral of a function taking values in a normed space `E` requires that `E` is complete. This means that whenever we write down an integral, the term contains the assertion that `E` is complete.
    
    In this PR, we remove the completeness requirement from the definition, using the junk value `0` when the space is not complete. Mathematically this does not make any difference, as all reasonable applications will be with a complete `E`. But it means that terms involving integrals become a little bit simpler and that completeness will not have to be checked by the system when applying a bunch of basic lemmas on integrals.

[33mcommit ae594c90f4755eef25d369b7c669721e0d5ecb71[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Mon Jul 17 02:18:16 2023 +0000

    feat: `finset.uIcc` on concrete structures (#5946)
    
    Match https://github.com/leanprover-community/mathlib/pull/18838
    
    
    
    
    Co-authored-by: Scott Morrison <scott@tqft.net>
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 44d1fd9377192f6459980d48ea794b5f56d888ce[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Mon Jul 17 01:16:48 2023 +0000

    feat: Lebesgue average (#5810)
    
    Match https://github.com/leanprover-community/mathlib/pull/19199
    
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 4a7628dca09b07f1c7416b9409df801b05ed097c[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Mon Jul 17 00:18:59 2023 +0000

    feat: `prod.lex` is well-founded (#5943)
    
    Match https://github.com/leanprover-community/mathlib/pull/18665
    
    
    
    
    Co-authored-by: Parcly Taxel <reddeloostw@gmail.com>
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 1a646ca7f78e2700d77c2be3e5577d32a60d4863[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Sun Jul 16 14:44:28 2023 +0000

    feat(Topology.Algebra.InfiniteSum): make sure that tsum and sum coincide on fintypes (#5914)
    
    Currently, when `s` is a fintype, it is possible that `‚àë' x, f x ‚â† ‚àë x, f x` (if the topology of the target space is not separated), as the infinite sum `‚àë'` picks some limit if it exists, but not necessarily the one we prefer.
    
    This PR tweaks the definition of infinite sums to make sure that, when a function is finitely supported, the chosen limit for its infinite sum is the (finite) sum of its values. This makes it possible to remove a few separation assumption here and there.

[33mcommit 48029e813911afaa25001d46c30e9da4d2a283cf[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Sun Jul 16 13:05:48 2023 +0000

    chore: forward-port leanprover-community/mathlib#19234 (#5887)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit dcf4f619ddc4b898c922e4151d73f49ec29ab919[m
Author: Jeremy Tan Jie Rui <reddeloostw@gmail.com>
Date:   Sun Jul 16 11:35:04 2023 +0000

    chore: forward port leanprover-community/mathlib#18719 (#5936)

[33mcommit 2ca4ad06c4ec674f8db015212d7d32c31f523aa2[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Sun Jul 16 11:35:03 2023 +0000

    chore: Forward-port leanprover-community/mathlib#19230 (#5907)
    
    This doesn't forward-port the removal of `.{u}` as this doesn't actually change the type, and just results in `.{u_1}` being implied instead.
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 178de4697fa2ac3c5e59aaebac7a181f1fcfab28[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Sun Jul 16 11:35:02 2023 +0000

    chore: fix SHA in Data.HashMap (#5895)
    
    This file was replaced, not ported: so the SHA is irrelevant anyway.

[33mcommit e06c1bd2814d93273cf847250167cfa0a70da64d[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Sun Jul 16 11:35:01 2023 +0000

    chore: fix SHA in Data.Buffer.Basic (#5894)
    
    Also adds noaligns

[33mcommit b15b2bff12f1683576c270801bf441be98e54dc4[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Sun Jul 16 11:35:00 2023 +0000

    chore: forward-port leanprover-community/mathlib#19127 (#5889)

[33mcommit 10c93ae231bce4de672ba935e08427d7e6f485c0[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Sun Jul 16 11:34:58 2023 +0000

    chore: forward-port leanprover-community/mathlib#19103 (#5855)

[33mcommit 45eb7f2636681fc80509387c5f208cc42a57a9d9[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Sun Jul 16 11:34:57 2023 +0000

    chore: forward-port leanprover-community/mathlib#18943 (#5854)

[33mcommit 4f2aaaf3b526991218d088b97459c7ec757d5e4e[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Sun Jul 16 11:34:57 2023 +0000

    chore: forward-port leanprover-community/mathlib#18970 (#5852)
    
    This also `#align`s some nearby instance names

[33mcommit 15b639c929265a51c75d0cfb2ed7730213497a16[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Sun Jul 16 09:12:27 2023 +0000

    chore: forward-port leanprover-community/mathlib#19142 (#5893)

[33mcommit e96fc25b97e01e334c0505e8db96a289c6a419bd[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sun Jul 16 00:55:53 2023 +0000

    feat: `Encodable` and `Countable` instances for `Œ†‚ÇÄ i, Œ± i` and `Œ± ‚Üí‚ÇÄ Œ≤` (#5875)
    
    Fixes #5776

[33mcommit 3d2f586e06e91ec347cd246a5042ee762519e3de[m
Author: Pol'tta / Miyahara K≈ç <pol_tta@outlook.jp>
Date:   Sat Jul 15 22:54:32 2023 +0000

    docs: port `CODE_OF_CONDUCT.md` (#5922)

[33mcommit cd8b72bcc5fc31421eefc4bc7257fcb747c4c5cf[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sat Jul 15 22:54:31 2023 +0000

    feat: port Geometry.Manifold.Instances.Sphere (#5571)
    
    
    
    Co-authored-by: Matthew Ballard <matt@mrb.email>
    Co-authored-by: Heather Macbeth <25316162+hrmacbeth@users.noreply.github.com>

[33mcommit d31d954d014f460b89a3be5827b5a315ad233741[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sat Jul 15 21:28:10 2023 +0000

    feat: add `Pi.ofNat_apply` (#5928)

[33mcommit d5cc6ecde99dbd379248572f8bf095490d0d44e3[m
Author: Kevin Buzzard <k.buzzard@imperial.ac.uk>
Date:   Sat Jul 15 20:46:11 2023 +0000

    fix: fix ZFC Basic module docstring (#5757)
    
    The Lean 3 names were not updated to Lean 4 in the module docstring.
    
    Also fix capitalisation in some declarations (`Arity.const`, `PSet.Resp.evalAux`, `Classical.allDefinable`).

[33mcommit 4dcc0e11ca7c96544472806a22163e78f2ee594e[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sat Jul 15 18:30:13 2023 +0000

    refactor: use `SemilinearMapClass` in `LinearMap.eqLocus` (#5929)
    
    Also prove extensionality on a codisjoint pair of submodules.

[33mcommit c5b26a0720cdbc56e5090b218dfbea89d275386f[m
Author: Anatole Dedecker <anatolededecker@gmail.com>
Date:   Sat Jul 15 18:05:20 2023 +0000

    chore(Analysis.NormedSpace.CompactOperator): fix reference to now-published Bourbaki book (#5923)

[33mcommit f1fbf0701e90bde9c2073f8634fbe32d06812527[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Sat Jul 15 14:27:45 2023 +0000

    chore: re-port Init.Algebra.Functions (#5924)
    
    This mainly just adds aligns and the SHA header

[33mcommit dd065ebbdd4037b5a2f19c78d32dde391e3bac61[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Sat Jul 15 14:03:11 2023 +0000

    chore: port Data/Matrix/Auto (#5926)
    
    
    
    Co-authored-by: Jeremy Tan Jie Rui <reddeloostw@gmail.com>

[33mcommit de2ffadaef826d94e555f8ff8adf45a34dac2b21[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Sat Jul 15 11:07:30 2023 +0000

    feat: Manually port Algebra/Expr (#5925)
    
    These are taken from #5863, as the mathport output is not ready, but would be useless anyway.

[33mcommit 03458219b20844e327e5dd70353e3920a2dd14ae[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Sat Jul 15 09:21:58 2023 +0000

    chore: re-port Init.Algebra.Classes (#5857)
    
    Mainly this adds align statements that were missing, and the header comment.

[33mcommit 0c329961b2ff7247a9bcb2ffa6dafe17cea6d129[m
Author: Anatole Dedecker <anatolededecker@gmail.com>
Date:   Sat Jul 15 07:48:30 2023 +0000

    feat(Analysis.Calculus.ContDiffDef): support of iterated derivative (#5915)
    
    We already had that the iterated derivative of a compactly supported function is compactly supported, this just makes it a bit more precise by iterating `support_fderiv_subset`.

[33mcommit 6f9d6dc488b524c744df07659408a53757c2b707[m
Author: Anatole Dedecker <anatolededecker@gmail.com>
Date:   Sat Jul 15 07:48:29 2023 +0000

    feat(Analysis/LocallyConvex/WithSeminorms): congr lemmas (#5797)
    
    This adds `WithSeminorms.congr` which allows to replace a family of seminorm by an equivalent one. We use that to prove that one can always replace the family by a directed family (and a nice one if the indexing set is a `LocallyFiniteOrderBot`).

[33mcommit 41a80d7f6a9db42342210225d6fc50f34781b9b3[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sat Jul 15 07:15:53 2023 +0000

    Generalize `orthogonalProjection` (#5917)
    
    Introduce a typeclass `HasOrthogonalProjection` and use it instead of
    `[CompleteSpace K]` in the definitions of `orthogonalProjection` and
    `reflection`, as well as lemmas about these definitions.
    
    This way we do not need a `[CompleteSpace E]` assumption to talk about
    `orthogonalProjection (ùïú ‚àô v)`.
    
    Fixes #5877

[33mcommit 3acb5b8d879dfb3c344c821d021bf0317266abba[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sat Jul 15 06:50:19 2023 +0000

    chore: split `Mathlib.Geometry.Euclidean.Inversion` (#5868)
    
    Move theorems about image of a sphere passing through the center to a new file.

[33mcommit 2f7b99523962459fe6530e8350755fe63e3dde90[m
Author: Matthew Robert Ballard <jujian.zhang1998@outlook.com>
Date:   Sat Jul 15 02:55:22 2023 +0000

    feat: port AlgebraicGeometry.Morphisms.FiniteType (#5913)
    
    
    
    Co-authored-by: Matthew Ballard <matt@mrb.email>
    Co-authored-by: Kyle Miller <kmill31415@gmail.com>
    Co-authored-by: Matthew Robert Ballard <100034030+mattrobball@users.noreply.github.com>
    Co-authored-by: Yury G. Kudryashov <urkud@urkud.name>
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>
    Co-authored-by: Parcly Taxel <reddeloostw@gmail.com>

[33mcommit 158c1555aabde700c08faa460f569532f3889901[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Sat Jul 15 01:19:16 2023 +0000

    fix: use a raw nat literal where the comment says we do (#5866)

[33mcommit 2922c5fd7b627c29f3959ca0ae633a6a9d781e0d[m
Author: Yury G. Kudryashov <jujian.zhang1998@outlook.com>
Date:   Sat Jul 15 00:13:52 2023 +0000

    feat: port AlgebraicGeometry.Morphisms.RingHomProperties (#5663)
    
    
    
    Co-authored-by: Matthew Ballard <matt@mrb.email>
    Co-authored-by: Kyle Miller <kmill31415@gmail.com>
    Co-authored-by: Matthew Robert Ballard <100034030+mattrobball@users.noreply.github.com>
    Co-authored-by: Yury G. Kudryashov <urkud@urkud.name>
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>
    Co-authored-by: Parcly Taxel <reddeloostw@gmail.com>

[33mcommit 8d3c56c0eaa41a9dd545e68113a702a3db1e999e[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Fri Jul 14 19:11:54 2023 +0000

    chore: re-port Init.Function (#5859)
    
    Notably this fixes the naming of `comp_left` and `comp_right`.
    
    
    
    Co-authored-by: Parcly Taxel <reddeloostw@gmail.com>

[33mcommit afb7c1bf720dd7855ec41c334d553fb7608d14c4[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Fri Jul 14 18:12:23 2023 +0000

    chore: forward-port leanprover-community/mathlib#18408 (#5902)
    
    This file was useless

[33mcommit 1cc977d0425a7949a69b83621e486a7c937e38c2[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Fri Jul 14 16:34:55 2023 +0000

    chore: forward-port leanprover-community/mathlib#19128 (#5905)
    
    The changed proof was rewritten completely.
    
    There appears to have been a race between #5791 and #5727 that caused the commit hash to be out of date.

[33mcommit 56e73de0f79da9bcf48bf1a9a92ae215d9219d7a[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Fri Jul 14 16:34:54 2023 +0000

    feat: `a + b - 1 ‚â§ a * b` (#5828)
    
    Match https://github.com/leanprover-community/mathlib/pull/18737

[33mcommit 9e3ff9e1b4db0dadc51b4a2048b91d248348bf9b[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Fri Jul 14 16:34:52 2023 +0000

    feat: first moment method (#5326)
    
    Forward-port leanprover-community/mathlib#18731
    Also sync some parentheses with the lates `mathport` output.
    
    
    
    Co-authored-by: Ya√´l Dillies <yael.dillies@gmail.com>
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit bbde7ac24d96f9b2b9672f877f09811e0ad86a48[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Fri Jul 14 15:46:01 2023 +0000

    feat: Extending from `Ici a` (#5829)
    
    https://github.com/leanprover-community/mathlib/pull/18795
    
    
    
    
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 1b34c4500290750d626bdf2e24ffe2288fbdcc76[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Fri Jul 14 14:19:09 2023 +0000

    feat(Algebra.IndicatorFunction): indicator of smul in a SMulWithZero context (#5874)

[33mcommit a1a257dd8bf3fbb60228031dbe47a91de3ea8341[m
Author: Oliver Nash <github@olivernash.org>
Date:   Fri Jul 14 13:16:41 2023 +0000

    feat: for an open-positive measure, an open/closed subset is almost empty/full iff it is actually empty/full (#5746)
    
    Also invert the import order so that `MeasureTheory.Measure.OpenPos` imports `MeasureTheory.Constructions.BorelSpace.Basic` rather than the other way around.

[33mcommit 1ce44f10b1837daa786e5b9d200ba113c1429875[m
Author: Xavier Roblot <46200072+xroblot@users.noreply.github.com>
Date:   Fri Jul 14 11:52:55 2023 +0000

    feat(LinearAlgebra.Span): add apply_mem_span_image_iff_mem_span (#5651)
    
    Add ~~the other direction and~~ iff version of [submodule.apply_mem_span_image_of_mem_span](https://leanprover-community.github.io/mathlib_docs/linear_algebra/span.html#submodule.apply_mem_span_image_of_mem_span), that is:
    ```lean
    theorem apply_mem_span_image_iff_mem_span [RingHomSurjective œÉ‚ÇÅ‚ÇÇ] {f : M ‚Üí‚Çõ‚Çó[œÉ‚ÇÅ‚ÇÇ] M‚ÇÇ} {x : M} {s : Set M}
        (hf : Function.Injective f) :  f x ‚àà Submodule.span R‚ÇÇ (f '' s) ‚Üî x ‚àà Submodule.span R s
    ```

[33mcommit 018a6a4b842a13babd7b44346c82d2a308ffd408[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Fri Jul 14 11:17:40 2023 +0000

    chore: forward-port leanprover-community/mathlib#4798 (#5892)

[33mcommit 8fdefa01793f1c3f8758363e9576484dc085094f[m
Author: Kevin Buzzard <k.buzzard@imperial.ac.uk>
Date:   Fri Jul 14 10:07:21 2023 +0000

    feat: forward-port leanprover-community/mathlib#19105 (#5749)
    
    This is Jake Levinson's work. It's a proof that local cohomology agrees for ideals with equal radicals.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>
    Co-authored-by: Parcly Taxel <reddeloostw@gmail.com>
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 890071584974fceae1a11999607fd5ba9d4ff8de[m
Author: Kyle Miller <kmill31415@gmail.com>
Date:   Fri Jul 14 08:37:44 2023 +0000

    fix: control flow errors in `congr!`, and add closePre and closePost for feature parity with `congr` (#5832)
    
    There were some accidental early `return`s due to adding `for` loops later, a missing `instantiateMVars`, and a `max` instead of a `min` for choosing the default iteration depth. I'm also slipping in `closePre` and `closePost` configurations to be able to turn off trying to apply `rfl`/`Subsingleton.elim`/etc., which is a feature that also exists in the core `congr` meta tactic.

[33mcommit 36eb65127718cd2d88bd812ed8ece01c41a8bc51[m
Author: Jeremy Tan Jie Rui <reddeloostw@gmail.com>
Date:   Fri Jul 14 07:29:04 2023 +0000

    feat: port Analysis.InnerProductSpace.OfNorm (#5885)

[33mcommit 870068af26efc580e083bd61d44a5430fb4f1126[m
Author: Jeremy Tan Jie Rui <reddeloostw@gmail.com>
Date:   Fri Jul 14 05:38:49 2023 +0000

    chore: remove a few superfluous semicolons (#5880)
    
    Alongside any necessary spacing/flow changes to accommodate their removal.

[33mcommit 4d8f5b5cb6e3606e5185dc8ee7de88d960c2ef5a[m
Author: Pol'tta / Miyahara K≈ç <pol_tta@outlook.jp>
Date:   Thu Jul 13 14:30:53 2023 +0000

    chore: empty port of the Data.Buffer.Parser in core (#5864)
    
    addition to #5848

[33mcommit 4b4b165a4f4ac87fba8901366002bbac2c19047a[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Thu Jul 13 13:50:38 2023 +0000

    chore(MeasureTheory): rename add_haar to addHaar (#5811)
    
    This is supposed to mean "an additive Haar measure", not adding something to Haar, so it should be one word and not two.

[33mcommit 929a09b788d274ab64ce389007d0ef459a1836cd[m
Author: Anatole Dedecker <anatolededecker@gmail.com>
Date:   Thu Jul 13 11:32:53 2023 +0000

    feat(Analysis.Seminorm, Analysis.LocallyConvex.WithSeminorms): minimize some assumptions (#5812)

[33mcommit aeaebdd3d43b60b0d771c9a457131c72cc20a811[m
Author: Scott Morrison <scott@tqft.net>
Date:   Thu Jul 13 09:29:56 2023 +0000

    chore: revert leantar #5710 for further testing (#5853)
    
    This reverts commit 6ed1d668fb2c694b26798fb65c66f60017e8b47a.
    
    Currently broken on gitpod (needs `sudo apt-get install xz-utils`) and on Windows (likely the same issue).
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 228477b05a2a738fc405ce3d25670243917cf1a1[m
Author: Scott Morrison <scott@tqft.net>
Date:   Thu Jul 13 09:29:53 2023 +0000

    feat: add minimum_le_coe_iff for List.minimum (#5845)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit e7b874fd16d757c73c6fd45d62d205605a1c858b[m
Author: Peter Nelson <71660771+apnelson1@users.noreply.github.com>
Date:   Thu Jul 13 09:29:50 2023 +0000

    feat: add cancel lemmas in WithTop (#5837)
    
    This PR adds four lemmas that allow cancelling addition in `WithTop Œ±` when the term being cancelled is not `‚ä§`. They complement the existing `le`/`lt` versions.

[33mcommit 535aca508130ecd30ce99deda362016ecc02a2d5[m
Author: Scott Morrison <scott@tqft.net>
Date:   Thu Jul 13 08:35:52 2023 +0000

    chore: add porting header to Mathlib.Data.HashMap (#5846)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 5cdfdb8b498a3779c1e50640c11b7778d9f74290[m
Author: Pol'tta / Miyahara K≈ç <pol_tta@outlook.jp>
Date:   Thu Jul 13 08:35:51 2023 +0000

    chore: forward port leanprover-community/mathlib#19228 (#5843)
    
    The implementation in Mathlib 4 doesn't use `mapAccumLM` so the thing to do is only updating the header.

[33mcommit b41e763b39146da39e57e6e7b05d6e2991d6b781[m
Author: Scott Morrison <scott@tqft.net>
Date:   Thu Jul 13 08:07:27 2023 +0000

    chore: empty ports of the Data/Buffer/Parser files (#5848)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 98ab6ea64b17cb91e7aa0e026724bac97a635397[m
Author: Scott Morrison <scott@tqft.net>
Date:   Thu Jul 13 08:07:25 2023 +0000

    chore: fix casing in Mathlib.Data.FinEnum (#5844)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 6a00552b60e502135c6fec1c52e7cffccc1d6f5f[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Thu Jul 13 08:07:24 2023 +0000

    chore: tidy various files (#5840)

[33mcommit 350feed71a65b9f0923f5bb6b233fba004ec43ea[m
Author: b-reinke <b-reinke@users.noreply.github.com>
Date:   Thu Jul 13 08:07:23 2023 +0000

    feat(GroupTheory/Sylow): add inverse to card_eq_multiplicity (#5831)
    
    Port https://github.com/leanprover-community/mathlib/pull/18300 to mathlib4

[33mcommit acb87f0b373f2756b005f630e4d74e0a0bab012a[m
Author: Scott Morrison <scott@tqft.net>
Date:   Thu Jul 13 06:54:34 2023 +0000

    chore: bump to nightly-2023-07-12 (#5842)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 6ed1d668fb2c694b26798fb65c66f60017e8b47a[m
Author: Mario Carneiro <di.gama@gmail.com>
Date:   Thu Jul 13 04:56:35 2023 +0000

    feat: use `leantar` in `lake exe cache` (#5710)
    
    This hooks up the new `leantar` tool from https://github.com/digama0/leangz to `lake exe cache`. It uses an olean compressor to achieve much smaller file sizes, and faster decompression. See the [Zulip discussion](https://leanprover.zulipchat.com/#narrow/stream/270676-lean4/topic/leangz.3A.20olean.20file.20compressor/near/369738648).
    
    The new files have a new file extension, `123.ltar` instead of `123.tar.gz`. This implementation does not multiplex between them, so it will be a hard reset. In fact, the new cache doesn't even know how to clear the old cache files, so you might need to do that manually. Switching between branches will still work during the interim, since the cache will have both kinds of file and use the right ones.

[33mcommit cf365f06207ddb4eca360418f1bdc661200b137a[m
Author: Pol'tta / Miyahara K≈ç <pol_tta@outlook.jp>
Date:   Thu Jul 13 04:40:06 2023 +0000

    feat: port Analysis.Analytic.Inverse (#5032)
    
    
    
    Co-authored-by: Jeremy Tan Jie Rui <reddeloostw@gmail.com>
    Co-authored-by: Parcly Taxel <reddeloostw@gmail.com>

[33mcommit 625a3a6252676bc9d60a18fce8cad8e78a7604bd[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Thu Jul 13 04:03:37 2023 +0000

    feat: port Geometry.Manifold.ContMdiffMfderiv (#5496)

[33mcommit 906f72214116b27baae2f0dd5d7fe6d119c6c373[m
Author: Scott Morrison <scott@tqft.net>
Date:   Thu Jul 13 01:24:17 2023 +0000

    chore: bump to nightly-2023-07-01 (#5409)
    
    - [x] depends on: https://github.com/leanprover/std4/pull/163
    - [x] depends on: #5584
    - [x] depends on: #5715
    - [x] depends on: #5729
    - [x] depends on: https://github.com/leanprover/std4/pull/173
    
    [![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)
    
    
    Co-authored-by: Komyyy <pol_tta@outlook.jp>
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>
    Co-authored-by: Scott Morrison <scott.morrison@anu.edu.au>
    Co-authored-by: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
    Co-authored-by: Mario Carneiro <di.gama@gmail.com>

[33mcommit 1657aebc9db6d9b77e4a55afe7d5b33e56730bcb[m
Author: Floris van Doorn <fpvdoorn@gmail.com>
Date:   Wed Jul 12 14:24:48 2023 +0000

    fix: filenames with typos in doc (#5836)

[33mcommit 82fe7e902b01fe686b91c19550f1e228ad2dec1c[m
Author: Kyle Miller <kmill31415@gmail.com>
Date:   Wed Jul 12 11:29:23 2023 +0000

    cleanup: in Monadicity, restore `local notation` analogue and a mathlib3 comment (#5826)
    
    The `notation3` command supports referring to local variables if you give it `local`, unlike `notation`. These notations should not be made unhygienic and `scoped`.

[33mcommit 9f0637473c084763b66c7110e30be5cae97ff22e[m
Author: Anatole Dedecker <anatolededecker@gmail.com>
Date:   Wed Jul 12 10:05:58 2023 +0000

    feat(Order.Bounds.Basic): boundedness in pi types (#5806)

[33mcommit bf28bf4c12841e34ac95c85d82b16067f2fa9a9e[m
Author: Anatole Dedecker <anatolededecker@gmail.com>
Date:   Wed Jul 12 09:20:10 2023 +0000

    feat(Analysis.LocallyConvex.WithSeminorms): `WithSeminorms` for infimum of topologies (#5816)

[33mcommit 5149cfa304d26c9f80f858707fc418dba04fa3e7[m
Author: Johan Commelin <johan@commelin.net>
Date:   Wed Jul 12 08:35:56 2023 +0000

    docs(RingTheory/Localization/FractionRing): mention total fraction ring in docstring (#5827)

[33mcommit 806f7f9744df86dae8ff76f184feb9f49fb4ae55[m
Author: Scott Morrison <scott@tqft.net>
Date:   Wed Jul 12 04:07:26 2023 +0000

    chore: revert move utilities into Util directory (#5787) (#5825)
    
    This reverts commit 4dd7b55f0a06bd862d0c42066d159914327abf2f.
    
    Per [zulip](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Warning.3A.20some.20files.20were.20not.20found.20in.20the.20cache.2E/near/374481558) discussion.
    
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 1e93cf2eba77cd821918bc8010698707f94b2cbe[m
Author: Jon Eugster <eugster.jon@gmail.com>
Date:   Wed Jul 12 03:49:41 2023 +0000

    feat: port CategoryTheory.Monad.Monadicity (#5088)
    
    
    
    Co-authored-by: thorimur <68410468+thorimur@users.noreply.github.com>
    Co-authored-by: Kevin Buzzard <k.buzzard@imperial.ac.uk>
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>
    Co-authored-by: Matthew Ballard <matt@mrb.email>

[33mcommit 268b7d439bef22fe1305571df2e8daf1b76d533b[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Jul 12 02:40:59 2023 +0000

    chore: rename `Dfinsupp` to `DFinsupp` (#5822)
    
    See #4354

[33mcommit 180831e5ad012c19cbce142d73e2bff3db26c760[m
Author: Alex J Best <alex.j.best@gmail.com>
Date:   Wed Jul 12 01:10:54 2023 +0000

    feat: apply context lemmas before other lemmas (#5809)

[33mcommit d3e3344096036b34222911e6d8fe8c62970bdb84[m
Author: Yakov Pechersky <ypechersky@treeline.bio>
Date:   Wed Jul 12 00:58:35 2023 +0000

    fix: slim_check working with modified mvar context (#5823)
    
    
    
    Co-authored-by: Kyle Miller <kmill31415@gmail.com>

[33mcommit bb0602c3f76f38d2f2f1d9c5e21ca5d77eed6d34[m
Author: Pol'tta / Miyahara K≈ç <pol_tta@outlook.jp>
Date:   Wed Jul 12 00:58:34 2023 +0000

    feat: port `Traversable` deriving handlers (#5606)
    
    
    
    Co-authored-by: Kyle Miller <kmill31415@gmail.com>

[33mcommit 5d83d804b3d279422d25c161f65f23efd882602e[m
Author: Antoine Chambert-Loir <antoine.chambert-loir@u-paris.fr>
Date:   Tue Jul 11 23:59:44 2023 +0000

    feat:add correct SHA to earlier PR (#5799)
    
    
    
    Co-authored-by: Antoine Chambert-Loir <antoine.chambert-loir@math.univ-paris-diderot.fr>

[33mcommit 57cae8c09f5780b2061460a6a8fdb946d8fc9d4e[m
Author: Scott Morrison <scott@tqft.net>
Date:   Tue Jul 11 22:57:25 2023 +0000

    feat: port Testing.SlimCheck.Functions (#5768)
    
    This diverges fairly considerably from mathlib3 since we changed the `SampleableExt` API when porting the previous file.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>
    Co-authored-by: Matthew Ballard <matt@mrb.email>

[33mcommit f61c1f29a2410ce604264071e7fd28f31d446595[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Jul 11 20:21:40 2023 +0000

    feat: add `SeparableSpace` instances (#5801)

[33mcommit 59d6d55be9b22596113935029e9cf6eded73ad85[m
Author: Matthew Robert Ballard <matt@mrb.email>
Date:   Tue Jul 11 19:16:08 2023 +0000

    feat: port Data.Array.Lemmas (#5821)

[33mcommit 8fc626af48a847172cf44ff9ca4990288a6b2c5d[m
Author: Kevin Buzzard <k.buzzard@imperial.ac.uk>
Date:   Tue Jul 11 14:22:00 2023 +0000

    fix: remove unneeded import (#5814)

[33mcommit 866278a48d23e78f984b116ba13258181e77d78e[m
Author: sgouezel <sebastien.gouezel@univ-rennes1.fr>
Date:   Tue Jul 11 13:08:33 2023 +0000

    chore(Analysis/Distribution): move the SchwartzSpace file to a new folder Distribution (#5813)

[33mcommit 4dd7b55f0a06bd862d0c42066d159914327abf2f[m
Author: Scott Morrison <scott@tqft.net>
Date:   Tue Jul 11 10:52:00 2023 +0000

    chore: move utilities into Util directory (#5787)
    
    As discussed during review of #5513, and on [zulip](https://leanprover.zulipchat.com/#narrow/stream/270676-lean4/topic/lean_lib.20in.20subdirectory.3F/near/373604052)
    
    - [x] depends on: #5513
    
    [![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)
    
    
    Co-authored-by: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit d0f6ac2d0f6dfd718223d0efebdba88637cdc725[m
Author: Kyle Miller <kmill31415@gmail.com>
Date:   Tue Jul 11 10:51:59 2023 +0000

    feat: `conv in ... => ...` conv tactic (#5786)
    
    This is mean to be a substitute for the `for` tactic used in mathlib3. It's just copying the `conv` syntax for `conv`-the-tactic, which provides a convenient way to immediately apply the `pattern` conv tactic.

[33mcommit fe6a0bdc715e2b574731d80a48d0d0e2a741f57f[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Tue Jul 11 10:37:57 2023 +0000

    fix: correct universe polymorphism in SlimCheck (#5796)
    
    The use of auto-implicits was introducing a universe metavariable where we wanted a free variable.
    
    The new `ULiftable` instances handle the common case of a universe polymorphic monad with a universe-lifted state from `Type`.

[33mcommit b009280bd5c5357def5cf421a73f7ddb7a866f2f[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Jul 11 09:17:38 2023 +0000

    feat: port Geometry.Manifold.VectorBundle.Hom (#5727)

[33mcommit 51c2f54c13a4f494ea15d47ef2f91049d1a31bb0[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Jul 11 08:59:48 2023 +0000

    feat: homeomorphism between `C(X, Œ£ i, Y i)` and `Œ£ i, C(X, Y i)` (#5673)
    
    This is a follow-up to #4325.

[33mcommit cefb050f7793e4bf54c632914d2ff242953f809e[m
Author: Anne Baanen <vierkantor@vierkantor.com>
Date:   Tue Jul 11 08:31:04 2023 +0000

    feat: basic big operator plugin for `norm_num` (#4350)
    
    I wrote a basic implementation for a `norm_num` plugin evaluating `Finset.sum` and `Finset.prod`. It does not yet support as many `Finset` expressions as the Mathlib 3 implementation, and it cannot deal with variables appearing in the sum. I believe it's valuable to have this implementation since we do use this plugin in various parts of mathlib.
    
    
    
    Co-authored-by: Anne Baanen <Vierkantor@users.noreply.github.com>
    Co-authored-by: Anne Baanen <t.baanen@vu.nl>
    Co-authored-by: Jeremy Tan Jie Rui <reddeloostw@gmail.com>

[33mcommit 63e0da05557d89192561dbb4f60acd348f796968[m
Author: Anatole Dedecker <anatolededecker@gmail.com>
Date:   Mon Jul 10 15:31:02 2023 +0000

    feat: forward port leanprover-community/mathlib#19128 (#5791)
    
    
    
    Co-authored-by: Jeremy Tan Jie Rui <reddeloostw@gmail.com>

[33mcommit 5a78ace7d4bbca2bb48a1c6506fca39089472a20[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Mon Jul 10 13:59:22 2023 +0000

    feat: port Init.Data.Nat.Lemmas (#5782)
    
    Previously this was an ad-hoc port

[33mcommit c94023451441a532a9e297938fb6350cdcca88ea[m
Author: Johan Commelin <johan@commelin.net>
Date:   Mon Jul 10 12:17:36 2023 +0000

    chore: drop files starting with . from the porting dashboard (#5795)
    
    This takes care of some erronous entries on the porting dashboard.

[33mcommit 5a28a0cbf00a9a3938805781a4035a798f552ce6[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Mon Jul 10 12:17:35 2023 +0000

    chore: remove lean_core prefix (#5794)
    
    This prefix isn't present in the lean3port repository, nor is it present when actually writing `import` in Lean 3.

[33mcommit 2be645ddb81a4c71f8a45d861b0fb8923d81b2dc[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Mon Jul 10 12:17:34 2023 +0000

    fix: include leaf core files in port status (#5790)
    
    Previously we only recorded the status of files if they appeared in the dependency graph; we should therefore ensure that every file mentioned in the header has a node in the graph.
    
    This also does away with the `lean_core` nonsense, as this just makes canonization harder.
    
    Upon testing this doesn't actually seem to make any difference, but it still seems like the right thing to do.

[33mcommit 1e37d20f954e7e78c5a53e692d117e1c450440b1[m
Author: Peter Nelson <71660771+apnelson1@users.noreply.github.com>
Date:   Mon Jul 10 12:17:32 2023 +0000

    fix: fix wrong namespace for finite_iff_bdd lemmas (#5783)
    
    This fixes an issue with my earlier PR adding three lemmas about finiteness/boundedness, which were incorrectly defined in the `Finset` namespace rather than `Set`.

[33mcommit ea5be1021a8f014dfff18c4c37b02c22a7fb4e27[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Jul 10 12:17:31 2023 +0000

    feat: add lemmas about discrete topology (#5777)
    
    * Use section variables.
    * Add `closure_discrete`, `dense_discrete`, `denseRange_discrete`, and `discreteTopology_iff_forall_isClosed`.

[33mcommit eaa216ee095843c23a39937a0dfc2111af74d5c3[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Mon Jul 10 11:07:08 2023 +0000

    chore: forward-port leanprover-community/mathlib#19156 (#5793)

[33mcommit 507d89c1ae8288c11677f40e73fe296217d7ec05[m
Author: Alex Keizer <alex@keizer.dev>
Date:   Mon Jul 10 11:07:06 2023 +0000

    feat: simplification lemmas for Vector.map / Vector.mapAccumr (#5558)
    
    Primarily focused on folding nested applications of `mapAccumr` into a single `mapAccumr`
    
    
    
    Co-authored-by: Chris Hughes <chrishughes24@gmail.com>

[33mcommit ddfe2a5016b534b255c9a88391768d4cdcd2de59[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Mon Jul 10 10:56:16 2023 +0000

     feat: port Data.Fintype.Array (#5792)
    
    The dashboard says
    
    > port, but completely rewrite in terms of the new array
    
    However, the new `Array T` isn't finite like `array n T` was, so the rewrite amounts to just deleting everything in the file.
    
    
    
    Co-authored-by: Jeremy Tan Jie Rui <reddeloostw@gmail.com>

[33mcommit 278a8fe1522abc239723c43e7a7d24f3d36316ac[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Mon Jul 10 06:57:29 2023 +0000

    feat(NumberTheory/Padics/PadicVal): padicValNat_factorial_mul (#5780)
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit 763f850b4307eaf44e5ef34f1445545c6ccf0a39[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Mon Jul 10 06:57:28 2023 +0000

    fix: incorrect module name in source header (#5773)
    
    As a result this did not show as ported on the dashboard

[33mcommit 71a32bff9b3f064a3e1231106b4c003c7fee7924[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Jul 10 06:57:26 2023 +0000

    feat: port Analysis.Normed.Group.SemiNormedGroup.Completion (#5697)
    
    
    
    Co-authored-by: Matthew Ballard <matt@mrb.email>
    Co-authored-by: Johan Commelin <johan@commelin.net>

[33mcommit 75ae8830387b3d0565c33fbce77e16f02f984ab4[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Jul 10 06:57:25 2023 +0000

    feat: port Archive.Imo.Imo2005Q4 (#5094)
    
    
    
    Co-authored-by: Johan Commelin <johan@commelin.net>

[33mcommit 02ea90a076686968ce1d3b3938193f66912f422f[m
Author: Scott Morrison <scott@tqft.net>
Date:   Mon Jul 10 05:24:40 2023 +0000

    feat: `lake exe graph`, as replacement for `leanproject import-graph` (#5513)
    
    Example usage:
    ```
    lake exe graph --from Mathlib.Topology.Constructions --to Mathlib/Topology/Homotopy/Contractible.lean --reduce import_graph.pdf
    ```
    producing
    
    - [import_graph.pdf](https://github.com/leanprover-community/mathlib4/files/11877278/import_graph.pdf)
    
    Current features:
    * supports `--to` and `--from` to select a slice of the full import graph
    * accepts either module names or file names
    * supports `--reduce` to perform transitive reduction
    * output to `.dot` files, or if you have graphviz installed output to any supported format (e.g. `.pdf` as above).
    
    Still missing:
    * `--show-unused` (although all the machinery is now in place to do this)
    * `--exclude-tactics`
    
    
    
    Co-authored-by: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 888c4095e5369c61a90978d2012df65c9f9b66f0[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Mon Jul 10 04:23:28 2023 +0000

    feat: port RingTheory.Etale (#5781)
    
    
    
    Co-authored-by: Matthew Ballard <matt@mrb.email>

[33mcommit d2aa4e1a62d9655041df1a006bc5701cb2dc125a[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sun Jul 9 10:54:03 2023 +0000

    feat: add lemmas about `LocalEquiv.pi` (#5779)

[33mcommit 9a2d40a278b0e6e4a742f6e09ba4ba4185071293[m
Author: Kyle Miller <kmill31415@gmail.com>
Date:   Sun Jul 9 09:20:04 2023 +0000

    fix: make `lift_lets` not descend into proofs or `let`-less subexpressions (#5772)
    
    This helps keep `lift_lets` from unnecessarily doing deep recursion on deep expressions. Whether to descend into proofs is put behind a configuration option.

[33mcommit 2d62a6952c0541ea769ba9d32471c15ebaf67f8c[m
Author: Mario Carneiro <di.gama@gmail.com>
Date:   Sun Jul 9 00:37:09 2023 +0000

    fix: norm_num extension for Nat.pow (#5740)
    
    Alternative to leanprover/lean4#2310. The original implementation of the pow extension would force a `Nat.pow` application by defeq, but this should only be done for kernel-approved definitions and `Nat.pow` is not one of them. Rather than adding more things to the kernel, we can implement an efficient pow implementation by binary recursion, using the clauses:
    
    * `a ^ (2*b) = a^b * a^b`
    * `a ^ (2*b + 1) = a^b * a^b * a`
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 617fa4cee0f7a0b72dc84b90aa6cc6904d15a6b8[m
Author: D-Thomine <100795491+D-Thomine@users.noreply.github.com>
Date:   Sat Jul 8 23:27:26 2023 +0000

    feat(Mathlib/Data/Set/Image.lean): remove simp attribute of Set.preim‚Ä¶ (#5764)
    
    ‚Ä¶age_iterate_eq
    
    <NEWLINE>
    The simp attribute of the theorem Set.preimage_iterate_eq is (apparently) currently not used in the library, and causes unwanted behaviour when manipulating preimages of subsets. See the discussion on Zulip: https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/Use.20of.20Set.2Epreimage_iterate_eq

[33mcommit a3b66ecb2f91d93379698626e7ec98a28b893b4d[m
Author: Jason Yuen <jason_yuen2007@hotmail.com>
Date:   Sat Jul 8 16:04:48 2023 +0000

    feat: port RingTheory.Kaehler (#4668)
    
    
    
    Co-authored-by: ART <anand.rao.art@gmail.com>
    Co-authored-by: Xavier-Fran√ßois Roblot <46200072+xroblot@users.noreply.github.com>
    Co-authored-by: Bulhwi Cha <chabulhwi@semmalgil.com>
    Co-authored-by: Kevin Buzzard <k.buzzard@imperial.ac.uk>
    Co-authored-by: Matthew Ballard <matt@mrb.email>
    Co-authored-by: Kyle Miller <kmill31415@gmail.com>
    Co-authored-by: Parcly Taxel <reddeloostw@gmail.com>
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit adca8e202f95f0bd601dd1ae4203d63c0ff3c2c4[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sat Jul 8 15:27:19 2023 +0000

    feat: define `HasCountableSeparatingOn` (#5675)
    
    - Define a typeclass saying that a countable family of sets satisfying
      a given predicate separate points of a given set.
    - Provide instances for open and closed sets in a T‚ÇÄ space with second
      countable topology and for measurable sets in case of a countably
      generated œÉ-algebra.
    
    See [Zulip](https://leanprover.zulipchat.com/#narrow/stream/116395-maths/topic/ae.20eq.20of.20preimages) for motivation.

[33mcommit ea84670f62aecd7f37f8c55c8e8eb6bb204ff676[m
Author: Alex J Best <alex.j.best@gmail.com>
Date:   Sat Jul 8 12:12:23 2023 +0000

    feat: continuity? (#5760)
    
    Add the `continuity?` variant to show the proof script aesop used

[33mcommit 59623b0d2edc6a7b0836541e4ef20014482d9ea2[m
Author: Scott Morrison <scott@tqft.net>
Date:   Sat Jul 8 11:26:06 2023 +0000

    feat: API about Small modules (#5769)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit c706e4103f53ca216f0ace58f2488424a443cd5a[m
Author: Jeremy Tan Jie Rui <reddeloostw@gmail.com>
Date:   Sat Jul 8 11:26:05 2023 +0000

    chore: fix names and skips in `AlgebraicGeometry.Morphisms.Basic` (#5765)

[33mcommit 5f29b230b84926edb5524a51ceaa300d2cbb172a[m
Author: L√Æm Ts√∫-thu√†n <dannypsnl@gmail.com>
Date:   Sat Jul 8 10:21:04 2023 +0000

    doc: fix a description about HashMap/RBMap (#5694)
    
    From source code, the code seems like to extend `HashMap` and `RBSet`, not `RBMap`.

[33mcommit e7ea184dfbf315da7265717eb532e049152fa3c6[m
Author: agjftucker <agjftucker@gmail.com>
Date:   Sat Jul 8 10:10:47 2023 +0000

    Update install_macos.sh (#5684)
    
    `brew install elan-init` does the same as `brew install elan` but without the warning that it's not the cask for *elan* the annotation tool for audio and video recordings.

[33mcommit 508cf503676714a2414a44d7ebb51c167d3aca79[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Sat Jul 8 09:58:08 2023 +0000

    feat: port LinearAlgebra.CliffordAlgebra.EvenEquiv (#5600)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>
    Co-authored-by: Kevin Buzzard <k.buzzard@imperial.ac.uk>
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

[33mcommit 70f24eee808d2e0cd40a9bc7fa407187d147cf51[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sat Jul 8 04:19:26 2023 +0000

    feat: port Geometry.Manifold.Algebra.LeftInvariantDerivation (#5665)
    
    
    
    Co-authored-by: Parcly Taxel <reddeloostw@gmail.com>
    Co-authored-by: Matthew Ballard <matt@mrb.email>

[33mcommit be1b06953ca9f3e16941dbe58dc322ca87c6d359[m
Author: Matthew Robert Ballard <matt@mrb.email>
Date:   Sat Jul 8 03:58:05 2023 +0000

    feat: port AlgebraicGeometry.ProjectiveSpectrum.Scheme (#5767)

[33mcommit b07960cae28dcad3c6f5dcf73ffb2cbcfee37881[m
Author: Gabin <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Fri Jul 7 17:05:24 2023 +0000

    feat: port ModelTheory.Fraisse (#4565)
    
    
    
    Co-authored-by: Parcly Taxel <reddeloostw@gmail.com>
    Co-authored-by: Xavier-Fran√ßois Roblot <46200072+xroblot@users.noreply.github.com>
    Co-authored-by: Johan Commelin <johan@commelin.net>
    Co-authored-by: Matthew Ballard <matt@mrb.email>

[33mcommit 88e129706828e01b7622d6635af1ca6667e25bac[m
Author: Kyle Miller <kmill31415@gmail.com>
Date:   Fri Jul 7 14:58:32 2023 +0000

    fix: `at` notation for ProjectiveSpectrum.StructureSheaf (#5758)
    
    Switches to `notation3` and eliminates dot notation so it can generate a pretty printer.

[33mcommit 38b0bb05f0c809ed3592bd1c277f6555a757872b[m
Author: Jeremy Tan Jie Rui <reddeloostw@gmail.com>
Date:   Fri Jul 7 13:47:49 2023 +0000

    feat: port AlgebraicTopology.FundamentalGroupoid.SimplyConnected (#5759)

[33mcommit e5bc438559068652f49a35f263ffc088ce39a62c[m
Author: Jeremy Tan Jie Rui <reddeloostw@gmail.com>
Date:   Fri Jul 7 11:12:19 2023 +0000

    feat: port AlgebraicTopology.FundamentalGroupoid.InducedMaps (#5756)
    
    
    
    Co-authored-by: Johan Commelin <johan@commelin.net>

[33mcommit 7e1b24fa8126216566c9aa9c18bdd22404a5ddc5[m
Author: Pol'tta / Miyahara K≈ç <pol_tta@outlook.jp>
Date:   Fri Jul 7 11:12:18 2023 +0000

    refactor(Init.Data.List.Instances): sync to Mathlib 3 (#5751)

[33mcommit c4bb14cbd48da428ec1f6432e5fcd700a36ed07f[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Fri Jul 7 10:02:45 2023 +0000

    fix: restore `Set.eqOn_singleton` (#5754)

[33mcommit 0f6207a5fab5cb84356e5244996545a112a62c62[m
Author: Scott Morrison <scott@tqft.net>
Date:   Fri Jul 7 10:02:44 2023 +0000

    feat: using UnivLE to generalize universes in UniqueGluing (#5726)
    
    This is a test of the `UnivLE` proposal. The `UniqueGluing` file was one place where we couldn't forward port the universe generalisations made in mathlib3 in https://github.com/leanprover-community/mathlib/pull/19153.
    
    Diff relative to #5724 is https://github.com/leanprover-community/mathlib4/compare/UnivLE_types...UnivLE_UniqueGluing.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>
    Co-authored-by: Johan Commelin <johan@commelin.net>
    Co-authored-by: Matthew Robert Ballard <matt@mrb.email>
    Co-authored-by: Bulhwi Cha <chabulhwi@semmalgil.com>
    Co-authored-by: Kyle Miller <kmill31415@gmail.com>
    Co-authored-by: Pol'tta / Miyahara K≈ç <pol_tta@outlook.jp>
    Co-authored-by: Oliver Nash <github@olivernash.org>
    Co-authored-by: Anatole Dedecker <anatolededecker@gmail.com>
    Co-authored-by: Tobias Grosser <tobias@grosser.es>
    Co-authored-by: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
    Co-authored-by: Yury G. Kudryashov <urkud@urkud.name>
    Co-authored-by: Moritz Firsching <moritz.firsching@gmail.com>
    Co-authored-by: Jireh Loreaux <loreaujy@gmail.com>
    Co-authored-by: Christopher Hoskin <christopher.hoskin@gmail.com>

[33mcommit caec9984838902721a2dbc9ab3e885ee00731653[m
Author: Matthew Robert Ballard <matt@mrb.email>
Date:   Fri Jul 7 06:10:51 2023 +0000

    feat: port Algebra.Category.Module.ChangeOfRings  (#4300)
    
    
    
    Co-authored-by: Calvin Lee <calvins.lee@utah.edu>
    Co-authored-by: Jeremy Tan Jie Rui <reddeloostw@gmail.com>

[33mcommit 811ee3398cc8d7af9ca920a7554c3856bf533cab[m
Author: Calvin Lee <pounce@meta.com>
Date:   Fri Jul 7 05:32:56 2023 +0000

    feat: port Algebra.Category.Algebra.Limits (#5716)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>
    Co-authored-by: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
    Co-authored-by: Calvin Lee <calvins.lee@utah.edu>
    Co-authored-by: Johan Commelin <johan@commelin.net>
    Co-authored-by: Antoine Chambert-Loir <antoine.chambert-loir@math.univ-paris-diderot.fr>

[33mcommit 56112d4c238866c5c5c2f5a4ae5512bd678a0515[m
Author: Scott Morrison <scott@tqft.net>
Date:   Fri Jul 7 04:28:50 2023 +0000

    feat: using UnivLE in constructing limits in `Type` (#5724)
    
    
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>
    Co-authored-by: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
    Co-authored-by: Apurva <apurvnakade@gmail.com>
    Co-authored-by: Jon Eugster <eugster.jon@gmail.com>
    Co-authored-by: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
    Co-authored-by: Johan Commelin <johan@commelin.net>

[33mcommit a9228bfe0520c4e0066d9bde0a3886d74399fd0b[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Fri Jul 7 04:14:34 2023 +0000

    feat: lemmas about inversion (#5667)

[33mcommit be46ce4b5f6fa845ac00e39c641e811a702a068d[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Fri Jul 7 04:14:33 2023 +0000

    feat: port AlgebraicGeometry.ProjectiveSpectrum.StructureSheaf (#5224)
    
    
    
    Co-authored-by: Matthew Ballard <matt@mrb.email>
    Co-authored-by: Matthew Robert Ballard <100034030+mattrobball@users.noreply.github.com>

[33mcommit c6660d9ab475583e2bc48c40d627c241d73f41be[m
Author: Jason Yuen <jason_yuen2007@hotmail.com>
Date:   Fri Jul 7 04:14:32 2023 +0000

    feat: port CategoryTheory.Adjunction.Lifting (#4414)
    
    
    
    Co-authored-by: Matthew Ballard <matt@mrb.email>
    Co-authored-by: Scott Morrison <scott.morrison@anu.edu.au>

[33mcommit 0726e5e6defadf5733e8f97d38af6fb98c90e193[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Fri Jul 7 04:00:57 2023 +0000

    feat: port AlgebraicTopology.FundamentalGroupoid.Product (#5696)
    
    
    
    Co-authored-by: Johan Commelin <johan@commelin.net>
    Co-authored-by: Matthew Ballard <matt@mrb.email>

[33mcommit 5373e0bb0dcf4e8ff97c0a7a934409319ab72ae4[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Fri Jul 7 03:40:50 2023 +0000

    chore: rename instances related to `Unitization` (#5741)

[33mcommit b6879ac0fbd6f55cb4079e0b821f82fed52d9cf9[m
Author: Oliver Nash <github@olivernash.org>
Date:   Fri Jul 7 02:56:05 2023 +0000

    feat(Data/Matrix/Notation): relax `Semiring` to `NonUnitalNonAssocSemiring` (#5092)
    
    This came up in a real example. I was using Lean to make sure I had the right formulae for Strassen's algorithm. The following example was only able to succeed with (some of) these changes:
    ```lean
    import Mathlib.Data.Matrix.Notation
    import Mathlib.Tactic.NoncommRing
    
    example (R : Type _) [NonUnitalNonAssocRing R]
      (a‚ÇÅ‚ÇÅ a‚ÇÅ‚ÇÇ a‚ÇÇ‚ÇÅ a‚ÇÇ‚ÇÇ b‚ÇÅ‚ÇÅ b‚ÇÅ‚ÇÇ b‚ÇÇ‚ÇÅ b‚ÇÇ‚ÇÇ : R) :
        let m‚ÇÅ := (a‚ÇÅ‚ÇÅ + a‚ÇÇ‚ÇÇ) * (b‚ÇÅ‚ÇÅ + b‚ÇÇ‚ÇÇ)
        let m‚ÇÇ := (a‚ÇÇ‚ÇÅ + a‚ÇÇ‚ÇÇ) * b‚ÇÅ‚ÇÅ
        let m‚ÇÉ := a‚ÇÅ‚ÇÅ * (b‚ÇÅ‚ÇÇ - b‚ÇÇ‚ÇÇ)
        let m‚ÇÑ := a‚ÇÇ‚ÇÇ * (b‚ÇÇ‚ÇÅ - b‚ÇÅ‚ÇÅ)
        let m‚ÇÖ := (a‚ÇÅ‚ÇÅ + a‚ÇÅ‚ÇÇ) * b‚ÇÇ‚ÇÇ
        let m‚ÇÜ := (a‚ÇÇ‚ÇÅ - a‚ÇÅ‚ÇÅ) * (b‚ÇÅ‚ÇÅ + b‚ÇÅ‚ÇÇ)
        let m‚Çá := (a‚ÇÅ‚ÇÇ - a‚ÇÇ‚ÇÇ) * (b‚ÇÇ‚ÇÅ + b‚ÇÇ‚ÇÇ)
        !![a‚ÇÅ‚ÇÅ, a‚ÇÅ‚ÇÇ;
           a‚ÇÇ‚ÇÅ, a‚ÇÇ‚ÇÇ] * !![b‚ÇÅ‚ÇÅ, b‚ÇÅ‚ÇÇ;
                          b‚ÇÇ‚ÇÅ, b‚ÇÇ‚ÇÇ] = !![m‚ÇÅ + m‚ÇÑ - m‚ÇÖ + m‚Çá, m‚ÇÉ + m‚ÇÖ;
                                         m‚ÇÇ + m‚ÇÑ,           m‚ÇÅ - m‚ÇÇ + m‚ÇÉ + m‚ÇÜ] := by
      ext i j
      fin_cases i <;> fin_cases j <;> simp <;> noncomm_ring
    ```

[33mcommit ec4714382d93bdfc1f0e0a540693d35fe9c6b3cc[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Thu Jul 6 20:10:33 2023 +0000

    chore: rename Analysis.NormedSpace.Star.Mul to Unitization (#5743)

[33mcommit a691787c324b7d55862d3cd5e72d4304a5f6d4aa[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Thu Jul 6 18:35:02 2023 +0000

    feat: define continuous alternating maps (#5678)

[33mcommit 0c08a8faccb77d51d45cb91ef5ea43653f991e2f[m
Author: Pol'tta / Miyahara K≈ç <pol_tta@outlook.jp>
Date:   Thu Jul 6 17:25:55 2023 +0000

    style: `IsLawfulTraversable` -> `LawfulTraversable` (#5737)

[33mcommit 717bcc956c3e43f2245bebd39a56a2f419724a14[m
Author: Arend Mellendijk <arend.mellendijk@gmail.com>
Date:   Thu Jul 6 17:06:37 2023 +0000

    feat(Data/Nat/Squarefree): add coprime_of_squarefree_mul (#5669)
    
    Add a lemma stating that two natural numbers are coprime if their product is squarefree.

[33mcommit 7f54ac4a0f31db5441e0ba3f25d7a060dcb5df0d[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Thu Jul 6 17:06:36 2023 +0000

    feat: port LinearAlgebra.CliffordAlgebra.Contraction (#5467)
    
    
    
    Co-authored-by: Emilie Uthaiwat <emiliepathum@gmail.com>
    Co-authored-by: Xavier-Fran√ßois Roblot <46200072+xroblot@users.noreply.github.com>

[33mcommit a26c4ef58728e8da19cd8fdab378564ea80643fa[m
Author: Oliver Nash <github@olivernash.org>
Date:   Thu Jul 6 15:47:02 2023 +0000

    feat: in a preconnected space, a (finite) disjoint cover of non-empty open/closed/clopen subsets contains at most one element. (#5677)

[33mcommit ce6df01ca77caad2eed7d34a714fa2e5e87c8900[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Thu Jul 6 15:47:00 2023 +0000

    feat: port Topology.VectorBundle.Hom (#4514)

[33mcommit 99ec98e2a1f79bbf0f3cc967f4874a327cf4080f[m
Author: Kyle Miller <kmill31415@gmail.com>
Date:   Thu Jul 6 14:30:04 2023 +0000

    refactor: make `pp_with_univ` be an attribute (#5633)

[33mcommit 760b24bf29fc122c4d9690e83264f877492af55e[m
Author: Kyle Miller <kmill31415@gmail.com>
Date:   Thu Jul 6 14:30:03 2023 +0000

    feat: `pp_dot` attribute to replace `pp_extended_field_notation` command (#5632)

[33mcommit 28d08e7fa0e799c3467abacc07e10ef398ee82e7[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Thu Jul 6 13:41:34 2023 +0000

    feat: port Analysis.Normed.Group.SemiNormedGroup.Kernels (#5085)
    
    
    
    Co-authored-by: Kevin Buzzard <k.buzzard@imperial.ac.uk>
    Co-authored-by: Johan Commelin <johan@commelin.net>

[33mcommit 8793f09324d168b07df16926b391c28f20647255[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Thu Jul 6 13:41:32 2023 +0000

    feat: port LinearAlgebra.TensorAlgebra.ToTensorPower (#4876)
    
    
    
    Co-authored-by: Kevin Buzzard <k.buzzard@imperial.ac.uk>
    Co-authored-by: Johan Commelin <johan@commelin.net>

[33mcommit e1889c39545583a87a0f639da73b1cb1142a28e7[m
Author: Anatole Dedecker <anatolededecker@gmail.com>
Date:   Thu Jul 6 12:09:25 2023 +0000

    feat(Data/List/TFAE): version of `forall_congr'` for TFAE (#5624)

[33mcommit 457c50a6d98bf5d65072af59c069392dd18f8f1e[m
Author: nick-kuhn <nikolaskuhn@gmx.de>
Date:   Thu Jul 6 11:36:58 2023 +0000

    feat: Facts about the coherent topology (#5695)
    
    We show several facts about effective epimorphic family and the coherent topology in precoherent categories.
    
    
    
    Co-authored-by: nick-kuhn <46423253+nick-kuhn@users.noreply.github.com>

[33mcommit e28ad8850f7b037329239033187c5fb7d2c5454d[m
Author: Scott Morrison <scott@tqft.net>
Date:   Thu Jul 6 10:19:00 2023 +0000

    feat: ¬¨ UnivLE.{u+1, u} (#5739)
    
    Thanks to @kmill on [zulip](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Universe.20inequalities/near/372570044).
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 93bf611baee9e8ca8d5227acfcea4b0bdf589acd[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Thu Jul 6 09:30:16 2023 +0000

    feat: define action of `M·µà·µê·µÉ` on `Œ± ‚Üí‚Çò[Œº] Œ≤` (#5693)
    
    See #5379

[33mcommit af0fb7b7f55e972f6d6553b8ae360982b081048e[m
Author: Fr√©d√©ric Dupuis <dupuisf@iro.umontreal.ca>
Date:   Thu Jul 6 08:30:33 2023 +0000

    feat: miscellaneous lemmas about asymptotics (#5680)
    
    
    
    Co-authored-by: Fr√©d√©ric Dupuis <31101893+dupuisf@users.noreply.github.com>

[33mcommit af1edf0567e29c990a9d38c0e19199471829e4e8[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Thu Jul 6 08:16:06 2023 +0000

    feat: port Geometry.Manifold.VectorBundle.SmoothSection (#5736)

[33mcommit f4e42872269c9502498e2c2c9e5fae8753936920[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Thu Jul 6 06:47:14 2023 +0000

    chore: rename Fin.castSucc to Fin.castSuccEmb (#5729)
    
    
    
    Co-authored-by: Parcly Taxel <reddeloostw@gmail.com>

[33mcommit 5edb251a32c47df07f6712c7da7794cdebb44d57[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Thu Jul 6 06:47:13 2023 +0000

    refactor: redefine `Bundle.TotalSpace` (#5720)
    
    Forward-port leanprover-community/mathlib#19221

[33mcommit 6542ca1ca7d56ea0f12e6d0cd1e96c7104aab310[m
Author: Christopher Hoskin <christopher.hoskin@gmail.com>
Date:   Thu Jul 6 05:51:28 2023 +0000

    feat(topology/order): Add closure.mono (#5631)
    
    Adds `closure.mono` which asserts that if `t‚ÇÅ ‚â§ t‚ÇÇ` for topologies `t‚ÇÅ`, `t‚ÇÇ`, then the closure of a set in `t‚ÇÅ` will be a subset of the closure of the set in `t‚ÇÇ`. Analogous to `IsOpen.mono` and `IsClosed.mono`. Also adds `closure[t‚ÇÅ]` notation to specify the topology to use.
    
    
    
    Co-authored-by: Christopher Hoskin <mans0954@users.noreply.github.com>

[33mcommit 7bc03a762cc927e34e90c43e6db38a5a275f4b16[m
Author: Scott Morrison <scott@tqft.net>
Date:   Thu Jul 6 05:37:39 2023 +0000

    feat: UnivLE (#5723)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 7e61a1a5562e7a8466fb2f5ad9d1201224a1bb49[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Thu Jul 6 04:32:48 2023 +0000

    feat: port LinearAlgebra.Matrix.SchurComplement (#5491)

[33mcommit 1adfa4dfca25dc4df30ab1e89adf7863050afa9b[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Thu Jul 6 04:32:47 2023 +0000

    feat: port Topology.MetricSpace.GromovHausdorff (#4635)
    
    
    
    Co-authored-by: Jireh Loreaux <loreaujy@gmail.com>
    Co-authored-by: Antoine Chambert-Loir <antoine.chambert-loir@math.univ-paris-diderot.fr>
    Co-authored-by: Alex J Best <alex.j.best@gmail.com>
    Co-authored-by: Antoine Chambert-Loir <antoine.chambert-loir@u-paris.fr>

[33mcommit 15a4f796f85550c13fc51e747b389cce20619d1c[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Thu Jul 6 04:18:15 2023 +0000

    feat: port CategoryTheory.Monoidal.Internal.Module (#5725)
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>
    Co-authored-by: Jujian Zhang <jujian.zhang1998@outlook.com>

[33mcommit f2c76a4cf8640f40c05adf4c7a41bff17f00699c[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Wed Jul 5 18:37:53 2023 +0000

    feat: port GroupTheory.FiniteAbelian (#5730)
    
    - [x] depends on: #4707
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>
    Co-authored-by: Johan Commelin <johan@commelin.net>
    Co-authored-by: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
    Co-authored-by: Xavier-Fran√ßois Roblot <46200072+xroblot@users.noreply.github.com>
    Co-authored-by: Bulhwi Cha <chabulhwi@semmalgil.com>
    Co-authored-by: Kyle Miller <kmill31415@gmail.com>
    Co-authored-by: Pol'tta / Miyahara K≈ç <pol_tta@outlook.jp>

[33mcommit 8c0a68a89308c0b09ceb6b46296cf4cf9344ecb9[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Wed Jul 5 17:18:31 2023 +0000

    feat: port Counterexamples.HomogeneousPrimeNotPrime (#5287)
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>
    Co-authored-by: Johan Commelin <johan@commelin.net>

[33mcommit b83ae2cd4bc5da6ea21bf0347661a991f1b2cb71[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Jul 5 16:58:23 2023 +0000

    feat: port LinearAlgebra.ExteriorAlgebra.Grading (#5459)
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>
    Co-authored-by: Xavier-Fran√ßois Roblot <46200072+xroblot@users.noreply.github.com>

[33mcommit b72d935ac46d965683961d2efaf2fb17631a02aa[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Wed Jul 5 15:33:59 2023 +0000

    feat: port Algebra.Module.PID (#4707)
    
    
    
    Co-authored-by: Xavier-Fran√ßois Roblot <46200072+xroblot@users.noreply.github.com>
    Co-authored-by: Johan Commelin <johan@commelin.net>
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit 7f1e5746d6d214d8b22114698f0b2fbfe5ed8091[m
Author: Tobias Grosser <tobias@grosser.es>
Date:   Wed Jul 5 14:19:53 2023 +0000

    feat: add List.foldl_concat and List.foldr.concat (#5733)
    
    These are special versions of List.fold[lr]_append in case a single element list is appended.
    
    
    
    
    Co-authored-by: Chris Hughes <33847686+ChrisHughes24@users.noreply.github.com>

[33mcommit 6a3e867e5faa8cd26ce9cf26e3ed1e5ee9be589e[m
Author: Anatole Dedecker <anatolededecker@gmail.com>
Date:   Wed Jul 5 13:45:48 2023 +0000

    feat(Analysis.Seminorm): remove useless assumption (#5734)
    
    This removes a chance to infer an argument, but I think that's a fairly good use case for using the new named arguments, because adding `(r := _)` to specify a radius feels completely right.

[33mcommit 0e13f2f70157ca81eef2b1e008171c23eee12a33[m
Author: Scott Morrison <scott@tqft.net>
Date:   Wed Jul 5 12:56:20 2023 +0000

    chore: correct casing in Logic.Equiv.TransferInstance (#5641)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit bb4fb766e41dd3a64197263ec132c7f9c4b50065[m
Author: Oliver Nash <github@olivernash.org>
Date:   Wed Jul 5 12:35:35 2023 +0000

    feat: complex differentiable functions are continuously differentiable (#5629)

[33mcommit 13c15fd25459d1da49ed91a274b82b870813b16a[m
Author: Pol'tta / Miyahara K≈ç <pol_tta@outlook.jp>
Date:   Wed Jul 5 06:47:40 2023 +0000

    fix(Tactic.NormNum.LegendreSymbol): not `a % 0` but `a % 2` (#5719)

[33mcommit c725d1864c39bf909c59eeedb2269bb88767606c[m
Author: Kyle Miller <kmill31415@gmail.com>
Date:   Wed Jul 5 06:47:39 2023 +0000

    chore: update Mathport/Syntax for `#where` command (#5718)

[33mcommit 4d117486899b5149e499d2718326d0e33fb3bdc7[m
Author: Bulhwi Cha <chabulhwi@semmalgil.com>
Date:   Wed Jul 5 06:33:28 2023 +0000

    style: remove unnecessary `<|` (#5721)

[33mcommit abd65d5041585a6b8db39dde8c2ac4414b584b06[m
Author: Matthew Robert Ballard <matt@mrb.email>
Date:   Wed Jul 5 06:02:46 2023 +0000

    chore: rescope Œ© notation for LoopSpace (#5714)

[33mcommit d6a451659641c1fe41fd38aa0a281af9d1ccfb5d[m
Author: Calvin Lee <pounce@meta.com>
Date:   Wed Jul 5 04:52:56 2023 +0000

    feat: port Algebra.Category.Algebra.Basic (#4504)
    
    
    
    Co-authored-by: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
    Co-authored-by: Calvin Lee <calvins.lee@utah.edu>
    Co-authored-by: Johan Commelin <johan@commelin.net>
    Co-authored-by: Antoine Chambert-Loir <antoine.chambert-loir@math.univ-paris-diderot.fr>

[33mcommit 24d17585e764e2fe4c70e5e0ba1b7a06473767e7[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Tue Jul 4 23:32:23 2023 +0000

    chore: rename Fin.rev to Fin.revPerm (#5715)

[33mcommit cc5d11f24e1b92db65ec3389bb5142f4b2d7670e[m
Author: Jujian Zhang <jujian.zhang1998@outlook.com>
Date:   Tue Jul 4 18:51:38 2023 +0000

    feat: port AlgebraicGeometry.Morphisms.QuasiSeparated (#5691)

[33mcommit d57f6f35e6eeae22d36675e17188a26b2db68df8[m
Author: Gabin <gabin1999@hotmail.com>
Date:   Tue Jul 4 18:38:28 2023 +0000

    feat: port ModelTheory.DirectLimit (#4391)
    
    
    
    Co-authored-by: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
    Co-authored-by: Chris Hughes <chrishughes24@gmail.com>
    Co-authored-by: Parcly Taxel <reddeloostw@gmail.com>
    Co-authored-by: Johan Commelin <johan@commelin.net>
    Co-authored-by: Kyle Miller <kmill31415@gmail.com>

[33mcommit c795bd35aa2e43bc3d921eb5b09437db4d0c3881[m
Author: Jeremy Tan Jie Rui <reddeloostw@gmail.com>
Date:   Tue Jul 4 16:14:37 2023 +0000

    chore: remove occurrences of semicolon after space (#5713)
    
    This is the second half of the changes originally in #5699, removing all occurrences of `;` _after_ a space and implementing a linter rule to enforce it.
    
    In most cases this 2-character substring has a space after it, so the following command was run first:
    ```
    find . -type f -name "*.lean" -exec sed -i -E 's/ ; /; /g' {} \;
    ```
    The remaining cases were few enough in number that they were done manually.

[33mcommit 69ef6f5fb1055252dd898e2cf08ad2bbe6e05e0d[m
Author: Johan Commelin <johan@commelin.net>
Date:   Tue Jul 4 15:57:10 2023 +0000

    feat: port Archive.Examples.MersennePrimes (#5704)
    
    
    
    Co-authored-by: thorimur <68410468+thorimur@users.noreply.github.com>
    Co-authored-by: Kyle Miller <kmill31415@gmail.com>

[33mcommit 85af2e41edcc2d6a91c4859e6530cfe152a84faa[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Jul 4 14:43:29 2023 +0000

    feat: composition of `ContinuousMap`s is inducing (#5652)
    
    If `g : C(Œ≤, Œ≥)` is inducing, then `fun f : C(Œ±, Œ≤) ‚Ü¶ g.comp f` is inducing.

[33mcommit b0bb2972dfc145aa0d379846d9d12caa4db0f71a[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Tue Jul 4 14:43:28 2023 +0000

    chore: rename Fin.cast to Fin.castIso (#5584)
    
    
    
    Co-authored-by: Parcly Taxel <reddeloostw@gmail.com>

[33mcommit 409bee4eabf8072c4569950c3c2f310afd203abf[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Jul 4 13:48:21 2023 +0000

    feat: add `TopologicalSpace.IsTopologicalBasis.inseparable_iff` (#5636)
    
    Also add `TopologicalSpace.IsTopologicalBasis.eq_iff` for a T‚ÇÄ space.

[33mcommit d90c998caec1db66a6d87083336883dd346d69f8[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Jul 4 13:48:20 2023 +0000

    feat: add `IsSeparable.secondCountableTopology` (#5635)

[33mcommit 3306b397c12928d9da67f0a3ef120bafb39f91b4[m
Author: Bulhwi Cha <chabulhwi@semmalgil.com>
Date:   Tue Jul 4 12:26:05 2023 +0000

    style: add missing space (#5711)

[33mcommit d3e6efa73bd5bc9830658b11a37aa7d4875d3a95[m
Author: Scott Morrison <scott@tqft.net>
Date:   Tue Jul 4 12:26:04 2023 +0000

    chore: forward port #19188 (#5709)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit f35fae70952c859ebc08c754b4547e35412ce85f[m
Author: Scott Morrison <scott@tqft.net>
Date:   Tue Jul 4 12:26:03 2023 +0000

    chore: restore an elementwise lemma (#5707)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit a3a2bc4233f40a3928177f600e8bd50ed9ef324e[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Tue Jul 4 12:26:02 2023 +0000

    feat: port Archive.OxfordInvariants.2021summer.Week3P1 (#5705)
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>
    Co-authored-by: Jeremy Tan Jie Rui <reddeloostw@gmail.com>
    Co-authored-by: Johan Commelin <johan@commelin.net>

[33mcommit 6fae06cc5e7e44e609d5d36072e91e8feeacf8a9[m
Author: Jujian Zhang <jujian.zhang1998@outlook.com>
Date:   Tue Jul 4 12:26:01 2023 +0000

    feat: port RingTheory.Nullstellensatz (#5686)

[33mcommit cb02d09e1d5611d22efc2b406e7893f246b2f51e[m
Author: Jeremy Tan Jie Rui <reddeloostw@gmail.com>
Date:   Tue Jul 4 11:14:49 2023 +0000

    chore: fix focusing dots (#5708)
    
    This PR is the result of running
    ```
    find . -type f -name "*.lean" -exec sed -i -E 's/^( +)\. /\1¬∑ /' {} \;
    find . -type f -name "*.lean" -exec sed -i -E 'N;s/^( +¬∑)\n +(.*)$/\1 \2/;P;D' {} \;
    ```
    which firstly replaces `.` focusing dots with `¬∑` and secondly removes isolated instances of such dots, unifying them with the following line. A new rule is placed in the style linter to verify this.

[33mcommit 47b0327d49823b1cec17eedbeaca1ea9491a809c[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Tue Jul 4 11:14:48 2023 +0000

    chore: fix Mathilb typos (#5706)
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit 6c35041e40e920815126f07f75f2c10148a61906[m
Author: Scott Morrison <scott@tqft.net>
Date:   Tue Jul 4 10:37:10 2023 +0000

    chore: update SHAs after #19153 was reverted (#5712)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 4f103b3696795c62e76fb89d177efb91c29afdf5[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Jul 4 09:34:16 2023 +0000

    feat: generalize&merge `ContinuousMap.continuous_eval_const{,'}` (#5649)
    
    We had continuity of `fun f : C(X, Y) ‚Ü¶ f a` in two cases:
    - `X` is a locally compact space;
    - `X` is a compact space and `Y` is a metric space.
    
    In fact, it is true in general topological spaces.

[33mcommit 141971f38258c4d6a36b68b41f4b8505b8cdeadc[m
Author: EmilieUthaiwat <emiliepathum@gmail.com>
Date:   Tue Jul 4 09:34:15 2023 +0000

    feat: units of polynomial rings (#4691)
    
    We proved that a polynomial is a unit if and only if all of its coefficients are nilpotent, except the constant term which is a unit.
    
    Co-authored-by: Cyprien Chauveau cyprien.chauveau@etu.u-paris.fr
    Co-authored-by: Lucas Pouillart lucas.pouillart@etu.u-paris.fr
    
    
    
    Co-authored-by: EmilieUthaiwat <102412311+EmilieUthaiwat@users.noreply.github.com>

[33mcommit 30a855da932ffaefb47b1f322a8b0271f7dcb10f[m
Author: Scott Morrison <scott@tqft.net>
Date:   Tue Jul 4 08:44:29 2023 +0000

    feat: easy facts about essentially surjective functors (#5702)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit eff98f6278bfa0e65fc2b09ea5eba50165c98084[m
Author: Sebastian Ullrich <sebasti@nullri.ch>
Date:   Tue Jul 4 08:33:59 2023 +0000

    chore: warn on cache misses (#5692)
    
    I only touched the parallel-curl branch, which I assume is the mostly widely used. Comparing toolchain files when using mathlib as a dependency would also be nice.

[33mcommit c282679245ab48a85b35f5e943c39633bd3a81b1[m
Author: Scott Morrison <scott@tqft.net>
Date:   Tue Jul 4 07:26:30 2023 +0000

    feat: use pp_with_univ (#5622)
    
    Certain definitions do nothing except change universes. We might as well have the pretty printer always show us these universes!
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit d285129507bacea9a80e98a887ea710ac00e7f2f[m
Author: Scott Morrison <scott@tqft.net>
Date:   Tue Jul 4 05:50:36 2023 +0000

    chore: correct name in Category/ULift docs (#5701)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 3aeae834698b11ce4b8f8ad96896ad9645ce7a1b[m
Author: Scott Morrison <scott@tqft.net>
Date:   Tue Jul 4 05:50:35 2023 +0000

    chore: dualize statements about pullbacks to pushouts (#5700)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit c60a13fafa40d8ec5cb9a47582377dd424a0e9e2[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Jul 4 05:50:34 2023 +0000

    feat: port Counterexamples.SorgenfreyLine (#4978)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@anu.edu.au>
    Co-authored-by: Eric Wieser <wieser.eric@gmail.com>
    Co-authored-by: Jason Yuen <jason_yuen2007@hotmail.com>
    Co-authored-by: int-y1 <jason_yuen2007@hotmail.com>

[33mcommit 9b91d86c2ede669ce3bdb14777ac4029f55384a9[m
Author: Jon Eugster <eugster.jon@gmail.com>
Date:   Tue Jul 4 05:50:33 2023 +0000

    feat: port RingTheory.Jacobson (#4338)
    
    
    
    Co-authored-by: Jason Yuen <jason_yuen2007@hotmail.com>
    Co-authored-by: int-y1 <jason_yuen2007@hotmail.com>
    Co-authored-by: Antoine Chambert-Loir <antoine.chambert-loir@math.univ-paris-diderot.fr>
    Co-authored-by: Johan Commelin <johan@commelin.net>
    Co-authored-by: Jujian Zhang <jujian.zhang1998@outlook.com>
    Co-authored-by: Parcly Taxel <reddeloostw@gmail.com>
    Co-authored-by: Jeremy Tan Jie Rui <reddeloostw@gmail.com>

[33mcommit 57535b035238ade44e82902e182517a89fc315c6[m
Author: Scott Morrison <scott@tqft.net>
Date:   Tue Jul 4 04:28:43 2023 +0000

    chore: restore simp lemmas in Logic.Equiv.Set (#5643)
    
    Two simp lemmas were removed with porting notes because the LHS already simplified. I think instead they should have had their priority increased.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>
    Co-authored-by: Johan Commelin <johan@commelin.net>

[33mcommit be66345bfdee560d8dc5aab638a13c71ca809e0b[m
Author: Jason Yuen <jason_yuen2007@hotmail.com>
Date:   Mon Jul 3 20:39:42 2023 +0000

    feat: port Archive.Imo.Imo2008Q2 (#5206)
    
    
    
    Co-authored-by: Johan Commelin <johan@commelin.net>

[33mcommit 5c108f1cbd8d67518a2d67bba5d6967639c6e2dc[m
Author: Patrick Massot <patrickmassot@free.fr>
Date:   Mon Jul 3 18:24:36 2023 +0000

    chore: scope notations from category theory. (#5685)
    
    Make sure in particular one can import Mathlib.Tactic for teaching without getting category theory notations in scope. Note that only two files needed an extra open.

[33mcommit db9fb240e23866f330abdb3c063340a4b512c8b5[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Mon Jul 3 17:59:11 2023 +0000

    feat: port Archive.Imo.Imo1998Q2 (#5157)
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>
    Co-authored-by: Jeremy Tan Jie Rui <reddeloostw@gmail.com>

[33mcommit ef8a6a9292ab3a7fca2286faf8822aceeb3cf3fe[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Jul 3 16:47:00 2023 +0000

    feat: port NumberTheory.ModularForms.Basic (#5662)
    
    
    
    Co-authored-by: int-y1 <jason_yuen2007@hotmail.com>

[33mcommit c156373e5610e25498e305f5b0ee8b3adb4c1aec[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Mon Jul 3 16:14:58 2023 +0000

    feat: port AlgebraicGeometry.Morphisms.QuasiCompact (#5642)
    
    
    
    Co-authored-by: Jujian Zhang <jujian.zhang1998@outlook.com>

[33mcommit ceaa4ecb78207e03dba11cb84e63f74211567a14[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Jul 3 14:48:03 2023 +0000

    refactor: move all `register_simp_attr`s to 1 file (#5681)
    
    There are slight differences between `mathlib3` and `mathlib4` (different set of attributes, different lemmas are in core/std), so I redid the same refactor instead of forward-porting changes.
    
    mathlib3 PR: leanprover-community/mathlib#19223

[33mcommit e0de6cd42593ef7263e695bb5af819d76bb17a58[m
Author: Filippo A. E. Nuccio <filippo.nuccio@univ-st-etienne.fr>
Date:   Mon Jul 3 14:48:02 2023 +0000

    feat: add lemma tendsto_pow_atTop_nhds_0_iff_lt_1 (#5656)
    
    Add lemma `tendsto_pow_atTop_nhds_0_iff_lt_1` showing the reverse implication of `tendsto_pow_atTop_nhds_0_of_lt_1`: if the geometric progression of an element in an Archimedean field tends to `0`, the element is strictly less than `1`.

[33mcommit 550a10d90fb51195e32781a47661040eeb2024d2[m
Author: Jason Yuen <jason_yuen2007@hotmail.com>
Date:   Mon Jul 3 14:48:00 2023 +0000

    feat: port Counterexamples.Pseudoelement (#5209)
    
    
    
    Co-authored-by: Johan Commelin <johan@commelin.net>

[33mcommit a1e1e2f3e10d89aed75c4d9d4eab6f5186f1aeab[m
Author: Chris Hughes <33847686+ChrisHughes24@users.noreply.github.com>
Date:   Mon Jul 3 13:20:59 2023 +0000

    fix: Data.Bool.Basic fix statement of `not_inj` (#5688)
    
    Due to the precedence of not, the statement was `!decide (a = !b) -> a = b`. Now it is the correct statement

[33mcommit ae5e8089f1d37e1adc3beb902d0a463f90bcbb7b[m
Author: Amelia Livingston <101damnations@github.com>
Date:   Mon Jul 3 12:05:30 2023 +0000

    feat: port RepresentationTheory.GroupCohomology.Basic (#5468)

[33mcommit 9c8d5b1c1e21a6c81165f33e9d6195733bf5b08e[m
Author: Jason Yuen <jason_yuen2007@hotmail.com>
Date:   Mon Jul 3 11:03:24 2023 +0000

    feat: port RepresentationTheory.Character (#5679)
    
    
    
    Co-authored-by: Johan Commelin <johan@commelin.net>

[33mcommit 3bce4162fa76ef1a8a04fdec7e656f1971ca14f4[m
Author: nick-kuhn <nikolaskuhn@gmx.de>
Date:   Mon Jul 3 11:03:23 2023 +0000

    feat: cocones over Sieves and FamilyOfElements for yoneda (#5647)
    
    Adding some lemmas that relate a `FamilyOfElements` for yoneda presheaves with cocones over a sieve.
    
    
    
    Co-authored-by: nick-kuhn <46423253+nick-kuhn@users.noreply.github.com>

[33mcommit d450fcd785f1f17c39edef552b48797887f97f4f[m
Author: Floris van Doorn <fpvdoorn@gmail.com>
Date:   Mon Jul 3 11:03:22 2023 +0000

    fix: precedence of `#` (#5623)

[33mcommit 56e243fba66d9b9ccbcd714c97a5190dc9e82a23[m
Author: Tobias Grosser <tobias@grosser.es>
Date:   Mon Jul 3 09:37:21 2023 +0000

    fix: move two trivial theorems over booleans to Bool/Basic (#5630)
    
    This eliminates an unnecessary dependency from Num.Bitwise to Bitvec.Defs.

[33mcommit f3e62849a4e599fd45fd6a0b43ee383789d52780[m
Author: Alex Keizer <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Mon Jul 3 07:59:33 2023 +0000

    feat: port Data.QPF.Multivariate.Constructions.Cofix (#2444)
    
    
    
    
    Co-authored-by: Alex Keizer <alex@keizer.dev>
    Co-authored-by: Komyyy <pol_tta@outlook.jp>

[33mcommit 2a7029606bb5b3bb5d1b9de0da14e31f9bb52b69[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Mon Jul 3 06:43:23 2023 +0000

    chore: fix align linebreaks (#5683)
    
    The result of running
    ```
    find . -type f -name "*.lean" -exec sed -i -E 'N;s/^#align ([^[:space:]]+)\n *([^[:space:]]+)$/#align \1 \2/' {} \;
    ```
    Hopefully for the last time...
    
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit 15cdb8ec323ca1d00d34d3d3eb68ae2fdab06395[m
Author: Jason Yuen <jason_yuen2007@hotmail.com>
Date:   Mon Jul 3 06:43:22 2023 +0000

    chore: fix grammar in docs (#5668)

[33mcommit 3d8581eaa99faeb33948116b37428ee9561e68e8[m
Author: Apurva <apurvnakade@gmail.com>
Date:   Mon Jul 3 06:43:21 2023 +0000

    fix: re-port Mathlib.Analysis.Convex.Cone.Proper (#5646)
    
    Forward port [#19008](https://github.com/leanprover-community/mathlib/pull/19008)
    
    When I ported this file (Mathlib/Analysis/Convex/Cone/Proper.lean) I did not realize that `mathport` had used an older commit without the latest PR. I'm forward porting it now.

[33mcommit 87c27f39e05bdb6194bc09e0f0bbb7bcfae795da[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Mon Jul 3 06:01:57 2023 +0000

    fix: docs in multiplicity (#5682)
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit ea71ff1455318449786aca4c1c5bd814f7f7360d[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Jul 3 06:01:56 2023 +0000

    feat: port Geometry.Manifold.WhitneyEmbedding (#5666)

[33mcommit c7c8ac380ecb01c673eea92b3d3d83f3471b8915[m
Author: Xavier Roblot <46200072+xroblot@users.noreply.github.com>
Date:   Mon Jul 3 05:44:26 2023 +0000

    feat: port AlgebraicGeometry.EllipticCurve.Point (#5541)
    
    Co-authored-by: David Kurniadi Angdinata <dka31@cantab.ac.uk>
    
    
    
    Co-authored-by: David Kurniadi Angdinata <dka31@cantab.ac.uk>

[33mcommit f32c393b55f35b55cec2d1c4b4670376f95f7536[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Jul 3 05:30:31 2023 +0000

    feat: port Geometry.Manifold.Diffeomorph (#5660)

[33mcommit 5cd26e521566790e0aa8b646aae18a16b3bc56fc[m
Author: Bolton Bailey <bolton.bailey@gmail.com>
Date:   Mon Jul 3 01:56:28 2023 +0000

    feat: Compare card of subgroup to card of group (#5347)
    
    Includes new lemmas, one that shows that the cardinality of a subgroup is at most the cardinality of the ambient group, and others which shows that the cardinality of the top group is equal to that of the ambient group, and that in fact this is iff.
    
    Co-authored-by: Floris van Doorn

[33mcommit 4ebd604d0aafb87205181390636d5fc2c977e6f9[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Mon Jul 3 00:43:37 2023 +0000

    feat: define `NonUnitalSubalgebra` and develop basic API (#5512)
    
    This continues the non-unital-ization of mathlib.
    
    - [x] depends on: #5151

[33mcommit a5fc3766f9e50691195464ebe2b544d8739968e8[m
Author: Jeremy Tan Jie Rui <reddeloostw@gmail.com>
Date:   Sun Jul 2 18:13:28 2023 +0000

    feat: port NumberTheory.ModularForms.JacobiTheta.Manifold (#5670)

[33mcommit 9dd08868eb6e251533bd2a50dee07140e3eea0bc[m
Author: Jason Yuen <jason_yuen2007@hotmail.com>
Date:   Sun Jul 2 17:59:31 2023 +0000

    feat: port RepresentationTheory.Invariants (#5655)

[33mcommit 6c1021b515a78ff4a8f628aa8720dbd22d2570a8[m
Author: Floris van Doorn <fpvdoorn@gmail.com>
Date:   Sun Jul 2 14:32:50 2023 +0000

    fix: precedence of `‚Å∫`, `‚Åª` and `abs` (#5619)

[33mcommit 8dc87f23a3a5e0bcc125687a0bc1cd70ae22e6c6[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sun Jul 2 13:59:19 2023 +0000

    feat: port Analysis.Complex.UpperHalfPlane.Manifold (#5658)
    
    Also define `UpperHalfPlane.coe` so that type synonym doesn't leak through API.

[33mcommit 8c73845e353d5085205feb47d01e560859412253[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sun Jul 2 13:45:30 2023 +0000

    chore: golf `FunctionsBoundedAtInfty` (#5661)
    
    Use lemmas about `Filter.HasBasis` to golf some proofs.

[33mcommit 3de9de69c578ebb54230d39c8e048ac7a09dc4af[m
Author: Bulhwi Cha <chabulhwi@semmalgil.com>
Date:   Sun Jul 2 11:33:27 2023 +0000

    doc: fix typo (#5664)
    
    "`hom`" should be "`Hom`".

[33mcommit 03fc68aa84ce6173a885da66f518f488bb1cf557[m
Author: Floris van Doorn <fpvdoorn@gmail.com>
Date:   Sun Jul 2 10:21:10 2023 +0000

    fix: `‚àë'` precedence (#5615)
    
    * Also remove most superfluous parentheses around big operators (`‚àë`, `‚àè` and variants).
    * roughly the used regex: `([^a-zA-ZŒ±-œâŒë-Œ©'ùìù‚Ñ≥‚ÇÄùïÇ‚Çõ)]) \(([‚àë‚àè][^()‚àë‚àè]*,[^()‚àë‚àè:]*)\) ([‚äÇ‚äÜ=<‚â§])` replaced by `$1 $2 $3`

[33mcommit ad50c210a9ecdfd14fe426c5f6cad85f165fddd5[m
Author: Timo <timorcb@gmail.com>
Date:   Sun Jul 2 10:02:15 2023 +0000

    feat: port SetTheory.Game.Domineering (#5654)

[33mcommit 25bbed0911399df9c141513a026312f3d708da2c[m
Author: Timo <timorcb@gmail.com>
Date:   Sun Jul 2 09:49:05 2023 +0000

    doc: update comments in SetTheory.Game.Short (#5657)
    
    - Fix capitalization of identifiers
    - Add details to a porting note that I was investigating while Parcly-Taxel fixed #5551

[33mcommit 6ac0ba4ce0cac0c299457353fdbbb77609cf3175[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sun Jul 2 05:00:51 2023 +0000

    feat: drop an unneeded field of `StarOrderedRing` (#5639)
    
    In `StarOrderedRing.ofLeIff`, the assumption
    `h_add : ‚àÄ {x y}, x ‚â§ y ‚Üí ‚àÄ z, z + x ‚â§ z + y` follows from the other one.
    
    
    
    Co-authored-by: Jireh Loreaux <loreaujy@gmail.com>

[33mcommit 9d7fb19df84ae6e02bb4eca985858dec50d5fd3e[m
Author: Fr√©d√©ric Dupuis <dupuisf@iro.umontreal.ca>
Date:   Sun Jul 2 04:04:25 2023 +0000

    feat(Analysis/Asymptotics/AsymptoticEquivalent): add `Trans` instances for `IsEquivalent` (#5572)
    
    This PR adds several `Trans` instances for the `IsEquivalent` relation, and a few missing lemmas on the same topic.
    
    
    
    Co-authored-by: Fr√©d√©ric Dupuis <31101893+dupuisf@users.noreply.github.com>

[33mcommit b411eb9c9c80491229d4333cf72e97641689071a[m
Author: Timo <timorcb@gmail.com>
Date:   Sat Jul 1 23:04:22 2023 +0000

    feat: port SetTheory.Game.State (#5653)

[33mcommit b4a49ec957e2e6e0ca95ae65f92aa9f8212e7f70[m
Author: Jason Yuen <jason_yuen2007@hotmail.com>
Date:   Sat Jul 1 20:46:34 2023 +0000

    feat: port RepresentationTheory.FdRep (#5612)
    
    
    
    Co-authored-by: Johan Commelin <johan@commelin.net>

[33mcommit 4e0c38f541e723633a3f5422e302190e45518e98[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Sat Jul 1 19:42:41 2023 +0000

    feat: port SetTheory.Game.Short (#5551)
    
    
    
    Co-authored-by: timotree3 <timorcb@gmail.com>
    Co-authored-by: Parcly Taxel <reddeloostw@gmail.com>

[33mcommit d055df4832d11e9a165ef37c1bd0de6b867165bb[m
Author: Jeremy Tan Jie Rui <reddeloostw@gmail.com>
Date:   Sat Jul 1 17:13:07 2023 +0000

    feat: port Geometry.Manifold.DerivationBundle (#5640)

[33mcommit c85e6ad4901b0f46844d15fe5946b9c19fb88076[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Sat Jul 1 16:46:34 2023 +0000

    feat: port Algebra.Category.Mon.Adjunctions (#5648)

[33mcommit d48aba0134ce7c837001c1d57b9bcba254fac3d1[m
Author: Arend Mellendijk <arend.mellendijk@gmail.com>
Date:   Sat Jul 1 16:09:09 2023 +0000

    feat(NumberTheory/ArithmeticFunction): add generalisation of moebius inversion (#5445)
    
    The standard version of Moebius inversion can't be used when the equalities only hold on a subset of the natural numbers (e.g. the squarefree numbers). Add variants of all the Moebius inversion results that generalise to well-behaved subsets of the naturals.
    
    See https://leanprover.zulipchat.com/#narrow/stream/217875-Is-there-code-for-X.3F/topic/Moebius.20Inversion.20on.20a.20subset.20of.20.E2.84.95

[33mcommit d512093b051aa4a6394285f699c89bee80989ade[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Sat Jul 1 15:01:03 2023 +0000

    feat: define `NonUnitalSubring`s (#5151)
    
    This continues the non-unital-ization of mathlib by defining `NonUnitalSubring`. We attempt to provide as much feature parity as possible with both `NonUnitalSubsemiring` and `Subring`.

[33mcommit 44c828ca5b12983ef1d4eea5c54f95c2ef52cb36[m
Author: Scott Morrison <scott@tqft.net>
Date:   Sat Jul 1 13:49:02 2023 +0000

    feat: API around Small (#5645)
    
    @fpvandoorn, could you help me with the `to_additive` problem here?
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit b8569499a60c097397b8f65c149fd00348150c4a[m
Author: Scott Morrison <scott@tqft.net>
Date:   Sat Jul 1 13:49:01 2023 +0000

    feat: make Set.mem_image_equiv a simp lemma (#5644)
    
    Not certain about this one.
    
    It's useful for me (experimenting with `UnivLE`), and arguably this is a better simp normal form since `''` is relatively hard to reason about, but I'm not certain how it interacts with everything else. Let's see what CI says.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit a9b3aae8d8902f554ca8ba9bae7e9da186ad25b8[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sat Jul 1 13:49:00 2023 +0000

    feat: port Geometry.Manifold.Algebra.SmoothFunctions (#5461)
    
    
    
    Co-authored-by: int-y1 <jason_yuen2007@hotmail.com>
    Co-authored-by: Jason Yuen <jason_yuen2007@hotmail.com>

[33mcommit 3282e2f784a513a709b393aa4817f3df2359c95e[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Sat Jul 1 12:39:03 2023 +0000

    chore: tidy various files (#5628)

[33mcommit 8a45f5b33aa4c9806a4bfe00e720d8b2ca482bca[m
Author: Floris van Doorn <fpvdoorn@gmail.com>
Date:   Sat Jul 1 12:39:02 2023 +0000

    fix: precedence of shadow (#5620)

[33mcommit 074b9ebe78c49b3bd4babff0189950831f8806ec[m
Author: Floris van Doorn <fpvdoorn@gmail.com>
Date:   Sat Jul 1 12:39:01 2023 +0000

    fix: `piObj` / `sigmaObj` precedence (#5618)

[33mcommit 452b50b0765d640a57222bf0ca525819e4169b45[m
Author: Jujian Zhang <jujian.zhang1998@outlook.com>
Date:   Sat Jul 1 12:39:00 2023 +0000

    chore : fix `unusedVariable` linter error in `Archive/Imo` (#5616)
    
    was looking at workflow and noticed that these two files has two unused variable error

[33mcommit 94f414269490599344293bb41228f4e9255b4e9f[m
Author: Adam Topaz <github@adamtopaz.com>
Date:   Sat Jul 1 12:38:59 2023 +0000

    feat: `sheafCompose_map` (#5613)

[33mcommit feef366359b50d6eed6b529050590616f2cc6717[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sat Jul 1 12:38:58 2023 +0000

    feat: defs and lemmas about multilinear maps (#5610)
    
    Forward-port leanprover-community/mathlib#19114

[33mcommit 4a6ae4b962e510fe9a8ced1c116bdfac273fb3e8[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sat Jul 1 12:38:57 2023 +0000

    feat: add `Real.logb_mul_base` (#5609)
    
    Forward-port leanprover-community/mathlib#18979

[33mcommit a7c79b4c8c94cf03b33dfd7a9a1297809406cdb7[m
Author: Peter Nelson <71660771+apnelson1@users.noreply.github.com>
Date:   Sat Jul 1 12:38:56 2023 +0000

    feat: Add finite iff bounded lemmas (#5567)
    
    This PR adds a lemma stating that finiteness is equivalent to boundedness above and below in a locally finite lattice,
    as well as one-way versions for both types of semilattice.

[33mcommit 2fd9a721f4316c2b8187b1c4c3d0d2337de55148[m
Author: Anatole Dedecker <anatolededecker@gmail.com>
Date:   Sat Jul 1 11:38:18 2023 +0000

    feat(Algebra/BigOperators/Finprod): variations on `smul_finsum` (#5601)
    
    The current versions of `smul_finsum` and `finsum_smul` assume `NoZeroSMulDivisors` in order to be a little bit clever about the junk values (that's why there's no finite support hypothesis). While this is reasonable in a lot of cases, there are also cases where we already know that the sum is well-defined, so we don't need this extra assumption.

[33mcommit 6f81a92b405dce8a579a410ebb9faa77fcab9de0[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Sat Jul 1 10:20:13 2023 +0000

    feat: `algebraMap_mem` for `SetLike` instances (#5594)
    
    This adds an `algebraMap_mem` in the root namespace and protects `Subalgebra.algebraMap_mem`. The new declaration holds for terms of `S` where `S` is a `Setlike` satisfying `OneMemClass S A` and `SMulMemClass S R A` and `A` is an `R`-algebra.

[33mcommit db4aced9175e679d5021a1cf05319370ee1a7acf[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sat Jul 1 10:00:00 2023 +0000

    feat: add `Trivialization.tendsto_nhds_iff` (#5489)
    
    This lemma generalizes `FiberBundle.continuousWithinAt_totalSpace`.
    Also add a version with equality of filters.

[33mcommit d9d26c4ff7e421f56246bc8c5e2187cea4f7b2ab[m
Author: Jeremy Tan Jie Rui <reddeloostw@gmail.com>
Date:   Sat Jul 1 06:44:32 2023 +0000

    feat: port AlgebraicGeometry.Morphisms.OpenImmersion (#5638)

[33mcommit b9ff2228b2fc130dabed59b0e582dcd59c24d6bc[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Sat Jul 1 05:38:33 2023 +0000

    feat: port AlgebraicGeometry.Morphisms.UniversallyClosed (#5637)

[33mcommit 727956d29f8122272d85adac75ffb98787d3931f[m
Author: Jon Eugster <eugster.jon@gmail.com>
Date:   Sat Jul 1 05:24:53 2023 +0000

    feat: port Algebra.Category.Semigroup.Basic (#4857)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>
    Co-authored-by: Parcly Taxel <reddeloostw@gmail.com>

[33mcommit 6c3530be47dc300388f97410a1c3ee6b5fb5b3d0[m
Author: Apurva <apurvnakade@gmail.com>
Date:   Sat Jul 1 05:11:17 2023 +0000

    feat: port Analysis.Convex.Cone.Proper (#5607)
    
    The remaining errors are about `coe` and `norm_cast`. I do not understand these well enough in Lean 4.
    Please feel free to push changes.
    
    
    
    Co-authored-by: Parcly Taxel <reddeloostw@gmail.com>

[33mcommit cef7c185cc98725ec8c59948773d5122701ba7a5[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Sat Jul 1 05:00:30 2023 +0000

    feat: port Topology.Homotopy.Product (#3961)
    
    
    
    Co-authored-by: ADedecker <anatolededecker@gmail.com>
    Co-authored-by: Matthew Ballard <matt@mrb.email>
    Co-authored-by: Parcly Taxel <reddeloostw@gmail.com>

[33mcommit e3c8f983c78089b73ce8475bc3eb357c8adb8a03[m
Author: Floris van Doorn <fpvdoorn@gmail.com>
Date:   Fri Jun 30 23:14:55 2023 +0000

    fix: precedences of `‚®Ü‚ãÉ‚ãÇ‚®Ö` (#5614)

[33mcommit 19879d983a2f7ab0762bda1544ba956277b7f130[m
Author: Kevin Buzzard <k.buzzard@imperial.ac.uk>
Date:   Fri Jun 30 18:41:40 2023 +0000

    chore: generalise universes in some theorems (#5626)

[33mcommit e3884c332ae037e8cf23a0b555a45ad43d53280b[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Fri Jun 30 18:41:39 2023 +0000

    feat: port AlgebraicGeometry.FunctionField (#5596)
    
    
    
    Co-authored-by: yuma-mizuno <mizuno.y.aj@gmail.com>
    Co-authored-by: Parcly Taxel <reddeloostw@gmail.com>

[33mcommit f0b3edeab19fd22de36baa563566bc6e9fcaad69[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Fri Jun 30 17:15:42 2023 +0000

    feat: add a file about perpendicular bisector (#5627)

[33mcommit f68e3bd1334e97171c4c43d8cd8f99aa9ae0a7a5[m
Author: Jujian Zhang <jujian.zhang1998@outlook.com>
Date:   Fri Jun 30 17:15:41 2023 +0000

    feat: port AlgebraicGeometry.Morphisms.Basic (#5599)
    
    
    
    Co-authored-by: Jeremy Tan Jie Rui <reddeloostw@gmail.com>

[33mcommit 9063facca35256b181ed01245091bf7602b46fb8[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Fri Jun 30 17:15:39 2023 +0000

    feat: define composition of an `AEEqFun` with a (quasi)measure preserving function (#5217)

[33mcommit 73c58c77c8d8934eb3cdeb6f7bb61f08b448fe9e[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Fri Jun 30 17:15:38 2023 +0000

    feat: lift a continuous map from a connected space to a sigma type (#4325)
    
    Motivated by a theorem in the Brouwer Fixed Point project

[33mcommit a59175a8a4c6f4ac1e26612891465c0518ce04f3[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Fri Jun 30 16:13:45 2023 +0000

    feat: add `Metric.Bounded.vadd` (#5270)
    
    Add `Metric.Bounded.smul` and `Metric.Bounded.vadd`, rename the old `smul` to `smul‚ÇÄ`.

[33mcommit 053628946fda70a81891c4d6a7983c858557c6f6[m
Author: Kevin Buzzard <k.buzzard@imperial.ac.uk>
Date:   Fri Jun 30 14:50:32 2023 +0000

    fix: better universe for Cover (#5625)
    
    It had type `Type (max 0 u v)` before.

[33mcommit e71da81e8a9278f1dd851419dcd766b30feec966[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Fri Jun 30 13:52:45 2023 +0000

    feat: port RingTheory.WittVector.Isocrystal (#5579)
    
    
    
    Co-authored-by: Chris Hughes <chrishughes24@gmail.com>

[33mcommit b342a33cff014bf01c918fe0199362c23566510c[m
Author: Jason Yuen <jason_yuen2007@hotmail.com>
Date:   Fri Jun 30 08:27:43 2023 +0000

    feat: port CategoryTheory.Limits.Constructions.Over.Basic (#5611)

[33mcommit aa77a31896d186e406ee5927f65a10ec4c908946[m
Author: Jason Yuen <jason_yuen2007@hotmail.com>
Date:   Fri Jun 30 07:26:32 2023 +0000

    feat: port Archive.Imo.Imo1988Q6 (#5608)

[33mcommit e9eb901c11fb1925dfc3c03995b5026a177dd26e[m
Author: Scott Morrison <scott@tqft.net>
Date:   Fri Jun 30 06:08:19 2023 +0000

    chore: reorder universes in ConcreteCategory (#5605)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 4d4f0f25d08d3790512250371049b68988a0bfcc[m
Author: Floris van Doorn <fpvdoorn@gmail.com>
Date:   Fri Jun 30 01:46:32 2023 +0000

    fix: change compl precedence (#5586)
    
    
    
    
    
    Co-authored-by: Yury G. Kudryashov <urkud@urkud.name>

[33mcommit 28b67a40539c7542a132ff50fa1a86860854a254[m
Author: Ya√´l Dillies <yael.dillies@gmail.com>
Date:   Fri Jun 30 01:46:31 2023 +0000

    feat: `positivity` extension for `ite` (#2273)
    
    Match https://github.com/leanprover-community/mathlib/pull/17650
    
    
    
    Co-authored-by: David Renshaw <dwrenshaw@gmail.com>

[33mcommit 55e06e7cf8138f32f29a9619a288641f4a4b6e40[m
Author: Floris van Doorn <fpvdoorn@gmail.com>
Date:   Fri Jun 30 01:36:41 2023 +0000

    chore: better VSCode extension recommendations (#5592)
    
    * This PR gets rid of the following pop-up, which is especially confusing for new users:
    ![image](https://github.com/leanprover-community/mathlib4/assets/7376012/74df4731-00e6-4f63-ba33-818cf2040af0)
    * Also remove the setting `search.usePCRE2` which is marked as "deprecated" and "enabled by default"
    
    
    
    Co-authored-by: Alex J Best <alex.j.best@gmail.com>

[33mcommit bd2fff86b317be5014aa7ab4808bcea6ce59fa40[m
Author: Floris van Doorn <fpvdoorn@gmail.com>
Date:   Thu Jun 29 23:57:37 2023 +0000

    fix precedence of `Nat.iterate` (#5589)

[33mcommit 3b028f2d745034ee2a4c1ec7eb8a600c1b399d74[m
Author: Joachim Breitner <mail@joachim-breitner.de>
Date:   Thu Jun 29 22:43:57 2023 +0000

    Data.Nat.Choose.Basic: Register a faster implementation (#3915)
    
    
    
    Co-authored-by: Kyle Miller <kmill31415@gmail.com>

[33mcommit 08133abc475c1dd4545178115345894d9786492f[m
Author: Gabriel Ebner <gebner@gebner.org>
Date:   Thu Jun 29 21:43:07 2023 +0000

    feat: pretty-print `Ordinal.{u}` (#5564)
    
    Adds a `pp_with_univ` command that pretty-prints the universe parameters for the specified constant by default.  Just like `Type u`, we should include the universe parameter in `Ordinal.{u}` since you would otherwise have to guess it (and several lemmas require level inequalities, so it's important to know whether you have an `Ordinal.{u}` or merely an `Ordinal.{max u v}`).
    
    It might be cute to pretty-print `Category.{v}` as well, but that is much more involved since the pretty-printer for constants is hardcoded.

[33mcommit 2693807d37258351df333dfc6dfb11a44638d5a3[m
Author: Jujian Zhang <jujian.zhang1998@outlook.com>
Date:   Thu Jun 29 20:50:54 2023 +0000

    feat: port AlgebraicGeometry.Limits (#5598)

[33mcommit 5d44269356d156d9ad7e195cd5034fe8afec0cd6[m
Author: Floris van Doorn <fpvdoorn@gmail.com>
Date:   Thu Jun 29 20:50:53 2023 +0000

    chore: remove superfluous parentheses around integrals (#5591)

[33mcommit 796627944ef9543575948ba360576cf512ed5e3a[m
Author: Floris van Doorn <fpvdoorn@gmail.com>
Date:   Thu Jun 29 20:50:52 2023 +0000

    fix: precedence of `Bundle.TotalSpace.proj` (#5590)

[33mcommit f60fa5cc67137f03d4f8ba3aa3c8e85dbc9c5e2e[m
Author: Mauricio Collares <mauricio@collares.org>
Date:   Thu Jun 29 20:50:50 2023 +0000

    chore(Analysis/Analytic/Composition): cleanup (#5587)

[33mcommit 983ee563cfa8bec23df6a297a3136717f2ebe4b9[m
Author: Adam Topaz <github@adamtopaz.com>
Date:   Thu Jun 29 20:50:49 2023 +0000

    chore: fix universe parameters in `Condensed`. (#5574)

[33mcommit 04c1c091a9a117a89635216f7535eae18634543f[m
Author: Calvin Lee <pounce@meta.com>
Date:   Thu Jun 29 20:50:48 2023 +0000

    feat: port Topology.Sheaves.Skyscraper (#4751)
    
    
    
    Co-authored-by: Calvin Lee <calvins.lee@utah.edu>
    Co-authored-by: Jujian Zhang <jujian.zhang1998@outlook.com>

[33mcommit 3ec9bf62e2afb024f89e1937d54fa29a0fe33058[m
Author: Scott Morrison <scott@tqft.net>
Date:   Thu Jun 29 19:22:32 2023 +0000

    fix: bug fixes to rw? (#5563)
    
    As reported on [zulip](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/panic.20and.20error.20with.20rw.3F/near/370495531)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit b2f1e713f2fd8be8074ff6d062a5a4ab3d5aa593[m
Author: Jeremy Tan Jie Rui <reddeloostw@gmail.com>
Date:   Thu Jun 29 18:49:56 2023 +0000

    feat: port Archive.Arithcc (#5595)

[33mcommit 80d2e74b021d06193e87207f683e16011d6eff84[m
Author: Jujian Zhang <jujian.zhang1998@outlook.com>
Date:   Thu Jun 29 18:35:51 2023 +0000

    feat: port AlgebraicGeometry.Pullbacks (#5583)
    
    
    
    Co-authored-by: Parcly Taxel <reddeloostw@gmail.com>

[33mcommit eef7daf053a6f39848b90f24e3df226f08df6772[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Thu Jun 29 18:19:23 2023 +0000

    feat: port LinearAlgebra.CliffordAlgebra.Even (#5408)
    
    
    
    Co-authored-by: Jeremy Tan Jie Rui <reddeloostw@gmail.com>
    Co-authored-by: Jason Yuen <jason_yuen2007@hotmail.com>
    Co-authored-by: int-y1 <jason_yuen2007@hotmail.com>
    Co-authored-by: Parcly Taxel <reddeloostw@gmail.com>

[33mcommit 4206dd5c558b44dea0e72e77bfb4444b8d8d027c[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Thu Jun 29 14:30:34 2023 +0000

    feat: port SetTheory.Game.Nim (#5550)
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit 3c46000dcd4ac677f6c9cf0341c675bd50c2b723[m
Author: Jeremy Tan Jie Rui <reddeloostw@gmail.com>
Date:   Thu Jun 29 14:20:05 2023 +0000

    feat: port AlgebraicGeometry.Properties (#5585)

[33mcommit c0cf4ad212526bc179c2ebaec2acf8ce60464ff5[m
Author: Pol'tta / Miyahara K≈ç <pol_tta@outlook.jp>
Date:   Thu Jun 29 13:10:22 2023 +0000

    feat: port number_theory.legendre_symbol.norm_num to Tactic.NormNum.LegendreSymbol (#5548)

[33mcommit 5e744e38d6e15bd793908b89c1d4b2ca019c0f28[m
Author: Jason Yuen <jason_yuen2007@hotmail.com>
Date:   Thu Jun 29 13:10:20 2023 +0000

    feat: port Algebra.Category.FGModuleCat.Limits (#5519)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 82f200da3184c855cd404df09a7bd979c5a4f301[m
Author: Kyle Miller <kmill31415@gmail.com>
Date:   Thu Jun 29 11:49:05 2023 +0000

    fix: have `tauto` use `Lean.Meta.isProp` rather than `Lean.Expr.isProp` (#5565)
    
    `Lean.Expr.isProp` can't handle metavariables but `Lean.Meta.isProp` can.
    
    Bug reported by @negiizhao

[33mcommit b8fe59a813937ea7328ce121d2d92d06d10565cd[m
Author: Kyle Miller <kmill31415@gmail.com>
Date:   Thu Jun 29 10:29:21 2023 +0000

    feat: unexpander for `abs` notation (#5559)
    
    Pretty prints `abs a` as `|a|`. It adds discretionary parentheses in known unparseable cases, like `|(|x|)|` rather than `||x||`. It also uses discretionary parentheses in`|(-x)|` since currently `|-x|` does not parse.

[33mcommit f3b01c55a31e4319a3f74e457ec6cf05107612ab[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Thu Jun 29 10:11:59 2023 +0000

    feat: port Algebra.Homology.DifferentialObject (#5033)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>
    Co-authored-by: Parcly Taxel <reddeloostw@gmail.com>

[33mcommit d73ed56c53ec1cd88a8653dce6990084c325ffa2[m
Author: Jason Yuen <jason_yuen2007@hotmail.com>
Date:   Thu Jun 29 08:26:42 2023 +0000

    feat: port Order.Category.OmegaCompletePartialOrder (#5578)

[33mcommit 584c909a5c066296ad2fd98d4f06d93ad0dd6f20[m
Author: Xavier Roblot <46200072+xroblot@users.noreply.github.com>
Date:   Thu Jun 29 08:26:41 2023 +0000

    feat: port NumberTheory.ZetaFunction (#5556)

[33mcommit 5e6d91029c8d59cda4093512e86fb02986efb22d[m
Author: Anatole Dedecker <anatolededecker@gmail.com>
Date:   Thu Jun 29 08:26:40 2023 +0000

    feat(Analysis/LocallyConvex/WithSeminorms): characterize continuous seminorms (#5501)
    
    This shows that, if the topology of `E` is defined by some family of seminorms `p`, then a seminorm `q` is continuous iff `‚àÉ s : Finset Œπ, ‚àÉ C : ‚Ñù‚â•0, C ‚â† 0 ‚àß q ‚â§ C ‚Ä¢ s.sup p`. Via [Seminorm.continuous_iff_continuous_comp](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Analysis/LocallyConvex/WithSeminorms.html#Seminorm.continuous_iff_continuous_comp) this gives the converse of [Seminorm.continuous_from_bounded](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Analysis/LocallyConvex/WithSeminorms.html#Seminorm.continuous_from_bounded) and hence a characterization of continuous linear maps between such spaces.
    
    To do that, we restate all of the "bound of shell" lemmas in terms of seminorms, which needs changing some imports, but I've checked the current state of the port and this should not cause too much trouble since most of the touched files are already ported so we can changes the imports in mathlib4 too.
    
    The `WithSeminorms` file needs a naming/dot notation refactor at some point, because the naming scheme is neither predictable nor convenient to use, but this PR is already large enough.

[33mcommit 4574002dea569bc9e5a51224c295421905d49b39[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Thu Jun 29 08:26:39 2023 +0000

    feat: add `Filter.eq_or_neBot` (#5230)
    
    Also add `Filter.limsup_bot`, `Filter.liminf_bot`, and golf some proofs using new lemmas.

[33mcommit 3ae1d053919d513028a1e335194bef0125d21617[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Thu Jun 29 08:26:38 2023 +0000

    feat: add `PreErgodic.ae_mem_or_ae_nmem` etc (#5220)
    
    Add versions of some of the `PreErgodic.ae_empty_or_univ` etc lemmas
    in terms of `(‚àÄ·µê x ‚àÇŒº, x ‚àà s) ‚à® (‚àÄ·µê x ‚àÇŒº, x ‚àâ s)` instead of
    a.e. equality of sets.

[33mcommit acd52975b998d494ef0e7bbd68bd3c67dc01d743[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Thu Jun 29 08:26:37 2023 +0000

    feat: add instances for `MeasurableSpace.CountablyGenerated` (#5216)

[33mcommit a5ab9709dc2c23a5465cd47b70656531bbab9c59[m
Author: Jujian Zhang <jujian.zhang1998@outlook.com>
Date:   Thu Jun 29 07:18:10 2023 +0000

    feat: port AlgebraicGeometry.AffineScheme (#5394)
    
    
    
    Co-authored-by: Jeremy Tan Jie Rui <reddeloostw@gmail.com>

[33mcommit b0841bf556236bfab7b1b561a8d2444ac867780a[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Thu Jun 29 07:18:09 2023 +0000

    feat: actions of `DomMulAct` on `A ‚Üí[N] B` and `A ‚Üí+[N] B` (#5378)
    
    Refs #5379

[33mcommit 48395588300b3a5c324ed87ea3e272e60db863b4[m
Author: Jeremy Tan Jie Rui <reddeloostw@gmail.com>
Date:   Thu Jun 29 05:58:58 2023 +0000

    feat: port Archive.Imo.Imo2019Q2 (#5573)

[33mcommit d5ecb6d79ce507372bf4244147592393819546a5[m
Author: Scott Morrison <scott@tqft.net>
Date:   Thu Jun 29 05:58:57 2023 +0000

    feat: add MulEquiv.toMulHom_eq_coe to normalize coercions (#5546)
    
    There will probably be simpNF problems, waiting for CI.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 6ac87310e9a81f10692520043ac0032768fbf122[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Thu Jun 29 05:08:17 2023 +0000

    feat: add lemmas about `AffineSubspace`c (#5570)

[33mcommit a0f98218e69b74963ac46fc302bd22b4ea7dc47b[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Thu Jun 29 05:08:16 2023 +0000

    feat: add lemmas about `Equiv.pointReflection` (#5568)

[33mcommit b811eab1b124073cb7a71163186107f67de356a4[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Thu Jun 29 04:23:24 2023 +0000

    feat: add `ContinuousOn.vsub` (#5569)
    
    Also fix indentation

[33mcommit cac608bc6659964f516c89b78b861c7229658082[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Thu Jun 29 04:23:23 2023 +0000

    feat: port RingTheory.WittVector.FrobeniusFractionField (#5561)

[33mcommit a0da6e7791c2109c44a6d79884b5b3e3458eaf76[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Thu Jun 29 04:23:22 2023 +0000

    feat: port SetTheory.Surreal.Dyadic (#5552)
    
    
    
    Co-authored-by: Parcly Taxel <reddeloostw@gmail.com>

[33mcommit b62dfca8ff4f8de710cef53b30e0e97a2a52d423[m
Author: Yuma Mizuno <mizuno.y.aj@gmail.com>
Date:   Thu Jun 29 04:06:55 2023 +0000

    feat: port AlgebraicGeometry.Gluing (#5446)
    
    
    
    Co-authored-by: Johan Commelin <johan@commelin.net>
    Co-authored-by: Jujian Zhang <jujian.zhang1998@outlook.com>

[33mcommit 976c41ef9f826ff4dd0c126caea5059683d99c9c[m
Author: Kyle Miller <kmill31415@gmail.com>
Date:   Thu Jun 29 02:25:45 2023 +0000

    feat: `extract_lets` tactic  (#3897)
    
    This tactic is for taking `let` bindings in the local context and "intro-ing" these bindings. It is like a `cases` tactic for `let` bindings. It can be used like `extract_lets x y at h` or `extract_lets at h` using `intros`-like identifier lists.  It also supports `extract_lets at *`.

[33mcommit 2232bf044ced47907e6d9f17565c6f6a36f32424[m
Author: Kyle Miller <kmill31415@gmail.com>
Date:   Thu Jun 29 00:57:09 2023 +0000

    feat: add `variable?` command to Mathlib.Tactic.Common (#5566)

[33mcommit ec733a5a9cb18b6ece19c460a463aa6b9126d8b6[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Wed Jun 28 18:22:54 2023 +0000

    feat: port Geometry.Euclidean.MongePoint (#5056)
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>
    Co-authored-by: int-y1 <jason_yuen2007@hotmail.com>

[33mcommit f90c0b2938f970c904463bec9bd7b04f2cb3b2d8[m
Author: Mar√≠a In√©s de Frutos-Fern√°ndez <mariaines.dff@gmail.com>
Date:   Wed Jun 28 18:09:27 2023 +0000

    feat: port ring theory.witt_vector.compare (#5555)

[33mcommit 883250cc2ab5b72d02440c7a33834fefdd6b561f[m
Author: Jeremy Tan Jie Rui <reddeloostw@gmail.com>
Date:   Wed Jun 28 17:51:16 2023 +0000

    feat: port RingTheory.WittVector.DiscreteValuationRing (#5557)

[33mcommit b47e7d28d2260ea281272fb1205cad5c3ca1f780[m
Author: Jeremy Tan Jie Rui <reddeloostw@gmail.com>
Date:   Wed Jun 28 16:07:55 2023 +0000

    feat: port RingTheory.WittVector.MulCoeff (#5554)

[33mcommit e95d03d434f2d309d3390af766ec08df07f230e3[m
Author: Jon Eugster <eugster.jon@gmail.com>
Date:   Wed Jun 28 16:07:54 2023 +0000

    feat: port CategoryTheory.Monad.EquivMon (#5086)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@anu.edu.au>
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>
    Co-authored-by: Parcly Taxel <reddeloostw@gmail.com>

[33mcommit 5526fd890d213c589c281baf46ba5a7aae88a55c[m
Author: Alex Keizer <alex@keizer.dev>
Date:   Wed Jun 28 14:58:10 2023 +0000

    feat: add reverse induction principle for Vector (#5400)
    
    Add a snoc pseudo-constructor, lemmas to reason about snoc, and a reverse induction principle for Vectors.

[33mcommit 449de62605b79773339d799c2b7f164137d75282[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Wed Jun 28 14:11:08 2023 +0000

    feat: port Analysis.Fourier.RiemannLebesgueLemma (#4950)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@anu.edu.au>

[33mcommit 6726709ba49b1b61b96ac349bdbd5ef854cec9f3[m
Author: Jeremy Tan Jie Rui <reddeloostw@gmail.com>
Date:   Wed Jun 28 13:56:35 2023 +0000

    feat: port Analysis.Complex.UpperHalfPlane.Metric (#5544)

[33mcommit 5e1c9d6a81e94771b696a1e53c064ba1d89ffdfe[m
Author: Jeremy Tan Jie Rui <reddeloostw@gmail.com>
Date:   Wed Jun 28 13:42:40 2023 +0000

    feat: port NumberTheory.ModularForms.JacobiTheta.Basic (#5547)

[33mcommit 2d54781c8596fba371a595ba361e9a944877110b[m
Author: Scott Morrison <scott@tqft.net>
Date:   Wed Jun 28 11:45:41 2023 +0000

    chore: remove redundant Coe (R ‚âÉ+* S) (R ‚Üí+* S) (#5545)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit af3e121cdb95605d12b87c95ed6d017ea90fa427[m
Author: Pol'tta / Miyahara K≈ç <pol_tta@outlook.jp>
Date:   Wed Jun 28 11:45:40 2023 +0000

    feat: port NumberTheory.Modular (#5540)

[33mcommit 87536adcbe8f187306a3edfa1d9bb5992b05391f[m
Author: Scott Morrison <scott@tqft.net>
Date:   Wed Jun 28 11:45:39 2023 +0000

    feat: #redundant_imports / #minimize_imports commands (#5441)
    
    `#redundant_imports` lists any imports which are transitively imported already by another import
    
    `#minimize_imports` attempts to construct a minimal set of imports for the current file, by inspecting the constants appaering in declarations. It does not notice dependencies on tactics or notation, so is not always correct.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>
    Co-authored-by: Jeremy Tan Jie Rui <reddeloostw@gmail.com>

[33mcommit 79657c37613b6eb2230e53ab057ac2b7be62b657[m
Author: thorimur <68410468+thorimur@users.noreply.github.com>
Date:   Wed Jun 28 11:45:38 2023 +0000

    fix: `wlog`: don't supply let vars to `mkAppN` (#5362)
    
    `wlog` was erroneously supplying all reverted fvars to `mkAppN`, instead of just supplying the ones which weren't ldecls. This fixes #5348.

[33mcommit 955998cff89b809a2f8053e3eb020371d7659e4d[m
Author: Scott Morrison <scott@tqft.net>
Date:   Wed Jun 28 10:21:34 2023 +0000

    chore: cleanup porting notes about refine_struct (#5542)
    
    Replace some porting notes about `refine_struct` with uses of `refine'`. We only really miss `refine_struct` in situations where we later used `pi_instance_derive_field`.
    
    I also exercised some editorial discretion to remove some porting notes about `refine_struct` when the original usage was (in my opinion) obfuscatory relative to just writing out the fields. (We shouldn't be using alternatives to handle different fields!)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit abaae3b80c3d98afc55730fa60db57d0b3331dca[m
Author: Jeremy Tan Jie Rui <reddeloostw@gmail.com>
Date:   Wed Jun 28 10:21:33 2023 +0000

    feat: port RingTheory.WittVector.Truncated (#5538)

[33mcommit ff61283ec57b4e8d68a2267c8564d68ae1483c0c[m
Author: Jeremy Tan Jie Rui <reddeloostw@gmail.com>
Date:   Wed Jun 28 10:21:32 2023 +0000

    feat: port Analysis.Complex.UpperHalfPlane.FunctionsBoundedAtInfty (#5531)

[33mcommit 3aa8632a1abbbec3cb6653b7068e6bb6751bd349[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Wed Jun 28 10:21:31 2023 +0000

    feat: port SetTheory.Game.Birthday (#5500)
    
    
    
    Co-authored-by: int-y1 <jason_yuen2007@hotmail.com>

[33mcommit 52336fd790f3f75bb047bcce818f4ad42269cbd4[m
Author: Anatole Dedecker <anatolededecker@gmail.com>
Date:   Wed Jun 28 10:21:30 2023 +0000

    feat(Topology/Algebra/Group/Basic): product of compact set and closed set is closed (#5471)
    
    Also adds the version for group actions, and the consequence that if we quotient by a compact subgroup then the quotient map is closed.
    
    I also made some syntax tweaks in some places, mainly making use of our great new implicit functions.

[33mcommit 682b25723673e0ade200ed88e90ae5d8514d0dd9[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Wed Jun 28 10:21:29 2023 +0000

    feat: add lemmas about `Filter`s and `Set.indicator` (#5240)
    
    - Add multiplicative versions of all lemmas in
      `Order.Filter.IndicatorFunction`.
    - Add several new lemmas.

[33mcommit fd35d093f0887cf7c01c81eaa04545e4b18d8007[m
Author: Jeremy Tan Jie Rui <reddeloostw@gmail.com>
Date:   Wed Jun 28 07:29:55 2023 +0000

    feat: port NumberTheory.ModularForms.SlashInvariantForms (#5543)

[33mcommit 208982a6b648d912509362482dac6dc31c815e6e[m
Author: Alex J Best <alex.j.best@gmail.com>
Date:   Wed Jun 28 07:29:54 2023 +0000

    feat: don't re-elaborate terms in set (#5386)
    
    Fix the set tactic to not time out when dealing with slow to elaborate terms and many local hypotheses.
    
    The root cause of this is that the `rewrite [blah] at *` tactic causes blah to be elaborated again and again for each local hypothesis, this is possibly a core issue that should be fixed separately, but in `set` we have the elaborated term already so we can just use it.
    
    We also add some functionality to simply test / demonstrate failures when elaboration takes too long, namely `sleepAtLeastHeartbeats` and a `sleep_heartbeats` tactic.
    
    @urkud was facing some slow running set's in https://github.com/leanprover-community/mathlib4/pull/4912, see https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Timeout.20in.20.60set.20.2E.2E.20with.60/near/367958828 that this issue was minimized from and should fix.
    
    Some other linter failures show up due to changes to the set internals so fix these too.
    
    
    
    Co-authored-by: Jeremy Tan Jie Rui <reddeloostw@gmail.com>

[33mcommit e703ae87cdacf4b5445b4d174d81bf13f423689d[m
Author: Scott Morrison <scott@tqft.net>
Date:   Wed Jun 28 05:50:59 2023 +0000

    chore: better TypeMax instances for limits in Type (#5535)
    
    Preliminary to the full forward port of https://github.com/leanprover-community/mathlib/pull/19153,
    this is a slight generalization along with explanation of the problem with the instances.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 18d8f3dc537d6a50661a0fc40c05d26f3c27c0e5[m
Author: Jeremy Tan Jie Rui <reddeloostw@gmail.com>
Date:   Wed Jun 28 05:20:21 2023 +0000

    feat: port RingTheory.WittVector.Domain (#5533)

[33mcommit e06c6fe3499d7a9ef8dfd9014da6a8f5b556b630[m
Author: Jeremy Tan Jie Rui <reddeloostw@gmail.com>
Date:   Wed Jun 28 05:20:20 2023 +0000

    feat: port NumberTheory.ModularForms.SlashActions (#5532)

[33mcommit 580093d41630ad3e98758eca8ec9561f46772a8d[m
Author: Jeremy Tan Jie Rui <reddeloostw@gmail.com>
Date:   Wed Jun 28 05:06:46 2023 +0000

    feat: port Analysis.Complex.UpperHalfPlane.Topology (#5530)

[33mcommit 1ecea4a93f11da2405de479730f0da6085caa160[m
Author: David Kurniadi Angdinata <dka31@cantab.ac.uk>
Date:   Wed Jun 28 01:50:43 2023 +0000

    feat: port AlgebraicGeometry.EllipticCurve.Weierstrass (#5294)
    
    
    
    Co-authored-by: Xavier-Fran√ßois Roblot <46200072+xroblot@users.noreply.github.com>
    Co-authored-by: Riccardo Brasca <riccardo.brasca@gmail.com>
    Co-authored-by: Chris Hughes <chrishughes24@gmail.com>
    Co-authored-by: Moritz Firsching <firsching@google.com>

[33mcommit d8b628645c6d3800d75da3cc7eda15f0a8bf57be[m
Author: Peter Nelson <71660771+apnelson1@users.noreply.github.com>
Date:   Wed Jun 28 00:29:19 2023 +0000

    feat(Data.Set.Basic/Data.Finset.Basic): rename insert_subset (#5450)
    
    Currently, (for both `Set` and `Finset`) `insert_subset` is an `iff` lemma stating that `insert a s ‚äÜ t` if and only if `a ‚àà t` and `s ‚äÜ t`. For both types, this PR renames this lemma to `insert_subset_iff`, and adds an `insert_subset` lemma that gives the implication just in the reverse direction : namely `theorem insert_subset (ha : a ‚àà t) (hs : s ‚äÜ t) : insert a s ‚äÜ t` .
    
    This both aligns the naming with `union_subset` and `union_subset_iff`, and removes the need for the awkward `insert_subset.mpr ‚ü®_,_‚ü©` idiom. It touches a lot of files (too many to list), but in a trivial way.

[33mcommit 178dc4da0b0a060b6711f2be8a2c6e96391269a8[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Jun 27 21:22:13 2023 +0000

    feat: port Geometry.Manifold.PartitionOfUnity (#5460)

[33mcommit 2f4c17b69a0703b23bb117359b9f6fb494574ecc[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Tue Jun 27 21:00:16 2023 +0000

    feat: port Analysis.Complex.UpperHalfPlane.Basic (#4335)
    
    
    
    Co-authored-by: Jireh Loreaux <loreaujy@gmail.com>
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>
    Co-authored-by: Johan Commelin <johan@commelin.net>

[33mcommit 1bd5182870ab2f5e30235c940d2e3bd7e5790924[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Jun 27 20:47:45 2023 +0000

    feat: add `Filter.EventuallyConst.congr` and `Filter.EventuallyEq.eventuallyConst_iff` (#5433)

[33mcommit 0e5960469390d91e42ed5bacbd596b17bce20cdd[m
Author: thorimur <68410468+thorimur@users.noreply.github.com>
Date:   Tue Jun 27 19:13:28 2023 +0000

    feat: port RingTheory.WittVector.Identities (#5527)
    
    
    
    Co-authored-by: Johan Commelin <johan@commelin.net>

[33mcommit 3f7a2eaf3f327d24dab3f1069464da7b9fdde7b1[m
Author: Fr√©d√©ric Dupuis <dupuisf@iro.umontreal.ca>
Date:   Tue Jun 27 18:31:31 2023 +0000

    feat(MeasureTheory): aesop rules for strong measurability + `measurability?` tactic (#5427)
    
    This PR adds aesop tags to a few lemmas pertaining to strong measurability, allowing to prove e.g. `StronglyMeasurable Real.log` using the `measurability` tactic.
    
    It also implements `measurability?` via `aesop?`.
    
    
    
    Co-authored-by: Fr√©d√©ric Dupuis <31101893+dupuisf@users.noreply.github.com>

[33mcommit 0285b69b1fd0fa0f63eaff47cca933ae80f5810d[m
Author: EmilieUthaiwat <emiliepathum@gmail.com>
Date:   Tue Jun 27 17:19:39 2023 +0000

    feat: port NumberTheory.LegendreSymbol.JacobiSymbol (#5502)

[33mcommit bbbec1acbd5de93ea4567e45104b7da77dd8b96f[m
Author: thorimur <68410468+thorimur@users.noreply.github.com>
Date:   Tue Jun 27 16:36:35 2023 +0000

    feat: port RingTheory.WittVector.InitTail (#5520)
    
    
    
    Co-authored-by: Johan Commelin <johan@commelin.net>
    Co-authored-by: Jeremy Tan Jie Rui <reddeloostw@gmail.com>

[33mcommit 8f691fcc52f7537d65ffd8da2eed1aecc27c707b[m
Author: Xavier Roblot <46200072+xroblot@users.noreply.github.com>
Date:   Tue Jun 27 15:37:13 2023 +0000

    fix:NumberTheory.LegendreSymbol.GaussSum fix porting note (#5525)
    
    Forgot to write a porting note

[33mcommit c6608248a5599a3d57db9bff1255d07df446fb0f[m
Author: maxwell-thum <maxwell.thum2718@gmail.com>
Date:   Tue Jun 27 15:37:12 2023 +0000

    feat: port Logic.Equiv.Array (#1733)
    
    
    
    Co-authored-by: Parcly Taxel <reddeloostw@gmail.com>
    Co-authored-by: thorimur <68410468+thorimur@users.noreply.github.com>

[33mcommit 8a1d3524c87706ec3791df155cb711da4c079a59[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Jun 27 14:42:52 2023 +0000

    fix: precedence for `finprod`/`finsum` (#5524)
    
    * Replace `notation3` lines with the latest versions in `mathport`.
    * Fix `Topology.PartitionOfUnity`.
    * Fix names in `Topology.PartitionOfUnity` (`locally_finite'` -> `locallyFinite'`).
    * Use `FunLike` for `PartitionOfUnity` and `BumpCovering`

[33mcommit c2df547e9b316e3d0a372ce4cba05c36caf02719[m
Author: Xavier Roblot <46200072+xroblot@users.noreply.github.com>
Date:   Tue Jun 27 14:42:50 2023 +0000

    feat: port RingTheory.WittVector.Frobenius (#4887)
    
    
    
    
    
    Co-authored-by: Riccardo Brasca <riccardo.brasca@gmail.com>
    Co-authored-by: Johan Commelin <johan@commelin.net>

[33mcommit 87f75bd0ee05ebb078d6b3d6b8147d9e4ea36c7d[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Jun 27 14:29:23 2023 +0000

    feat: port Geometry.Manifold.Complex (#5498)

[33mcommit 9629646725eb084d87a2494abba746d3793b5f8c[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Tue Jun 27 14:11:29 2023 +0000

    feat: port Analysis.InnerProductSpace.LinearPMap (#5523)
    
    
    
    Co-authored-by: Moritz Doll <moritz.doll@googlemail.com>

[33mcommit cda66a7b98d3dae79699cca22693786dde4c1014[m
Author: Alex Keizer <alex@keizer.dev>
Date:   Tue Jun 27 13:14:00 2023 +0000

    feat: Add simp lemmas for vectors, and a way to index vectors with Nats (#4994)
    
    Co-authored-by Chris Hughes

[33mcommit 31812d3c8fe0c0a1a36f46f923437c616c41e8c7[m
Author: Moritz Doll <moritz.doll@googlemail.com>
Date:   Tue Jun 27 12:11:35 2023 +0000

    forward port 18820 (#5521)

[33mcommit 64ec3a13daf0e4b240e121c31e734b3d987d43a6[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Tue Jun 27 11:58:18 2023 +0000

    feat: port RingTheory.WittVector.Verschiebung (#4897)
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>
    Co-authored-by: Kyle Miller <kmill31415@gmail.com>
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>
    Co-authored-by: Johan Commelin <johan@commelin.net>

[33mcommit b5ebe913f3c6cbfc67d97b5b1b78ff4bacaa9116[m
Author: Thomas Browning <tb65536@uw.edu>
Date:   Tue Jun 27 10:00:37 2023 +0000

    refactor: Golf and generalize `Set.ncard_congr` (#5327)
    
    This PR golfs and generalizes `Set.ncard_congr`.

[33mcommit 1a04fa316ab2d4fe4d3590e5453a3147ceaab891[m[33m ([m[1;31morigin/applicative-is-pfunctor[m[33m)[m
Author: Scott Morrison <scott@tqft.net>
Date:   Tue Jun 27 09:23:00 2023 +0000

    chore: fix slim_check porting headers (#5522)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit a80d5a96c231dd10d0a5b99678b07e9d5f8cd92a[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Jun 27 08:51:07 2023 +0000

    chore: golf proofs in `Analysis.Calculus.TangentCone` (#5493)

[33mcommit a5af4e3c3af3bfc23bce766620aa2d3d95dac7c1[m
Author: Jason Yuen <jason_yuen2007@hotmail.com>
Date:   Tue Jun 27 08:51:06 2023 +0000

    feat: port CategoryTheory.Closed.Ideal (#4951)
    
    
    
    Co-authored-by: Alex J Best <alex.j.best@gmail.com>

[33mcommit bf1157dd1b527df71b535f1f5226a702981ca306[m
Author: Jason Yuen <jason_yuen2007@hotmail.com>
Date:   Tue Jun 27 07:58:42 2023 +0000

    feat: port SetTheory.Game.Impartial (#5517)

[33mcommit 0894eca6edcf6b18b2795475dc26f9a250bc88f0[m
Author: Jason Yuen <jason_yuen2007@hotmail.com>
Date:   Tue Jun 27 07:58:40 2023 +0000

    feat: port SetTheory.Surreal.Basic (#5515)

[33mcommit b04be394522d3c6a564fd0cd8ffe93216c617c85[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Jun 27 07:58:37 2023 +0000

    feat: upgrade a boundaryless `ModelWithCorners` to a `Homeomorph` (#5508)

[33mcommit 3f4cde88f0e027e1b189645b06b90a840327ff80[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Jun 27 07:58:35 2023 +0000

    feat: lemmas about `Homeomorph` and `IsConnected` (#5507)

[33mcommit 739a445770f216dd0ebccc4035a89a50a43062b2[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Jun 27 07:44:17 2023 +0000

    feat: add `LocallyConstant.of_constant_on_connected_clopens` (#5511)

[33mcommit 297f15608d710402d31cb7eb3568df26783496af[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Tue Jun 27 07:44:16 2023 +0000

    feat: add `MDifferentiableOn.mdifferentiableAt` (#5510)

[33mcommit 60345d9272420d64dcce96b087565a362b2c010a[m
Author: Scott Morrison <scott@tqft.net>
Date:   Tue Jun 27 05:44:44 2023 +0000

    chore: add porting headers to slim_check files (#5505)
    
    Just so these get marked off the dashboard. These files have already been ported by hand.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 7ed39c9db5d46f4a9b46c341cb5ac6eb2f41228c[m
Author: Jeremy Tan Jie Rui <reddeloostw@gmail.com>
Date:   Tue Jun 27 05:35:10 2023 +0000

    feat: port Analysis.SpecialFunctions.Gamma.Beta (#5514)

[33mcommit 3cb782eaef201cc947184751c882637c56b02f7e[m
Author: Scott Morrison <scott@tqft.net>
Date:   Tue Jun 27 05:25:11 2023 +0000

    chore: improve instructions in README (#5503)
    
    In particular, I have moved the instructions about using mathlib4 as a dependency out to https://github.com/leanprover-community/mathlib4/wiki/Using-mathlib4-as-a-dependency, as people were not noticing the sectioning commands and frequently calling `lake update` in mathlib4 itself.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit f11fa33c0eed14715d4088aeb6e29e1e3af6b4be[m
Author: David Renshaw <dwrenshaw@gmail.com>
Date:   Tue Jun 27 02:30:00 2023 +0000

    doc: fix arrow direction in comment for PGame.le_trans_aux (#5509)

[33mcommit a38feb832d9038498b98c521b8def028c97d74dc[m
Author: Jireh Loreaux <loreaujy@gmail.com>
Date:   Tue Jun 27 02:29:57 2023 +0000

    feat: add `CompleteSpace` instance for `‚Ñù‚â•0` (#5488)

[33mcommit 3c3631e20f53954a8ef75579cc0f0c12f79211e3[m
Author: Gabriel Ebner <gebner@gebner.org>
Date:   Tue Jun 27 02:29:56 2023 +0000

    feat: generalize `WithBot.wellFounded_lt` (#5425)

[33mcommit 0171e8735db874dca209fc74c867fd57b5bf6d2d[m
Author: Jeremy Tan Jie Rui <reddeloostw@gmail.com>
Date:   Tue Jun 27 01:24:56 2023 +0000

    feat: "port" `Rbmap` and `Rbtree` files (#5504)
    
    Cf. [here](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Mathlib4.20porting.20meeting.20series/near/369848971). Incorporates #5479.
    
    
    
    Co-authored-by: Johan Commelin <johan@commelin.net>

[33mcommit 07ec5c2bf3b27c99d8da3c16496a55a1d366c2e6[m
Author: Eric Rodriguez <ericrboidi@gmail.com>
Date:   Tue Jun 27 01:24:54 2023 +0000

    chore: forward port #18862 (#5497)

[33mcommit 0e36dc3b102889dc3cd0f815e986a10892ee755a[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Tue Jun 27 00:20:56 2023 +0000

    chore: tidy various files (#5482)

[33mcommit 401515fc8bb1bb8ac7707f2a6de52268f2a7aa80[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Jun 26 19:57:07 2023 +0000

    feat: port Geometry.Manifold.Mfderiv (#5454)

[33mcommit 7e6e62cb53f75bfcf583ac9456498787f3f83706[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Jun 26 18:00:41 2023 +0000

    feat: smoothness in a vector bundle (#5494)
    
    Add lemmas about smoothness in a smooth vector bundle. Also rename the old `smoothOn_coordChange` to `smoothOn_coordChangeL`.

[33mcommit 49b574e1918df20fe4dd72956384fab8b9476293[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Mon Jun 26 18:00:40 2023 +0000

    feat: port CategoryTheory.Monoidal.Bimod (#5490)

[33mcommit 9ed8bbf1659d18ad80075db566adf7f1a3677dc3[m
Author: Mario Carneiro <di.gama@gmail.com>
Date:   Mon Jun 26 16:40:58 2023 +0000

    fix: use the same atom state for `abel_nf` subterms (#5403)
    
    As [reported on Zulip](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/abel.20bug.3F/near/368707560).

[33mcommit b7b1bb20875d92ea568fa8541625afe28496205c[m
Author: Jeremy Tan Jie Rui <reddeloostw@gmail.com>
Date:   Mon Jun 26 15:50:15 2023 +0000

    feat: port NumberTheory.LegendreSymbol.GaussEisensteinLemmas (#5492)

[33mcommit 186ec0c677163818348a05d03093ce44c6857730[m
Author: Xavier Roblot <46200072+xroblot@users.noreply.github.com>
Date:   Mon Jun 26 15:15:47 2023 +0000

    feat: port RingTheory.DedekindDomain.SelmerGroup (#5478)

[33mcommit 0b5fe726cdc630f607a62d304222d883f654e1ad[m
Author: Jeremy Tan Jie Rui <reddeloostw@gmail.com>
Date:   Mon Jun 26 14:58:55 2023 +0000

    feat: port NumberTheory.SumTwoSquares (#5487)

[33mcommit 3aedc708f43170adc6c53c94c41f6e0f9ed4a5e2[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Mon Jun 26 14:58:54 2023 +0000

    feat: port Analysis.SpecialFunctions.Gamma.BohrMollerup (#5486)

[33mcommit b956b63103fc8d67355639a30f0f8ab9ef46233c[m
Author: Jeremy Tan Jie Rui <reddeloostw@gmail.com>
Date:   Mon Jun 26 14:58:53 2023 +0000

    feat: port Archive.Imo.Imo2008Q3 (#5484)

[33mcommit 29eff09e4eac0cb233a4e535744821c820bd4720[m
Author: Jason Yuen <jason_yuen2007@hotmail.com>
Date:   Mon Jun 26 14:58:51 2023 +0000

    feat: port Archive.MiuLanguage.DecisionSuf (#5475)

[33mcommit d2f4ea7a89fba4826e1a3e7d795e0d775e992113[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Mon Jun 26 14:46:01 2023 +0000

    feat: port SetTheory.Game.Ordinal (#5480)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit 440cc2bc2e64667959572cc02086f64f64601800[m
Author: Jeremy Tan Jie Rui <reddeloostw@gmail.com>
Date:   Mon Jun 26 14:00:05 2023 +0000

    feat: port NumberTheory.Zsqrtd.QuadraticReciprocity (#5485)

[33mcommit dc08a85ff7e500319a05e0a4140a42bc4864b869[m
Author: Jeremy Tan Jie Rui <reddeloostw@gmail.com>
Date:   Mon Jun 26 13:08:02 2023 +0000

    feat: port NumberTheory.LegendreSymbol.QuadraticReciprocity (#5483)

[33mcommit faea138e5c8f8924502c8b5e185eec120edbb04a[m
Author: Jeremy Tan Jie Rui <reddeloostw@gmail.com>
Date:   Mon Jun 26 12:34:57 2023 +0000

    feat: port NumberTheory.LegendreSymbol.QuadraticChar.GaussSum (#5481)

[33mcommit a9665a0244b3402d0bcb483532f81b754077174d[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Mon Jun 26 12:34:55 2023 +0000

    feat: add `MeasureTheory.inv_smul_ae_eq_self` (#5429)
    
    - Add `MeasureTheory.inv_smul_ae_eq_self` and its additive version.
    - Add `@[to_additive]` to `MeasureTheory.measure_smul_null`.
    
    - Fix the order of implicit arguments and universes in
      `MeasureTheory.vadd_ae_eq_self_of_mem_zmultiples` to match the
      multiplicative version.

[33mcommit 9f3a6c7979b18678f37f4de535d184c201804798[m
Author: Antoine Chambert-Loir <antoine.chambert-loir@u-paris.fr>
Date:   Mon Jun 26 11:36:56 2023 +0000

    feat(SetTheory/Cardinal/Finite): prove lemmas about PartENat.card (#5307)
    
    Prove lemmas to handle PartENat.card
    Inspired from the similar lemmas for Nat.card
    This is a mathlib4 companion to the PR #19198 of mathlib3
    
    
    
    Co-authored-by: Antoine Chambert-Loir <antoine.chambert-loir@math.univ-paris-diderot.fr>

[33mcommit 5775c8521eb0918aff275c9e598ad2c2f187f5de[m
Author: Xavier Roblot <46200072+xroblot@users.noreply.github.com>
Date:   Mon Jun 26 10:09:21 2023 +0000

    feat: port NumberTheory.LegendreSymbol.GaussSum (#5419)
    
    This PR incorporates also the changes to `NumberTheory.LegendreSymbol.MulCharacter` discussed [here](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/coercion.20issue.20in.20NumberTheory.2ELegendreSymbol.2EMulCharacter/near/343943344)
    
    
    
    Co-authored-by: Parcly Taxel <reddeloostw@gmail.com>

[33mcommit 4ab276de9cf469a250730f765fc08d2b7b613870[m
Author: Jeremy Tan Jie Rui <reddeloostw@gmail.com>
Date:   Mon Jun 26 09:59:40 2023 +0000

    feat: port Combinatorics.SimpleGraph.Regularity.Lemma (#5477)

[33mcommit 6f0a97ee1a047eb9b6ef03d5c39ea6ea3a3dd162[m
Author: Jeremy Tan Jie Rui <reddeloostw@gmail.com>
Date:   Mon Jun 26 09:40:00 2023 +0000

    feat: port Combinatorics.SimpleGraph.Regularity.Increment (#5476)

[33mcommit d8a7e7efffd126a7eaa13610cc0d07a93b905a51[m
Author: Jeremy Tan Jie Rui <reddeloostw@gmail.com>
Date:   Mon Jun 26 08:41:43 2023 +0000

    feat: port Combinatorics.SimpleGraph.Regularity.Chunk (#5474)

[33mcommit 8b188ce35bc69d6ea528e06a75e973d8dc7122dc[m
Author: Jason Yuen <jason_yuen2007@hotmail.com>
Date:   Mon Jun 26 06:02:13 2023 +0000

    feat: port Archive.MiuLanguage.DecisionNec (#5472)

[33mcommit 55dfeba10893792f0910321b7ccca18fa838a16f[m
Author: Moritz Firsching <moritz.firsching@gmail.com>
Date:   Mon Jun 26 06:02:12 2023 +0000

    feat: port NumberTheory.Bertrand (#4777)
    
    
    
    Co-authored-by: Moritz Firsching <firsching@google.com>
    Co-authored-by: qawbecrdtey <qawbecrdtey@naver.com>
    Co-authored-by: Antoine Chambert-Loir <antoine.chambert-loir@math.univ-paris-diderot.fr>
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit b4ae7328476e90de5883cde509894874db0cc329[m
Author: David Loeffler <d.loeffler.01@cantab.net>
Date:   Mon Jun 26 05:48:37 2023 +0000

    feat: port Analysis.SpecialFunctions.Gaussian (#5370)
    
    
    
    
    Co-authored-by: Komyyy <pol_tta@outlook.jp>

[33mcommit 1bd4b776558cca4f0d1b42171e60e004177a952c[m
Author: Gabin <gabin1999@hotmail.com>
Date:   Mon Jun 26 05:06:25 2023 +0000

    feat: port SetTheory.Game.Basic (#4311)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@anu.edu.au>
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>
    Co-authored-by: David Renshaw <dwrenshaw@gmail.com>
    Co-authored-by: Parcly Taxel <reddeloostw@gmail.com>
    Co-authored-by: Jeremy Tan Jie Rui <reddeloostw@gmail.com>

[33mcommit 9cb18fde893c938c5fd50b89d00270a693f9c557[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Mon Jun 26 04:42:13 2023 +0000

    feat: port Combinatorics.SimpleGraph.Regularity.Bound (#4409)
    
    
    
    Co-authored-by: Parcly Taxel <reddeloostw@gmail.com>
    Co-authored-by: Kyle Miller <kmill31415@gmail.com>

[33mcommit 37805e221dc76051b9f6475a1e42d23850da1b73[m
Author: Scott Morrison <scott@tqft.net>
Date:   Mon Jun 26 04:12:55 2023 +0000

    feat: port Algebra.Category.FGModule.basic (#4878)
    
    Sets new records for `set_option maxHeartbeats`. :-( I spent too long struggling with this one; if anyone would like to take another look please do.
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@anu.edu.au>
    Co-authored-by: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>

[33mcommit d93a0a4d5d3c5f6e89a1b904d3fc09ac2b743950[m
Author: Jo√´l Riou <joel.riou@universite-paris-saclay.fr>
Date:   Mon Jun 26 01:21:15 2023 +0000

    feat: port Algebra.Category.Mon.Colimits (#5466)

[33mcommit 01e12e77efd91fc5123d98d079b55e61d1630ac3[m
Author: EmilieUthaiwat <emiliepathum@gmail.com>
Date:   Mon Jun 26 01:21:14 2023 +0000

    feat: port LinearAlgebra.ExteriorAlgebra.OfAlternating (#5465)

[33mcommit f6a68c556f547a14e6fb7a9abd7baa3556a22a31[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Mon Jun 26 01:04:47 2023 +0000

    chore: tidy various files (#5469)
    
    
    
    Co-authored-by: Scott Morrison <scott@tqft.net>

[33mcommit 52d95f2b56b6e50a976e92f6391d10b10c64a75b[m
Author: Scott Morrison <scott@tqft.net>
Date:   Sun Jun 25 11:21:15 2023 +0000

    chore: disable relaxedAutoImplicit (#5277)
    
    We disable the "relaxed" auto-implicit feature, so only single character identifiers become eligible as auto-implicits. See discussion on [zulip](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Auto-implicits) and [2](https://leanprover.zulipchat.com/#narrow/stream/270676-lean4/topic/.60autoImplicit.20true.60.20is.20evil).
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>
    Co-authored-by: Scott Morrison <scott.morrison@anu.edu.au>

[33mcommit 99b2305082b8a9bf581c064386301270e3c7ada2[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sun Jun 25 10:23:15 2023 +0000

    feat: port Geometry.Manifold.Algebra.Structures (#5453)
    
    
    
    Co-authored-by: Scott Morrison <scott.morrison@gmail.com>
    Co-authored-by: Jeremy Tan Jie Rui <reddeloostw@gmail.com>

[33mcommit 2ac7bc89cf5e529793ece90b07fb9809f6f20f8a[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Sun Jun 25 09:03:44 2023 +0000

    chore: tidy various files (#5458)

[33mcommit b688e1a71ce2765a94e64c8921483694a1e37a25[m
Author: Jason Yuen <jason_yuen2007@hotmail.com>
Date:   Sun Jun 25 08:53:32 2023 +0000

    feat: port Archive.MiuLanguage.Basic (#5214)

[33mcommit 8bbc2aa81b4ed4c0d6b2d1617fd561a32b1ad071[m
Author: Amelia Livingston <101damnations@github.com>
Date:   Sat Jun 24 21:08:09 2023 +0000

    feat: port RepresentationTheory.GroupCohomology.Resolution (#5391)

[33mcommit 9b2bcfcc2af909b033fb04af3c18d9d13a479f3d[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Sat Jun 24 19:58:34 2023 +0000

    feat: port NumberTheory.Cyclotomic.Gal (#5447)
    
    
    
    Co-authored-by: Riccardo Brasca <riccardo.brasca@gmail.com>

[33mcommit f272aa0a64292d5057a63166a3c9ab8563f77004[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sat Jun 24 19:46:26 2023 +0000

    feat: port Geometry.Manifold.VectorBundle.Tangent (#5448)
    
    
    
    Co-authored-by: Jeremy Tan Jie Rui <reddeloostw@gmail.com>

[33mcommit 2363852a5e56001355175e300e5f631bd3f92b59[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sat Jun 24 19:21:42 2023 +0000

    feat: port Geometry.Manifold.Algebra.LieGroup (#5439)

[33mcommit 21fb5accfd353130d2502ec0679616b67dd42bde[m
Author: Jeremy Tan Jie Rui <reddeloostw@gmail.com>
Date:   Sat Jun 24 19:08:48 2023 +0000

    feat: port Archive.Wiedijk100Theorems.AbelRuffini (#5457)
    
    
    
    Co-authored-by: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>

[33mcommit 68a34664e6943a3162faa1ba0917bcb7c031fc5c[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sat Jun 24 19:08:47 2023 +0000

    feat: port Geometry.Manifold.VectorBundle.Pullback (#5451)

[33mcommit fab65d8067703ef908b41c00e24781e16110f9b7[m
Author: Jeremy Tan Jie Rui <reddeloostw@gmail.com>
Date:   Sat Jun 24 18:53:50 2023 +0000

    feat: port NumberTheory.NumberField.ClassNumber (#5456)

[33mcommit 1c690d81b6de304020bd1fcf89401cecf5e31c3d[m
Author: Jeremy Tan Jie Rui <reddeloostw@gmail.com>
Date:   Sat Jun 24 18:53:48 2023 +0000

    feat: port NumberTheory.ClassNumber.FunctionField (#5455)

[33mcommit ff656fa964fa86d4cc4fc01aa3ea647d2684d3a0[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Sat Jun 24 18:07:48 2023 +0000

    chore: tidy various files (#5449)

[33mcommit 177ae4e978657848ce9bedaa08666b283db131b5[m
Author: Alex Keizer <alex@keizer.dev>
Date:   Sat Jun 24 17:10:12 2023 +0000

    feat: relate List.mapAccumr to List.foldr (#5390)
    
    Add lemmas that rewrite an application of `List.mapAccumr` or `List.mapAccumr_2` into an application of `List.foldr`
    
    
    
    Co-authored-by: Chris Hughes <chrishughes24@gmail.com>

[33mcommit 87438883bf234e93768806091509724bd119e8ba[m
Author: Jason Yuen <jason_yuen2007@hotmail.com>
Date:   Sat Jun 24 15:15:32 2023 +0000

    feat: port Geometry.Manifold.VectorBundle.Basic (#5444)
    
    
    
    Co-authored-by: Yury G. Kudryashov <urkud@urkud.name>

[33mcommit 392ed755e88f3e6fb866fe2f284c3d9d1afb0813[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sat Jun 24 15:15:31 2023 +0000

    feat: port Geometry.Manifold.Algebra.Monoid (#5438)

[33mcommit 0e58ccac9edba9e31310410c3faaff613b948159[m
Author: Genora51 <geno.racklinasher@gmail.com>
Date:   Sat Jun 24 15:15:30 2023 +0000

    feat: port NumberTheory.ClassNumber.Finite (#5337)
    
    
    
    Co-authored-by: Chris Hughes <chrishughes24@gmail.com>
    Co-authored-by: Riccardo Brasca <riccardo.brasca@gmail.com>

[33mcommit 4646748a853a11b352ff2285249e986d5851b780[m
Author: Ruben Van de Velde <65514131+Ruben-VandeVelde@users.noreply.github.com>
Date:   Sat Jun 24 15:03:01 2023 +0000

    feat: port FieldTheory.AbelRuffini (#5424)
    
    
    
    Co-authored-by: Jeremy Tan Jie Rui <reddeloostw@gmail.com>
    Co-authored-by: Riccardo Brasca <riccardo.brasca@gmail.com>
    Co-authored-by: Parcly Taxel <reddeloostw@gmail.com>

[33mcommit 8b9210bad40f1bf19859d02bc0056d93652707fb[m[33m ([m[1;31morigin/JasonKYi/test[m[33m)[m
Author: Eric Wieser <wieser.eric@gmail.com>
Date:   Sat Jun 24 12:17:47 2023 +0000

    feat: port LinearAlgebra.CliffordAlgebra.Fold (#5406)
    
    
    
    Co-authored-by: Jeremy Tan Jie Rui <reddeloostw@gmail.com>

[33mcommit 8b49086de1301427489107420e705fe768fb0291[m
Author: Jason Yuen <jason_yuen2007@hotmail.com>
Date:   Sat Jun 24 09:34:50 2023 +0000

    feat: port LinearAlgebra.CliffordAlgebra.Equivs (#5443)

[33mcommit d254056150acd52729baa87d4e07d7560f95d246[m
Author: Pol'tta / Miyahara K≈ç <pol_tta@outlook.jp>
Date:   Sat Jun 24 09:25:09 2023 +0000

    feat: port Archive.Sensitivity (#5322)

[33mcommit 5f4d5df86b4148a94e9e31daa5736dec25ee4157[m
Author: Jason Yuen <jason_yuen2007@hotmail.com>
Date:   Sat Jun 24 07:45:42 2023 +0000

    feat: port Topology.MetricSpace.Dilation (#5442)

[33mcommit 4df50f9e247d0a34e338a9e26be747931e41f5ae[m
Author: Riccardo Brasca <riccardo.brasca@gmail.com>
Date:   Sat Jun 24 07:10:49 2023 +0000

    feat: port NumberTheory.Cyclotomic.Rat (#5417)

[33mcommit 08fc07cd8ba56396909a84a7b2361cfda8223840[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sat Jun 24 06:25:49 2023 +0000

    feat: add `MeasureTheory.L1.dist_eq_integral_dist` (#5432)

[33mcommit 83bcf1b9e35086c90a7160f225635b233b30c44b[m
Author: Yury G. Kudryashov <urkud@urkud.name>
Date:   Sat Jun 24 05:50:09 2023 +0000

    feat: port Geometry.Manifold.ContMdiffMap (#5436)

[33mcommit